struct $_TypeDescriptor$_extraBytes_16;
struct $_TypeDescriptor$_extraBytes_20;
struct $_TypeDescriptor$_extraBytes_24;
struct $_s__CatchableTypeArray$_extraBytes_16;
struct ?$_hentry@VDeclElement@@;
struct ?$_hentry@VDeclEntity@@;
struct ?$_hentry@VDeclNotation@@;
struct ANON_OBJECT_HEADER;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct ANON_OBJECT_HEADER_V2;
struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__;
struct ARRAY_INFO;
struct AUTO_PROXY_SCRIPT_BUFFER;
struct AddrInstr;
struct AllocHeader;
struct AsyncIAdviseSink;
struct AsyncIAdviseSink2;
struct AsyncIMultiQI;
struct AsyncIPipeByte;
struct AsyncIPipeDouble;
struct AsyncIPipeLong;
struct AsyncIUnknown;
struct AttValueToken;
struct AttrNameVal;
struct Attribute;
struct AutoProxyHelperFunctions;
struct AutoProxyHelperVtbl;
struct BATTERY_REPORTING_SCALE;
struct BIGNUM;
struct BITMAPV4HEADER;
struct BITMAPV5HEADER;
struct BREAK_ON_STATUS_BUFFER;
struct BSMINFO;
struct BS_KEY;
struct BULK_SECURITY_TEST_DATA;
struct BaseContext;
struct BaseTextAppendVisitor::BaseContext;
struct BiasHelper<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,1>;
struct BiasHelper<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1>;
struct BitBlock;
struct BlockAlloc::Header;
struct BoolInstr;
struct BooleanFixup;
struct BrArgInstr;
struct CM_Power_Data_s;
struct CONFIRMSAFETY;
struct COPYFILE2_EXTENDED_PARAMETERS;
struct COPYFILE2_MESSAGE;
struct CORRELATION_VECTOR;
struct CO_MTA_USAGE_COOKIE__;
struct CREATE_USN_JOURNAL_DATA;
struct CachedFeaturePropertyData;
struct CachedUsageData;
struct CachingStream::BitBlock;
struct CharMap;
struct CharMapI;
struct CharMapSurr;
struct CharacterSourceFactory::Encoding2CodePage;
struct Chunk;
struct Class;
struct CloneInfo;
struct CloneStringPtr;
struct CodeStringPtr;
struct ConstString;
struct ContainerState;
struct CookieDecision;
struct CreateNodeTypeNamesInfo;
struct CsFrame;
struct DELETE_USN_JOURNAL_DATA;
struct DISK_SPACE_INFORMATION;
struct DISPATCHINFO;
struct DISPIDTOINDEX;
struct DISPLAYCONFIG_2DREGION;
struct DISPLAYCONFIG_ADAPTER_NAME;
struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO;
struct DISPLAYCONFIG_DEVICE_INFO_HEADER;
struct DISPLAYCONFIG_MODE_INFO;
struct DISPLAYCONFIG_PATH_INFO;
struct DISPLAYCONFIG_PATH_SOURCE_INFO;
struct DISPLAYCONFIG_PATH_TARGET_INFO;
struct DISPLAYCONFIG_RATIONAL;
struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE;
struct DISPLAYCONFIG_SOURCE_DEVICE_NAME;
struct DISPLAYCONFIG_SOURCE_MODE;
struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION;
struct DISPLAYCONFIG_TARGET_BASE_TYPE;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;
struct DISPLAYCONFIG_TARGET_MODE;
struct DISPLAYCONFIG_TARGET_PREFERRED_MODE;
struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO;
struct DLGITEMTEMPLATE;
struct DLGTEMPLATE;
struct DOMNode::DispInfo;
struct DOMXmlSpaceVisitor::XmlSpaceContext;
struct DPI_AWARENESS_CONTEXT__;
struct DTDFactory::ParserCallbacks;
struct DTNAME;
struct DTPARSE;
struct DWebBridgeEvents;
struct DXGI_GAMMA_CONTROL;
struct DXGI_GAMMA_CONTROL_CAPABILITIES;
struct DXGI_JPEG_AC_HUFFMAN_TABLE;
struct DXGI_JPEG_DC_HUFFMAN_TABLE;
struct DXGI_JPEG_QUANTIZATION_TABLE;
struct DXGI_MODE_DESC;
struct DXGI_RATIONAL;
struct DXGI_RGB;
struct DXGI_SAMPLE_DESC;
struct DecimalFormat::StringStruct;
struct DelayLoadInfo;
struct DelayLoadProc;
struct Digest;
struct DispApplicationCache;
struct DispCEventObj;
struct DispCPlugins;
struct DispCPrintManagerTemplatePrinter;
struct DispCanvasGradient;
struct DispCanvasImageData;
struct DispCanvasPattern;
struct DispCanvasRenderingContext2D;
struct DispCanvasTextMetrics;
struct DispDOMBeforeUnloadEvent;
struct DispDOMChildrenCollection;
struct DispDOMCloseEvent;
struct DispDOMCompositionEvent;
struct DispDOMCustomEvent;
struct DispDOMDocumentType;
struct DispDOMDragEvent;
struct DispDOMEvent;
struct DispDOMException;
struct DispDOMFocusEvent;
struct DispDOMKeyboardEvent;
struct DispDOMMSAnimationEvent;
struct DispDOMMSManipulationEvent;
struct DispDOMMSTransitionEvent;
struct DispDOMMessageEvent;
struct DispDOMMouseEvent;
struct DispDOMMouseWheelEvent;
struct DispDOMMutationEvent;
struct DispDOMParser;
struct DispDOMProcessingInstruction;
struct DispDOMProgressEvent;
struct DispDOMSiteModeEvent;
struct DispDOMStorageEvent;
struct DispDOMTextEvent;
struct DispDOMUIEvent;
struct DispDOMWheelEvent;
struct DispEventException;
struct DispHTCAttachBehavior;
struct DispHTCDefaultDispatch;
struct DispHTCDescBehavior;
struct DispHTCEventBehavior;
struct DispHTCMethodBehavior;
struct DispHTCPropertyBehavior;
struct DispHTMLAnchorElement;
struct DispHTMLAppBehavior;
struct DispHTMLAreaElement;
struct DispHTMLAreasCollection;
struct DispHTMLAttributeCollection;
struct DispHTMLAudioElement;
struct DispHTMLBGsound;
struct DispHTMLBRElement;
struct DispHTMLBaseElement;
struct DispHTMLBaseFontElement;
struct DispHTMLBlockElement;
struct DispHTMLBody;
struct DispHTMLButtonElement;
struct DispHTMLCSSImportRule;
struct DispHTMLCSSMediaList;
struct DispHTMLCSSMediaRule;
struct DispHTMLCSSNamespaceRule;
struct DispHTMLCSSRule;
struct DispHTMLCSSStyleDeclaration;
struct DispHTMLCanvasElement;
struct DispHTMLCommentElement;
struct DispHTMLCurrentStyle;
struct DispHTMLDDElement;
struct DispHTMLDListElement;
struct DispHTMLDOMAttribute;
struct DispHTMLDOMImplementation;
struct DispHTMLDOMRange;
struct DispHTMLDOMTextNode;
struct DispHTMLDTElement;
struct DispHTMLDefaults;
struct DispHTMLDivElement;
struct DispHTMLDivPosition;
struct DispHTMLDocument;
struct DispHTMLDocumentCompatibleInfo;
struct DispHTMLDocumentCompatibleInfoCollection;
struct DispHTMLElementCollection;
struct DispHTMLEmbed;
struct DispHTMLFieldSetElement;
struct DispHTMLFontElement;
struct DispHTMLFormElement;
struct DispHTMLFrameBase;
struct DispHTMLFrameElement;
struct DispHTMLFrameSetSite;
struct DispHTMLGenericElement;
struct DispHTMLHRElement;
struct DispHTMLHeadElement;
struct DispHTMLHeaderElement;
struct DispHTMLHistory;
struct DispHTMLHtmlElement;
struct DispHTMLIFrame;
struct DispHTMLImg;
struct DispHTMLInputElement;
struct DispHTMLIsIndexElement;
struct DispHTMLLIElement;
struct DispHTMLLabelElement;
struct DispHTMLLegendElement;
struct DispHTMLLinkElement;
struct DispHTMLListElement;
struct DispHTMLLocation;
struct DispHTMLMSCSSKeyframeRule;
struct DispHTMLMSCSSKeyframesRule;
struct DispHTMLMapElement;
struct DispHTMLMarqueeElement;
struct DispHTMLMediaElement;
struct DispHTMLMediaError;
struct DispHTMLMetaElement;
struct DispHTMLNamespace;
struct DispHTMLNamespaceCollection;
struct DispHTMLNavigator;
struct DispHTMLNextIdElement;
struct DispHTMLNoShowElement;
struct DispHTMLOListElement;
struct DispHTMLObjectElement;
struct DispHTMLOptionElement;
struct DispHTMLParaElement;
struct DispHTMLParamElement;
struct DispHTMLPerformance;
struct DispHTMLPerformanceNavigation;
struct DispHTMLPerformanceTiming;
struct DispHTMLPhraseElement;
struct DispHTMLPopup;
struct DispHTMLProgressElement;
struct DispHTMLRenderStyle;
struct DispHTMLRichtextElement;
struct DispHTMLRuleStyle;
struct DispHTMLScreen;
struct DispHTMLScriptElement;
struct DispHTMLSelectElement;
struct DispHTMLSemanticElement;
struct DispHTMLSourceElement;
struct DispHTMLSpanElement;
struct DispHTMLSpanFlow;
struct DispHTMLStorage;
struct DispHTMLStyle;
struct DispHTMLStyleElement;
struct DispHTMLStyleFontFace;
struct DispHTMLStyleMedia;
struct DispHTMLStyleSheet;
struct DispHTMLStyleSheetPage;
struct DispHTMLStyleSheetPagesCollection;
struct DispHTMLStyleSheetRule;
struct DispHTMLStyleSheetRulesAppliedCollection;
struct DispHTMLStyleSheetRulesCollection;
struct DispHTMLStyleSheetsCollection;
struct DispHTMLTable;
struct DispHTMLTableCaption;
struct DispHTMLTableCell;
struct DispHTMLTableCol;
struct DispHTMLTableRow;
struct DispHTMLTableSection;
struct DispHTMLTextAreaElement;
struct DispHTMLTextElement;
struct DispHTMLTimeRanges;
struct DispHTMLTitleElement;
struct DispHTMLUListElement;
struct DispHTMLUnknownElement;
struct DispHTMLUrnCollection;
struct DispHTMLVideoElement;
struct DispHTMLW3CComputedStyle;
struct DispHTMLWindow2;
struct DispHTMLWindowProxy;
struct DispHTMLWndOptionElement;
struct DispHTMLWndSelectElement;
struct DispHTMLXMLHttpRequest;
struct DispIHTMLInputButtonElement;
struct DispIHTMLInputFileElement;
struct DispIHTMLInputImage;
struct DispIHTMLInputTextElement;
struct DispIHTMLOptionButtonElement;
struct DispInfo;
struct DispNodeIterator;
struct DispRangeException;
struct DispRulesApplied;
struct DispRulesAppliedCollection;
struct DispSVGAElement;
struct DispSVGCircleElement;
struct DispSVGClipPathElement;
struct DispSVGDefsElement;
struct DispSVGDescElement;
struct DispSVGElement;
struct DispSVGElementInstance;
struct DispSVGElementInstanceList;
struct DispSVGEllipseElement;
struct DispSVGException;
struct DispSVGGElement;
struct DispSVGGradientElement;
struct DispSVGImageElement;
struct DispSVGLineElement;
struct DispSVGLinearGradientElement;
struct DispSVGMarkerElement;
struct DispSVGMaskElement;
struct DispSVGMetadataElement;
struct DispSVGPathElement;
struct DispSVGPathSegArcAbs;
struct DispSVGPathSegArcRel;
struct DispSVGPathSegClosePath;
struct DispSVGPathSegCurvetoCubicAbs;
struct DispSVGPathSegCurvetoCubicRel;
struct DispSVGPathSegCurvetoCubicSmoothAbs;
struct DispSVGPathSegCurvetoCubicSmoothRel;
struct DispSVGPathSegCurvetoQuadraticAbs;
struct DispSVGPathSegCurvetoQuadraticRel;
struct DispSVGPathSegCurvetoQuadraticSmoothAbs;
struct DispSVGPathSegCurvetoQuadraticSmoothRel;
struct DispSVGPathSegLinetoAbs;
struct DispSVGPathSegLinetoHorizontalAbs;
struct DispSVGPathSegLinetoHorizontalRel;
struct DispSVGPathSegLinetoRel;
struct DispSVGPathSegLinetoVerticalAbs;
struct DispSVGPathSegLinetoVerticalRel;
struct DispSVGPathSegMovetoAbs;
struct DispSVGPathSegMovetoRel;
struct DispSVGPatternElement;
struct DispSVGPolygonElement;
struct DispSVGPolylineElement;
struct DispSVGRadialGradientElement;
struct DispSVGRectElement;
struct DispSVGSVGElement;
struct DispSVGScriptElement;
struct DispSVGStopElement;
struct DispSVGStyleElement;
struct DispSVGSwitchElement;
struct DispSVGSymbolElement;
struct DispSVGTSpanElement;
struct DispSVGTextContentElement;
struct DispSVGTextElement;
struct DispSVGTextPathElement;
struct DispSVGTextPositioningElement;
struct DispSVGTitleElement;
struct DispSVGUseElement;
struct DispSVGViewElement;
struct DispSVGZoomEvent;
struct DispStaticNodeList;
struct DispTreeWalker;
struct DispWebGeocoordinates;
struct DispWebGeolocation;
struct DispWebGeoposition;
struct DispWebGeopositionError;
struct DispXDomainRequest;
struct DispXMLHttpRequestEventTarget;
struct DispXMLSerializer;
struct Download;
struct Encoding2CodePage;
struct EncodingEntry;
struct Entry;
struct EventRegistrationToken;
struct ExtFuncInstr;
struct FEATURE_ERROR;
struct FEATURE_LOGGED_TRAITS;
struct FEATURE_STATE_CHANGE_SUBSCRIPTION__;
struct FILE_ID_DESCRIPTOR;
struct FIND_BY_SID_DATA;
struct FIND_BY_SID_OUTPUT;
struct FLASHWINFO;
struct FPDOUBLE;
struct FPSINGLE;
struct FilterMatcher::PredExpr;
struct FltrInstr;
struct FltrRangeInstr;
struct FrameInstr;
struct FunctionInfo;
struct FunctionLookup::FunctionInfo;
struct GOPHER_ABSTRACT_ATTRIBUTE_TYPE;
struct GOPHER_ADMIN_ATTRIBUTE_TYPE;
struct GOPHER_ASK_ATTRIBUTE_TYPE;
struct GOPHER_ATTRIBUTE_TYPE;
struct GOPHER_FIND_DATAA;
struct GOPHER_FIND_DATAW;
struct GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE;
struct GOPHER_LOCATION_ATTRIBUTE_TYPE;
struct GOPHER_MOD_DATE_ATTRIBUTE_TYPE;
struct GOPHER_ORGANIZATION_ATTRIBUTE_TYPE;
struct GOPHER_PROVIDER_ATTRIBUTE_TYPE;
struct GOPHER_SCORE_ATTRIBUTE_TYPE;
struct GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE;
struct GOPHER_SITE_ATTRIBUTE_TYPE;
struct GOPHER_TIMEZONE_ATTRIBUTE_TYPE;
struct GOPHER_TTL_ATTRIBUTE_TYPE;
struct GOPHER_UNKNOWN_ATTRIBUTE_TYPE;
struct GOPHER_VERONICA_ATTRIBUTE_TYPE;
struct GOPHER_VERSION_ATTRIBUTE_TYPE;
struct GOPHER_VIEW_ATTRIBUTE_TYPE;
struct GlobalVarInstr;
struct GrowAllocator::AllocHeader;
struct GrowAllocator::Page;
struct HACCEL__;
struct HBITMAP__;
struct HBRUSH__;
struct HCOLORSPACE__;
struct HDC__;
struct HDESK__;
struct HENHMETAFILE__;
struct HFONT__;
struct HGESTUREINFO__;
struct HGLRC__;
struct HHOOK__;
struct HICON__;
struct HIMCC__;
struct HIMC__;
struct HINSTANCE__;
struct HKEY__;
struct HKL__;
struct HLSURF__;
struct HMENU__;
struct HMETAFILE__;
struct HMONITOR__;
struct HPALETTE__;
struct HPEN__;
struct HRAWINPUT__;
struct HRGN__;
struct HRSRC__;
struct HSPRITE__;
struct HSTRING_BUFFER__;
struct HSTRING_HEADER;
struct HSTRING__;
struct HSTR__;
struct HSYNTHETICPOINTERDEVICE__;
struct HTASK__;
struct HTMLAnchorEvents;
struct HTMLAnchorEvents2;
struct HTMLAreaEvents;
struct HTMLAreaEvents2;
struct HTMLButtonElementEvents;
struct HTMLButtonElementEvents2;
struct HTMLControlElementEvents;
struct HTMLControlElementEvents2;
struct HTMLDocumentEvents;
struct HTMLDocumentEvents2;
struct HTMLDocumentEvents3;
struct HTMLDocumentEvents4;
struct HTMLElementEvents;
struct HTMLElementEvents2;
struct HTMLElementEvents3;
struct HTMLElementEvents4;
struct HTMLFormElementEvents;
struct HTMLFormElementEvents2;
struct HTMLFrameSiteEvents;
struct HTMLFrameSiteEvents2;
struct HTMLImgEvents;
struct HTMLImgEvents2;
struct HTMLInputFileElementEvents;
struct HTMLInputFileElementEvents2;
struct HTMLInputImageEvents;
struct HTMLInputImageEvents2;
struct HTMLInputTextElementEvents;
struct HTMLInputTextElementEvents2;
struct HTMLLabelEvents;
struct HTMLLabelEvents2;
struct HTMLLinkElementEvents;
struct HTMLLinkElementEvents2;
struct HTMLMapEvents;
struct HTMLMapEvents2;
struct HTMLMarqueeElementEvents;
struct HTMLMarqueeElementEvents2;
struct HTMLNamespaceEvents;
struct HTMLObjectElementEvents;
struct HTMLObjectElementEvents2;
struct HTMLOptionButtonElementEvents;
struct HTMLOptionButtonElementEvents2;
struct HTMLScriptEvents;
struct HTMLScriptEvents2;
struct HTMLSelectElementEvents;
struct HTMLSelectElementEvents2;
struct HTMLStyleElementEvents;
struct HTMLStyleElementEvents2;
struct HTMLTableEvents;
struct HTMLTableEvents2;
struct HTMLTextContainerEvents;
struct HTMLTextContainerEvents2;
struct HTMLWindowEvents;
struct HTMLWindowEvents2;
struct HTMLWindowEvents3;
struct HTMLXMLHttpRequestEvents;
struct HTOUCHINPUT__;
struct HTTP_VERSION_INFO;
struct HUMPD__;
struct HWINEVENTHOOK__;
struct HWINSTA__;
struct HWND__;
struct Header;
struct IASPError;
struct IAcceptHeaderOptions;
struct IActivationFactory;
struct IActivationFilter;
struct IActiveIME;
struct IActiveIME2;
struct IActiveIMMApp;
struct IActiveIMMIME;
struct IActiveIMMMessagePumpOwner;
struct IActiveIMMRegistrar;
struct IActiveScript;
struct IActiveScriptEncode;
struct IActiveScriptError;
struct IActiveScriptError64;
struct IActiveScriptErrorDebug;
struct IActiveScriptGarbageCollector;
struct IActiveScriptHostEncode;
struct IActiveScriptParse32;
struct IActiveScriptParse64;
struct IActiveScriptParseProcedure2_32;
struct IActiveScriptParseProcedure2_64;
struct IActiveScriptParseProcedure32;
struct IActiveScriptParseProcedure64;
struct IActiveScriptParseProcedureOld32;
struct IActiveScriptParseProcedureOld64;
struct IActiveScriptProperty;
struct IActiveScriptSIPInfo;
struct IActiveScriptSite;
struct IActiveScriptSiteDebug64;
struct IActiveScriptSiteInterruptPoll;
struct IActiveScriptSiteTraceInfo;
struct IActiveScriptSiteUIControl;
struct IActiveScriptSiteWindow;
struct IActiveScriptStats;
struct IActiveScriptStringCompare;
struct IActiveScriptTraceInfo;
struct IAddrExclusionControl;
struct IAddrTrackingControl;
struct IAdviseSink;
struct IAdviseSink2;
struct IAdviseSinkEx;
struct IAgileObject;
struct IAgileReference;
struct IApartmentShutdown;
struct IApplicationDebugger;
struct IApplicationObject;
struct IAsyncInfo;
struct IAsyncManager;
struct IAsyncRpcChannelBuffer;
struct IAsyncSecurityStatus;
struct IAuthenticate;
struct IAuthenticateEx;
struct IBFCacheable;
struct IBindCallbackRedirect;
struct IBindCtx;
struct IBindEventHandler;
struct IBindHost;
struct IBindHttpSecurity;
struct IBindProtocol;
struct IBindStatusCallback;
struct IBindStatusCallbackEx;
struct IBindStatusCallbackEx2;
struct IBindStatusCallbackHolderSink;
struct IBinding;
struct IBindingExInternal;
struct IBlockFormats;
struct IBlockingLock;
struct ICSSFilter;
struct ICSSFilterSite;
struct ICallFactory;
struct ICanHandleException;
struct ICancelMethodCalls;
struct ICanvasGradient;
struct ICanvasImageData;
struct ICanvasPattern;
struct ICanvasPixelArray;
struct ICanvasPixelArrayData;
struct ICanvasRenderingContext2D;
struct ICanvasTextMetrics;
struct ICatInformation;
struct ICatalogFileInfo;
struct ICatalogFileInfo2Priv;
struct ICertContext;
struct ICertStore;
struct IChannelHook;
struct IClassActivator;
struct IClassFactory;
struct IClassFactory2;
struct IClientCaps;
struct IClientSecurity;
struct ICodeInstall;
struct IComThreadingInfo;
struct IConnectionPoint;
struct IConnectionPointContainer;
struct IContinue;
struct IContinueCallback;
struct ICreateErrorInfo;
struct ICreateTypeInfo;
struct ICreateTypeInfo2;
struct ICreateTypeLib;
struct ICreateTypeLib2;
struct ICrossApartmentProtocolHandler;
struct IDOMBeforeUnloadEvent;
struct IDOMCloseEvent;
struct IDOMCompositionEvent;
struct IDOMCustomEvent;
struct IDOMDocumentType;
struct IDOMDragEvent;
struct IDOMEvent;
struct IDOMEventRegistrationCallback;
struct IDOMException;
struct IDOMFocusEvent;
struct IDOMKeyboardEvent;
struct IDOMMSAnimationEvent;
struct IDOMMSManipulationEvent;
struct IDOMMSTransitionEvent;
struct IDOMMessageEvent;
struct IDOMMouseEvent;
struct IDOMMouseWheelEvent;
struct IDOMMutationEvent;
struct IDOMNodeIterator;
struct IDOMParser;
struct IDOMParserFactory;
struct IDOMProcessingInstruction;
struct IDOMProgressEvent;
struct IDOMSiteModeEvent;
struct IDOMStorageEvent;
struct IDOMTextEvent;
struct IDOMTreeWalker;
struct IDOMUIEvent;
struct IDOMWheelEvent;
struct IDOMXmlSerializer;
struct IDOMXmlSerializerFactory;
struct IDataAdviseHolder;
struct IDataFilter;
struct IDataObject;
struct IDebugApplication64;
struct IDebugApplicationNode;
struct IDebugApplicationThread;
struct IDebugAsyncOperation;
struct IDebugAsyncOperationCallBack;
struct IDebugCallbackNotificationHandler;
struct IDebugCodeContext;
struct IDebugDocument;
struct IDebugDocumentContext;
struct IDebugDocumentInfo;
struct IDebugDocumentProvider;
struct IDebugExpression;
struct IDebugExpressionCallBack;
struct IDebugExpressionContext;
struct IDebugProperty;
struct IDebugStackFrame;
struct IDebugStackFrameSniffer;
struct IDebugSyncOperation;
struct IDebugThreadCall32;
struct IDebugThreadCall64;
struct IDeveloperConsoleMessageReceiver;
struct IDirectWriterLock;
struct IDispError;
struct IDispatch;
struct IDispatchEx;
struct IDispatchVtbl;
struct IDisplayPointer;
struct IDisplayServices;
struct IDocumentEvent;
struct IDocumentRange;
struct IDocumentSelector;
struct IDocumentTraversal;
struct IDownloadModeHandleCallback;
struct IDropSource;
struct IDropSourceNotify;
struct IDropTarget;
struct IDummyHICONIncluder;
struct IElementBehavior;
struct IElementBehaviorCategory;
struct IElementBehaviorFactory;
struct IElementBehaviorFocus;
struct IElementBehaviorLayout;
struct IElementBehaviorLayout2;
struct IElementBehaviorRender;
struct IElementBehaviorSite;
struct IElementBehaviorSiteCategory;
struct IElementBehaviorSiteLayout;
struct IElementBehaviorSiteLayout2;
struct IElementBehaviorSiteOM;
struct IElementBehaviorSiteOM2;
struct IElementBehaviorSiteRender;
struct IElementBehaviorSubmit;
struct IElementNamespace;
struct IElementNamespaceFactory;
struct IElementNamespaceFactory2;
struct IElementNamespaceFactoryCallback;
struct IElementNamespaceTable;
struct IElementSegment;
struct IElementSelector;
struct IElementTraversal;
struct IEncodingFilterFactory;
struct IEnterpriseDropTarget;
struct IEnumCATEGORYINFO;
struct IEnumCodePage;
struct IEnumConnectionPoints;
struct IEnumConnections;
struct IEnumDebugApplicationNodes;
struct IEnumDebugCodeContexts;
struct IEnumDebugExpressionContexts;
struct IEnumDebugPropertyInfo;
struct IEnumDebugStackFrames;
struct IEnumFORMATETC;
struct IEnumGUID;
struct IEnumInputContext;
struct IEnumMoniker;
struct IEnumOLEVERB;
struct IEnumOleDocumentViews;
struct IEnumOleUndoUnits;
struct IEnumPrivacyRecords;
struct IEnumRegisterWordA;
struct IEnumRegisterWordW;
struct IEnumRemoteDebugApplicationThreads;
struct IEnumRfc1766;
struct IEnumSTATDATA;
struct IEnumSTATPROPSETSTG;
struct IEnumSTATPROPSTG;
struct IEnumSTATSTG;
struct IEnumScript;
struct IEnumString;
struct IEnumUnknown;
struct IEnumVARIANT;
struct IErrorInfo;
struct IErrorLog;
struct IEventException;
struct IEventTarget;
struct IEventTarget2;
struct IExtensionValidationProxy;
struct IExternalConnection;
struct IFastRundown;
struct IFillLockBytes;
struct IFont;
struct IFontDisp;
struct IFontEventsDisp;
struct IFontNames;
struct IForegroundTransfer;
struct IGetBindHandle;
struct IGetSVGDocument;
struct IGlobalInterfaceTable;
struct IGlobalOptions;
struct IHTCAttachBehavior;
struct IHTCAttachBehavior2;
struct IHTCDefaultDispatch;
struct IHTCDescBehavior;
struct IHTCEventBehavior;
struct IHTCMethodBehavior;
struct IHTCPropertyBehavior;
struct IHTMLAnchorElement;
struct IHTMLAnchorElement2;
struct IHTMLAnchorElement3;
struct IHTMLAppBehavior;
struct IHTMLAppBehavior2;
struct IHTMLAppBehavior3;
struct IHTMLApplicationCache;
struct IHTMLAreaElement;
struct IHTMLAreaElement2;
struct IHTMLAreasCollection;
struct IHTMLAreasCollection2;
struct IHTMLAreasCollection3;
struct IHTMLAreasCollection4;
struct IHTMLAttributeCollection;
struct IHTMLAttributeCollection2;
struct IHTMLAttributeCollection3;
struct IHTMLAttributeCollection4;
struct IHTMLAudioElement;
struct IHTMLAudioElementFactory;
struct IHTMLBGsound;
struct IHTMLBRElement;
struct IHTMLBaseElement;
struct IHTMLBaseElement2;
struct IHTMLBaseFontElement;
struct IHTMLBlockElement;
struct IHTMLBlockElement2;
struct IHTMLBlockElement3;
struct IHTMLBodyElement;
struct IHTMLBodyElement2;
struct IHTMLBodyElement3;
struct IHTMLBodyElement4;
struct IHTMLBodyElement5;
struct IHTMLBookmarkCollection;
struct IHTMLButtonElement;
struct IHTMLButtonElement2;
struct IHTMLCSSImportRule;
struct IHTMLCSSMediaList;
struct IHTMLCSSMediaRule;
struct IHTMLCSSNamespaceRule;
struct IHTMLCSSRule;
struct IHTMLCSSStyleDeclaration;
struct IHTMLCSSStyleDeclaration2;
struct IHTMLCSSStyleDeclaration3;
struct IHTMLCSSStyleDeclaration4;
struct IHTMLCanvasElement;
struct IHTMLCaret;
struct IHTMLChangeLog;
struct IHTMLChangePlayback;
struct IHTMLChangeSink;
struct IHTMLCommentElement;
struct IHTMLCommentElement2;
struct IHTMLCommentElement3;
struct IHTMLComputedStyle;
struct IHTMLControlElement;
struct IHTMLControlRange;
struct IHTMLControlRange2;
struct IHTMLCurrentStyle;
struct IHTMLCurrentStyle2;
struct IHTMLCurrentStyle3;
struct IHTMLCurrentStyle4;
struct IHTMLCurrentStyle5;
struct IHTMLDDElement;
struct IHTMLDListElement;
struct IHTMLDOMAttribute;
struct IHTMLDOMAttribute2;
struct IHTMLDOMAttribute3;
struct IHTMLDOMAttribute4;
struct IHTMLDOMChildrenCollection;
struct IHTMLDOMChildrenCollection2;
struct IHTMLDOMConstructor;
struct IHTMLDOMConstructorCollection;
struct IHTMLDOMImplementation;
struct IHTMLDOMImplementation2;
struct IHTMLDOMNode;
struct IHTMLDOMNode2;
struct IHTMLDOMNode3;
struct IHTMLDOMRange;
struct IHTMLDOMTextNode;
struct IHTMLDOMTextNode2;
struct IHTMLDOMTextNode3;
struct IHTMLDTElement;
struct IHTMLDataTransfer;
struct IHTMLDatabinding;
struct IHTMLDialog;
struct IHTMLDialog2;
struct IHTMLDialog3;
struct IHTMLDivElement;
struct IHTMLDivPosition;
struct IHTMLDocument;
struct IHTMLDocument2;
struct IHTMLDocument3;
struct IHTMLDocument4;
struct IHTMLDocument5;
struct IHTMLDocument6;
struct IHTMLDocument7;
struct IHTMLDocument8;
struct IHTMLDocumentCompatibleInfo;
struct IHTMLDocumentCompatibleInfoCollection;
struct IHTMLEditDesigner;
struct IHTMLEditHost;
struct IHTMLEditHost2;
struct IHTMLEditServices;
struct IHTMLEditServices2;
struct IHTMLElement;
struct IHTMLElement2;
struct IHTMLElement3;
struct IHTMLElement4;
struct IHTMLElement5;
struct IHTMLElement6;
struct IHTMLElement7;
struct IHTMLElementAppliedStyles;
struct IHTMLElementCollection;
struct IHTMLElementCollection2;
struct IHTMLElementCollection3;
struct IHTMLElementCollection4;
struct IHTMLElementDefaults;
struct IHTMLElementRender;
struct IHTMLEmbedElement;
struct IHTMLEmbedElement2;
struct IHTMLEventObj;
struct IHTMLEventObj2;
struct IHTMLEventObj3;
struct IHTMLEventObj4;
struct IHTMLEventObj5;
struct IHTMLEventObj6;
struct IHTMLFieldSetElement;
struct IHTMLFieldSetElement2;
struct IHTMLFiltersCollection;
struct IHTMLFontElement;
struct IHTMLFontNamesCollection;
struct IHTMLFontSizesCollection;
struct IHTMLFormElement;
struct IHTMLFormElement2;
struct IHTMLFormElement3;
struct IHTMLFormElement4;
struct IHTMLFrameBase;
struct IHTMLFrameBase2;
struct IHTMLFrameBase3;
struct IHTMLFrameElement;
struct IHTMLFrameElement2;
struct IHTMLFrameElement3;
struct IHTMLFrameSetElement;
struct IHTMLFrameSetElement2;
struct IHTMLFrameSetElement3;
struct IHTMLFramesCollection2;
struct IHTMLGenericElement;
struct IHTMLHRElement;
struct IHTMLHeadElement;
struct IHTMLHeadElement2;
struct IHTMLHeaderElement;
struct IHTMLHtmlElement;
struct IHTMLIFrameElement;
struct IHTMLIFrameElement2;
struct IHTMLIFrameElement3;
struct IHTMLIPrintCollection;
struct IHTMLImageElementFactory;
struct IHTMLImgElement;
struct IHTMLImgElement2;
struct IHTMLImgElement3;
struct IHTMLImgElement4;
struct IHTMLInputButtonElement;
struct IHTMLInputElement;
struct IHTMLInputElement2;
struct IHTMLInputElement3;
struct IHTMLInputFileElement;
struct IHTMLInputHiddenElement;
struct IHTMLInputImage;
struct IHTMLInputRangeElement;
struct IHTMLInputTextElement;
struct IHTMLInputTextElement2;
struct IHTMLIsIndexElement;
struct IHTMLIsIndexElement2;
struct IHTMLLIElement;
struct IHTMLLabelElement;
struct IHTMLLabelElement2;
struct IHTMLLegendElement;
struct IHTMLLegendElement2;
struct IHTMLLinkElement;
struct IHTMLLinkElement2;
struct IHTMLLinkElement3;
struct IHTMLLinkElement4;
struct IHTMLLinkElement5;
struct IHTMLListElement;
struct IHTMLListElement2;
struct IHTMLLocation;
struct IHTMLMSCSSKeyframeRule;
struct IHTMLMSCSSKeyframesRule;
struct IHTMLMSImgElement;
struct IHTMLMSMediaElement;
struct IHTMLMapElement;
struct IHTMLMarqueeElement;
struct IHTMLMediaElement;
struct IHTMLMediaElement2;
struct IHTMLMediaError;
struct IHTMLMetaElement;
struct IHTMLMetaElement2;
struct IHTMLMetaElement3;
struct IHTMLMimeTypesCollection;
struct IHTMLModelessInit;
struct IHTMLNamespace;
struct IHTMLNamespaceCollection;
struct IHTMLNextIdElement;
struct IHTMLNoShowElement;
struct IHTMLOListElement;
struct IHTMLObjectElement;
struct IHTMLObjectElement2;
struct IHTMLObjectElement3;
struct IHTMLObjectElement4;
struct IHTMLObjectElement5;
struct IHTMLOpsProfile;
struct IHTMLOptionButtonElement;
struct IHTMLOptionElement;
struct IHTMLOptionElement3;
struct IHTMLOptionElement4;
struct IHTMLOptionElementFactory;
struct IHTMLOptionsHolder;
struct IHTMLPaintSite;
struct IHTMLPainter;
struct IHTMLPainterEventInfo;
struct IHTMLPainterOverlay;
struct IHTMLParaElement;
struct IHTMLParamElement;
struct IHTMLParamElement2;
struct IHTMLPerformance;
struct IHTMLPerformanceNavigation;
struct IHTMLPerformanceTiming;
struct IHTMLPhraseElement;
struct IHTMLPhraseElement2;
struct IHTMLPhraseElement3;
struct IHTMLPluginsCollection;
struct IHTMLPopup;
struct IHTMLProgressElement;
struct IHTMLRect;
struct IHTMLRect2;
struct IHTMLRectCollection;
struct IHTMLRenderStyle;
struct IHTMLRuleStyle;
struct IHTMLRuleStyle2;
struct IHTMLRuleStyle3;
struct IHTMLRuleStyle4;
struct IHTMLRuleStyle5;
struct IHTMLRuleStyle6;
struct IHTMLScreen;
struct IHTMLScreen2;
struct IHTMLScreen3;
struct IHTMLScreen4;
struct IHTMLScriptElement;
struct IHTMLScriptElement2;
struct IHTMLScriptElement3;
struct IHTMLScriptElement4;
struct IHTMLSelectElement;
struct IHTMLSelectElement2;
struct IHTMLSelectElement4;
struct IHTMLSelectElement5;
struct IHTMLSelectElement6;
struct IHTMLSelectElementEx;
struct IHTMLSelection;
struct IHTMLSelectionObject;
struct IHTMLSelectionObject2;
struct IHTMLSourceElement;
struct IHTMLSpanElement;
struct IHTMLSpanFlow;
struct IHTMLStorage;
struct IHTMLStorage2;
struct IHTMLStyle;
struct IHTMLStyle2;
struct IHTMLStyle3;
struct IHTMLStyle4;
struct IHTMLStyle5;
struct IHTMLStyle6;
struct IHTMLStyleElement;
struct IHTMLStyleElement2;
struct IHTMLStyleEnabled;
struct IHTMLStyleFontFace;
struct IHTMLStyleFontFace2;
struct IHTMLStyleMedia;
struct IHTMLStyleSheet;
struct IHTMLStyleSheet2;
struct IHTMLStyleSheet3;
struct IHTMLStyleSheet4;
struct IHTMLStyleSheetPage;
struct IHTMLStyleSheetPage2;
struct IHTMLStyleSheetPagesCollection;
struct IHTMLStyleSheetRule;
struct IHTMLStyleSheetRule2;
struct IHTMLStyleSheetRuleApplied;
struct IHTMLStyleSheetRulesAppliedCollection;
struct IHTMLStyleSheetRulesCollection;
struct IHTMLStyleSheetRulesCollection2;
struct IHTMLStyleSheetsCollection;
struct IHTMLStyleSheetsCollection2;
struct IHTMLSubmitData;
struct IHTMLTable;
struct IHTMLTable2;
struct IHTMLTable3;
struct IHTMLTable4;
struct IHTMLTableCaption;
struct IHTMLTableCell;
struct IHTMLTableCell2;
struct IHTMLTableCell3;
struct IHTMLTableCol;
struct IHTMLTableCol2;
struct IHTMLTableCol3;
struct IHTMLTableRow;
struct IHTMLTableRow2;
struct IHTMLTableRow3;
struct IHTMLTableRow4;
struct IHTMLTableRowMetrics;
struct IHTMLTableSection;
struct IHTMLTableSection2;
struct IHTMLTableSection3;
struct IHTMLTableSection4;
struct IHTMLTextAreaElement;
struct IHTMLTextAreaElement2;
struct IHTMLTextContainer;
struct IHTMLTextElement;
struct IHTMLTextRangeMetrics;
struct IHTMLTextRangeMetrics2;
struct IHTMLTimeRanges;
struct IHTMLTimeRanges2;
struct IHTMLTitleElement;
struct IHTMLTxtRange;
struct IHTMLTxtRangeCollection;
struct IHTMLUListElement;
struct IHTMLUniqueName;
struct IHTMLUnknownElement;
struct IHTMLUrnCollection;
struct IHTMLVideoElement;
struct IHTMLWindow2;
struct IHTMLWindow3;
struct IHTMLWindow4;
struct IHTMLWindow5;
struct IHTMLWindow6;
struct IHTMLWindow7;
struct IHTMLWindow8;
struct IHTMLXDomainRequest;
struct IHTMLXDomainRequestFactory;
struct IHTMLXMLHttpRequest;
struct IHTMLXMLHttpRequest2;
struct IHTMLXMLHttpRequestFactory;
struct IHighlightRenderingServices;
struct IHighlightSegment;
struct IHostBehaviorInit;
struct IHtmlDlgSafeHelper;
struct IHttpNegotiate;
struct IHttpNegotiate2;
struct IHttpNegotiate3;
struct IHttpProtocolListener;
struct IHttpSecurity;
struct IICCSVGColor;
struct IIE70DispatchEx;
struct IIE80DispatchEx;
struct IIETldListManager;
struct IIMEServices;
struct IInitializeSpy;
struct IInspectable;
struct IInternalUnknown;
struct IInternet;
struct IInternetBindInfo;
struct IInternetBindInfoEx;
struct IInternetBindInfoInternal;
struct IInternetHostSecurityManager;
struct IInternetPriority;
struct IInternetPriorityInfoInternal;
struct IInternetPriorityInternal;
struct IInternetProtocol;
struct IInternetProtocolEx;
struct IInternetProtocolFileProviderInternal;
struct IInternetProtocolInfo;
struct IInternetProtocolRoot;
struct IInternetProtocolSink;
struct IInternetProtocolSinkStackable;
struct IInternetSameSiteCookieInfo;
struct IInternetSecurityManager;
struct IInternetSecurityManagerEx;
struct IInternetSecurityManagerEx2;
struct IInternetSecurityManagerInternal;
struct IInternetSecurityMgrSite;
struct IInternetSession;
struct IInternetThreadSwitch;
struct IInternetZoneManager;
struct IInternetZoneManagerEx;
struct IInternetZoneManagerEx2;
struct ILanguageExceptionErrorInfo;
struct ILanguageExceptionErrorInfo2;
struct ILanguageExceptionStackBackTrace;
struct ILanguageExceptionTransform;
struct ILayoutStorage;
struct ILineInfo;
struct ILockBytes;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
struct IMAGE_COR20_HEADER;
struct IMLangCodePages;
struct IMLangConvertCharset;
struct IMLangFontLink;
struct IMLangFontLink2;
struct IMLangLineBreakConsole;
struct IMLangString;
struct IMLangStringAStr;
struct IMLangStringBufA;
struct IMLangStringBufW;
struct IMLangStringWStr;
struct IMPORT_OBJECT_HEADER;
struct IMXAttributes;
struct IMXNamespaceManager;
struct IMXNamespacePrefixes;
struct IMXRAttributes;
struct IMXRContentHandler;
struct IMXReaderControl;
struct IMXSchemaDeclHandler;
struct IMXWriter;
struct IMXXMLFilter;
struct IMalloc;
struct IMallocSpy;
struct IMarkupContainer;
struct IMarkupContainer2;
struct IMarkupPointer;
struct IMarkupPointer2;
struct IMarkupServices;
struct IMarkupServices2;
struct IMarkupTextFrags;
struct IMarshal;
struct IMarshal2;
struct IMarshalingStream;
struct IMessageFilter;
struct IMoniker;
struct IMonikerProp;
struct IMultiLanguage;
struct IMultiLanguage2;
struct IMultiLanguage3;
struct IMultiQI;
struct INTERNET_ASYNC_RESULT;
struct INTERNET_AUTH_NOTIFY_DATA;
struct INTERNET_CERTIFICATE_INFO;
struct INTERNET_CONNECTED_INFO;
struct INTERNET_COOKIE2;
struct INTERNET_DIAGNOSTIC_SOCKET_INFO;
struct INTERNET_PER_CONN_OPTIONA;
struct INTERNET_PER_CONN_OPTIONW;
struct INTERNET_PER_CONN_OPTION_LISTA;
struct INTERNET_PER_CONN_OPTION_LISTW;
struct INTERNET_PROXY_INFO;
struct INTERNET_VERSION_INFO;
struct INVOKE_ARG;
struct INVOKE_METHOD;
struct INavigatorDoNotTrack;
struct INavigatorGeolocation;
struct INetworkTransportSettings;
struct INoMarshal;
struct INotificationTransportSync;
struct INotifyInternal;
struct IObjectIdentity;
struct IObjectSafety;
struct IObjectWithSite;
struct IOleAdviseHolder;
struct IOleCache;
struct IOleCache2;
struct IOleCacheControl;
struct IOleClientSite;
struct IOleCommandTarget;
struct IOleContainer;
struct IOleControl;
struct IOleControlSite;
struct IOleDocument;
struct IOleDocumentSite;
struct IOleDocumentView;
struct IOleInPlaceActiveObject;
struct IOleInPlaceFrame;
struct IOleInPlaceObject;
struct IOleInPlaceObjectWindowless;
struct IOleInPlaceSite;
struct IOleInPlaceSiteEx;
struct IOleInPlaceSiteWindowless;
struct IOleInPlaceUIWindow;
struct IOleItemContainer;
struct IOleLink;
struct IOleObject;
struct IOleParentUndoUnit;
struct IOleUndoManager;
struct IOleUndoUnit;
struct IOleWindow;
struct IOmHistory;
struct IOmNavigator;
struct IOplockStorage;
struct IPSFactoryBuffer;
struct IPSFactoryBufferVtbl;
struct IParseDisplayName;
struct IPerPropertyBrowsing;
struct IPermanentInternetSecurityManagerHelper;
struct IPermanentInternetSecurityManagerInternal;
struct IPermanentInternetZonePolicies;
struct IPersist;
struct IPersistFile;
struct IPersistMemory;
struct IPersistMoniker;
struct IPersistPropertyBag;
struct IPersistPropertyBag2;
struct IPersistStorage;
struct IPersistStream;
struct IPersistStreamInit;
struct IPicture;
struct IPicture2;
struct IPictureDisp;
struct IPipeByte;
struct IPipeDouble;
struct IPipeLong;
struct IPointerInactive;
struct IPreBinding;
struct IPreBindingSupport;
struct IPrint;
struct IPrintManagerTemplatePrinter;
struct IPrintManagerTemplatePrinter2;
struct IProcessInitControl;
struct IProcessLock;
struct IProgressNotify;
struct IPropertyBag;
struct IPropertyBag2;
struct IPropertyNotifySink;
struct IPropertyPage;
struct IPropertyPage2;
struct IPropertyPageSite;
struct IPropertySetStorage;
struct IPropertyStorage;
struct IProtectFocus;
struct IProtectedModeMenuServices;
struct IProtocolHandlerValidator;
struct IProvideClassInfo;
struct IProvideClassInfo2;
struct IProvideExpressionContexts;
struct IProvideMultipleClassInfo;
struct IProvideRuntimeContext;
struct IQueryAssociations;
struct IQueryPopupMgr;
struct IQuickActivate;
struct IROTData;
struct IRangeException;
struct IReadCookie;
struct IRecordInfo;
struct IRecordInfoVtbl;
struct IReleaseMarshalBuffers;
struct IRemoteDebugApplication;
struct IRemoteDebugApplicationThread;
struct IRequest;
struct IRequestDictionary;
struct IResponse;
struct IRestrictedErrorInfo;
struct IRootStorage;
struct IRpcChannelBuffer;
struct IRpcChannelBuffer2;
struct IRpcChannelBuffer3;
struct IRpcChannelBufferVtbl;
struct IRpcHelper;
struct IRpcOptions;
struct IRpcProxyBuffer;
struct IRpcProxyBufferVtbl;
struct IRpcStubBuffer;
struct IRpcStubBufferVtbl;
struct IRpcSyntaxNegotiate;
struct IRulesApplied;
struct IRulesAppliedCollection;
struct IRunnableObject;
struct IRunningObjectTable;
struct ISAXAttributes;
struct ISAXContentHandler;
struct ISAXDTDHandler;
struct ISAXDeclHandler;
struct ISAXEntityResolver;
struct ISAXErrorHandler;
struct ISAXLexicalHandler;
struct ISAXLocator;
struct ISAXXMLFilter;
struct ISAXXMLReader;
struct ISVGAElement;
struct ISVGAngle;
struct ISVGAnimatedAngle;
struct ISVGAnimatedBoolean;
struct ISVGAnimatedEnumeration;
struct ISVGAnimatedInteger;
struct ISVGAnimatedLength;
struct ISVGAnimatedLengthList;
struct ISVGAnimatedNumber;
struct ISVGAnimatedNumberList;
struct ISVGAnimatedPathData;
struct ISVGAnimatedPoints;
struct ISVGAnimatedPreserveAspectRatio;
struct ISVGAnimatedRect;
struct ISVGAnimatedString;
struct ISVGAnimatedTransformList;
struct ISVGCircleElement;
struct ISVGClipPathElement;
struct ISVGDefsElement;
struct ISVGDescElement;
struct ISVGDocument;
struct ISVGElement;
struct ISVGElementInstance;
struct ISVGElementInstanceList;
struct ISVGEllipseElement;
struct ISVGException;
struct ISVGExternalResourcesRequired;
struct ISVGFitToViewBox;
struct ISVGGElement;
struct ISVGGradientElement;
struct ISVGImageElement;
struct ISVGLangSpace;
struct ISVGLength;
struct ISVGLengthList;
struct ISVGLineElement;
struct ISVGLinearGradientElement;
struct ISVGLocatable;
struct ISVGMarkerElement;
struct ISVGMaskElement;
struct ISVGMatrix;
struct ISVGMetadataElement;
struct ISVGNumber;
struct ISVGNumberList;
struct ISVGPaint;
struct ISVGPathElement;
struct ISVGPathSeg;
struct ISVGPathSegArcAbs;
struct ISVGPathSegArcRel;
struct ISVGPathSegClosePath;
struct ISVGPathSegCurvetoCubicAbs;
struct ISVGPathSegCurvetoCubicRel;
struct ISVGPathSegCurvetoCubicSmoothAbs;
struct ISVGPathSegCurvetoCubicSmoothRel;
struct ISVGPathSegCurvetoQuadraticAbs;
struct ISVGPathSegCurvetoQuadraticRel;
struct ISVGPathSegCurvetoQuadraticSmoothAbs;
struct ISVGPathSegCurvetoQuadraticSmoothRel;
struct ISVGPathSegLinetoAbs;
struct ISVGPathSegLinetoHorizontalAbs;
struct ISVGPathSegLinetoHorizontalRel;
struct ISVGPathSegLinetoRel;
struct ISVGPathSegLinetoVerticalAbs;
struct ISVGPathSegLinetoVerticalRel;
struct ISVGPathSegList;
struct ISVGPathSegMovetoAbs;
struct ISVGPathSegMovetoRel;
struct ISVGPatternElement;
struct ISVGPoint;
struct ISVGPointList;
struct ISVGPolygonElement;
struct ISVGPolylineElement;
struct ISVGPreserveAspectRatio;
struct ISVGRadialGradientElement;
struct ISVGRect;
struct ISVGRectElement;
struct ISVGSVGElement;
struct ISVGScriptElement;
struct ISVGStopElement;
struct ISVGStringList;
struct ISVGStylable;
struct ISVGStyleElement;
struct ISVGSwitchElement;
struct ISVGSymbolElement;
struct ISVGTSpanElement;
struct ISVGTests;
struct ISVGTextContentElement;
struct ISVGTextElement;
struct ISVGTextPathElement;
struct ISVGTextPositioningElement;
struct ISVGTitleElement;
struct ISVGTransform;
struct ISVGTransformList;
struct ISVGTransformable;
struct ISVGURIReference;
struct ISVGUseElement;
struct ISVGViewElement;
struct ISVGViewSpec;
struct ISVGZoomAndPan;
struct ISVGZoomEvent;
struct ISchema;
struct ISchemaAny;
struct ISchemaAttribute;
struct ISchemaAttributeGroup;
struct ISchemaComplexType;
struct ISchemaElement;
struct ISchemaIdentityConstraint;
struct ISchemaItem;
struct ISchemaItemCollection;
struct ISchemaModelGroup;
struct ISchemaNotation;
struct ISchemaParticle;
struct ISchemaStringCollection;
struct ISchemaType;
struct IScriptEventHandler;
struct IScriptEventHandlerSourceInfo;
struct IScriptingContext;
struct ISecureUrlHost;
struct ISegment;
struct ISegmentList;
struct ISegmentListIterator;
struct ISelectionServices;
struct ISelectionServicesListener;
struct ISequenceNumber;
struct ISequentialStream;
struct IServer;
struct IServerSecurity;
struct IServerXMLHTTPRequest;
struct IServerXMLHTTPRequest2;
struct IServiceProvider;
struct ISessionObject;
struct ISimpleFrameSite;
struct ISoftDistExt;
struct ISpecifyPropertyPages;
struct IStdMarshalInfo;
struct IStorage;
struct IStream;
struct IStreamDataNotificationCallback;
struct IStreamWithDataNotification;
struct IStringList;
struct ISupportErrorInfo;
struct ISurfacePresenter;
struct ISurrogate;
struct ISurrogateService;
struct ISynchronize;
struct ISynchronizeContainer;
struct ISynchronizeEvent;
struct ISynchronizeHandle;
struct ISynchronizeMutex;
struct ITemplatePrinter;
struct ITemplatePrinter2;
struct ITemplatePrinter3;
struct IThumbnailExtractor;
struct ITimeAndNoticeControl;
struct ITrackingProtection;
struct ITransactionInternal;
struct ITridentEventSink;
struct ITypeChangeEvents;
struct ITypeComp;
struct ITypeCompVtbl;
struct ITypeFactory;
struct ITypeInfo;
struct ITypeInfo2;
struct ITypeInfoVtbl;
struct ITypeLib;
struct ITypeLib2;
struct ITypeLibRegistration;
struct ITypeLibRegistrationReader;
struct ITypeLibVtbl;
struct ITypeMarshal;
struct IURLDownloadTask;
struct IURLRequest;
struct IURLRequestSite;
struct IURLStream;
struct IUnknown;
struct IUnknownVtbl;
struct IUri;
struct IUriBuilder;
struct IUriBuilderFactory;
struct IUriContainer;
struct IUrlMon;
struct IUrlRedirectionPolicyManager;
struct IUrlmonBindingInternal;
struct IVBMXNamespaceManager;
struct IVBSAXAttributes;
struct IVBSAXContentHandler;
struct IVBSAXDTDHandler;
struct IVBSAXDeclHandler;
struct IVBSAXEntityResolver;
struct IVBSAXErrorHandler;
struct IVBSAXLexicalHandler;
struct IVBSAXLocator;
struct IVBSAXXMLFilter;
struct IVBSAXXMLReader;
struct IVariantChangeType;
struct IVariantDictionary;
struct IViewObject;
struct IViewObject2;
struct IViewObjectEx;
struct IViewObjectPresentNotify;
struct IViewObjectPresentNotifySite;
struct IViewObjectPresentSite;
struct IViewObjectPrint;
struct IWBScriptControl;
struct IWPCBlockedUrls;
struct IWaitMultiple;
struct IWeakReference;
struct IWeakReferenceSource;
struct IWebBridge;
struct IWebGeocoordinates;
struct IWebGeolocation;
struct IWebGeoposition;
struct IWebGeopositionError;
struct IWebPlatformAsyncHost;
struct IWebPlatformPermanentSecurityManager;
struct IWebPlatformPermanentSecurityManagerInternal;
struct IWebPlatformSecurityManager;
struct IWebPlatformSecurityManagerInternal;
struct IWinHttpRequest;
struct IWinHttpRequestEvents;
struct IWinInetCacheHints;
struct IWinInetCacheHints2;
struct IWinInetFileStream;
struct IWinInetHttpInfo;
struct IWinInetHttpTimeouts;
struct IWinInetInfo;
struct IWindowForBindingUI;
struct IWrappedProtocol;
struct IWriteCookie;
struct IXMLAttribute;
struct IXMLDOMAttribute;
struct IXMLDOMCDATASection;
struct IXMLDOMCharacterData;
struct IXMLDOMComment;
struct IXMLDOMDocument;
struct IXMLDOMDocument2;
struct IXMLDOMDocument3;
struct IXMLDOMDocumentFragment;
struct IXMLDOMDocumentType;
struct IXMLDOMElement;
struct IXMLDOMEntity;
struct IXMLDOMEntityReference;
struct IXMLDOMImplementation;
struct IXMLDOMNamedNodeMap;
struct IXMLDOMNode;
struct IXMLDOMNodeList;
struct IXMLDOMNotation;
struct IXMLDOMParseError;
struct IXMLDOMParseError2;
struct IXMLDOMParseErrorCollection;
struct IXMLDOMProcessingInstruction;
struct IXMLDOMSchemaCollection;
struct IXMLDOMSchemaCollection2;
struct IXMLDOMSelection;
struct IXMLDOMText;
struct IXMLDSOControl;
struct IXMLDocument;
struct IXMLDocument2;
struct IXMLDocumentNotify;
struct IXMLElement;
struct IXMLElement2;
struct IXMLElementCollection;
struct IXMLError;
struct IXMLGenericParse;
struct IXMLHTTPRequest;
struct IXMLHTTPRequest2;
struct IXMLHTTPRequest2Callback;
struct IXMLHTTPRequest3;
struct IXMLHTTPRequest3Callback;
struct IXMLHttpRequest;
struct IXMLHttpRequestEventTarget;
struct IXMLNodeFactory;
struct IXMLNodeSource;
struct IXMLParser;
struct IXMLParser2;
struct IXMLParser3;
struct IXSLProcessor;
struct IXSLTemplate;
struct IXTLRuntime;
struct IXmlHttpRequestInternal;
struct IZoneIdentifier;
struct IZoneIdentifier2;
struct IZoneIdentifierPriv;
struct IZoneIdentifierPriv2;
struct IZoomEvents;
struct ImgDelayDescrV2;
struct ImportInfo;
struct ImportManager::ImportInfo;
struct IncomingCookieState;
struct IndexInfo;
struct IndexManager::IndexInfo;
struct InputInfo;
struct Instruction;
struct IntInstr;
struct IntegerAttrs;
struct InternetCookieHistory;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3;
struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2;
struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION;
struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2;
struct KEY_PID_ARRAY;
struct KeyDefinitions::KeyInfo;
struct KeyInfo;
struct KeyNodeSet::MergeList;
struct KeyStorage::Page;
struct KeywordInfo;
struct LC;
struct LIST_ENTRY32;
struct LIST_ENTRY64;
struct LLStack<ValidationState,16>::Chunk;
struct Local2Instr;
struct LocalInstr;
struct LocalIntInstr;
struct MARK_HANDLE_INFO;
struct MARK_HANDLE_INFO32;
struct MEM_EXTENDED_PARAMETER;
struct MENUITEMTEMPLATE;
struct MENUITEMTEMPLATEHEADER;
struct MFT_ENUM_DATA_V0;
struct MFT_ENUM_DATA_V1;
struct MOVE_FILE_DATA;
struct MOVE_FILE_RECORD_DATA;
struct MY_XML_NODE_INFO;
struct Map;
struct MatchNameLookup::NameCollection;
struct MatchNodeSetMem;
struct MatcherCollection::MatcherPriority;
struct MatcherPriority;
struct MergeList;
struct Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2>;
struct Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2>;
struct Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::CloakedIid<IMarshal>;
struct Microsoft::WRL::DelegateTraits<-1>;
struct Microsoft::WRL::DelegateTraits<1>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,1>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1>;
struct Microsoft::WRL::Details::AreAllNil<Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncActionCompletedHandler::*)(Windows::Foundation::IAsyncAction *,enum ABI::Windows::Foundation::AsyncStatus)>;
struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >::*)(Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> *,enum ABI::Windows::Foundation::AsyncStatus)>;
struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::AsyncOptionsBase;
struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::BoolStruct;
struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::CreatorMap;
struct Microsoft::WRL::Details::Dummy;
struct Microsoft::WRL::Details::EnableIf<1,void *>;
struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct Microsoft::WRL::Details::FactoryCache;
struct Microsoft::WRL::Details::Identity<IUnknown * &>;
struct Microsoft::WRL::Details::ImplementsBase;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1>;
struct Microsoft::WRL::Details::InterfaceListHelper<Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlDocument>;
struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlNode>;
struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlNodeSelector>;
struct Microsoft::WRL::Details::IsSame<IAgileReference,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IAgileReference,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IInspectable,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IInspectable,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IMarshal,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IMarshal,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IUnknown,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IUnknown,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IWeakReference,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IWeakReference,IUnknown>;
struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IInspectable>;
struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IUnknown>;
struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IPropertyValueStatics,IInspectable>;
struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IPropertyValueStatics,IUnknown>;
struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IUriRuntimeClassFactory,IInspectable>;
struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IUriRuntimeClassFactory,IUnknown>;
struct Microsoft::WRL::Details::MarkImplements<IMarshal,0>;
struct Microsoft::WRL::Details::MarkImplements<IWeakReference,0>;
struct Microsoft::WRL::Details::MarkImplements<Microsoft::WRL::CloakedIid<IMarshal>,0>;
struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlDocumentIO,0>;
struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlDocumentIO2,0>;
struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlNodeSerializer,0>;
struct Microsoft::WRL::Details::MarkImplements<Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,0>;
struct Microsoft::WRL::Details::MarkImplements<Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,0>;
struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IActivationFactory,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IAsyncInfo,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::FtmBase,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlDocumentStatics,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlLoadSettings,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlNodeList,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessor,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessor2,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorChangedEventArgs,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncAction,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncActionCompletedHandler,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,0,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,0,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IWeakReferenceSource,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::FtmBase,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlDomImplementation,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlNamedNodeMap,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlNodeList,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,1,0>;
struct Microsoft::WRL::ErrorHelper<0>;
struct Microsoft::WRL::ErrorHelper<16>;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<-1>;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<1>;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<2>;
struct Microsoft::WRL::Implements<IAsyncInfo>;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct Microsoft::WRL::RuntimeClassFlags<13>;
struct Microsoft::WRL::RuntimeClassFlags<1>;
struct Microsoft::WRL::RuntimeClassFlags<2>;
struct Microsoft::WRL::RuntimeClassFlags<3>;
struct Microsoft::WRL::RuntimeClassFlags<4103>;
struct Microsoft::WRL::RuntimeClassFlags<4>;
struct Microsoft::WRL::RuntimeClassFlags<5>;
struct Microsoft::WRL::RuntimeClassFlags<7>;
struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits;
struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits;
struct NCRYPT_ALLOC_PARA;
struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;
struct NCryptKeyName;
struct NCryptProviderName;
struct NDR64_STRING_HEADER_FORMAT;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
struct NDR_POINTER_QUEUE_STATE;
struct NOTIFY_USER_POWER_SETTING;
struct NTFS_EXTENDED_VOLUME_DATA;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
struct NTFS_VOLUME_DATA_BUFFER;
struct NUMBER;
struct NUMPARSE;
struct NameCollection;
struct NameDefInstr;
struct NameDefStringInstr;
struct NameInstr;
struct NameTest;
struct NamespaceMgr::Entry;
struct NamespaceSupport::Map;
struct NavFilterInstr;
struct Node;
struct Node::CloneInfo;
struct Node::_save::__l2::SaveContext;
struct NodeID;
struct NodeLocation;
struct NodeTest;
struct NodeTestInstr;
struct ObjInstr;
struct OutgoingCookieState;
struct POWERBROADCAST_SETTING;
struct POWER_ACTION_POLICY;
struct POWER_STATE_HANDLER;
struct POWER_STATE_NOTIFY_HANDLER;
struct PPM_IDLESTATE_EVENT;
struct PPM_IDLE_ACCOUNTING;
struct PPM_IDLE_ACCOUNTING_EX;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_IDLE_STATE_ACCOUNTING_EX;
struct PPM_IDLE_STATE_BUCKET_EX;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct PPM_PERFSTATE_EVENT;
struct PPM_THERMALCHANGE_EVENT;
struct PPM_THERMAL_POLICY_EVENT;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES;
struct PPM_WMI_IDLE_STATES_EX;
struct PPM_WMI_LEGACY_PERFSTATE;
struct PPM_WMI_PERF_STATE;
struct PPM_WMI_PERF_STATES;
struct PPM_WMI_PERF_STATES_EX;
struct PROCESSOR_IDLESTATE_INFO;
struct PROCESSOR_IDLESTATE_POLICY;
struct PROCESSOR_IDLE_TIMES;
struct PROCESSOR_PERFSTATE_POLICY;
struct PROCESS_PROTECTION_LEVEL_INFORMATION;
struct PROPERTIES;
struct Page;
struct ParseElementContext;
struct ParseElementNContext;
struct ParserCallbacks;
struct PathNode::NodeTest;
struct PendingResultCallback;
struct PosInfo;
struct Position;
struct PredExpr;
struct PropertyHelper::PropertyInfo;
struct PropertyInfo;
struct QITAB;
struct QName;
struct R8Instr;
struct READ_FILE_USN_DATA;
struct READ_USN_JOURNAL_DATA_V0;
struct READ_USN_JOURNAL_DATA_V1;
struct REFS_VOLUME_DATA_BUFFER;
struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER;
struct RETRIEVAL_POINTERS_BUFFER;
struct RETRIEVAL_POINTER_COUNT;
struct RPC_CLIENT_INFORMATION1;
struct RPC_DISPATCH_TABLE;
struct RPC_ENDPOINT_TEMPLATEA;
struct RPC_ENDPOINT_TEMPLATEW;
struct RPC_IF_ID_VECTOR;
struct RPC_IMPORT_CONTEXT_P;
struct RPC_INTERFACE_TEMPLATEA;
struct RPC_INTERFACE_TEMPLATEW;
struct RPC_STATS_VECTOR;
struct RTLWOW64_CROSSPROCESS_WORK_HEAD;
struct RTLWOW64_CROSSPROCESS_WORK_ITEM;
struct RTL_ACE_DATA;
struct ReadSettings;
struct Reader::ParseElementContext;
struct Reader::ParseElementNContext;
struct Registry::ReadSettings;
struct RestrictionFacets;
struct RoVariant::USE_INSTEAD_ReleaseAndGetAddressOf;
struct SAXHandlerInfo;
struct SC_HANDLE__;
struct SChannelHookCallInfo;
struct SERVICE_STATUS_HANDLE__;
struct SERVICE_TRIGGER_CUSTOM_STATE_ID;
struct SET_POWER_SETTING_VALUE;
struct SHA2::Digest;
struct SHELLHOOKINFO;
struct STARTING_LCN_INPUT_BUFFER;
struct STARTING_LCN_INPUT_BUFFER_EX;
struct STARTING_VCN_INPUT_BUFFER;
struct SXPathNode::NodeTest;
struct SYSTEM_BATTERY_STATE;
struct SYSTEM_POWER_CAPABILITIES;
struct SYSTEM_POWER_LEVEL;
struct SchemaDatatype::Map;
struct SchemaDatatype::RestrictionFacets;
struct SchemaDatatype::SchemaDatatypeMap;
struct SchemaDatatypeMap;
struct SizeInstr;
struct SortKey;
struct SortNodeSet::SortKey;
struct StaPrepareContext;
struct StateEntry;
struct StateInfo;
struct StaticUnknown;
struct StringInstr;
struct StringPtr;
struct StringRef;
struct StringStruct;
struct StringTable::Entry;
struct Subscription;
struct TLSDATA;
struct TRANSPORT_SETTING_ID;
struct TernaryNode;
struct TernaryTreeRO::TernaryNode;
struct TextContext;
struct TextVisitor::TextContext;
struct TranslateCharsBase::CharMap;
struct TranslateCharsBase::CharMapSurr;
struct TypeNameSize;
struct UDATE;
struct URLStream::ConstString;
struct URLStream::OpenPreloadResource::__l2::ResourceMapEntry;
struct URL_COMPONENTSA;
struct URL_COMPONENTSW;
struct USE_INSTEAD_ReleaseAndGetAddressOf;
struct USN_JOURNAL_DATA_V0;
struct USN_JOURNAL_DATA_V1;
struct USN_JOURNAL_DATA_V2;
struct USN_RANGE_TRACK_OUTPUT;
struct USN_RECORD_COMMON_HEADER;
struct USN_RECORD_EXTENT;
struct USN_RECORD_V2;
struct USN_RECORD_V3;
struct USN_RECORD_V4;
struct USN_TRACK_MODIFIED_RANGES;
struct VOLUME_BITMAP_BUFFER;
struct ValidationState;
struct WIN32_MEMORY_REGION_INFORMATION;
struct WINHTTP51::URL_COMPONENTS;
struct WhitespaceRules::NameTest;
struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs;
struct Windows::ApplicationModel::Background::IBackgroundCondition;
struct Windows::ApplicationModel::Background::IBackgroundTask;
struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder;
struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder2;
struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder3;
struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder4;
struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler;
struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs;
struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler;
struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral;
struct Windows::ApplicationModel::Background::IBackgroundTaskInstance;
struct Windows::ApplicationModel::Background::IBackgroundTaskInstance2;
struct Windows::ApplicationModel::Background::IBackgroundTaskInstance3;
struct Windows::ApplicationModel::Background::IBackgroundTaskInstance4;
struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs;
struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration2;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration3;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroupFactory;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics2;
struct Windows::ApplicationModel::Background::IBackgroundTaskYieldAnyResult;
struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable;
struct Windows::ApplicationModel::Background::IBackgroundTrigger;
struct Windows::ApplicationModel::Background::IBackgroundWorkCostStatics;
struct Windows::ApplicationModel::Background::IStorageLibraryChangeTrackerTriggerFactory;
struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTrigger;
struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTriggerStatics;
struct Windows::ApplicationModel::DataTransfer::ISharedStorageAccessManagerStatics;
struct Windows::Data::Text::ISemanticTextQuery;
struct Windows::Data::Text::ISemanticTextQueryFactory;
struct Windows::Data::Text::TextSegment;
struct Windows::Data::Xml::Dom::IDtdEntity;
struct Windows::Data::Xml::Dom::IDtdNotation;
struct Windows::Data::Xml::Dom::IXmlAttribute;
struct Windows::Data::Xml::Dom::IXmlCDataSection;
struct Windows::Data::Xml::Dom::IXmlCharacterData;
struct Windows::Data::Xml::Dom::IXmlComment;
struct Windows::Data::Xml::Dom::IXmlDocument;
struct Windows::Data::Xml::Dom::IXmlDocumentFragment;
struct Windows::Data::Xml::Dom::IXmlDocumentIO;
struct Windows::Data::Xml::Dom::IXmlDocumentIO2;
struct Windows::Data::Xml::Dom::IXmlDocumentStatics;
struct Windows::Data::Xml::Dom::IXmlDocumentType;
struct Windows::Data::Xml::Dom::IXmlDomImplementation;
struct Windows::Data::Xml::Dom::IXmlElement;
struct Windows::Data::Xml::Dom::IXmlEntityReference;
struct Windows::Data::Xml::Dom::IXmlLoadSettings;
struct Windows::Data::Xml::Dom::IXmlNamedNodeMap;
struct Windows::Data::Xml::Dom::IXmlNode;
struct Windows::Data::Xml::Dom::IXmlNodeList;
struct Windows::Data::Xml::Dom::IXmlNodeSelector;
struct Windows::Data::Xml::Dom::IXmlNodeSerializer;
struct Windows::Data::Xml::Dom::IXmlProcessingInstruction;
struct Windows::Data::Xml::Dom::IXmlText;
struct Windows::Data::Xml::Xsl::IXsltProcessor;
struct Windows::Data::Xml::Xsl::IXsltProcessor2;
struct Windows::Data::Xml::Xsl::IXsltProcessorFactory;
struct Windows::Foundation::Collections::Detail::enable_if<0,void *>;
struct Windows::Foundation::Collections::Detail::enable_if<1,void *>;
struct Windows::Foundation::Collections::IIterable<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterable<IInspectable *>;
struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IIterable<Windows::System::User *>;
struct Windows::Foundation::Collections::IIterable<_GUID>;
struct Windows::Foundation::Collections::IIterable<__int64>;
struct Windows::Foundation::Collections::IIterable<bool>;
struct Windows::Foundation::Collections::IIterable<double>;
struct Windows::Foundation::Collections::IIterable<float>;
struct Windows::Foundation::Collections::IIterable<int>;
struct Windows::Foundation::Collections::IIterable<short>;
struct Windows::Foundation::Collections::IIterable<unsigned __int64>;
struct Windows::Foundation::Collections::IIterable<unsigned char>;
struct Windows::Foundation::Collections::IIterable<unsigned int>;
struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterable_impl<IInspectable *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IIterable_impl<_GUID>;
struct Windows::Foundation::Collections::IIterable_impl<__int64>;
struct Windows::Foundation::Collections::IIterable_impl<double>;
struct Windows::Foundation::Collections::IIterable_impl<float>;
struct Windows::Foundation::Collections::IIterable_impl<int>;
struct Windows::Foundation::Collections::IIterable_impl<short>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned char>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned int>;
struct Windows::Foundation::Collections::IIterator<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterator<IInspectable *>;
struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IIterator<Windows::System::User *>;
struct Windows::Foundation::Collections::IIterator<_GUID>;
struct Windows::Foundation::Collections::IIterator<__int64>;
struct Windows::Foundation::Collections::IIterator<bool>;
struct Windows::Foundation::Collections::IIterator<double>;
struct Windows::Foundation::Collections::IIterator<float>;
struct Windows::Foundation::Collections::IIterator<int>;
struct Windows::Foundation::Collections::IIterator<short>;
struct Windows::Foundation::Collections::IIterator<unsigned __int64>;
struct Windows::Foundation::Collections::IIterator<unsigned char>;
struct Windows::Foundation::Collections::IIterator<unsigned int>;
struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
struct Windows::Foundation::Collections::IIterator_impl<_GUID,1>;
struct Windows::Foundation::Collections::IIterator_impl<__int64,1>;
struct Windows::Foundation::Collections::IIterator_impl<double,1>;
struct Windows::Foundation::Collections::IIterator_impl<float,1>;
struct Windows::Foundation::Collections::IIterator_impl<int,1>;
struct Windows::Foundation::Collections::IIterator_impl<short,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1>;
struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,double>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,float>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMap<_GUID,bool>;
struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<__int64,__int64>;
struct Windows::Foundation::Collections::IMap<__int64,double>;
struct Windows::Foundation::Collections::IMap<__int64,float>;
struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID>;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>;
struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IMapView<_GUID,bool>;
struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<__int64,__int64>;
struct Windows::Foundation::Collections::IMapView<__int64,double>;
struct Windows::Foundation::Collections::IMapView<__int64,float>;
struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *>;
struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,double>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,float>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IMap_impl<__int64,double>;
struct Windows::Foundation::Collections::IMap_impl<__int64,float>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableVector<IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::IObservableVector<float>;
struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Collections::IObservableVector_impl<float>;
struct Windows::Foundation::Collections::IPropertySet;
struct Windows::Foundation::Collections::IVector<HSTRING__ *>;
struct Windows::Foundation::Collections::IVector<IInspectable *>;
struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IVector<Windows::System::User *>;
struct Windows::Foundation::Collections::IVector<_GUID>;
struct Windows::Foundation::Collections::IVector<__int64>;
struct Windows::Foundation::Collections::IVector<bool>;
struct Windows::Foundation::Collections::IVector<double>;
struct Windows::Foundation::Collections::IVector<float>;
struct Windows::Foundation::Collections::IVector<int>;
struct Windows::Foundation::Collections::IVector<short>;
struct Windows::Foundation::Collections::IVector<unsigned __int64>;
struct Windows::Foundation::Collections::IVector<unsigned char>;
struct Windows::Foundation::Collections::IVector<unsigned int>;
struct Windows::Foundation::Collections::IVectorChangedEventArgs;
struct Windows::Foundation::Collections::IVectorView<HSTRING__ *>;
struct Windows::Foundation::Collections::IVectorView<IInspectable *>;
struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IVectorView<Windows::System::User *>;
struct Windows::Foundation::Collections::IVectorView<_GUID>;
struct Windows::Foundation::Collections::IVectorView<__int64>;
struct Windows::Foundation::Collections::IVectorView<bool>;
struct Windows::Foundation::Collections::IVectorView<double>;
struct Windows::Foundation::Collections::IVectorView<float>;
struct Windows::Foundation::Collections::IVectorView<int>;
struct Windows::Foundation::Collections::IVectorView<short>;
struct Windows::Foundation::Collections::IVectorView<unsigned __int64>;
struct Windows::Foundation::Collections::IVectorView<unsigned char>;
struct Windows::Foundation::Collections::IVectorView<unsigned int>;
struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1>;
struct Windows::Foundation::Collections::IVectorView_impl<__int64,1>;
struct Windows::Foundation::Collections::IVectorView_impl<double,1>;
struct Windows::Foundation::Collections::IVectorView_impl<float,1>;
struct Windows::Foundation::Collections::IVectorView_impl<int,1>;
struct Windows::Foundation::Collections::IVectorView_impl<short,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>;
struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
struct Windows::Foundation::Collections::IVector_impl<_GUID,1>;
struct Windows::Foundation::Collections::IVector_impl<__int64,1>;
struct Windows::Foundation::Collections::IVector_impl<double,1>;
struct Windows::Foundation::Collections::IVector_impl<float,1>;
struct Windows::Foundation::Collections::IVector_impl<int,1>;
struct Windows::Foundation::Collections::IVector_impl<short,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned int,1>;
struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::Internal::NoVersionTag;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<float>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>;
struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *>;
struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::DateTime>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IUriRuntimeClass *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Size>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibrary *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibraryChange *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::System::IUser *>;
struct Windows::Foundation::Collections::is_foundation_struct<_GUID>;
struct Windows::Foundation::Collections::is_foundation_struct<__int64>;
struct Windows::Foundation::Collections::is_foundation_struct<double>;
struct Windows::Foundation::Collections::is_foundation_struct<float>;
struct Windows::Foundation::Collections::is_foundation_struct<int>;
struct Windows::Foundation::Collections::is_foundation_struct<short>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned char>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned int>;
struct Windows::Foundation::Collections::is_pointer<HSTRING__ *>;
struct Windows::Foundation::Collections::is_pointer<IInspectable *>;
struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::is_pointer<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IUriRuntimeClass *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibrary *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibraryChange *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::is_pointer<Windows::System::IUser *>;
struct Windows::Foundation::Collections::is_pointer<_GUID>;
struct Windows::Foundation::Collections::is_pointer<__int64>;
struct Windows::Foundation::Collections::is_pointer<double>;
struct Windows::Foundation::Collections::is_pointer<float>;
struct Windows::Foundation::Collections::is_pointer<int>;
struct Windows::Foundation::Collections::is_pointer<short>;
struct Windows::Foundation::Collections::is_pointer<unsigned __int64>;
struct Windows::Foundation::Collections::is_pointer<unsigned char>;
struct Windows::Foundation::Collections::is_pointer<unsigned int>;
struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *>;
struct Windows::Foundation::Collections::supports_cleanup<IInspectable *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::supports_cleanup<_GUID>;
struct Windows::Foundation::Collections::supports_cleanup<__int64>;
struct Windows::Foundation::Collections::supports_cleanup<double>;
struct Windows::Foundation::Collections::supports_cleanup<float>;
struct Windows::Foundation::Collections::supports_cleanup<int>;
struct Windows::Foundation::Collections::supports_cleanup<short>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned char>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned int>;
struct Windows::Foundation::DateTime;
struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics;
struct Windows::Foundation::Diagnostics::IErrorReportingSettings;
struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs;
struct Windows::Foundation::IAsyncAction;
struct Windows::Foundation::IAsyncActionCompletedHandler;
struct Windows::Foundation::IAsyncActionProgressHandler<double>;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<double>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgress<double>;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<double>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>;
struct Windows::Foundation::IAsyncOperation<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation<IInspectable *>;
struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperation<Windows::System::User *>;
struct Windows::Foundation::IAsyncOperation<_GUID>;
struct Windows::Foundation::IAsyncOperation<__int64>;
struct Windows::Foundation::IAsyncOperation<bool>;
struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::IAsyncOperation<int>;
struct Windows::Foundation::IAsyncOperation<unsigned __int64>;
struct Windows::Foundation::IAsyncOperation<unsigned int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<bool>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<int,int>;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation_impl<IInspectable *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::IAsyncOperation_impl<_GUID>;
struct Windows::Foundation::IAsyncOperation_impl<__int64>;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::IAsyncOperation_impl<int>;
struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncOperation_impl<unsigned int>;
struct Windows::Foundation::IClosable;
struct Windows::Foundation::IDeferral;
struct Windows::Foundation::IDeferralCompletedHandler;
struct Windows::Foundation::IDeferralFactory;
struct Windows::Foundation::IEventHandler<HSTRING__ *>;
struct Windows::Foundation::IEventHandler<IInspectable *>;
struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>;
struct Windows::Foundation::IEventHandler<bool>;
struct Windows::Foundation::IEventHandler_impl<HSTRING__ *>;
struct Windows::Foundation::IEventHandler_impl<IInspectable *>;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IGuidHelperStatics;
struct Windows::Foundation::IMemoryBuffer;
struct Windows::Foundation::IMemoryBufferFactory;
struct Windows::Foundation::IMemoryBufferReference;
struct Windows::Foundation::IPropertyValue;
struct Windows::Foundation::IPropertyValueStatics;
struct Windows::Foundation::IReference<HSTRING__ *>;
struct Windows::Foundation::IReference<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReference<Windows::Foundation::Point>;
struct Windows::Foundation::IReference<Windows::Foundation::Rect>;
struct Windows::Foundation::IReference<Windows::Foundation::Size>;
struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReference<_GUID>;
struct Windows::Foundation::IReference<__int64>;
struct Windows::Foundation::IReference<bool>;
struct Windows::Foundation::IReference<double>;
struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes>;
struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation>;
struct Windows::Foundation::IReference<float>;
struct Windows::Foundation::IReference<int>;
struct Windows::Foundation::IReference<short>;
struct Windows::Foundation::IReference<unsigned __int64>;
struct Windows::Foundation::IReference<unsigned char>;
struct Windows::Foundation::IReference<unsigned int>;
struct Windows::Foundation::IReferenceArray<HSTRING__ *>;
struct Windows::Foundation::IReferenceArray<IInspectable *>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReferenceArray<_GUID>;
struct Windows::Foundation::IReferenceArray<__int64>;
struct Windows::Foundation::IReferenceArray<bool>;
struct Windows::Foundation::IReferenceArray<double>;
struct Windows::Foundation::IReferenceArray<float>;
struct Windows::Foundation::IReferenceArray<int>;
struct Windows::Foundation::IReferenceArray<short>;
struct Windows::Foundation::IReferenceArray<unsigned __int64>;
struct Windows::Foundation::IReferenceArray<unsigned char>;
struct Windows::Foundation::IReferenceArray<unsigned int>;
struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *>;
struct Windows::Foundation::IReferenceArray_impl<IInspectable *>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReferenceArray_impl<_GUID>;
struct Windows::Foundation::IReferenceArray_impl<__int64>;
struct Windows::Foundation::IReferenceArray_impl<double>;
struct Windows::Foundation::IReferenceArray_impl<float>;
struct Windows::Foundation::IReferenceArray_impl<int>;
struct Windows::Foundation::IReferenceArray_impl<short>;
struct Windows::Foundation::IReferenceArray_impl<unsigned __int64>;
struct Windows::Foundation::IReferenceArray_impl<unsigned char>;
struct Windows::Foundation::IReferenceArray_impl<unsigned int>;
struct Windows::Foundation::IReference_impl<HSTRING__ *>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Point>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Size>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReference_impl<_GUID>;
struct Windows::Foundation::IReference_impl<__int64>;
struct Windows::Foundation::IReference_impl<double>;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes>;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
struct Windows::Foundation::IReference_impl<float>;
struct Windows::Foundation::IReference_impl<int>;
struct Windows::Foundation::IReference_impl<short>;
struct Windows::Foundation::IReference_impl<unsigned __int64>;
struct Windows::Foundation::IReference_impl<unsigned char>;
struct Windows::Foundation::IReference_impl<unsigned int>;
struct Windows::Foundation::IStringable;
struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>;
struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
struct Windows::Foundation::IUriEscapeStatics;
struct Windows::Foundation::IUriRuntimeClass;
struct Windows::Foundation::IUriRuntimeClassFactory;
struct Windows::Foundation::IUriRuntimeClassWithAbsoluteCanonicalUri;
struct Windows::Foundation::IWwwFormUrlDecoderEntry;
struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass;
struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClassFactory;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *>;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>;
struct Windows::Foundation::Internal::AggregateType<bool,unsigned char>;
struct Windows::Foundation::Internal::GetAbiType<EventRegistrationToken>;
struct Windows::Foundation::Internal::GetAbiType<HSTRING__ *>;
struct Windows::Foundation::Internal::GetAbiType<IInspectable *>;
struct Windows::Foundation::Internal::GetAbiType<IWeakReference *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::DateTime>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IMemoryBufferReference *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Point>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Rect>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Size>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Search::IStorageQueryResultBase *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::Internal::GetAbiType<_GUID>;
struct Windows::Foundation::Internal::GetAbiType<__int64>;
struct Windows::Foundation::Internal::GetAbiType<double>;
struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileAttributes>;
struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileProperties::VideoOrientation>;
struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::Internal::GetAbiType<float>;
struct Windows::Foundation::Internal::GetAbiType<int>;
struct Windows::Foundation::Internal::GetAbiType<short>;
struct Windows::Foundation::Internal::GetAbiType<unsigned __int64>;
struct Windows::Foundation::Internal::GetAbiType<unsigned char>;
struct Windows::Foundation::Internal::GetAbiType<unsigned int>;
struct Windows::Foundation::Internal::GetLogicalType<EventRegistrationToken>;
struct Windows::Foundation::Internal::GetLogicalType<HSTRING__ *>;
struct Windows::Foundation::Internal::GetLogicalType<IInspectable *>;
struct Windows::Foundation::Internal::GetLogicalType<IWeakReference *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Data::Xml::Dom::IXmlNode *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::DateTime>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IMemoryBufferReference *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Point>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Rect>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Size>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::AccessCache::AccessListEntry>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageFile *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageItem *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Search::IStorageQueryResultBase *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IInputStream *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Foundation::Internal::GetLogicalType<_GUID>;
struct Windows::Foundation::Internal::GetLogicalType<__int64>;
struct Windows::Foundation::Internal::GetLogicalType<double>;
struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileAttributes>;
struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileProperties::VideoOrientation>;
struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::Internal::GetLogicalType<float>;
struct Windows::Foundation::Internal::GetLogicalType<int>;
struct Windows::Foundation::Internal::GetLogicalType<short>;
struct Windows::Foundation::Internal::GetLogicalType<unsigned __int64>;
struct Windows::Foundation::Internal::GetLogicalType<unsigned char>;
struct Windows::Foundation::Internal::GetLogicalType<unsigned int>;
struct Windows::Foundation::Point;
struct Windows::Foundation::Rect;
struct Windows::Foundation::Size;
struct Windows::Foundation::TimeSpan;
struct Windows::Internal::_StringDetail::dummy_t;
struct Windows::Internal::_StringDetail::enable_if<1,Windows::Internal::_StringDetail::dummy_t>;
struct Windows::Storage::AccessCache::AccessListEntry;
struct Windows::Storage::AccessCache::IItemRemovedEventArgs;
struct Windows::Storage::AccessCache::IStorageApplicationPermissionsStatics;
struct Windows::Storage::AccessCache::IStorageItemAccessList;
struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList;
struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList2;
struct Windows::Storage::BulkAccess::IFileInformationFactory;
struct Windows::Storage::BulkAccess::IFileInformationFactoryFactory;
struct Windows::Storage::BulkAccess::IStorageItemInformation;
struct Windows::Storage::FileProperties::IBasicProperties;
struct Windows::Storage::FileProperties::IDocumentProperties;
struct Windows::Storage::FileProperties::IImageProperties;
struct Windows::Storage::FileProperties::IMusicProperties;
struct Windows::Storage::FileProperties::IStorageItemContentProperties;
struct Windows::Storage::FileProperties::IStorageItemExtraProperties;
struct Windows::Storage::FileProperties::IThumbnailProperties;
struct Windows::Storage::FileProperties::IVideoProperties;
struct Windows::Storage::IAppDataPaths;
struct Windows::Storage::IAppDataPathsStatics;
struct Windows::Storage::ICachedFileManagerStatics;
struct Windows::Storage::IDownloadsFolderStatics;
struct Windows::Storage::IDownloadsFolderStatics2;
struct Windows::Storage::IFileIOStatics;
struct Windows::Storage::IKnownFoldersCameraRollStatics;
struct Windows::Storage::IKnownFoldersPlaylistsStatics;
struct Windows::Storage::IKnownFoldersSavedPicturesStatics;
struct Windows::Storage::IKnownFoldersStatics;
struct Windows::Storage::IKnownFoldersStatics2;
struct Windows::Storage::IKnownFoldersStatics3;
struct Windows::Storage::IPathIOStatics;
struct Windows::Storage::IStorageFile;
struct Windows::Storage::IStorageFile2;
struct Windows::Storage::IStorageFilePropertiesWithAvailability;
struct Windows::Storage::IStorageFileStatics;
struct Windows::Storage::IStorageFolder;
struct Windows::Storage::IStorageFolder2;
struct Windows::Storage::IStorageFolder3;
struct Windows::Storage::IStorageFolderStatics;
struct Windows::Storage::IStorageItem;
struct Windows::Storage::IStorageItem2;
struct Windows::Storage::IStorageItemProperties;
struct Windows::Storage::IStorageItemProperties2;
struct Windows::Storage::IStorageItemPropertiesWithProvider;
struct Windows::Storage::IStorageLibrary;
struct Windows::Storage::IStorageLibrary2;
struct Windows::Storage::IStorageLibrary3;
struct Windows::Storage::IStorageLibraryChange;
struct Windows::Storage::IStorageLibraryChangeReader;
struct Windows::Storage::IStorageLibraryChangeTracker;
struct Windows::Storage::IStorageLibraryStatics;
struct Windows::Storage::IStorageLibraryStatics2;
struct Windows::Storage::IStorageProvider;
struct Windows::Storage::IStorageProvider2;
struct Windows::Storage::IStorageStreamTransaction;
struct Windows::Storage::IStreamedFileDataRequest;
struct Windows::Storage::IStreamedFileDataRequestedHandler;
struct Windows::Storage::ISystemDataPaths;
struct Windows::Storage::ISystemDataPathsStatics;
struct Windows::Storage::IUserDataPaths;
struct Windows::Storage::IUserDataPathsStatics;
struct Windows::Storage::Pickers::IFileOpenPicker;
struct Windows::Storage::Pickers::IFileOpenPicker2;
struct Windows::Storage::Pickers::IFileOpenPickerStatics;
struct Windows::Storage::Pickers::IFileOpenPickerWithOperationId;
struct Windows::Storage::Pickers::IFileSavePicker;
struct Windows::Storage::Pickers::IFileSavePicker2;
struct Windows::Storage::Pickers::IFileSavePicker3;
struct Windows::Storage::Pickers::IFolderPicker;
struct Windows::Storage::Pickers::IFolderPicker2;
struct Windows::Storage::Provider::ICachedFileUpdaterStatics;
struct Windows::Storage::Provider::IStorageProviderPropertyCapabilities;
struct Windows::Storage::Search::IQueryOptions;
struct Windows::Storage::Search::IQueryOptionsFactory;
struct Windows::Storage::Search::IQueryOptionsWithProviderFilter;
struct Windows::Storage::Search::IStorageFileQueryResult;
struct Windows::Storage::Search::IStorageFileQueryResult2;
struct Windows::Storage::Search::IStorageFolderQueryOperations;
struct Windows::Storage::Search::IStorageFolderQueryResult;
struct Windows::Storage::Search::IStorageItemQueryResult;
struct Windows::Storage::Search::IStorageLibraryChangeTrackerTriggerDetails;
struct Windows::Storage::Search::IStorageLibraryContentChangedTriggerDetails;
struct Windows::Storage::Search::IStorageQueryResultBase;
struct Windows::Storage::Search::SortEntry;
struct Windows::Storage::Streams::IBuffer;
struct Windows::Storage::Streams::IBufferByteAccess;
struct Windows::Storage::Streams::IBufferFactory;
struct Windows::Storage::Streams::IBufferStatics;
struct Windows::Storage::Streams::IContentTypeProvider;
struct Windows::Storage::Streams::IDataReader;
struct Windows::Storage::Streams::IDataReaderFactory;
struct Windows::Storage::Streams::IDataReaderStatics;
struct Windows::Storage::Streams::IDataWriter;
struct Windows::Storage::Streams::IDataWriterFactory;
struct Windows::Storage::Streams::IFileRandomAccessStreamStatics;
struct Windows::Storage::Streams::IInputStream;
struct Windows::Storage::Streams::IInputStreamReference;
struct Windows::Storage::Streams::IOutputStream;
struct Windows::Storage::Streams::IRandomAccessStream;
struct Windows::Storage::Streams::IRandomAccessStreamReference;
struct Windows::Storage::Streams::IRandomAccessStreamReferenceStatics;
struct Windows::Storage::Streams::IRandomAccessStreamStatics;
struct Windows::Storage::Streams::IRandomAccessStreamWithContentType;
struct Windows::System::IKnownUserPropertiesStatics;
struct Windows::System::IUser;
struct Windows::System::IUserAuthenticationStatusChangeDeferral;
struct Windows::System::IUserAuthenticationStatusChangingEventArgs;
struct Windows::System::IUserChangedEventArgs;
struct Windows::System::IUserPicker;
struct Windows::System::IUserPickerStatics;
struct Windows::System::IUserStatics;
struct Windows::System::IUserStatics2;
struct Windows::System::IUserWatcher;
struct WinrtRtti;
struct WinrtRttiDelegate_V1;
struct WinrtRttiInterface_V1;
struct WinrtRttiNamespace_V1;
struct WinrtRttiParameterizedDelegateInstance_V1;
struct WinrtRttiParameterizedDelegate_V1;
struct WinrtRttiParameterizedInterfaceInstance_V1;
struct WinrtRttiParameterizedInterface_V1;
struct WppPointerToUshort;
struct XAttributesImpl::AttrNameVal;
struct XCode::AddrInstr;
struct XCode::BoolInstr;
struct XCode::BrArgInstr;
struct XCode::ExtFuncInstr;
struct XCode::FltrInstr;
struct XCode::FltrRangeInstr;
struct XCode::FrameInstr;
struct XCode::GlobalVarInstr;
struct XCode::Instruction;
struct XCode::IntInstr;
struct XCode::Local2Instr;
struct XCode::LocalInstr;
struct XCode::LocalIntInstr;
struct XCode::NameDefInstr;
struct XCode::NameDefStringInstr;
struct XCode::NameInstr;
struct XCode::NavFilterInstr;
struct XCode::NodeTestInstr;
struct XCode::ObjInstr;
struct XCode::R8Instr;
struct XCode::SizeInstr;
struct XCode::StringInstr;
struct XCodeGen::BooleanFixup;
struct XMLDOMDocumentEvents;
struct XMLParser::Download;
struct XMLParser::HashCheckDupAttributes::__l2::AttrInfo;
struct XMLParser::_MY_XML_NODE_INFO;
struct XMLStream::InputInfo;
struct XMLStream::StateInfo;
struct XPBuilder::NodeTest;
struct XPBuilder::QName;
struct XPBuilder::SortKey;
struct XPNav::XPNavVtbl;
struct XPNavVtbl;
struct XPNodeNav::XPNodeNavVtbl;
struct XPNodeNavVtbl;
struct XSAVE_CPU_ERRATA;
struct XSAVE_CPU_INFO;
struct XSLTKeywords::KeywordInfo;
struct XSLTTextContext;
struct XSLTTextVisitor::XSLTTextContext;
struct XWinRT::IntVersionTag;
struct XWinRT::InterfaceEquals;
struct XWinRT::InterfaceLifetimeTraits;
struct XWinRT::SecureVersionTag;
struct XWinRT::SerializingLockPolicy;
struct XWinRT::StringEquals;
struct XWinRT::StringHash;
struct XWinRT::StringLifetimeTraits;
struct XWinRT::XPlex;
struct XWinRT::detail::AcquireRead;
struct XWinRT::detail::AcquireWrite;
struct XWinRT::detail::ReentrancyGuard<1>;
struct XWinRT::detail::TryAcquireRead;
struct XWinRT::detail::TryAcquireWrite;
struct XmlEventCache::XmlEventPage;
struct XmlEventPage;
struct XmlSpaceContext;
struct XsdAttributeEntry;
struct XsdBuilder::ContainerState;
struct XsdEntry;
struct _ABC;
struct _ABCFLOAT;
struct _ACCESS_ALLOWED_ACE;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_ACE;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE;
struct _ACCESS_REASONS;
struct _ACE_HEADER;
struct _ACL;
struct _ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION;
struct _ACTIVATION_CONTEXT;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
struct _ACTIVATION_CONTEXT_DATA;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct _ACTIVATION_CONTEXT_STACK;
struct _ADMINISTRATOR_POWER_POLICY;
struct _ALPC_BASIC_INFORMATION;
struct _ALPC_CONTEXT_ATTR;
struct _ALPC_DATA_VIEW_ATTR;
struct _ALPC_DIRECT_ATTR;
struct _ALPC_HANDLE_ATTR;
struct _ALPC_HANDLE_ATTR32;
struct _ALPC_MESSAGE_ATTRIBUTES;
struct _ALPC_MESSAGE_HANDLE_INFORMATION;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _ALPC_PORT_ATTRIBUTES;
struct _ALPC_PORT_CALLBACK_INFORMATION;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct _ALPC_SECURITY_ATTR;
struct _ALPC_SERVER_INFORMATION;
struct _ALPC_TOKEN_ATTR;
struct _ALPC_WORK_ON_BEHALF_ATTR;
struct _ALPC_WORK_ON_BEHALF_TICKET;
struct _AMD64_CONTEXT;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _APP_MEMORY_INFORMATION;
struct _ARM64_CONTEXT;
struct _ARM_CONTEXT;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct _ASSEMBLY_STORAGE_MAP;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
struct _ATOM_BASIC_INFORMATION;
struct _ATOM_TABLE_INFORMATION;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _BCRYPT_DH_KEY_BLOB;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct _BCRYPT_DSA_KEY_BLOB;
struct _BCRYPT_DSA_KEY_BLOB_V2;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct _BCRYPT_DSA_PARAMETER_HEADER_V2;
struct _BCRYPT_ECCFULLKEY_BLOB;
struct _BCRYPT_ECCKEY_BLOB;
struct _BCRYPT_ECC_CURVE_NAMES;
struct _BCRYPT_INTERFACE_VERSION;
struct _BCRYPT_KEY_BLOB;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct _BCRYPT_MULTI_HASH_OPERATION;
struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT;
struct _BCRYPT_OAEP_PADDING_INFO;
struct _BCRYPT_OID;
struct _BCRYPT_OID_LIST;
struct _BCRYPT_PKCS1_PADDING_INFO;
struct _BCRYPT_PROVIDER_NAME;
struct _BCRYPT_PSS_PADDING_INFO;
struct _BCRYPT_RSAKEY_BLOB;
struct _BCryptBuffer;
struct _BCryptBufferDesc;
struct _BLENDFUNCTION;
struct _BOOT_AREA_INFO;
struct _BOOT_ENTROPY_NT_RESULT;
struct _BOOT_ENTROPY_SOURCE_NT_RESULT;
struct _BOOT_ENTRY;
struct _BOOT_ENTRY_LIST;
struct _BOOT_OPTIONS;
struct _BYTE_BLOB;
struct _BYTE_SIZEDARR;
struct _BY_HANDLE_FILE_INFORMATION;
struct _CACHE_DESCRIPTOR;
struct _CACHE_RELATIONSHIP;
struct _CALL_FRAME;
struct _CERT_ACCESS_DESCRIPTION;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_ALT_NAME_INFO;
struct _CERT_AUTHORITY_INFO_ACCESS;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct _CERT_BIOMETRIC_DATA;
struct _CERT_BIOMETRIC_EXT_INFO;
struct _CERT_CHAIN;
struct _CERT_CHAIN_CONTEXT;
struct _CERT_CHAIN_ELEMENT;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct _CERT_CHAIN_PARA;
struct _CERT_CHAIN_POLICY_PARA;
struct _CERT_CHAIN_POLICY_STATUS;
struct _CERT_CONTEXT;
struct _CERT_CREATE_CONTEXT_PARA;
struct _CERT_CRL_CONTEXT_PAIR;
struct _CERT_DH_PARAMETERS;
struct _CERT_DSS_PARAMETERS;
struct _CERT_ECC_SIGNATURE;
struct _CERT_EXTENSION;
struct _CERT_EXTENSIONS;
struct _CERT_FORTEZZA_DATA_PROP;
struct _CERT_GENERAL_SUBTREE;
struct _CERT_HASHED_URL;
struct _CERT_ID;
struct _CERT_INFO;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_KEYGEN_REQUEST_INFO;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct _CERT_KEY_CONTEXT;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct _CERT_LOGOTYPE_AUDIO;
struct _CERT_LOGOTYPE_AUDIO_INFO;
struct _CERT_LOGOTYPE_DATA;
struct _CERT_LOGOTYPE_DETAILS;
struct _CERT_LOGOTYPE_EXT_INFO;
struct _CERT_LOGOTYPE_IMAGE;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct _CERT_LOGOTYPE_INFO;
struct _CERT_LOGOTYPE_REFERENCE;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct _CERT_NAME_INFO;
struct _CERT_NAME_VALUE;
struct _CERT_OR_CRL_BLOB;
struct _CERT_OR_CRL_BUNDLE;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct _CERT_OTHER_NAME;
struct _CERT_PAIR;
struct _CERT_PHYSICAL_STORE_INFO;
struct _CERT_POLICIES_INFO;
struct _CERT_POLICY95_QUALIFIER1;
struct _CERT_POLICY_CONSTRAINTS_INFO;
struct _CERT_POLICY_ID;
struct _CERT_POLICY_INFO;
struct _CERT_POLICY_MAPPING;
struct _CERT_POLICY_MAPPINGS_INFO;
struct _CERT_POLICY_QUALIFIER_INFO;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
struct _CERT_PRIVATE_KEY_VALIDITY;
struct _CERT_PUBLIC_KEY_INFO;
struct _CERT_QC_STATEMENT;
struct _CERT_QC_STATEMENTS_EXT_INFO;
struct _CERT_RDN;
struct _CERT_RDN_ATTR;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct _CERT_REQUEST_INFO;
struct _CERT_REVOCATION_CHAIN_PARA;
struct _CERT_REVOCATION_CRL_INFO;
struct _CERT_REVOCATION_INFO;
struct _CERT_REVOCATION_PARA;
struct _CERT_REVOCATION_STATUS;
struct _CERT_SELECT_CHAIN_PARA;
struct _CERT_SELECT_CRITERIA;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA;
struct _CERT_SIGNED_CONTENT_INFO;
struct _CERT_SIMPLE_CHAIN;
struct _CERT_STORE_PROV_FIND_INFO;
struct _CERT_STORE_PROV_INFO;
struct _CERT_STRONG_SIGN_PARA;
struct _CERT_STRONG_SIGN_SERIALIZED_INFO;
struct _CERT_SUPPORTED_ALGORITHM_INFO;
struct _CERT_SYSTEM_STORE_INFO;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
struct _CERT_TEMPLATE_EXT;
struct _CERT_TPM_SPECIFICATION_INFO;
struct _CERT_TRUST_LIST_INFO;
struct _CERT_TRUST_STATUS;
struct _CERT_USAGE_MATCH;
struct _CERT_X942_DH_PARAMETERS;
struct _CERT_X942_DH_VALIDATION_PARAMS;
struct _CFG_CALL_TARGET_INFO;
struct _CFG_CALL_TARGET_LIST_INFORMATION;
struct _CHAR_INFO;
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _CLAIM_SECURITY_ATTRIBUTE_V1;
struct _CLIENT_ID;
struct _CLIENT_ID64;
struct _CLUSTER_RANGE;
struct _CMC_ADD_ATTRIBUTES_INFO;
struct _CMC_ADD_EXTENSIONS_INFO;
struct _CMC_DATA_INFO;
struct _CMC_PEND_INFO;
struct _CMC_RESPONSE_INFO;
struct _CMC_STATUS_INFO;
struct _CMC_TAGGED_ATTRIBUTE;
struct _CMC_TAGGED_CERT_REQUEST;
struct _CMC_TAGGED_CONTENT_INFO;
struct _CMC_TAGGED_OTHER_MSG;
struct _CMC_TAGGED_REQUEST;
struct _CMSG_CMS_RECIPIENT_INFO;
struct _CMSG_CMS_SIGNER_INFO;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_DECRYPT_PARA;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
struct _CMSG_ENVELOPED_ENCODE_INFO;
struct _CMSG_HASHED_ENCODE_INFO;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
struct _CMSG_RC2_AUX_INFO;
struct _CMSG_RC4_AUX_INFO;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _CMSG_SIGNED_ENCODE_INFO;
struct _CMSG_SIGNER_ENCODE_INFO;
struct _CMSG_SIGNER_INFO;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
struct _CMSG_STREAM_INFO;
struct _CMS_DH_KEY_INFO;
struct _CMS_KEY_INFO;
struct _CM_COMPONENT_INFORMATION;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _CM_EISA_FUNCTION_INFORMATION;
struct _CM_EISA_SLOT_INFORMATION;
struct _CM_FLOPPY_DEVICE_DATA;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_INT13_DRIVE_PARAMETER;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _CM_MCA_POS_DATA;
struct _CM_MONITOR_DEVICE_DATA;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CM_PCCARD_DEVICE_DATA;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct _CM_RESOURCE_LIST;
struct _CM_ROM_BLOCK;
struct _CM_SCSI_DEVICE_DATA;
struct _CM_SERIAL_DEVICE_DATA;
struct _CM_SONIC_DEVICE_DATA;
struct _CM_VIDEO_DEVICE_DATA;
struct _COAUTHIDENTITY;
struct _COAUTHINFO;
struct _COMDLG_FILTERSPEC;
struct _COMMCONFIG;
struct _COMMPROP;
struct _COMMTIMEOUTS;
struct _COMM_FAULT_OFFSETS;
struct _COMPATIBILITY_CONTEXT_ELEMENT;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
struct _COMPRESSED_DATA_INFO;
struct _COMSTAT;
struct _CONNECTDLGSTRUCTA;
struct _CONNECTDLGSTRUCTW;
struct _CONSOLE_CURSOR_INFO;
struct _CONSOLE_FONT_INFO;
struct _CONSOLE_FONT_INFOEX;
struct _CONSOLE_HISTORY_INFO;
struct _CONSOLE_READCONSOLE_CONTROL;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
struct _CONSOLE_SELECTION_INFO;
struct _CONTAINER_ROOT_INFO_INPUT;
struct _CONTAINER_ROOT_INFO_OUTPUT;
struct _CONTAINER_VOLUME_STATE;
struct _CONTEXT;
struct _CONTEXT_CHUNK;
struct _CONTEXT_EX;
struct _COORD;
struct _COSERVERINFO;
struct _COUNTED_REASON_CONTEXT;
struct _COUNTER_READING;
struct _COVERAGE_MODULES;
struct _COVERAGE_MODULE_INFO;
struct _COVERAGE_MODULE_REQUEST;
struct _COVERAGE_SECTION_HEADER;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
struct _CPS_URLS;
struct _CPTABLEINFO;
struct _CREATEFILE2_EXTENDED_PARAMETERS;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO;
struct _CRITICAL_PROCESS_EXCEPTION_DATA;
struct _CRL_CONTEXT;
struct _CRL_DIST_POINT;
struct _CRL_DIST_POINTS_INFO;
struct _CRL_DIST_POINT_NAME;
struct _CRL_ENTRY;
struct _CRL_FIND_ISSUED_FOR_PARA;
struct _CRL_INFO;
struct _CRL_ISSUING_DIST_POINT;
struct _CRL_REVOCATION_INFO;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct _CRT_DOUBLE;
struct _CRT_FLOAT;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
struct _CRYPTOAPI_BLOB;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct _CRYPT_3DES_KEY_STATE;
struct _CRYPT_AES_128_KEY_STATE;
struct _CRYPT_AES_256_KEY_STATE;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _CRYPT_ATTRIBUTE;
struct _CRYPT_ATTRIBUTES;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct _CRYPT_BIT_BLOB;
struct _CRYPT_BLOB_ARRAY;
struct _CRYPT_CONTENT_INFO;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
struct _CRYPT_CONTEXTS;
struct _CRYPT_CONTEXT_CONFIG;
struct _CRYPT_CONTEXT_FUNCTIONS;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
struct _CRYPT_CREDENTIALS;
struct _CRYPT_CSP_PROVIDER;
struct _CRYPT_DECODE_PARA;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
struct _CRYPT_DES_KEY_STATE;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct _CRYPT_ECC_PRIVATE_KEY_INFO;
struct _CRYPT_ENCODE_PARA;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _CRYPT_HASH_INFO;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _CRYPT_IMAGE_REF;
struct _CRYPT_IMAGE_REG;
struct _CRYPT_INTERFACE_REG;
struct _CRYPT_KEY_PROV_INFO;
struct _CRYPT_KEY_PROV_PARAM;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct _CRYPT_MASK_GEN_ALGORITHM;
struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
struct _CRYPT_OBJID_TABLE;
struct _CRYPT_OID_FUNC_ENTRY;
struct _CRYPT_OID_INFO;
struct _CRYPT_PASSWORD_CREDENTIALSA;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct _CRYPT_PRIVATE_KEY_INFO;
struct _CRYPT_PROPERTY_REF;
struct _CRYPT_PROVIDERS;
struct _CRYPT_PROVIDER_REF;
struct _CRYPT_PROVIDER_REFS;
struct _CRYPT_PROVIDER_REG;
struct _CRYPT_PSOURCE_ALGORITHM;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct _CRYPT_RC4_KEY_STATE;
struct _CRYPT_RETRIEVE_AUX_INFO;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct _CRYPT_SEQUENCE_OF_ANY;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _CRYPT_SMART_CARD_ROOT_INFO;
struct _CRYPT_SMIME_CAPABILITIES;
struct _CRYPT_SMIME_CAPABILITY;
struct _CRYPT_TIMESTAMP_ACCURACY;
struct _CRYPT_TIMESTAMP_CONTEXT;
struct _CRYPT_TIMESTAMP_INFO;
struct _CRYPT_TIMESTAMP_PARA;
struct _CRYPT_TIMESTAMP_REQUEST;
struct _CRYPT_TIMESTAMP_RESPONSE;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
struct _CRYPT_URL_ARRAY;
struct _CRYPT_URL_INFO;
struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;
struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct _CRYPT_X942_OTHER_INFO;
struct _CSTRING;
struct _CSV_CONTROL_PARAM;
struct _CSV_IS_OWNED_BY_CSVFS;
struct _CSV_MGMT_LOCK;
struct _CSV_NAMESPACE_INFO;
struct _CSV_QUERY_FILE_REVISION;
struct _CSV_QUERY_FILE_REVISION_FILE_ID_128;
struct _CSV_QUERY_MDS_PATH;
struct _CSV_QUERY_MDS_PATH_V2;
struct _CSV_QUERY_REDIRECT_STATE;
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
struct _CSV_QUERY_VOLUME_REDIRECT_STATE;
struct _CTL_ANY_SUBJECT_INFO;
struct _CTL_CONTEXT;
struct _CTL_ENTRY;
struct _CTL_FIND_SUBJECT_PARA;
struct _CTL_FIND_USAGE_PARA;
struct _CTL_INFO;
struct _CTL_USAGE;
struct _CTL_USAGE_MATCH;
struct _CTL_VERIFY_USAGE_PARA;
struct _CTL_VERIFY_USAGE_STATUS;
struct _CURDIR;
struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;
struct _D3DCOLORVALUE;
struct _DCB;
struct _DEBUG_EVENT;
struct _DECRYPTION_STATUS_BUFFER;
struct _DEDUP_CHUNK_INFORMATION_HASH32;
struct _DEDUP_FILE_OPERATION;
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
struct _DEFINE_STORAGE_RESERVE_INPUT;
struct _DELAYLOAD_INFO;
struct _DELAYLOAD_PROC_DESCRIPTOR;
struct _DELETE_STORAGE_RESERVE_INPUT;
struct _DEVICE_FLAGS;
struct _DIAGNOSTIC_BUFFER;
struct _DISCDLGSTRUCTA;
struct _DISCDLGSTRUCTW;
struct _DISPATCHER_CONTEXT;
struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO;
struct _DISPLAYCONFIG_SDR_WHITE_LEVEL;
struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE;
struct _DISPLAY_DEVICEA;
struct _DISPLAY_DEVICEW;
struct _DLLVERSIONINFO;
struct _DLLVERSIONINFO2;
struct _DMA_CONFIGURATION_BYTE0;
struct _DMA_CONFIGURATION_BYTE1;
struct _DOCINFOA;
struct _DOCINFOW;
struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK;
struct _DRAWPATRECT;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct _DSSSEED;
struct _DUPLICATE_EXTENTS_DATA;
struct _DUPLICATE_EXTENTS_DATA32;
struct _DUPLICATE_EXTENTS_DATA_EX;
struct _DUPLICATE_EXTENTS_DATA_EX32;
struct _DWORD_BLOB;
struct _DYNAMIC_FUNCTION_TABLE;
struct _DesiredStorageClass;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
struct _EISA_DMA_CONFIGURATION;
struct _EISA_IRQ_CONFIGURATION;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_MEMORY_CONFIGURATION;
struct _EISA_MEMORY_TYPE;
struct _EISA_PORT_CONFIGURATION;
struct _EISA_PORT_DESCRIPTOR;
struct _ENCLAVE_CREATE_INFO_SGX;
struct _ENCLAVE_CREATE_INFO_VBS;
struct _ENCLAVE_INIT_INFO_SGX;
struct _ENCLAVE_INIT_INFO_VBS;
struct _ENCLAVE_LOAD_INFO_VBS;
struct _ENCRYPTED_DATA_INFO;
struct _ENCRYPTION_BUFFER;
struct _ENCRYPTION_KEY_CTRL_INPUT;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _ENLISTMENT_CRM_INFORMATION;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<1>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<2>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<4>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<8>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FEATURE_CHANGE_TIME>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FEATURE_ENABLED_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FILETYPEATTRIBUTEFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum RO_ERROR_REPORTING_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::ErrorOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::RoErrorReportingFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::AccessCache::AccessCacheOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileAttributes>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileProperties::PropertyPrefetchOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileProperties::ThumbnailOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::Provider::CachedFileOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::StorageItemTypes>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::StorageOpenOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::Streams::InputStreamOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum __MIDL___MIDL_itf_urlmonp_0000_0026_0002>;
struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::EventOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::FeaturePropertyGroupFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::StagingControlActions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::ReportFailureOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::StagingConfigurationFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details_abi::UsageIndexesLoadOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil_FeatureEnabledStateOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil_details_ServiceReportingOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil_details_StagingConfigFeatureFields>;
struct _ENUM_SERVICE_STATUSA;
struct _ENUM_SERVICE_STATUSW;
struct _ENUM_SERVICE_STATUS_PROCESSA;
struct _ENUM_SERVICE_STATUS_PROCESSW;
struct _EVENTLOGRECORD;
struct _EVENTLOG_FULL_INFORMATION;
struct _EVENTSFORLOGFILE;
struct _EVENT_BASIC_INFORMATION;
struct _EVENT_FILTER_DESCRIPTOR;
struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _EXCEPTION_DEBUG_INFO;
struct _EXCEPTION_LOG;
struct _EXCEPTION_POINTERS;
struct _EXCEPTION_RECORD;
struct _EXCEPTION_RECORD32;
struct _EXCEPTION_RECORD64;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _EXFAT_STATISTICS;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct _EXTENT_READ_CACHE_INFO_BUFFER;
struct _EX_WNF_SUBSCRIPTION;
struct _FAT_STATISTICS;
struct _FIBER;
struct _FILEMUIINFO;
struct _FILEOFFSET_INFORMATION;
struct _FILESYSTEM_STATISTICS;
struct _FILESYSTEM_STATISTICS_EX;
struct _FILETIME;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_ALIGNMENT_INFO;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _FILE_ALLOCATION_INFO;
struct _FILE_ALLOCATION_INFORMATION;
struct _FILE_ALL_INFORMATION;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _FILE_BASIC_INFO;
struct _FILE_BASIC_INFORMATION;
struct _FILE_BOTH_DIR_INFORMATION;
struct _FILE_CASE_SENSITIVE_INFORMATION;
struct _FILE_COMPLETION_INFORMATION;
struct _FILE_COMPRESSION_INFO;
struct _FILE_COMPRESSION_INFORMATION;
struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION;
struct _FILE_DIRECTORY_INFORMATION;
struct _FILE_DISPOSITION_INFO;
struct _FILE_DISPOSITION_INFORMATION;
struct _FILE_DISPOSITION_INFORMATION_EX;
struct _FILE_DISPOSITION_INFO_EX;
struct _FILE_EA_INFORMATION;
struct _FILE_END_OF_FILE_INFO;
struct _FILE_END_OF_FILE_INFORMATION;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _FILE_FS_CONTROL_INFORMATION;
struct _FILE_FS_DATA_COPY_INFORMATION;
struct _FILE_FS_DEVICE_INFORMATION;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION_EX;
struct _FILE_FS_LABEL_INFORMATION;
struct _FILE_FS_METADATA_SIZE_INFORMATION;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
struct _FILE_FS_SECTOR_SIZE_INFORMATION;
struct _FILE_FS_SIZE_INFORMATION;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _FILE_FS_VOLUME_INFORMATION;
struct _FILE_FULL_DIR_INFO;
struct _FILE_FULL_DIR_INFORMATION;
struct _FILE_FULL_EA_INFORMATION;
struct _FILE_GET_EA_INFORMATION;
struct _FILE_GET_QUOTA_INFORMATION;
struct _FILE_ID_128;
struct _FILE_ID_BOTH_DIR_INFO;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION;
struct _FILE_ID_EXTD_DIR_INFO;
struct _FILE_ID_EXTD_DIR_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
struct _FILE_ID_INFO;
struct _FILE_ID_INFORMATION;
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _FILE_IO_COMPLETION_INFORMATION;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFO;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct _FILE_LAYOUT_ENTRY;
struct _FILE_LAYOUT_INFO_ENTRY;
struct _FILE_LAYOUT_NAME_ENTRY;
struct _FILE_LEVEL_TRIM;
struct _FILE_LEVEL_TRIM_OUTPUT;
struct _FILE_LEVEL_TRIM_RANGE;
struct _FILE_LINKS_FULL_ID_INFORMATION;
struct _FILE_LINKS_INFORMATION;
struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINK_INFORMATION;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _FILE_MEMORY_PARTITION_INFORMATION;
struct _FILE_MODE_INFORMATION;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _FILE_NAMES_INFORMATION;
struct _FILE_NAME_INFO;
struct _FILE_NAME_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _FILE_NOTIFY_EXTENDED_INFORMATION;
struct _FILE_NOTIFY_INFORMATION;
struct _FILE_NUMA_NODE_INFORMATION;
struct _FILE_OBJECTID_BUFFER;
struct _FILE_OBJECTID_INFORMATION;
struct _FILE_PATH;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _FILE_PIPE_CREATE_SYMLINK_INPUT;
struct _FILE_PIPE_DELETE_SYMLINK_INPUT;
struct _FILE_PIPE_EVENT_BUFFER;
struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER;
struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER;
struct _FILE_PIPE_EVENT_SELECT_BUFFER;
struct _FILE_PIPE_INFORMATION;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct _FILE_PIPE_PEEK_BUFFER;
struct _FILE_PIPE_REMOTE_INFORMATION;
struct _FILE_PIPE_SILO_ARRIVAL_INPUT;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _FILE_POSITION_INFORMATION;
struct _FILE_PREFETCH;
struct _FILE_PREFETCH_EX;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct _FILE_PROVIDER_EXTERNAL_INFO_V0;
struct _FILE_PROVIDER_EXTERNAL_INFO_V1;
struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _FILE_QUERY_SPARING_BUFFER;
struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX;
struct _FILE_QUOTA_INFORMATION;
struct _FILE_REFERENCE_RANGE;
struct _FILE_REGION_INFO;
struct _FILE_REGION_INPUT;
struct _FILE_REGION_OUTPUT;
struct _FILE_REMOTE_PROTOCOL_INFO;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct _FILE_RENAME_INFO;
struct _FILE_RENAME_INFORMATION;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _FILE_SET_SPARSE_BUFFER;
struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _FILE_STANDARD_INFO;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_STANDARD_INFORMATION_EX;
struct _FILE_STANDARD_LINK_INFORMATION;
struct _FILE_STAT_INFORMATION;
struct _FILE_STAT_LX_INFORMATION;
struct _FILE_STORAGE_INFO;
struct _FILE_STORAGE_RESERVE_ID_INFORMATION;
struct _FILE_STORAGE_TIER;
struct _FILE_STORAGE_TIER_REGION;
struct _FILE_STREAM_INFO;
struct _FILE_STREAM_INFORMATION;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _FILE_TRACKING_INFORMATION;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
struct _FILE_VOLUME_NAME_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION_EX;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct _FIXED;
struct _FLAGGED_BYTE_BLOB;
struct _FLAGGED_WORD_BLOB;
struct _FLAG_STGMEDIUM;
struct _FLOAT128;
struct _FLS_CALLBACK_INFO;
struct _FLS_DATA;
struct _FNSAVE_FORMAT;
struct _FOCUS_EVENT_RECORD;
struct _FPO_DATA;
struct _FP_128;
struct _FP_32;
struct _FP_64;
struct _FP_80;
struct _FP_IEEE_RECORD;
struct _FP_IEEE_VALUE;
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER;
struct _FSCTL_OFFLOAD_READ_INPUT;
struct _FSCTL_OFFLOAD_READ_OUTPUT;
struct _FSCTL_OFFLOAD_WRITE_INPUT;
struct _FSCTL_OFFLOAD_WRITE_OUTPUT;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT;
struct _FSCTL_QUERY_REGION_INFO_INPUT;
struct _FSCTL_QUERY_REGION_INFO_OUTPUT;
struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT;
struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX;
struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER;
struct _FSCTL_UNMAP_SPACE_OUTPUT;
struct _FULL_PTR_XLAT_TABLES;
struct _GDI_NONREMOTE;
struct _GDI_OBJECT;
struct _GDI_TEB_BATCH;
struct _GENERATE_NAME_CONTEXT;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct _GENERIC_MAPPING;
struct _GET_FILTER_FILE_IDENTIFIER_INPUT;
struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT;
struct _GHOSTED_FILE_EXTENT;
struct _GLYPHMETRICS;
struct _GLYPHMETRICSFLOAT;
struct _GRADIENT_RECT;
struct _GRADIENT_TRIANGLE;
struct _GROUP_AFFINITY;
struct _GROUP_RELATIONSHIP;
struct _GS_HANDLER_DATA;
struct _GUID;
struct _HARDERROR_MSG;
struct _HARDWARE_COUNTER;
struct _HARDWARE_COUNTER_DATA;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_SUMMARY;
struct _HIBERFILE_BUCKET;
struct _HMAC_Info;
struct _HOT_PATCH_IMAGE_INFO;
struct _HSM_OPCODE;
struct _HTML_PAINTER_INFO;
struct _HTML_PAINT_DRAW_INFO;
struct _HTML_PAINT_XFORM;
struct _HTTPSPolicyCallbackData;
struct _HV_DETAILS;
struct _HYPER_SIZEDARR;
struct _ICONINFO;
struct _ICONINFOEXA;
struct _ICONINFOEXW;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_BASE_RELOCATION;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_CHPE_METADATA_X86;
struct _IMAGE_CHPE_RANGE_ENTRY;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_DEBUG_DIRECTORY;
struct _IMAGE_DEBUG_MISC;
struct _IMAGE_DELAYLOAD_DESCRIPTOR;
struct _IMAGE_DOS_HEADER;
struct _IMAGE_DYNAMIC_RELOCATION32;
struct _IMAGE_DYNAMIC_RELOCATION32_V2;
struct _IMAGE_DYNAMIC_RELOCATION64;
struct _IMAGE_DYNAMIC_RELOCATION64_V2;
struct _IMAGE_DYNAMIC_RELOCATION_TABLE;
struct _IMAGE_ENCLAVE_CONFIG32;
struct _IMAGE_ENCLAVE_CONFIG64;
struct _IMAGE_ENCLAVE_IMPORT;
struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER;
struct _IMAGE_EXPORT_DIRECTORY;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64;
struct _IMAGE_HOT_PATCH_BASE;
struct _IMAGE_HOT_PATCH_HASHES;
struct _IMAGE_HOT_PATCH_INFO;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
struct _IMAGE_LINENUMBER;
struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _IMAGE_LOAD_CONFIG_DIRECTORY64;
struct _IMAGE_NT_HEADERS;
struct _IMAGE_NT_HEADERS64;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IMAGE_OS2_HEADER;
struct _IMAGE_POLICY_ENTRY;
struct _IMAGE_POLICY_METADATA;
struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER;
struct _IMAGE_RELOCATION;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_ROM_HEADERS;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_SECTION_HEADER;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION;
struct _IMAGE_SYMBOL;
struct _IMAGE_SYMBOL_EX;
struct _IMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64;
struct _IMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64;
struct _IMAGE_VXD_HEADER;
struct _INITIAL_TEB;
struct _INPUT_RECORD;
struct _INTERNET_BUFFERSA;
struct _INTERNET_BUFFERSW;
struct _INTERNET_CACHE_ENTRY_INFOA;
struct _INTERNET_CACHE_ENTRY_INFOW;
struct _INTERNET_CACHE_GROUP_INFOA;
struct _INTERNET_CACHE_GROUP_INFOW;
struct _INTERNET_CACHE_TIMESTAMPS;
struct _INVERTED_FUNCTION_TABLE;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct _IO_COMPLETION_BASIC_INFORMATION;
struct _IO_COUNTERS;
struct _IO_ERROR_LOG_MESSAGE;
struct _IO_ERROR_LOG_PACKET;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _IO_SESSION_CONNECT_INFO;
struct _IO_STATUS_BLOCK;
struct _IO_STATUS_BLOCK32;
struct _IR_TIMER_EXTRA_CREATE_PARAMETER;
struct _ITEMIDLIST;
struct _ImageArchitectureEntry;
struct _ImageArchitectureHeader;
struct _JIT_DEBUG_INFO;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2;
struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2;
struct _JOBOBJECT_FREEZE_INFORMATION;
struct _JOBOBJECT_INTERFERENCE_INFORMATION;
struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION;
struct _JOBOBJECT_IO_ATTRIBUTION_STATS;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOBOBJECT_WAKE_FILTER;
struct _JOBOBJECT_WAKE_INFORMATION;
struct _JOBOBJECT_WAKE_INFORMATION_V1;
struct _JOB_SET_ARRAY;
struct _JOURNAL_ABSOLUTE_INFORMATION;
struct _JOURNAL_CLIENT_INFORMATION;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct _JUMP_BUFFER;
struct _KAFFINITY_ENUMERATION_CONTEXT;
struct _KAFFINITY_EX;
struct _KCRM_MARSHAL_HEADER;
struct _KCRM_PROTOCOL_BLOB;
struct _KCRM_TRANSACTION_BLOB;
struct _KERNEL_USER_TIMES;
struct _KEY_BASIC_INFORMATION;
struct _KEY_CACHED_INFORMATION;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _KEY_EVENT_RECORD;
struct _KEY_FLAGS_INFORMATION;
struct _KEY_FULL_INFORMATION;
struct _KEY_HANDLE_TAGS_INFORMATION;
struct _KEY_LAYER_INFORMATION;
struct _KEY_NAME_INFORMATION;
struct _KEY_NODE_INFORMATION;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
struct _KEY_SET_LAYER_INFORMATION;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct _KEY_TRUST_INFORMATION;
struct _KEY_TYPE_SUBTYPE;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _KEY_VALUE_ENTRY;
struct _KEY_VALUE_FULL_INFORMATION;
struct _KEY_VALUE_LAYER_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct _KEY_WRITE_TIME_INFORMATION;
struct _KLDR_DATA_TABLE_ENTRY;
struct _KLDR_DATA_TABLE_ENTRY32;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _KLOCK_QUEUE_HANDLE;
struct _KNONVOLATILE_CONTEXT_POINTERS;
struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64;
struct _KSPIN_LOCK_QUEUE;
struct _KSYSTEM_TIME;
struct _KTMOBJECT_CURSOR;
struct _KUSER_SHARED_DATA;
struct _LAB;
struct _LAST_EXCEPTION_LOG;
struct _LBLOB;
struct _LDBL12;
struct _LDOUBLE;
struct _LDRP_CSLIST;
struct _LDRP_LOAD_CONTEXT;
struct _LDR_DATA_TABLE_ENTRY;
struct _LDR_DATA_TABLE_ENTRY32;
struct _LDR_DATA_TABLE_ENTRY64;
struct _LDR_DDAG_NODE;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct _LDR_FAILURE_DATA;
struct _LDR_IMPORT_CALLBACK_INFO;
struct _LDR_RESLOADER_RET;
struct _LDR_SECTION_INFO;
struct _LDR_SERVICE_TAG_RECORD;
struct _LDR_VERIFY_IMAGE_INFO;
struct _LDT_ENTRY;
struct _LEAP_SECOND_DATA;
struct _LEAP_SECOND_DATA_REGISTRY_ENTRY;
struct _LEARNING_MODE_OBJECT_INFORMATION;
struct _LINK_TRACKING_INFORMATION;
struct _LIST_ENTRY;
struct _LOAD_ASDATA_TABLE;
struct _LOAD_DLL_DEBUG_INFO;
struct _LONGDOUBLE;
struct _LONG_SIZEDARR;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct _LPC_CLIENT_DIED_MSG;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct _LUID;
struct _LUID_AND_ATTRIBUTES;
struct _LUNICODE_STRING;
struct _LUTF8_STRING;
struct _M128A;
struct _MALLOC_FREE_STRUCT;
struct _MANAGE_HOT_PATCH_LOAD_PATCH;
struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES;
struct _MANAGE_HOT_PATCH_QUERY_PATCHES;
struct _MANAGE_HOT_PATCH_UNLOAD_PATCH;
struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY;
struct _MAT2;
struct _MCA_EXCEPTION;
struct _MEMORYSTATUS;
struct _MEMORYSTATUSEX;
struct _MEMORY_BASIC_INFORMATION;
struct _MEMORY_BASIC_INFORMATION32;
struct _MEMORY_BASIC_INFORMATION64;
struct _MEMORY_COMBINE_INFORMATION;
struct _MEMORY_COMBINE_INFORMATION_EX;
struct _MEMORY_COMBINE_INFORMATION_EX2;
struct _MEMORY_ENCLAVE_IMAGE_INFORMATION;
struct _MEMORY_EXHAUSTION_INFORMATION;
struct _MEMORY_FRAME_INFORMATION;
struct _MEMORY_IMAGE_INFORMATION;
struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION;
struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION;
struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION;
struct _MEMORY_PARTITION_PAGEFILE_INFORMATION;
struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION;
struct _MEMORY_PARTITION_PAGE_RANGE;
struct _MEMORY_PARTITION_TRANSFER_INFORMATION;
struct _MEMORY_PRIORITY_INFORMATION;
struct _MEMORY_RANGE_ENTRY;
struct _MEMORY_REGION_INFORMATION;
struct _MEMORY_SCRUB_INFORMATION;
struct _MEMORY_SHARED_COMMIT_INFORMATION;
struct _MEMORY_WORKING_SET_BLOCK;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
struct _MEMORY_WORKING_SET_INFORMATION;
struct _MEM_ADDRESS_REQUIREMENTS;
struct _MENU_EVENT_RECORD;
struct _MESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA;
struct _MESSAGE_RESOURCE_ENTRY;
struct _MIDL_FORMAT_STRING;
struct _MIDL_INTERCEPTION_INFO;
struct _MIDL_INTERFACE_METHOD_PROPERTIES;
struct _MIDL_METHOD_PROPERTY;
struct _MIDL_METHOD_PROPERTY_MAP;
struct _MIDL_SERVER_INFO_;
struct _MIDL_STUBLESS_PROXY_INFO;
struct _MIDL_STUB_DESC;
struct _MIDL_STUB_MESSAGE;
struct _MIDL_SYNTAX_INFO;
struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO;
struct _MMPFN_IDENTITY;
struct _MM_ETW_PAGE_INFO;
struct _MM_ETW_PAGE_INFO_EX;
struct _MM_ETW_WORKING_SET_PFN_RUNDOWN;
struct _MODEMDEVCAPS;
struct _MODEMSETTINGS;
struct _MOUSE_EVENT_RECORD;
struct _MOVE_FILE_DATA32;
struct _MUICCENTRY;
struct _MUICCHEADER;
struct _MUILANGCFGLIST;
struct _MUILANGCFGNODE;
struct _MUILANGINFO;
struct _MUILANGLIST;
struct _MUILANGLISTNODE;
struct _MUILANGUAGES;
struct _MUIREGISTRYINFO;
struct _MUISTRINGPOOL;
struct _MULTI_TIME;
struct _MUTANT_BASIC_INFORMATION;
struct _MUTANT_OWNER_INFORMATION;
struct _MY_XML_NODE_INFO;
struct _NCRYPT_CIPHER_PADDING_INFO;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER;
struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;
struct _NCRYPT_KEY_ATTEST_PADDING_INFO;
struct _NCRYPT_KEY_BLOB_HEADER;
struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO;
struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;
struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS;
struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT;
struct _NCryptAlgorithmName;
struct _NDR64_ARRAY_ELEMENT_INFO;
struct _NDR64_ARRAY_FLAGS;
struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT;
struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT;
struct _NDR64_CONFORMANT_STRING_FORMAT;
struct _NDR64_CONF_ARRAY_HEADER_FORMAT;
struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT;
struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT;
struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT;
struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT;
struct _NDR64_CONSTANT_IID_FORMAT;
struct _NDR64_EMBEDDED_COMPLEX_FORMAT;
struct _NDR64_ENCAPSULATED_UNION;
struct _NDR64_EXPR_CONST64;
struct _NDR64_EXPR_NOOP;
struct _NDR64_EXPR_OPERATOR;
struct _NDR64_EXPR_VAR;
struct _NDR64_FIX_ARRAY_HEADER_FORMAT;
struct _NDR64_MEMPAD_FORMAT;
struct _NDR64_NON_ENCAPSULATED_UNION;
struct _NDR64_NO_REPEAT_FORMAT;
struct _NDR64_PARAM_FLAGS;
struct _NDR64_PARAM_FORMAT;
struct _NDR64_POINTER_FORMAT;
struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT;
struct _NDR64_POINTER_REPEAT_FLAGS;
struct _NDR64_PROC_FORMAT;
struct _NDR64_REPEAT_FORMAT;
struct _NDR64_SIMPLE_MEMBER_FORMAT;
struct _NDR64_SIMPLE_REGION_FORMAT;
struct _NDR64_STRING_FLAGS;
struct _NDR64_STRUCTURE_FLAGS;
struct _NDR64_STRUCTURE_HEADER_FORMAT;
struct _NDR64_UNION_ARM;
struct _NDR64_UNION_ARM_SELECTOR;
struct _NDR64_USER_MARSHAL_FORMAT;
struct _NDR_ASYNC_MESSAGE;
struct _NDR_CORRELATION_INFO;
struct _NDR_CS_ROUTINES;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct _NDR_EXPR_DESC;
struct _NDR_PROC_CONTEXT;
struct _NDR_USER_MARSHAL_INFO;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct _NETCONNECTINFOSTRUCT;
struct _NETINFOSTRUCT;
struct _NETRESOURCEA;
struct _NETRESOURCEW;
struct _NETWORK_APP_INSTANCE_EA;
struct _NLSTABLEINFO;
struct _NON_PAGED_DEBUG_INFO;
struct _NTFS_STATISTICS;
struct _NTFS_STATISTICS_EX;
struct _NT_TIB;
struct _NT_TIB32;
struct _NT_TIB64;
struct _NUMA_NODE_RELATIONSHIP;
struct _NV_MEMORY_RANGE;
struct _OBJECTID;
struct _OBJECT_ATTRIBUTES;
struct _OBJECT_ATTRIBUTES32;
struct _OBJECT_ATTRIBUTES64;
struct _OBJECT_BASIC_INFORMATION;
struct _OBJECT_DIRECTORY_INFORMATION;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct _OBJECT_NAME_INFORMATION;
struct _OBJECT_TYPES_INFORMATION;
struct _OBJECT_TYPE_INFORMATION;
struct _OBJECT_TYPE_LIST;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct _OCSP_BASIC_RESPONSE_INFO;
struct _OCSP_BASIC_REVOKED_INFO;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
struct _OCSP_CERT_ID;
struct _OCSP_REQUEST_ENTRY;
struct _OCSP_REQUEST_INFO;
struct _OCSP_RESPONSE_INFO;
struct _OCSP_SIGNATURE_INFO;
struct _OCSP_SIGNED_REQUEST_INFO;
struct _OFSTRUCT;
struct _OLESTREAM;
struct _OLESTREAMVTBL;
struct _OPERATION_END_PARAMETERS;
struct _OPERATION_START_PARAMETERS;
struct _OSVERSIONINFOA;
struct _OSVERSIONINFOEX2A;
struct _OSVERSIONINFOEX2W;
struct _OSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW;
struct _OSVERSIONINFOW;
struct _OUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _OVERLAPPED;
struct _OVERLAPPED_ENTRY;
struct _PACKEDEVENTINFO;
struct _PAGEDIR_INFORMATION;
struct _PAGE_PRIORITY_INFORMATION;
struct _PARSE_MESSAGE_CONTEXT;
struct _PATHNAME_BUFFER;
struct _PEB;
struct _PEBS_DS_SAVE_AREA;
struct _PEB_LDR_DATA;
struct _PERFORMANCE_DATA;
struct _PHYSICAL_CHANNEL_RUN;
struct _PKCS12_PBES2_EXPORT_PARAMS;
struct _PLEX_READ_DATA_REQUEST;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct _PLUGPLAY_EVENT_BLOCK;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PMD;
struct _POINTFLOAT;
struct _POINTL;
struct _POOLED_USAGE_AND_LIMITS;
struct _PORT_DATA_ENTRY;
struct _PORT_DATA_INFORMATION;
struct _PORT_MESSAGE;
struct _PORT_VIEW;
struct _POWER_IDLE_RESILIENCY;
struct _POWER_MONITOR_INVOCATION;
struct _POWER_PLATFORM_INFORMATION;
struct _POWER_SESSION_CONNECT;
struct _POWER_SESSION_RIT_STATE;
struct _POWER_SESSION_TIMEOUTS;
struct _POWER_SESSION_WINLOGON;
struct _POWER_THROTTLING_PROCESS_STATE;
struct _POWER_THROTTLING_THREAD_STATE;
struct _POWER_USER_PRESENCE;
struct _PO_SPR_ACTIVE_SESSION_DATA;
struct _PO_WAKE_SOURCE_DEVICE;
struct _PO_WAKE_SOURCE_FIXED;
struct _PO_WAKE_SOURCE_HEADER;
struct _PO_WAKE_SOURCE_HISTORY;
struct _PO_WAKE_SOURCE_INFO;
struct _PO_WAKE_SOURCE_INTERNAL;
struct _PO_WAKE_SOURCE_TIMER;
struct _PREFIX_TABLE;
struct _PREFIX_TABLE_ENTRY;
struct _PRIVILEGE_SET;
struct _PRIVKEYVER3;
struct _PROCESSOR_GROUP_INFO;
struct _PROCESSOR_IDLE_STATE;
struct _PROCESSOR_IDLE_STATES;
struct _PROCESSOR_NUMBER;
struct _PROCESSOR_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_PROFILE_CONTROL_AREA;
struct _PROCESSOR_RELATIONSHIP;
struct _PROCESS_ACCESS_TOKEN;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_BASIC_INFORMATION64;
struct _PROCESS_CHILD_PROCESS_INFORMATION;
struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION;
struct _PROCESS_COMMIT_RELEASE_INFORMATION;
struct _PROCESS_CYCLE_TIME_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct _PROCESS_DISK_COUNTERS;
struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION;
struct _PROCESS_ENERGY_TRACKING_STATE;
struct _PROCESS_ENERGY_VALUES;
struct _PROCESS_ENERGY_VALUES_EXTENSION;
struct _PROCESS_EXCEPTION_PORT;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct _PROCESS_EXTENDED_ENERGY_VALUES;
struct _PROCESS_FAULT_INFORMATION;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct _PROCESS_HANDLE_INFORMATION;
struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION;
struct _PROCESS_HANDLE_TABLE_ENTRY_INFO;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _PROCESS_HEAP_ENTRY;
struct _PROCESS_HEAP_INFORMATION;
struct _PROCESS_INFORMATION;
struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION;
struct _PROCESS_JOB_MEMORY_INFO;
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION;
struct _PROCESS_LEAP_SECOND_INFO;
struct _PROCESS_LEAP_SECOND_INFORMATION;
struct _PROCESS_MEMORY_EXHAUSTION_INFO;
struct _PROCESS_MITIGATION_ASLR_POLICY;
struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY;
struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct _PROCESS_MITIGATION_DEP_POLICY;
struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY;
struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct _PROCESS_MITIGATION_POLICY_INFORMATION;
struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY;
struct _PROCESS_POWER_THROTTLING_STATE;
struct _PROCESS_PRIORITY_CLASS;
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
struct _PROCESS_SECURITY_DOMAIN_INFORMATION;
struct _PROCESS_SESSION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX;
struct _PROCESS_TELEMETRY_ID_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
struct _PROCESS_UPTIME_INFORMATION;
struct _PROCESS_WAKE_INFORMATION;
struct _PROCESS_WINDOW_INFORMATION;
struct _PROCESS_WORKING_SET_CONTROL;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _PROC_THREAD_ATTRIBUTE_LIST;
struct _PROV_ENUMALGS;
struct _PROV_ENUMALGS_EX;
struct _PSFEATURE_CUSTPAPER;
struct _PSFEATURE_OUTPUT;
struct _PSINJECTDATA;
struct _PS_ATTRIBUTE;
struct _PS_ATTRIBUTE_LIST;
struct _PS_BNO_ISOLATION_PARAMETERS;
struct _PS_CPU_QUOTA_QUERY_ENTRY;
struct _PS_CPU_QUOTA_QUERY_INFORMATION;
struct _PS_CPU_QUOTA_SET_INFORMATION;
struct _PS_CREATE_INFO;
struct _PS_MEMORY_RESERVE;
struct _PS_MITIGATION_AUDIT_OPTIONS_MAP;
struct _PS_MITIGATION_OPTIONS_MAP;
struct _PS_PKG_CLAIM;
struct _PS_PROTECTION;
struct _PS_STD_HANDLE_INFO;
struct _PS_SYSTEM_DLL_INIT_BLOCK;
struct _PUBKEY;
struct _PUBKEYVER3;
struct _PUBLICKEYSTRUC;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _QUAD;
struct _QUERY_BAD_RANGES_INPUT;
struct _QUERY_BAD_RANGES_INPUT_RANGE;
struct _QUERY_BAD_RANGES_OUTPUT;
struct _QUERY_BAD_RANGES_OUTPUT_RANGE;
struct _QUERY_FILE_LAYOUT_INPUT;
struct _QUERY_FILE_LAYOUT_OUTPUT;
struct _QUERY_PERFORMANCE_COUNTER_FLAGS;
struct _QUERY_SERVICE_CONFIGA;
struct _QUERY_SERVICE_CONFIGW;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _QUERY_STORAGE_RESERVE_INPUT;
struct _QUERY_STORAGE_RESERVE_OUTPUT;
struct _QUOTA_LIMITS;
struct _QUOTA_LIMITS_EX;
struct _RASTERIZER_STATUS;
struct _RC_CONFIG;
struct _RDR_CALLOUT_STATE;
struct _REARRANGE_FILE_DATA;
struct _REARRANGE_FILE_DATA32;
struct _REASON_BUFFER;
struct _REASON_CONTEXT;
struct _RECTL;
struct _REDIRECTION_DESCRIPTOR;
struct _REDIRECTION_FUNCTION_DESCRIPTOR;
struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER;
struct _REFS_DEALLOCATE_RANGES_RANGE;
struct _REFS_SMR_VOLUME_GC_PARAMETERS;
struct _REFS_SMR_VOLUME_INFO_OUTPUT;
struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER;
struct _REG_NOTIFY_INFORMATION;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
struct _REMOTE_NAME_INFOA;
struct _REMOTE_NAME_INFOW;
struct _REMOTE_PORT_VIEW;
struct _REMSECURITY_ATTRIBUTES;
struct _REPAIR_COPIES_INPUT;
struct _REPAIR_COPIES_OUTPUT;
struct _REPAIR_STORAGE_RESERVE_INPUT;
struct _REPARSE_DATA_BUFFER;
struct _REPARSE_DATA_BUFFER_EX;
struct _REPARSE_GUID_DATA_BUFFER;
struct _REPARSE_INDEX_KEY;
struct _REPARSE_POINT_INFORMATION;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct _RESUME_PERFORMANCE;
struct _RETRIEVAL_POINTER_BASE;
struct _RGNDATA;
struct _RGNDATAHEADER;
struct _RIP_INFO;
struct _ROOT_INFO_LUID;
struct _RPC_ASYNC_STATE;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
struct _RPC_BINDING_VECTOR;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
struct _RPC_CLIENT_INTERFACE;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
struct _RPC_IF_ID;
struct _RPC_MESSAGE;
struct _RPC_POLICY;
struct _RPC_PROTSEQ_ENDPOINT;
struct _RPC_PROTSEQ_VECTORA;
struct _RPC_PROTSEQ_VECTORW;
struct _RPC_SECURITY_QOS;
struct _RPC_SECURITY_QOS_V2_A;
struct _RPC_SECURITY_QOS_V2_W;
struct _RPC_SECURITY_QOS_V3_A;
struct _RPC_SECURITY_QOS_V3_W;
struct _RPC_SECURITY_QOS_V4_A;
struct _RPC_SECURITY_QOS_V4_W;
struct _RPC_SECURITY_QOS_V5_A;
struct _RPC_SECURITY_QOS_V5_W;
struct _RPC_SEC_CONTEXT_KEY_INFO;
struct _RPC_SERVER_INTERFACE;
struct _RPC_SYNTAX_IDENTIFIER;
struct _RPC_TRANSFER_SYNTAX;
struct _RPC_VERSION;
struct _RSAPUBKEY;
struct _RTLP_CURDIR_REF;
struct _RTLP_HEAP_SERIALIZED_MAPPING;
struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER;
struct _RTLP_HEAP_TAGGING_INFO;
struct _RTLP_PROCESS_REFLECTION_CONTEXT;
struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION;
struct _RTLP_TAG_INFO;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct _RTL_AVL_TABLE;
struct _RTL_AVL_TREE;
struct _RTL_BACKOFF;
struct _RTL_BALANCED_LINKS;
struct _RTL_BALANCED_NODE;
struct _RTL_BARRIER;
struct _RTL_BITMAP;
struct _RTL_BITMAP_EX;
struct _RTL_BITMAP_RUN;
struct _RTL_BSD_ITEM;
struct _RTL_BUFFER;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct _RTL_CIRCULAR_LIST_HEAD;
struct _RTL_CONDITION_VARIABLE;
struct _RTL_CRITICAL_SECTION;
struct _RTL_CRITICAL_SECTION32;
struct _RTL_CRITICAL_SECTION64;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct _RTL_DEBUG_INFORMATION;
struct _RTL_DEBUG_INFORMATION32;
struct _RTL_DISK_SPACE_INFO;
struct _RTL_DISK_SPEED_INFO;
struct _RTL_DISK_WRITE_CONSTRAINT_INFO;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_DYNAMIC_HASH_TABLE;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _RTL_GENERIC_TABLE;
struct _RTL_HANDLE_TABLE;
struct _RTL_HANDLE_TABLE_ENTRY;
struct _RTL_HEAP_ENTRY;
struct _RTL_HEAP_INFORMATION;
struct _RTL_HEAP_MEMORY_LIMIT_DATA;
struct _RTL_HEAP_MEMORY_LIMIT_INFO;
struct _RTL_HEAP_PARAMETERS;
struct _RTL_HEAP_STACK_CONTROL;
struct _RTL_HEAP_STACK_QUERY;
struct _RTL_HEAP_TAG;
struct _RTL_HEAP_TAG_INFO;
struct _RTL_HEAP_WALK_ENTRY;
struct _RTL_IMAGE_MITIGATION_ASLR_POLICY;
struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY;
struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct _RTL_IMAGE_MITIGATION_DEP_POLICY;
struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY;
struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY;
struct _RTL_IMAGE_MITIGATION_HEAP_POLICY;
struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY;
struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY;
struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _RTL_IMAGE_POLICY_METADATA;
struct _RTL_LFG_RNG_STATE;
struct _RTL_MODULE_BASIC_INFO;
struct _RTL_MODULE_EXTENDED_INFO;
struct _RTL_PERTHREAD_CURDIR;
struct _RTL_PHYSICAL_MEMORY_INFO;
struct _RTL_PROCESS_BACKTRACES;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct _RTL_PROCESS_LOCKS;
struct _RTL_PROCESS_LOCK_INFORMATION;
struct _RTL_PROCESS_MODULES;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _RTL_PROTECTED_ACCESS;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS;
struct _RTL_QUERY_REGISTRY_TABLE;
struct _RTL_RB_TREE;
struct _RTL_RELATIVE_NAME_U;
struct _RTL_RESOURCE;
struct _RTL_RETPOLINE_BINARY_INFO;
struct _RTL_RETPOLINE_RELOCATION_INDEX;
struct _RTL_RETPOLINE_ROUTINES;
struct _RTL_RVA_LIST;
struct _RTL_RVA_LIST_ITERATOR;
struct _RTL_RXACT_CONTEXT;
struct _RTL_RXACT_LOG;
struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE;
struct _RTL_SEGMENT_HEAP_PARAMETERS;
struct _RTL_SPARSE_BITMAP_CTX;
struct _RTL_SPARSE_BITMAP_PARAMETER;
struct _RTL_SPARSE_BITMAP_RANGE;
struct _RTL_SPARSE_BITMAP_RUN;
struct _RTL_SPLAY_LINKS;
struct _RTL_SRWLOCK;
struct _RTL_STACK_CONTEXT;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _RTL_TIME_ZONE_INFORMATION;
struct _RTL_TRACE_BLOCK;
struct _RTL_TRACE_DATABASE;
struct _RTL_TRACE_ENUMERATE;
struct _RTL_UMS_COMPLETION_LIST;
struct _RTL_UMS_CONTEXT;
struct _RTL_UMS_SCHEDULER_STARTUP_INFO;
struct _RTL_UNICODE_STRING_BUFFER;
struct _RTL_UNLOAD_EVENT_TRACE;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct _RTL_UNLOAD_EVENT_TRACE64;
struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS;
struct _RTL_USER_PROCESS_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _RTL_WORK_ON_BEHALF_TICKET_EX;
struct _RemotableHandle;
struct _SCHANNEL_ALG;
struct _SCONTEXT_QUEUE;
struct _SCOPE_TABLE_AMD64;
struct _SCOPE_TABLE_ARM;
struct _SCOPE_TABLE_ARM64;
struct _SCRUB_DATA_INPUT;
struct _SCRUB_DATA_OUTPUT;
struct _SCRUB_PARITY_EXTENT;
struct _SCRUB_PARITY_EXTENT_DATA;
struct _SC_ACTION;
struct _SC_NOTIFICATION_REGISTRATION;
struct _SD_CHANGE_MACHINE_SID_INPUT;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
struct _SD_ENUM_SDS_ENTRY;
struct _SD_ENUM_SDS_INPUT;
struct _SD_ENUM_SDS_OUTPUT;
struct _SD_GLOBAL_CHANGE_INPUT;
struct _SD_GLOBAL_CHANGE_OUTPUT;
struct _SD_QUERY_STATS_INPUT;
struct _SD_QUERY_STATS_OUTPUT;
struct _SECTIONBASICINFO;
struct _SECTION_IMAGE_INFORMATION;
struct _SECTION_IMAGE_INFORMATION32;
struct _SECTION_IMAGE_INFORMATION64;
struct _SECTION_INTERNAL_IMAGE_INFORMATION;
struct _SECURITY_ATTRIBUTES;
struct _SECURITY_CAPABILITIES;
struct _SECURITY_DESCRIPTOR;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _SECURITY_OBJECT_AI_PARAMS;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _SECURITY_SEED_AND_LENGTH;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION;
struct _SEMAPHORE_BASIC_INFORMATION;
struct _SERVERSILO_BASIC_INFORMATION;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct _SERVICE_DESCRIPTIONA;
struct _SERVICE_DESCRIPTIONW;
struct _SERVICE_FAILURE_ACTIONSA;
struct _SERVICE_FAILURE_ACTIONSW;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
struct _SERVICE_LAUNCH_PROTECTED_INFO;
struct _SERVICE_NOTIFY_1;
struct _SERVICE_NOTIFY_2A;
struct _SERVICE_NOTIFY_2W;
struct _SERVICE_PREFERRED_NODE_INFO;
struct _SERVICE_PRESHUTDOWN_INFO;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct _SERVICE_SID_INFO;
struct _SERVICE_START_REASON;
struct _SERVICE_STATUS;
struct _SERVICE_STATUS_PROCESS;
struct _SERVICE_TABLE_ENTRYA;
struct _SERVICE_TABLE_ENTRYW;
struct _SERVICE_TIMECHANGE_INFO;
struct _SERVICE_TRIGGER;
struct _SERVICE_TRIGGER_INFO;
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;
struct _SETJMP_FLOAT128;
struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT;
struct _SET_PURGE_FAILURE_MODE_INPUT;
struct _SE_ACCESS_REPLY;
struct _SE_ACCESS_REQUEST;
struct _SE_AUDIT_INFO;
struct _SE_IMPERSONATION_STATE;
struct _SE_LEARNING_MODE_USER_OBJECT_DATA;
struct _SE_PACKAGE_CAPABILITY_INFO;
struct _SE_SECURITY_DESCRIPTOR;
struct _SE_SET_FILE_CACHE_INFORMATION;
struct _SE_TOKEN_USER;
struct _SHARED_VIRTUAL_DISK_SUPPORT;
struct _SHELLDETAILS;
struct _SHITEMID;
struct _SHORT_SIZEDARR;
struct _SHRINK_VOLUME_INFORMATION;
struct _SHUFFLE_FILE_DATA;
struct _SID;
struct _SID_AND_ATTRIBUTES;
struct _SID_AND_ATTRIBUTES_HASH;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SILOOBJECT_BASIC_INFORMATION;
struct _SILOOBJECT_ROOT_DIRECTORY;
struct _SILO_USER_SHARED_DATA;
struct _SINGLE_LIST_ENTRY;
struct _SINGLE_LIST_ENTRY32;
struct _SI_COPYFILE;
struct _SLIST_ENTRY;
struct _SL_APPX_CACHE;
struct _SL_APPX_CACHE_VALUE_DESCRIPTOR;
struct _SL_HWID_DEVICE_INFO;
struct _SL_KMEM_CACHE;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SMALL_RECT;
struct _SPARSE_OVERALLOCATE_DATA;
struct _SRP_ENTERPRISE_CONTEXT;
struct _SSL_ECCKEY_BLOB;
struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _STARTUPINFOA;
struct _STARTUPINFOEXA;
struct _STARTUPINFOEXW;
struct _STARTUPINFOW;
struct _STGMEDIUM_UNION;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
struct _STORAGE_RESERVE_AREA_DEFINITION;
struct _STORAGE_RESERVE_AREA_INFO;
struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER;
struct _STREAMS_QUERY_ID_OUTPUT_BUFFER;
struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER;
struct _STREAM_EXTENT_ENTRY;
struct _STREAM_INFORMATION_ENTRY;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass;
struct _STREAM_LAYOUT_ENTRY;
struct _STRING;
struct _STRING32;
struct _STRING64;
struct _STRRET;
struct _SUBJECT;
struct _SUPPORTED_OS_INFO;
struct _SYSDBG_BUS_DATA;
struct _SYSDBG_CONTROL_SPACE;
struct _SYSDBG_IO_SPACE;
struct _SYSDBG_LIVEDUMP_CONTROL;
struct _SYSDBG_MSR;
struct _SYSDBG_PHYSICAL;
struct _SYSDBG_TRIAGE_DUMP;
struct _SYSDBG_VIRTUAL;
struct _SYSTEMTIME;
struct _SYSTEM_ACCESS_FILTER_ACE;
struct _SYSTEM_ACPI_AUDIT_INFORMATION;
struct _SYSTEM_ACTIVITY_MODERATION_INFO;
struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS;
struct _SYSTEM_ALARM_ACE;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE;
struct _SYSTEM_AUDIT_ACE;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_BASIC_INFORMATION;
struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _SYSTEM_BIGPOOL_INFORMATION;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1;
struct _SYSTEM_BOOT_GRAPHICS_INFORMATION;
struct _SYSTEM_BOOT_LOGO_INFORMATION;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION;
struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION;
struct _SYSTEM_CONSOLE_INFORMATION;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
struct _SYSTEM_CPU_SET_INFORMATION;
struct _SYSTEM_CPU_SET_TAG_INFORMATION;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct _SYSTEM_DEVICE_DATA_INFORMATION;
struct _SYSTEM_DEVICE_INFORMATION;
struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION;
struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION;
struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION;
struct _SYSTEM_ENTROPY_TIMING_INFORMATION;
struct _SYSTEM_ERROR_PORT_TIMEOUTS;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct _SYSTEM_FILECACHE_INFORMATION;
struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _SYSTEM_FLAGS_INFORMATION;
struct _SYSTEM_FLUSH_INFORMATION;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE;
struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION;
struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct _SYSTEM_INFO;
struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION;
struct _SYSTEM_INTERRUPT_INFORMATION;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT;
struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_FLAGS;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX;
struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION;
struct _SYSTEM_LEAP_SECOND_INFORMATION;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct _SYSTEM_LOOKASIDE_INFORMATION;
struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct _SYSTEM_MANUFACTURING_INFORMATION;
struct _SYSTEM_MEMORY_CHANNEL_INFORMATION;
struct _SYSTEM_MEMORY_INFORMATION;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION;
struct _SYSTEM_MEMORY_USAGE_INFORMATION;
struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE;
struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER;
struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT;
struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT;
struct _SYSTEM_NUMA_INFORMATION;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct _SYSTEM_OBJECT_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION_EX;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION;
struct _SYSTEM_PLATFORM_BINARY_INFORMATION;
struct _SYSTEM_POLICY_INFORMATION;
struct _SYSTEM_POOLTAG;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _SYSTEM_POOL_ENTRY;
struct _SYSTEM_POOL_INFORMATION;
struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION;
struct _SYSTEM_POWER_INFORMATION;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _SYSTEM_POWER_POLICY;
struct _SYSTEM_POWER_STATE_CONTEXT;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _SYSTEM_POWER_STATUS;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
struct _SYSTEM_PREFETCH_STATS;
struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION;
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;
struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_POLICY_INFORMATION;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct _SYSTEM_PROCESS_INFORMATION;
struct _SYSTEM_PROCESS_INFORMATION_EXTENSION;
struct _SYSTEM_PROCESS_TRUST_LABEL_ACE;
struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE;
struct _SYSTEM_ROOT_SILO_INFORMATION;
struct _SYSTEM_SCOPED_POLICY_ID_ACE;
struct _SYSTEM_SECUREBOOT_INFORMATION;
struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION;
struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION;
struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION;
struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION;
struct _SYSTEM_SESSION_BIGPOOL_INFORMATION;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE;
struct _SYSTEM_SINGLE_MODULE_INFORMATION;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _SYSTEM_SPECULATION_CONTROL_INFORMATION;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _SYSTEM_TPM_INFORMATION;
struct _SYSTEM_VA_LIST_INFORMATION;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct _SYSTEM_VERIFIER_ISSUE;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
struct _SYSTEM_VHD_BOOT_INFORMATION;
struct _SYSTEM_VSM_PROTECTION_INFORMATION;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct _SYSTEM_WORKINGSET_ENTRY;
struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION;
struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION;
struct _SYS_EXCEPTION_RECORD;
struct _SecPkgContext_IssuerListInfoEx;
struct _T2_SET_PARAMETERS_V0;
struct _TAPE_CREATE_PARTITION;
struct _TAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION;
struct _TAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION;
struct _TAPE_WMI_OPERATIONS;
struct _TAPE_WRITE_MARKS;
struct _TEB;
struct _TEB_ACTIVE_FRAME;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
struct _TEB_ACTIVE_FRAME_EX;
struct _THREAD_BASIC_INFORMATION;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct _THREAD_ENERGY_VALUES;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _THREAD_NAME_INFORMATION;
struct _THREAD_PERFORMANCE_DATA;
struct _THREAD_POWER_THROTTLING_STATE;
struct _THREAD_PROFILING_INFORMATION;
struct _THREAD_TEB_INFORMATION;
struct _THREAD_TLS_INFORMATION;
struct _THREAD_UMS_INFORMATION;
struct _TIMER_BASIC_INFORMATION;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
struct _TIME_FIELDS;
struct _TIME_ZONE_INFORMATION;
struct _TOKEN_ACCESS_INFORMATION;
struct _TOKEN_APPCONTAINER_INFORMATION;
struct _TOKEN_AUDIT_POLICY;
struct _TOKEN_BNO_ISOLATION_INFORMATION;
struct _TOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL;
struct _TOKEN_DEVICE_CLAIMS;
struct _TOKEN_ELEVATION;
struct _TOKEN_GROUPS;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _TOKEN_LINKED_TOKEN;
struct _TOKEN_MANDATORY_LABEL;
struct _TOKEN_MANDATORY_POLICY;
struct _TOKEN_ORIGIN;
struct _TOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES;
struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION;
struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION;
struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _TOKEN_SECURITY_ATTRIBUTE_V1;
struct _TOKEN_SID_INFORMATION;
struct _TOKEN_SOURCE;
struct _TOKEN_STATISTICS;
struct _TOKEN_USER;
struct _TOKEN_USER_CLAIMS;
struct _TPP_THREAD_DATA_CALLBACK;
struct _TP_ALPC;
struct _TP_CALLBACK_ENVIRON_V3;
struct _TP_CALLBACK_INSTANCE;
struct _TP_CLEANUP_GROUP;
struct _TP_DEBUG_FREE_INFO;
struct _TP_DIRECT;
struct _TP_IO;
struct _TP_JOB;
struct _TP_POOL;
struct _TP_POOL_STACK_INFORMATION;
struct _TP_TASK;
struct _TP_TASK_CALLBACKS;
struct _TP_TIMER;
struct _TP_WAIT;
struct _TP_WORK;
struct _TRACE_GUID_REGISTRATION;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct _TRANSACTION_BIND_INFORMATION;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_LIST_ENTRY;
struct _TRANSACTION_LIST_INFORMATION;
struct _TRANSACTION_NOTIFICATION;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _TRIVERTEX;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _TXFS_LIST_TRANSACTIONS;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _TXFS_MODIFY_RM;
struct _TXFS_QUERY_RM_INFORMATION;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _TXFS_SAVEPOINT_INFORMATION;
struct _TXFS_START_RM_INFORMATION;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct _TypeDescriptor;
struct _UMS_CREATE_THREAD_ATTRIBUTES;
struct _UMS_SCHEDULER_STARTUP_INFO;
struct _UMS_SYSTEM_THREAD_INFORMATION;
struct _UNICODE_PREFIX_TABLE;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _UNICODE_STRING;
struct _UNIQUE_PROCESS_INFORMATION;
struct _UNIVERSAL_NAME_INFOA;
struct _UNIVERSAL_NAME_INFOW;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _UNWIND_HISTORY_TABLE;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct _UNWIND_INFO;
struct _USER_MARSHAL_CB;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
struct _UUID_VECTOR;
struct _VARIABLE_NAME;
struct _VARIABLE_NAME_AND_VALUE;
struct _VCN_RANGE_INPUT_BUFFER;
struct _VIDEOPARAMETERS;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX;
struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT;
struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT;
struct _VIRTUAL_STORAGE_TYPE;
struct _VM_COUNTERS;
struct _VM_COUNTERS_EX;
struct _VM_COUNTERS_EX2;
struct _VOLUME_REFS_INFO_BUFFER;
struct _WAKE_TIMER_INFO;
struct _WGLSWAP;
struct _WIM_PROVIDER_ADD_OVERLAY_INPUT;
struct _WIM_PROVIDER_CONTROL_INTEGRITY;
struct _WIM_PROVIDER_EXTERNAL_INFO;
struct _WIM_PROVIDER_INTEGRITY_STATUS;
struct _WIM_PROVIDER_OVERLAY_ENTRY;
struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT;
struct _WIM_PROVIDER_START_INTEGRITY;
struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT;
struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT;
struct _WIN32K_SYSCALL_FILTER;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _WIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW;
struct _WIN32_FIND_STREAM_DATA;
struct _WIN32_MEMORY_RANGE_ENTRY;
struct _WIN32_STREAM_ID;
struct _WINDOWS_OS_OPTIONS;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _WNF_DELIVERY_DESCRIPTOR;
struct _WNF_STATE_NAME;
struct _WNF_TYPE_ID;
struct _WNF_USER_SUBSCRIPTION;
struct _WOF_EXTERNAL_FILE_ID;
struct _WOF_EXTERNAL_INFO;
struct _WOF_VERSION_INFO;
struct _WORD_BLOB;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct _WORKER_FACTORY_DEFERRED_WORK;
struct _WOW64_ARCHITECTURE_INFORMATION;
struct _WOW64_CONTEXT;
struct _WOW64_CPUAREA_INFO;
struct _WOW64_DESCRIPTOR_TABLE_ENTRY;
struct _WOW64_FLOATING_SAVE_AREA;
struct _WOW64_LDT_ENTRY;
struct _WPP_TRACE_CONTROL_BLOCK;
struct _WPP_WIN2K_CONTROL_BLOCK;
struct _WRITE_USN_REASON_INPUT;
struct _WinrtTypeSerializationInfo___x_Windows_CData_CXml_CDom_CIXmlDocument_MIDL_TYPE_FORMAT_STRING;
struct _Wx86TIB;
struct _Wx86ThreadState;
struct _X86_CALL_FRAME;
struct _X86_NT5_CONTEXT;
struct _XMIT_ROUTINE_QUINTUPLE;
struct _XML_NODE_INFO;
struct _XSAVE_AREA;
struct _XSAVE_AREA_HEADER;
struct _XSAVE_CET_U_FORMAT;
struct _XSAVE_FEATURE;
struct _XSAVE_FORMAT;
struct _XSAVE_POLICY;
struct _XSAVE_SUPPORTED_CPU;
struct _XSAVE_VENDOR;
struct _XSAVE_VENDORS;
struct _XSTATE_CONFIGURATION;
struct _XSTATE_CONTEXT;
struct _XSTATE_FEATURE;
struct _ZONEATTRIBUTES;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
struct __GENERIC_BINDING_INFO;
struct __MIDL___MIDL_itf_dimm_0000_0000_0012;
struct __MIDL___MIDL_itf_dimm_0000_0000_0014;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
struct __NCRYPT_KEY_ACCESS_POLICY_BLOB;
struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;
struct __NCRYPT_PCP_RAW_POLICYDIGEST;
struct __NCRYPT_PCP_TPM_FW_VERSION_INFO;
struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;
struct __NCRYPT_SUPPORTED_LENGTHS;
struct __NCRYPT_UI_POLICY;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct __WIL_RTL_SRWLOCK;
struct __WIL__WNF_STATE_NAME;
struct __WIL__WNF_TYPE_ID;
struct __WIL__WNF_USER_SUBSCRIPTION;
struct __WilFeatureTraits_Feature_MSRC39592_12749998;
struct __WilFeatureTraits_Feature_MSRC39805_13013422;
struct __WilFeatureTraits_Feature_MSRC41263_14085975;
struct __WilFeatureTraits_Feature_MSRC41449_14282720;
struct __WilFeatureTraits_Feature_MSRC44445_16718509;
struct __WilFeatureTraits_Feature_MSRC45187_17440332;
struct __WilFeatureTraits_Feature_MSRC45635_17718802;
struct __WilFeatureTraits_Feature_MSRC45785_17791580;
struct __WilFeatureTraits_Feature_MSRC46037_17906251;
struct __WilFeatureTraits_Feature_MSRC46521_18338331;
struct __WilFeatureTraits_Feature_MSRC46522_18338316;
struct __WilFeatureTraits_Feature_MSRC46531_18225312;
struct __WilFeatureTraits_Feature_MSRC46712_18296196;
struct __WilFeatureTraits_Feature_MSRC46861_18388632;
struct __WilFeatureTraits_Feature_MSRC46881_18391601;
struct __WilFeatureTraits_Feature_MSRC47072_18544034;
struct __WilFeatureTraits_Feature_MSRC47097_18546487;
struct __WilFeatureTraits_Feature_MSRC47208_18734728;
struct __WilFeatureTraits_Feature_MSRC47284_18736032;
struct __WilFeatureTraits_Feature_MSRC47319_18746405;
struct __WilFeatureTraits_Feature_MSRC47359_18787260;
struct __WilFeatureTraits_Feature_MSRC47461_18851232;
struct __lc_time_data;
struct __m128d;
struct __m256d;
struct __midl_frag100_t;
struct __midl_frag105_t;
struct __midl_frag140_t;
struct __midl_frag143_t;
struct __midl_frag14_t;
struct __midl_frag151_t;
struct __midl_frag15_t;
struct __midl_frag160_t;
struct __midl_frag166_t;
struct __midl_frag167_t;
struct __midl_frag16_t;
struct __midl_frag179_t;
struct __midl_frag195_t;
struct __midl_frag200_t;
struct __midl_frag20_t;
struct __midl_frag210_t;
struct __midl_frag215_t;
struct __midl_frag219_t;
struct __midl_frag223_t;
struct __midl_frag229_t;
struct __midl_frag234_t;
struct __midl_frag236_t;
struct __midl_frag242_t;
struct __midl_frag245_t;
struct __midl_frag248_t;
struct __midl_frag250_t;
struct __midl_frag254_t;
struct __midl_frag257_t;
struct __midl_frag25_t;
struct __midl_frag260_t;
struct __midl_frag263_t;
struct __midl_frag266_t;
struct __midl_frag269_t;
struct __midl_frag271_t;
struct __midl_frag276_t;
struct __midl_frag282_t;
struct __midl_frag288_t;
struct __midl_frag293_t;
struct __midl_frag29_t;
struct __midl_frag2_t;
struct __midl_frag300_t;
struct __midl_frag307_t;
struct __midl_frag309_t;
struct __midl_frag314_t;
struct __midl_frag316_t;
struct __midl_frag318_t;
struct __midl_frag323_t;
struct __midl_frag326_t;
struct __midl_frag330_t;
struct __midl_frag334_t;
struct __midl_frag337_t;
struct __midl_frag340_t;
struct __midl_frag345_t;
struct __midl_frag349_t;
struct __midl_frag34_t;
struct __midl_frag355_t;
struct __midl_frag356_t;
struct __midl_frag358_t;
struct __midl_frag35_t;
struct __midl_frag362_t;
struct __midl_frag367_t;
struct __midl_frag369_t;
struct __midl_frag36_t;
struct __midl_frag374_t;
struct __midl_frag375_t;
struct __midl_frag376_t;
struct __midl_frag377_t;
struct __midl_frag378_t;
struct __midl_frag379_t;
struct __midl_frag37_t;
struct __midl_frag381_t;
struct __midl_frag383_t;
struct __midl_frag388_t;
struct __midl_frag389_t;
struct __midl_frag38_t;
struct __midl_frag392_t;
struct __midl_frag395_t;
struct __midl_frag396_t;
struct __midl_frag398_t;
struct __midl_frag399_t;
struct __midl_frag39_t;
struct __midl_frag400_t;
struct __midl_frag406_t;
struct __midl_frag40_t;
struct __midl_frag421_t;
struct __midl_frag429_t;
struct __midl_frag433_t;
struct __midl_frag434_t;
struct __midl_frag435_t;
struct __midl_frag436_t;
struct __midl_frag43_t;
struct __midl_frag44_t;
struct __midl_frag465_t;
struct __midl_frag481_t;
struct __midl_frag501_t;
struct __midl_frag511_t;
struct __midl_frag51_t;
struct __midl_frag52_t;
struct __midl_frag539_t;
struct __midl_frag542_t;
struct __midl_frag546_t;
struct __midl_frag552_t;
struct __midl_frag559_t;
struct __midl_frag563_t;
struct __midl_frag578_t;
struct __midl_frag57_t;
struct __midl_frag582_t;
struct __midl_frag58_t;
struct __midl_frag592_t;
struct __midl_frag59_t;
struct __midl_frag5_t;
struct __midl_frag612_t;
struct __midl_frag617_t;
struct __midl_frag622_t;
struct __midl_frag62_t;
struct __midl_frag63_t;
struct __midl_frag640_t;
struct __midl_frag64_t;
struct __midl_frag656_t;
struct __midl_frag663_t;
struct __midl_frag66_t;
struct __midl_frag679_t;
struct __midl_frag684_t;
struct __midl_frag686_t;
struct __midl_frag68_t;
struct __midl_frag690_t;
struct __midl_frag695_t;
struct __midl_frag699_t;
struct __midl_frag69_t;
struct __midl_frag6_t;
struct __midl_frag704_t;
struct __midl_frag709_t;
struct __midl_frag716_t;
struct __midl_frag725_t;
struct __midl_frag72_t;
struct __midl_frag732_t;
struct __midl_frag73_t;
struct __midl_frag741_t;
struct __midl_frag748_t;
struct __midl_frag74_t;
struct __midl_frag755_t;
struct __midl_frag79_t;
struct __midl_frag7_t;
struct __midl_frag80_t;
struct __midl_frag81_t;
struct __midl_frag85_t;
struct __midl_frag86_t;
struct __midl_frag87_t;
struct __midl_frag90_t;
struct __midl_frag91_t;
struct __midl_frag92_t;
struct __midl_frag95_t;
struct __midl_frag96_t;
struct __midl_frag97_t;
struct __midl_frag98_t;
struct __msxml6_ReferenceRemainingTypes__;
struct __s_GUID;
struct __type_info_node;
struct __vc_attributes::aggregatableAttribute;
struct __vc_attributes::appobjectAttribute;
struct __vc_attributes::async_uuidAttribute;
struct __vc_attributes::atl::aggregatesAttribute;
struct __vc_attributes::atl::com_interface_entryAttribute;
struct __vc_attributes::atl::db_accessorAttribute;
struct __vc_attributes::atl::db_columnAttribute;
struct __vc_attributes::atl::db_commandAttribute;
struct __vc_attributes::atl::db_paramAttribute;
struct __vc_attributes::atl::db_sourceAttribute;
struct __vc_attributes::atl::db_tableAttribute;
struct __vc_attributes::atl::implements_categoryAttribute;
struct __vc_attributes::atl::perf_counterAttribute;
struct __vc_attributes::atl::perf_objectAttribute;
struct __vc_attributes::atl::perfmonAttribute;
struct __vc_attributes::atl::rdxAttribute;
struct __vc_attributes::atl::registration_scriptAttribute;
struct __vc_attributes::atl::request_handlerAttribute;
struct __vc_attributes::atl::requires_categoryAttribute;
struct __vc_attributes::atl::soap_handlerAttribute;
struct __vc_attributes::atl::soap_headerAttribute;
struct __vc_attributes::atl::soap_methodAttribute;
struct __vc_attributes::atl::soap_namespaceAttribute;
struct __vc_attributes::atl::support_error_infoAttribute;
struct __vc_attributes::atl::synchronizeAttribute;
struct __vc_attributes::atl::tag_nameAttribute;
struct __vc_attributes::bindableAttribute;
struct __vc_attributes::call_asAttribute;
struct __vc_attributes::caseAttribute;
struct __vc_attributes::coclassAttribute;
struct __vc_attributes::controlAttribute;
struct __vc_attributes::cpp_quoteAttribute;
struct __vc_attributes::customAttribute;
struct __vc_attributes::defaultAttribute;
struct __vc_attributes::defaultbindAttribute;
struct __vc_attributes::defaultcollelemAttribute;
struct __vc_attributes::defaultvalueAttribute;
struct __vc_attributes::defaultvtableAttribute;
struct __vc_attributes::dispinterfaceAttribute;
struct __vc_attributes::displaybindAttribute;
struct __vc_attributes::dualAttribute;
struct __vc_attributes::emitidlAttribute;
struct __vc_attributes::entryAttribute;
struct __vc_attributes::event_receiverAttribute;
struct __vc_attributes::event_sourceAttribute;
struct __vc_attributes::exportAttribute;
struct __vc_attributes::first_isAttribute;
struct __vc_attributes::helpcontextAttribute;
struct __vc_attributes::helper_attributes::as_stringAttribute;
struct __vc_attributes::helper_attributes::attributeAttribute;
struct __vc_attributes::helper_attributes::default_valueAttribute;
struct __vc_attributes::helper_attributes::help_stringAttribute;
struct __vc_attributes::helper_attributes::multi_valueAttribute;
struct __vc_attributes::helper_attributes::notify_atlprovAttribute;
struct __vc_attributes::helper_attributes::process_earlyAttribute;
struct __vc_attributes::helper_attributes::repeatableAttribute;
struct __vc_attributes::helper_attributes::requires_valueAttribute;
struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute;
struct __vc_attributes::helper_attributes::usageAttribute;
struct __vc_attributes::helper_attributes::v1_alttypeAttribute;
struct __vc_attributes::helper_attributes::v1_earlyAttribute;
struct __vc_attributes::helper_attributes::v1_nameAttribute;
struct __vc_attributes::helpfileAttribute;
struct __vc_attributes::helpstringAttribute;
struct __vc_attributes::helpstringcontextAttribute;
struct __vc_attributes::helpstringdllAttribute;
struct __vc_attributes::hiddenAttribute;
struct __vc_attributes::hookAttribute;
struct __vc_attributes::idAttribute;
struct __vc_attributes::idl_moduleAttribute;
struct __vc_attributes::idl_quoteAttribute;
struct __vc_attributes::iid_isAttribute;
struct __vc_attributes::immediatebindAttribute;
struct __vc_attributes::implementsAttribute;
struct __vc_attributes::importAttribute;
struct __vc_attributes::importidlAttribute;
struct __vc_attributes::importlibAttribute;
struct __vc_attributes::inAttribute;
struct __vc_attributes::includeAttribute;
struct __vc_attributes::includelibAttribute;
struct __vc_attributes::last_isAttribute;
struct __vc_attributes::lcidAttribute;
struct __vc_attributes::length_isAttribute;
struct __vc_attributes::library_blockAttribute;
struct __vc_attributes::licensedAttribute;
struct __vc_attributes::localAttribute;
struct __vc_attributes::max_isAttribute;
struct __vc_attributes::moduleAttribute;
struct __vc_attributes::ms_unionAttribute;
struct __vc_attributes::no_injected_textAttribute;
struct __vc_attributes::nonbrowsableAttribute;
struct __vc_attributes::noncreatableAttribute;
struct __vc_attributes::nonextensibleAttribute;
struct __vc_attributes::objectAttribute;
struct __vc_attributes::odlAttribute;
struct __vc_attributes::oleautomationAttribute;
struct __vc_attributes::optionalAttribute;
struct __vc_attributes::outAttribute;
struct __vc_attributes::pointer_defaultAttribute;
struct __vc_attributes::pragmaAttribute;
struct __vc_attributes::progidAttribute;
struct __vc_attributes::propgetAttribute;
struct __vc_attributes::propputAttribute;
struct __vc_attributes::propputrefAttribute;
struct __vc_attributes::providerAttribute;
struct __vc_attributes::ptrAttribute;
struct __vc_attributes::publicAttribute;
struct __vc_attributes::rangeAttribute;
struct __vc_attributes::readonlyAttribute;
struct __vc_attributes::refAttribute;
struct __vc_attributes::requesteditAttribute;
struct __vc_attributes::restrictedAttribute;
struct __vc_attributes::retvalAttribute;
struct __vc_attributes::satypeAttribute;
struct __vc_attributes::size_isAttribute;
struct __vc_attributes::sourceAttribute;
struct __vc_attributes::stringAttribute;
struct __vc_attributes::switch_isAttribute;
struct __vc_attributes::switch_typeAttribute;
struct __vc_attributes::threadingAttribute;
struct __vc_attributes::transmit_asAttribute;
struct __vc_attributes::uidefaultAttribute;
struct __vc_attributes::unhookAttribute;
struct __vc_attributes::uniqueAttribute;
struct __vc_attributes::usesgetlasterrorAttribute;
struct __vc_attributes::uuidAttribute;
struct __vc_attributes::v1_enumAttribute;
struct __vc_attributes::varargAttribute;
struct __vc_attributes::versionAttribute;
struct __vc_attributes::vi_progidAttribute;
struct __vc_attributes::wire_marshalAttribute;
struct _complex;
struct _cpinfo;
struct _cpinfoexA;
struct _cpinfoexW;
struct _currencyfmtA;
struct _currencyfmtW;
struct _devicemodeA;
struct _devicemodeW;
struct _div_t;
struct _exception;
struct _heapinfo;
struct _htable<DeclElement>::_hentry<DeclElement>;
struct _htable<DeclEntity>::_hentry<DeclEntity>;
struct _htable<DeclNotation>::_hentry<DeclNotation>;
struct _iobuf;
struct _ldiv_t;
struct _msxml6_MIDL_PROC_FORMAT_STRING;
struct _msxml6_MIDL_TYPE_FORMAT_STRING;
struct _msxml6i_MIDL_PROC_FORMAT_STRING;
struct _msxml6i_MIDL_TYPE_FORMAT_STRING;
struct _nlsversioninfo;
struct _nlsversioninfoex;
struct _numberfmtA;
struct _numberfmtW;
struct _remoteMETAFILEPICT;
struct _s__CatchableType;
struct _s__CatchableTypeArray;
struct _s__RTTIBaseClassArray;
struct _s__RTTIBaseClassDescriptor2;
struct _s__RTTIClassHierarchyDescriptor;
struct _s__RTTICompleteObjectLocator2;
struct _s__ThrowInfo;
struct _stat;
struct _stat32;
struct _stat32i64;
struct _stat64;
struct _stat64i32;
struct _stati64;
struct _tagAUTHENTICATEINFO;
struct _tagBINDINFO;
struct _tagCODEBASEHOLD;
struct _tagDATAINFO;
struct _tagHIT_LOGGING_INFO;
struct _tagOLECMD;
struct _tagOLECMDTEXT;
struct _tagPROTOCOLDATA;
struct _tagPROTOCOLFILTERDATA;
struct _tagPROTOCOL_ARGUMENT;
struct _tagRemBINDINFO;
struct _tagSOFTDISTINFO;
struct _tagStartParam;
struct _tagpropertykey;
struct _userBITMAP;
struct _userCLIPFORMAT;
struct _userFLAG_STGMEDIUM;
struct _userHBITMAP;
struct _userHENHMETAFILE;
struct _userHGLOBAL;
struct _userHMETAFILE;
struct _userHMETAFILEPICT;
struct _userHPALETTE;
struct _userSTGMEDIUM;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
struct _wfinddata32_t;
struct _wfinddata32i64_t;
struct _wfinddata64_t;
struct _wfinddata64i32_t;
struct _wfinddata_t;
struct _wfinddatai64_t;
struct _wil_details_UsageSubscriptionData;
struct _windows2Edata2Exml_MIDL_PROC_FORMAT_STRING;
struct _windows2Edata2Exml_MIDL_TYPE_FORMAT_STRING;
struct _wireBRECORD;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_BSTR;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_HAVEIID;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _xml_error;
struct callstack;
struct failure_tracing;
struct failure_tracing::callstack;
struct lconv;
struct localeinfo_struct;
struct provider_info;
struct pvalueA;
struct pvalueW;
struct stat;
struct std::nothrow_t;
struct tagABORTPATH;
struct tagACCEL;
struct tagACCESSTIMEOUT;
struct tagACTCTXA;
struct tagACTCTXW;
struct tagACTCTX_SECTION_KEYED_DATA;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct tagALTTABINFO;
struct tagANIMATIONINFO;
struct tagARRAYDESC;
struct tagAUDIODESCRIPTION;
struct tagAXESLISTA;
struct tagAXESLISTW;
struct tagAXISINFOA;
struct tagAXISINFOW;
struct tagAspectInfo;
struct tagBIND_OPTS;
struct tagBIND_OPTS2;
struct tagBIND_OPTS3;
struct tagBITMAP;
struct tagBITMAPCOREHEADER;
struct tagBITMAPCOREINFO;
struct tagBITMAPFILEHEADER;
struct tagBITMAPINFO;
struct tagBITMAPINFOHEADER;
struct tagBLOB;
struct tagBSTRBLOB;
struct tagBinaryParam;
struct tagCABOOL;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCAC;
struct tagCACLIPDATA;
struct tagCACLSID;
struct tagCACY;
struct tagCADATE;
struct tagCADBL;
struct tagCADWORD;
struct tagCAFILETIME;
struct tagCAFLT;
struct tagCAH;
struct tagCAI;
struct tagCAL;
struct tagCALPOLESTR;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCANDIDATEFORM;
struct tagCANDIDATELIST;
struct tagCAPROPVARIANT;
struct tagCASCODE;
struct tagCAUB;
struct tagCAUH;
struct tagCAUI;
struct tagCAUL;
struct tagCAUUID;
struct tagCBTACTIVATESTRUCT;
struct tagCBT_CREATEWNDA;
struct tagCBT_CREATEWNDW;
struct tagCHANGEFILTERSTRUCT;
struct tagCHARSETINFO;
struct tagCIEXYZ;
struct tagCInterfaceProxyHeader;
struct tagCInterfaceProxyVtbl;
struct tagCInterfaceStubHeader;
struct tagCInterfaceStubVtbl;
struct tagCLEANLOCALSTORAGE;
struct tagCLIENTCREATESTRUCT;
struct tagCLIPDATA;
struct tagCOLORADJUSTMENT;
struct tagCOLORCORRECTPALETTE;
struct tagCOLORMATCHTOTARGET;
struct tagCOMBOBOXINFO;
struct tagCOMPAREITEMSTRUCT;
struct tagCOMPOSITIONFORM;
struct tagCONNECTDATA;
struct tagCONTROLINFO;
struct tagCOPYDATASTRUCT;
struct tagCPCInfo;
struct tagCPNode;
struct tagCREATESTRUCTA;
struct tagCREATESTRUCTW;
struct tagCSPLATFORM;
struct tagCStdPSFactoryBuffer;
struct tagCURSORINFO;
struct tagCURSORSHAPE;
struct tagCUSTDATA;
struct tagCUSTDATAITEM;
struct tagCWPRETSTRUCT;
struct tagCWPSTRUCT;
struct tagDEBUGHOOKINFO;
struct tagDEC;
struct tagDELETEITEMSTRUCT;
struct tagDESIGNVECTOR;
struct tagDIBSECTION;
struct tagDISPPARAMS;
struct tagDRAWITEMSTRUCT;
struct tagDRAWTEXTPARAMS;
struct tagDROPSTRUCT;
struct tagDVTARGETDEVICE;
struct tagDebugPropertyInfo;
struct tagDebugStackFrameDescriptor;
struct tagDetectEncodingInfo;
struct tagELEMDESC;
struct tagEMR;
struct tagEMRALPHABLEND;
struct tagEMRANGLEARC;
struct tagEMRARC;
struct tagEMRBITBLT;
struct tagEMRCREATEBRUSHINDIRECT;
struct tagEMRCREATECOLORSPACE;
struct tagEMRCREATECOLORSPACEW;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH;
struct tagEMRCREATEPALETTE;
struct tagEMRCREATEPEN;
struct tagEMRELLIPSE;
struct tagEMREOF;
struct tagEMREXCLUDECLIPRECT;
struct tagEMREXTCREATEFONTINDIRECTW;
struct tagEMREXTCREATEPEN;
struct tagEMREXTESCAPE;
struct tagEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN;
struct tagEMREXTTEXTOUTA;
struct tagEMRFILLPATH;
struct tagEMRFILLRGN;
struct tagEMRFORMAT;
struct tagEMRFRAMERGN;
struct tagEMRGDICOMMENT;
struct tagEMRGLSBOUNDEDRECORD;
struct tagEMRGLSRECORD;
struct tagEMRGRADIENTFILL;
struct tagEMRINVERTRGN;
struct tagEMRLINETO;
struct tagEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM;
struct tagEMRNAMEDESCAPE;
struct tagEMROFFSETCLIPRGN;
struct tagEMRPIXELFORMAT;
struct tagEMRPLGBLT;
struct tagEMRPOLYDRAW;
struct tagEMRPOLYDRAW16;
struct tagEMRPOLYLINE;
struct tagEMRPOLYLINE16;
struct tagEMRPOLYPOLYLINE;
struct tagEMRPOLYPOLYLINE16;
struct tagEMRPOLYTEXTOUTA;
struct tagEMRRESIZEPALETTE;
struct tagEMRRESTOREDC;
struct tagEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX;
struct tagEMRSELECTCLIPPATH;
struct tagEMRSELECTOBJECT;
struct tagEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION;
struct tagEMRSETCOLORADJUSTMENT;
struct tagEMRSETCOLORSPACE;
struct tagEMRSETDIBITSTODEVICE;
struct tagEMRSETICMPROFILE;
struct tagEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV;
struct tagEMRSETTEXTCOLOR;
struct tagEMRSETVIEWPORTEXTEX;
struct tagEMRSETVIEWPORTORGEX;
struct tagEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS;
struct tagEMRTEXT;
struct tagEMRTRANSPARENTBLT;
struct tagENHMETAHEADER;
struct tagENHMETARECORD;
struct tagENUMLOGFONTA;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXDVA;
struct tagENUMLOGFONTEXDVW;
struct tagENUMLOGFONTEXW;
struct tagENUMLOGFONTW;
struct tagENUMTEXTMETRICA;
struct tagENUMTEXTMETRICW;
struct tagENUMUILANG;
struct tagEVENTMSG;
struct tagEXCEPINFO;
struct tagEXTLOGFONTA;
struct tagEXTLOGFONTW;
struct tagEXTLOGPEN;
struct tagEXTLOGPEN32;
struct tagExtentInfo;
struct tagFILTERKEYS;
struct tagFONTDESC;
struct tagFONTSIGNATURE;
struct tagFORMATETC;
struct tagFUNCDESC;
struct tagGCP_RESULTSA;
struct tagGCP_RESULTSW;
struct tagGESTURECONFIG;
struct tagGESTUREINFO;
struct tagGESTURENOTIFYSTRUCT;
struct tagGLYPHSET;
struct tagGUITHREADINFO;
struct tagHANDLETABLE;
struct tagHARDWAREHOOKSTRUCT;
struct tagHARDWAREINPUT;
struct tagHELPINFO;
struct tagHELPWININFOA;
struct tagHELPWININFOW;
struct tagHIGHCONTRASTA;
struct tagHIGHCONTRASTW;
struct tagHW_PROFILE_INFOA;
struct tagHW_PROFILE_INFOW;
struct tagICEXYZTRIPLE;
struct tagICONMETRICSA;
struct tagICONMETRICSW;
struct tagIDLDESC;
struct tagIMECHARPOSITION;
struct tagIMEMENUITEMINFOA;
struct tagIMEMENUITEMINFOW;
struct tagINPUT;
struct tagINPUT_INJECTION_VALUE;
struct tagINPUT_MESSAGE_SOURCE;
struct tagINPUT_TRANSFORM;
struct tagINTERFACEDATA;
struct tagINTERFACEINFO;
struct tagI_RpcProxyCallbackInterface;
struct tagKBDLLHOOKSTRUCT;
struct tagKERNINGPAIR;
struct tagKEYBDINPUT;
struct tagLASTINPUTINFO;
struct tagLAYERPLANEDESCRIPTOR;
struct tagLC_ID;
struct tagLICINFO;
struct tagLOCALESIGNATURE;
struct tagLOGBRUSH;
struct tagLOGBRUSH32;
struct tagLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW;
struct tagLOGFONTA;
struct tagLOGFONTW;
struct tagLOGPALETTE;
struct tagLOGPEN;
struct tagMDICREATESTRUCTA;
struct tagMDICREATESTRUCTW;
struct tagMDINEXTMENU;
struct tagMEASUREITEMSTRUCT;
struct tagMENUBARINFO;
struct tagMENUGETOBJECTINFO;
struct tagMENUINFO;
struct tagMENUITEMINFOA;
struct tagMENUITEMINFOW;
struct tagMETAFILEPICT;
struct tagMETAHEADER;
struct tagMETARECORD;
struct tagMETHODDATA;
struct tagMIMECPINFO;
struct tagMIMECSETINFO;
struct tagMINIMIZEDMETRICS;
struct tagMINMAXINFO;
struct tagMONITORINFO;
struct tagMONITORINFOEXA;
struct tagMONITORINFOEXW;
struct tagMOUSEHOOKSTRUCT;
struct tagMOUSEHOOKSTRUCTEX;
struct tagMOUSEINPUT;
struct tagMOUSEKEYS;
struct tagMOUSEMOVEPOINT;
struct tagMSG;
struct tagMSGBOXPARAMSA;
struct tagMSGBOXPARAMSW;
struct tagMSLLHOOKSTRUCT;
struct tagMULTIKEYHELPA;
struct tagMULTIKEYHELPW;
struct tagMULTI_QI;
struct tagNCCALCSIZE_PARAMS;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW;
struct tagNEWTEXTMETRICW;
struct tagNMHDR;
struct tagNONCLIENTMETRICSA;
struct tagNONCLIENTMETRICSW;
struct tagOBJECTDESCRIPTOR;
struct tagOCPFIPARAMS;
struct tagOIFI;
struct tagOLEVERB;
struct tagOleMenuGroupWidths;
struct tagPAGERANGE;
struct tagPAGESET;
struct tagPAINTSTRUCT;
struct tagPALETTEENTRY;
struct tagPANOSE;
struct tagPARAMDATA;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
struct tagPARSEDURLA;
struct tagPARSEDURLW;
struct tagPELARRAY;
struct tagPICTDESC;
struct tagPIXELFORMATDESCRIPTOR;
struct tagPOINT;
struct tagPOINTER_DEVICE_CURSOR_INFO;
struct tagPOINTER_DEVICE_INFO;
struct tagPOINTER_DEVICE_PROPERTY;
struct tagPOINTER_INFO;
struct tagPOINTER_PEN_INFO;
struct tagPOINTER_TOUCH_INFO;
struct tagPOINTER_TYPE_INFO;
struct tagPOINTF;
struct tagPOINTFX;
struct tagPOINTS;
struct tagPOLYTEXTA;
struct tagPOLYTEXTW;
struct tagPROPBAG2;
struct tagPROPPAGEINFO;
struct tagPROPSPEC;
struct tagPROPVARIANT;
struct tagProxyFileInfo;
struct tagQACONTAINER;
struct tagQACONTROL;
struct tagQUERYCONTEXT;
struct tagRAWHID;
struct tagRAWINPUT;
struct tagRAWINPUTDEVICE;
struct tagRAWINPUTDEVICELIST;
struct tagRAWINPUTHEADER;
struct tagRAWKEYBOARD;
struct tagRAWMOUSE;
struct tagRECONVERTSTRING;
struct tagRECT;
struct tagREGISTERWORDA;
struct tagREGISTERWORDW;
struct tagRFC1766INFO;
struct tagRGBQUAD;
struct tagRGBTRIPLE;
struct tagRID_DEVICE_INFO;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO_KEYBOARD;
struct tagRID_DEVICE_INFO_MOUSE;
struct tagRPCOLEMESSAGE;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
struct tagRPC_CALL_ATTRIBUTES_V3_A;
struct tagRPC_CALL_ATTRIBUTES_V3_W;
struct tagRPC_EE_INFO_PARAM;
struct tagRPC_ERROR_ENUM_HANDLE;
struct tagRPC_EXTENDED_ERROR_INFO;
struct tagRedirectionPolicyFlags;
struct tagRemBRUSH;
struct tagRemFORMATETC;
struct tagRemHBITMAP;
struct tagRemHENHMETAFILE;
struct tagRemHGLOBAL;
struct tagRemHMETAFILEPICT;
struct tagRemHPALETTE;
struct tagRemSNB;
struct tagRemSTGMEDIUM;
struct tagSAFEARRAY;
struct tagSAFEARRAYBOUND;
struct tagSCRIPFONTINFO;
struct tagSCRIPTINFO;
struct tagSCROLLBARINFO;
struct tagSCROLLINFO;
struct tagSERIALIZEDPROPERTYVALUE;
struct tagSERIALKEYSA;
struct tagSERIALKEYSW;
struct tagSIZE;
struct tagSOLE_AUTHENTICATION_INFO;
struct tagSOLE_AUTHENTICATION_LIST;
struct tagSOLE_AUTHENTICATION_SERVICE;
struct tagSOUNDSENTRYA;
struct tagSOUNDSENTRYW;
struct tagSTATDATA;
struct tagSTATPROPSETSTG;
struct tagSTATPROPSTG;
struct tagSTATSTG;
struct tagSTGMEDIUM;
struct tagSTGOPTIONS;
struct tagSTICKYKEYS;
struct tagSTYLEBUFA;
struct tagSTYLEBUFW;
struct tagSTYLESTRUCT;
struct tagServerInformation;
struct tagStorageLayout;
struct tagTEXTMETRICA;
struct tagTEXTMETRICW;
struct tagTITLEBARINFO;
struct tagTITLEBARINFOEX;
struct tagTLIBATTR;
struct tagTOGGLEKEYS;
struct tagTOUCHINPUT;
struct tagTOUCH_HIT_TESTING_INPUT;
struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
struct tagTPMPARAMS;
struct tagTRACKMOUSEEVENT;
struct tagTTPOLYCURVE;
struct tagTTPOLYGONHEADER;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagTouchPredictionParameters;
struct tagUNICODERANGE;
struct tagUPDATELAYEREDWINDOWINFO;
struct tagUSAGE_PROPERTIES;
struct tagUSEROBJECTFLAGS;
struct tagVARDESC;
struct tagVARIANT;
struct tagVS_FIXEDFILEINFO;
struct tagVersionedStream;
struct tagWCRANGE;
struct tagWINDOWINFO;
struct tagWINDOWPLACEMENT;
struct tagWINDOWPOS;
struct tagWNDCLASSA;
struct tagWNDCLASSEXA;
struct tagWNDCLASSEXW;
struct tagWNDCLASSW;
struct tagWTSSESSION_NOTIFICATION;
struct tagXFORM;
struct tagXHR_CERT;
struct tagXHR_COOKIE;
struct threadlocaleinfostruct;
struct threadmbcinfostruct;
struct tm;
struct val_context;
struct value_entA;
struct value_entW;
struct wil::CallContextInfo;
struct wil::DiagnosticsInfo;
struct wil::FailureInfo;
struct wil::FeatureProperties;
struct wil::PaintDC;
struct wil::SelectResult;
struct wil::StagingControl;
struct wil::VariantUsage;
struct wil::WNF_CHANGE_STAMP_STRUCT;
struct wil::WindowDC;
struct wil::cotaskmem_secure_deleter;
struct wil::details::DestroyThreadPoolIo<0>;
struct wil::details::DestroyThreadPoolIo<1>;
struct wil::details::DestroyThreadPoolIo<2>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,0>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,1>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,2>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,1>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,2>;
struct wil::details::DestroyThreadPoolWait<0>;
struct wil::details::DestroyThreadPoolWait<1>;
struct wil::details::DestroyThreadPoolWait<2>;
struct wil::details::DestroyThreadPoolWork<0>;
struct wil::details::DestroyThreadPoolWork<1>;
struct wil::details::DestroyThreadPoolWork<2>;
struct wil::details::EnabledStateManager::CachedFeaturePropertyData;
struct wil::details::EnabledStateManager::CachedUsageData;
struct wil::details::EnabledStateManager::RecordCachedUsageUnderLock::__l9::Change;
struct wil::details::FeatureTestState;
struct wil::details::FeatureTraitsBase;
struct wil::details::FeatureUsageDurationData;
struct wil::details::IFailureCallback;
struct wil::details::IFunctor;
struct wil::details::IFunctorHost;
struct wil::details::RtlThreadPoolMethods;
struct wil::details::SecureZeroData;
struct wil::details::SystemThreadPoolMethods;
struct wil::details::com_unknown_deleter;
struct wil::details::empty_wnf_state;
struct wil::details::event_watcher_state;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::WindowDC),&wil::WindowDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::WindowDC,0,std::nullptr_t>;
struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,0,std::nullptr_t>;
struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t>;
struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION *,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION *),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::SelectResult),&wil::SelectResult::Close,wistd::integral_constant<unsigned __int64,0>,wil::SelectResult,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData),&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,0,std::nullptr_t>;
struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t>;
struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t>;
struct wil::details::resource_policy<wil_StagingConfig *,void (__cdecl*)(wil_StagingConfig *),&wil_FreeStagingConfig,wistd::integral_constant<unsigned __int64,0>,wil_StagingConfig *,0,std::nullptr_t>;
struct wil::details::return_type<0,long>;
struct wil::details::return_type<0,void>;
struct wil::details::return_type<1,void>;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
struct wil::details::tag_return_HRESULT;
struct wil::details::tag_return_other;
struct wil::details::tag_return_void;
struct wil::details::variable_size<1>;
struct wil::details::variable_size<2>;
struct wil::details::variable_size<4>;
struct wil::details::variable_size<8>;
struct wil::details::variable_size_mapping<enum FEATURE_CHANGE_TIME>;
struct wil::details::variable_size_mapping<enum FEATURE_ENABLED_STATE>;
struct wil::details::variable_size_mapping<enum wil::EventOptions>;
struct wil::details::variable_size_mapping<enum wil::StagingControlActions>;
struct wil::details::variable_size_mapping<enum wil::details::ReportFailureOptions>;
struct wil::details::variable_size_mapping<enum wil::details::StagingConfigurationFlags>;
struct wil::details::variable_size_mapping<enum wil::details_abi::UsageIndexesLoadOptions>;
struct wil::details::variable_size_mapping<int>;
struct wil::details::variable_size_mapping<unsigned __int64 const >;
struct wil::details::variable_size_mapping<unsigned __int64>;
struct wil::details::variable_size_mapping<unsigned int>;
struct wil::details::verify_single_flag_helper<1073741824>;
struct wil::details::verify_single_flag_helper<128>;
struct wil::details::verify_single_flag_helper<1>;
struct wil::details::verify_single_flag_helper<2147483648>;
struct wil::details::verify_single_flag_helper<2>;
struct wil::details::verify_single_flag_helper<4>;
struct wil::details::verify_single_flag_helper<64>;
struct wil::details::wnf_callback_type<wil::details::empty_wnf_state>;
struct wil::details::wnf_subscription_state_base;
struct wil::details_abi::ProcessLocalData;
struct wil::details_abi::RawUsageIndex::Header;
struct wil::details_abi::SerializedFailure;
struct wil::details_abi::SubscriptionList::Subscription;
struct wil::details_abi::ThreadLocalData;
struct wil::details_abi::ThreadLocalFailureInfo;
struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node;
struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node;
struct wil::details_abi::UsageIndexProperty;
struct wil::details_abi::UsageIndexes;
struct wil::details_abi::buffer_range;
struct wil::details_abi::heap_buffer;
struct wil::empty_deleter;
struct wil::err_failfast_policy;
struct wil::err_returncode_policy;
struct wil::function_deleter<long (__cdecl*)(void *),&NCryptFreeBuffer>;
struct wil::function_deleter<void (__cdecl*)(void *),&BCryptFreeBuffer>;
struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>;
struct wil::function_deleter<void * (__cdecl*)(void *),&GlobalFree>;
struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>;
struct wil::hlocal_secure_deleter;
struct wil::process_heap_deleter;
struct wil::unique_hglobal_locked;
struct wil::variadic_logical_or<>;
struct wil::virtualalloc_deleter;
struct wil_FeatureState;
struct wil_FeatureTestState;
struct wil_StagingConfig;
struct wil_details_FeatureProperties;
struct wil_details_FeatureTestState;
struct wil_details_FeatureUsageSRUM;
struct wil_details_FeatureVariantPropertyCache;
struct wil_details_RecordUsageResult;
struct wil_details_SetPropertyCacheUsageContext;
struct wil_details_SetPropertyFlagContext;
struct wil_details_StagingConfig;
struct wil_details_StagingConfigFeature;
struct wil_details_StagingConfigHeader;
struct wil_details_StagingConfigHeaderProperties;
struct wil_details_StagingConfigUsageTrigger;
struct wil_details_StagingConfigWnfStateName;
struct wil_details_VariantProperties;
struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
struct wistd::_Cat_base<0>;
struct wistd::_Cat_base<1>;
struct wistd::_Conjunction<>;
struct wistd::_Disjunction<>;
struct wistd::_Fun_class_base<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Fun_class_base<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Get_deleter_pointer_type<unsigned short,wil::cotaskmem_secure_deleter>;
struct wistd::_Get_deleter_pointer_type<unsigned short,wil::hlocal_secure_deleter>;
struct wistd::_Get_deleter_pointer_type<void,wil::process_heap_deleter>;
struct wistd::_Get_deleter_pointer_type<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter>;
struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>;
struct wistd::_Get_function_impl<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
struct wistd::_Get_function_impl<void __cdecl(void)>;
struct wistd::_Identity<unsigned short *>;
struct wistd::_Identity<void *>;
struct wistd::_Identity<wil::details::event_watcher_state *>;
struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *>;
struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *>;
struct wistd::_If<0,<lambda_1be4317d7b68aea1d134397100149062> *,<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::_If<0,<lambda_2f784ef15c303f2c8d3bec493a729414> *,<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::_If<0,char &,wil::details::event_watcher_state &>;
struct wistd::_If<0,wil::cotaskmem_secure_deleter,wil::cotaskmem_secure_deleter const &>;
struct wistd::_If<0,wil::hlocal_secure_deleter,wil::hlocal_secure_deleter const &>;
struct wistd::_If<0,wil::process_heap_deleter,wil::process_heap_deleter const &>;
struct wistd::_If<0,wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> const &>;
struct wistd::_Is_floating_point<double>;
struct wistd::_Is_floating_point<float>;
struct wistd::_Is_floating_point<long double>;
struct wistd::_Is_funptr<<lambda_1be4317d7b68aea1d134397100149062> *>;
struct wistd::_Is_funptr<<lambda_2f784ef15c303f2c8d3bec493a729414> *>;
struct wistd::_Is_integral<__int64>;
struct wistd::_Is_integral<bool>;
struct wistd::_Is_integral<char16_t>;
struct wistd::_Is_integral<char32_t>;
struct wistd::_Is_integral<char>;
struct wistd::_Is_integral<int>;
struct wistd::_Is_integral<long>;
struct wistd::_Is_integral<short>;
struct wistd::_Is_integral<signed char>;
struct wistd::_Is_integral<unsigned __int64>;
struct wistd::_Is_integral<unsigned char>;
struct wistd::_Is_integral<unsigned int>;
struct wistd::_Is_integral<unsigned long>;
struct wistd::_Is_integral<unsigned short>;
struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter>;
struct wistd::_Is_pointer<wil::hlocal_secure_deleter>;
struct wistd::_Is_pointer<wil::process_heap_deleter>;
struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::_Is_void<void>;
struct wistd::_Is_void<wil::details::event_watcher_state>;
struct wistd::_Nil;
struct wistd::_Wrap_int;
struct wistd::add_pointer<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::add_pointer<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::add_reference<unsigned short>;
struct wistd::add_reference<void const >;
struct wistd::add_reference<void const volatile >;
struct wistd::add_reference<void volatile >;
struct wistd::add_reference<void>;
struct wistd::add_reference<wil::details::event_watcher_state>;
struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> >;
struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >;
struct wistd::add_rvalue_reference<void const >;
struct wistd::add_rvalue_reference<void const volatile >;
struct wistd::add_rvalue_reference<void volatile >;
struct wistd::add_rvalue_reference<void>;
struct wistd::decay<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::decay<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::default_delete<wil::details::event_watcher_state>;
struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >;
struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >;
struct wistd::enable_if<0,void *>;
struct wistd::enable_if<1,void *>;
struct wistd::enable_if<1,wistd::unique_ptr<void,wil::process_heap_deleter> &>;
struct wistd::integral_constant<bool,0>;
struct wistd::integral_constant<bool,1>;
struct wistd::integral_constant<unsigned __int64,0>;
struct wistd::integral_constant<unsigned __int64,1>;
struct wistd::integral_constant<unsigned __int64,2>;
struct wistd::is_array<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::is_array<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::is_array<void>;
struct wistd::is_class<bool>;
struct wistd::is_class<int>;
struct wistd::is_class<unsigned char>;
struct wistd::is_class<unsigned short *>;
struct wistd::is_class<void *>;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter> >;
struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter> >;
struct wistd::is_convertible<void *,void *>;
struct wistd::is_empty<wil::cotaskmem_secure_deleter>;
struct wistd::is_empty<wil::hlocal_secure_deleter>;
struct wistd::is_empty<wil::process_heap_deleter>;
struct wistd::is_empty<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_function<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::is_function<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::is_lvalue_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_lvalue_reference<wil::hlocal_secure_deleter>;
struct wistd::is_lvalue_reference<wil::process_heap_deleter>;
struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_pointer<wil::cotaskmem_secure_deleter>;
struct wistd::is_pointer<wil::hlocal_secure_deleter>;
struct wistd::is_pointer<wil::process_heap_deleter>;
struct wistd::is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_reference<wil::hlocal_secure_deleter>;
struct wistd::is_reference<wil::process_heap_deleter>;
struct wistd::is_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_rvalue_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_rvalue_reference<wil::hlocal_secure_deleter>;
struct wistd::is_rvalue_reference<wil::process_heap_deleter>;
struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_same<int,int>;
struct wistd::is_same<long,long>;
struct wistd::is_same<std::nullptr_t,std::nullptr_t>;
struct wistd::is_same<void,void>;
struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::cotaskmem_secure_deleter>;
struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::hlocal_secure_deleter>;
struct wistd::is_same<wistd::default_delete<void>,wil::process_heap_deleter>;
struct wistd::is_same<wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> >,wil::process_heap_deleter>;
struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >,wil::process_heap_deleter>;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_void<wil::details::event_watcher_state>;
struct wistd::less<void>;
struct wistd::pointer_traits<wil::details::event_watcher_state *>;
struct wistd::remove_const<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::remove_const<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::remove_const<wil::cotaskmem_secure_deleter>;
struct wistd::remove_const<wil::details::event_watcher_state>;
struct wistd::remove_const<wil::hlocal_secure_deleter>;
struct wistd::remove_const<wil::process_heap_deleter>;
struct wistd::remove_const<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_cv<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::remove_cv<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::remove_cv<wil::cotaskmem_secure_deleter>;
struct wistd::remove_cv<wil::details::event_watcher_state>;
struct wistd::remove_cv<wil::hlocal_secure_deleter>;
struct wistd::remove_cv<wil::process_heap_deleter>;
struct wistd::remove_cv<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_extent<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::remove_extent<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::remove_reference<<lambda_1be4317d7b68aea1d134397100149062> &>;
struct wistd::remove_reference<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::remove_reference<<lambda_2f784ef15c303f2c8d3bec493a729414> &>;
struct wistd::remove_reference<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::remove_reference<HSTRING__ * &>;
struct wistd::remove_reference<_RTL_CRITICAL_SECTION * &>;
struct wistd::remove_reference<_RTL_CRITICAL_SECTION *>;
struct wistd::remove_reference<_RTL_SRWLOCK * &>;
struct wistd::remove_reference<_RTL_SRWLOCK *>;
struct wistd::remove_reference<bool &>;
struct wistd::remove_reference<char * &>;
struct wistd::remove_reference<char const (&)[12]>;
struct wistd::remove_reference<unsigned __int64>;
struct wistd::remove_reference<unsigned int>;
struct wistd::remove_reference<unsigned short * &>;
struct wistd::remove_reference<unsigned short *>;
struct wistd::remove_reference<void * &>;
struct wistd::remove_reference<void *>;
struct wistd::remove_reference<wil::PaintDC &>;
struct wistd::remove_reference<wil::SelectResult>;
struct wistd::remove_reference<wil::StoredFailureInfo &>;
struct wistd::remove_reference<wil::WindowDC>;
struct wistd::remove_reference<wil::cotaskmem_secure_deleter>;
struct wistd::remove_reference<wil::details::SecureZeroData>;
struct wistd::remove_reference<wil::details::event_watcher_state * &>;
struct wistd::remove_reference<wil::details_abi::SemaphoreValue &>;
struct wistd::remove_reference<wil::details_abi::heap_buffer &>;
struct wistd::remove_reference<wil::hlocal_secure_deleter>;
struct wistd::remove_reference<wil::last_error_context &>;
struct wistd::remove_reference<wil::process_heap_deleter>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil_FeatureTestState * &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> >;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> >;
struct wistd::remove_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_reference<wistd::function<void __cdecl(void)> &>;
struct wistd::remove_reference<wistd::function<void __cdecl(void)> >;
struct wistd::remove_reference<wistd::unique_ptr<void,wil::process_heap_deleter> &>;
struct wistd::remove_volatile<<lambda_1be4317d7b68aea1d134397100149062> >;
struct wistd::remove_volatile<<lambda_2f784ef15c303f2c8d3bec493a729414> >;
struct wistd::remove_volatile<wil::cotaskmem_secure_deleter>;
struct wistd::remove_volatile<wil::details::event_watcher_state>;
struct wistd::remove_volatile<wil::hlocal_secure_deleter>;
struct wistd::remove_volatile<wil::process_heap_deleter>;
struct wistd::remove_volatile<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::unary_function<wistd::_Nil,void>;

union FT;
union FormatInfo;
union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer;
union NumberingFormat::FormatInfo;
union TypeStorage;
union USN_RECORD_UNION;
union WPP_PROJECT_CONTROL_BLOCK;
union XWinRT::FakeStl::_align_type<double,8>;
union XWinRT::FakeStl::_align_type<int,4>;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
union _CLIENT_CALL_RETURN;
union _DL_EUI48;
union _ENERGY_STATE_DURATION;
union _FILE_SEGMENT_ELEMENT;
union _FOUR_PART_VERSION;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
union _IMAGE_AUX_SYMBOL;
union _IMAGE_AUX_SYMBOL_EX;
union _JOBOBJECT_ENERGY_TRACKING_STATE;
union _LARGE_INTEGER;
union _LDR_DLL_NOTIFICATION_DATA;
union _MCI_ADDR;
union _MCI_STATS;
union _MM_ETW_PAGE_EXTRA_INFO;
union _POWER_STATE;
union _PROCESS_AFFINITY_UPDATE_MODE;
union _PROCESS_LOGGING_INFORMATION;
union _PROCESS_MEMORY_ALLOCATION_MODE;
union _PROCESS_READWRITEVM_LOGGING_INFORMATION;
union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT;
union _RATE_QUOTA_LIMIT;
union _RPC_ASYNC_NOTIFICATION_INFO;
union _RTL_ELEVATION_FLAGS;
union _RTL_IMAGE_MITIGATION_POLICY;
union _RTL_RUN_ONCE;
union _RTL_TICK_LOCK;
union _RemotableHandle::__MIDL_IWinTypes_0009;
union _SE_SID;
union _SLIST_HEADER;
union _STREAM_INFORMATION_ENTRY::_StreamInformation;
union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES;
union _SYSDBG_LIVEDUMP_CONTROL_FLAGS;
union _StreamInformation;
union _TIMELINE_BITMAP;
union _ULARGE_INTEGER;
union _UNWIND_CODE;
union __MIDL_IAdviseSink_0002;
union __MIDL_IAdviseSink_0003;
union __MIDL_IOleAutomationTypes_0001;
union __MIDL_IWinTypes_0001;
union __MIDL_IWinTypes_0002;
union __MIDL_IWinTypes_0003;
union __MIDL_IWinTypes_0004;
union __MIDL_IWinTypes_0005;
union __MIDL_IWinTypes_0006;
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0008;
union __MIDL_IWinTypes_0009;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
union __MIDL___MIDL_itf_wtypes_0000_0001_0005;
union __m128;
union __m128i;
union __m256;
union __m256i;
union __m64;
union _tagFastWppEnabledFlags;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
union _userHBITMAP::__MIDL_IWinTypes_0007;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
union _userHPALETTE::__MIDL_IWinTypes_0008;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
union tagBINDPTR;
union tagCY;
union wil_details_FeaturePropertyCache;

enum ABI::Windows::Foundation::AsyncStatus;
enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags;
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
enum ACTCTX_REQUESTED_RUN_LEVEL;
enum ASSOCDATA;
enum ASSOCENUM;
enum ASSOCKEY;
enum ASSOCSTR;
enum ASTContext::ErrorType;
enum Absent;
enum AgileReferenceOptions;
enum AppendState;
enum ApplyOptimizer::VisitedMark;
enum ApplyType;
enum ArgType;
enum AsyncStatus;
enum AttrProps;
enum BCRYPT_HASH_OPERATION_TYPE;
enum BCRYPT_MULTI_OPERATION_TYPE;
enum BIT_SETTINGS_SUMMARY;
enum Base::CodebaseInstanceEnum;
enum BaseTextAppendVisitor::AppendState;
enum BooleanOp;
enum BranchType;
enum BuilderStatesEnum;
enum CAPICOM_STORE_LOCATION;
enum CI_WINDOWS_LOCKDOWN_RESTRICTION;
enum COMPARTMENT_ID;
enum CO_MARSHALING_CONTEXT_ATTRIBUTES;
enum CPTYPE;
enum CWMO_FLAGS;
enum CachedWS;
enum CertKeyType;
enum CodeGenAttrs::DerivedFlags;
enum CodeGenAttrs::InheritedFlags;
enum CodePage;
enum CodeSpace::Flags;
enum CodebaseInstanceEnum;
enum CompareFlags;
enum CompareOp;
enum CompiledIdentityConstraint::ConstraintRole;
enum ComplexContentEnum;
enum ConstraintRole;
enum ContextNodeSet::Flags;
enum DEVICE_SCALE_FACTOR;
enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS;
enum DIALOG_DPI_CHANGE_BEHAVIORS;
enum DISPLAYCONFIG_DEVICE_INFO_TYPE;
enum DISPLAYCONFIG_MODE_INFO_TYPE;
enum DISPLAYCONFIG_PIXELFORMAT;
enum DISPLAYCONFIG_ROTATION;
enum DISPLAYCONFIG_SCALING;
enum DISPLAYCONFIG_SCANLINE_ORDERING;
enum DISPLAYCONFIG_TOPOLOGY_ID;
enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;
enum DOMDocumentWrapper::DocumentProperty;
enum DOMEXCEPTION::DOMExceptionCode;
enum DOMProcessor::ProcessState;
enum DPI_AWARENESS;
enum DPI_HOSTING_BEHAVIOR;
enum DSAFIPSVERSION_ENUM;
enum DTD::REFTYPE;
enum DTDFactory::NameParseEnum;
enum DXGI_COLOR_SPACE_TYPE;
enum DXGI_FORMAT;
enum DXGI_MODE_ROTATION;
enum DXGI_MODE_SCALING;
enum DXGI_MODE_SCANLINE_ORDER;
enum DataType;
enum DateTimeFormat::XSDType;
enum DecimalFormat::ParseState;
enum DerivedFlags;
enum DocStream::EState;
enum Document::NewNodeNotifyEnum;
enum DocumentProperty;
enum ECC_CURVE_ALG_ID_ENUM;
enum ECC_CURVE_TYPE_ENUM;
enum EDIT_CONTROL_FEATURE;
enum EState;
enum ElemProps;
enum ElemType;
enum EncodeErrorAction;
enum EncodeFlags;
enum Error;
enum ErrorType;
enum EventType;
enum ExpressionCompiler::Flags;
enum FEATURE_CHANGE_TIME;
enum FEATURE_ENABLED_STATE;
enum FILETYPEATTRIBUTEFLAGS;
enum FindResult;
enum Flags;
enum FuncID;
enum FunctionLookup::ArgType;
enum FunctionLookup::FuncID;
enum HASHALGORITHM_ENUM;
enum HTMLProps::AttrProps;
enum HTMLProps::ElemProps;
enum HTMLWriter::CachedWS;
enum Hashtable::FindResult;
enum HeaderType;
enum HierarchyType;
enum IEObjectType;
enum IGNOREMIME;
enum IMAGE_AUX_SYMBOL_TYPE;
enum IMPORT_OBJECT_NAME_TYPE;
enum IMPORT_OBJECT_TYPE;
enum INTERNET_SCHEME;
enum IXMLSecurityInfo::XmlSecurityEnum;
enum IfCompile::InstrType;
enum InheritedFlags;
enum InstrFlags;
enum InstrState;
enum InstrType;
enum IntFlags;
enum Internal;
enum InternetCookieState;
enum InvokingMethodType;
enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS;
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS;
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS;
enum Kind;
enum LATENCY_TIME;
enum LetterValue;
enum LevelType;
enum ListType;
enum LoadType;
enum LoadWorkItem::LoadType;
enum LocationFlags;
enum MCA_EXCEPTION_TYPE;
enum MEDIAPLAYBACK_STATE;
enum MEM_EXTENDED_PARAMETER_TYPE;
enum MEM_SECTION_EXTENDED_PARAMETER_TYPE;
enum MSONFC;
enum MSXMLRegistry::ValueName;
enum MatchType;
enum Matcher::MatchType;
enum Microsoft::WRL::AsyncResultType;
enum Microsoft::WRL::CancelTransitionPolicy;
enum Microsoft::WRL::DelegateCheckMode;
enum Microsoft::WRL::Details::AsyncStatusInternal;
enum Microsoft::WRL::ErrorPropagationPolicy;
enum Microsoft::WRL::FactoryCacheFlags;
enum Microsoft::WRL::InvokeMode;
enum Microsoft::WRL::ModuleType;
enum Microsoft::WRL::RuntimeClassType;
enum Microsoft::WRL::RuntimeClassType_CustomIUnknown;
enum NameParseEnum;
enum NewNoException;
enum NewNodeNotifyEnum;
enum NewZeroMemory;
enum Node::NodeType;
enum NodeLocation::LocationFlags;
enum NodeType;
enum NumberStyles;
enum NumberingOptions::LetterValue;
enum NumberingOptions::LevelType;
enum NumericOp;
enum OFFER_PRIORITY;
enum OLECMDEXECOPT;
enum OLECMDF;
enum OLECMDID;
enum OLECMDID_BROWSERSTATEFLAG;
enum OLECMDID_OPTICAL_ZOOMFLAG;
enum OLECMDID_PAGEACTIONFLAG;
enum OLECMDID_REFRESHFLAG;
enum OLECMDID_VIEWPORT_MODE_FLAG;
enum OLECMDID_WINDOWSTATE_FLAG;
enum OLECMDTEXTF;
enum OLE_TRISTATE;
enum OPCODE;
enum ORIENTATION_PREFERENCE;
enum OfflineFolderStatus;
enum OpType;
enum OptimizeAttrs::DerivedFlags;
enum OptimizeFlags;
enum OptionsEnum;
enum OutputType;
enum PAGEACTION_UI;
enum PIDMSI_STATUS_VALUE;
enum POINTER_FEEDBACK_MODE;
enum POWER_ACTION;
enum POWER_INFORMATION_LEVEL;
enum POWER_MONITOR_REQUEST_REASON;
enum POWER_STATE_DISABLED_TYPE;
enum POWER_STATE_HANDLER_TYPE;
enum POWER_USER_PRESENCE_TYPE;
enum PO_FIXED_WAKE_SOURCE_TYPE;
enum PO_INTERNAL_WAKE_SOURCE_TYPE;
enum PO_WAKE_SOURCE_TYPE;
enum PROXY_PHASE;
enum PS_CREATE_STATE;
enum ParseFlags;
enum ParseScope;
enum ParseState;
enum ParseType;
enum PathNode::PathOp;
enum PathOp;
enum PeepholeOptimize::InstrFlags;
enum PeepholeOptimize::InstrState;
enum ProcessState;
enum REFTYPE;
enum RO_ERROR_REPORTING_FLAGS;
enum RO_INIT_TYPE;
enum RPC_ADDRESS_CHANGE_TYPE;
enum RTLWOW64_CROSSPROCESS_WORK_OPERATION;
enum RTL_BSD_ITEM_TYPE;
enum RTL_DISK_SPACE_POLICY;
enum RTL_DISK_SPEED_POLICY;
enum RTL_DISK_WRITE_CONSTRAINT_POLICY;
enum RTL_PHYSICAL_MEMORY_POLICY;
enum RefAttachEnum;
enum RegexOptions;
enum ReplacesCorHdrNumericDefines;
enum RestrictionFlags;
enum RetType;
enum RoVariant::States;
enum RpcProxyPerfCounters;
enum SAFETYOPERATION;
enum SAXWriter::WRITER_OUTPUT_TYPE;
enum SAXWriter::WRITER_STATE;
enum SCHEMATYPE;
enum SERVICE_DIRECTORY_TYPE;
enum SERVICE_REGISTRY_STATE_TYPE;
enum SE_WS_APPX_SIGNATURE_ORIGIN;
enum SHGLOBALCOUNTER;
enum SHREGDEL_FLAGS;
enum SHREGENUM_FLAGS;
enum STUB_PHASE;
enum SXPContext::ErrorType;
enum SXPathNode::SXPathOp;
enum SXPathOp;
enum SXSyntaxNode::NodeType;
enum SXSyntaxNode::OptimizeFlags;
enum SYSGEOCLASS;
enum SYSGEOTYPE;
enum SYSNLS_FUNCTION;
enum SYSTEM_POWER_CONDITION;
enum SchemaContentProcessing;
enum SchemaContentType;
enum SchemaDatatypeVariety;
enum SchemaDerivationMethod;
enum SchemaEnum;
enum SchemaFacetEnum;
enum SchemaFinal;
enum SchemaForm;
enum SchemaNamespaceList::Absent;
enum SchemaNamespaceList::ListType;
enum SchemaUse;
enum SchemaWhiteSpace;
enum SecurityEnum;
enum SecurityInfo::SecurityEnum;
enum SelectionLanguage;
enum ShareMutex::Internal;
enum State;
enum States;
enum SubType;
enum TestType;
enum TextTypeEnum;
enum Token;
enum TokenType;
enum TokenizedType;
enum TriState;
enum TrustLevel;
enum Type;
enum URLIS;
enum URLRequest::HeaderType;
enum URLStream::Flags;
enum URL_PART;
enum URL_SCHEME;
enum UnicodeCategory;
enum VARENUM;
enum VERIFIER_MODE;
enum ValidationDFAState;
enum ValidationType;
enum ValueName;
enum VariableType;
enum VisitedMark;
enum WELL_KNOWN_SID_TYPE;
enum WIN32_MEMORY_INFORMATION_CLASS;
enum WININET_SYNC_MODE;
enum WMIDPREQUESTCODE;
enum WPAD_CACHE_DELETE;
enum WPCSETTING;
enum WPP_CTL_NAMES;
enum WPP_DEFINE_BIT_NAMES;
enum WRITER_OUTPUT_TYPE;
enum WRITER_STATE;
enum WSMODE;
enum WSStringBuffer::WSMODE;
enum WinHttpRequestAutoLogonPolicy;
enum WinHttpRequestOption;
enum Windows::ApplicationModel::Background::BackgroundTaskCancellationReason;
enum Windows::ApplicationModel::Background::BackgroundTaskThrottleCounter;
enum Windows::ApplicationModel::Background::BackgroundTaskYieldStatus;
enum Windows::ApplicationModel::Background::BackgroundWorkCostValue;
enum Windows::Data::Xml::Dom::NodeType;
enum Windows::Foundation::Collections::CollectionChange;
enum Windows::Foundation::Diagnostics::CausalityRelation;
enum Windows::Foundation::Diagnostics::CausalitySource;
enum Windows::Foundation::Diagnostics::CausalitySynchronousWork;
enum Windows::Foundation::Diagnostics::CausalityTraceLevel;
enum Windows::Foundation::Diagnostics::ErrorOptions;
enum Windows::Foundation::Diagnostics::RoErrorReportingFlags;
enum Windows::Foundation::Metadata::GCPressureAmount;
enum Windows::Foundation::PropertyType;
enum Windows::Storage::AccessCache::AccessCacheOptions;
enum Windows::Storage::AccessCache::RecentStorageItemVisibility;
enum Windows::Storage::CreationCollisionOption;
enum Windows::Storage::FileAccessMode;
enum Windows::Storage::FileAttributes;
enum Windows::Storage::FileProperties::PhotoOrientation;
enum Windows::Storage::FileProperties::PropertyPrefetchOptions;
enum Windows::Storage::FileProperties::ThumbnailMode;
enum Windows::Storage::FileProperties::ThumbnailOptions;
enum Windows::Storage::FileProperties::ThumbnailType;
enum Windows::Storage::FileProperties::VideoOrientation;
enum Windows::Storage::KnownFolderId;
enum Windows::Storage::KnownLibraryId;
enum Windows::Storage::NameCollisionOption;
enum Windows::Storage::Pickers::PickerLocationId;
enum Windows::Storage::Pickers::PickerViewMode;
enum Windows::Storage::Provider::CachedFileOptions;
enum Windows::Storage::Provider::FileUpdateStatus;
enum Windows::Storage::Provider::ReadActivationMode;
enum Windows::Storage::Provider::WriteActivationMode;
enum Windows::Storage::Search::CommonFileQuery;
enum Windows::Storage::Search::CommonFolderQuery;
enum Windows::Storage::Search::DateStackOption;
enum Windows::Storage::Search::FolderDepth;
enum Windows::Storage::Search::IndexedState;
enum Windows::Storage::Search::IndexerOption;
enum Windows::Storage::StorageDeleteOption;
enum Windows::Storage::StorageItemTypes;
enum Windows::Storage::StorageLibraryChangeType;
enum Windows::Storage::StorageOpenOptions;
enum Windows::Storage::StreamedFileFailureMode;
enum Windows::Storage::Streams::ByteOrder;
enum Windows::Storage::Streams::FileOpenDisposition;
enum Windows::Storage::Streams::InputStreamOptions;
enum Windows::Storage::Streams::UnicodeEncoding;
enum Windows::System::UserAuthenticationStatus;
enum Windows::System::UserPictureSize;
enum Windows::System::UserType;
enum Windows::System::UserWatcherStatus;
enum WinrtRttiKind;
enum XCodeGen::BranchType;
enum XCompare::CompareFlags;
enum XConvert::IntFlags;
enum XLAT_SIDE;
enum XMLNav::NodeType;
enum XMLOutputHelper::EncodeErrorAction;
enum XMLState;
enum XMLStateMachine::XMLState;
enum XMLStream::XMLToken;
enum XMLToken;
enum XMLValidator::TextTypeEnum;
enum XML_ATTRIBUTE_TYPE;
enum XPBuilder::BooleanOp;
enum XPBuilder::CompareOp;
enum XPBuilder::NumericOp;
enum XPBuilder::OpType;
enum XPBuilder::TestType;
enum XPNav::Flags;
enum XPNav::Type;
enum XPParser::ParseType;
enum XPParser::TokenType;
enum XSDType;
enum XSLTBuilder::ParseFlags;
enum XSLTInheritAttrs::ElemType;
enum XStreamFactory::OutputType;
enum XSyntaxNode::NodeType;
enum XSyntaxNode::OptimizeFlags;
enum XVariant::DataType;
enum XWinRT::ComLock::Kind;
enum XmlEvent::EventType;
enum XmlParseTask::OptionsEnum;
enum XmlSecurityEnum;
enum _ACCESS_REASON_TYPE;
enum _ACL_INFORMATION_CLASS;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
enum _ALPC_PORT_INFORMATION_CLASS;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
enum _APPCONTAINER_SID_TYPE;
enum _APTTYPE;
enum _APTTYPEQUALIFIER;
enum _ATOM_INFORMATION_CLASS;
enum _AUDIT_EVENT_TYPE;
enum _BEHAVIOR_EVENT;
enum _BEHAVIOR_EVENT_FLAGS;
enum _BEHAVIOR_LAYOUT_INFO;
enum _BEHAVIOR_LAYOUT_MODE;
enum _BEHAVIOR_RELATION;
enum _BEHAVIOR_RENDER_INFO;
enum _BOOT_ENTROPY_SOURCE_ID;
enum _BOOT_ENTROPY_SOURCE_RESULT_CODE;
enum _BUS_DATA_TYPE;
enum _BoolValue;
enum _CARET_DIRECTION;
enum _CI_WINDOWS_LOCKDOWN_MODE;
enum _CM_ERROR_CONTROL_TYPE;
enum _CM_SERVICE_LOAD_TYPE;
enum _CM_SERVICE_NODE_TYPE;
enum _CM_SHARE_DISPOSITION;
enum _COMPUTER_NAME_FORMAT;
enum _COORD_SYSTEM;
enum _COPYFILE2_COPY_PHASE;
enum _COPYFILE2_MESSAGE_ACTION;
enum _COPYFILE2_MESSAGE_TYPE;
enum _COVERAGE_REQUEST_CODES;
enum _CPU_SET_INFORMATION_TYPE;
enum _CSVFS_DISK_CONNECTIVITY;
enum _CSV_CONTROL_OP;
enum _DEBUG_CONTROL_SPACE_ITEM;
enum _DEP_SYSTEM_POLICY_TYPE;
enum _DEVICE_POWER_STATE;
enum _DEV_CONSOLE_MESSAGE_LEVEL;
enum _DIRECTORY_NOTIFY_INFORMATION_CLASS;
enum _DISPLAYCONFIG_COLOR_ENCODING;
enum _DISPLAY_BREAK;
enum _DISPLAY_GRAVITY;
enum _DISPLAY_MOVEUNIT;
enum _DMA_SPEED;
enum _DMA_WIDTH;
enum _DOM_EVENT_PHASE;
enum _DPFLTR_TYPE;
enum _DomConstructor;
enum _ELEMENTDESCRIPTOR_FLAGS;
enum _ELEMENTNAMESPACE_FLAGS;
enum _ELEMENT_ADJACENCY;
enum _ELEMENT_CORNER;
enum _ELEMENT_TAG_ID;
enum _ENLISTMENT_INFORMATION_CLASS;
enum _ERROR_SEVERITY_VALUE;
enum _EVENT_INFORMATION_CLASS;
enum _EVENT_TYPE;
enum _EXCEPTION_DISPOSITION;
enum _EXCEPTION_LOG_TYPE;
enum _FILE_ID_TYPE;
enum _FILE_INFORMATION_CLASS;
enum _FILE_INFO_BY_HANDLE_CLASS;
enum _FILE_METADATA_OPTIMIZATION_STATE;
enum _FILE_STORAGE_TIER_CLASS;
enum _FILE_STORAGE_TIER_MEDIA_TYPE;
enum _FILTER_BOOT_OPTION_OPERATION;
enum _FINDEX_INFO_LEVELS;
enum _FINDEX_SEARCH_OPS;
enum _FINDTEXT_FLAGS;
enum _FIRMWARE_TYPE;
enum _FP_IEEE_COMPARE_RESULT;
enum _FP_IEEE_OPERATION_CODE;
enum _FP__IEEE_FORMAT;
enum _FP__IEEE_ROUNDING_MODE;
enum _FSINFOCLASS;
enum _FUNCTION_TABLE_TYPE;
enum _GET_FILEEX_INFO_LEVELS;
enum _HARDERROR_RESPONSE;
enum _HARDERROR_RESPONSE_OPTION;
enum _HARDWARE_COUNTER_TYPE;
enum _HEAP_INFORMATION_CLASS;
enum _HIBERFILE_BUCKET_SIZE;
enum _HOT_PATCH_INFORMATION_CLASS;
enum _HTMLAppFlag;
enum _HTMLBorder;
enum _HTMLBorderStyle;
enum _HTMLCaptionFlag;
enum _HTMLDlgBorder;
enum _HTMLDlgCenter;
enum _HTMLDlgEdge;
enum _HTMLDlgFlag;
enum _HTMLMaximizeFlag;
enum _HTMLMinimizeFlag;
enum _HTMLSysMenuFlag;
enum _HTMLWindowState;
enum _HTML_PAINTER;
enum _HTML_PAINT_DRAW_FLAGS;
enum _HTML_PAINT_DRAW_INFO_FLAGS;
enum _HTML_PAINT_EVENT_FLAGS;
enum _HTML_PAINT_ZORDER;
enum _HT_OPTIONS;
enum _HT_RESULTS;
enum _IDL_CS_CONVERT;
enum _IMAGE_MITIGATION_POLICY;
enum _IMAGE_POLICY_ENTRY_TYPE;
enum _IMAGE_POLICY_ID;
enum _INTERFACE_TYPE;
enum _IO_COMPLETION_INFORMATION_CLASS;
enum _IO_PRIORITY_HINT;
enum _IO_SESSION_EVENT;
enum _IO_SESSION_STATE;
enum _IRQ_DEVICE_POLICY;
enum _IRQ_GROUP_POLICY;
enum _IRQ_PRIORITY;
enum _JOBOBJECTINFOCLASS;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
enum _JOURNAL_INFORMATION_CLASS;
enum _KEY_INFORMATION_CLASS;
enum _KEY_SET_INFORMATION_CLASS;
enum _KEY_VALUE_INFORMATION_CLASS;
enum _KHETERO_CPU_POLICY;
enum _KPROFILE_SOURCE;
enum _KTMOBJECT_TYPE;
enum _LDR_DDAG_STATE;
enum _LDR_DLL_LOAD_REASON;
enum _LEARNING_MODE_LOG_LEVEL;
enum _LINE_DIRECTION;
enum _LINK_TRACKING_INFORMATION_TYPE;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION;
enum _MANDATORY_LEVEL;
enum _MARKUP_CONTEXT_TYPE;
enum _MEMORY_EXHAUSTION_TYPE;
enum _MEMORY_INFORMATION_CLASS;
enum _MEMORY_RESERVE_TYPE;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
enum _MEMORY_WORKING_SET_EX_LOCATION;
enum _MM_ETW_WORKING_SET_TYPE;
enum _MONITOR_DISPLAY_STATE;
enum _MOVEUNIT_ACTION;
enum _MUTANT_INFORMATION_CLASS;
enum _NORM_FORM;
enum _NT_PRODUCT_TYPE;
enum _OBJECT_INFORMATION_CLASS;
enum _OS_DEPLOYEMENT_STATE_VALUES;
enum _PARSE_FLAGS;
enum _PARTITION_INFORMATION_CLASS;
enum _PLUGPLAY_CONTROL_CLASS;
enum _PLUGPLAY_EVENT_CATEGORY;
enum _PNP_QUERY_RELATION;
enum _PNP_VETO_TYPE;
enum _POINTER_GRAVITY;
enum _PORT_INFORMATION_CLASS;
enum _POWER_MONITOR_REQUEST_TYPE;
enum _POWER_PLATFORM_ROLE;
enum _POWER_REQUEST_TYPE;
enum _POWER_STATE_TYPE;
enum _PO_CS_DEVICE_NOTIFICATION_TYPE;
enum _PO_HIBER_FORCE_DISABLE_REASON;
enum _PO_SLEEP_DISABLE_REASON;
enum _PRIORITY_HINT;
enum _PROCESSINFOCLASS;
enum _PROCESSOR_CACHE_TYPE;
enum _PROCESS_ACTIVITY_TYPE;
enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM;
enum _PROCESS_INFORMATION_CLASS;
enum _PROCESS_MEMORY_EXHAUSTION_TYPE;
enum _PROCESS_MITIGATION_POLICY;
enum _PROCESS_TLS_INFORMATION_TYPE;
enum _PROCESS_WORKING_SET_OPERATION;
enum _PROC_THREAD_ATTRIBUTE_NUM;
enum _PS_ATTRIBUTE_NUM;
enum _PS_MITIGATION_OPTION;
enum _PS_PROTECTED_SIGNER;
enum _PS_PROTECTED_TYPE;
enum _PS_STD_HANDLE_STATE;
enum _PS_WAKE_REASON;
enum _QUERY_FILE_LAYOUT_FILTER_TYPE;
enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS;
enum _REFS_SMR_VOLUME_GC_ACTION;
enum _REFS_SMR_VOLUME_GC_METHOD;
enum _REFS_SMR_VOLUME_GC_STATE;
enum _REG_ACTION;
enum _REQUESTER_TYPE;
enum _REQUEST_TIMES;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
enum _RPC_ASYNC_EVENT;
enum _RPC_HTTP_REDIRECTOR_STAGE;
enum _RPC_NOTIFICATIONS;
enum _RPC_NOTIFICATION_TYPES;
enum _RTL_GENERIC_COMPARE_RESULTS;
enum _RTL_IMAGE_MITIGATION_OPTION_STATE;
enum _RTL_MEMORY_TYPE;
enum _RTL_PATH_TYPE;
enum _RTL_RESOURCE_CATEGORY;
enum _RTL_RESOURCE_POLICY_FLAGS;
enum _RTL_RXACT_OPERATION;
enum _RTL_SPARSE_BITMAP_CTX_OPERATION;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
enum _RTL_UMS_SCHEDULER_REASON;
enum _RTL_UMS_THREAD_INFO_CLASS;
enum _SAVE_SEGMENTS_FLAGS;
enum _SCHEMACONTENTTYPE;
enum _SCHEMADERIVATIONMETHOD;
enum _SCHEMAPROCESSCONTENTS;
enum _SCHEMATYPEVARIETY;
enum _SCHEMAUSE;
enum _SCHEMAWHITESPACE;
enum _SCRIPT_TIMER_TYPE;
enum _SC_ACTION_TYPE;
enum _SC_ENUM_TYPE;
enum _SC_EVENT_TYPE;
enum _SC_STATUS_TYPE;
enum _SECTION_INFORMATION_CLASS;
enum _SECTION_INHERIT;
enum _SECUREURLHOSTVALIDATE_FLAGS;
enum _SECURE_SETTING_VALUE_TYPE;
enum _SECURITY_IMPERSONATION_LEVEL;
enum _SELECTION_TYPE;
enum _SEMAPHORE_INFORMATION_CLASS;
enum _SERVERSILO_STATE;
enum _SERVERXMLHTTP_OPTION;
enum _SE_AUDIT_OPERATION;
enum _SE_IMAGE_SIGNATURE_TYPE;
enum _SE_LEARNING_MODE_DATA_TYPE;
enum _SE_VALIDATE_MAPPING_TYPE;
enum _SHRINK_VOLUME_REQUEST_TYPES;
enum _SHUTDOWN_ACTION;
enum _SID_NAME_USE;
enum _SOMITEMTYPE;
enum _STATE_LOCATION_TYPE;
enum _STORAGE_RESERVE_ID;
enum _STREAM_INFO_LEVELS;
enum _SUBSYSTEM_INFORMATION_TYPE;
enum _SUITE_TYPE;
enum _SXH_PROXY_SETTING;
enum _SXH_SERVER_CERT_OPTION;
enum _SYMBOLIC_LINK_INFO_CLASS;
enum _SYSDBG_COMMAND;
enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE;
enum _SYSTEM_ACTIVITY_MODERATION_STATE;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
enum _SYSTEM_INFORMATION_CLASS;
enum _SYSTEM_MEMORY_LIST_COMMAND;
enum _SYSTEM_NET_RATE_CONTROL_TYPE;
enum _SYSTEM_PIXEL_FORMAT;
enum _SYSTEM_POWER_STATE;
enum _SYSTEM_PROCESS_CLASSIFICATION;
enum _SYSTEM_VA_TYPE;
enum _SharedVirtualDiskHandleState;
enum _SharedVirtualDiskSupportType;
enum _TABLE_SEARCH_RESULT;
enum _TAPE_DRIVE_PROBLEM_TYPE;
enum _THDTYPE;
enum _THREADINFOCLASS;
enum _THREAD_INFORMATION_CLASS;
enum _THREAD_UMS_INFORMATION_COMMAND;
enum _THREAD_WORKLOAD_CLASS;
enum _TIMER_INFORMATION_CLASS;
enum _TIMER_SET_INFORMATION_CLASS;
enum _TIMER_TYPE;
enum _TOKEN_ELEVATION_TYPE;
enum _TOKEN_INFORMATION_CLASS;
enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION;
enum _TOKEN_TYPE;
enum _TP_CALLBACK_PRIORITY;
enum _TP_DEBUG_CLASS;
enum _TP_LOG_LEVEL;
enum _TP_TRACE_TYPE;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
enum _TRANSACTION_INFORMATION_CLASS;
enum _TRANSACTION_OUTCOME;
enum _TRANSACTION_STATE;
enum _UNWIND_OP_CODES;
enum _URLZONEREG;
enum _USER_ACTIVITY_PRESENCE;
enum _USER_MARSHAL_CB_TYPE;
enum _VERIFIER_RULE_CLASS_ID;
enum _VIEW_OBJECT_ALPHA_MODE;
enum _VIEW_OBJECT_COMPOSITION_MODE;
enum _VIRTUAL_MEMORY_INFORMATION_CLASS;
enum _VIRTUAL_STORAGE_BEHAVIOR_CODE;
enum _WAIT_TYPE;
enum _WATCHDOG_HANDLER_ACTION;
enum _WATCHDOG_INFORMATION_CLASS;
enum _WNF_DATA_SCOPE;
enum _WNF_STATE_NAME_INFORMATION;
enum _WNF_STATE_NAME_LIFETIME;
enum _WORKERFACTORYINFOCLASS;
enum _WORKER_FACTORY_CALLBACK_CLASS;
enum _WOW64_FUNCTION_CODE64;
enum _WPP_FLAG_LEN_ENUM;
enum _WPP_FLAG_LEN_ENUM_MAX;
enum _XHR_AUTH;
enum _XHR_CERT_ERROR_FLAG;
enum _XHR_CERT_IGNORE_FLAG;
enum _XHR_COOKIE_FLAG;
enum _XHR_COOKIE_STATE;
enum _XHR_CRED_PROMPT;
enum _XHR_PROPERTY;
enum __MIDL_IAsyncSecurityStatus_0001;
enum __MIDL_IAuthenticateEx_0001;
enum __MIDL_IBindStatusCallbackEx_0001;
enum __MIDL_IBindStatusCallback_0001;
enum __MIDL_IBindStatusCallback_0002;
enum __MIDL_IBindStatusCallback_0003;
enum __MIDL_IBindStatusCallback_0004;
enum __MIDL_IBindStatusCallback_0005;
enum __MIDL_IBindStatusCallback_0006;
enum __MIDL_ICodeInstall_0001;
enum __MIDL_IGetBindHandle_0001;
enum __MIDL_IInternetSecurityManager_0001;
enum __MIDL_IInternetSecurityManager_0002;
enum __MIDL_IInternetSecurityManager_0003;
enum __MIDL_IInternetZoneManager_0001;
enum __MIDL_IInternetZoneManager_0002;
enum __MIDL_IMonikerProp_0001;
enum __MIDL_IOleDocument_0001;
enum __MIDL_IPrint_0001;
enum __MIDL_ITransactionInternal_0001;
enum __MIDL_IUri_0001;
enum __MIDL_IUri_0002;
enum __MIDL___MIDL_itf_urlmonp_0000_0011_0001;
enum __MIDL___MIDL_itf_urlmonp_0000_0019_0001;
enum __MIDL___MIDL_itf_urlmonp_0000_0026_0001;
enum __MIDL___MIDL_itf_urlmonp_0000_0026_0002;
enum __MIDL___MIDL_itf_urlmonp_0000_0026_0003;
enum __MIDL___MIDL_itf_urlmonp_0000_0026_0004;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0001;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0002;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0003;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0004;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0005;
enum __MIDL___MIDL_itf_xmlparser_0000_0000_0006;
enum __enative_startup_state;
enum __vc_attributes::aggregatableAttribute::type_e;
enum __vc_attributes::event_receiverAttribute::type_e;
enum __vc_attributes::event_sourceAttribute::optimize_e;
enum __vc_attributes::event_sourceAttribute::type_e;
enum __vc_attributes::helper_attributes::usageAttribute::usage_e;
enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;
enum __vc_attributes::moduleAttribute::type_e;
enum __vc_attributes::pointer_defaultAttribute::type_e;
enum __vc_attributes::threadingAttribute::threading_e;
enum _bodyScroll;
enum _frameScrolling;
enum _htmlAdjacency;
enum _htmlApplyLocation;
enum _htmlBlockAlign;
enum _htmlCaptionAlign;
enum _htmlCaptionVAlign;
enum _htmlCellAlign;
enum _htmlCellVAlign;
enum _htmlClear;
enum _htmlCompatMode;
enum _htmlComponent;
enum _htmlControlAlign;
enum _htmlDesignMode;
enum _htmlDir;
enum _htmlDirection;
enum _htmlDraggable;
enum _htmlDropEffect;
enum _htmlEditable;
enum _htmlEffectAllowed;
enum _htmlEncoding;
enum _htmlEndPoints;
enum _htmlFrame;
enum _htmlGlyphMode;
enum _htmlInput;
enum _htmlListType;
enum _htmlLoop;
enum _htmlMarqueeBehavior;
enum _htmlMarqueeDirection;
enum _htmlMediaErr;
enum _htmlMediaNetworkState;
enum _htmlMediaReadyState;
enum _htmlMethod;
enum _htmlPersistState;
enum _htmlReadyState;
enum _htmlRules;
enum _htmlSelectExFlag;
enum _htmlSelectType;
enum _htmlSelection;
enum _htmlSpellCheck;
enum _htmlStart;
enum _htmlTabIndex;
enum _htmlUnit;
enum _htmlWrap;
enum _htmlZOrder;
enum _lengthAdjust;
enum _mediaType;
enum _sandboxAllow;
enum _styleAccelerator;
enum _styleAlignContent;
enum _styleAlignItems;
enum _styleAlignSelf;
enum _styleAlignmentBaseline;
enum _styleAttrType;
enum _styleAuto;
enum _styleBackfaceVisibility;
enum _styleBackgroundAttachment;
enum _styleBackgroundAttachment3;
enum _styleBackgroundClip;
enum _styleBackgroundOrigin;
enum _styleBackgroundRepeat;
enum _styleBaselineShift;
enum _styleBidi;
enum _styleBlockProgression;
enum _styleBool;
enum _styleBorderCollapse;
enum _styleBorderImageRepeat;
enum _styleBorderImageSliceFill;
enum _styleBorderStyle;
enum _styleBorderWidth;
enum _styleBoxSizing;
enum _styleBreak;
enum _styleBreakInside;
enum _styleCaptionSide;
enum _styleClipRule;
enum _styleColorInterpolationFilters;
enum _styleColumnFill;
enum _styleColumnSpan;
enum _styleCursor;
enum _styleDataRepeat;
enum _styleDefaultTextSelection;
enum _styleDir;
enum _styleDisplay;
enum _styleDominantBaseline;
enum _styleEmptyCells;
enum _styleEnableBackground;
enum _styleFillRule;
enum _styleFlex;
enum _styleFlexBasis;
enum _styleFlexDirection;
enum _styleFlexWrap;
enum _styleFontSize;
enum _styleFontStretch;
enum _styleFontStyle;
enum _styleFontVariant;
enum _styleFontWeight;
enum _styleGridColumn;
enum _styleGridColumnAlign;
enum _styleGridColumnSpan;
enum _styleGridRow;
enum _styleGridRowAlign;
enum _styleGridRowSpan;
enum _styleHyphenateLimitLines;
enum _styleHyphens;
enum _styleImeMode;
enum _styleInitialColor;
enum _styleInitialString;
enum _styleInterpolation;
enum _styleJustifyContent;
enum _styleLayoutFlow;
enum _styleLayoutGridChar;
enum _styleLayoutGridLine;
enum _styleLayoutGridMode;
enum _styleLayoutGridType;
enum _styleLineBreak;
enum _styleListStylePosition;
enum _styleListStyleType;
enum _styleMsAnimationDirection;
enum _styleMsAnimationFillMode;
enum _styleMsAnimationPlayState;
enum _styleMsContentZoomChaining;
enum _styleMsContentZoomSnapType;
enum _styleMsContentZooming;
enum _styleMsFlexAlign;
enum _styleMsFlexItemAlign;
enum _styleMsFlexLinePack;
enum _styleMsFlexPack;
enum _styleMsHighContrastAdjust;
enum _styleMsImeAlign;
enum _styleMsOverflowStyle;
enum _styleMsScrollChaining;
enum _styleMsScrollRails;
enum _styleMsScrollSnapType;
enum _styleMsScrollTranslation;
enum _styleMsTextCombineHorizontal;
enum _styleMsTouchAction;
enum _styleMsTouchSelect;
enum _styleMsUserSelect;
enum _styleNone;
enum _styleNormal;
enum _styleOutlineStyle;
enum _styleOverflow;
enum _stylePageBreak;
enum _stylePageBreakInside;
enum _stylePerspectiveOriginX;
enum _stylePerspectiveOriginY;
enum _stylePointerEvents;
enum _stylePosition;
enum _styleRubyAlign;
enum _styleRubyOverhang;
enum _styleRubyPosition;
enum _styleStrokeLinecap;
enum _styleStrokeLinejoin;
enum _styleStyleFloat;
enum _styleTableLayout;
enum _styleTextAlignLast;
enum _styleTextAnchor;
enum _styleTextDecoration;
enum _styleTextEffect;
enum _styleTextJustify;
enum _styleTextJustifyTrim;
enum _styleTextLineThroughStyle;
enum _styleTextOverflow;
enum _styleTextSizeAdjust;
enum _styleTextTransform;
enum _styleTextUnderlinePosition;
enum _styleTextUnderlineStyle;
enum _styleTransformOriginX;
enum _styleTransformOriginY;
enum _styleTransformStyle;
enum _styleUserZoom;
enum _styleVerticalAlign;
enum _styleViewportSize;
enum _styleVisibility;
enum _styleWebkitAppearance;
enum _styleWebkitBoxDirection;
enum _styleWebkitBoxOrient;
enum _styleWebkitBoxPack;
enum _styleWhiteSpace;
enum _styleWidowsOrphans;
enum _styleWordBreak;
enum _styleWordWrap;
enum _styleWrapFlow;
enum _styleWrapThrough;
enum _styleWritingMode;
enum _styleZIndex;
enum _svgAngleType;
enum _svgChannel;
enum _svgEdgemode;
enum _svgExternalResourcesRequired;
enum _svgFeblendMode;
enum _svgFecolormatrixType;
enum _svgFecomponenttransferType;
enum _svgFecompositeOperator;
enum _svgFocusable;
enum _svgLengthType;
enum _svgMarkerOrient;
enum _svgMarkerOrientAttribute;
enum _svgMarkerUnits;
enum _svgMorphologyOperator;
enum _svgPathSegType;
enum _svgPreserveAlpha;
enum _svgPreserveAspectMeetOrSliceType;
enum _svgPreserveAspectRatioAlignType;
enum _svgSpreadMethod;
enum _svgStitchtype;
enum _svgTransformType;
enum _svgTurbulenceType;
enum _svgUnitTypes;
enum _system_handle_t;
enum _tagEXPR_TOKEN;
enum _tagINTERNETFEATURELIST;
enum _tagOIBDG_FLAGS;
enum _tagPARSEACTION;
enum _tagPI_FLAGS;
enum _tagPSUACTION;
enum _tagQUERYOPTION;
enum _textDecoration;
enum _textpathMethodtype;
enum _textpathSpacingtype;
enum optimize_e;
enum std::_Uninitialized;
enum tagACTIVATEFLAGS;
enum tagACTIVATIONTYPE;
enum tagADVF;
enum tagAR_STATE;
enum tagApplicationType;
enum tagAspectInfoFlag;
enum tagBINDOPTIONINTERNAL;
enum tagBINDSPEED;
enum tagBINDSTATUS;
enum tagBINDSTRING;
enum tagBIND_FLAGS;
enum tagBREAKPOINT_STATE;
enum tagBREAKREASON;
enum tagBREAKRESUME_ACTION;
enum tagBROWSERTRANSITIONREASON;
enum tagCALLCONV;
enum tagCALLTYPE;
enum tagCHANGEKIND;
enum tagCLSCTX;
enum tagCOINIT;
enum tagCOINITBASE;
enum tagCOMSD;
enum tagCOWAIT_FLAGS;
enum tagCTRLINFO;
enum tagDATADIR;
enum tagDCOM_CALL_STATE;
enum tagDESCKIND;
enum tagDISCARDCACHE;
enum tagDOCUMENTNAMETYPE;
enum tagDOMNodeType;
enum tagDVASPECT;
enum tagDVASPECT2;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
enum tagERRORRESUMEACTION;
enum tagEXTCONN;
enum tagExtendedErrorParamTypes;
enum tagExtentMode;
enum tagFEEDBACK_TYPE;
enum tagFUNCFLAGS;
enum tagFUNCKIND;
enum tagGLOBALOPT_EH_VALUES;
enum tagGLOBALOPT_PROPERTIES;
enum tagGLOBALOPT_RO_FLAGS;
enum tagGLOBALOPT_RPCTP_VALUES;
enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES;
enum tagGUIDKIND;
enum tagHANDEDNESS;
enum tagHITRESULT;
enum tagINPUT_MESSAGE_DEVICE_TYPE;
enum tagINPUT_MESSAGE_ORIGIN_ID;
enum tagINVOKEKIND;
enum tagLIBFLAGS;
enum tagLOCKTYPE;
enum tagMEMCTX;
enum tagMIMECONTF;
enum tagMKREDUCE;
enum tagMKSYS;
enum tagMLCONVCHARF;
enum tagMLCPF;
enum tagMLDETECTCP;
enum tagMLSTR_FLAGS;
enum tagMSHCTX;
enum tagMSHLFLAGS;
enum tagOLECLOSE;
enum tagOLECONTF;
enum tagOLEDCFLAGS;
enum tagOLEGETMONIKER;
enum tagOLELINKBIND;
enum tagOLEMISC;
enum tagOLERENDER;
enum tagOLEUPDATE;
enum tagOLEVERBATTRIB;
enum tagOLEWHICHMK;
enum tagPENDINGMSG;
enum tagPENDINGTYPE;
enum tagPERCEIVED;
enum tagPOINTERINACTIVE;
enum tagPOINTER_BUTTON_CHANGE_TYPE;
enum tagPOINTER_DEVICE_CURSOR_TYPE;
enum tagPOINTER_DEVICE_TYPE;
enum tagPOINTER_INPUT_TYPE;
enum tagPROPBAG2_TYPE;
enum tagPROPPAGESTATUS;
enum tagPictureAttributes;
enum tagQACONTAINERFLAGS;
enum tagREADYSTATE;
enum tagREGCLS;
enum tagREGKIND;
enum tagRPCOPT_PROPERTIES;
enum tagRPCOPT_SERVER_LOCALITY_VALUES;
enum tagRpcCallClientLocality;
enum tagRpcCallType;
enum tagRpcLocalAddressFormat;
enum tagSCRIPTCONTF;
enum tagSCRIPTFONTCONTF;
enum tagSCRIPTGCTYPE;
enum tagSCRIPTLANGUAGEVERSION;
enum tagSCRIPTSTATE;
enum tagSCRIPTTHREADSTATE;
enum tagSCRIPTTRACEINFO;
enum tagSCRIPTUICHANDLING;
enum tagSCRIPTUICITEM;
enum tagSERVERCALL;
enum tagSFBS_FLAGS;
enum tagSF_TYPE;
enum tagSHCOLSTATE;
enum tagSTATFLAG;
enum tagSTDMSHLFLAGS;
enum tagSTGC;
enum tagSTGMOVE;
enum tagSTGTY;
enum tagSTREAM_SEEK;
enum tagSTRRET_TYPE;
enum tagSYSKIND;
enum tagShutdownType;
enum tagTYMED;
enum tagTYPEFLAGS;
enum tagTYPEKIND;
enum tagTYSPEC;
enum tagUASFLAGS;
enum tagURLTEMPLATE;
enum tagURLZONE;
enum tagUSERCLASSTYPE;
enum tagVARFLAGS;
enum tagVARKIND;
enum tagVIEWSTATUS;
enum tagXFORMCOORDS;
enum tagXMLEMEM_TYPE;
enum tagXMLNotifyPhase;
enum tagXMLNotifyReason;
enum threading_e;
enum type_e;
enum usage_e;
enum wil::CustomReportingKind;
enum wil::ErrorReturn;
enum wil::EventOptions;
enum wil::FailureType;
enum wil::FeatureChangeTime;
enum wil::FeatureControlKind;
enum wil::FeatureEnabledState;
enum wil::FeaturePropertyGroupFlags;
enum wil::FeatureStage;
enum wil::FeatureString;
enum wil::FeatureUsageKind;
enum wil::ReportingKind;
enum wil::SlimEventType;
enum wil::StagingControlActions;
enum wil::SupportedExceptions;
enum wil::UsageReportingMode;
enum wil::VariantReportingKind;
enum wil::WilInitializeCommand;
enum wil::details::EmptyVariant;
enum wil::details::PendingCallbackCancellationBehavior;
enum wil::details::ReportFailureOptions;
enum wil::details::StagingConfigurationFlags;
enum wil::details_abi::CountSize;
enum wil::details_abi::UsageIndexesLoadOptions;
enum wil_FeatureChangeTime;
enum wil_FeatureEnabledState;
enum wil_FeatureEnabledStateKind;
enum wil_FeatureEnabledStateOptions;
enum wil_FeatureStage;
enum wil_FeatureStore;
enum wil_FeatureVariantPayloadKind;
enum wil_ReportingKind;
enum wil_UsageReportingMode;
enum wil_VariantPayloadType;
enum wil_VariantReportingKind;
enum wil_details_CachedFeatureEnabledState;
enum wil_details_CachedHasNotificationState;
enum wil_details_FeatureTestStateKind;
enum wil_details_ServiceReportingKind;
enum wil_details_ServiceReportingOptions;
enum wil_details_StagingConfigFeatureFields;
enum xinit;
enum xstring::xinit;

typedef struct $_TypeDescriptor$_extraBytes_16 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[16];
};

typedef struct $_TypeDescriptor$_extraBytes_20 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[20];
};

typedef struct $_TypeDescriptor$_extraBytes_24 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[24];
};

typedef struct $_s__CatchableTypeArray$_extraBytes_16 {
    LONG nCatchableTypes;
    struct _s__CatchableType *arrayOfCatchableTypes[2];
};

typedef struct ?$_hentry@VDeclElement@@ {
    DeclElement *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct ?$_hentry@VDeclEntity@@ {
    DeclEntity *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct ?$_hentry@VDeclNotation@@ {
    DeclNotation *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct ANON_OBJECT_HEADER {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
};

typedef struct ANON_OBJECT_HEADER_BIGOBJ {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
    ULONG Flags;
    ULONG MetaDataSize;
    ULONG MetaDataOffset;
    ULONG NumberOfSections;
    ULONG PointerToSymbolTable;
    ULONG NumberOfSymbols;
};

typedef struct ANON_OBJECT_HEADER_V2 {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
    ULONG Flags;
    ULONG MetaDataSize;
    ULONG MetaDataOffset;
};

typedef struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__ {
    LONG unused;
};

typedef struct ARRAY_INFO {
    LONG Dimension;
    PULONG BufferConformanceMark;
    PULONG BufferVarianceMark;
    PULONG MaxCountArray;
    PULONG OffsetArray;
    PULONG ActualCountArray;
};

typedef struct AUTO_PROXY_SCRIPT_BUFFER {
    ULONG dwStructSize;
    PCHAR lpszScriptBuffer;
    ULONG dwScriptBufferSize;
};

typedef struct AddrInstr {
    struct XCode::Instruction XCode::Instruction;
    LONG64 _addr;
};

typedef struct AllocHeader {
    struct GrowAllocator::AllocHeader *_prev;
};

typedef struct AsyncIAdviseSink {
    struct IUnknown IUnknown;
    VOID Begin_OnDataChange;
    VOID Finish_OnDataChange;
    VOID Begin_OnViewChange;
    VOID Finish_OnViewChange;
    VOID Begin_OnRename;
    VOID Finish_OnRename;
    VOID Begin_OnSave;
    VOID Finish_OnSave;
    VOID Begin_OnClose;
    VOID Finish_OnClose;
    VOID AsyncIAdviseSink;
    VOID AsyncIAdviseSink;
    VOID AsyncIAdviseSink;
    struct AsyncIAdviseSink *operator=;
    struct AsyncIAdviseSink *operator=;
};

typedef struct AsyncIAdviseSink2 {
    struct AsyncIAdviseSink AsyncIAdviseSink;
    VOID Begin_OnLinkSrcChange;
    VOID Finish_OnLinkSrcChange;
    VOID AsyncIAdviseSink2;
    VOID AsyncIAdviseSink2;
    VOID AsyncIAdviseSink2;
    struct AsyncIAdviseSink2 *operator=;
    struct AsyncIAdviseSink2 *operator=;
};

typedef struct AsyncIMultiQI {
    struct IUnknown IUnknown;
    HRESULT Begin_QueryMultipleInterfaces;
    HRESULT Finish_QueryMultipleInterfaces;
    VOID AsyncIMultiQI;
    VOID AsyncIMultiQI;
    VOID AsyncIMultiQI;
    struct AsyncIMultiQI *operator=;
    struct AsyncIMultiQI *operator=;
};

typedef struct AsyncIPipeByte {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeByte;
    VOID AsyncIPipeByte;
    VOID AsyncIPipeByte;
    struct AsyncIPipeByte *operator=;
    struct AsyncIPipeByte *operator=;
};

typedef struct AsyncIPipeDouble {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeDouble;
    VOID AsyncIPipeDouble;
    VOID AsyncIPipeDouble;
    struct AsyncIPipeDouble *operator=;
    struct AsyncIPipeDouble *operator=;
};

typedef struct AsyncIPipeLong {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeLong;
    VOID AsyncIPipeLong;
    VOID AsyncIPipeLong;
    struct AsyncIPipeLong *operator=;
    struct AsyncIPipeLong *operator=;
};

typedef struct AsyncIUnknown {
    struct IUnknown IUnknown;
    HRESULT Begin_QueryInterface;
    HRESULT Finish_QueryInterface;
    HRESULT Begin_AddRef;
    ULONG Finish_AddRef;
    HRESULT Begin_Release;
    ULONG Finish_Release;
    VOID AsyncIUnknown;
    VOID AsyncIUnknown;
    VOID AsyncIUnknown;
    struct AsyncIUnknown *operator=;
    struct AsyncIUnknown *operator=;
};

typedef struct AttValueToken {
    LONG nType;
    struct StringPtr value;
    VOID AttValueToken;
};

typedef struct AttrNameVal {
    NameDef *_namedefAttr;
    Name *_nmAttr;
    _reference<String> _strAttr;
    LONG _offset;
    LONG _len;
    VOID AttrNameVal;
    VOID AttrNameVal;
    VOID AttrNameVal;
    VOID ~AttrNameVal;
    struct XAttributesImpl::AttrNameVal *operator=;
    struct XAttributesImpl::AttrNameVal *operator=;
    PVOID __vecDelDtor;
};

typedef struct Attribute {
    struct StringPtr qname;
    struct StringPtr prefix;
    struct StringPtr uri;
    struct StringPtr lname;
    struct StringPtr type;
    struct StringPtr value;
    LONG nToken;
    LONG nTokenNr;
    LONG nGrafted;
    LONG nNamespace;
    LONG nHashNext;
    VOID Attribute;
};

typedef struct AutoProxyHelperFunctions {
    struct AutoProxyHelperVtbl *lpVtbl;
};

typedef struct AutoProxyHelperVtbl {
    PLONG IsResolvable;
    PULONG GetIPAddress;
    PULONG ResolveHostName;
    PLONG IsInNet;
    PLONG IsResolvableEx;
    PULONG GetIPAddressEx;
    PULONG ResolveHostNameEx;
    PLONG IsInNetEx;
    PULONG SortIpList;
};

typedef struct BATTERY_REPORTING_SCALE {
    ULONG Granularity;
    ULONG Capacity;
};

typedef struct BIGNUM {
    ULONG m_lu0;
    ULONG m_lu1;
    ULONG m_lu2;
    LONG m_wExp;
    ULONG m_luError;
    LONG FZero;
    VOID Normalize;
    VOID Round;
    VOID MulTenAdd;
    VOID SetFromFloatingDecimal;
    VOID Mul;
    DOUBLE GetDbl;
    ULONG LuMod1;
    VOID MakeUpperBound;
    VOID MakeLowerBound;
};

typedef struct BITMAPV4HEADER {
    ULONG bV4Size;
    LONG bV4Width;
    LONG bV4Height;
    USHORT bV4Planes;
    USHORT bV4BitCount;
    ULONG bV4V4Compression;
    ULONG bV4SizeImage;
    LONG bV4XPelsPerMeter;
    LONG bV4YPelsPerMeter;
    ULONG bV4ClrUsed;
    ULONG bV4ClrImportant;
    ULONG bV4RedMask;
    ULONG bV4GreenMask;
    ULONG bV4BlueMask;
    ULONG bV4AlphaMask;
    ULONG bV4CSType;
    struct tagICEXYZTRIPLE bV4Endpoints;
    ULONG bV4GammaRed;
    ULONG bV4GammaGreen;
    ULONG bV4GammaBlue;
};

typedef struct BITMAPV5HEADER {
    ULONG bV5Size;
    LONG bV5Width;
    LONG bV5Height;
    USHORT bV5Planes;
    USHORT bV5BitCount;
    ULONG bV5Compression;
    ULONG bV5SizeImage;
    LONG bV5XPelsPerMeter;
    LONG bV5YPelsPerMeter;
    ULONG bV5ClrUsed;
    ULONG bV5ClrImportant;
    ULONG bV5RedMask;
    ULONG bV5GreenMask;
    ULONG bV5BlueMask;
    ULONG bV5AlphaMask;
    ULONG bV5CSType;
    struct tagICEXYZTRIPLE bV5Endpoints;
    ULONG bV5GammaRed;
    ULONG bV5GammaGreen;
    ULONG bV5GammaBlue;
    ULONG bV5Intent;
    ULONG bV5ProfileData;
    ULONG bV5ProfileSize;
    ULONG bV5Reserved;
};

typedef struct BREAK_ON_STATUS_BUFFER {
    LONG NtStatus;
    ULONG Win32Error;
    ULONG ThreadId;
    ULONG ProcessId;
    CHAR ImageFileName[16];
};

typedef struct BSMINFO {
    ULONG cbSize;
    struct HDESK__ *hdesk;
    struct HWND__ *hwnd;
    struct _LUID luid;
};

typedef struct BS_KEY {
    PWCHAR pwsz;
    LONG cch;
};

typedef struct BULK_SECURITY_TEST_DATA {
    ULONG DesiredAccess;
    ULONG SecurityIds[1];
};

typedef struct BaseContext {
    BOOLEAN _fInEntityReference;
};

typedef struct BaseTextAppendVisitor::BaseContext {
    BOOLEAN _fInEntityReference;
};

typedef struct BiasHelper<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,1> {
    AutoStubBias<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler> CreateBias;
};

typedef struct BiasHelper<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1> {
    AutoStubBias<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *> > CreateBias;
};

typedef struct BitBlock {
    VOID BitBlock;
    struct CachingStream::BitBlock *_pNext;
    UCHAR _data[4088];
};

typedef struct BlockAlloc::Header {
    struct BlockAlloc::Header *pPrev;
    struct BlockAlloc::Header *pNext;
    PUCHAR pCurr;
    PUCHAR pLast;
};

typedef struct BoolInstr {
    struct XCode::Instruction XCode::Instruction;
    BOOLEAN _bool;
};

typedef struct BooleanFixup {
    struct XCodeGen::BooleanFixup *_nextFixup;
    USHORT _brtype;
    USHORT _labelTarget;
};

typedef struct BrArgInstr {
    struct XCode::NameInstr XCode::NameInstr;
    ULONG64 _loc;
    LONG64 _addr;
};

typedef struct CM_Power_Data_s {
    ULONG PD_Size;
    enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
    ULONG PD_Capabilities;
    ULONG PD_D1Latency;
    ULONG PD_D2Latency;
    ULONG PD_D3Latency;
    enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
    enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

typedef struct CONFIRMSAFETY {
    struct _GUID clsid;
    struct IUnknown *pUnk;
    ULONG dwFlags;
};

typedef struct COPYFILE2_EXTENDED_PARAMETERS {
    ULONG dwSize;
    ULONG dwCopyFlags;
    PLONG pfCancel;
    enum _COPYFILE2_MESSAGE_ACTION *pProgressRoutine;
    PVOID pvCallbackContext;
};

typedef struct COPYFILE2_MESSAGE {
    enum _COPYFILE2_MESSAGE_TYPE Type;
    ULONG dwPadding;
     <unnamed-type-Info>;
    union {
         <unnamed-type-ChunkStarted>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliChunkSize;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliTotalFileSize;
        } ChunkStarted;
         <unnamed-type-ChunkFinished>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwFlags;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliChunkSize;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } ChunkFinished;
         <unnamed-type-StreamStarted>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliTotalFileSize;
        } StreamStarted;
         <unnamed-type-StreamFinished>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } StreamFinished;
         <unnamed-type-PollContinue>;
        struct {
            ULONG dwReserved;
        } PollContinue;
         <unnamed-type-Error>;
        struct {
            enum _COPYFILE2_COPY_PHASE CopyPhase;
            ULONG dwStreamNumber;
            HRESULT hrFailure;
            ULONG dwReserved;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } Error;
    } Info;
};

typedef struct CORRELATION_VECTOR {
    CHAR Version;
    CHAR Vector[129];
};

typedef struct CO_MTA_USAGE_COOKIE__ {
    LONG unused;
};

typedef struct CREATE_USN_JOURNAL_DATA {
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
};

typedef struct CachedFeaturePropertyData {
    enum wil_FeatureChangeTime changeTime;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct CachedUsageData {
    ULONG id;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct CachingStream::BitBlock {
    VOID BitBlock;
    struct CachingStream::BitBlock *_pNext;
    UCHAR _data[4088];
};

typedef struct CharMap {
    WCHAR _wchFrom;
    WCHAR _wchTo;
};

typedef struct CharMapI {
    WCHAR _wchFrom;
    WCHAR _wchTo;
    LONG _index;
};

typedef struct CharMapSurr {
    WCHAR _wchFrom;
    WCHAR _wchFromSurr;
    WCHAR _wchTo;
    WCHAR _wchToSurr;
};

typedef struct CharacterSourceFactory::Encoding2CodePage {
    struct StringPtr *pEncoding;
    ULONG uiCodePage;
    CharacterSource **fnLittleEndian;
    CharacterSource **fnBigEndian;
};

typedef struct Chunk {
    struct LLStack<ValidationState,16>::Chunk *_prev;
    struct LLStack<ValidationState,16>::Chunk *_next;
    struct ValidationState *data;
};

typedef struct Class {
    struct Class *parent;
    Object **_createObject;
    Object *createObject;
    BOOLEAN isInstance;
};

typedef struct CloneInfo {
    BOOLEAN fReadOnly;
    Document *pDoc;
    BOOLEAN fWholeDoc;
    Node *pMapNode;
};

typedef struct CloneStringPtr {
    struct StringPtr StringPtr;
    VOID CloneStringPtr;
    VOID CloneStringPtr;
    VOID ~CloneStringPtr;
    VOID operator=;
    VOID operator=;
    VOID assign;
    VOID assign;
    VOID clone;
    VOID takeOver;
    VOID __dflt_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct CodeStringPtr {
    WCHAR empty_pwh[0];
    struct StringPtr empty;
    WCHAR ucs2_pwh[0];
    struct StringPtr ucs2;
    WCHAR ucs4_pwh[0];
    struct StringPtr ucs4;
    WCHAR utf7_pwh[0];
    struct StringPtr utf7;
    WCHAR utf8_pwh[0];
    struct StringPtr utf8;
    WCHAR utf16_pwh[0];
    struct StringPtr utf16;
    WCHAR utf16le_pwh[0];
    struct StringPtr utf16le;
    WCHAR utf16be_pwh[0];
    struct StringPtr utf16be;
    WCHAR unicode_pwh[0];
    struct StringPtr unicode;
    WCHAR usascii_pwh[0];
    struct StringPtr usascii;
    WCHAR iso88591_pwh[0];
    struct StringPtr iso88591;
    WCHAR iso88592_pwh[0];
    struct StringPtr iso88592;
    WCHAR iso88593_pwh[0];
    struct StringPtr iso88593;
    WCHAR iso88594_pwh[0];
    struct StringPtr iso88594;
    WCHAR iso88595_pwh[0];
    struct StringPtr iso88595;
    WCHAR iso88596_pwh[0];
    struct StringPtr iso88596;
    WCHAR iso88597_pwh[0];
    struct StringPtr iso88597;
    WCHAR iso88598_pwh[0];
    struct StringPtr iso88598;
    WCHAR iso88599_pwh[0];
    struct StringPtr iso88599;
    WCHAR ebcdiccpus_pwh[0];
    struct StringPtr ebcdiccpus;
    WCHAR windows1250_pwh[0];
    struct StringPtr windows1250;
    WCHAR windows1251_pwh[0];
    struct StringPtr windows1251;
    WCHAR windows1252_pwh[0];
    struct StringPtr windows1252;
    WCHAR windows1253_pwh[0];
    struct StringPtr windows1253;
    WCHAR windows1254_pwh[0];
    struct StringPtr windows1254;
    WCHAR windows1255_pwh[0];
    struct StringPtr windows1255;
    WCHAR windows1256_pwh[0];
    struct StringPtr windows1256;
    WCHAR windows1257_pwh[0];
    struct StringPtr windows1257;
    WCHAR windows1258_pwh[0];
    struct StringPtr windows1258;
    WCHAR iso10646ucs2_pwh[0];
    struct StringPtr iso10646ucs2;
    WCHAR iso10646ucs4_pwh[0];
    struct StringPtr iso10646ucs4;
    WCHAR version_pwh[0];
    struct StringPtr version;
    WCHAR opz_pwh[0];
    struct StringPtr opz;
    WCHAR encoding_pwh[0];
    struct StringPtr encoding;
    WCHAR standalone_pwh[0];
    struct StringPtr standalone;
    WCHAR yes_pwh[0];
    struct StringPtr yes;
    WCHAR no_pwh[0];
    struct StringPtr no;
    WCHAR xml_pwh[0];
    struct StringPtr xml;
    WCHAR xmlUri_pwh[0];
    struct StringPtr xmlUri;
    WCHAR xmlns_pwh[0];
    struct StringPtr xmlns;
    WCHAR xmlnsUri_pwh[0];
    struct StringPtr xmlnsUri;
    WCHAR amp_pwh[0];
    struct StringPtr amp;
    WCHAR lt_pwh[0];
    struct StringPtr lt;
    WCHAR gt_pwh[0];
    struct StringPtr gt;
    WCHAR apos_pwh[0];
    struct StringPtr apos;
    WCHAR quot_pwh[0];
    struct StringPtr quot;
    WCHAR ampValue_pwh[0];
    struct StringPtr ampValue;
    WCHAR ltValue_pwh[0];
    struct StringPtr ltValue;
    WCHAR gtValue_pwh[0];
    struct StringPtr gtValue;
    WCHAR aposValue_pwh[0];
    struct StringPtr aposValue;
    WCHAR quotValue_pwh[0];
    struct StringPtr quotValue;
    WCHAR EMPTY_pwh[0];
    struct StringPtr EMPTY;
    WCHAR ANY_pwh[0];
    struct StringPtr ANY;
    WCHAR CDATA_pwh[0];
    struct StringPtr CDATA;
    WCHAR ID_pwh[0];
    struct StringPtr ID;
    WCHAR IDREF_pwh[0];
    struct StringPtr IDREF;
    WCHAR IDREFS_pwh[0];
    struct StringPtr IDREFS;
    WCHAR ENTITY_pwh[0];
    struct StringPtr ENTITY;
    WCHAR ENTITIES_pwh[0];
    struct StringPtr ENTITIES;
    WCHAR NMTOKEN_pwh[0];
    struct StringPtr NMTOKEN;
    WCHAR NMTOKENS_pwh[0];
    struct StringPtr NMTOKENS;
    WCHAR REQUIRED_pwh[0];
    struct StringPtr REQUIRED;
    WCHAR IMPLIED_pwh[0];
    struct StringPtr IMPLIED;
    WCHAR FIXED_pwh[0];
    struct StringPtr FIXED;
    WCHAR percent_pwh[0];
    struct StringPtr percent;
    WCHAR dtd_pwh[0];
    struct StringPtr dtd;
    WCHAR validation_pwh[0];
    struct StringPtr validation;
    WCHAR externalGeneralEntities_pwh[0];
    struct StringPtr externalGeneralEntities;
    WCHAR externalParameterEntities_pwh[0];
    struct StringPtr externalParameterEntities;
    WCHAR namespaces_pwh[0];
    struct StringPtr namespaces;
    WCHAR namespacePrefixes_pwh[0];
    struct StringPtr namespacePrefixes;
    WCHAR lexicalHandlerParameterEntities_pwh[0];
    struct StringPtr lexicalHandlerParameterEntities;
    WCHAR serverHttpRequest_pwh[0];
    struct StringPtr serverHttpRequest;
    WCHAR schemaValidation_pwh[0];
    struct StringPtr schemaValidation;
    WCHAR exhaustiveErrors_pwh[0];
    struct StringPtr exhaustiveErrors;
    WCHAR preserveSystemIdentifiers_pwh[0];
    struct StringPtr preserveSystemIdentifiers;
    WCHAR domNode_pwh[0];
    struct StringPtr domNode;
    WCHAR declarationHandler_pwh[0];
    struct StringPtr declarationHandler;
    WCHAR lexicalHandler_pwh[0];
    struct StringPtr lexicalHandler;
    WCHAR contentHandler_pwh[0];
    struct StringPtr contentHandler;
    WCHAR schemaDeclarationHandler_pwh[0];
    struct StringPtr schemaDeclarationHandler;
    WCHAR schemas_pwh[0];
    struct StringPtr schemas;
    WCHAR charset_pwh[0];
    struct StringPtr charset;
    WCHAR xmlDeclVersion_pwh[0];
    struct StringPtr xmlDeclVersion;
    WCHAR xmlDeclEncoding_pwh[0];
    struct StringPtr xmlDeclEncoding;
    WCHAR xmlDeclStandalone_pwh[0];
    struct StringPtr xmlDeclStandalone;
    WCHAR maxXmlSize_pwh[0];
    struct StringPtr maxXmlSize;
    WCHAR maxElementDepth_pwh[0];
    struct StringPtr maxElementDepth;
    WCHAR useSchemaLocation_pwh[0];
    struct StringPtr useSchemaLocation;
    WCHAR prohibitDTD_pwh[0];
    struct StringPtr prohibitDTD;
    WCHAR forcedResync_pwh[0];
    struct StringPtr forcedResync;
    WCHAR inputSource_pwh[0];
    struct StringPtr inputSource;
    WCHAR useInlineSchema_pwh[0];
    struct StringPtr useInlineSchema;
    WCHAR suppressValFatalError_pwh[0];
    struct StringPtr suppressValFatalError;
    WCHAR PUBLIC_pwh[0];
    struct StringPtr PUBLIC;
    WCHAR SYSTEM_pwh[0];
    struct StringPtr SYSTEM;
    WCHAR NOTATION_pwh[0];
    struct StringPtr NOTATION;
    WCHAR NDATA_pwh[0];
    struct StringPtr NDATA;
    WCHAR DOCTYPE_pwh[0];
    struct StringPtr DOCTYPE;
};

typedef struct ConstString {
    PWCHAR pwszText;
    ULONG nLength;
};

typedef struct ContainerState {
    LONG ContainerType;
    SchemaObject *Container;
};

typedef struct CookieDecision {
    ULONG dwCookieState;
    LONG fAllowSession;
};

typedef struct CreateNodeTypeNamesInfo {
    PWCHAR pwc;
    enum tagDOMNodeType eType;
};

typedef struct CsFrame {
    ULONG64 SavedR10;
    ULONG64 SavedR11;
};

typedef struct DELETE_USN_JOURNAL_DATA {
    ULONG64 UsnJournalID;
    ULONG DeleteFlags;
};

typedef struct DISK_SPACE_INFORMATION {
    ULONG64 ActualTotalAllocationUnits;
    ULONG64 ActualAvailableAllocationUnits;
    ULONG64 ActualPoolUnavailableAllocationUnits;
    ULONG64 CallerTotalAllocationUnits;
    ULONG64 CallerAvailableAllocationUnits;
    ULONG64 CallerPoolUnavailableAllocationUnits;
    ULONG64 UsedAllocationUnits;
    ULONG64 TotalReservedAllocationUnits;
    ULONG64 VolumeStorageReserveAllocationUnits;
    ULONG64 AvailableCommittedAllocationUnits;
    ULONG64 PoolAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct DISPATCHINFO {
    struct ITypeInfo *_pTypeInfoCache;
    struct _GUID *_puuid;
    struct _GUID *_plibid;
    LONG _ord;
    struct INVOKE_METHOD *pMethods;
    UCHAR cMethods;
    struct DISPIDTOINDEX *pIndex;
    UCHAR cIndex;
    HRESULT *pInvokeFunc;
};

typedef struct DISPIDTOINDEX {
    LONG dispid;
    LONG index;
};

typedef struct DISPLAYCONFIG_2DREGION {
    ULONG cx;
    ULONG cy;
};

typedef struct DISPLAYCONFIG_ADAPTER_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR adapterDevicePath[128];
};

typedef struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO {
    struct _POINTL PathSourceSize;
    struct _RECTL DesktopImageRegion;
    struct _RECTL DesktopImageClip;
};

typedef struct DISPLAYCONFIG_DEVICE_INFO_HEADER {
    enum DISPLAYCONFIG_DEVICE_INFO_TYPE type;
    ULONG size;
    struct _LUID adapterId;
    ULONG id;
};

typedef struct DISPLAYCONFIG_MODE_INFO {
    enum DISPLAYCONFIG_MODE_INFO_TYPE infoType;
    ULONG id;
    struct _LUID adapterId;
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
    struct DISPLAYCONFIG_SOURCE_MODE sourceMode;
    struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO desktopImageInfo;
};

typedef struct DISPLAYCONFIG_PATH_INFO {
    struct DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
    struct DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
    ULONG flags;
};

typedef struct DISPLAYCONFIG_PATH_SOURCE_INFO {
    struct _LUID adapterId;
    ULONG id;
    ULONG modeInfoIdx;
    ULONG cloneGroupId : 16;
    ULONG sourceModeInfoIdx : 16;
    ULONG statusFlags;
};

typedef struct DISPLAYCONFIG_PATH_TARGET_INFO {
    struct _LUID adapterId;
    ULONG id;
    ULONG modeInfoIdx;
    ULONG desktopModeInfoIdx : 16;
    ULONG targetModeInfoIdx : 16;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    enum DISPLAYCONFIG_ROTATION rotation;
    enum DISPLAYCONFIG_SCALING scaling;
    struct DISPLAYCONFIG_RATIONAL refreshRate;
    enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
    LONG targetAvailable;
    ULONG statusFlags;
};

typedef struct DISPLAYCONFIG_RATIONAL {
    ULONG Numerator;
    ULONG Denominator;
};

typedef struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG bootPersistenceOn : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct DISPLAYCONFIG_SOURCE_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR viewGdiDeviceName[32];
};

typedef struct DISPLAYCONFIG_SOURCE_MODE {
    ULONG width;
    ULONG height;
    enum DISPLAYCONFIG_PIXELFORMAT pixelFormat;
    struct _POINTL position;
};

typedef struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG disableMonitorVirtualResolution : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct DISPLAYCONFIG_TARGET_BASE_TYPE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY baseOutputTechnology;
};

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    USHORT edidManufactureId;
    USHORT edidProductCodeId;
    ULONG connectorInstance;
    WCHAR monitorFriendlyDeviceName[64];
    WCHAR monitorDevicePath[128];
};

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS {
    ULONG friendlyNameFromEdid : 1;
    ULONG friendlyNameForced : 1;
    ULONG edidIdsValid : 1;
    ULONG reserved : 29;
    ULONG value;
};

typedef struct DISPLAYCONFIG_TARGET_MODE {
    struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
};

typedef struct DISPLAYCONFIG_TARGET_PREFERRED_MODE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG width;
    ULONG height;
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
};

typedef struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO {
    ULONG64 pixelRate;
    struct DISPLAYCONFIG_RATIONAL hSyncFreq;
    struct DISPLAYCONFIG_RATIONAL vSyncFreq;
    struct DISPLAYCONFIG_2DREGION activeSize;
    struct DISPLAYCONFIG_2DREGION totalSize;
    struct {
        ULONG videoStandard : 16;
        ULONG vSyncFreqDivider : 6;
        ULONG reserved : 10;
    } AdditionalSignalInfo;
    ULONG videoStandard;
    enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
};

typedef struct DLGITEMTEMPLATE {
    ULONG style;
    ULONG dwExtendedStyle;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
    USHORT id;
};

typedef struct DLGTEMPLATE {
    ULONG style;
    ULONG dwExtendedStyle;
    USHORT cdit;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
};

typedef struct DOMNode::DispInfo {
    struct DISPATCHINFO dispatchinfo;
    struct IUnknown **func;
};

typedef struct DOMXmlSpaceVisitor::XmlSpaceContext {
    struct BaseTextAppendVisitor::BaseContext BaseTextAppendVisitor::BaseContext;
    BOOLEAN _fXmlSpace;
};

typedef struct DPI_AWARENESS_CONTEXT__ {
    LONG unused;
};

typedef struct DTDFactory::ParserCallbacks {
    enum DTDFactory::NameParseEnum _nameparse;
    HRESULT *_createnode;
    HRESULT *_beginchildren;
    HRESULT *_endchildren;
};

typedef struct DTNAME {
    PWCHAR pszName;
    enum DataType dt;
};

typedef struct DTPARSE {
    USHORT vt;
    ULONG dwParse;
    ULONG dwVtBits;
};

typedef struct DWebBridgeEvents {
    struct IDispatch IDispatch;
    VOID DWebBridgeEvents;
    VOID DWebBridgeEvents;
    VOID DWebBridgeEvents;
    struct DWebBridgeEvents *operator=;
    struct DWebBridgeEvents *operator=;
};

typedef struct DXGI_GAMMA_CONTROL {
    struct DXGI_RGB Scale;
    struct DXGI_RGB Offset;
    struct DXGI_RGB GammaCurve[1025];
};

typedef struct DXGI_GAMMA_CONTROL_CAPABILITIES {
    LONG ScaleAndOffsetSupported;
    FLOAT MaxConvertedValue;
    FLOAT MinConvertedValue;
    ULONG NumGammaControlPoints;
    FLOAT ControlPointPositions[1025];
};

typedef struct DXGI_JPEG_AC_HUFFMAN_TABLE {
    UCHAR CodeCounts[16];
    UCHAR CodeValues[162];
};

typedef struct DXGI_JPEG_DC_HUFFMAN_TABLE {
    UCHAR CodeCounts[12];
    UCHAR CodeValues[12];
};

typedef struct DXGI_JPEG_QUANTIZATION_TABLE {
    UCHAR Elements[64];
};

typedef struct DXGI_MODE_DESC {
    ULONG Width;
    ULONG Height;
    struct DXGI_RATIONAL RefreshRate;
    enum DXGI_FORMAT Format;
    enum DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;
    enum DXGI_MODE_SCALING Scaling;
};

typedef struct DXGI_RATIONAL {
    ULONG Numerator;
    ULONG Denominator;
};

typedef struct DXGI_RGB {
    FLOAT Red;
    FLOAT Green;
    FLOAT Blue;
};

typedef struct DXGI_SAMPLE_DESC {
    ULONG Count;
    ULONG Quality;
};

typedef struct DecimalFormat::StringStruct {
    VOID clear;
    _reference<String> _str;
    PWCHAR _wsz;
    LONG _len;
    VOID StringStruct;
    VOID StringStruct;
    VOID StringStruct;
    VOID ~StringStruct;
    struct DecimalFormat::StringStruct *operator=;
    struct DecimalFormat::StringStruct *operator=;
    PVOID __vecDelDtor;
};

typedef struct DelayLoadInfo {
    ULONG cb;
    struct ImgDelayDescrV2 *pidd;
    PLONG64 *ppfn;
    PCHAR szDll;
    struct DelayLoadProc dlp;
    struct HINSTANCE__ *hmodCur;
    PLONG64 pfnCur;
    ULONG dwLastError;
};

typedef struct DelayLoadProc {
    LONG fImportByName;
    PCHAR szProcName;
    ULONG dwOrdinal;
};

typedef struct Digest {
    ULONG64 q[4];
};

typedef struct DispApplicationCache {
    struct IDispatch IDispatch;
    VOID DispApplicationCache;
    VOID DispApplicationCache;
    VOID DispApplicationCache;
    struct DispApplicationCache *operator=;
    struct DispApplicationCache *operator=;
};

typedef struct DispCEventObj {
    struct IDispatch IDispatch;
    VOID DispCEventObj;
    VOID DispCEventObj;
    VOID DispCEventObj;
    struct DispCEventObj *operator=;
    struct DispCEventObj *operator=;
};

typedef struct DispCPlugins {
    struct IDispatch IDispatch;
    VOID DispCPlugins;
    VOID DispCPlugins;
    VOID DispCPlugins;
    struct DispCPlugins *operator=;
    struct DispCPlugins *operator=;
};

typedef struct DispCPrintManagerTemplatePrinter {
    struct IDispatch IDispatch;
    VOID DispCPrintManagerTemplatePrinter;
    VOID DispCPrintManagerTemplatePrinter;
    VOID DispCPrintManagerTemplatePrinter;
    struct DispCPrintManagerTemplatePrinter *operator=;
    struct DispCPrintManagerTemplatePrinter *operator=;
};

typedef struct DispCanvasGradient {
    struct IDispatch IDispatch;
    VOID DispCanvasGradient;
    VOID DispCanvasGradient;
    VOID DispCanvasGradient;
    struct DispCanvasGradient *operator=;
    struct DispCanvasGradient *operator=;
};

typedef struct DispCanvasImageData {
    struct IDispatch IDispatch;
    VOID DispCanvasImageData;
    VOID DispCanvasImageData;
    VOID DispCanvasImageData;
    struct DispCanvasImageData *operator=;
    struct DispCanvasImageData *operator=;
};

typedef struct DispCanvasPattern {
    struct IDispatch IDispatch;
    VOID DispCanvasPattern;
    VOID DispCanvasPattern;
    VOID DispCanvasPattern;
    struct DispCanvasPattern *operator=;
    struct DispCanvasPattern *operator=;
};

typedef struct DispCanvasRenderingContext2D {
    struct IDispatch IDispatch;
    VOID DispCanvasRenderingContext2D;
    VOID DispCanvasRenderingContext2D;
    VOID DispCanvasRenderingContext2D;
    struct DispCanvasRenderingContext2D *operator=;
    struct DispCanvasRenderingContext2D *operator=;
};

typedef struct DispCanvasTextMetrics {
    struct IDispatch IDispatch;
    VOID DispCanvasTextMetrics;
    VOID DispCanvasTextMetrics;
    VOID DispCanvasTextMetrics;
    struct DispCanvasTextMetrics *operator=;
    struct DispCanvasTextMetrics *operator=;
};

typedef struct DispDOMBeforeUnloadEvent {
    struct IDispatch IDispatch;
    VOID DispDOMBeforeUnloadEvent;
    VOID DispDOMBeforeUnloadEvent;
    VOID DispDOMBeforeUnloadEvent;
    struct DispDOMBeforeUnloadEvent *operator=;
    struct DispDOMBeforeUnloadEvent *operator=;
};

typedef struct DispDOMChildrenCollection {
    struct IDispatch IDispatch;
    VOID DispDOMChildrenCollection;
    VOID DispDOMChildrenCollection;
    VOID DispDOMChildrenCollection;
    struct DispDOMChildrenCollection *operator=;
    struct DispDOMChildrenCollection *operator=;
};

typedef struct DispDOMCloseEvent {
    struct IDispatch IDispatch;
    VOID DispDOMCloseEvent;
    VOID DispDOMCloseEvent;
    VOID DispDOMCloseEvent;
    struct DispDOMCloseEvent *operator=;
    struct DispDOMCloseEvent *operator=;
};

typedef struct DispDOMCompositionEvent {
    struct IDispatch IDispatch;
    VOID DispDOMCompositionEvent;
    VOID DispDOMCompositionEvent;
    VOID DispDOMCompositionEvent;
    struct DispDOMCompositionEvent *operator=;
    struct DispDOMCompositionEvent *operator=;
};

typedef struct DispDOMCustomEvent {
    struct IDispatch IDispatch;
    VOID DispDOMCustomEvent;
    VOID DispDOMCustomEvent;
    VOID DispDOMCustomEvent;
    struct DispDOMCustomEvent *operator=;
    struct DispDOMCustomEvent *operator=;
};

typedef struct DispDOMDocumentType {
    struct IDispatch IDispatch;
    VOID DispDOMDocumentType;
    VOID DispDOMDocumentType;
    VOID DispDOMDocumentType;
    struct DispDOMDocumentType *operator=;
    struct DispDOMDocumentType *operator=;
};

typedef struct DispDOMDragEvent {
    struct IDispatch IDispatch;
    VOID DispDOMDragEvent;
    VOID DispDOMDragEvent;
    VOID DispDOMDragEvent;
    struct DispDOMDragEvent *operator=;
    struct DispDOMDragEvent *operator=;
};

typedef struct DispDOMEvent {
    struct IDispatch IDispatch;
    VOID DispDOMEvent;
    VOID DispDOMEvent;
    VOID DispDOMEvent;
    struct DispDOMEvent *operator=;
    struct DispDOMEvent *operator=;
};

typedef struct DispDOMException {
    struct IDispatch IDispatch;
    VOID DispDOMException;
    VOID DispDOMException;
    VOID DispDOMException;
    struct DispDOMException *operator=;
    struct DispDOMException *operator=;
};

typedef struct DispDOMFocusEvent {
    struct IDispatch IDispatch;
    VOID DispDOMFocusEvent;
    VOID DispDOMFocusEvent;
    VOID DispDOMFocusEvent;
    struct DispDOMFocusEvent *operator=;
    struct DispDOMFocusEvent *operator=;
};

typedef struct DispDOMKeyboardEvent {
    struct IDispatch IDispatch;
    VOID DispDOMKeyboardEvent;
    VOID DispDOMKeyboardEvent;
    VOID DispDOMKeyboardEvent;
    struct DispDOMKeyboardEvent *operator=;
    struct DispDOMKeyboardEvent *operator=;
};

typedef struct DispDOMMSAnimationEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMSAnimationEvent;
    VOID DispDOMMSAnimationEvent;
    VOID DispDOMMSAnimationEvent;
    struct DispDOMMSAnimationEvent *operator=;
    struct DispDOMMSAnimationEvent *operator=;
};

typedef struct DispDOMMSManipulationEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMSManipulationEvent;
    VOID DispDOMMSManipulationEvent;
    VOID DispDOMMSManipulationEvent;
    struct DispDOMMSManipulationEvent *operator=;
    struct DispDOMMSManipulationEvent *operator=;
};

typedef struct DispDOMMSTransitionEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMSTransitionEvent;
    VOID DispDOMMSTransitionEvent;
    VOID DispDOMMSTransitionEvent;
    struct DispDOMMSTransitionEvent *operator=;
    struct DispDOMMSTransitionEvent *operator=;
};

typedef struct DispDOMMessageEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMessageEvent;
    VOID DispDOMMessageEvent;
    VOID DispDOMMessageEvent;
    struct DispDOMMessageEvent *operator=;
    struct DispDOMMessageEvent *operator=;
};

typedef struct DispDOMMouseEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMouseEvent;
    VOID DispDOMMouseEvent;
    VOID DispDOMMouseEvent;
    struct DispDOMMouseEvent *operator=;
    struct DispDOMMouseEvent *operator=;
};

typedef struct DispDOMMouseWheelEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMouseWheelEvent;
    VOID DispDOMMouseWheelEvent;
    VOID DispDOMMouseWheelEvent;
    struct DispDOMMouseWheelEvent *operator=;
    struct DispDOMMouseWheelEvent *operator=;
};

typedef struct DispDOMMutationEvent {
    struct IDispatch IDispatch;
    VOID DispDOMMutationEvent;
    VOID DispDOMMutationEvent;
    VOID DispDOMMutationEvent;
    struct DispDOMMutationEvent *operator=;
    struct DispDOMMutationEvent *operator=;
};

typedef struct DispDOMParser {
    struct IDispatch IDispatch;
    VOID DispDOMParser;
    VOID DispDOMParser;
    VOID DispDOMParser;
    struct DispDOMParser *operator=;
    struct DispDOMParser *operator=;
};

typedef struct DispDOMProcessingInstruction {
    struct IDispatch IDispatch;
    VOID DispDOMProcessingInstruction;
    VOID DispDOMProcessingInstruction;
    VOID DispDOMProcessingInstruction;
    struct DispDOMProcessingInstruction *operator=;
    struct DispDOMProcessingInstruction *operator=;
};

typedef struct DispDOMProgressEvent {
    struct IDispatch IDispatch;
    VOID DispDOMProgressEvent;
    VOID DispDOMProgressEvent;
    VOID DispDOMProgressEvent;
    struct DispDOMProgressEvent *operator=;
    struct DispDOMProgressEvent *operator=;
};

typedef struct DispDOMSiteModeEvent {
    struct IDispatch IDispatch;
    VOID DispDOMSiteModeEvent;
    VOID DispDOMSiteModeEvent;
    VOID DispDOMSiteModeEvent;
    struct DispDOMSiteModeEvent *operator=;
    struct DispDOMSiteModeEvent *operator=;
};

typedef struct DispDOMStorageEvent {
    struct IDispatch IDispatch;
    VOID DispDOMStorageEvent;
    VOID DispDOMStorageEvent;
    VOID DispDOMStorageEvent;
    struct DispDOMStorageEvent *operator=;
    struct DispDOMStorageEvent *operator=;
};

typedef struct DispDOMTextEvent {
    struct IDispatch IDispatch;
    VOID DispDOMTextEvent;
    VOID DispDOMTextEvent;
    VOID DispDOMTextEvent;
    struct DispDOMTextEvent *operator=;
    struct DispDOMTextEvent *operator=;
};

typedef struct DispDOMUIEvent {
    struct IDispatch IDispatch;
    VOID DispDOMUIEvent;
    VOID DispDOMUIEvent;
    VOID DispDOMUIEvent;
    struct DispDOMUIEvent *operator=;
    struct DispDOMUIEvent *operator=;
};

typedef struct DispDOMWheelEvent {
    struct IDispatch IDispatch;
    VOID DispDOMWheelEvent;
    VOID DispDOMWheelEvent;
    VOID DispDOMWheelEvent;
    struct DispDOMWheelEvent *operator=;
    struct DispDOMWheelEvent *operator=;
};

typedef struct DispEventException {
    struct IDispatch IDispatch;
    VOID DispEventException;
    VOID DispEventException;
    VOID DispEventException;
    struct DispEventException *operator=;
    struct DispEventException *operator=;
};

typedef struct DispHTCAttachBehavior {
    struct IDispatch IDispatch;
    VOID DispHTCAttachBehavior;
    VOID DispHTCAttachBehavior;
    VOID DispHTCAttachBehavior;
    struct DispHTCAttachBehavior *operator=;
    struct DispHTCAttachBehavior *operator=;
};

typedef struct DispHTCDefaultDispatch {
    struct IDispatch IDispatch;
    VOID DispHTCDefaultDispatch;
    VOID DispHTCDefaultDispatch;
    VOID DispHTCDefaultDispatch;
    struct DispHTCDefaultDispatch *operator=;
    struct DispHTCDefaultDispatch *operator=;
};

typedef struct DispHTCDescBehavior {
    struct IDispatch IDispatch;
    VOID DispHTCDescBehavior;
    VOID DispHTCDescBehavior;
    VOID DispHTCDescBehavior;
    struct DispHTCDescBehavior *operator=;
    struct DispHTCDescBehavior *operator=;
};

typedef struct DispHTCEventBehavior {
    struct IDispatch IDispatch;
    VOID DispHTCEventBehavior;
    VOID DispHTCEventBehavior;
    VOID DispHTCEventBehavior;
    struct DispHTCEventBehavior *operator=;
    struct DispHTCEventBehavior *operator=;
};

typedef struct DispHTCMethodBehavior {
    struct IDispatch IDispatch;
    VOID DispHTCMethodBehavior;
    VOID DispHTCMethodBehavior;
    VOID DispHTCMethodBehavior;
    struct DispHTCMethodBehavior *operator=;
    struct DispHTCMethodBehavior *operator=;
};

typedef struct DispHTCPropertyBehavior {
    struct IDispatch IDispatch;
    VOID DispHTCPropertyBehavior;
    VOID DispHTCPropertyBehavior;
    VOID DispHTCPropertyBehavior;
    struct DispHTCPropertyBehavior *operator=;
    struct DispHTCPropertyBehavior *operator=;
};

typedef struct DispHTMLAnchorElement {
    struct IDispatch IDispatch;
    VOID DispHTMLAnchorElement;
    VOID DispHTMLAnchorElement;
    VOID DispHTMLAnchorElement;
    struct DispHTMLAnchorElement *operator=;
    struct DispHTMLAnchorElement *operator=;
};

typedef struct DispHTMLAppBehavior {
    struct IDispatch IDispatch;
    VOID DispHTMLAppBehavior;
    VOID DispHTMLAppBehavior;
    VOID DispHTMLAppBehavior;
    struct DispHTMLAppBehavior *operator=;
    struct DispHTMLAppBehavior *operator=;
};

typedef struct DispHTMLAreaElement {
    struct IDispatch IDispatch;
    VOID DispHTMLAreaElement;
    VOID DispHTMLAreaElement;
    VOID DispHTMLAreaElement;
    struct DispHTMLAreaElement *operator=;
    struct DispHTMLAreaElement *operator=;
};

typedef struct DispHTMLAreasCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLAreasCollection;
    VOID DispHTMLAreasCollection;
    VOID DispHTMLAreasCollection;
    struct DispHTMLAreasCollection *operator=;
    struct DispHTMLAreasCollection *operator=;
};

typedef struct DispHTMLAttributeCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLAttributeCollection;
    VOID DispHTMLAttributeCollection;
    VOID DispHTMLAttributeCollection;
    struct DispHTMLAttributeCollection *operator=;
    struct DispHTMLAttributeCollection *operator=;
};

typedef struct DispHTMLAudioElement {
    struct IDispatch IDispatch;
    VOID DispHTMLAudioElement;
    VOID DispHTMLAudioElement;
    VOID DispHTMLAudioElement;
    struct DispHTMLAudioElement *operator=;
    struct DispHTMLAudioElement *operator=;
};

typedef struct DispHTMLBGsound {
    struct IDispatch IDispatch;
    VOID DispHTMLBGsound;
    VOID DispHTMLBGsound;
    VOID DispHTMLBGsound;
    struct DispHTMLBGsound *operator=;
    struct DispHTMLBGsound *operator=;
};

typedef struct DispHTMLBRElement {
    struct IDispatch IDispatch;
    VOID DispHTMLBRElement;
    VOID DispHTMLBRElement;
    VOID DispHTMLBRElement;
    struct DispHTMLBRElement *operator=;
    struct DispHTMLBRElement *operator=;
};

typedef struct DispHTMLBaseElement {
    struct IDispatch IDispatch;
    VOID DispHTMLBaseElement;
    VOID DispHTMLBaseElement;
    VOID DispHTMLBaseElement;
    struct DispHTMLBaseElement *operator=;
    struct DispHTMLBaseElement *operator=;
};

typedef struct DispHTMLBaseFontElement {
    struct IDispatch IDispatch;
    VOID DispHTMLBaseFontElement;
    VOID DispHTMLBaseFontElement;
    VOID DispHTMLBaseFontElement;
    struct DispHTMLBaseFontElement *operator=;
    struct DispHTMLBaseFontElement *operator=;
};

typedef struct DispHTMLBlockElement {
    struct IDispatch IDispatch;
    VOID DispHTMLBlockElement;
    VOID DispHTMLBlockElement;
    VOID DispHTMLBlockElement;
    struct DispHTMLBlockElement *operator=;
    struct DispHTMLBlockElement *operator=;
};

typedef struct DispHTMLBody {
    struct IDispatch IDispatch;
    VOID DispHTMLBody;
    VOID DispHTMLBody;
    VOID DispHTMLBody;
    struct DispHTMLBody *operator=;
    struct DispHTMLBody *operator=;
};

typedef struct DispHTMLButtonElement {
    struct IDispatch IDispatch;
    VOID DispHTMLButtonElement;
    VOID DispHTMLButtonElement;
    VOID DispHTMLButtonElement;
    struct DispHTMLButtonElement *operator=;
    struct DispHTMLButtonElement *operator=;
};

typedef struct DispHTMLCSSImportRule {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSImportRule;
    VOID DispHTMLCSSImportRule;
    VOID DispHTMLCSSImportRule;
    struct DispHTMLCSSImportRule *operator=;
    struct DispHTMLCSSImportRule *operator=;
};

typedef struct DispHTMLCSSMediaList {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSMediaList;
    VOID DispHTMLCSSMediaList;
    VOID DispHTMLCSSMediaList;
    struct DispHTMLCSSMediaList *operator=;
    struct DispHTMLCSSMediaList *operator=;
};

typedef struct DispHTMLCSSMediaRule {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSMediaRule;
    VOID DispHTMLCSSMediaRule;
    VOID DispHTMLCSSMediaRule;
    struct DispHTMLCSSMediaRule *operator=;
    struct DispHTMLCSSMediaRule *operator=;
};

typedef struct DispHTMLCSSNamespaceRule {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSNamespaceRule;
    VOID DispHTMLCSSNamespaceRule;
    VOID DispHTMLCSSNamespaceRule;
    struct DispHTMLCSSNamespaceRule *operator=;
    struct DispHTMLCSSNamespaceRule *operator=;
};

typedef struct DispHTMLCSSRule {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSRule;
    VOID DispHTMLCSSRule;
    VOID DispHTMLCSSRule;
    struct DispHTMLCSSRule *operator=;
    struct DispHTMLCSSRule *operator=;
};

typedef struct DispHTMLCSSStyleDeclaration {
    struct IDispatch IDispatch;
    VOID DispHTMLCSSStyleDeclaration;
    VOID DispHTMLCSSStyleDeclaration;
    VOID DispHTMLCSSStyleDeclaration;
    struct DispHTMLCSSStyleDeclaration *operator=;
    struct DispHTMLCSSStyleDeclaration *operator=;
};

typedef struct DispHTMLCanvasElement {
    struct IDispatch IDispatch;
    VOID DispHTMLCanvasElement;
    VOID DispHTMLCanvasElement;
    VOID DispHTMLCanvasElement;
    struct DispHTMLCanvasElement *operator=;
    struct DispHTMLCanvasElement *operator=;
};

typedef struct DispHTMLCommentElement {
    struct IDispatch IDispatch;
    VOID DispHTMLCommentElement;
    VOID DispHTMLCommentElement;
    VOID DispHTMLCommentElement;
    struct DispHTMLCommentElement *operator=;
    struct DispHTMLCommentElement *operator=;
};

typedef struct DispHTMLCurrentStyle {
    struct IDispatch IDispatch;
    VOID DispHTMLCurrentStyle;
    VOID DispHTMLCurrentStyle;
    VOID DispHTMLCurrentStyle;
    struct DispHTMLCurrentStyle *operator=;
    struct DispHTMLCurrentStyle *operator=;
};

typedef struct DispHTMLDDElement {
    struct IDispatch IDispatch;
    VOID DispHTMLDDElement;
    VOID DispHTMLDDElement;
    VOID DispHTMLDDElement;
    struct DispHTMLDDElement *operator=;
    struct DispHTMLDDElement *operator=;
};

typedef struct DispHTMLDListElement {
    struct IDispatch IDispatch;
    VOID DispHTMLDListElement;
    VOID DispHTMLDListElement;
    VOID DispHTMLDListElement;
    struct DispHTMLDListElement *operator=;
    struct DispHTMLDListElement *operator=;
};

typedef struct DispHTMLDOMAttribute {
    struct IDispatch IDispatch;
    VOID DispHTMLDOMAttribute;
    VOID DispHTMLDOMAttribute;
    VOID DispHTMLDOMAttribute;
    struct DispHTMLDOMAttribute *operator=;
    struct DispHTMLDOMAttribute *operator=;
};

typedef struct DispHTMLDOMImplementation {
    struct IDispatch IDispatch;
    VOID DispHTMLDOMImplementation;
    VOID DispHTMLDOMImplementation;
    VOID DispHTMLDOMImplementation;
    struct DispHTMLDOMImplementation *operator=;
    struct DispHTMLDOMImplementation *operator=;
};

typedef struct DispHTMLDOMRange {
    struct IDispatch IDispatch;
    VOID DispHTMLDOMRange;
    VOID DispHTMLDOMRange;
    VOID DispHTMLDOMRange;
    struct DispHTMLDOMRange *operator=;
    struct DispHTMLDOMRange *operator=;
};

typedef struct DispHTMLDOMTextNode {
    struct IDispatch IDispatch;
    VOID DispHTMLDOMTextNode;
    VOID DispHTMLDOMTextNode;
    VOID DispHTMLDOMTextNode;
    struct DispHTMLDOMTextNode *operator=;
    struct DispHTMLDOMTextNode *operator=;
};

typedef struct DispHTMLDTElement {
    struct IDispatch IDispatch;
    VOID DispHTMLDTElement;
    VOID DispHTMLDTElement;
    VOID DispHTMLDTElement;
    struct DispHTMLDTElement *operator=;
    struct DispHTMLDTElement *operator=;
};

typedef struct DispHTMLDefaults {
    struct IDispatch IDispatch;
    VOID DispHTMLDefaults;
    VOID DispHTMLDefaults;
    VOID DispHTMLDefaults;
    struct DispHTMLDefaults *operator=;
    struct DispHTMLDefaults *operator=;
};

typedef struct DispHTMLDivElement {
    struct IDispatch IDispatch;
    VOID DispHTMLDivElement;
    VOID DispHTMLDivElement;
    VOID DispHTMLDivElement;
    struct DispHTMLDivElement *operator=;
    struct DispHTMLDivElement *operator=;
};

typedef struct DispHTMLDivPosition {
    struct IDispatch IDispatch;
    VOID DispHTMLDivPosition;
    VOID DispHTMLDivPosition;
    VOID DispHTMLDivPosition;
    struct DispHTMLDivPosition *operator=;
    struct DispHTMLDivPosition *operator=;
};

typedef struct DispHTMLDocument {
    struct IDispatch IDispatch;
    VOID DispHTMLDocument;
    VOID DispHTMLDocument;
    VOID DispHTMLDocument;
    struct DispHTMLDocument *operator=;
    struct DispHTMLDocument *operator=;
};

typedef struct DispHTMLDocumentCompatibleInfo {
    struct IDispatch IDispatch;
    VOID DispHTMLDocumentCompatibleInfo;
    VOID DispHTMLDocumentCompatibleInfo;
    VOID DispHTMLDocumentCompatibleInfo;
    struct DispHTMLDocumentCompatibleInfo *operator=;
    struct DispHTMLDocumentCompatibleInfo *operator=;
};

typedef struct DispHTMLDocumentCompatibleInfoCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLDocumentCompatibleInfoCollection;
    VOID DispHTMLDocumentCompatibleInfoCollection;
    VOID DispHTMLDocumentCompatibleInfoCollection;
    struct DispHTMLDocumentCompatibleInfoCollection *operator=;
    struct DispHTMLDocumentCompatibleInfoCollection *operator=;
};

typedef struct DispHTMLElementCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLElementCollection;
    VOID DispHTMLElementCollection;
    VOID DispHTMLElementCollection;
    struct DispHTMLElementCollection *operator=;
    struct DispHTMLElementCollection *operator=;
};

typedef struct DispHTMLEmbed {
    struct IDispatch IDispatch;
    VOID DispHTMLEmbed;
    VOID DispHTMLEmbed;
    VOID DispHTMLEmbed;
    struct DispHTMLEmbed *operator=;
    struct DispHTMLEmbed *operator=;
};

typedef struct DispHTMLFieldSetElement {
    struct IDispatch IDispatch;
    VOID DispHTMLFieldSetElement;
    VOID DispHTMLFieldSetElement;
    VOID DispHTMLFieldSetElement;
    struct DispHTMLFieldSetElement *operator=;
    struct DispHTMLFieldSetElement *operator=;
};

typedef struct DispHTMLFontElement {
    struct IDispatch IDispatch;
    VOID DispHTMLFontElement;
    VOID DispHTMLFontElement;
    VOID DispHTMLFontElement;
    struct DispHTMLFontElement *operator=;
    struct DispHTMLFontElement *operator=;
};

typedef struct DispHTMLFormElement {
    struct IDispatch IDispatch;
    VOID DispHTMLFormElement;
    VOID DispHTMLFormElement;
    VOID DispHTMLFormElement;
    struct DispHTMLFormElement *operator=;
    struct DispHTMLFormElement *operator=;
};

typedef struct DispHTMLFrameBase {
    struct IDispatch IDispatch;
    VOID DispHTMLFrameBase;
    VOID DispHTMLFrameBase;
    VOID DispHTMLFrameBase;
    struct DispHTMLFrameBase *operator=;
    struct DispHTMLFrameBase *operator=;
};

typedef struct DispHTMLFrameElement {
    struct IDispatch IDispatch;
    VOID DispHTMLFrameElement;
    VOID DispHTMLFrameElement;
    VOID DispHTMLFrameElement;
    struct DispHTMLFrameElement *operator=;
    struct DispHTMLFrameElement *operator=;
};

typedef struct DispHTMLFrameSetSite {
    struct IDispatch IDispatch;
    VOID DispHTMLFrameSetSite;
    VOID DispHTMLFrameSetSite;
    VOID DispHTMLFrameSetSite;
    struct DispHTMLFrameSetSite *operator=;
    struct DispHTMLFrameSetSite *operator=;
};

typedef struct DispHTMLGenericElement {
    struct IDispatch IDispatch;
    VOID DispHTMLGenericElement;
    VOID DispHTMLGenericElement;
    VOID DispHTMLGenericElement;
    struct DispHTMLGenericElement *operator=;
    struct DispHTMLGenericElement *operator=;
};

typedef struct DispHTMLHRElement {
    struct IDispatch IDispatch;
    VOID DispHTMLHRElement;
    VOID DispHTMLHRElement;
    VOID DispHTMLHRElement;
    struct DispHTMLHRElement *operator=;
    struct DispHTMLHRElement *operator=;
};

typedef struct DispHTMLHeadElement {
    struct IDispatch IDispatch;
    VOID DispHTMLHeadElement;
    VOID DispHTMLHeadElement;
    VOID DispHTMLHeadElement;
    struct DispHTMLHeadElement *operator=;
    struct DispHTMLHeadElement *operator=;
};

typedef struct DispHTMLHeaderElement {
    struct IDispatch IDispatch;
    VOID DispHTMLHeaderElement;
    VOID DispHTMLHeaderElement;
    VOID DispHTMLHeaderElement;
    struct DispHTMLHeaderElement *operator=;
    struct DispHTMLHeaderElement *operator=;
};

typedef struct DispHTMLHistory {
    struct IDispatch IDispatch;
    VOID DispHTMLHistory;
    VOID DispHTMLHistory;
    VOID DispHTMLHistory;
    struct DispHTMLHistory *operator=;
    struct DispHTMLHistory *operator=;
};

typedef struct DispHTMLHtmlElement {
    struct IDispatch IDispatch;
    VOID DispHTMLHtmlElement;
    VOID DispHTMLHtmlElement;
    VOID DispHTMLHtmlElement;
    struct DispHTMLHtmlElement *operator=;
    struct DispHTMLHtmlElement *operator=;
};

typedef struct DispHTMLIFrame {
    struct IDispatch IDispatch;
    VOID DispHTMLIFrame;
    VOID DispHTMLIFrame;
    VOID DispHTMLIFrame;
    struct DispHTMLIFrame *operator=;
    struct DispHTMLIFrame *operator=;
};

typedef struct DispHTMLImg {
    struct IDispatch IDispatch;
    VOID DispHTMLImg;
    VOID DispHTMLImg;
    VOID DispHTMLImg;
    struct DispHTMLImg *operator=;
    struct DispHTMLImg *operator=;
};

typedef struct DispHTMLInputElement {
    struct IDispatch IDispatch;
    VOID DispHTMLInputElement;
    VOID DispHTMLInputElement;
    VOID DispHTMLInputElement;
    struct DispHTMLInputElement *operator=;
    struct DispHTMLInputElement *operator=;
};

typedef struct DispHTMLIsIndexElement {
    struct IDispatch IDispatch;
    VOID DispHTMLIsIndexElement;
    VOID DispHTMLIsIndexElement;
    VOID DispHTMLIsIndexElement;
    struct DispHTMLIsIndexElement *operator=;
    struct DispHTMLIsIndexElement *operator=;
};

typedef struct DispHTMLLIElement {
    struct IDispatch IDispatch;
    VOID DispHTMLLIElement;
    VOID DispHTMLLIElement;
    VOID DispHTMLLIElement;
    struct DispHTMLLIElement *operator=;
    struct DispHTMLLIElement *operator=;
};

typedef struct DispHTMLLabelElement {
    struct IDispatch IDispatch;
    VOID DispHTMLLabelElement;
    VOID DispHTMLLabelElement;
    VOID DispHTMLLabelElement;
    struct DispHTMLLabelElement *operator=;
    struct DispHTMLLabelElement *operator=;
};

typedef struct DispHTMLLegendElement {
    struct IDispatch IDispatch;
    VOID DispHTMLLegendElement;
    VOID DispHTMLLegendElement;
    VOID DispHTMLLegendElement;
    struct DispHTMLLegendElement *operator=;
    struct DispHTMLLegendElement *operator=;
};

typedef struct DispHTMLLinkElement {
    struct IDispatch IDispatch;
    VOID DispHTMLLinkElement;
    VOID DispHTMLLinkElement;
    VOID DispHTMLLinkElement;
    struct DispHTMLLinkElement *operator=;
    struct DispHTMLLinkElement *operator=;
};

typedef struct DispHTMLListElement {
    struct IDispatch IDispatch;
    VOID DispHTMLListElement;
    VOID DispHTMLListElement;
    VOID DispHTMLListElement;
    struct DispHTMLListElement *operator=;
    struct DispHTMLListElement *operator=;
};

typedef struct DispHTMLLocation {
    struct IDispatch IDispatch;
    VOID DispHTMLLocation;
    VOID DispHTMLLocation;
    VOID DispHTMLLocation;
    struct DispHTMLLocation *operator=;
    struct DispHTMLLocation *operator=;
};

typedef struct DispHTMLMSCSSKeyframeRule {
    struct IDispatch IDispatch;
    VOID DispHTMLMSCSSKeyframeRule;
    VOID DispHTMLMSCSSKeyframeRule;
    VOID DispHTMLMSCSSKeyframeRule;
    struct DispHTMLMSCSSKeyframeRule *operator=;
    struct DispHTMLMSCSSKeyframeRule *operator=;
};

typedef struct DispHTMLMSCSSKeyframesRule {
    struct IDispatch IDispatch;
    VOID DispHTMLMSCSSKeyframesRule;
    VOID DispHTMLMSCSSKeyframesRule;
    VOID DispHTMLMSCSSKeyframesRule;
    struct DispHTMLMSCSSKeyframesRule *operator=;
    struct DispHTMLMSCSSKeyframesRule *operator=;
};

typedef struct DispHTMLMapElement {
    struct IDispatch IDispatch;
    VOID DispHTMLMapElement;
    VOID DispHTMLMapElement;
    VOID DispHTMLMapElement;
    struct DispHTMLMapElement *operator=;
    struct DispHTMLMapElement *operator=;
};

typedef struct DispHTMLMarqueeElement {
    struct IDispatch IDispatch;
    VOID DispHTMLMarqueeElement;
    VOID DispHTMLMarqueeElement;
    VOID DispHTMLMarqueeElement;
    struct DispHTMLMarqueeElement *operator=;
    struct DispHTMLMarqueeElement *operator=;
};

typedef struct DispHTMLMediaElement {
    struct IDispatch IDispatch;
    VOID DispHTMLMediaElement;
    VOID DispHTMLMediaElement;
    VOID DispHTMLMediaElement;
    struct DispHTMLMediaElement *operator=;
    struct DispHTMLMediaElement *operator=;
};

typedef struct DispHTMLMediaError {
    struct IDispatch IDispatch;
    VOID DispHTMLMediaError;
    VOID DispHTMLMediaError;
    VOID DispHTMLMediaError;
    struct DispHTMLMediaError *operator=;
    struct DispHTMLMediaError *operator=;
};

typedef struct DispHTMLMetaElement {
    struct IDispatch IDispatch;
    VOID DispHTMLMetaElement;
    VOID DispHTMLMetaElement;
    VOID DispHTMLMetaElement;
    struct DispHTMLMetaElement *operator=;
    struct DispHTMLMetaElement *operator=;
};

typedef struct DispHTMLNamespace {
    struct IDispatch IDispatch;
    VOID DispHTMLNamespace;
    VOID DispHTMLNamespace;
    VOID DispHTMLNamespace;
    struct DispHTMLNamespace *operator=;
    struct DispHTMLNamespace *operator=;
};

typedef struct DispHTMLNamespaceCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLNamespaceCollection;
    VOID DispHTMLNamespaceCollection;
    VOID DispHTMLNamespaceCollection;
    struct DispHTMLNamespaceCollection *operator=;
    struct DispHTMLNamespaceCollection *operator=;
};

typedef struct DispHTMLNavigator {
    struct IDispatch IDispatch;
    VOID DispHTMLNavigator;
    VOID DispHTMLNavigator;
    VOID DispHTMLNavigator;
    struct DispHTMLNavigator *operator=;
    struct DispHTMLNavigator *operator=;
};

typedef struct DispHTMLNextIdElement {
    struct IDispatch IDispatch;
    VOID DispHTMLNextIdElement;
    VOID DispHTMLNextIdElement;
    VOID DispHTMLNextIdElement;
    struct DispHTMLNextIdElement *operator=;
    struct DispHTMLNextIdElement *operator=;
};

typedef struct DispHTMLNoShowElement {
    struct IDispatch IDispatch;
    VOID DispHTMLNoShowElement;
    VOID DispHTMLNoShowElement;
    VOID DispHTMLNoShowElement;
    struct DispHTMLNoShowElement *operator=;
    struct DispHTMLNoShowElement *operator=;
};

typedef struct DispHTMLOListElement {
    struct IDispatch IDispatch;
    VOID DispHTMLOListElement;
    VOID DispHTMLOListElement;
    VOID DispHTMLOListElement;
    struct DispHTMLOListElement *operator=;
    struct DispHTMLOListElement *operator=;
};

typedef struct DispHTMLObjectElement {
    struct IDispatch IDispatch;
    VOID DispHTMLObjectElement;
    VOID DispHTMLObjectElement;
    VOID DispHTMLObjectElement;
    struct DispHTMLObjectElement *operator=;
    struct DispHTMLObjectElement *operator=;
};

typedef struct DispHTMLOptionElement {
    struct IDispatch IDispatch;
    VOID DispHTMLOptionElement;
    VOID DispHTMLOptionElement;
    VOID DispHTMLOptionElement;
    struct DispHTMLOptionElement *operator=;
    struct DispHTMLOptionElement *operator=;
};

typedef struct DispHTMLParaElement {
    struct IDispatch IDispatch;
    VOID DispHTMLParaElement;
    VOID DispHTMLParaElement;
    VOID DispHTMLParaElement;
    struct DispHTMLParaElement *operator=;
    struct DispHTMLParaElement *operator=;
};

typedef struct DispHTMLParamElement {
    struct IDispatch IDispatch;
    VOID DispHTMLParamElement;
    VOID DispHTMLParamElement;
    VOID DispHTMLParamElement;
    struct DispHTMLParamElement *operator=;
    struct DispHTMLParamElement *operator=;
};

typedef struct DispHTMLPerformance {
    struct IDispatch IDispatch;
    VOID DispHTMLPerformance;
    VOID DispHTMLPerformance;
    VOID DispHTMLPerformance;
    struct DispHTMLPerformance *operator=;
    struct DispHTMLPerformance *operator=;
};

typedef struct DispHTMLPerformanceNavigation {
    struct IDispatch IDispatch;
    VOID DispHTMLPerformanceNavigation;
    VOID DispHTMLPerformanceNavigation;
    VOID DispHTMLPerformanceNavigation;
    struct DispHTMLPerformanceNavigation *operator=;
    struct DispHTMLPerformanceNavigation *operator=;
};

typedef struct DispHTMLPerformanceTiming {
    struct IDispatch IDispatch;
    VOID DispHTMLPerformanceTiming;
    VOID DispHTMLPerformanceTiming;
    VOID DispHTMLPerformanceTiming;
    struct DispHTMLPerformanceTiming *operator=;
    struct DispHTMLPerformanceTiming *operator=;
};

typedef struct DispHTMLPhraseElement {
    struct IDispatch IDispatch;
    VOID DispHTMLPhraseElement;
    VOID DispHTMLPhraseElement;
    VOID DispHTMLPhraseElement;
    struct DispHTMLPhraseElement *operator=;
    struct DispHTMLPhraseElement *operator=;
};

typedef struct DispHTMLPopup {
    struct IDispatch IDispatch;
    VOID DispHTMLPopup;
    VOID DispHTMLPopup;
    VOID DispHTMLPopup;
    struct DispHTMLPopup *operator=;
    struct DispHTMLPopup *operator=;
};

typedef struct DispHTMLProgressElement {
    struct IDispatch IDispatch;
    VOID DispHTMLProgressElement;
    VOID DispHTMLProgressElement;
    VOID DispHTMLProgressElement;
    struct DispHTMLProgressElement *operator=;
    struct DispHTMLProgressElement *operator=;
};

typedef struct DispHTMLRenderStyle {
    struct IDispatch IDispatch;
    VOID DispHTMLRenderStyle;
    VOID DispHTMLRenderStyle;
    VOID DispHTMLRenderStyle;
    struct DispHTMLRenderStyle *operator=;
    struct DispHTMLRenderStyle *operator=;
};

typedef struct DispHTMLRichtextElement {
    struct IDispatch IDispatch;
    VOID DispHTMLRichtextElement;
    VOID DispHTMLRichtextElement;
    VOID DispHTMLRichtextElement;
    struct DispHTMLRichtextElement *operator=;
    struct DispHTMLRichtextElement *operator=;
};

typedef struct DispHTMLRuleStyle {
    struct IDispatch IDispatch;
    VOID DispHTMLRuleStyle;
    VOID DispHTMLRuleStyle;
    VOID DispHTMLRuleStyle;
    struct DispHTMLRuleStyle *operator=;
    struct DispHTMLRuleStyle *operator=;
};

typedef struct DispHTMLScreen {
    struct IDispatch IDispatch;
    VOID DispHTMLScreen;
    VOID DispHTMLScreen;
    VOID DispHTMLScreen;
    struct DispHTMLScreen *operator=;
    struct DispHTMLScreen *operator=;
};

typedef struct DispHTMLScriptElement {
    struct IDispatch IDispatch;
    VOID DispHTMLScriptElement;
    VOID DispHTMLScriptElement;
    VOID DispHTMLScriptElement;
    struct DispHTMLScriptElement *operator=;
    struct DispHTMLScriptElement *operator=;
};

typedef struct DispHTMLSelectElement {
    struct IDispatch IDispatch;
    VOID DispHTMLSelectElement;
    VOID DispHTMLSelectElement;
    VOID DispHTMLSelectElement;
    struct DispHTMLSelectElement *operator=;
    struct DispHTMLSelectElement *operator=;
};

typedef struct DispHTMLSemanticElement {
    struct IDispatch IDispatch;
    VOID DispHTMLSemanticElement;
    VOID DispHTMLSemanticElement;
    VOID DispHTMLSemanticElement;
    struct DispHTMLSemanticElement *operator=;
    struct DispHTMLSemanticElement *operator=;
};

typedef struct DispHTMLSourceElement {
    struct IDispatch IDispatch;
    VOID DispHTMLSourceElement;
    VOID DispHTMLSourceElement;
    VOID DispHTMLSourceElement;
    struct DispHTMLSourceElement *operator=;
    struct DispHTMLSourceElement *operator=;
};

typedef struct DispHTMLSpanElement {
    struct IDispatch IDispatch;
    VOID DispHTMLSpanElement;
    VOID DispHTMLSpanElement;
    VOID DispHTMLSpanElement;
    struct DispHTMLSpanElement *operator=;
    struct DispHTMLSpanElement *operator=;
};

typedef struct DispHTMLSpanFlow {
    struct IDispatch IDispatch;
    VOID DispHTMLSpanFlow;
    VOID DispHTMLSpanFlow;
    VOID DispHTMLSpanFlow;
    struct DispHTMLSpanFlow *operator=;
    struct DispHTMLSpanFlow *operator=;
};

typedef struct DispHTMLStorage {
    struct IDispatch IDispatch;
    VOID DispHTMLStorage;
    VOID DispHTMLStorage;
    VOID DispHTMLStorage;
    struct DispHTMLStorage *operator=;
    struct DispHTMLStorage *operator=;
};

typedef struct DispHTMLStyle {
    struct IDispatch IDispatch;
    VOID DispHTMLStyle;
    VOID DispHTMLStyle;
    VOID DispHTMLStyle;
    struct DispHTMLStyle *operator=;
    struct DispHTMLStyle *operator=;
};

typedef struct DispHTMLStyleElement {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleElement;
    VOID DispHTMLStyleElement;
    VOID DispHTMLStyleElement;
    struct DispHTMLStyleElement *operator=;
    struct DispHTMLStyleElement *operator=;
};

typedef struct DispHTMLStyleFontFace {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleFontFace;
    VOID DispHTMLStyleFontFace;
    VOID DispHTMLStyleFontFace;
    struct DispHTMLStyleFontFace *operator=;
    struct DispHTMLStyleFontFace *operator=;
};

typedef struct DispHTMLStyleMedia {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleMedia;
    VOID DispHTMLStyleMedia;
    VOID DispHTMLStyleMedia;
    struct DispHTMLStyleMedia *operator=;
    struct DispHTMLStyleMedia *operator=;
};

typedef struct DispHTMLStyleSheet {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheet;
    VOID DispHTMLStyleSheet;
    VOID DispHTMLStyleSheet;
    struct DispHTMLStyleSheet *operator=;
    struct DispHTMLStyleSheet *operator=;
};

typedef struct DispHTMLStyleSheetPage {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetPage;
    VOID DispHTMLStyleSheetPage;
    VOID DispHTMLStyleSheetPage;
    struct DispHTMLStyleSheetPage *operator=;
    struct DispHTMLStyleSheetPage *operator=;
};

typedef struct DispHTMLStyleSheetPagesCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetPagesCollection;
    VOID DispHTMLStyleSheetPagesCollection;
    VOID DispHTMLStyleSheetPagesCollection;
    struct DispHTMLStyleSheetPagesCollection *operator=;
    struct DispHTMLStyleSheetPagesCollection *operator=;
};

typedef struct DispHTMLStyleSheetRule {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetRule;
    VOID DispHTMLStyleSheetRule;
    VOID DispHTMLStyleSheetRule;
    struct DispHTMLStyleSheetRule *operator=;
    struct DispHTMLStyleSheetRule *operator=;
};

typedef struct DispHTMLStyleSheetRulesAppliedCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetRulesAppliedCollection;
    VOID DispHTMLStyleSheetRulesAppliedCollection;
    VOID DispHTMLStyleSheetRulesAppliedCollection;
    struct DispHTMLStyleSheetRulesAppliedCollection *operator=;
    struct DispHTMLStyleSheetRulesAppliedCollection *operator=;
};

typedef struct DispHTMLStyleSheetRulesCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetRulesCollection;
    VOID DispHTMLStyleSheetRulesCollection;
    VOID DispHTMLStyleSheetRulesCollection;
    struct DispHTMLStyleSheetRulesCollection *operator=;
    struct DispHTMLStyleSheetRulesCollection *operator=;
};

typedef struct DispHTMLStyleSheetsCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLStyleSheetsCollection;
    VOID DispHTMLStyleSheetsCollection;
    VOID DispHTMLStyleSheetsCollection;
    struct DispHTMLStyleSheetsCollection *operator=;
    struct DispHTMLStyleSheetsCollection *operator=;
};

typedef struct DispHTMLTable {
    struct IDispatch IDispatch;
    VOID DispHTMLTable;
    VOID DispHTMLTable;
    VOID DispHTMLTable;
    struct DispHTMLTable *operator=;
    struct DispHTMLTable *operator=;
};

typedef struct DispHTMLTableCaption {
    struct IDispatch IDispatch;
    VOID DispHTMLTableCaption;
    VOID DispHTMLTableCaption;
    VOID DispHTMLTableCaption;
    struct DispHTMLTableCaption *operator=;
    struct DispHTMLTableCaption *operator=;
};

typedef struct DispHTMLTableCell {
    struct IDispatch IDispatch;
    VOID DispHTMLTableCell;
    VOID DispHTMLTableCell;
    VOID DispHTMLTableCell;
    struct DispHTMLTableCell *operator=;
    struct DispHTMLTableCell *operator=;
};

typedef struct DispHTMLTableCol {
    struct IDispatch IDispatch;
    VOID DispHTMLTableCol;
    VOID DispHTMLTableCol;
    VOID DispHTMLTableCol;
    struct DispHTMLTableCol *operator=;
    struct DispHTMLTableCol *operator=;
};

typedef struct DispHTMLTableRow {
    struct IDispatch IDispatch;
    VOID DispHTMLTableRow;
    VOID DispHTMLTableRow;
    VOID DispHTMLTableRow;
    struct DispHTMLTableRow *operator=;
    struct DispHTMLTableRow *operator=;
};

typedef struct DispHTMLTableSection {
    struct IDispatch IDispatch;
    VOID DispHTMLTableSection;
    VOID DispHTMLTableSection;
    VOID DispHTMLTableSection;
    struct DispHTMLTableSection *operator=;
    struct DispHTMLTableSection *operator=;
};

typedef struct DispHTMLTextAreaElement {
    struct IDispatch IDispatch;
    VOID DispHTMLTextAreaElement;
    VOID DispHTMLTextAreaElement;
    VOID DispHTMLTextAreaElement;
    struct DispHTMLTextAreaElement *operator=;
    struct DispHTMLTextAreaElement *operator=;
};

typedef struct DispHTMLTextElement {
    struct IDispatch IDispatch;
    VOID DispHTMLTextElement;
    VOID DispHTMLTextElement;
    VOID DispHTMLTextElement;
    struct DispHTMLTextElement *operator=;
    struct DispHTMLTextElement *operator=;
};

typedef struct DispHTMLTimeRanges {
    struct IDispatch IDispatch;
    VOID DispHTMLTimeRanges;
    VOID DispHTMLTimeRanges;
    VOID DispHTMLTimeRanges;
    struct DispHTMLTimeRanges *operator=;
    struct DispHTMLTimeRanges *operator=;
};

typedef struct DispHTMLTitleElement {
    struct IDispatch IDispatch;
    VOID DispHTMLTitleElement;
    VOID DispHTMLTitleElement;
    VOID DispHTMLTitleElement;
    struct DispHTMLTitleElement *operator=;
    struct DispHTMLTitleElement *operator=;
};

typedef struct DispHTMLUListElement {
    struct IDispatch IDispatch;
    VOID DispHTMLUListElement;
    VOID DispHTMLUListElement;
    VOID DispHTMLUListElement;
    struct DispHTMLUListElement *operator=;
    struct DispHTMLUListElement *operator=;
};

typedef struct DispHTMLUnknownElement {
    struct IDispatch IDispatch;
    VOID DispHTMLUnknownElement;
    VOID DispHTMLUnknownElement;
    VOID DispHTMLUnknownElement;
    struct DispHTMLUnknownElement *operator=;
    struct DispHTMLUnknownElement *operator=;
};

typedef struct DispHTMLUrnCollection {
    struct IDispatch IDispatch;
    VOID DispHTMLUrnCollection;
    VOID DispHTMLUrnCollection;
    VOID DispHTMLUrnCollection;
    struct DispHTMLUrnCollection *operator=;
    struct DispHTMLUrnCollection *operator=;
};

typedef struct DispHTMLVideoElement {
    struct IDispatch IDispatch;
    VOID DispHTMLVideoElement;
    VOID DispHTMLVideoElement;
    VOID DispHTMLVideoElement;
    struct DispHTMLVideoElement *operator=;
    struct DispHTMLVideoElement *operator=;
};

typedef struct DispHTMLW3CComputedStyle {
    struct IDispatch IDispatch;
    VOID DispHTMLW3CComputedStyle;
    VOID DispHTMLW3CComputedStyle;
    VOID DispHTMLW3CComputedStyle;
    struct DispHTMLW3CComputedStyle *operator=;
    struct DispHTMLW3CComputedStyle *operator=;
};

typedef struct DispHTMLWindow2 {
    struct IDispatch IDispatch;
    VOID DispHTMLWindow2;
    VOID DispHTMLWindow2;
    VOID DispHTMLWindow2;
    struct DispHTMLWindow2 *operator=;
    struct DispHTMLWindow2 *operator=;
};

typedef struct DispHTMLWindowProxy {
    struct IDispatch IDispatch;
    VOID DispHTMLWindowProxy;
    VOID DispHTMLWindowProxy;
    VOID DispHTMLWindowProxy;
    struct DispHTMLWindowProxy *operator=;
    struct DispHTMLWindowProxy *operator=;
};

typedef struct DispHTMLWndOptionElement {
    struct IDispatch IDispatch;
    VOID DispHTMLWndOptionElement;
    VOID DispHTMLWndOptionElement;
    VOID DispHTMLWndOptionElement;
    struct DispHTMLWndOptionElement *operator=;
    struct DispHTMLWndOptionElement *operator=;
};

typedef struct DispHTMLWndSelectElement {
    struct IDispatch IDispatch;
    VOID DispHTMLWndSelectElement;
    VOID DispHTMLWndSelectElement;
    VOID DispHTMLWndSelectElement;
    struct DispHTMLWndSelectElement *operator=;
    struct DispHTMLWndSelectElement *operator=;
};

typedef struct DispHTMLXMLHttpRequest {
    struct IDispatch IDispatch;
    VOID DispHTMLXMLHttpRequest;
    VOID DispHTMLXMLHttpRequest;
    VOID DispHTMLXMLHttpRequest;
    struct DispHTMLXMLHttpRequest *operator=;
    struct DispHTMLXMLHttpRequest *operator=;
};

typedef struct DispIHTMLInputButtonElement {
    struct IDispatch IDispatch;
    VOID DispIHTMLInputButtonElement;
    VOID DispIHTMLInputButtonElement;
    VOID DispIHTMLInputButtonElement;
    struct DispIHTMLInputButtonElement *operator=;
    struct DispIHTMLInputButtonElement *operator=;
};

typedef struct DispIHTMLInputFileElement {
    struct IDispatch IDispatch;
    VOID DispIHTMLInputFileElement;
    VOID DispIHTMLInputFileElement;
    VOID DispIHTMLInputFileElement;
    struct DispIHTMLInputFileElement *operator=;
    struct DispIHTMLInputFileElement *operator=;
};

typedef struct DispIHTMLInputImage {
    struct IDispatch IDispatch;
    VOID DispIHTMLInputImage;
    VOID DispIHTMLInputImage;
    VOID DispIHTMLInputImage;
    struct DispIHTMLInputImage *operator=;
    struct DispIHTMLInputImage *operator=;
};

typedef struct DispIHTMLInputTextElement {
    struct IDispatch IDispatch;
    VOID DispIHTMLInputTextElement;
    VOID DispIHTMLInputTextElement;
    VOID DispIHTMLInputTextElement;
    struct DispIHTMLInputTextElement *operator=;
    struct DispIHTMLInputTextElement *operator=;
};

typedef struct DispIHTMLOptionButtonElement {
    struct IDispatch IDispatch;
    VOID DispIHTMLOptionButtonElement;
    VOID DispIHTMLOptionButtonElement;
    VOID DispIHTMLOptionButtonElement;
    struct DispIHTMLOptionButtonElement *operator=;
    struct DispIHTMLOptionButtonElement *operator=;
};

typedef struct DispInfo {
    struct DISPATCHINFO dispatchinfo;
    struct IUnknown **func;
};

typedef struct DispNodeIterator {
    struct IDispatch IDispatch;
    VOID DispNodeIterator;
    VOID DispNodeIterator;
    VOID DispNodeIterator;
    struct DispNodeIterator *operator=;
    struct DispNodeIterator *operator=;
};

typedef struct DispRangeException {
    struct IDispatch IDispatch;
    VOID DispRangeException;
    VOID DispRangeException;
    VOID DispRangeException;
    struct DispRangeException *operator=;
    struct DispRangeException *operator=;
};

typedef struct DispRulesApplied {
    struct IDispatch IDispatch;
    VOID DispRulesApplied;
    VOID DispRulesApplied;
    VOID DispRulesApplied;
    struct DispRulesApplied *operator=;
    struct DispRulesApplied *operator=;
};

typedef struct DispRulesAppliedCollection {
    struct IDispatch IDispatch;
    VOID DispRulesAppliedCollection;
    VOID DispRulesAppliedCollection;
    VOID DispRulesAppliedCollection;
    struct DispRulesAppliedCollection *operator=;
    struct DispRulesAppliedCollection *operator=;
};

typedef struct DispSVGAElement {
    struct IDispatch IDispatch;
    VOID DispSVGAElement;
    VOID DispSVGAElement;
    VOID DispSVGAElement;
    struct DispSVGAElement *operator=;
    struct DispSVGAElement *operator=;
};

typedef struct DispSVGCircleElement {
    struct IDispatch IDispatch;
    VOID DispSVGCircleElement;
    VOID DispSVGCircleElement;
    VOID DispSVGCircleElement;
    struct DispSVGCircleElement *operator=;
    struct DispSVGCircleElement *operator=;
};

typedef struct DispSVGClipPathElement {
    struct IDispatch IDispatch;
    VOID DispSVGClipPathElement;
    VOID DispSVGClipPathElement;
    VOID DispSVGClipPathElement;
    struct DispSVGClipPathElement *operator=;
    struct DispSVGClipPathElement *operator=;
};

typedef struct DispSVGDefsElement {
    struct IDispatch IDispatch;
    VOID DispSVGDefsElement;
    VOID DispSVGDefsElement;
    VOID DispSVGDefsElement;
    struct DispSVGDefsElement *operator=;
    struct DispSVGDefsElement *operator=;
};

typedef struct DispSVGDescElement {
    struct IDispatch IDispatch;
    VOID DispSVGDescElement;
    VOID DispSVGDescElement;
    VOID DispSVGDescElement;
    struct DispSVGDescElement *operator=;
    struct DispSVGDescElement *operator=;
};

typedef struct DispSVGElement {
    struct IDispatch IDispatch;
    VOID DispSVGElement;
    VOID DispSVGElement;
    VOID DispSVGElement;
    struct DispSVGElement *operator=;
    struct DispSVGElement *operator=;
};

typedef struct DispSVGElementInstance {
    struct IDispatch IDispatch;
    VOID DispSVGElementInstance;
    VOID DispSVGElementInstance;
    VOID DispSVGElementInstance;
    struct DispSVGElementInstance *operator=;
    struct DispSVGElementInstance *operator=;
};

typedef struct DispSVGElementInstanceList {
    struct IDispatch IDispatch;
    VOID DispSVGElementInstanceList;
    VOID DispSVGElementInstanceList;
    VOID DispSVGElementInstanceList;
    struct DispSVGElementInstanceList *operator=;
    struct DispSVGElementInstanceList *operator=;
};

typedef struct DispSVGEllipseElement {
    struct IDispatch IDispatch;
    VOID DispSVGEllipseElement;
    VOID DispSVGEllipseElement;
    VOID DispSVGEllipseElement;
    struct DispSVGEllipseElement *operator=;
    struct DispSVGEllipseElement *operator=;
};

typedef struct DispSVGException {
    struct IDispatch IDispatch;
    VOID DispSVGException;
    VOID DispSVGException;
    VOID DispSVGException;
    struct DispSVGException *operator=;
    struct DispSVGException *operator=;
};

typedef struct DispSVGGElement {
    struct IDispatch IDispatch;
    VOID DispSVGGElement;
    VOID DispSVGGElement;
    VOID DispSVGGElement;
    struct DispSVGGElement *operator=;
    struct DispSVGGElement *operator=;
};

typedef struct DispSVGGradientElement {
    struct IDispatch IDispatch;
    VOID DispSVGGradientElement;
    VOID DispSVGGradientElement;
    VOID DispSVGGradientElement;
    struct DispSVGGradientElement *operator=;
    struct DispSVGGradientElement *operator=;
};

typedef struct DispSVGImageElement {
    struct IDispatch IDispatch;
    VOID DispSVGImageElement;
    VOID DispSVGImageElement;
    VOID DispSVGImageElement;
    struct DispSVGImageElement *operator=;
    struct DispSVGImageElement *operator=;
};

typedef struct DispSVGLineElement {
    struct IDispatch IDispatch;
    VOID DispSVGLineElement;
    VOID DispSVGLineElement;
    VOID DispSVGLineElement;
    struct DispSVGLineElement *operator=;
    struct DispSVGLineElement *operator=;
};

typedef struct DispSVGLinearGradientElement {
    struct IDispatch IDispatch;
    VOID DispSVGLinearGradientElement;
    VOID DispSVGLinearGradientElement;
    VOID DispSVGLinearGradientElement;
    struct DispSVGLinearGradientElement *operator=;
    struct DispSVGLinearGradientElement *operator=;
};

typedef struct DispSVGMarkerElement {
    struct IDispatch IDispatch;
    VOID DispSVGMarkerElement;
    VOID DispSVGMarkerElement;
    VOID DispSVGMarkerElement;
    struct DispSVGMarkerElement *operator=;
    struct DispSVGMarkerElement *operator=;
};

typedef struct DispSVGMaskElement {
    struct IDispatch IDispatch;
    VOID DispSVGMaskElement;
    VOID DispSVGMaskElement;
    VOID DispSVGMaskElement;
    struct DispSVGMaskElement *operator=;
    struct DispSVGMaskElement *operator=;
};

typedef struct DispSVGMetadataElement {
    struct IDispatch IDispatch;
    VOID DispSVGMetadataElement;
    VOID DispSVGMetadataElement;
    VOID DispSVGMetadataElement;
    struct DispSVGMetadataElement *operator=;
    struct DispSVGMetadataElement *operator=;
};

typedef struct DispSVGPathElement {
    struct IDispatch IDispatch;
    VOID DispSVGPathElement;
    VOID DispSVGPathElement;
    VOID DispSVGPathElement;
    struct DispSVGPathElement *operator=;
    struct DispSVGPathElement *operator=;
};

typedef struct DispSVGPathSegArcAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegArcAbs;
    VOID DispSVGPathSegArcAbs;
    VOID DispSVGPathSegArcAbs;
    struct DispSVGPathSegArcAbs *operator=;
    struct DispSVGPathSegArcAbs *operator=;
};

typedef struct DispSVGPathSegArcRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegArcRel;
    VOID DispSVGPathSegArcRel;
    VOID DispSVGPathSegArcRel;
    struct DispSVGPathSegArcRel *operator=;
    struct DispSVGPathSegArcRel *operator=;
};

typedef struct DispSVGPathSegClosePath {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegClosePath;
    VOID DispSVGPathSegClosePath;
    VOID DispSVGPathSegClosePath;
    struct DispSVGPathSegClosePath *operator=;
    struct DispSVGPathSegClosePath *operator=;
};

typedef struct DispSVGPathSegCurvetoCubicAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoCubicAbs;
    VOID DispSVGPathSegCurvetoCubicAbs;
    VOID DispSVGPathSegCurvetoCubicAbs;
    struct DispSVGPathSegCurvetoCubicAbs *operator=;
    struct DispSVGPathSegCurvetoCubicAbs *operator=;
};

typedef struct DispSVGPathSegCurvetoCubicRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoCubicRel;
    VOID DispSVGPathSegCurvetoCubicRel;
    VOID DispSVGPathSegCurvetoCubicRel;
    struct DispSVGPathSegCurvetoCubicRel *operator=;
    struct DispSVGPathSegCurvetoCubicRel *operator=;
};

typedef struct DispSVGPathSegCurvetoCubicSmoothAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoCubicSmoothAbs;
    VOID DispSVGPathSegCurvetoCubicSmoothAbs;
    VOID DispSVGPathSegCurvetoCubicSmoothAbs;
    struct DispSVGPathSegCurvetoCubicSmoothAbs *operator=;
    struct DispSVGPathSegCurvetoCubicSmoothAbs *operator=;
};

typedef struct DispSVGPathSegCurvetoCubicSmoothRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoCubicSmoothRel;
    VOID DispSVGPathSegCurvetoCubicSmoothRel;
    VOID DispSVGPathSegCurvetoCubicSmoothRel;
    struct DispSVGPathSegCurvetoCubicSmoothRel *operator=;
    struct DispSVGPathSegCurvetoCubicSmoothRel *operator=;
};

typedef struct DispSVGPathSegCurvetoQuadraticAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoQuadraticAbs;
    VOID DispSVGPathSegCurvetoQuadraticAbs;
    VOID DispSVGPathSegCurvetoQuadraticAbs;
    struct DispSVGPathSegCurvetoQuadraticAbs *operator=;
    struct DispSVGPathSegCurvetoQuadraticAbs *operator=;
};

typedef struct DispSVGPathSegCurvetoQuadraticRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoQuadraticRel;
    VOID DispSVGPathSegCurvetoQuadraticRel;
    VOID DispSVGPathSegCurvetoQuadraticRel;
    struct DispSVGPathSegCurvetoQuadraticRel *operator=;
    struct DispSVGPathSegCurvetoQuadraticRel *operator=;
};

typedef struct DispSVGPathSegCurvetoQuadraticSmoothAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoQuadraticSmoothAbs;
    VOID DispSVGPathSegCurvetoQuadraticSmoothAbs;
    VOID DispSVGPathSegCurvetoQuadraticSmoothAbs;
    struct DispSVGPathSegCurvetoQuadraticSmoothAbs *operator=;
    struct DispSVGPathSegCurvetoQuadraticSmoothAbs *operator=;
};

typedef struct DispSVGPathSegCurvetoQuadraticSmoothRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegCurvetoQuadraticSmoothRel;
    VOID DispSVGPathSegCurvetoQuadraticSmoothRel;
    VOID DispSVGPathSegCurvetoQuadraticSmoothRel;
    struct DispSVGPathSegCurvetoQuadraticSmoothRel *operator=;
    struct DispSVGPathSegCurvetoQuadraticSmoothRel *operator=;
};

typedef struct DispSVGPathSegLinetoAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoAbs;
    VOID DispSVGPathSegLinetoAbs;
    VOID DispSVGPathSegLinetoAbs;
    struct DispSVGPathSegLinetoAbs *operator=;
    struct DispSVGPathSegLinetoAbs *operator=;
};

typedef struct DispSVGPathSegLinetoHorizontalAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoHorizontalAbs;
    VOID DispSVGPathSegLinetoHorizontalAbs;
    VOID DispSVGPathSegLinetoHorizontalAbs;
    struct DispSVGPathSegLinetoHorizontalAbs *operator=;
    struct DispSVGPathSegLinetoHorizontalAbs *operator=;
};

typedef struct DispSVGPathSegLinetoHorizontalRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoHorizontalRel;
    VOID DispSVGPathSegLinetoHorizontalRel;
    VOID DispSVGPathSegLinetoHorizontalRel;
    struct DispSVGPathSegLinetoHorizontalRel *operator=;
    struct DispSVGPathSegLinetoHorizontalRel *operator=;
};

typedef struct DispSVGPathSegLinetoRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoRel;
    VOID DispSVGPathSegLinetoRel;
    VOID DispSVGPathSegLinetoRel;
    struct DispSVGPathSegLinetoRel *operator=;
    struct DispSVGPathSegLinetoRel *operator=;
};

typedef struct DispSVGPathSegLinetoVerticalAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoVerticalAbs;
    VOID DispSVGPathSegLinetoVerticalAbs;
    VOID DispSVGPathSegLinetoVerticalAbs;
    struct DispSVGPathSegLinetoVerticalAbs *operator=;
    struct DispSVGPathSegLinetoVerticalAbs *operator=;
};

typedef struct DispSVGPathSegLinetoVerticalRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegLinetoVerticalRel;
    VOID DispSVGPathSegLinetoVerticalRel;
    VOID DispSVGPathSegLinetoVerticalRel;
    struct DispSVGPathSegLinetoVerticalRel *operator=;
    struct DispSVGPathSegLinetoVerticalRel *operator=;
};

typedef struct DispSVGPathSegMovetoAbs {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegMovetoAbs;
    VOID DispSVGPathSegMovetoAbs;
    VOID DispSVGPathSegMovetoAbs;
    struct DispSVGPathSegMovetoAbs *operator=;
    struct DispSVGPathSegMovetoAbs *operator=;
};

typedef struct DispSVGPathSegMovetoRel {
    struct IDispatch IDispatch;
    VOID DispSVGPathSegMovetoRel;
    VOID DispSVGPathSegMovetoRel;
    VOID DispSVGPathSegMovetoRel;
    struct DispSVGPathSegMovetoRel *operator=;
    struct DispSVGPathSegMovetoRel *operator=;
};

typedef struct DispSVGPatternElement {
    struct IDispatch IDispatch;
    VOID DispSVGPatternElement;
    VOID DispSVGPatternElement;
    VOID DispSVGPatternElement;
    struct DispSVGPatternElement *operator=;
    struct DispSVGPatternElement *operator=;
};

typedef struct DispSVGPolygonElement {
    struct IDispatch IDispatch;
    VOID DispSVGPolygonElement;
    VOID DispSVGPolygonElement;
    VOID DispSVGPolygonElement;
    struct DispSVGPolygonElement *operator=;
    struct DispSVGPolygonElement *operator=;
};

typedef struct DispSVGPolylineElement {
    struct IDispatch IDispatch;
    VOID DispSVGPolylineElement;
    VOID DispSVGPolylineElement;
    VOID DispSVGPolylineElement;
    struct DispSVGPolylineElement *operator=;
    struct DispSVGPolylineElement *operator=;
};

typedef struct DispSVGRadialGradientElement {
    struct IDispatch IDispatch;
    VOID DispSVGRadialGradientElement;
    VOID DispSVGRadialGradientElement;
    VOID DispSVGRadialGradientElement;
    struct DispSVGRadialGradientElement *operator=;
    struct DispSVGRadialGradientElement *operator=;
};

typedef struct DispSVGRectElement {
    struct IDispatch IDispatch;
    VOID DispSVGRectElement;
    VOID DispSVGRectElement;
    VOID DispSVGRectElement;
    struct DispSVGRectElement *operator=;
    struct DispSVGRectElement *operator=;
};

typedef struct DispSVGSVGElement {
    struct IDispatch IDispatch;
    VOID DispSVGSVGElement;
    VOID DispSVGSVGElement;
    VOID DispSVGSVGElement;
    struct DispSVGSVGElement *operator=;
    struct DispSVGSVGElement *operator=;
};

typedef struct DispSVGScriptElement {
    struct IDispatch IDispatch;
    VOID DispSVGScriptElement;
    VOID DispSVGScriptElement;
    VOID DispSVGScriptElement;
    struct DispSVGScriptElement *operator=;
    struct DispSVGScriptElement *operator=;
};

typedef struct DispSVGStopElement {
    struct IDispatch IDispatch;
    VOID DispSVGStopElement;
    VOID DispSVGStopElement;
    VOID DispSVGStopElement;
    struct DispSVGStopElement *operator=;
    struct DispSVGStopElement *operator=;
};

typedef struct DispSVGStyleElement {
    struct IDispatch IDispatch;
    VOID DispSVGStyleElement;
    VOID DispSVGStyleElement;
    VOID DispSVGStyleElement;
    struct DispSVGStyleElement *operator=;
    struct DispSVGStyleElement *operator=;
};

typedef struct DispSVGSwitchElement {
    struct IDispatch IDispatch;
    VOID DispSVGSwitchElement;
    VOID DispSVGSwitchElement;
    VOID DispSVGSwitchElement;
    struct DispSVGSwitchElement *operator=;
    struct DispSVGSwitchElement *operator=;
};

typedef struct DispSVGSymbolElement {
    struct IDispatch IDispatch;
    VOID DispSVGSymbolElement;
    VOID DispSVGSymbolElement;
    VOID DispSVGSymbolElement;
    struct DispSVGSymbolElement *operator=;
    struct DispSVGSymbolElement *operator=;
};

typedef struct DispSVGTSpanElement {
    struct IDispatch IDispatch;
    VOID DispSVGTSpanElement;
    VOID DispSVGTSpanElement;
    VOID DispSVGTSpanElement;
    struct DispSVGTSpanElement *operator=;
    struct DispSVGTSpanElement *operator=;
};

typedef struct DispSVGTextContentElement {
    struct IDispatch IDispatch;
    VOID DispSVGTextContentElement;
    VOID DispSVGTextContentElement;
    VOID DispSVGTextContentElement;
    struct DispSVGTextContentElement *operator=;
    struct DispSVGTextContentElement *operator=;
};

typedef struct DispSVGTextElement {
    struct IDispatch IDispatch;
    VOID DispSVGTextElement;
    VOID DispSVGTextElement;
    VOID DispSVGTextElement;
    struct DispSVGTextElement *operator=;
    struct DispSVGTextElement *operator=;
};

typedef struct DispSVGTextPathElement {
    struct IDispatch IDispatch;
    VOID DispSVGTextPathElement;
    VOID DispSVGTextPathElement;
    VOID DispSVGTextPathElement;
    struct DispSVGTextPathElement *operator=;
    struct DispSVGTextPathElement *operator=;
};

typedef struct DispSVGTextPositioningElement {
    struct IDispatch IDispatch;
    VOID DispSVGTextPositioningElement;
    VOID DispSVGTextPositioningElement;
    VOID DispSVGTextPositioningElement;
    struct DispSVGTextPositioningElement *operator=;
    struct DispSVGTextPositioningElement *operator=;
};

typedef struct DispSVGTitleElement {
    struct IDispatch IDispatch;
    VOID DispSVGTitleElement;
    VOID DispSVGTitleElement;
    VOID DispSVGTitleElement;
    struct DispSVGTitleElement *operator=;
    struct DispSVGTitleElement *operator=;
};

typedef struct DispSVGUseElement {
    struct IDispatch IDispatch;
    VOID DispSVGUseElement;
    VOID DispSVGUseElement;
    VOID DispSVGUseElement;
    struct DispSVGUseElement *operator=;
    struct DispSVGUseElement *operator=;
};

typedef struct DispSVGViewElement {
    struct IDispatch IDispatch;
    VOID DispSVGViewElement;
    VOID DispSVGViewElement;
    VOID DispSVGViewElement;
    struct DispSVGViewElement *operator=;
    struct DispSVGViewElement *operator=;
};

typedef struct DispSVGZoomEvent {
    struct IDispatch IDispatch;
    VOID DispSVGZoomEvent;
    VOID DispSVGZoomEvent;
    VOID DispSVGZoomEvent;
    struct DispSVGZoomEvent *operator=;
    struct DispSVGZoomEvent *operator=;
};

typedef struct DispStaticNodeList {
    struct IDispatch IDispatch;
    VOID DispStaticNodeList;
    VOID DispStaticNodeList;
    VOID DispStaticNodeList;
    struct DispStaticNodeList *operator=;
    struct DispStaticNodeList *operator=;
};

typedef struct DispTreeWalker {
    struct IDispatch IDispatch;
    VOID DispTreeWalker;
    VOID DispTreeWalker;
    VOID DispTreeWalker;
    struct DispTreeWalker *operator=;
    struct DispTreeWalker *operator=;
};

typedef struct DispWebGeocoordinates {
    struct IDispatch IDispatch;
    VOID DispWebGeocoordinates;
    VOID DispWebGeocoordinates;
    VOID DispWebGeocoordinates;
    struct DispWebGeocoordinates *operator=;
    struct DispWebGeocoordinates *operator=;
};

typedef struct DispWebGeolocation {
    struct IDispatch IDispatch;
    VOID DispWebGeolocation;
    VOID DispWebGeolocation;
    VOID DispWebGeolocation;
    struct DispWebGeolocation *operator=;
    struct DispWebGeolocation *operator=;
};

typedef struct DispWebGeoposition {
    struct IDispatch IDispatch;
    VOID DispWebGeoposition;
    VOID DispWebGeoposition;
    VOID DispWebGeoposition;
    struct DispWebGeoposition *operator=;
    struct DispWebGeoposition *operator=;
};

typedef struct DispWebGeopositionError {
    struct IDispatch IDispatch;
    VOID DispWebGeopositionError;
    VOID DispWebGeopositionError;
    VOID DispWebGeopositionError;
    struct DispWebGeopositionError *operator=;
    struct DispWebGeopositionError *operator=;
};

typedef struct DispXDomainRequest {
    struct IDispatch IDispatch;
    VOID DispXDomainRequest;
    VOID DispXDomainRequest;
    VOID DispXDomainRequest;
    struct DispXDomainRequest *operator=;
    struct DispXDomainRequest *operator=;
};

typedef struct DispXMLHttpRequestEventTarget {
    struct IDispatch IDispatch;
    VOID DispXMLHttpRequestEventTarget;
    VOID DispXMLHttpRequestEventTarget;
    VOID DispXMLHttpRequestEventTarget;
    struct DispXMLHttpRequestEventTarget *operator=;
    struct DispXMLHttpRequestEventTarget *operator=;
};

typedef struct DispXMLSerializer {
    struct IDispatch IDispatch;
    VOID DispXMLSerializer;
    VOID DispXMLSerializer;
    VOID DispXMLSerializer;
    struct DispXMLSerializer *operator=;
    struct DispXMLSerializer *operator=;
};

typedef struct Download {
    _reference<XMLStream> _pTokenizer;
    _reference<IURLStream> _pURLStream;
    _reference<EncodingStream> _pEncodingStream;
    BOOLEAN _fAsync;
    BOOLEAN _fDTD;
    BOOLEAN _fEntity;
    LONG _fPEReference;
    BOOLEAN _fInternalEntity;
    BOOLEAN _fFoundNonWS;
    BOOLEAN _fFoundRoot;
    BOOLEAN _fSeenDocType;
    BOOLEAN _fRootLevel;
    ULONG _ulDepth;
    VOID Download;
    VOID Download;
    VOID Download;
    VOID ~Download;
    struct XMLParser::Download *operator=;
    struct XMLParser::Download *operator=;
    PVOID __vecDelDtor;
};

typedef struct Encoding2CodePage {
    struct StringPtr *pEncoding;
    ULONG uiCodePage;
    CharacterSource **fnLittleEndian;
    CharacterSource **fnBigEndian;
};

typedef struct EncodingEntry {
    ULONG codepage;
    BOOLEAN fWindowsCodepage;
    PWCHAR charset;
    ULONG maxCharSize;
    HRESULT *pfnWideCharFromMultiByte;
    HRESULT *pfnWideCharToMultiByte;
};

typedef struct Entry {
    PWCHAR _pwsz;
    ULONG64 _ptr;
};

typedef struct EventRegistrationToken {
    LONG64 value;
};

typedef struct ExtFuncInstr {
    struct XCode::Instruction XCode::Instruction;
    PVOID _func;
};

typedef struct FEATURE_ERROR {
    HRESULT hr;
    USHORT lineNumber;
    PCHAR file;
    PCHAR process;
    PCHAR modulePath;
    ULONG callerReturnAddressOffset;
    PCHAR callerModule;
    PCHAR message;
    USHORT originLineNumber;
    PCHAR originFile;
    PCHAR originModule;
    ULONG originCallerReturnAddressOffset;
    PCHAR originCallerModule;
    PCHAR originName;
};

typedef struct FEATURE_LOGGED_TRAITS {
    USHORT version;
    USHORT baseVersion;
    UCHAR stage;
};

typedef struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ {
    LONG unused;
};

typedef struct FILE_ID_DESCRIPTOR {
    ULONG dwSize;
    enum _FILE_ID_TYPE Type;
    union _LARGE_INTEGER FileId;
    struct _GUID ObjectId;
    struct _FILE_ID_128 ExtendedFileId;
};

typedef struct FIND_BY_SID_DATA {
    ULONG Restart;
    struct _SID Sid;
};

typedef struct FIND_BY_SID_OUTPUT {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct FLASHWINFO {
    ULONG cbSize;
    struct HWND__ *hwnd;
    ULONG dwFlags;
    ULONG uCount;
    ULONG dwTimeout;
};

typedef struct FPDOUBLE {
    ULONG mantLo;
    ULONG mantHi : 20;
    ULONG exp : 11;
    ULONG sign : 1;
};

typedef struct FPSINGLE {
    ULONG mant : 23;
    ULONG exp : 8;
    ULONG sign : 1;
};

typedef struct FilterMatcher::PredExpr {
    PVOID _exprHandle;
    LONG _iPos;
};

typedef struct FltrInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG64 _evalgrp;
    LONG64 _evalpred;
};

typedef struct FltrRangeInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG _start;
    LONG _end;
};

typedef struct FrameInstr {
    struct XCode::SizeInstr XCode::SizeInstr;
};

typedef struct FunctionInfo {
    LONG _maxArgs;
    enum FunctionLookup::ArgType _argTypes[8];
    enum XVariant::DataType _retType;
    enum FunctionLookup::FuncID _id;
};

typedef struct FunctionLookup::FunctionInfo {
    LONG _maxArgs;
    enum FunctionLookup::ArgType _argTypes[8];
    enum XVariant::DataType _retType;
    enum FunctionLookup::FuncID _id;
};

typedef struct GOPHER_ABSTRACT_ATTRIBUTE_TYPE {
    PWCHAR ShortAbstract;
    PWCHAR AbstractFile;
};

typedef struct GOPHER_ADMIN_ATTRIBUTE_TYPE {
    PWCHAR Comment;
    PWCHAR EmailAddress;
};

typedef struct GOPHER_ASK_ATTRIBUTE_TYPE {
    PWCHAR QuestionType;
    PWCHAR QuestionText;
};

typedef struct GOPHER_ATTRIBUTE_TYPE {
    ULONG CategoryId;
    ULONG AttributeId;
     <unnamed-type-AttributeType>;
    union {
        struct GOPHER_ADMIN_ATTRIBUTE_TYPE Admin;
        struct GOPHER_MOD_DATE_ATTRIBUTE_TYPE ModDate;
        struct GOPHER_TTL_ATTRIBUTE_TYPE Ttl;
        struct GOPHER_SCORE_ATTRIBUTE_TYPE Score;
        struct GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE ScoreRange;
        struct GOPHER_SITE_ATTRIBUTE_TYPE Site;
        struct GOPHER_ORGANIZATION_ATTRIBUTE_TYPE Organization;
        struct GOPHER_LOCATION_ATTRIBUTE_TYPE Location;
        struct GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE GeographicalLocation;
        struct GOPHER_TIMEZONE_ATTRIBUTE_TYPE TimeZone;
        struct GOPHER_PROVIDER_ATTRIBUTE_TYPE Provider;
        struct GOPHER_VERSION_ATTRIBUTE_TYPE Version;
        struct GOPHER_ABSTRACT_ATTRIBUTE_TYPE Abstract;
        struct GOPHER_VIEW_ATTRIBUTE_TYPE View;
        struct GOPHER_VERONICA_ATTRIBUTE_TYPE Veronica;
        struct GOPHER_ASK_ATTRIBUTE_TYPE Ask;
        struct GOPHER_UNKNOWN_ATTRIBUTE_TYPE Unknown;
    } AttributeType;
};

typedef struct GOPHER_FIND_DATAA {
    CHAR DisplayString[129];
    ULONG GopherType;
    ULONG SizeLow;
    ULONG SizeHigh;
    struct _FILETIME LastModificationTime;
    CHAR Locator[654];
};

typedef struct GOPHER_FIND_DATAW {
    WCHAR DisplayString[129];
    ULONG GopherType;
    ULONG SizeLow;
    ULONG SizeHigh;
    struct _FILETIME LastModificationTime;
    WCHAR Locator[654];
};

typedef struct GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE {
    LONG DegreesNorth;
    LONG MinutesNorth;
    LONG SecondsNorth;
    LONG DegreesEast;
    LONG MinutesEast;
    LONG SecondsEast;
};

typedef struct GOPHER_LOCATION_ATTRIBUTE_TYPE {
    PWCHAR Location;
};

typedef struct GOPHER_MOD_DATE_ATTRIBUTE_TYPE {
    struct _FILETIME DateAndTime;
};

typedef struct GOPHER_ORGANIZATION_ATTRIBUTE_TYPE {
    PWCHAR Organization;
};

typedef struct GOPHER_PROVIDER_ATTRIBUTE_TYPE {
    PWCHAR Provider;
};

typedef struct GOPHER_SCORE_ATTRIBUTE_TYPE {
    LONG Score;
};

typedef struct GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE {
    LONG LowerBound;
    LONG UpperBound;
};

typedef struct GOPHER_SITE_ATTRIBUTE_TYPE {
    PWCHAR Site;
};

typedef struct GOPHER_TIMEZONE_ATTRIBUTE_TYPE {
    LONG Zone;
};

typedef struct GOPHER_TTL_ATTRIBUTE_TYPE {
    ULONG Ttl;
};

typedef struct GOPHER_UNKNOWN_ATTRIBUTE_TYPE {
    PWCHAR Text;
};

typedef struct GOPHER_VERONICA_ATTRIBUTE_TYPE {
    LONG TreeWalk;
};

typedef struct GOPHER_VERSION_ATTRIBUTE_TYPE {
    PWCHAR Version;
};

typedef struct GOPHER_VIEW_ATTRIBUTE_TYPE {
    PWCHAR ContentType;
    PWCHAR Language;
    ULONG Size;
};

typedef struct GlobalVarInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG64 _evalgbl;
};

typedef struct GrowAllocator::AllocHeader {
    struct GrowAllocator::AllocHeader *_prev;
};

typedef struct GrowAllocator::Page {
    struct GrowAllocator::Page *_prev;
    PUCHAR _pageEnd;
    PUCHAR head;
};

typedef struct HACCEL__ {
    LONG unused;
};

typedef struct HBITMAP__ {
    LONG unused;
};

typedef struct HBRUSH__ {
    LONG unused;
};

typedef struct HCOLORSPACE__ {
    LONG unused;
};

typedef struct HDC__ {
    LONG unused;
};

typedef struct HDESK__ {
    LONG unused;
};

typedef struct HENHMETAFILE__ {
    LONG unused;
};

typedef struct HFONT__ {
    LONG unused;
};

typedef struct HGESTUREINFO__ {
    LONG unused;
};

typedef struct HGLRC__ {
    LONG unused;
};

typedef struct HHOOK__ {
    LONG unused;
};

typedef struct HICON__ {
    LONG unused;
};

typedef struct HIMCC__ {
    LONG unused;
};

typedef struct HIMC__ {
    LONG unused;
};

typedef struct HINSTANCE__ {
    LONG unused;
};

typedef struct HKEY__ {
    LONG unused;
};

typedef struct HKL__ {
    LONG unused;
};

typedef struct HLSURF__ {
    LONG unused;
};

typedef struct HMENU__ {
    LONG unused;
};

typedef struct HMETAFILE__ {
    LONG unused;
};

typedef struct HMONITOR__ {
    LONG unused;
};

typedef struct HPALETTE__ {
    LONG unused;
};

typedef struct HPEN__ {
    LONG unused;
};

typedef struct HRAWINPUT__ {
    LONG unused;
};

typedef struct HRGN__ {
    LONG unused;
};

typedef struct HRSRC__ {
    LONG unused;
};

typedef struct HSPRITE__ {
    LONG unused;
};

typedef struct HSTRING_BUFFER__ {
    LONG unused;
};

typedef struct HSTRING_HEADER {
     <unnamed-type-Reserved>;
    union {
        PVOID Reserved1;
        CHAR Reserved2[24];
    } Reserved;
};

typedef struct HSTRING__ {
    LONG unused;
};

typedef struct HSTR__ {
    LONG unused;
};

typedef struct HSYNTHETICPOINTERDEVICE__ {
    LONG unused;
};

typedef struct HTASK__ {
    LONG unused;
};

typedef struct HTMLAnchorEvents {
    struct IDispatch IDispatch;
    VOID HTMLAnchorEvents;
    VOID HTMLAnchorEvents;
    VOID HTMLAnchorEvents;
    struct HTMLAnchorEvents *operator=;
    struct HTMLAnchorEvents *operator=;
};

typedef struct HTMLAnchorEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLAnchorEvents2;
    VOID HTMLAnchorEvents2;
    VOID HTMLAnchorEvents2;
    struct HTMLAnchorEvents2 *operator=;
    struct HTMLAnchorEvents2 *operator=;
};

typedef struct HTMLAreaEvents {
    struct IDispatch IDispatch;
    VOID HTMLAreaEvents;
    VOID HTMLAreaEvents;
    VOID HTMLAreaEvents;
    struct HTMLAreaEvents *operator=;
    struct HTMLAreaEvents *operator=;
};

typedef struct HTMLAreaEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLAreaEvents2;
    VOID HTMLAreaEvents2;
    VOID HTMLAreaEvents2;
    struct HTMLAreaEvents2 *operator=;
    struct HTMLAreaEvents2 *operator=;
};

typedef struct HTMLButtonElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLButtonElementEvents;
    VOID HTMLButtonElementEvents;
    VOID HTMLButtonElementEvents;
    struct HTMLButtonElementEvents *operator=;
    struct HTMLButtonElementEvents *operator=;
};

typedef struct HTMLButtonElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLButtonElementEvents2;
    VOID HTMLButtonElementEvents2;
    VOID HTMLButtonElementEvents2;
    struct HTMLButtonElementEvents2 *operator=;
    struct HTMLButtonElementEvents2 *operator=;
};

typedef struct HTMLControlElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLControlElementEvents;
    VOID HTMLControlElementEvents;
    VOID HTMLControlElementEvents;
    struct HTMLControlElementEvents *operator=;
    struct HTMLControlElementEvents *operator=;
};

typedef struct HTMLControlElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLControlElementEvents2;
    VOID HTMLControlElementEvents2;
    VOID HTMLControlElementEvents2;
    struct HTMLControlElementEvents2 *operator=;
    struct HTMLControlElementEvents2 *operator=;
};

typedef struct HTMLDocumentEvents {
    struct IDispatch IDispatch;
    VOID HTMLDocumentEvents;
    VOID HTMLDocumentEvents;
    VOID HTMLDocumentEvents;
    struct HTMLDocumentEvents *operator=;
    struct HTMLDocumentEvents *operator=;
};

typedef struct HTMLDocumentEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLDocumentEvents2;
    VOID HTMLDocumentEvents2;
    VOID HTMLDocumentEvents2;
    struct HTMLDocumentEvents2 *operator=;
    struct HTMLDocumentEvents2 *operator=;
};

typedef struct HTMLDocumentEvents3 {
    struct IDispatch IDispatch;
    VOID HTMLDocumentEvents3;
    VOID HTMLDocumentEvents3;
    VOID HTMLDocumentEvents3;
    struct HTMLDocumentEvents3 *operator=;
    struct HTMLDocumentEvents3 *operator=;
};

typedef struct HTMLDocumentEvents4 {
    struct IDispatch IDispatch;
    VOID HTMLDocumentEvents4;
    VOID HTMLDocumentEvents4;
    VOID HTMLDocumentEvents4;
    struct HTMLDocumentEvents4 *operator=;
    struct HTMLDocumentEvents4 *operator=;
};

typedef struct HTMLElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLElementEvents;
    VOID HTMLElementEvents;
    VOID HTMLElementEvents;
    struct HTMLElementEvents *operator=;
    struct HTMLElementEvents *operator=;
};

typedef struct HTMLElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLElementEvents2;
    VOID HTMLElementEvents2;
    VOID HTMLElementEvents2;
    struct HTMLElementEvents2 *operator=;
    struct HTMLElementEvents2 *operator=;
};

typedef struct HTMLElementEvents3 {
    struct IDispatch IDispatch;
    VOID HTMLElementEvents3;
    VOID HTMLElementEvents3;
    VOID HTMLElementEvents3;
    struct HTMLElementEvents3 *operator=;
    struct HTMLElementEvents3 *operator=;
};

typedef struct HTMLElementEvents4 {
    struct IDispatch IDispatch;
    VOID HTMLElementEvents4;
    VOID HTMLElementEvents4;
    VOID HTMLElementEvents4;
    struct HTMLElementEvents4 *operator=;
    struct HTMLElementEvents4 *operator=;
};

typedef struct HTMLFormElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLFormElementEvents;
    VOID HTMLFormElementEvents;
    VOID HTMLFormElementEvents;
    struct HTMLFormElementEvents *operator=;
    struct HTMLFormElementEvents *operator=;
};

typedef struct HTMLFormElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLFormElementEvents2;
    VOID HTMLFormElementEvents2;
    VOID HTMLFormElementEvents2;
    struct HTMLFormElementEvents2 *operator=;
    struct HTMLFormElementEvents2 *operator=;
};

typedef struct HTMLFrameSiteEvents {
    struct IDispatch IDispatch;
    VOID HTMLFrameSiteEvents;
    VOID HTMLFrameSiteEvents;
    VOID HTMLFrameSiteEvents;
    struct HTMLFrameSiteEvents *operator=;
    struct HTMLFrameSiteEvents *operator=;
};

typedef struct HTMLFrameSiteEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLFrameSiteEvents2;
    VOID HTMLFrameSiteEvents2;
    VOID HTMLFrameSiteEvents2;
    struct HTMLFrameSiteEvents2 *operator=;
    struct HTMLFrameSiteEvents2 *operator=;
};

typedef struct HTMLImgEvents {
    struct IDispatch IDispatch;
    VOID HTMLImgEvents;
    VOID HTMLImgEvents;
    VOID HTMLImgEvents;
    struct HTMLImgEvents *operator=;
    struct HTMLImgEvents *operator=;
};

typedef struct HTMLImgEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLImgEvents2;
    VOID HTMLImgEvents2;
    VOID HTMLImgEvents2;
    struct HTMLImgEvents2 *operator=;
    struct HTMLImgEvents2 *operator=;
};

typedef struct HTMLInputFileElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLInputFileElementEvents;
    VOID HTMLInputFileElementEvents;
    VOID HTMLInputFileElementEvents;
    struct HTMLInputFileElementEvents *operator=;
    struct HTMLInputFileElementEvents *operator=;
};

typedef struct HTMLInputFileElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLInputFileElementEvents2;
    VOID HTMLInputFileElementEvents2;
    VOID HTMLInputFileElementEvents2;
    struct HTMLInputFileElementEvents2 *operator=;
    struct HTMLInputFileElementEvents2 *operator=;
};

typedef struct HTMLInputImageEvents {
    struct IDispatch IDispatch;
    VOID HTMLInputImageEvents;
    VOID HTMLInputImageEvents;
    VOID HTMLInputImageEvents;
    struct HTMLInputImageEvents *operator=;
    struct HTMLInputImageEvents *operator=;
};

typedef struct HTMLInputImageEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLInputImageEvents2;
    VOID HTMLInputImageEvents2;
    VOID HTMLInputImageEvents2;
    struct HTMLInputImageEvents2 *operator=;
    struct HTMLInputImageEvents2 *operator=;
};

typedef struct HTMLInputTextElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLInputTextElementEvents;
    VOID HTMLInputTextElementEvents;
    VOID HTMLInputTextElementEvents;
    struct HTMLInputTextElementEvents *operator=;
    struct HTMLInputTextElementEvents *operator=;
};

typedef struct HTMLInputTextElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLInputTextElementEvents2;
    VOID HTMLInputTextElementEvents2;
    VOID HTMLInputTextElementEvents2;
    struct HTMLInputTextElementEvents2 *operator=;
    struct HTMLInputTextElementEvents2 *operator=;
};

typedef struct HTMLLabelEvents {
    struct IDispatch IDispatch;
    VOID HTMLLabelEvents;
    VOID HTMLLabelEvents;
    VOID HTMLLabelEvents;
    struct HTMLLabelEvents *operator=;
    struct HTMLLabelEvents *operator=;
};

typedef struct HTMLLabelEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLLabelEvents2;
    VOID HTMLLabelEvents2;
    VOID HTMLLabelEvents2;
    struct HTMLLabelEvents2 *operator=;
    struct HTMLLabelEvents2 *operator=;
};

typedef struct HTMLLinkElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLLinkElementEvents;
    VOID HTMLLinkElementEvents;
    VOID HTMLLinkElementEvents;
    struct HTMLLinkElementEvents *operator=;
    struct HTMLLinkElementEvents *operator=;
};

typedef struct HTMLLinkElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLLinkElementEvents2;
    VOID HTMLLinkElementEvents2;
    VOID HTMLLinkElementEvents2;
    struct HTMLLinkElementEvents2 *operator=;
    struct HTMLLinkElementEvents2 *operator=;
};

typedef struct HTMLMapEvents {
    struct IDispatch IDispatch;
    VOID HTMLMapEvents;
    VOID HTMLMapEvents;
    VOID HTMLMapEvents;
    struct HTMLMapEvents *operator=;
    struct HTMLMapEvents *operator=;
};

typedef struct HTMLMapEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLMapEvents2;
    VOID HTMLMapEvents2;
    VOID HTMLMapEvents2;
    struct HTMLMapEvents2 *operator=;
    struct HTMLMapEvents2 *operator=;
};

typedef struct HTMLMarqueeElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLMarqueeElementEvents;
    VOID HTMLMarqueeElementEvents;
    VOID HTMLMarqueeElementEvents;
    struct HTMLMarqueeElementEvents *operator=;
    struct HTMLMarqueeElementEvents *operator=;
};

typedef struct HTMLMarqueeElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLMarqueeElementEvents2;
    VOID HTMLMarqueeElementEvents2;
    VOID HTMLMarqueeElementEvents2;
    struct HTMLMarqueeElementEvents2 *operator=;
    struct HTMLMarqueeElementEvents2 *operator=;
};

typedef struct HTMLNamespaceEvents {
    struct IDispatch IDispatch;
    VOID HTMLNamespaceEvents;
    VOID HTMLNamespaceEvents;
    VOID HTMLNamespaceEvents;
    struct HTMLNamespaceEvents *operator=;
    struct HTMLNamespaceEvents *operator=;
};

typedef struct HTMLObjectElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLObjectElementEvents;
    VOID HTMLObjectElementEvents;
    VOID HTMLObjectElementEvents;
    struct HTMLObjectElementEvents *operator=;
    struct HTMLObjectElementEvents *operator=;
};

typedef struct HTMLObjectElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLObjectElementEvents2;
    VOID HTMLObjectElementEvents2;
    VOID HTMLObjectElementEvents2;
    struct HTMLObjectElementEvents2 *operator=;
    struct HTMLObjectElementEvents2 *operator=;
};

typedef struct HTMLOptionButtonElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLOptionButtonElementEvents;
    VOID HTMLOptionButtonElementEvents;
    VOID HTMLOptionButtonElementEvents;
    struct HTMLOptionButtonElementEvents *operator=;
    struct HTMLOptionButtonElementEvents *operator=;
};

typedef struct HTMLOptionButtonElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLOptionButtonElementEvents2;
    VOID HTMLOptionButtonElementEvents2;
    VOID HTMLOptionButtonElementEvents2;
    struct HTMLOptionButtonElementEvents2 *operator=;
    struct HTMLOptionButtonElementEvents2 *operator=;
};

typedef struct HTMLScriptEvents {
    struct IDispatch IDispatch;
    VOID HTMLScriptEvents;
    VOID HTMLScriptEvents;
    VOID HTMLScriptEvents;
    struct HTMLScriptEvents *operator=;
    struct HTMLScriptEvents *operator=;
};

typedef struct HTMLScriptEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLScriptEvents2;
    VOID HTMLScriptEvents2;
    VOID HTMLScriptEvents2;
    struct HTMLScriptEvents2 *operator=;
    struct HTMLScriptEvents2 *operator=;
};

typedef struct HTMLSelectElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLSelectElementEvents;
    VOID HTMLSelectElementEvents;
    VOID HTMLSelectElementEvents;
    struct HTMLSelectElementEvents *operator=;
    struct HTMLSelectElementEvents *operator=;
};

typedef struct HTMLSelectElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLSelectElementEvents2;
    VOID HTMLSelectElementEvents2;
    VOID HTMLSelectElementEvents2;
    struct HTMLSelectElementEvents2 *operator=;
    struct HTMLSelectElementEvents2 *operator=;
};

typedef struct HTMLStyleElementEvents {
    struct IDispatch IDispatch;
    VOID HTMLStyleElementEvents;
    VOID HTMLStyleElementEvents;
    VOID HTMLStyleElementEvents;
    struct HTMLStyleElementEvents *operator=;
    struct HTMLStyleElementEvents *operator=;
};

typedef struct HTMLStyleElementEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLStyleElementEvents2;
    VOID HTMLStyleElementEvents2;
    VOID HTMLStyleElementEvents2;
    struct HTMLStyleElementEvents2 *operator=;
    struct HTMLStyleElementEvents2 *operator=;
};

typedef struct HTMLTableEvents {
    struct IDispatch IDispatch;
    VOID HTMLTableEvents;
    VOID HTMLTableEvents;
    VOID HTMLTableEvents;
    struct HTMLTableEvents *operator=;
    struct HTMLTableEvents *operator=;
};

typedef struct HTMLTableEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLTableEvents2;
    VOID HTMLTableEvents2;
    VOID HTMLTableEvents2;
    struct HTMLTableEvents2 *operator=;
    struct HTMLTableEvents2 *operator=;
};

typedef struct HTMLTextContainerEvents {
    struct IDispatch IDispatch;
    VOID HTMLTextContainerEvents;
    VOID HTMLTextContainerEvents;
    VOID HTMLTextContainerEvents;
    struct HTMLTextContainerEvents *operator=;
    struct HTMLTextContainerEvents *operator=;
};

typedef struct HTMLTextContainerEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLTextContainerEvents2;
    VOID HTMLTextContainerEvents2;
    VOID HTMLTextContainerEvents2;
    struct HTMLTextContainerEvents2 *operator=;
    struct HTMLTextContainerEvents2 *operator=;
};

typedef struct HTMLWindowEvents {
    struct IDispatch IDispatch;
    VOID HTMLWindowEvents;
    VOID HTMLWindowEvents;
    VOID HTMLWindowEvents;
    struct HTMLWindowEvents *operator=;
    struct HTMLWindowEvents *operator=;
};

typedef struct HTMLWindowEvents2 {
    struct IDispatch IDispatch;
    VOID HTMLWindowEvents2;
    VOID HTMLWindowEvents2;
    VOID HTMLWindowEvents2;
    struct HTMLWindowEvents2 *operator=;
    struct HTMLWindowEvents2 *operator=;
};

typedef struct HTMLWindowEvents3 {
    struct IDispatch IDispatch;
    VOID HTMLWindowEvents3;
    VOID HTMLWindowEvents3;
    VOID HTMLWindowEvents3;
    struct HTMLWindowEvents3 *operator=;
    struct HTMLWindowEvents3 *operator=;
};

typedef struct HTMLXMLHttpRequestEvents {
    struct IDispatch IDispatch;
    VOID HTMLXMLHttpRequestEvents;
    VOID HTMLXMLHttpRequestEvents;
    VOID HTMLXMLHttpRequestEvents;
    struct HTMLXMLHttpRequestEvents *operator=;
    struct HTMLXMLHttpRequestEvents *operator=;
};

typedef struct HTOUCHINPUT__ {
    LONG unused;
};

typedef struct HTTP_VERSION_INFO {
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
};

typedef struct HUMPD__ {
    LONG unused;
};

typedef struct HWINEVENTHOOK__ {
    LONG unused;
};

typedef struct HWINSTA__ {
    LONG unused;
};

typedef struct HWND__ {
    LONG unused;
};

typedef struct Header {
    USHORT formatVersion;
    USHORT version;
    USHORT indexSize;
    USHORT valueSize;
    enum wil::details_abi::CountSize indexCountSize;
    enum wil::details_abi::CountSize valueCountSize;
};

typedef struct IASPError {
    struct IDispatch IDispatch;
    HRESULT get_ASPCode;
    HRESULT get_Number;
    HRESULT get_Category;
    HRESULT get_File;
    HRESULT get_Line;
    HRESULT get_Description;
    HRESULT get_ASPDescription;
    HRESULT get_Column;
    HRESULT get_Source;
    VOID IASPError;
    VOID IASPError;
    VOID IASPError;
    struct IASPError *operator=;
    struct IASPError *operator=;
};

typedef struct IAcceptHeaderOptions {
    struct IUnknown IUnknown;
    HRESULT SetAcceptHeaderCategory;
    HRESULT GetAcceptHeaderCategory;
    VOID IAcceptHeaderOptions;
    VOID IAcceptHeaderOptions;
    VOID IAcceptHeaderOptions;
    struct IAcceptHeaderOptions *operator=;
    struct IAcceptHeaderOptions *operator=;
};

typedef struct IActivationFactory {
    struct IInspectable IInspectable;
    HRESULT ActivateInstance;
    VOID IActivationFactory;
    VOID IActivationFactory;
    VOID IActivationFactory;
    struct IActivationFactory *operator=;
    struct IActivationFactory *operator=;
};

typedef struct IActivationFilter {
    struct IUnknown IUnknown;
    HRESULT HandleActivation;
    VOID IActivationFilter;
    VOID IActivationFilter;
    VOID IActivationFilter;
    struct IActivationFilter *operator=;
    struct IActivationFilter *operator=;
};

typedef struct IActiveIME {
    struct IUnknown IUnknown;
    HRESULT Inquire;
    HRESULT ConversionList;
    HRESULT Configure;
    HRESULT Destroy;
    HRESULT Escape;
    HRESULT SetActiveContext;
    HRESULT ProcessKey;
    HRESULT Notify;
    HRESULT Select;
    HRESULT SetCompositionString;
    HRESULT ToAsciiEx;
    HRESULT RegisterWord;
    HRESULT UnregisterWord;
    HRESULT GetRegisterWordStyle;
    HRESULT EnumRegisterWord;
    HRESULT GetCodePageA;
    HRESULT GetLangId;
    VOID IActiveIME;
    VOID IActiveIME;
    VOID IActiveIME;
    struct IActiveIME *operator=;
    struct IActiveIME *operator=;
};

typedef struct IActiveIME2 {
    struct IActiveIME IActiveIME;
    HRESULT Sleep;
    HRESULT Unsleep;
    VOID IActiveIME2;
    VOID IActiveIME2;
    VOID IActiveIME2;
    struct IActiveIME2 *operator=;
    struct IActiveIME2 *operator=;
};

typedef struct IActiveIMMApp {
    struct IUnknown IUnknown;
    HRESULT AssociateContext;
    HRESULT ConfigureIMEA;
    HRESULT ConfigureIMEW;
    HRESULT CreateContext;
    HRESULT DestroyContext;
    HRESULT EnumRegisterWordA;
    HRESULT EnumRegisterWordW;
    HRESULT EscapeA;
    HRESULT EscapeW;
    HRESULT GetCandidateListA;
    HRESULT GetCandidateListW;
    HRESULT GetCandidateListCountA;
    HRESULT GetCandidateListCountW;
    HRESULT GetCandidateWindow;
    HRESULT GetCompositionFontA;
    HRESULT GetCompositionFontW;
    HRESULT GetCompositionStringA;
    HRESULT GetCompositionStringW;
    HRESULT GetCompositionWindow;
    HRESULT GetContext;
    HRESULT GetConversionListA;
    HRESULT GetConversionListW;
    HRESULT GetConversionStatus;
    HRESULT GetDefaultIMEWnd;
    HRESULT GetDescriptionA;
    HRESULT GetDescriptionW;
    HRESULT GetGuideLineA;
    HRESULT GetGuideLineW;
    HRESULT GetIMEFileNameA;
    HRESULT GetIMEFileNameW;
    HRESULT GetOpenStatus;
    HRESULT GetProperty;
    HRESULT GetRegisterWordStyleA;
    HRESULT GetRegisterWordStyleW;
    HRESULT GetStatusWindowPos;
    HRESULT GetVirtualKey;
    HRESULT InstallIMEA;
    HRESULT InstallIMEW;
    HRESULT IsIME;
    HRESULT IsUIMessageA;
    HRESULT IsUIMessageW;
    HRESULT NotifyIME;
    HRESULT RegisterWordA;
    HRESULT RegisterWordW;
    HRESULT ReleaseContext;
    HRESULT SetCandidateWindow;
    HRESULT SetCompositionFontA;
    HRESULT SetCompositionFontW;
    HRESULT SetCompositionStringA;
    HRESULT SetCompositionStringW;
    HRESULT SetCompositionWindow;
    HRESULT SetConversionStatus;
    HRESULT SetOpenStatus;
    HRESULT SetStatusWindowPos;
    HRESULT SimulateHotKey;
    HRESULT UnregisterWordA;
    HRESULT UnregisterWordW;
    HRESULT Activate;
    HRESULT Deactivate;
    HRESULT OnDefWindowProc;
    HRESULT FilterClientWindows;
    HRESULT GetCodePageA;
    HRESULT GetLangId;
    HRESULT AssociateContextEx;
    HRESULT DisableIME;
    HRESULT GetImeMenuItemsA;
    HRESULT GetImeMenuItemsW;
    HRESULT EnumInputContext;
    VOID IActiveIMMApp;
    VOID IActiveIMMApp;
    VOID IActiveIMMApp;
    struct IActiveIMMApp *operator=;
    struct IActiveIMMApp *operator=;
};

typedef struct IActiveIMMIME {
    struct IUnknown IUnknown;
    HRESULT AssociateContext;
    HRESULT ConfigureIMEA;
    HRESULT ConfigureIMEW;
    HRESULT CreateContext;
    HRESULT DestroyContext;
    HRESULT EnumRegisterWordA;
    HRESULT EnumRegisterWordW;
    HRESULT EscapeA;
    HRESULT EscapeW;
    HRESULT GetCandidateListA;
    HRESULT GetCandidateListW;
    HRESULT GetCandidateListCountA;
    HRESULT GetCandidateListCountW;
    HRESULT GetCandidateWindow;
    HRESULT GetCompositionFontA;
    HRESULT GetCompositionFontW;
    HRESULT GetCompositionStringA;
    HRESULT GetCompositionStringW;
    HRESULT GetCompositionWindow;
    HRESULT GetContext;
    HRESULT GetConversionListA;
    HRESULT GetConversionListW;
    HRESULT GetConversionStatus;
    HRESULT GetDefaultIMEWnd;
    HRESULT GetDescriptionA;
    HRESULT GetDescriptionW;
    HRESULT GetGuideLineA;
    HRESULT GetGuideLineW;
    HRESULT GetIMEFileNameA;
    HRESULT GetIMEFileNameW;
    HRESULT GetOpenStatus;
    HRESULT GetProperty;
    HRESULT GetRegisterWordStyleA;
    HRESULT GetRegisterWordStyleW;
    HRESULT GetStatusWindowPos;
    HRESULT GetVirtualKey;
    HRESULT InstallIMEA;
    HRESULT InstallIMEW;
    HRESULT IsIME;
    HRESULT IsUIMessageA;
    HRESULT IsUIMessageW;
    HRESULT NotifyIME;
    HRESULT RegisterWordA;
    HRESULT RegisterWordW;
    HRESULT ReleaseContext;
    HRESULT SetCandidateWindow;
    HRESULT SetCompositionFontA;
    HRESULT SetCompositionFontW;
    HRESULT SetCompositionStringA;
    HRESULT SetCompositionStringW;
    HRESULT SetCompositionWindow;
    HRESULT SetConversionStatus;
    HRESULT SetOpenStatus;
    HRESULT SetStatusWindowPos;
    HRESULT SimulateHotKey;
    HRESULT UnregisterWordA;
    HRESULT UnregisterWordW;
    HRESULT GenerateMessage;
    HRESULT LockIMC;
    HRESULT UnlockIMC;
    HRESULT GetIMCLockCount;
    HRESULT CreateIMCC;
    HRESULT DestroyIMCC;
    HRESULT LockIMCC;
    HRESULT UnlockIMCC;
    HRESULT ReSizeIMCC;
    HRESULT GetIMCCSize;
    HRESULT GetIMCCLockCount;
    HRESULT GetHotKey;
    HRESULT SetHotKey;
    HRESULT CreateSoftKeyboard;
    HRESULT DestroySoftKeyboard;
    HRESULT ShowSoftKeyboard;
    HRESULT GetCodePageA;
    HRESULT GetLangId;
    HRESULT KeybdEvent;
    HRESULT LockModal;
    HRESULT UnlockModal;
    HRESULT AssociateContextEx;
    HRESULT DisableIME;
    HRESULT GetImeMenuItemsA;
    HRESULT GetImeMenuItemsW;
    HRESULT EnumInputContext;
    HRESULT RequestMessageA;
    HRESULT RequestMessageW;
    HRESULT SendIMCA;
    HRESULT SendIMCW;
    HRESULT IsSleeping;
    VOID IActiveIMMIME;
    VOID IActiveIMMIME;
    VOID IActiveIMMIME;
    struct IActiveIMMIME *operator=;
    struct IActiveIMMIME *operator=;
};

typedef struct IActiveIMMMessagePumpOwner {
    struct IUnknown IUnknown;
    HRESULT Start;
    HRESULT End;
    HRESULT OnTranslateMessage;
    HRESULT Pause;
    HRESULT Resume;
    VOID IActiveIMMMessagePumpOwner;
    VOID IActiveIMMMessagePumpOwner;
    VOID IActiveIMMMessagePumpOwner;
    struct IActiveIMMMessagePumpOwner *operator=;
    struct IActiveIMMMessagePumpOwner *operator=;
};

typedef struct IActiveIMMRegistrar {
    struct IUnknown IUnknown;
    HRESULT RegisterIME;
    HRESULT UnregisterIME;
    VOID IActiveIMMRegistrar;
    VOID IActiveIMMRegistrar;
    VOID IActiveIMMRegistrar;
    struct IActiveIMMRegistrar *operator=;
    struct IActiveIMMRegistrar *operator=;
};

typedef struct IActiveScript {
    struct IUnknown IUnknown;
    HRESULT SetScriptSite;
    HRESULT GetScriptSite;
    HRESULT SetScriptState;
    HRESULT GetScriptState;
    HRESULT Close;
    HRESULT AddNamedItem;
    HRESULT AddTypeLib;
    HRESULT GetScriptDispatch;
    HRESULT GetCurrentScriptThreadID;
    HRESULT GetScriptThreadID;
    HRESULT GetScriptThreadState;
    HRESULT InterruptScriptThread;
    HRESULT Clone;
    VOID IActiveScript;
    VOID IActiveScript;
    VOID IActiveScript;
    struct IActiveScript *operator=;
    struct IActiveScript *operator=;
};

typedef struct IActiveScriptEncode {
    struct IUnknown IUnknown;
    HRESULT EncodeSection;
    HRESULT DecodeScript;
    HRESULT GetEncodeProgId;
    VOID IActiveScriptEncode;
    VOID IActiveScriptEncode;
    VOID IActiveScriptEncode;
    struct IActiveScriptEncode *operator=;
    struct IActiveScriptEncode *operator=;
};

typedef struct IActiveScriptError {
    struct IUnknown IUnknown;
    HRESULT GetExceptionInfo;
    HRESULT GetSourcePosition;
    HRESULT GetSourceLineText;
    VOID IActiveScriptError;
    VOID IActiveScriptError;
    VOID IActiveScriptError;
    struct IActiveScriptError *operator=;
    struct IActiveScriptError *operator=;
};

typedef struct IActiveScriptError64 {
    struct IActiveScriptError IActiveScriptError;
    HRESULT GetSourcePosition64;
    VOID IActiveScriptError64;
    VOID IActiveScriptError64;
    VOID IActiveScriptError64;
    struct IActiveScriptError64 *operator=;
    struct IActiveScriptError64 *operator=;
};

typedef struct IActiveScriptErrorDebug {
    struct IActiveScriptError IActiveScriptError;
    HRESULT GetDocumentContext;
    HRESULT GetStackFrame;
    VOID IActiveScriptErrorDebug;
    VOID IActiveScriptErrorDebug;
    VOID IActiveScriptErrorDebug;
    struct IActiveScriptErrorDebug *operator=;
    struct IActiveScriptErrorDebug *operator=;
};

typedef struct IActiveScriptGarbageCollector {
    struct IUnknown IUnknown;
    HRESULT CollectGarbage;
    VOID IActiveScriptGarbageCollector;
    VOID IActiveScriptGarbageCollector;
    VOID IActiveScriptGarbageCollector;
    struct IActiveScriptGarbageCollector *operator=;
    struct IActiveScriptGarbageCollector *operator=;
};

typedef struct IActiveScriptHostEncode {
    struct IUnknown IUnknown;
    HRESULT EncodeScriptHostFile;
    VOID IActiveScriptHostEncode;
    VOID IActiveScriptHostEncode;
    VOID IActiveScriptHostEncode;
    struct IActiveScriptHostEncode *operator=;
    struct IActiveScriptHostEncode *operator=;
};

typedef struct IActiveScriptParse32 {
    struct IUnknown IUnknown;
    HRESULT InitNew;
    HRESULT AddScriptlet;
    HRESULT ParseScriptText;
    VOID IActiveScriptParse32;
    VOID IActiveScriptParse32;
    VOID IActiveScriptParse32;
    struct IActiveScriptParse32 *operator=;
    struct IActiveScriptParse32 *operator=;
};

typedef struct IActiveScriptParse64 {
    struct IUnknown IUnknown;
    HRESULT InitNew;
    HRESULT AddScriptlet;
    HRESULT ParseScriptText;
    VOID IActiveScriptParse64;
    VOID IActiveScriptParse64;
    VOID IActiveScriptParse64;
    struct IActiveScriptParse64 *operator=;
    struct IActiveScriptParse64 *operator=;
};

typedef struct IActiveScriptParseProcedure2_32 {
    struct IActiveScriptParseProcedure32 IActiveScriptParseProcedure32;
    VOID IActiveScriptParseProcedure2_32;
    VOID IActiveScriptParseProcedure2_32;
    VOID IActiveScriptParseProcedure2_32;
    struct IActiveScriptParseProcedure2_32 *operator=;
    struct IActiveScriptParseProcedure2_32 *operator=;
};

typedef struct IActiveScriptParseProcedure2_64 {
    struct IActiveScriptParseProcedure64 IActiveScriptParseProcedure64;
    VOID IActiveScriptParseProcedure2_64;
    VOID IActiveScriptParseProcedure2_64;
    VOID IActiveScriptParseProcedure2_64;
    struct IActiveScriptParseProcedure2_64 *operator=;
    struct IActiveScriptParseProcedure2_64 *operator=;
};

typedef struct IActiveScriptParseProcedure32 {
    struct IUnknown IUnknown;
    HRESULT ParseProcedureText;
    VOID IActiveScriptParseProcedure32;
    VOID IActiveScriptParseProcedure32;
    VOID IActiveScriptParseProcedure32;
    struct IActiveScriptParseProcedure32 *operator=;
    struct IActiveScriptParseProcedure32 *operator=;
};

typedef struct IActiveScriptParseProcedure64 {
    struct IUnknown IUnknown;
    HRESULT ParseProcedureText;
    VOID IActiveScriptParseProcedure64;
    VOID IActiveScriptParseProcedure64;
    VOID IActiveScriptParseProcedure64;
    struct IActiveScriptParseProcedure64 *operator=;
    struct IActiveScriptParseProcedure64 *operator=;
};

typedef struct IActiveScriptParseProcedureOld32 {
    struct IUnknown IUnknown;
    HRESULT ParseProcedureText;
    VOID IActiveScriptParseProcedureOld32;
    VOID IActiveScriptParseProcedureOld32;
    VOID IActiveScriptParseProcedureOld32;
    struct IActiveScriptParseProcedureOld32 *operator=;
    struct IActiveScriptParseProcedureOld32 *operator=;
};

typedef struct IActiveScriptParseProcedureOld64 {
    struct IUnknown IUnknown;
    HRESULT ParseProcedureText;
    VOID IActiveScriptParseProcedureOld64;
    VOID IActiveScriptParseProcedureOld64;
    VOID IActiveScriptParseProcedureOld64;
    struct IActiveScriptParseProcedureOld64 *operator=;
    struct IActiveScriptParseProcedureOld64 *operator=;
};

typedef struct IActiveScriptProperty {
    struct IUnknown IUnknown;
    HRESULT GetProperty;
    HRESULT SetProperty;
    VOID IActiveScriptProperty;
    VOID IActiveScriptProperty;
    VOID IActiveScriptProperty;
    struct IActiveScriptProperty *operator=;
    struct IActiveScriptProperty *operator=;
};

typedef struct IActiveScriptSIPInfo {
    struct IUnknown IUnknown;
    HRESULT GetSIPOID;
    VOID IActiveScriptSIPInfo;
    VOID IActiveScriptSIPInfo;
    VOID IActiveScriptSIPInfo;
    struct IActiveScriptSIPInfo *operator=;
    struct IActiveScriptSIPInfo *operator=;
};

typedef struct IActiveScriptSite {
    struct IUnknown IUnknown;
    HRESULT GetLCID;
    HRESULT GetItemInfo;
    HRESULT GetDocVersionString;
    HRESULT OnScriptTerminate;
    HRESULT OnStateChange;
    HRESULT OnScriptError;
    HRESULT OnEnterScript;
    HRESULT OnLeaveScript;
    VOID IActiveScriptSite;
    VOID IActiveScriptSite;
    VOID IActiveScriptSite;
    struct IActiveScriptSite *operator=;
    struct IActiveScriptSite *operator=;
};

typedef struct IActiveScriptSiteDebug64 {
    struct IUnknown IUnknown;
    HRESULT GetDocumentContextFromPosition;
    HRESULT GetApplication;
    HRESULT GetRootApplicationNode;
    HRESULT OnScriptErrorDebug;
    VOID IActiveScriptSiteDebug64;
    VOID IActiveScriptSiteDebug64;
    VOID IActiveScriptSiteDebug64;
    struct IActiveScriptSiteDebug64 *operator=;
    struct IActiveScriptSiteDebug64 *operator=;
};

typedef struct IActiveScriptSiteInterruptPoll {
    struct IUnknown IUnknown;
    HRESULT QueryContinue;
    VOID IActiveScriptSiteInterruptPoll;
    VOID IActiveScriptSiteInterruptPoll;
    VOID IActiveScriptSiteInterruptPoll;
    struct IActiveScriptSiteInterruptPoll *operator=;
    struct IActiveScriptSiteInterruptPoll *operator=;
};

typedef struct IActiveScriptSiteTraceInfo {
    struct IUnknown IUnknown;
    HRESULT SendScriptTraceInfo;
    VOID IActiveScriptSiteTraceInfo;
    VOID IActiveScriptSiteTraceInfo;
    VOID IActiveScriptSiteTraceInfo;
    struct IActiveScriptSiteTraceInfo *operator=;
    struct IActiveScriptSiteTraceInfo *operator=;
};

typedef struct IActiveScriptSiteUIControl {
    struct IUnknown IUnknown;
    HRESULT GetUIBehavior;
    VOID IActiveScriptSiteUIControl;
    VOID IActiveScriptSiteUIControl;
    VOID IActiveScriptSiteUIControl;
    struct IActiveScriptSiteUIControl *operator=;
    struct IActiveScriptSiteUIControl *operator=;
};

typedef struct IActiveScriptSiteWindow {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    HRESULT EnableModeless;
    VOID IActiveScriptSiteWindow;
    VOID IActiveScriptSiteWindow;
    VOID IActiveScriptSiteWindow;
    struct IActiveScriptSiteWindow *operator=;
    struct IActiveScriptSiteWindow *operator=;
};

typedef struct IActiveScriptStats {
    struct IUnknown IUnknown;
    HRESULT GetStat;
    HRESULT GetStatEx;
    HRESULT ResetStats;
    VOID IActiveScriptStats;
    VOID IActiveScriptStats;
    VOID IActiveScriptStats;
    struct IActiveScriptStats *operator=;
    struct IActiveScriptStats *operator=;
};

typedef struct IActiveScriptStringCompare {
    struct IUnknown IUnknown;
    HRESULT StrComp;
    VOID IActiveScriptStringCompare;
    VOID IActiveScriptStringCompare;
    VOID IActiveScriptStringCompare;
    struct IActiveScriptStringCompare *operator=;
    struct IActiveScriptStringCompare *operator=;
};

typedef struct IActiveScriptTraceInfo {
    struct IUnknown IUnknown;
    HRESULT StartScriptTracing;
    HRESULT StopScriptTracing;
    VOID IActiveScriptTraceInfo;
    VOID IActiveScriptTraceInfo;
    VOID IActiveScriptTraceInfo;
    struct IActiveScriptTraceInfo *operator=;
    struct IActiveScriptTraceInfo *operator=;
};

typedef struct IAddrExclusionControl {
    struct IUnknown IUnknown;
    HRESULT GetCurrentAddrExclusionList;
    HRESULT UpdateAddrExclusionList;
    VOID IAddrExclusionControl;
    VOID IAddrExclusionControl;
    VOID IAddrExclusionControl;
    struct IAddrExclusionControl *operator=;
    struct IAddrExclusionControl *operator=;
};

typedef struct IAddrTrackingControl {
    struct IUnknown IUnknown;
    HRESULT EnableCOMDynamicAddrTracking;
    HRESULT DisableCOMDynamicAddrTracking;
    VOID IAddrTrackingControl;
    VOID IAddrTrackingControl;
    VOID IAddrTrackingControl;
    struct IAddrTrackingControl *operator=;
    struct IAddrTrackingControl *operator=;
};

typedef struct IAdviseSink {
    struct IUnknown IUnknown;
    VOID OnDataChange;
    VOID OnViewChange;
    VOID OnRename;
    VOID OnSave;
    VOID OnClose;
    VOID IAdviseSink;
    VOID IAdviseSink;
    VOID IAdviseSink;
    struct IAdviseSink *operator=;
    struct IAdviseSink *operator=;
};

typedef struct IAdviseSink2 {
    struct IAdviseSink IAdviseSink;
    VOID OnLinkSrcChange;
    VOID IAdviseSink2;
    VOID IAdviseSink2;
    VOID IAdviseSink2;
    struct IAdviseSink2 *operator=;
    struct IAdviseSink2 *operator=;
};

typedef struct IAdviseSinkEx {
    struct IAdviseSink IAdviseSink;
    VOID OnViewStatusChange;
    VOID IAdviseSinkEx;
    VOID IAdviseSinkEx;
    VOID IAdviseSinkEx;
    struct IAdviseSinkEx *operator=;
    struct IAdviseSinkEx *operator=;
};

typedef struct IAgileObject {
    struct IUnknown IUnknown;
    VOID IAgileObject;
    VOID IAgileObject;
    VOID IAgileObject;
    struct IAgileObject *operator=;
    struct IAgileObject *operator=;
};

typedef struct IAgileReference {
    struct IUnknown IUnknown;
    HRESULT Resolve;
    VOID IAgileReference;
    VOID IAgileReference;
    VOID IAgileReference;
    struct IAgileReference *operator=;
    struct IAgileReference *operator=;
};

typedef struct IApartmentShutdown {
    struct IUnknown IUnknown;
    VOID OnUninitialize;
    VOID IApartmentShutdown;
    VOID IApartmentShutdown;
    VOID IApartmentShutdown;
    struct IApartmentShutdown *operator=;
    struct IApartmentShutdown *operator=;
};

typedef struct IApplicationDebugger {
    struct IUnknown IUnknown;
    HRESULT QueryAlive;
    HRESULT CreateInstanceAtDebugger;
    HRESULT onDebugOutput;
    HRESULT onHandleBreakPoint;
    HRESULT onClose;
    HRESULT onDebuggerEvent;
    VOID IApplicationDebugger;
    VOID IApplicationDebugger;
    VOID IApplicationDebugger;
    struct IApplicationDebugger *operator=;
    struct IApplicationDebugger *operator=;
};

typedef struct IApplicationObject {
    struct IDispatch IDispatch;
    HRESULT get_Value;
    HRESULT put_Value;
    HRESULT putref_Value;
    HRESULT Lock;
    HRESULT UnLock;
    HRESULT get_StaticObjects;
    HRESULT get_Contents;
    VOID IApplicationObject;
    VOID IApplicationObject;
    VOID IApplicationObject;
    struct IApplicationObject *operator=;
    struct IApplicationObject *operator=;
};

typedef struct IAsyncInfo {
    struct IInspectable IInspectable;
    HRESULT get_Id;
    HRESULT get_Status;
    HRESULT get_ErrorCode;
    HRESULT Cancel;
    HRESULT Close;
    VOID IAsyncInfo;
    VOID IAsyncInfo;
    VOID IAsyncInfo;
    struct IAsyncInfo *operator=;
    struct IAsyncInfo *operator=;
};

typedef struct IAsyncManager {
    struct IUnknown IUnknown;
    HRESULT CompleteCall;
    HRESULT GetCallContext;
    HRESULT GetState;
    VOID IAsyncManager;
    VOID IAsyncManager;
    VOID IAsyncManager;
    struct IAsyncManager *operator=;
    struct IAsyncManager *operator=;
};

typedef struct IAsyncRpcChannelBuffer {
    struct IRpcChannelBuffer2 IRpcChannelBuffer2;
    HRESULT Send;
    HRESULT Receive;
    HRESULT GetDestCtxEx;
    VOID IAsyncRpcChannelBuffer;
    VOID IAsyncRpcChannelBuffer;
    VOID IAsyncRpcChannelBuffer;
    struct IAsyncRpcChannelBuffer *operator=;
    struct IAsyncRpcChannelBuffer *operator=;
};

typedef struct IAsyncSecurityStatus {
    struct IUnknown IUnknown;
    HRESULT GetAsyncSecurityFlags;
    VOID IAsyncSecurityStatus;
    VOID IAsyncSecurityStatus;
    VOID IAsyncSecurityStatus;
    struct IAsyncSecurityStatus *operator=;
    struct IAsyncSecurityStatus *operator=;
};

typedef struct IAuthenticate {
    struct IUnknown IUnknown;
    HRESULT Authenticate;
    VOID IAuthenticate;
    VOID IAuthenticate;
    VOID IAuthenticate;
    struct IAuthenticate *operator=;
    struct IAuthenticate *operator=;
};

typedef struct IAuthenticateEx {
    struct IAuthenticate IAuthenticate;
    HRESULT AuthenticateEx;
    VOID IAuthenticateEx;
    VOID IAuthenticateEx;
    VOID IAuthenticateEx;
    struct IAuthenticateEx *operator=;
    struct IAuthenticateEx *operator=;
};

typedef struct IBFCacheable {
    struct IUnknown IUnknown;
    HRESULT EnterBFCache;
    HRESULT ExitBFCache;
    VOID IBFCacheable;
    VOID IBFCacheable;
    VOID IBFCacheable;
    struct IBFCacheable *operator=;
    struct IBFCacheable *operator=;
};

typedef struct IBindCallbackRedirect {
    struct IUnknown IUnknown;
    HRESULT Redirect;
    VOID IBindCallbackRedirect;
    VOID IBindCallbackRedirect;
    VOID IBindCallbackRedirect;
    struct IBindCallbackRedirect *operator=;
    struct IBindCallbackRedirect *operator=;
};

typedef struct IBindCtx {
    struct IUnknown IUnknown;
    HRESULT RegisterObjectBound;
    HRESULT RevokeObjectBound;
    HRESULT ReleaseBoundObjects;
    HRESULT SetBindOptions;
    HRESULT GetBindOptions;
    HRESULT GetRunningObjectTable;
    HRESULT RegisterObjectParam;
    HRESULT GetObjectParam;
    HRESULT EnumObjectParam;
    HRESULT RevokeObjectParam;
    VOID IBindCtx;
    VOID IBindCtx;
    VOID IBindCtx;
    struct IBindCtx *operator=;
    struct IBindCtx *operator=;
};

typedef struct IBindEventHandler {
    struct IUnknown IUnknown;
    HRESULT BindHandler;
    VOID IBindEventHandler;
    VOID IBindEventHandler;
    VOID IBindEventHandler;
    struct IBindEventHandler *operator=;
    struct IBindEventHandler *operator=;
};

typedef struct IBindHost {
    struct IUnknown IUnknown;
    HRESULT CreateMoniker;
    HRESULT MonikerBindToStorage;
    HRESULT MonikerBindToObject;
    VOID IBindHost;
    VOID IBindHost;
    VOID IBindHost;
    struct IBindHost *operator=;
    struct IBindHost *operator=;
};

typedef struct IBindHttpSecurity {
    struct IUnknown IUnknown;
    HRESULT GetIgnoreCertMask;
    VOID IBindHttpSecurity;
    VOID IBindHttpSecurity;
    VOID IBindHttpSecurity;
    struct IBindHttpSecurity *operator=;
    struct IBindHttpSecurity *operator=;
};

typedef struct IBindProtocol {
    struct IUnknown IUnknown;
    HRESULT CreateBinding;
    VOID IBindProtocol;
    VOID IBindProtocol;
    VOID IBindProtocol;
    struct IBindProtocol *operator=;
    struct IBindProtocol *operator=;
};

typedef struct IBindStatusCallback {
    struct IUnknown IUnknown;
    HRESULT OnStartBinding;
    HRESULT GetPriority;
    HRESULT OnLowResource;
    HRESULT OnProgress;
    HRESULT OnStopBinding;
    HRESULT GetBindInfo;
    HRESULT OnDataAvailable;
    HRESULT OnObjectAvailable;
    VOID IBindStatusCallback;
    VOID IBindStatusCallback;
    VOID IBindStatusCallback;
    struct IBindStatusCallback *operator=;
    struct IBindStatusCallback *operator=;
};

typedef struct IBindStatusCallbackEx {
    struct IBindStatusCallback IBindStatusCallback;
    HRESULT GetBindInfoEx;
    VOID IBindStatusCallbackEx;
    VOID IBindStatusCallbackEx;
    VOID IBindStatusCallbackEx;
    struct IBindStatusCallbackEx *operator=;
    struct IBindStatusCallbackEx *operator=;
};

typedef struct IBindStatusCallbackEx2 {
    struct IBindStatusCallbackEx IBindStatusCallbackEx;
    HRESULT GetBindInfoEx2;
    VOID IBindStatusCallbackEx2;
    VOID IBindStatusCallbackEx2;
    VOID IBindStatusCallbackEx2;
    struct IBindStatusCallbackEx2 *operator=;
    struct IBindStatusCallbackEx2 *operator=;
};

typedef struct IBindStatusCallbackHolderSink {
    struct IUnknown IUnknown;
    HRESULT OnProtocolTerminated;
    VOID IBindStatusCallbackHolderSink;
    VOID IBindStatusCallbackHolderSink;
    VOID IBindStatusCallbackHolderSink;
    struct IBindStatusCallbackHolderSink *operator=;
    struct IBindStatusCallbackHolderSink *operator=;
};

typedef struct IBinding {
    struct IUnknown IUnknown;
    HRESULT Abort;
    HRESULT Suspend;
    HRESULT Resume;
    HRESULT SetPriority;
    HRESULT GetPriority;
    HRESULT GetBindResult;
    VOID IBinding;
    VOID IBinding;
    VOID IBinding;
    struct IBinding *operator=;
    struct IBinding *operator=;
};

typedef struct IBindingExInternal {
    struct IUnknown IUnknown;
    HRESULT DownloadToDestinationPath;
    HRESULT IsDownloadModeEnabled;
    HRESULT GetIPAddress;
    HRESULT DeletePartialFileOnRequestHandleClosing;
    HRESULT DeleteCacheEntryOnRequestHandleClosing;
    HRESULT NotifyOnRequestHandleClosing;
    HRESULT DisallowPrematureEOF;
    HRESULT WasRequestToProxy;
    HRESULT GetProxyInfo;
    HRESULT HasSecurityFailure;
    HRESULT NotifyInternalOnRequestHandleClosing;
    HRESULT IsAppCacheLookupAllowed;
    HRESULT IsHSTSRedirectRequest;
    HRESULT IsCanceledByWebRequest;
    HRESULT UpdateNetworkTimeout;
    HRESULT GetFirewallError;
    VOID IBindingExInternal;
    VOID IBindingExInternal;
    VOID IBindingExInternal;
    struct IBindingExInternal *operator=;
    struct IBindingExInternal *operator=;
};

typedef struct IBlockFormats {
    struct IDispatch IDispatch;
    HRESULT get__NewEnum;
    HRESULT get_Count;
    HRESULT Item;
    VOID IBlockFormats;
    VOID IBlockFormats;
    VOID IBlockFormats;
    struct IBlockFormats *operator=;
    struct IBlockFormats *operator=;
};

typedef struct IBlockingLock {
    struct IUnknown IUnknown;
    HRESULT Lock;
    HRESULT Unlock;
    VOID IBlockingLock;
    VOID IBlockingLock;
    VOID IBlockingLock;
    struct IBlockingLock *operator=;
    struct IBlockingLock *operator=;
};

typedef struct ICSSFilter {
    struct IUnknown IUnknown;
    HRESULT SetSite;
    HRESULT OnAmbientPropertyChange;
    VOID ICSSFilter;
    VOID ICSSFilter;
    VOID ICSSFilter;
    struct ICSSFilter *operator=;
    struct ICSSFilter *operator=;
};

typedef struct ICSSFilterSite {
    struct IUnknown IUnknown;
    HRESULT GetElement;
    HRESULT FireOnFilterChangeEvent;
    VOID ICSSFilterSite;
    VOID ICSSFilterSite;
    VOID ICSSFilterSite;
    struct ICSSFilterSite *operator=;
    struct ICSSFilterSite *operator=;
};

typedef struct ICallFactory {
    struct IUnknown IUnknown;
    HRESULT CreateCall;
    VOID ICallFactory;
    VOID ICallFactory;
    VOID ICallFactory;
    struct ICallFactory *operator=;
    struct ICallFactory *operator=;
};

typedef struct ICanHandleException {
    struct IUnknown IUnknown;
    HRESULT CanHandleException;
    VOID ICanHandleException;
    VOID ICanHandleException;
    VOID ICanHandleException;
    struct ICanHandleException *operator=;
    struct ICanHandleException *operator=;
};

typedef struct ICancelMethodCalls {
    struct IUnknown IUnknown;
    HRESULT Cancel;
    HRESULT TestCancel;
    VOID ICancelMethodCalls;
    VOID ICancelMethodCalls;
    VOID ICancelMethodCalls;
    struct ICancelMethodCalls *operator=;
    struct ICancelMethodCalls *operator=;
};

typedef struct ICanvasGradient {
    struct IDispatch IDispatch;
    HRESULT addColorStop;
    VOID ICanvasGradient;
    VOID ICanvasGradient;
    VOID ICanvasGradient;
    struct ICanvasGradient *operator=;
    struct ICanvasGradient *operator=;
};

typedef struct ICanvasImageData {
    struct IDispatch IDispatch;
    HRESULT get_width;
    HRESULT get_height;
    HRESULT get_data;
    VOID ICanvasImageData;
    VOID ICanvasImageData;
    VOID ICanvasImageData;
    struct ICanvasImageData *operator=;
    struct ICanvasImageData *operator=;
};

typedef struct ICanvasPattern {
    struct IDispatch IDispatch;
    VOID ICanvasPattern;
    VOID ICanvasPattern;
    VOID ICanvasPattern;
    struct ICanvasPattern *operator=;
    struct ICanvasPattern *operator=;
};

typedef struct ICanvasPixelArray {
    struct IDispatch IDispatch;
    HRESULT get_length;
    VOID ICanvasPixelArray;
    VOID ICanvasPixelArray;
    VOID ICanvasPixelArray;
    struct ICanvasPixelArray *operator=;
    struct ICanvasPixelArray *operator=;
};

typedef struct ICanvasPixelArrayData {
    struct IUnknown IUnknown;
    HRESULT GetBufferPointer;
    VOID ICanvasPixelArrayData;
    VOID ICanvasPixelArrayData;
    VOID ICanvasPixelArrayData;
    struct ICanvasPixelArrayData *operator=;
    struct ICanvasPixelArrayData *operator=;
};

typedef struct ICanvasRenderingContext2D {
    struct IDispatch IDispatch;
    HRESULT get_canvas;
    HRESULT restore;
    HRESULT save;
    HRESULT rotate;
    HRESULT scale;
    HRESULT setTransform;
    HRESULT transform;
    HRESULT translate;
    HRESULT put_globalAlpha;
    HRESULT get_globalAlpha;
    HRESULT put_globalCompositeOperation;
    HRESULT get_globalCompositeOperation;
    HRESULT put_fillStyle;
    HRESULT get_fillStyle;
    HRESULT put_strokeStyle;
    HRESULT get_strokeStyle;
    HRESULT createLinearGradient;
    HRESULT createRadialGradient;
    HRESULT createPattern;
    HRESULT put_lineCap;
    HRESULT get_lineCap;
    HRESULT put_lineJoin;
    HRESULT get_lineJoin;
    HRESULT put_lineWidth;
    HRESULT get_lineWidth;
    HRESULT put_miterLimit;
    HRESULT get_miterLimit;
    HRESULT put_shadowBlur;
    HRESULT get_shadowBlur;
    HRESULT put_shadowColor;
    HRESULT get_shadowColor;
    HRESULT put_shadowOffsetX;
    HRESULT get_shadowOffsetX;
    HRESULT put_shadowOffsetY;
    HRESULT get_shadowOffsetY;
    HRESULT clearRect;
    HRESULT fillRect;
    HRESULT strokeRect;
    HRESULT arc;
    HRESULT arcTo;
    HRESULT beginPath;
    HRESULT bezierCurveTo;
    HRESULT clip;
    HRESULT closePath;
    HRESULT fill;
    HRESULT lineTo;
    HRESULT moveTo;
    HRESULT quadraticCurveTo;
    HRESULT rect;
    HRESULT stroke;
    HRESULT isPointInPath;
    HRESULT put_font;
    HRESULT get_font;
    HRESULT put_textAlign;
    HRESULT get_textAlign;
    HRESULT put_textBaseline;
    HRESULT get_textBaseline;
    HRESULT fillText;
    HRESULT measureText;
    HRESULT strokeText;
    HRESULT drawImage;
    HRESULT createImageData;
    HRESULT getImageData;
    HRESULT putImageData;
    VOID ICanvasRenderingContext2D;
    VOID ICanvasRenderingContext2D;
    VOID ICanvasRenderingContext2D;
    struct ICanvasRenderingContext2D *operator=;
    struct ICanvasRenderingContext2D *operator=;
};

typedef struct ICanvasTextMetrics {
    struct IDispatch IDispatch;
    HRESULT get_width;
    VOID ICanvasTextMetrics;
    VOID ICanvasTextMetrics;
    VOID ICanvasTextMetrics;
    struct ICanvasTextMetrics *operator=;
    struct ICanvasTextMetrics *operator=;
};

typedef struct ICatInformation {
    struct IUnknown IUnknown;
    HRESULT EnumCategories;
    HRESULT GetCategoryDesc;
    HRESULT EnumClassesOfCategories;
    HRESULT IsClassOfCategories;
    HRESULT EnumImplCategoriesOfClass;
    HRESULT EnumReqCategoriesOfClass;
    VOID ICatInformation;
    VOID ICatInformation;
    VOID ICatInformation;
    struct ICatInformation *operator=;
    struct ICatInformation *operator=;
};

typedef struct ICatalogFileInfo {
    struct IUnknown IUnknown;
    HRESULT GetCatalogFile;
    HRESULT GetJavaTrust;
    VOID ICatalogFileInfo;
    VOID ICatalogFileInfo;
    VOID ICatalogFileInfo;
    struct ICatalogFileInfo *operator=;
    struct ICatalogFileInfo *operator=;
};

typedef struct ICatalogFileInfo2Priv {
    struct ICatalogFileInfo ICatalogFileInfo;
    HRESULT GetCorTrust;
    VOID ICatalogFileInfo2Priv;
    VOID ICatalogFileInfo2Priv;
    VOID ICatalogFileInfo2Priv;
    struct ICatalogFileInfo2Priv *operator=;
    struct ICatalogFileInfo2Priv *operator=;
};

typedef struct ICertContext {
    struct IUnknown IUnknown;
    HRESULT get_CertContext;
    HRESULT put_CertContext;
    HRESULT FreeContext;
    VOID ICertContext;
    VOID ICertContext;
    VOID ICertContext;
    struct ICertContext *operator=;
    struct ICertContext *operator=;
};

typedef struct ICertStore {
    struct IUnknown IUnknown;
    HRESULT get_StoreHandle;
    HRESULT put_StoreHandle;
    HRESULT get_StoreLocation;
    HRESULT put_StoreLocation;
    HRESULT CloseHandle;
    VOID ICertStore;
    VOID ICertStore;
    VOID ICertStore;
    struct ICertStore *operator=;
    struct ICertStore *operator=;
};

typedef struct IChannelHook {
    struct IUnknown IUnknown;
    VOID ClientGetSize;
    VOID ClientFillBuffer;
    VOID ClientNotify;
    VOID ServerNotify;
    VOID ServerGetSize;
    VOID ServerFillBuffer;
    VOID IChannelHook;
    VOID IChannelHook;
    VOID IChannelHook;
    struct IChannelHook *operator=;
    struct IChannelHook *operator=;
};

typedef struct IClassActivator {
    struct IUnknown IUnknown;
    HRESULT GetClassObject;
    VOID IClassActivator;
    VOID IClassActivator;
    VOID IClassActivator;
    struct IClassActivator *operator=;
    struct IClassActivator *operator=;
};

typedef struct IClassFactory {
    struct IUnknown IUnknown;
    HRESULT CreateInstance;
    HRESULT LockServer;
    VOID IClassFactory;
    VOID IClassFactory;
    VOID IClassFactory;
    struct IClassFactory *operator=;
    struct IClassFactory *operator=;
};

typedef struct IClassFactory2 {
    struct IClassFactory IClassFactory;
    HRESULT GetLicInfo;
    HRESULT RequestLicKey;
    HRESULT CreateInstanceLic;
    VOID IClassFactory2;
    VOID IClassFactory2;
    VOID IClassFactory2;
    struct IClassFactory2 *operator=;
    struct IClassFactory2 *operator=;
};

typedef struct IClientCaps {
    struct IDispatch IDispatch;
    HRESULT get_javaEnabled;
    HRESULT get_cookieEnabled;
    HRESULT get_cpuClass;
    HRESULT get_systemLanguage;
    HRESULT get_userLanguage;
    HRESULT get_platform;
    HRESULT get_connectionSpeed;
    HRESULT get_onLine;
    HRESULT get_colorDepth;
    HRESULT get_bufferDepth;
    HRESULT get_width;
    HRESULT get_height;
    HRESULT get_availHeight;
    HRESULT get_availWidth;
    HRESULT get_connectionType;
    HRESULT isComponentInstalled;
    HRESULT getComponentVersion;
    HRESULT compareVersions;
    HRESULT addComponentRequest;
    HRESULT doComponentRequest;
    HRESULT clearComponentRequest;
    VOID IClientCaps;
    VOID IClientCaps;
    VOID IClientCaps;
    struct IClientCaps *operator=;
    struct IClientCaps *operator=;
};

typedef struct IClientSecurity {
    struct IUnknown IUnknown;
    HRESULT QueryBlanket;
    HRESULT SetBlanket;
    HRESULT CopyProxy;
    VOID IClientSecurity;
    VOID IClientSecurity;
    VOID IClientSecurity;
    struct IClientSecurity *operator=;
    struct IClientSecurity *operator=;
};

typedef struct ICodeInstall {
    struct IWindowForBindingUI IWindowForBindingUI;
    HRESULT OnCodeInstallProblem;
    VOID ICodeInstall;
    VOID ICodeInstall;
    VOID ICodeInstall;
    struct ICodeInstall *operator=;
    struct ICodeInstall *operator=;
};

typedef struct IComThreadingInfo {
    struct IUnknown IUnknown;
    HRESULT GetCurrentApartmentType;
    HRESULT GetCurrentThreadType;
    HRESULT GetCurrentLogicalThreadId;
    HRESULT SetCurrentLogicalThreadId;
    VOID IComThreadingInfo;
    VOID IComThreadingInfo;
    VOID IComThreadingInfo;
    struct IComThreadingInfo *operator=;
    struct IComThreadingInfo *operator=;
};

typedef struct IConnectionPoint {
    struct IUnknown IUnknown;
    HRESULT GetConnectionInterface;
    HRESULT GetConnectionPointContainer;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumConnections;
    VOID IConnectionPoint;
    VOID IConnectionPoint;
    VOID IConnectionPoint;
    struct IConnectionPoint *operator=;
    struct IConnectionPoint *operator=;
};

typedef struct IConnectionPointContainer {
    struct IUnknown IUnknown;
    HRESULT EnumConnectionPoints;
    HRESULT FindConnectionPoint;
    VOID IConnectionPointContainer;
    VOID IConnectionPointContainer;
    VOID IConnectionPointContainer;
    struct IConnectionPointContainer *operator=;
    struct IConnectionPointContainer *operator=;
};

typedef struct IContinue {
    struct IUnknown IUnknown;
    HRESULT FContinue;
    VOID IContinue;
    VOID IContinue;
    VOID IContinue;
    struct IContinue *operator=;
    struct IContinue *operator=;
};

typedef struct IContinueCallback {
    struct IUnknown IUnknown;
    HRESULT FContinue;
    HRESULT FContinuePrinting;
    VOID IContinueCallback;
    VOID IContinueCallback;
    VOID IContinueCallback;
    struct IContinueCallback *operator=;
    struct IContinueCallback *operator=;
};

typedef struct ICreateErrorInfo {
    struct IUnknown IUnknown;
    HRESULT SetGUID;
    HRESULT SetSource;
    HRESULT SetDescription;
    HRESULT SetHelpFile;
    HRESULT SetHelpContext;
    VOID ICreateErrorInfo;
    VOID ICreateErrorInfo;
    VOID ICreateErrorInfo;
    struct ICreateErrorInfo *operator=;
    struct ICreateErrorInfo *operator=;
};

typedef struct ICreateTypeInfo {
    struct IUnknown IUnknown;
    HRESULT SetGuid;
    HRESULT SetTypeFlags;
    HRESULT SetDocString;
    HRESULT SetHelpContext;
    HRESULT SetVersion;
    HRESULT AddRefTypeInfo;
    HRESULT AddFuncDesc;
    HRESULT AddImplType;
    HRESULT SetImplTypeFlags;
    HRESULT SetAlignment;
    HRESULT SetSchema;
    HRESULT AddVarDesc;
    HRESULT SetFuncAndParamNames;
    HRESULT SetVarName;
    HRESULT SetTypeDescAlias;
    HRESULT DefineFuncAsDllEntry;
    HRESULT SetFuncDocString;
    HRESULT SetVarDocString;
    HRESULT SetFuncHelpContext;
    HRESULT SetVarHelpContext;
    HRESULT SetMops;
    HRESULT SetTypeIdldesc;
    HRESULT LayOut;
    VOID ICreateTypeInfo;
    VOID ICreateTypeInfo;
    VOID ICreateTypeInfo;
    struct ICreateTypeInfo *operator=;
    struct ICreateTypeInfo *operator=;
};

typedef struct ICreateTypeInfo2 {
    struct ICreateTypeInfo ICreateTypeInfo;
    HRESULT DeleteFuncDesc;
    HRESULT DeleteFuncDescByMemId;
    HRESULT DeleteVarDesc;
    HRESULT DeleteVarDescByMemId;
    HRESULT DeleteImplType;
    HRESULT SetCustData;
    HRESULT SetFuncCustData;
    HRESULT SetParamCustData;
    HRESULT SetVarCustData;
    HRESULT SetImplTypeCustData;
    HRESULT SetHelpStringContext;
    HRESULT SetFuncHelpStringContext;
    HRESULT SetVarHelpStringContext;
    HRESULT Invalidate;
    HRESULT SetName;
    VOID ICreateTypeInfo2;
    VOID ICreateTypeInfo2;
    VOID ICreateTypeInfo2;
    struct ICreateTypeInfo2 *operator=;
    struct ICreateTypeInfo2 *operator=;
};

typedef struct ICreateTypeLib {
    struct IUnknown IUnknown;
    HRESULT CreateTypeInfo;
    HRESULT SetName;
    HRESULT SetVersion;
    HRESULT SetGuid;
    HRESULT SetDocString;
    HRESULT SetHelpFileName;
    HRESULT SetHelpContext;
    HRESULT SetLcid;
    HRESULT SetLibFlags;
    HRESULT SaveAllChanges;
    VOID ICreateTypeLib;
    VOID ICreateTypeLib;
    VOID ICreateTypeLib;
    struct ICreateTypeLib *operator=;
    struct ICreateTypeLib *operator=;
};

typedef struct ICreateTypeLib2 {
    struct ICreateTypeLib ICreateTypeLib;
    HRESULT DeleteTypeInfo;
    HRESULT SetCustData;
    HRESULT SetHelpStringContext;
    HRESULT SetHelpStringDll;
    VOID ICreateTypeLib2;
    VOID ICreateTypeLib2;
    VOID ICreateTypeLib2;
    struct ICreateTypeLib2 *operator=;
    struct ICreateTypeLib2 *operator=;
};

typedef struct ICrossApartmentProtocolHandler {
    struct IUnknown IUnknown;
    VOID ICrossApartmentProtocolHandler;
    VOID ICrossApartmentProtocolHandler;
    VOID ICrossApartmentProtocolHandler;
    struct ICrossApartmentProtocolHandler *operator=;
    struct ICrossApartmentProtocolHandler *operator=;
};

typedef struct IDOMBeforeUnloadEvent {
    struct IDispatch IDispatch;
    HRESULT put_returnValue;
    HRESULT get_returnValue;
    VOID IDOMBeforeUnloadEvent;
    VOID IDOMBeforeUnloadEvent;
    VOID IDOMBeforeUnloadEvent;
    struct IDOMBeforeUnloadEvent *operator=;
    struct IDOMBeforeUnloadEvent *operator=;
};

typedef struct IDOMCloseEvent {
    struct IDispatch IDispatch;
    HRESULT get_wasClean;
    HRESULT initCloseEvent;
    VOID IDOMCloseEvent;
    VOID IDOMCloseEvent;
    VOID IDOMCloseEvent;
    struct IDOMCloseEvent *operator=;
    struct IDOMCloseEvent *operator=;
};

typedef struct IDOMCompositionEvent {
    struct IDispatch IDispatch;
    HRESULT get_data;
    HRESULT initCompositionEvent;
    HRESULT get_locale;
    VOID IDOMCompositionEvent;
    VOID IDOMCompositionEvent;
    VOID IDOMCompositionEvent;
    struct IDOMCompositionEvent *operator=;
    struct IDOMCompositionEvent *operator=;
};

typedef struct IDOMCustomEvent {
    struct IDispatch IDispatch;
    HRESULT get_detail;
    HRESULT initCustomEvent;
    VOID IDOMCustomEvent;
    VOID IDOMCustomEvent;
    VOID IDOMCustomEvent;
    struct IDOMCustomEvent *operator=;
    struct IDOMCustomEvent *operator=;
};

typedef struct IDOMDocumentType {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT get_entities;
    HRESULT get_notations;
    HRESULT get_publicId;
    HRESULT get_systemId;
    HRESULT get_internalSubset;
    VOID IDOMDocumentType;
    VOID IDOMDocumentType;
    VOID IDOMDocumentType;
    struct IDOMDocumentType *operator=;
    struct IDOMDocumentType *operator=;
};

typedef struct IDOMDragEvent {
    struct IDispatch IDispatch;
    HRESULT get_dataTransfer;
    HRESULT initDragEvent;
    VOID IDOMDragEvent;
    VOID IDOMDragEvent;
    VOID IDOMDragEvent;
    struct IDOMDragEvent *operator=;
    struct IDOMDragEvent *operator=;
};

typedef struct IDOMEvent {
    struct IDispatch IDispatch;
    HRESULT get_bubbles;
    HRESULT get_cancelable;
    HRESULT get_currentTarget;
    HRESULT get_defaultPrevented;
    HRESULT get_eventPhase;
    HRESULT get_target;
    HRESULT get_timeStamp;
    HRESULT get_type;
    HRESULT initEvent;
    HRESULT preventDefault;
    HRESULT stopPropagation;
    HRESULT stopImmediatePropagation;
    HRESULT get_isTrusted;
    HRESULT put_cancelBubble;
    HRESULT get_cancelBubble;
    HRESULT get_srcElement;
    VOID IDOMEvent;
    VOID IDOMEvent;
    VOID IDOMEvent;
    struct IDOMEvent *operator=;
    struct IDOMEvent *operator=;
};

typedef struct IDOMEventRegistrationCallback {
    struct IUnknown IUnknown;
    HRESULT OnDOMEventListenerAdded;
    HRESULT OnDOMEventListenerRemoved;
    VOID IDOMEventRegistrationCallback;
    VOID IDOMEventRegistrationCallback;
    VOID IDOMEventRegistrationCallback;
    struct IDOMEventRegistrationCallback *operator=;
    struct IDOMEventRegistrationCallback *operator=;
};

typedef struct IDOMException {
    struct IDispatch IDispatch;
    HRESULT put_code;
    HRESULT get_code;
    HRESULT get_message;
    VOID IDOMException;
    VOID IDOMException;
    VOID IDOMException;
    struct IDOMException *operator=;
    struct IDOMException *operator=;
};

typedef struct IDOMFocusEvent {
    struct IDispatch IDispatch;
    HRESULT get_relatedTarget;
    HRESULT initFocusEvent;
    VOID IDOMFocusEvent;
    VOID IDOMFocusEvent;
    VOID IDOMFocusEvent;
    struct IDOMFocusEvent *operator=;
    struct IDOMFocusEvent *operator=;
};

typedef struct IDOMKeyboardEvent {
    struct IDispatch IDispatch;
    HRESULT get_key;
    HRESULT get_location;
    HRESULT get_ctrlKey;
    HRESULT get_shiftKey;
    HRESULT get_altKey;
    HRESULT get_metaKey;
    HRESULT get_repeat;
    HRESULT getModifierState;
    HRESULT initKeyboardEvent;
    HRESULT get_keyCode;
    HRESULT get_charCode;
    HRESULT get_which;
    HRESULT get_ie9_char;
    HRESULT get_locale;
    VOID IDOMKeyboardEvent;
    VOID IDOMKeyboardEvent;
    VOID IDOMKeyboardEvent;
    struct IDOMKeyboardEvent *operator=;
    struct IDOMKeyboardEvent *operator=;
};

typedef struct IDOMMSAnimationEvent {
    struct IDispatch IDispatch;
    HRESULT get_animationName;
    HRESULT get_elapsedTime;
    HRESULT initMSAnimationEvent;
    VOID IDOMMSAnimationEvent;
    VOID IDOMMSAnimationEvent;
    VOID IDOMMSAnimationEvent;
    struct IDOMMSAnimationEvent *operator=;
    struct IDOMMSAnimationEvent *operator=;
};

typedef struct IDOMMSManipulationEvent {
    struct IDispatch IDispatch;
    HRESULT get_lastState;
    HRESULT get_currentState;
    HRESULT initMSManipulationEvent;
    VOID IDOMMSManipulationEvent;
    VOID IDOMMSManipulationEvent;
    VOID IDOMMSManipulationEvent;
    struct IDOMMSManipulationEvent *operator=;
    struct IDOMMSManipulationEvent *operator=;
};

typedef struct IDOMMSTransitionEvent {
    struct IDispatch IDispatch;
    HRESULT get_propertyName;
    HRESULT get_elapsedTime;
    HRESULT initMSTransitionEvent;
    VOID IDOMMSTransitionEvent;
    VOID IDOMMSTransitionEvent;
    VOID IDOMMSTransitionEvent;
    struct IDOMMSTransitionEvent *operator=;
    struct IDOMMSTransitionEvent *operator=;
};

typedef struct IDOMMessageEvent {
    struct IDispatch IDispatch;
    HRESULT get_data;
    HRESULT get_origin;
    HRESULT get_source;
    HRESULT initMessageEvent;
    VOID IDOMMessageEvent;
    VOID IDOMMessageEvent;
    VOID IDOMMessageEvent;
    struct IDOMMessageEvent *operator=;
    struct IDOMMessageEvent *operator=;
};

typedef struct IDOMMouseEvent {
    struct IDispatch IDispatch;
    HRESULT get_screenX;
    HRESULT get_screenY;
    HRESULT get_clientX;
    HRESULT get_clientY;
    HRESULT get_ctrlKey;
    HRESULT get_shiftKey;
    HRESULT get_altKey;
    HRESULT get_metaKey;
    HRESULT get_button;
    HRESULT get_relatedTarget;
    HRESULT initMouseEvent;
    HRESULT getModifierState;
    HRESULT get_buttons;
    HRESULT get_fromElement;
    HRESULT get_toElement;
    HRESULT get_x;
    HRESULT get_y;
    HRESULT get_offsetX;
    HRESULT get_offsetY;
    HRESULT get_pageX;
    HRESULT get_pageY;
    HRESULT get_layerX;
    HRESULT get_layerY;
    HRESULT get_which;
    VOID IDOMMouseEvent;
    VOID IDOMMouseEvent;
    VOID IDOMMouseEvent;
    struct IDOMMouseEvent *operator=;
    struct IDOMMouseEvent *operator=;
};

typedef struct IDOMMouseWheelEvent {
    struct IDispatch IDispatch;
    HRESULT get_wheelDelta;
    HRESULT initMouseWheelEvent;
    VOID IDOMMouseWheelEvent;
    VOID IDOMMouseWheelEvent;
    VOID IDOMMouseWheelEvent;
    struct IDOMMouseWheelEvent *operator=;
    struct IDOMMouseWheelEvent *operator=;
};

typedef struct IDOMMutationEvent {
    struct IDispatch IDispatch;
    HRESULT get_relatedNode;
    HRESULT get_prevValue;
    HRESULT get_newValue;
    HRESULT get_attrName;
    HRESULT get_attrChange;
    HRESULT initMutationEvent;
    VOID IDOMMutationEvent;
    VOID IDOMMutationEvent;
    VOID IDOMMutationEvent;
    struct IDOMMutationEvent *operator=;
    struct IDOMMutationEvent *operator=;
};

typedef struct IDOMNodeIterator {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_whatToShow;
    HRESULT get_filter;
    HRESULT get_expandEntityReferences;
    HRESULT nextNode;
    HRESULT previousNode;
    HRESULT detach;
    VOID IDOMNodeIterator;
    VOID IDOMNodeIterator;
    VOID IDOMNodeIterator;
    struct IDOMNodeIterator *operator=;
    struct IDOMNodeIterator *operator=;
};

typedef struct IDOMParser {
    struct IDispatch IDispatch;
    HRESULT parseFromString;
    VOID IDOMParser;
    VOID IDOMParser;
    VOID IDOMParser;
    struct IDOMParser *operator=;
    struct IDOMParser *operator=;
};

typedef struct IDOMParserFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IDOMParserFactory;
    VOID IDOMParserFactory;
    VOID IDOMParserFactory;
    struct IDOMParserFactory *operator=;
    struct IDOMParserFactory *operator=;
};

typedef struct IDOMProcessingInstruction {
    struct IDispatch IDispatch;
    HRESULT get_target;
    HRESULT put_data;
    HRESULT get_data;
    VOID IDOMProcessingInstruction;
    VOID IDOMProcessingInstruction;
    VOID IDOMProcessingInstruction;
    struct IDOMProcessingInstruction *operator=;
    struct IDOMProcessingInstruction *operator=;
};

typedef struct IDOMProgressEvent {
    struct IDispatch IDispatch;
    HRESULT get_lengthComputable;
    HRESULT get_loaded;
    HRESULT get_total;
    HRESULT initProgressEvent;
    VOID IDOMProgressEvent;
    VOID IDOMProgressEvent;
    VOID IDOMProgressEvent;
    struct IDOMProgressEvent *operator=;
    struct IDOMProgressEvent *operator=;
};

typedef struct IDOMSiteModeEvent {
    struct IDispatch IDispatch;
    HRESULT get_buttonID;
    HRESULT get_actionURL;
    VOID IDOMSiteModeEvent;
    VOID IDOMSiteModeEvent;
    VOID IDOMSiteModeEvent;
    struct IDOMSiteModeEvent *operator=;
    struct IDOMSiteModeEvent *operator=;
};

typedef struct IDOMStorageEvent {
    struct IDispatch IDispatch;
    HRESULT get_key;
    HRESULT get_oldValue;
    HRESULT get_newValue;
    HRESULT get_url;
    HRESULT get_storageArea;
    HRESULT initStorageEvent;
    VOID IDOMStorageEvent;
    VOID IDOMStorageEvent;
    VOID IDOMStorageEvent;
    struct IDOMStorageEvent *operator=;
    struct IDOMStorageEvent *operator=;
};

typedef struct IDOMTextEvent {
    struct IDispatch IDispatch;
    HRESULT get_data;
    HRESULT get_inputMethod;
    HRESULT initTextEvent;
    HRESULT get_locale;
    VOID IDOMTextEvent;
    VOID IDOMTextEvent;
    VOID IDOMTextEvent;
    struct IDOMTextEvent *operator=;
    struct IDOMTextEvent *operator=;
};

typedef struct IDOMTreeWalker {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_whatToShow;
    HRESULT get_filter;
    HRESULT get_expandEntityReferences;
    HRESULT putref_currentNode;
    HRESULT get_currentNode;
    HRESULT parentNode;
    HRESULT firstChild;
    HRESULT lastChild;
    HRESULT previousSibling;
    HRESULT nextSibling;
    HRESULT previousNode;
    HRESULT nextNode;
    VOID IDOMTreeWalker;
    VOID IDOMTreeWalker;
    VOID IDOMTreeWalker;
    struct IDOMTreeWalker *operator=;
    struct IDOMTreeWalker *operator=;
};

typedef struct IDOMUIEvent {
    struct IDispatch IDispatch;
    HRESULT get_view;
    HRESULT get_detail;
    HRESULT initUIEvent;
    VOID IDOMUIEvent;
    VOID IDOMUIEvent;
    VOID IDOMUIEvent;
    struct IDOMUIEvent *operator=;
    struct IDOMUIEvent *operator=;
};

typedef struct IDOMWheelEvent {
    struct IDispatch IDispatch;
    HRESULT get_deltaX;
    HRESULT get_deltaY;
    HRESULT get_deltaZ;
    HRESULT get_deltaMode;
    HRESULT initWheelEvent;
    VOID IDOMWheelEvent;
    VOID IDOMWheelEvent;
    VOID IDOMWheelEvent;
    struct IDOMWheelEvent *operator=;
    struct IDOMWheelEvent *operator=;
};

typedef struct IDOMXmlSerializer {
    struct IDispatch IDispatch;
    HRESULT serializeToString;
    VOID IDOMXmlSerializer;
    VOID IDOMXmlSerializer;
    VOID IDOMXmlSerializer;
    struct IDOMXmlSerializer *operator=;
    struct IDOMXmlSerializer *operator=;
};

typedef struct IDOMXmlSerializerFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IDOMXmlSerializerFactory;
    VOID IDOMXmlSerializerFactory;
    VOID IDOMXmlSerializerFactory;
    struct IDOMXmlSerializerFactory *operator=;
    struct IDOMXmlSerializerFactory *operator=;
};

typedef struct IDataAdviseHolder {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT SendOnDataChange;
    VOID IDataAdviseHolder;
    VOID IDataAdviseHolder;
    VOID IDataAdviseHolder;
    struct IDataAdviseHolder *operator=;
    struct IDataAdviseHolder *operator=;
};

typedef struct IDataFilter {
    struct IUnknown IUnknown;
    HRESULT DoEncode;
    HRESULT DoDecode;
    HRESULT SetEncodingLevel;
    VOID IDataFilter;
    VOID IDataFilter;
    VOID IDataFilter;
    struct IDataFilter *operator=;
    struct IDataFilter *operator=;
};

typedef struct IDataObject {
    struct IUnknown IUnknown;
    HRESULT GetData;
    HRESULT GetDataHere;
    HRESULT QueryGetData;
    HRESULT GetCanonicalFormatEtc;
    HRESULT SetData;
    HRESULT EnumFormatEtc;
    HRESULT DAdvise;
    HRESULT DUnadvise;
    HRESULT EnumDAdvise;
    VOID IDataObject;
    VOID IDataObject;
    VOID IDataObject;
    struct IDataObject *operator=;
    struct IDataObject *operator=;
};

typedef struct IDebugApplication64 {
    struct IRemoteDebugApplication IRemoteDebugApplication;
    HRESULT SetName;
    HRESULT StepOutComplete;
    HRESULT DebugOutput;
    HRESULT StartDebugSession;
    HRESULT HandleBreakPoint;
    HRESULT Close;
    HRESULT GetBreakFlags;
    HRESULT GetCurrentThread;
    HRESULT CreateAsyncDebugOperation;
    HRESULT AddStackFrameSniffer;
    HRESULT RemoveStackFrameSniffer;
    HRESULT QueryCurrentThreadIsDebuggerThread;
    HRESULT SynchronousCallInDebuggerThread;
    HRESULT CreateApplicationNode;
    HRESULT FireDebuggerEvent;
    HRESULT HandleRuntimeError;
    LONG FCanJitDebug;
    LONG FIsAutoJitDebugEnabled;
    HRESULT AddGlobalExpressionContextProvider;
    HRESULT RemoveGlobalExpressionContextProvider;
    VOID IDebugApplication64;
    VOID IDebugApplication64;
    VOID IDebugApplication64;
    struct IDebugApplication64 *operator=;
    struct IDebugApplication64 *operator=;
};

typedef struct IDebugApplicationNode {
    struct IDebugDocumentProvider IDebugDocumentProvider;
    HRESULT EnumChildren;
    HRESULT GetParent;
    HRESULT SetDocumentProvider;
    HRESULT Close;
    HRESULT Attach;
    HRESULT Detach;
    VOID IDebugApplicationNode;
    VOID IDebugApplicationNode;
    VOID IDebugApplicationNode;
    struct IDebugApplicationNode *operator=;
    struct IDebugApplicationNode *operator=;
};

typedef struct IDebugApplicationThread {
    struct IRemoteDebugApplicationThread IRemoteDebugApplicationThread;
    HRESULT SynchronousCallIntoThread32;
    HRESULT QueryIsCurrentThread;
    HRESULT QueryIsDebuggerThread;
    HRESULT SetDescription;
    HRESULT SetStateString;
    VOID IDebugApplicationThread;
    VOID IDebugApplicationThread;
    VOID IDebugApplicationThread;
    struct IDebugApplicationThread *operator=;
    struct IDebugApplicationThread *operator=;
};

typedef struct IDebugAsyncOperation {
    struct IUnknown IUnknown;
    HRESULT GetSyncDebugOperation;
    HRESULT Start;
    HRESULT Abort;
    HRESULT QueryIsComplete;
    HRESULT GetResult;
    VOID IDebugAsyncOperation;
    VOID IDebugAsyncOperation;
    VOID IDebugAsyncOperation;
    struct IDebugAsyncOperation *operator=;
    struct IDebugAsyncOperation *operator=;
};

typedef struct IDebugAsyncOperationCallBack {
    struct IUnknown IUnknown;
    HRESULT onComplete;
    VOID IDebugAsyncOperationCallBack;
    VOID IDebugAsyncOperationCallBack;
    VOID IDebugAsyncOperationCallBack;
    struct IDebugAsyncOperationCallBack *operator=;
    struct IDebugAsyncOperationCallBack *operator=;
};

typedef struct IDebugCallbackNotificationHandler {
    struct IUnknown IUnknown;
    HRESULT RequestedCallbackTypes;
    HRESULT BeforeDispatchEvent;
    HRESULT DispatchEventComplete;
    HRESULT BeforeInvokeDomCallback;
    HRESULT InvokeDomCallbackComplete;
    HRESULT BeforeInvokeCallback;
    HRESULT InvokeCallbackComplete;
    VOID IDebugCallbackNotificationHandler;
    VOID IDebugCallbackNotificationHandler;
    VOID IDebugCallbackNotificationHandler;
    struct IDebugCallbackNotificationHandler *operator=;
    struct IDebugCallbackNotificationHandler *operator=;
};

typedef struct IDebugCodeContext {
    struct IUnknown IUnknown;
    HRESULT GetDocumentContext;
    HRESULT SetBreakPoint;
    VOID IDebugCodeContext;
    VOID IDebugCodeContext;
    VOID IDebugCodeContext;
    struct IDebugCodeContext *operator=;
    struct IDebugCodeContext *operator=;
};

typedef struct IDebugDocument {
    struct IDebugDocumentInfo IDebugDocumentInfo;
    VOID IDebugDocument;
    VOID IDebugDocument;
    VOID IDebugDocument;
    struct IDebugDocument *operator=;
    struct IDebugDocument *operator=;
};

typedef struct IDebugDocumentContext {
    struct IUnknown IUnknown;
    HRESULT GetDocument;
    HRESULT EnumCodeContexts;
    VOID IDebugDocumentContext;
    VOID IDebugDocumentContext;
    VOID IDebugDocumentContext;
    struct IDebugDocumentContext *operator=;
    struct IDebugDocumentContext *operator=;
};

typedef struct IDebugDocumentInfo {
    struct IUnknown IUnknown;
    HRESULT GetName;
    HRESULT GetDocumentClassId;
    VOID IDebugDocumentInfo;
    VOID IDebugDocumentInfo;
    VOID IDebugDocumentInfo;
    struct IDebugDocumentInfo *operator=;
    struct IDebugDocumentInfo *operator=;
};

typedef struct IDebugDocumentProvider {
    struct IDebugDocumentInfo IDebugDocumentInfo;
    HRESULT GetDocument;
    VOID IDebugDocumentProvider;
    VOID IDebugDocumentProvider;
    VOID IDebugDocumentProvider;
    struct IDebugDocumentProvider *operator=;
    struct IDebugDocumentProvider *operator=;
};

typedef struct IDebugExpression {
    struct IUnknown IUnknown;
    HRESULT Start;
    HRESULT Abort;
    HRESULT QueryIsComplete;
    HRESULT GetResultAsString;
    HRESULT GetResultAsDebugProperty;
    VOID IDebugExpression;
    VOID IDebugExpression;
    VOID IDebugExpression;
    struct IDebugExpression *operator=;
    struct IDebugExpression *operator=;
};

typedef struct IDebugExpressionCallBack {
    struct IUnknown IUnknown;
    HRESULT onComplete;
    VOID IDebugExpressionCallBack;
    VOID IDebugExpressionCallBack;
    VOID IDebugExpressionCallBack;
    struct IDebugExpressionCallBack *operator=;
    struct IDebugExpressionCallBack *operator=;
};

typedef struct IDebugExpressionContext {
    struct IUnknown IUnknown;
    HRESULT ParseLanguageText;
    HRESULT GetLanguageInfo;
    VOID IDebugExpressionContext;
    VOID IDebugExpressionContext;
    VOID IDebugExpressionContext;
    struct IDebugExpressionContext *operator=;
    struct IDebugExpressionContext *operator=;
};

typedef struct IDebugProperty {
    struct IUnknown IUnknown;
    HRESULT GetPropertyInfo;
    HRESULT GetExtendedInfo;
    HRESULT SetValueAsString;
    HRESULT EnumMembers;
    HRESULT GetParent;
    VOID IDebugProperty;
    VOID IDebugProperty;
    VOID IDebugProperty;
    struct IDebugProperty *operator=;
    struct IDebugProperty *operator=;
};

typedef struct IDebugStackFrame {
    struct IUnknown IUnknown;
    HRESULT GetCodeContext;
    HRESULT GetDescriptionString;
    HRESULT GetLanguageString;
    HRESULT GetThread;
    HRESULT GetDebugProperty;
    VOID IDebugStackFrame;
    VOID IDebugStackFrame;
    VOID IDebugStackFrame;
    struct IDebugStackFrame *operator=;
    struct IDebugStackFrame *operator=;
};

typedef struct IDebugStackFrameSniffer {
    struct IUnknown IUnknown;
    HRESULT EnumStackFrames;
    VOID IDebugStackFrameSniffer;
    VOID IDebugStackFrameSniffer;
    VOID IDebugStackFrameSniffer;
    struct IDebugStackFrameSniffer *operator=;
    struct IDebugStackFrameSniffer *operator=;
};

typedef struct IDebugSyncOperation {
    struct IUnknown IUnknown;
    HRESULT GetTargetThread;
    HRESULT Execute;
    HRESULT InProgressAbort;
    VOID IDebugSyncOperation;
    VOID IDebugSyncOperation;
    VOID IDebugSyncOperation;
    struct IDebugSyncOperation *operator=;
    struct IDebugSyncOperation *operator=;
};

typedef struct IDebugThreadCall32 {
    struct IUnknown IUnknown;
    HRESULT ThreadCallHandler;
    VOID IDebugThreadCall32;
    VOID IDebugThreadCall32;
    VOID IDebugThreadCall32;
    struct IDebugThreadCall32 *operator=;
    struct IDebugThreadCall32 *operator=;
};

typedef struct IDebugThreadCall64 {
    struct IUnknown IUnknown;
    HRESULT ThreadCallHandler;
    VOID IDebugThreadCall64;
    VOID IDebugThreadCall64;
    VOID IDebugThreadCall64;
    struct IDebugThreadCall64 *operator=;
    struct IDebugThreadCall64 *operator=;
};

typedef struct IDeveloperConsoleMessageReceiver {
    struct IUnknown IUnknown;
    HRESULT Write;
    HRESULT WriteWithUrl;
    HRESULT WriteWithUrlAndLine;
    HRESULT WriteWithUrlLineAndColumn;
    VOID IDeveloperConsoleMessageReceiver;
    VOID IDeveloperConsoleMessageReceiver;
    VOID IDeveloperConsoleMessageReceiver;
    struct IDeveloperConsoleMessageReceiver *operator=;
    struct IDeveloperConsoleMessageReceiver *operator=;
};

typedef struct IDirectWriterLock {
    struct IUnknown IUnknown;
    HRESULT WaitForWriteAccess;
    HRESULT ReleaseWriteAccess;
    HRESULT HaveWriteAccess;
    VOID IDirectWriterLock;
    VOID IDirectWriterLock;
    VOID IDirectWriterLock;
    struct IDirectWriterLock *operator=;
    struct IDirectWriterLock *operator=;
};

typedef struct IDispError {
    struct IUnknown IUnknown;
    HRESULT QueryErrorInfo;
    HRESULT GetNext;
    HRESULT GetHresult;
    HRESULT GetSource;
    HRESULT GetHelpInfo;
    HRESULT GetDescription;
    VOID IDispError;
    VOID IDispError;
    VOID IDispError;
    struct IDispError *operator=;
    struct IDispError *operator=;
};

typedef struct IDispatch {
    struct IUnknown IUnknown;
    HRESULT GetTypeInfoCount;
    HRESULT GetTypeInfo;
    HRESULT GetIDsOfNames;
    HRESULT Invoke;
    VOID IDispatch;
    VOID IDispatch;
    VOID IDispatch;
    struct IDispatch *operator=;
    struct IDispatch *operator=;
};

typedef struct IDispatchEx {
    struct IDispatch IDispatch;
    HRESULT GetDispID;
    HRESULT InvokeEx;
    HRESULT DeleteMemberByName;
    HRESULT DeleteMemberByDispID;
    HRESULT GetMemberProperties;
    HRESULT GetMemberName;
    HRESULT GetNextDispID;
    HRESULT GetNameSpaceParent;
    VOID IDispatchEx;
    VOID IDispatchEx;
    VOID IDispatchEx;
    struct IDispatchEx *operator=;
    struct IDispatchEx *operator=;
};

typedef struct IDispatchVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *GetTypeInfoCount;
    HRESULT *GetTypeInfo;
    HRESULT *GetIDsOfNames;
    HRESULT *Invoke;
};

typedef struct IDisplayPointer {
    struct IUnknown IUnknown;
    HRESULT MoveToPoint;
    HRESULT MoveUnit;
    HRESULT PositionMarkupPointer;
    HRESULT MoveToPointer;
    HRESULT SetPointerGravity;
    HRESULT GetPointerGravity;
    HRESULT SetDisplayGravity;
    HRESULT GetDisplayGravity;
    HRESULT IsPositioned;
    HRESULT Unposition;
    HRESULT IsEqualTo;
    HRESULT IsLeftOf;
    HRESULT IsRightOf;
    HRESULT IsAtBOL;
    HRESULT MoveToMarkupPointer;
    HRESULT ScrollIntoView;
    HRESULT GetLineInfo;
    HRESULT GetFlowElement;
    HRESULT QueryBreaks;
    VOID IDisplayPointer;
    VOID IDisplayPointer;
    VOID IDisplayPointer;
    struct IDisplayPointer *operator=;
    struct IDisplayPointer *operator=;
};

typedef struct IDisplayServices {
    struct IUnknown IUnknown;
    HRESULT CreateDisplayPointer;
    HRESULT TransformRect;
    HRESULT TransformPoint;
    HRESULT GetCaret;
    HRESULT GetComputedStyle;
    HRESULT ScrollRectIntoView;
    HRESULT HasFlowLayout;
    VOID IDisplayServices;
    VOID IDisplayServices;
    VOID IDisplayServices;
    struct IDisplayServices *operator=;
    struct IDisplayServices *operator=;
};

typedef struct IDocumentEvent {
    struct IDispatch IDispatch;
    HRESULT createEvent;
    VOID IDocumentEvent;
    VOID IDocumentEvent;
    VOID IDocumentEvent;
    struct IDocumentEvent *operator=;
    struct IDocumentEvent *operator=;
};

typedef struct IDocumentRange {
    struct IDispatch IDispatch;
    HRESULT createRange;
    VOID IDocumentRange;
    VOID IDocumentRange;
    VOID IDocumentRange;
    struct IDocumentRange *operator=;
    struct IDocumentRange *operator=;
};

typedef struct IDocumentSelector {
    struct IDispatch IDispatch;
    HRESULT querySelector;
    HRESULT querySelectorAll;
    VOID IDocumentSelector;
    VOID IDocumentSelector;
    VOID IDocumentSelector;
    struct IDocumentSelector *operator=;
    struct IDocumentSelector *operator=;
};

typedef struct IDocumentTraversal {
    struct IDispatch IDispatch;
    HRESULT createNodeIterator;
    HRESULT createTreeWalker;
    VOID IDocumentTraversal;
    VOID IDocumentTraversal;
    VOID IDocumentTraversal;
    struct IDocumentTraversal *operator=;
    struct IDocumentTraversal *operator=;
};

typedef struct IDownloadModeHandleCallback {
    struct IUnknown IUnknown;
    HRESULT GetDownloadModeHandle;
    VOID IDownloadModeHandleCallback;
    VOID IDownloadModeHandleCallback;
    VOID IDownloadModeHandleCallback;
    struct IDownloadModeHandleCallback *operator=;
    struct IDownloadModeHandleCallback *operator=;
};

typedef struct IDropSource {
    struct IUnknown IUnknown;
    HRESULT QueryContinueDrag;
    HRESULT GiveFeedback;
    VOID IDropSource;
    VOID IDropSource;
    VOID IDropSource;
    struct IDropSource *operator=;
    struct IDropSource *operator=;
};

typedef struct IDropSourceNotify {
    struct IUnknown IUnknown;
    HRESULT DragEnterTarget;
    HRESULT DragLeaveTarget;
    VOID IDropSourceNotify;
    VOID IDropSourceNotify;
    VOID IDropSourceNotify;
    struct IDropSourceNotify *operator=;
    struct IDropSourceNotify *operator=;
};

typedef struct IDropTarget {
    struct IUnknown IUnknown;
    HRESULT DragEnter;
    HRESULT DragOver;
    HRESULT DragLeave;
    HRESULT Drop;
    VOID IDropTarget;
    VOID IDropTarget;
    VOID IDropTarget;
    struct IDropTarget *operator=;
    struct IDropTarget *operator=;
};

typedef struct IDummyHICONIncluder {
    struct IUnknown IUnknown;
    HRESULT Dummy;
    VOID IDummyHICONIncluder;
    VOID IDummyHICONIncluder;
    VOID IDummyHICONIncluder;
    struct IDummyHICONIncluder *operator=;
    struct IDummyHICONIncluder *operator=;
};

typedef struct IElementBehavior {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT Notify;
    HRESULT Detach;
    VOID IElementBehavior;
    VOID IElementBehavior;
    VOID IElementBehavior;
    struct IElementBehavior *operator=;
    struct IElementBehavior *operator=;
};

typedef struct IElementBehaviorCategory {
    struct IUnknown IUnknown;
    HRESULT GetCategory;
    VOID IElementBehaviorCategory;
    VOID IElementBehaviorCategory;
    VOID IElementBehaviorCategory;
    struct IElementBehaviorCategory *operator=;
    struct IElementBehaviorCategory *operator=;
};

typedef struct IElementBehaviorFactory {
    struct IUnknown IUnknown;
    HRESULT FindBehavior;
    VOID IElementBehaviorFactory;
    VOID IElementBehaviorFactory;
    VOID IElementBehaviorFactory;
    struct IElementBehaviorFactory *operator=;
    struct IElementBehaviorFactory *operator=;
};

typedef struct IElementBehaviorFocus {
    struct IUnknown IUnknown;
    HRESULT GetFocusRect;
    VOID IElementBehaviorFocus;
    VOID IElementBehaviorFocus;
    VOID IElementBehaviorFocus;
    struct IElementBehaviorFocus *operator=;
    struct IElementBehaviorFocus *operator=;
};

typedef struct IElementBehaviorLayout {
    struct IUnknown IUnknown;
    HRESULT GetSize;
    HRESULT GetLayoutInfo;
    HRESULT GetPosition;
    HRESULT MapSize;
    VOID IElementBehaviorLayout;
    VOID IElementBehaviorLayout;
    VOID IElementBehaviorLayout;
    struct IElementBehaviorLayout *operator=;
    struct IElementBehaviorLayout *operator=;
};

typedef struct IElementBehaviorLayout2 {
    struct IUnknown IUnknown;
    HRESULT GetTextDescent;
    VOID IElementBehaviorLayout2;
    VOID IElementBehaviorLayout2;
    VOID IElementBehaviorLayout2;
    struct IElementBehaviorLayout2 *operator=;
    struct IElementBehaviorLayout2 *operator=;
};

typedef struct IElementBehaviorRender {
    struct IUnknown IUnknown;
    HRESULT Draw;
    HRESULT GetRenderInfo;
    HRESULT HitTestPoint;
    VOID IElementBehaviorRender;
    VOID IElementBehaviorRender;
    VOID IElementBehaviorRender;
    struct IElementBehaviorRender *operator=;
    struct IElementBehaviorRender *operator=;
};

typedef struct IElementBehaviorSite {
    struct IUnknown IUnknown;
    HRESULT GetElement;
    HRESULT RegisterNotification;
    VOID IElementBehaviorSite;
    VOID IElementBehaviorSite;
    VOID IElementBehaviorSite;
    struct IElementBehaviorSite *operator=;
    struct IElementBehaviorSite *operator=;
};

typedef struct IElementBehaviorSiteCategory {
    struct IUnknown IUnknown;
    HRESULT GetRelatedBehaviors;
    VOID IElementBehaviorSiteCategory;
    VOID IElementBehaviorSiteCategory;
    VOID IElementBehaviorSiteCategory;
    struct IElementBehaviorSiteCategory *operator=;
    struct IElementBehaviorSiteCategory *operator=;
};

typedef struct IElementBehaviorSiteLayout {
    struct IUnknown IUnknown;
    HRESULT InvalidateLayoutInfo;
    HRESULT InvalidateSize;
    HRESULT GetMediaResolution;
    VOID IElementBehaviorSiteLayout;
    VOID IElementBehaviorSiteLayout;
    VOID IElementBehaviorSiteLayout;
    struct IElementBehaviorSiteLayout *operator=;
    struct IElementBehaviorSiteLayout *operator=;
};

typedef struct IElementBehaviorSiteLayout2 {
    struct IUnknown IUnknown;
    HRESULT GetFontInfo;
    VOID IElementBehaviorSiteLayout2;
    VOID IElementBehaviorSiteLayout2;
    VOID IElementBehaviorSiteLayout2;
    struct IElementBehaviorSiteLayout2 *operator=;
    struct IElementBehaviorSiteLayout2 *operator=;
};

typedef struct IElementBehaviorSiteOM {
    struct IUnknown IUnknown;
    HRESULT RegisterEvent;
    HRESULT GetEventCookie;
    HRESULT FireEvent;
    HRESULT CreateEventObject;
    HRESULT RegisterName;
    HRESULT RegisterUrn;
    VOID IElementBehaviorSiteOM;
    VOID IElementBehaviorSiteOM;
    VOID IElementBehaviorSiteOM;
    struct IElementBehaviorSiteOM *operator=;
    struct IElementBehaviorSiteOM *operator=;
};

typedef struct IElementBehaviorSiteOM2 {
    struct IElementBehaviorSiteOM IElementBehaviorSiteOM;
    HRESULT GetDefaults;
    VOID IElementBehaviorSiteOM2;
    VOID IElementBehaviorSiteOM2;
    VOID IElementBehaviorSiteOM2;
    struct IElementBehaviorSiteOM2 *operator=;
    struct IElementBehaviorSiteOM2 *operator=;
};

typedef struct IElementBehaviorSiteRender {
    struct IUnknown IUnknown;
    HRESULT Invalidate;
    HRESULT InvalidateRenderInfo;
    HRESULT InvalidateStyle;
    VOID IElementBehaviorSiteRender;
    VOID IElementBehaviorSiteRender;
    VOID IElementBehaviorSiteRender;
    struct IElementBehaviorSiteRender *operator=;
    struct IElementBehaviorSiteRender *operator=;
};

typedef struct IElementBehaviorSubmit {
    struct IUnknown IUnknown;
    HRESULT GetSubmitInfo;
    HRESULT Reset;
    VOID IElementBehaviorSubmit;
    VOID IElementBehaviorSubmit;
    VOID IElementBehaviorSubmit;
    struct IElementBehaviorSubmit *operator=;
    struct IElementBehaviorSubmit *operator=;
};

typedef struct IElementNamespace {
    struct IUnknown IUnknown;
    HRESULT AddTag;
    VOID IElementNamespace;
    VOID IElementNamespace;
    VOID IElementNamespace;
    struct IElementNamespace *operator=;
    struct IElementNamespace *operator=;
};

typedef struct IElementNamespaceFactory {
    struct IUnknown IUnknown;
    HRESULT Create;
    VOID IElementNamespaceFactory;
    VOID IElementNamespaceFactory;
    VOID IElementNamespaceFactory;
    struct IElementNamespaceFactory *operator=;
    struct IElementNamespaceFactory *operator=;
};

typedef struct IElementNamespaceFactory2 {
    struct IElementNamespaceFactory IElementNamespaceFactory;
    HRESULT CreateWithImplementation;
    VOID IElementNamespaceFactory2;
    VOID IElementNamespaceFactory2;
    VOID IElementNamespaceFactory2;
    struct IElementNamespaceFactory2 *operator=;
    struct IElementNamespaceFactory2 *operator=;
};

typedef struct IElementNamespaceFactoryCallback {
    struct IUnknown IUnknown;
    HRESULT Resolve;
    VOID IElementNamespaceFactoryCallback;
    VOID IElementNamespaceFactoryCallback;
    VOID IElementNamespaceFactoryCallback;
    struct IElementNamespaceFactoryCallback *operator=;
    struct IElementNamespaceFactoryCallback *operator=;
};

typedef struct IElementNamespaceTable {
    struct IUnknown IUnknown;
    HRESULT AddNamespace;
    VOID IElementNamespaceTable;
    VOID IElementNamespaceTable;
    VOID IElementNamespaceTable;
    struct IElementNamespaceTable *operator=;
    struct IElementNamespaceTable *operator=;
};

typedef struct IElementSegment {
    struct ISegment ISegment;
    HRESULT GetElement;
    HRESULT SetPrimary;
    HRESULT IsPrimary;
    VOID IElementSegment;
    VOID IElementSegment;
    VOID IElementSegment;
    struct IElementSegment *operator=;
    struct IElementSegment *operator=;
};

typedef struct IElementSelector {
    struct IDispatch IDispatch;
    HRESULT querySelector;
    HRESULT querySelectorAll;
    VOID IElementSelector;
    VOID IElementSelector;
    VOID IElementSelector;
    struct IElementSelector *operator=;
    struct IElementSelector *operator=;
};

typedef struct IElementTraversal {
    struct IDispatch IDispatch;
    HRESULT get_firstElementChild;
    HRESULT get_lastElementChild;
    HRESULT get_previousElementSibling;
    HRESULT get_nextElementSibling;
    HRESULT get_childElementCount;
    VOID IElementTraversal;
    VOID IElementTraversal;
    VOID IElementTraversal;
    struct IElementTraversal *operator=;
    struct IElementTraversal *operator=;
};

typedef struct IEncodingFilterFactory {
    struct IUnknown IUnknown;
    HRESULT FindBestFilter;
    HRESULT GetDefaultFilter;
    VOID IEncodingFilterFactory;
    VOID IEncodingFilterFactory;
    VOID IEncodingFilterFactory;
    struct IEncodingFilterFactory *operator=;
    struct IEncodingFilterFactory *operator=;
};

typedef struct IEnterpriseDropTarget {
    struct IUnknown IUnknown;
    HRESULT SetDropSourceEnterpriseId;
    HRESULT IsEvaluatingEdpPolicy;
    VOID IEnterpriseDropTarget;
    VOID IEnterpriseDropTarget;
    VOID IEnterpriseDropTarget;
    struct IEnterpriseDropTarget *operator=;
    struct IEnterpriseDropTarget *operator=;
};

typedef struct IEnumCATEGORYINFO {
};

typedef struct IEnumCodePage {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumCodePage;
    VOID IEnumCodePage;
    VOID IEnumCodePage;
    struct IEnumCodePage *operator=;
    struct IEnumCodePage *operator=;
};

typedef struct IEnumConnectionPoints {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumConnectionPoints;
    VOID IEnumConnectionPoints;
    VOID IEnumConnectionPoints;
    struct IEnumConnectionPoints *operator=;
    struct IEnumConnectionPoints *operator=;
};

typedef struct IEnumConnections {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumConnections;
    VOID IEnumConnections;
    VOID IEnumConnections;
    struct IEnumConnections *operator=;
    struct IEnumConnections *operator=;
};

typedef struct IEnumDebugApplicationNodes {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumDebugApplicationNodes;
    VOID IEnumDebugApplicationNodes;
    VOID IEnumDebugApplicationNodes;
    struct IEnumDebugApplicationNodes *operator=;
    struct IEnumDebugApplicationNodes *operator=;
};

typedef struct IEnumDebugCodeContexts {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumDebugCodeContexts;
    VOID IEnumDebugCodeContexts;
    VOID IEnumDebugCodeContexts;
    struct IEnumDebugCodeContexts *operator=;
    struct IEnumDebugCodeContexts *operator=;
};

typedef struct IEnumDebugExpressionContexts {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumDebugExpressionContexts;
    VOID IEnumDebugExpressionContexts;
    VOID IEnumDebugExpressionContexts;
    struct IEnumDebugExpressionContexts *operator=;
    struct IEnumDebugExpressionContexts *operator=;
};

typedef struct IEnumDebugPropertyInfo {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    HRESULT GetCount;
    VOID IEnumDebugPropertyInfo;
    VOID IEnumDebugPropertyInfo;
    VOID IEnumDebugPropertyInfo;
    struct IEnumDebugPropertyInfo *operator=;
    struct IEnumDebugPropertyInfo *operator=;
};

typedef struct IEnumDebugStackFrames {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumDebugStackFrames;
    VOID IEnumDebugStackFrames;
    VOID IEnumDebugStackFrames;
    struct IEnumDebugStackFrames *operator=;
    struct IEnumDebugStackFrames *operator=;
};

typedef struct IEnumFORMATETC {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumFORMATETC;
    VOID IEnumFORMATETC;
    VOID IEnumFORMATETC;
    struct IEnumFORMATETC *operator=;
    struct IEnumFORMATETC *operator=;
};

typedef struct IEnumGUID {
};

typedef struct IEnumInputContext {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumInputContext;
    VOID IEnumInputContext;
    VOID IEnumInputContext;
    struct IEnumInputContext *operator=;
    struct IEnumInputContext *operator=;
};

typedef struct IEnumMoniker {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumMoniker;
    VOID IEnumMoniker;
    VOID IEnumMoniker;
    struct IEnumMoniker *operator=;
    struct IEnumMoniker *operator=;
};

typedef struct IEnumOLEVERB {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOLEVERB;
    VOID IEnumOLEVERB;
    VOID IEnumOLEVERB;
    struct IEnumOLEVERB *operator=;
    struct IEnumOLEVERB *operator=;
};

typedef struct IEnumOleDocumentViews {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOleDocumentViews;
    VOID IEnumOleDocumentViews;
    VOID IEnumOleDocumentViews;
    struct IEnumOleDocumentViews *operator=;
    struct IEnumOleDocumentViews *operator=;
};

typedef struct IEnumOleUndoUnits {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOleUndoUnits;
    VOID IEnumOleUndoUnits;
    VOID IEnumOleUndoUnits;
    struct IEnumOleUndoUnits *operator=;
    struct IEnumOleUndoUnits *operator=;
};

typedef struct IEnumPrivacyRecords {
    struct IUnknown IUnknown;
    HRESULT Reset;
    HRESULT GetSize;
    HRESULT GetPrivacyImpacted;
    HRESULT Next;
    VOID IEnumPrivacyRecords;
    VOID IEnumPrivacyRecords;
    VOID IEnumPrivacyRecords;
    struct IEnumPrivacyRecords *operator=;
    struct IEnumPrivacyRecords *operator=;
};

typedef struct IEnumRegisterWordA {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumRegisterWordA;
    VOID IEnumRegisterWordA;
    VOID IEnumRegisterWordA;
    struct IEnumRegisterWordA *operator=;
    struct IEnumRegisterWordA *operator=;
};

typedef struct IEnumRegisterWordW {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumRegisterWordW;
    VOID IEnumRegisterWordW;
    VOID IEnumRegisterWordW;
    struct IEnumRegisterWordW *operator=;
    struct IEnumRegisterWordW *operator=;
};

typedef struct IEnumRemoteDebugApplicationThreads {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumRemoteDebugApplicationThreads;
    VOID IEnumRemoteDebugApplicationThreads;
    VOID IEnumRemoteDebugApplicationThreads;
    struct IEnumRemoteDebugApplicationThreads *operator=;
    struct IEnumRemoteDebugApplicationThreads *operator=;
};

typedef struct IEnumRfc1766 {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumRfc1766;
    VOID IEnumRfc1766;
    VOID IEnumRfc1766;
    struct IEnumRfc1766 *operator=;
    struct IEnumRfc1766 *operator=;
};

typedef struct IEnumSTATDATA {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATDATA;
    VOID IEnumSTATDATA;
    VOID IEnumSTATDATA;
    struct IEnumSTATDATA *operator=;
    struct IEnumSTATDATA *operator=;
};

typedef struct IEnumSTATPROPSETSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATPROPSETSTG;
    VOID IEnumSTATPROPSETSTG;
    VOID IEnumSTATPROPSETSTG;
    struct IEnumSTATPROPSETSTG *operator=;
    struct IEnumSTATPROPSETSTG *operator=;
};

typedef struct IEnumSTATPROPSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATPROPSTG;
    VOID IEnumSTATPROPSTG;
    VOID IEnumSTATPROPSTG;
    struct IEnumSTATPROPSTG *operator=;
    struct IEnumSTATPROPSTG *operator=;
};

typedef struct IEnumSTATSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATSTG;
    VOID IEnumSTATSTG;
    VOID IEnumSTATSTG;
    struct IEnumSTATSTG *operator=;
    struct IEnumSTATSTG *operator=;
};

typedef struct IEnumScript {
    struct IUnknown IUnknown;
    HRESULT Clone;
    HRESULT Next;
    HRESULT Reset;
    HRESULT Skip;
    VOID IEnumScript;
    VOID IEnumScript;
    VOID IEnumScript;
    struct IEnumScript *operator=;
    struct IEnumScript *operator=;
};

typedef struct IEnumString {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumString;
    VOID IEnumString;
    VOID IEnumString;
    struct IEnumString *operator=;
    struct IEnumString *operator=;
};

typedef struct IEnumUnknown {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumUnknown;
    VOID IEnumUnknown;
    VOID IEnumUnknown;
    struct IEnumUnknown *operator=;
    struct IEnumUnknown *operator=;
};

typedef struct IEnumVARIANT {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumVARIANT;
    VOID IEnumVARIANT;
    VOID IEnumVARIANT;
    struct IEnumVARIANT *operator=;
    struct IEnumVARIANT *operator=;
};

typedef struct IErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetGUID;
    HRESULT GetSource;
    HRESULT GetDescription;
    HRESULT GetHelpFile;
    HRESULT GetHelpContext;
    VOID IErrorInfo;
    VOID IErrorInfo;
    VOID IErrorInfo;
    struct IErrorInfo *operator=;
    struct IErrorInfo *operator=;
};

typedef struct IErrorLog {
    struct IUnknown IUnknown;
    HRESULT AddError;
    VOID IErrorLog;
    VOID IErrorLog;
    VOID IErrorLog;
    struct IErrorLog *operator=;
    struct IErrorLog *operator=;
};

typedef struct IEventException {
    struct IDispatch IDispatch;
    HRESULT put_code;
    HRESULT get_code;
    HRESULT get_message;
    VOID IEventException;
    VOID IEventException;
    VOID IEventException;
    struct IEventException *operator=;
    struct IEventException *operator=;
};

typedef struct IEventTarget {
    struct IDispatch IDispatch;
    HRESULT addEventListener;
    HRESULT removeEventListener;
    HRESULT dispatchEvent;
    VOID IEventTarget;
    VOID IEventTarget;
    VOID IEventTarget;
    struct IEventTarget *operator=;
    struct IEventTarget *operator=;
};

typedef struct IEventTarget2 {
    struct IUnknown IUnknown;
    HRESULT GetRegisteredEventTypes;
    HRESULT GetListenersForType;
    HRESULT RegisterForDOMEventListeners;
    HRESULT UnregisterForDOMEventListeners;
    VOID IEventTarget2;
    VOID IEventTarget2;
    VOID IEventTarget2;
    struct IEventTarget2 *operator=;
    struct IEventTarget2 *operator=;
};

typedef struct IExtensionValidationProxy {
    struct IUnknown IUnknown;
    HRESULT OnBeforeCoGetClassObject;
    VOID IExtensionValidationProxy;
    VOID IExtensionValidationProxy;
    VOID IExtensionValidationProxy;
    struct IExtensionValidationProxy *operator=;
    struct IExtensionValidationProxy *operator=;
};

typedef struct IExternalConnection {
    struct IUnknown IUnknown;
    ULONG AddConnection;
    ULONG ReleaseConnection;
    VOID IExternalConnection;
    VOID IExternalConnection;
    VOID IExternalConnection;
    struct IExternalConnection *operator=;
    struct IExternalConnection *operator=;
};

typedef struct IFastRundown {
    struct IUnknown IUnknown;
    VOID IFastRundown;
    VOID IFastRundown;
    VOID IFastRundown;
    struct IFastRundown *operator=;
    struct IFastRundown *operator=;
};

typedef struct IFillLockBytes {
    struct IUnknown IUnknown;
    HRESULT FillAppend;
    HRESULT FillAt;
    HRESULT SetFillSize;
    HRESULT Terminate;
    VOID IFillLockBytes;
    VOID IFillLockBytes;
    VOID IFillLockBytes;
    struct IFillLockBytes *operator=;
    struct IFillLockBytes *operator=;
};

typedef struct IFont {
    struct IUnknown IUnknown;
    HRESULT get_Name;
    HRESULT put_Name;
    HRESULT get_Size;
    HRESULT put_Size;
    HRESULT get_Bold;
    HRESULT put_Bold;
    HRESULT get_Italic;
    HRESULT put_Italic;
    HRESULT get_Underline;
    HRESULT put_Underline;
    HRESULT get_Strikethrough;
    HRESULT put_Strikethrough;
    HRESULT get_Weight;
    HRESULT put_Weight;
    HRESULT get_Charset;
    HRESULT put_Charset;
    HRESULT get_hFont;
    HRESULT Clone;
    HRESULT IsEqual;
    HRESULT SetRatio;
    HRESULT QueryTextMetrics;
    HRESULT AddRefHfont;
    HRESULT ReleaseHfont;
    HRESULT SetHdc;
    VOID IFont;
    VOID IFont;
    VOID IFont;
    struct IFont *operator=;
    struct IFont *operator=;
};

typedef struct IFontDisp {
    struct IDispatch IDispatch;
    VOID IFontDisp;
    VOID IFontDisp;
    VOID IFontDisp;
    struct IFontDisp *operator=;
    struct IFontDisp *operator=;
};

typedef struct IFontEventsDisp {
    struct IDispatch IDispatch;
    VOID IFontEventsDisp;
    VOID IFontEventsDisp;
    VOID IFontEventsDisp;
    struct IFontEventsDisp *operator=;
    struct IFontEventsDisp *operator=;
};

typedef struct IFontNames {
    struct IDispatch IDispatch;
    HRESULT get__NewEnum;
    HRESULT get_Count;
    HRESULT Item;
    VOID IFontNames;
    VOID IFontNames;
    VOID IFontNames;
    struct IFontNames *operator=;
    struct IFontNames *operator=;
};

typedef struct IForegroundTransfer {
    struct IUnknown IUnknown;
    HRESULT AllowForegroundTransfer;
    VOID IForegroundTransfer;
    VOID IForegroundTransfer;
    VOID IForegroundTransfer;
    struct IForegroundTransfer *operator=;
    struct IForegroundTransfer *operator=;
};

typedef struct IGetBindHandle {
    struct IUnknown IUnknown;
    HRESULT GetBindHandle;
    VOID IGetBindHandle;
    VOID IGetBindHandle;
    VOID IGetBindHandle;
    struct IGetBindHandle *operator=;
    struct IGetBindHandle *operator=;
};

typedef struct IGetSVGDocument {
    struct IDispatch IDispatch;
    HRESULT getSVGDocument;
    VOID IGetSVGDocument;
    VOID IGetSVGDocument;
    VOID IGetSVGDocument;
    struct IGetSVGDocument *operator=;
    struct IGetSVGDocument *operator=;
};

typedef struct IGlobalInterfaceTable {
    struct IUnknown IUnknown;
    HRESULT RegisterInterfaceInGlobal;
    HRESULT RevokeInterfaceFromGlobal;
    HRESULT GetInterfaceFromGlobal;
    VOID IGlobalInterfaceTable;
    VOID IGlobalInterfaceTable;
    VOID IGlobalInterfaceTable;
    struct IGlobalInterfaceTable *operator=;
    struct IGlobalInterfaceTable *operator=;
};

typedef struct IGlobalOptions {
    struct IUnknown IUnknown;
    HRESULT Set;
    HRESULT Query;
    VOID IGlobalOptions;
    VOID IGlobalOptions;
    VOID IGlobalOptions;
    struct IGlobalOptions *operator=;
    struct IGlobalOptions *operator=;
};

typedef struct IHTCAttachBehavior {
    struct IDispatch IDispatch;
    HRESULT fireEvent;
    HRESULT detachEvent;
    VOID IHTCAttachBehavior;
    VOID IHTCAttachBehavior;
    VOID IHTCAttachBehavior;
    struct IHTCAttachBehavior *operator=;
    struct IHTCAttachBehavior *operator=;
};

typedef struct IHTCAttachBehavior2 {
    struct IDispatch IDispatch;
    HRESULT fireEvent;
    VOID IHTCAttachBehavior2;
    VOID IHTCAttachBehavior2;
    VOID IHTCAttachBehavior2;
    struct IHTCAttachBehavior2 *operator=;
    struct IHTCAttachBehavior2 *operator=;
};

typedef struct IHTCDefaultDispatch {
    struct IDispatch IDispatch;
    HRESULT get_element;
    HRESULT createEventObject;
    HRESULT get_defaults;
    HRESULT get_document;
    VOID IHTCDefaultDispatch;
    VOID IHTCDefaultDispatch;
    VOID IHTCDefaultDispatch;
    struct IHTCDefaultDispatch *operator=;
    struct IHTCDefaultDispatch *operator=;
};

typedef struct IHTCDescBehavior {
    struct IDispatch IDispatch;
    HRESULT get_urn;
    HRESULT get_name;
    VOID IHTCDescBehavior;
    VOID IHTCDescBehavior;
    VOID IHTCDescBehavior;
    struct IHTCDescBehavior *operator=;
    struct IHTCDescBehavior *operator=;
};

typedef struct IHTCEventBehavior {
    struct IDispatch IDispatch;
    HRESULT fire;
    VOID IHTCEventBehavior;
    VOID IHTCEventBehavior;
    VOID IHTCEventBehavior;
    struct IHTCEventBehavior *operator=;
    struct IHTCEventBehavior *operator=;
};

typedef struct IHTCMethodBehavior {
    struct IDispatch IDispatch;
    VOID IHTCMethodBehavior;
    VOID IHTCMethodBehavior;
    VOID IHTCMethodBehavior;
    struct IHTCMethodBehavior *operator=;
    struct IHTCMethodBehavior *operator=;
};

typedef struct IHTCPropertyBehavior {
    struct IDispatch IDispatch;
    HRESULT fireChange;
    HRESULT put_value;
    HRESULT get_value;
    VOID IHTCPropertyBehavior;
    VOID IHTCPropertyBehavior;
    VOID IHTCPropertyBehavior;
    struct IHTCPropertyBehavior *operator=;
    struct IHTCPropertyBehavior *operator=;
};

typedef struct IHTMLAnchorElement {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT put_target;
    HRESULT get_target;
    HRESULT put_rel;
    HRESULT get_rel;
    HRESULT put_rev;
    HRESULT get_rev;
    HRESULT put_urn;
    HRESULT get_urn;
    HRESULT put_Methods;
    HRESULT get_Methods;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_host;
    HRESULT get_host;
    HRESULT put_hostname;
    HRESULT get_hostname;
    HRESULT put_pathname;
    HRESULT get_pathname;
    HRESULT put_port;
    HRESULT get_port;
    HRESULT put_protocol;
    HRESULT get_protocol;
    HRESULT put_search;
    HRESULT get_search;
    HRESULT put_hash;
    HRESULT get_hash;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_accessKey;
    HRESULT get_accessKey;
    HRESULT get_protocolLong;
    HRESULT get_mimeType;
    HRESULT get_nameProp;
    HRESULT put_tabIndex;
    HRESULT get_tabIndex;
    HRESULT focus;
    HRESULT blur;
    VOID IHTMLAnchorElement;
    VOID IHTMLAnchorElement;
    VOID IHTMLAnchorElement;
    struct IHTMLAnchorElement *operator=;
    struct IHTMLAnchorElement *operator=;
};

typedef struct IHTMLAnchorElement2 {
    struct IDispatch IDispatch;
    HRESULT put_charset;
    HRESULT get_charset;
    HRESULT put_coords;
    HRESULT get_coords;
    HRESULT put_hreflang;
    HRESULT get_hreflang;
    HRESULT put_shape;
    HRESULT get_shape;
    HRESULT put_type;
    HRESULT get_type;
    VOID IHTMLAnchorElement2;
    VOID IHTMLAnchorElement2;
    VOID IHTMLAnchorElement2;
    struct IHTMLAnchorElement2 *operator=;
    struct IHTMLAnchorElement2 *operator=;
};

typedef struct IHTMLAnchorElement3 {
    struct IDispatch IDispatch;
    HRESULT put_shape;
    HRESULT get_shape;
    HRESULT put_coords;
    HRESULT get_coords;
    HRESULT put_href;
    HRESULT get_href;
    VOID IHTMLAnchorElement3;
    VOID IHTMLAnchorElement3;
    VOID IHTMLAnchorElement3;
    struct IHTMLAnchorElement3 *operator=;
    struct IHTMLAnchorElement3 *operator=;
};

typedef struct IHTMLAppBehavior {
    struct IDispatch IDispatch;
    HRESULT put_applicationName;
    HRESULT get_applicationName;
    HRESULT put_version;
    HRESULT get_version;
    HRESULT put_icon;
    HRESULT get_icon;
    HRESULT put_singleInstance;
    HRESULT get_singleInstance;
    HRESULT put_minimizeButton;
    HRESULT get_minimizeButton;
    HRESULT put_maximizeButton;
    HRESULT get_maximizeButton;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_borderStyle;
    HRESULT get_borderStyle;
    HRESULT put_sysMenu;
    HRESULT get_sysMenu;
    HRESULT put_caption;
    HRESULT get_caption;
    HRESULT put_windowState;
    HRESULT get_windowState;
    HRESULT put_showInTaskBar;
    HRESULT get_showInTaskBar;
    HRESULT get_commandLine;
    VOID IHTMLAppBehavior;
    VOID IHTMLAppBehavior;
    VOID IHTMLAppBehavior;
    struct IHTMLAppBehavior *operator=;
    struct IHTMLAppBehavior *operator=;
};

typedef struct IHTMLAppBehavior2 {
    struct IDispatch IDispatch;
    HRESULT put_contextMenu;
    HRESULT get_contextMenu;
    HRESULT put_innerBorder;
    HRESULT get_innerBorder;
    HRESULT put_scroll;
    HRESULT get_scroll;
    HRESULT put_scrollFlat;
    HRESULT get_scrollFlat;
    HRESULT put_selection;
    HRESULT get_selection;
    VOID IHTMLAppBehavior2;
    VOID IHTMLAppBehavior2;
    VOID IHTMLAppBehavior2;
    struct IHTMLAppBehavior2 *operator=;
    struct IHTMLAppBehavior2 *operator=;
};

typedef struct IHTMLAppBehavior3 {
    struct IDispatch IDispatch;
    HRESULT put_navigable;
    HRESULT get_navigable;
    VOID IHTMLAppBehavior3;
    VOID IHTMLAppBehavior3;
    VOID IHTMLAppBehavior3;
    struct IHTMLAppBehavior3 *operator=;
    struct IHTMLAppBehavior3 *operator=;
};

typedef struct IHTMLApplicationCache {
    struct IDispatch IDispatch;
    HRESULT get_status;
    HRESULT put_onchecking;
    HRESULT get_onchecking;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onnoupdate;
    HRESULT get_onnoupdate;
    HRESULT put_ondownloading;
    HRESULT get_ondownloading;
    HRESULT put_onprogress;
    HRESULT get_onprogress;
    HRESULT put_onupdateready;
    HRESULT get_onupdateready;
    HRESULT put_oncached;
    HRESULT get_oncached;
    HRESULT put_onobsolete;
    HRESULT get_onobsolete;
    HRESULT update;
    HRESULT swapCache;
    HRESULT abort;
    VOID IHTMLApplicationCache;
    VOID IHTMLApplicationCache;
    VOID IHTMLApplicationCache;
    struct IHTMLApplicationCache *operator=;
    struct IHTMLApplicationCache *operator=;
};

typedef struct IHTMLAreaElement {
    struct IDispatch IDispatch;
    HRESULT put_shape;
    HRESULT get_shape;
    HRESULT put_coords;
    HRESULT get_coords;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT put_target;
    HRESULT get_target;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_noHref;
    HRESULT get_noHref;
    HRESULT put_host;
    HRESULT get_host;
    HRESULT put_hostname;
    HRESULT get_hostname;
    HRESULT put_pathname;
    HRESULT get_pathname;
    HRESULT put_port;
    HRESULT get_port;
    HRESULT put_protocol;
    HRESULT get_protocol;
    HRESULT put_search;
    HRESULT get_search;
    HRESULT put_hash;
    HRESULT get_hash;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_tabIndex;
    HRESULT get_tabIndex;
    HRESULT focus;
    HRESULT blur;
    VOID IHTMLAreaElement;
    VOID IHTMLAreaElement;
    VOID IHTMLAreaElement;
    struct IHTMLAreaElement *operator=;
    struct IHTMLAreaElement *operator=;
};

typedef struct IHTMLAreaElement2 {
    struct IDispatch IDispatch;
    HRESULT put_shape;
    HRESULT get_shape;
    HRESULT put_coords;
    HRESULT get_coords;
    HRESULT put_href;
    HRESULT get_href;
    VOID IHTMLAreaElement2;
    VOID IHTMLAreaElement2;
    VOID IHTMLAreaElement2;
    struct IHTMLAreaElement2 *operator=;
    struct IHTMLAreaElement2 *operator=;
};

typedef struct IHTMLAreasCollection {
    struct IDispatch IDispatch;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    HRESULT tags;
    HRESULT add;
    HRESULT remove;
    VOID IHTMLAreasCollection;
    VOID IHTMLAreasCollection;
    VOID IHTMLAreasCollection;
    struct IHTMLAreasCollection *operator=;
    struct IHTMLAreasCollection *operator=;
};

typedef struct IHTMLAreasCollection2 {
    struct IDispatch IDispatch;
    HRESULT urns;
    VOID IHTMLAreasCollection2;
    VOID IHTMLAreasCollection2;
    VOID IHTMLAreasCollection2;
    struct IHTMLAreasCollection2 *operator=;
    struct IHTMLAreasCollection2 *operator=;
};

typedef struct IHTMLAreasCollection3 {
    struct IDispatch IDispatch;
    HRESULT namedItem;
    VOID IHTMLAreasCollection3;
    VOID IHTMLAreasCollection3;
    VOID IHTMLAreasCollection3;
    struct IHTMLAreasCollection3 *operator=;
    struct IHTMLAreasCollection3 *operator=;
};

typedef struct IHTMLAreasCollection4 {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    HRESULT namedItem;
    VOID IHTMLAreasCollection4;
    VOID IHTMLAreasCollection4;
    VOID IHTMLAreasCollection4;
    struct IHTMLAreasCollection4 *operator=;
    struct IHTMLAreasCollection4 *operator=;
};

typedef struct IHTMLAttributeCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLAttributeCollection;
    VOID IHTMLAttributeCollection;
    VOID IHTMLAttributeCollection;
    struct IHTMLAttributeCollection *operator=;
    struct IHTMLAttributeCollection *operator=;
};

typedef struct IHTMLAttributeCollection2 {
    struct IDispatch IDispatch;
    HRESULT getNamedItem;
    HRESULT setNamedItem;
    HRESULT removeNamedItem;
    VOID IHTMLAttributeCollection2;
    VOID IHTMLAttributeCollection2;
    VOID IHTMLAttributeCollection2;
    struct IHTMLAttributeCollection2 *operator=;
    struct IHTMLAttributeCollection2 *operator=;
};

typedef struct IHTMLAttributeCollection3 {
    struct IDispatch IDispatch;
    HRESULT getNamedItem;
    HRESULT setNamedItem;
    HRESULT removeNamedItem;
    HRESULT item;
    HRESULT get_length;
    VOID IHTMLAttributeCollection3;
    VOID IHTMLAttributeCollection3;
    VOID IHTMLAttributeCollection3;
    struct IHTMLAttributeCollection3 *operator=;
    struct IHTMLAttributeCollection3 *operator=;
};

typedef struct IHTMLAttributeCollection4 {
    struct IDispatch IDispatch;
    HRESULT getNamedItemNS;
    HRESULT setNamedItemNS;
    HRESULT removeNamedItemNS;
    HRESULT getNamedItem;
    HRESULT setNamedItem;
    HRESULT removeNamedItem;
    HRESULT item;
    HRESULT get_length;
    VOID IHTMLAttributeCollection4;
    VOID IHTMLAttributeCollection4;
    VOID IHTMLAttributeCollection4;
    struct IHTMLAttributeCollection4 *operator=;
    struct IHTMLAttributeCollection4 *operator=;
};

typedef struct IHTMLAudioElement {
    struct IDispatch IDispatch;
    VOID IHTMLAudioElement;
    VOID IHTMLAudioElement;
    VOID IHTMLAudioElement;
    struct IHTMLAudioElement *operator=;
    struct IHTMLAudioElement *operator=;
};

typedef struct IHTMLAudioElementFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IHTMLAudioElementFactory;
    VOID IHTMLAudioElementFactory;
    VOID IHTMLAudioElementFactory;
    struct IHTMLAudioElementFactory *operator=;
    struct IHTMLAudioElementFactory *operator=;
};

typedef struct IHTMLBGsound {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT put_volume;
    HRESULT get_volume;
    HRESULT put_balance;
    HRESULT get_balance;
    VOID IHTMLBGsound;
    VOID IHTMLBGsound;
    VOID IHTMLBGsound;
    struct IHTMLBGsound *operator=;
    struct IHTMLBGsound *operator=;
};

typedef struct IHTMLBRElement {
    struct IDispatch IDispatch;
    HRESULT put_clear;
    HRESULT get_clear;
    VOID IHTMLBRElement;
    VOID IHTMLBRElement;
    VOID IHTMLBRElement;
    struct IHTMLBRElement *operator=;
    struct IHTMLBRElement *operator=;
};

typedef struct IHTMLBaseElement {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT put_target;
    HRESULT get_target;
    VOID IHTMLBaseElement;
    VOID IHTMLBaseElement;
    VOID IHTMLBaseElement;
    struct IHTMLBaseElement *operator=;
    struct IHTMLBaseElement *operator=;
};

typedef struct IHTMLBaseElement2 {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    VOID IHTMLBaseElement2;
    VOID IHTMLBaseElement2;
    VOID IHTMLBaseElement2;
    struct IHTMLBaseElement2 *operator=;
    struct IHTMLBaseElement2 *operator=;
};

typedef struct IHTMLBaseFontElement {
    struct IDispatch IDispatch;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_face;
    HRESULT get_face;
    HRESULT put_size;
    HRESULT get_size;
    VOID IHTMLBaseFontElement;
    VOID IHTMLBaseFontElement;
    VOID IHTMLBaseFontElement;
    struct IHTMLBaseFontElement *operator=;
    struct IHTMLBaseFontElement *operator=;
};

typedef struct IHTMLBlockElement {
    struct IDispatch IDispatch;
    HRESULT put_clear;
    HRESULT get_clear;
    VOID IHTMLBlockElement;
    VOID IHTMLBlockElement;
    VOID IHTMLBlockElement;
    struct IHTMLBlockElement *operator=;
    struct IHTMLBlockElement *operator=;
};

typedef struct IHTMLBlockElement2 {
    struct IDispatch IDispatch;
    HRESULT put_cite;
    HRESULT get_cite;
    HRESULT put_width;
    HRESULT get_width;
    VOID IHTMLBlockElement2;
    VOID IHTMLBlockElement2;
    VOID IHTMLBlockElement2;
    struct IHTMLBlockElement2 *operator=;
    struct IHTMLBlockElement2 *operator=;
};

typedef struct IHTMLBlockElement3 {
    struct IDispatch IDispatch;
    HRESULT put_cite;
    HRESULT get_cite;
    VOID IHTMLBlockElement3;
    VOID IHTMLBlockElement3;
    VOID IHTMLBlockElement3;
    struct IHTMLBlockElement3 *operator=;
    struct IHTMLBlockElement3 *operator=;
};

typedef struct IHTMLBodyElement {
    struct IDispatch IDispatch;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_bgProperties;
    HRESULT get_bgProperties;
    HRESULT put_leftMargin;
    HRESULT get_leftMargin;
    HRESULT put_topMargin;
    HRESULT get_topMargin;
    HRESULT put_rightMargin;
    HRESULT get_rightMargin;
    HRESULT put_bottomMargin;
    HRESULT get_bottomMargin;
    HRESULT put_noWrap;
    HRESULT get_noWrap;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_text;
    HRESULT get_text;
    HRESULT put_link;
    HRESULT get_link;
    HRESULT put_vLink;
    HRESULT get_vLink;
    HRESULT put_aLink;
    HRESULT get_aLink;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onunload;
    HRESULT get_onunload;
    HRESULT put_scroll;
    HRESULT get_scroll;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_onbeforeunload;
    HRESULT get_onbeforeunload;
    HRESULT createTextRange;
    VOID IHTMLBodyElement;
    VOID IHTMLBodyElement;
    VOID IHTMLBodyElement;
    struct IHTMLBodyElement *operator=;
    struct IHTMLBodyElement *operator=;
};

typedef struct IHTMLBodyElement2 {
    struct IDispatch IDispatch;
    HRESULT put_onbeforeprint;
    HRESULT get_onbeforeprint;
    HRESULT put_onafterprint;
    HRESULT get_onafterprint;
    VOID IHTMLBodyElement2;
    VOID IHTMLBodyElement2;
    VOID IHTMLBodyElement2;
    struct IHTMLBodyElement2 *operator=;
    struct IHTMLBodyElement2 *operator=;
};

typedef struct IHTMLBodyElement3 {
    struct IDispatch IDispatch;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_ononline;
    HRESULT get_ononline;
    HRESULT put_onoffline;
    HRESULT get_onoffline;
    HRESULT put_onhashchange;
    HRESULT get_onhashchange;
    VOID IHTMLBodyElement3;
    VOID IHTMLBodyElement3;
    VOID IHTMLBodyElement3;
    struct IHTMLBodyElement3 *operator=;
    struct IHTMLBodyElement3 *operator=;
};

typedef struct IHTMLBodyElement4 {
    struct IDispatch IDispatch;
    HRESULT put_onmessage;
    HRESULT get_onmessage;
    HRESULT put_onstorage;
    HRESULT get_onstorage;
    VOID IHTMLBodyElement4;
    VOID IHTMLBodyElement4;
    VOID IHTMLBodyElement4;
    struct IHTMLBodyElement4 *operator=;
    struct IHTMLBodyElement4 *operator=;
};

typedef struct IHTMLBodyElement5 {
    struct IDispatch IDispatch;
    HRESULT put_onpopstate;
    HRESULT get_onpopstate;
    VOID IHTMLBodyElement5;
    VOID IHTMLBodyElement5;
    VOID IHTMLBodyElement5;
    struct IHTMLBodyElement5 *operator=;
    struct IHTMLBodyElement5 *operator=;
};

typedef struct IHTMLBookmarkCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLBookmarkCollection;
    VOID IHTMLBookmarkCollection;
    VOID IHTMLBookmarkCollection;
    struct IHTMLBookmarkCollection *operator=;
    struct IHTMLBookmarkCollection *operator=;
};

typedef struct IHTMLButtonElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT createTextRange;
    VOID IHTMLButtonElement;
    VOID IHTMLButtonElement;
    VOID IHTMLButtonElement;
    struct IHTMLButtonElement *operator=;
    struct IHTMLButtonElement *operator=;
};

typedef struct IHTMLButtonElement2 {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    VOID IHTMLButtonElement2;
    VOID IHTMLButtonElement2;
    VOID IHTMLButtonElement2;
    struct IHTMLButtonElement2 *operator=;
    struct IHTMLButtonElement2 *operator=;
};

typedef struct IHTMLCSSImportRule {
    struct IDispatch IDispatch;
    HRESULT get_href;
    HRESULT put_media;
    HRESULT get_media;
    HRESULT get_styleSheet;
    VOID IHTMLCSSImportRule;
    VOID IHTMLCSSImportRule;
    VOID IHTMLCSSImportRule;
    struct IHTMLCSSImportRule *operator=;
    struct IHTMLCSSImportRule *operator=;
};

typedef struct IHTMLCSSMediaList {
    struct IDispatch IDispatch;
    HRESULT put_mediaText;
    HRESULT get_mediaText;
    HRESULT get_length;
    HRESULT item;
    HRESULT appendMedium;
    HRESULT deleteMedium;
    VOID IHTMLCSSMediaList;
    VOID IHTMLCSSMediaList;
    VOID IHTMLCSSMediaList;
    struct IHTMLCSSMediaList *operator=;
    struct IHTMLCSSMediaList *operator=;
};

typedef struct IHTMLCSSMediaRule {
    struct IDispatch IDispatch;
    HRESULT put_media;
    HRESULT get_media;
    HRESULT get_cssRules;
    HRESULT insertRule;
    HRESULT deleteRule;
    VOID IHTMLCSSMediaRule;
    VOID IHTMLCSSMediaRule;
    VOID IHTMLCSSMediaRule;
    struct IHTMLCSSMediaRule *operator=;
    struct IHTMLCSSMediaRule *operator=;
};

typedef struct IHTMLCSSNamespaceRule {
    struct IDispatch IDispatch;
    HRESULT get_namespaceURI;
    HRESULT get_prefix;
    VOID IHTMLCSSNamespaceRule;
    VOID IHTMLCSSNamespaceRule;
    VOID IHTMLCSSNamespaceRule;
    struct IHTMLCSSNamespaceRule *operator=;
    struct IHTMLCSSNamespaceRule *operator=;
};

typedef struct IHTMLCSSRule {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_cssText;
    HRESULT get_cssText;
    HRESULT get_parentRule;
    HRESULT get_parentStyleSheet;
    VOID IHTMLCSSRule;
    VOID IHTMLCSSRule;
    VOID IHTMLCSSRule;
    struct IHTMLCSSRule *operator=;
    struct IHTMLCSSRule *operator=;
};

typedef struct IHTMLCSSStyleDeclaration {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get_parentRule;
    HRESULT getPropertyValue;
    HRESULT getPropertyPriority;
    HRESULT removeProperty;
    HRESULT setProperty;
    HRESULT item;
    HRESULT put_fontFamily;
    HRESULT get_fontFamily;
    HRESULT put_fontStyle;
    HRESULT get_fontStyle;
    HRESULT put_fontVariant;
    HRESULT get_fontVariant;
    HRESULT put_fontWeight;
    HRESULT get_fontWeight;
    HRESULT put_fontSize;
    HRESULT get_fontSize;
    HRESULT put_font;
    HRESULT get_font;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_backgroundColor;
    HRESULT get_backgroundColor;
    HRESULT put_backgroundImage;
    HRESULT get_backgroundImage;
    HRESULT put_backgroundRepeat;
    HRESULT get_backgroundRepeat;
    HRESULT put_backgroundAttachment;
    HRESULT get_backgroundAttachment;
    HRESULT put_backgroundPosition;
    HRESULT get_backgroundPosition;
    HRESULT put_backgroundPositionX;
    HRESULT get_backgroundPositionX;
    HRESULT put_backgroundPositionY;
    HRESULT get_backgroundPositionY;
    HRESULT put_wordSpacing;
    HRESULT get_wordSpacing;
    HRESULT put_letterSpacing;
    HRESULT get_letterSpacing;
    HRESULT put_textDecoration;
    HRESULT get_textDecoration;
    HRESULT put_verticalAlign;
    HRESULT get_verticalAlign;
    HRESULT put_textTransform;
    HRESULT get_textTransform;
    HRESULT put_textAlign;
    HRESULT get_textAlign;
    HRESULT put_textIndent;
    HRESULT get_textIndent;
    HRESULT put_lineHeight;
    HRESULT get_lineHeight;
    HRESULT put_marginTop;
    HRESULT get_marginTop;
    HRESULT put_marginRight;
    HRESULT get_marginRight;
    HRESULT put_marginBottom;
    HRESULT get_marginBottom;
    HRESULT put_marginLeft;
    HRESULT get_marginLeft;
    HRESULT put_margin;
    HRESULT get_margin;
    HRESULT put_paddingTop;
    HRESULT get_paddingTop;
    HRESULT put_paddingRight;
    HRESULT get_paddingRight;
    HRESULT put_paddingBottom;
    HRESULT get_paddingBottom;
    HRESULT put_paddingLeft;
    HRESULT get_paddingLeft;
    HRESULT put_padding;
    HRESULT get_padding;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_borderTop;
    HRESULT get_borderTop;
    HRESULT put_borderRight;
    HRESULT get_borderRight;
    HRESULT put_borderBottom;
    HRESULT get_borderBottom;
    HRESULT put_borderLeft;
    HRESULT get_borderLeft;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderTopColor;
    HRESULT get_borderTopColor;
    HRESULT put_borderRightColor;
    HRESULT get_borderRightColor;
    HRESULT put_borderBottomColor;
    HRESULT get_borderBottomColor;
    HRESULT put_borderLeftColor;
    HRESULT get_borderLeftColor;
    HRESULT put_borderWidth;
    HRESULT get_borderWidth;
    HRESULT put_borderTopWidth;
    HRESULT get_borderTopWidth;
    HRESULT put_borderRightWidth;
    HRESULT get_borderRightWidth;
    HRESULT put_borderBottomWidth;
    HRESULT get_borderBottomWidth;
    HRESULT put_borderLeftWidth;
    HRESULT get_borderLeftWidth;
    HRESULT put_borderStyle;
    HRESULT get_borderStyle;
    HRESULT put_borderTopStyle;
    HRESULT get_borderTopStyle;
    HRESULT put_borderRightStyle;
    HRESULT get_borderRightStyle;
    HRESULT put_borderBottomStyle;
    HRESULT get_borderBottomStyle;
    HRESULT put_borderLeftStyle;
    HRESULT get_borderLeftStyle;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_styleFloat;
    HRESULT get_styleFloat;
    HRESULT put_clear;
    HRESULT get_clear;
    HRESULT put_display;
    HRESULT get_display;
    HRESULT put_visibility;
    HRESULT get_visibility;
    HRESULT put_listStyleType;
    HRESULT get_listStyleType;
    HRESULT put_listStylePosition;
    HRESULT get_listStylePosition;
    HRESULT put_listStyleImage;
    HRESULT get_listStyleImage;
    HRESULT put_listStyle;
    HRESULT get_listStyle;
    HRESULT put_whiteSpace;
    HRESULT get_whiteSpace;
    HRESULT put_top;
    HRESULT get_top;
    HRESULT put_left;
    HRESULT get_left;
    HRESULT put_zIndex;
    HRESULT get_zIndex;
    HRESULT put_overflow;
    HRESULT get_overflow;
    HRESULT put_pageBreakBefore;
    HRESULT get_pageBreakBefore;
    HRESULT put_pageBreakAfter;
    HRESULT get_pageBreakAfter;
    HRESULT put_cssText;
    HRESULT get_cssText;
    HRESULT put_cursor;
    HRESULT get_cursor;
    HRESULT put_clip;
    HRESULT get_clip;
    HRESULT put_filter;
    HRESULT get_filter;
    HRESULT put_tableLayout;
    HRESULT get_tableLayout;
    HRESULT put_borderCollapse;
    HRESULT get_borderCollapse;
    HRESULT put_direction;
    HRESULT get_direction;
    HRESULT put_behavior;
    HRESULT get_behavior;
    HRESULT put_position;
    HRESULT get_position;
    HRESULT put_unicodeBidi;
    HRESULT get_unicodeBidi;
    HRESULT put_bottom;
    HRESULT get_bottom;
    HRESULT put_right;
    HRESULT get_right;
    HRESULT put_imeMode;
    HRESULT get_imeMode;
    HRESULT put_rubyAlign;
    HRESULT get_rubyAlign;
    HRESULT put_rubyPosition;
    HRESULT get_rubyPosition;
    HRESULT put_rubyOverhang;
    HRESULT get_rubyOverhang;
    HRESULT put_layoutGridChar;
    HRESULT get_layoutGridChar;
    HRESULT put_layoutGridLine;
    HRESULT get_layoutGridLine;
    HRESULT put_layoutGridMode;
    HRESULT get_layoutGridMode;
    HRESULT put_layoutGridType;
    HRESULT get_layoutGridType;
    HRESULT put_layoutGrid;
    HRESULT get_layoutGrid;
    HRESULT put_textAutospace;
    HRESULT get_textAutospace;
    HRESULT put_wordBreak;
    HRESULT get_wordBreak;
    HRESULT put_lineBreak;
    HRESULT get_lineBreak;
    HRESULT put_textJustify;
    HRESULT get_textJustify;
    HRESULT put_textJustifyTrim;
    HRESULT get_textJustifyTrim;
    HRESULT put_textKashida;
    HRESULT get_textKashida;
    HRESULT put_overflowX;
    HRESULT get_overflowX;
    HRESULT put_overflowY;
    HRESULT get_overflowY;
    HRESULT put_accelerator;
    HRESULT get_accelerator;
    HRESULT put_layoutFlow;
    HRESULT get_layoutFlow;
    HRESULT put_zoom;
    HRESULT get_zoom;
    HRESULT put_wordWrap;
    HRESULT get_wordWrap;
    HRESULT put_textUnderlinePosition;
    HRESULT get_textUnderlinePosition;
    HRESULT put_scrollbarBaseColor;
    HRESULT get_scrollbarBaseColor;
    HRESULT put_scrollbarFaceColor;
    HRESULT get_scrollbarFaceColor;
    HRESULT put_scrollbar3dLightColor;
    HRESULT get_scrollbar3dLightColor;
    HRESULT put_scrollbarShadowColor;
    HRESULT get_scrollbarShadowColor;
    HRESULT put_scrollbarHighlightColor;
    HRESULT get_scrollbarHighlightColor;
    HRESULT put_scrollbarDarkShadowColor;
    HRESULT get_scrollbarDarkShadowColor;
    HRESULT put_scrollbarArrowColor;
    HRESULT get_scrollbarArrowColor;
    HRESULT put_scrollbarTrackColor;
    HRESULT get_scrollbarTrackColor;
    HRESULT put_writingMode;
    HRESULT get_writingMode;
    HRESULT put_textAlignLast;
    HRESULT get_textAlignLast;
    HRESULT put_textKashidaSpace;
    HRESULT get_textKashidaSpace;
    HRESULT put_textOverflow;
    HRESULT get_textOverflow;
    HRESULT put_minHeight;
    HRESULT get_minHeight;
    HRESULT put_msInterpolationMode;
    HRESULT get_msInterpolationMode;
    HRESULT put_maxHeight;
    HRESULT get_maxHeight;
    HRESULT put_minWidth;
    HRESULT get_minWidth;
    HRESULT put_maxWidth;
    HRESULT get_maxWidth;
    HRESULT put_content;
    HRESULT get_content;
    HRESULT put_captionSide;
    HRESULT get_captionSide;
    HRESULT put_counterIncrement;
    HRESULT get_counterIncrement;
    HRESULT put_counterReset;
    HRESULT get_counterReset;
    HRESULT put_outline;
    HRESULT get_outline;
    HRESULT put_outlineWidth;
    HRESULT get_outlineWidth;
    HRESULT put_outlineStyle;
    HRESULT get_outlineStyle;
    HRESULT put_outlineColor;
    HRESULT get_outlineColor;
    HRESULT put_boxSizing;
    HRESULT get_boxSizing;
    HRESULT put_borderSpacing;
    HRESULT get_borderSpacing;
    HRESULT put_orphans;
    HRESULT get_orphans;
    HRESULT put_widows;
    HRESULT get_widows;
    HRESULT put_pageBreakInside;
    HRESULT get_pageBreakInside;
    HRESULT put_emptyCells;
    HRESULT get_emptyCells;
    HRESULT put_msBlockProgression;
    HRESULT get_msBlockProgression;
    HRESULT put_quotes;
    HRESULT get_quotes;
    HRESULT put_alignmentBaseline;
    HRESULT get_alignmentBaseline;
    HRESULT put_baselineShift;
    HRESULT get_baselineShift;
    HRESULT put_dominantBaseline;
    HRESULT get_dominantBaseline;
    HRESULT put_fontSizeAdjust;
    HRESULT get_fontSizeAdjust;
    HRESULT put_fontStretch;
    HRESULT get_fontStretch;
    HRESULT put_opacity;
    HRESULT get_opacity;
    HRESULT put_clipPath;
    HRESULT get_clipPath;
    HRESULT put_clipRule;
    HRESULT get_clipRule;
    HRESULT put_fill;
    HRESULT get_fill;
    HRESULT put_fillOpacity;
    HRESULT get_fillOpacity;
    HRESULT put_fillRule;
    HRESULT get_fillRule;
    HRESULT put_kerning;
    HRESULT get_kerning;
    HRESULT put_marker;
    HRESULT get_marker;
    HRESULT put_markerEnd;
    HRESULT get_markerEnd;
    HRESULT put_markerMid;
    HRESULT get_markerMid;
    HRESULT put_markerStart;
    HRESULT get_markerStart;
    HRESULT put_mask;
    HRESULT get_mask;
    HRESULT put_pointerEvents;
    HRESULT get_pointerEvents;
    HRESULT put_stopColor;
    HRESULT get_stopColor;
    HRESULT put_stopOpacity;
    HRESULT get_stopOpacity;
    HRESULT put_stroke;
    HRESULT get_stroke;
    HRESULT put_strokeDasharray;
    HRESULT get_strokeDasharray;
    HRESULT put_strokeDashoffset;
    HRESULT get_strokeDashoffset;
    HRESULT put_strokeLinecap;
    HRESULT get_strokeLinecap;
    HRESULT put_strokeLinejoin;
    HRESULT get_strokeLinejoin;
    HRESULT put_strokeMiterlimit;
    HRESULT get_strokeMiterlimit;
    HRESULT put_strokeOpacity;
    HRESULT get_strokeOpacity;
    HRESULT put_strokeWidth;
    HRESULT get_strokeWidth;
    HRESULT put_textAnchor;
    HRESULT get_textAnchor;
    HRESULT put_glyphOrientationHorizontal;
    HRESULT get_glyphOrientationHorizontal;
    HRESULT put_glyphOrientationVertical;
    HRESULT get_glyphOrientationVertical;
    HRESULT put_borderRadius;
    HRESULT get_borderRadius;
    HRESULT put_borderTopLeftRadius;
    HRESULT get_borderTopLeftRadius;
    HRESULT put_borderTopRightRadius;
    HRESULT get_borderTopRightRadius;
    HRESULT put_borderBottomRightRadius;
    HRESULT get_borderBottomRightRadius;
    HRESULT put_borderBottomLeftRadius;
    HRESULT get_borderBottomLeftRadius;
    HRESULT put_clipTop;
    HRESULT get_clipTop;
    HRESULT put_clipRight;
    HRESULT get_clipRight;
    HRESULT get_clipBottom;
    HRESULT put_clipLeft;
    HRESULT get_clipLeft;
    HRESULT put_cssFloat;
    HRESULT get_cssFloat;
    HRESULT put_backgroundClip;
    HRESULT get_backgroundClip;
    HRESULT put_backgroundOrigin;
    HRESULT get_backgroundOrigin;
    HRESULT put_backgroundSize;
    HRESULT get_backgroundSize;
    HRESULT put_boxShadow;
    HRESULT get_boxShadow;
    HRESULT put_msTransform;
    HRESULT get_msTransform;
    HRESULT put_msTransformOrigin;
    HRESULT get_msTransformOrigin;
    VOID IHTMLCSSStyleDeclaration;
    VOID IHTMLCSSStyleDeclaration;
    VOID IHTMLCSSStyleDeclaration;
    struct IHTMLCSSStyleDeclaration *operator=;
    struct IHTMLCSSStyleDeclaration *operator=;
};

typedef struct IHTMLCSSStyleDeclaration2 {
    struct IDispatch IDispatch;
    HRESULT put_msScrollChaining;
    HRESULT get_msScrollChaining;
    HRESULT put_msContentZooming;
    HRESULT get_msContentZooming;
    HRESULT put_msContentZoomSnapType;
    HRESULT get_msContentZoomSnapType;
    HRESULT put_msScrollRails;
    HRESULT get_msScrollRails;
    HRESULT put_msContentZoomChaining;
    HRESULT get_msContentZoomChaining;
    HRESULT put_msScrollSnapType;
    HRESULT get_msScrollSnapType;
    HRESULT put_msContentZoomLimit;
    HRESULT get_msContentZoomLimit;
    HRESULT put_msContentZoomSnap;
    HRESULT get_msContentZoomSnap;
    HRESULT put_msContentZoomSnapPoints;
    HRESULT get_msContentZoomSnapPoints;
    HRESULT put_msContentZoomLimitMin;
    HRESULT get_msContentZoomLimitMin;
    HRESULT put_msContentZoomLimitMax;
    HRESULT get_msContentZoomLimitMax;
    HRESULT put_msScrollSnapX;
    HRESULT get_msScrollSnapX;
    HRESULT put_msScrollSnapY;
    HRESULT get_msScrollSnapY;
    HRESULT put_msScrollSnapPointsX;
    HRESULT get_msScrollSnapPointsX;
    HRESULT put_msScrollSnapPointsY;
    HRESULT get_msScrollSnapPointsY;
    HRESULT put_msGridColumn;
    HRESULT get_msGridColumn;
    HRESULT put_msGridColumnAlign;
    HRESULT get_msGridColumnAlign;
    HRESULT put_msGridColumns;
    HRESULT get_msGridColumns;
    HRESULT put_msGridColumnSpan;
    HRESULT get_msGridColumnSpan;
    HRESULT put_msGridRow;
    HRESULT get_msGridRow;
    HRESULT put_msGridRowAlign;
    HRESULT get_msGridRowAlign;
    HRESULT put_msGridRows;
    HRESULT get_msGridRows;
    HRESULT put_msGridRowSpan;
    HRESULT get_msGridRowSpan;
    HRESULT put_msWrapThrough;
    HRESULT get_msWrapThrough;
    HRESULT put_msWrapMargin;
    HRESULT get_msWrapMargin;
    HRESULT put_msWrapFlow;
    HRESULT get_msWrapFlow;
    HRESULT put_msAnimationName;
    HRESULT get_msAnimationName;
    HRESULT put_msAnimationDuration;
    HRESULT get_msAnimationDuration;
    HRESULT put_msAnimationTimingFunction;
    HRESULT get_msAnimationTimingFunction;
    HRESULT put_msAnimationDelay;
    HRESULT get_msAnimationDelay;
    HRESULT put_msAnimationDirection;
    HRESULT get_msAnimationDirection;
    HRESULT put_msAnimationPlayState;
    HRESULT get_msAnimationPlayState;
    HRESULT put_msAnimationIterationCount;
    HRESULT get_msAnimationIterationCount;
    HRESULT put_msAnimation;
    HRESULT get_msAnimation;
    HRESULT put_msAnimationFillMode;
    HRESULT get_msAnimationFillMode;
    HRESULT put_colorInterpolationFilters;
    HRESULT get_colorInterpolationFilters;
    HRESULT put_columnCount;
    HRESULT get_columnCount;
    HRESULT put_columnWidth;
    HRESULT get_columnWidth;
    HRESULT put_columnGap;
    HRESULT get_columnGap;
    HRESULT put_columnFill;
    HRESULT get_columnFill;
    HRESULT put_columnSpan;
    HRESULT get_columnSpan;
    HRESULT put_columns;
    HRESULT get_columns;
    HRESULT put_columnRule;
    HRESULT get_columnRule;
    HRESULT put_columnRuleColor;
    HRESULT get_columnRuleColor;
    HRESULT put_columnRuleStyle;
    HRESULT get_columnRuleStyle;
    HRESULT put_columnRuleWidth;
    HRESULT get_columnRuleWidth;
    HRESULT put_breakBefore;
    HRESULT get_breakBefore;
    HRESULT put_breakAfter;
    HRESULT get_breakAfter;
    HRESULT put_breakInside;
    HRESULT get_breakInside;
    HRESULT put_floodColor;
    HRESULT get_floodColor;
    HRESULT put_floodOpacity;
    HRESULT get_floodOpacity;
    HRESULT put_lightingColor;
    HRESULT get_lightingColor;
    HRESULT put_msScrollLimitXMin;
    HRESULT get_msScrollLimitXMin;
    HRESULT put_msScrollLimitYMin;
    HRESULT get_msScrollLimitYMin;
    HRESULT put_msScrollLimitXMax;
    HRESULT get_msScrollLimitXMax;
    HRESULT put_msScrollLimitYMax;
    HRESULT get_msScrollLimitYMax;
    HRESULT put_msScrollLimit;
    HRESULT get_msScrollLimit;
    HRESULT put_textShadow;
    HRESULT get_textShadow;
    HRESULT put_msFlowFrom;
    HRESULT get_msFlowFrom;
    HRESULT put_msFlowInto;
    HRESULT get_msFlowInto;
    HRESULT put_msHyphens;
    HRESULT get_msHyphens;
    HRESULT put_msHyphenateLimitZone;
    HRESULT get_msHyphenateLimitZone;
    HRESULT put_msHyphenateLimitChars;
    HRESULT get_msHyphenateLimitChars;
    HRESULT put_msHyphenateLimitLines;
    HRESULT get_msHyphenateLimitLines;
    HRESULT put_msHighContrastAdjust;
    HRESULT get_msHighContrastAdjust;
    HRESULT put_enableBackground;
    HRESULT get_enableBackground;
    HRESULT put_msFontFeatureSettings;
    HRESULT get_msFontFeatureSettings;
    HRESULT put_msUserSelect;
    HRESULT get_msUserSelect;
    HRESULT put_msOverflowStyle;
    HRESULT get_msOverflowStyle;
    HRESULT put_msTransformStyle;
    HRESULT get_msTransformStyle;
    HRESULT put_msBackfaceVisibility;
    HRESULT get_msBackfaceVisibility;
    HRESULT put_msPerspective;
    HRESULT get_msPerspective;
    HRESULT put_msPerspectiveOrigin;
    HRESULT get_msPerspectiveOrigin;
    HRESULT put_msTransitionProperty;
    HRESULT get_msTransitionProperty;
    HRESULT put_msTransitionDuration;
    HRESULT get_msTransitionDuration;
    HRESULT put_msTransitionTimingFunction;
    HRESULT get_msTransitionTimingFunction;
    HRESULT put_msTransitionDelay;
    HRESULT get_msTransitionDelay;
    HRESULT put_msTransition;
    HRESULT get_msTransition;
    HRESULT put_msTouchAction;
    HRESULT get_msTouchAction;
    HRESULT put_msScrollTranslation;
    HRESULT get_msScrollTranslation;
    HRESULT put_msFlex;
    HRESULT get_msFlex;
    HRESULT put_msFlexPositive;
    HRESULT get_msFlexPositive;
    HRESULT put_msFlexNegative;
    HRESULT get_msFlexNegative;
    HRESULT put_msFlexPreferredSize;
    HRESULT get_msFlexPreferredSize;
    HRESULT put_msFlexFlow;
    HRESULT get_msFlexFlow;
    HRESULT put_msFlexDirection;
    HRESULT get_msFlexDirection;
    HRESULT put_msFlexWrap;
    HRESULT get_msFlexWrap;
    HRESULT put_msFlexAlign;
    HRESULT get_msFlexAlign;
    HRESULT put_msFlexItemAlign;
    HRESULT get_msFlexItemAlign;
    HRESULT put_msFlexPack;
    HRESULT get_msFlexPack;
    HRESULT put_msFlexLinePack;
    HRESULT get_msFlexLinePack;
    HRESULT put_msFlexOrder;
    HRESULT get_msFlexOrder;
    HRESULT put_msTouchSelect;
    HRESULT get_msTouchSelect;
    HRESULT put_transform;
    HRESULT get_transform;
    HRESULT put_transformOrigin;
    HRESULT get_transformOrigin;
    HRESULT put_transformStyle;
    HRESULT get_transformStyle;
    HRESULT put_backfaceVisibility;
    HRESULT get_backfaceVisibility;
    HRESULT put_perspective;
    HRESULT get_perspective;
    HRESULT put_perspectiveOrigin;
    HRESULT get_perspectiveOrigin;
    HRESULT put_transitionProperty;
    HRESULT get_transitionProperty;
    HRESULT put_transitionDuration;
    HRESULT get_transitionDuration;
    HRESULT put_transitionTimingFunction;
    HRESULT get_transitionTimingFunction;
    HRESULT put_transitionDelay;
    HRESULT get_transitionDelay;
    HRESULT put_transition;
    HRESULT get_transition;
    HRESULT put_fontFeatureSettings;
    HRESULT get_fontFeatureSettings;
    HRESULT put_animationName;
    HRESULT get_animationName;
    HRESULT put_animationDuration;
    HRESULT get_animationDuration;
    HRESULT put_animationTimingFunction;
    HRESULT get_animationTimingFunction;
    HRESULT put_animationDelay;
    HRESULT get_animationDelay;
    HRESULT put_animationDirection;
    HRESULT get_animationDirection;
    HRESULT put_animationPlayState;
    HRESULT get_animationPlayState;
    HRESULT put_animationIterationCount;
    HRESULT get_animationIterationCount;
    HRESULT put_animation;
    HRESULT get_animation;
    HRESULT put_animationFillMode;
    HRESULT get_animationFillMode;
    VOID IHTMLCSSStyleDeclaration2;
    VOID IHTMLCSSStyleDeclaration2;
    VOID IHTMLCSSStyleDeclaration2;
    struct IHTMLCSSStyleDeclaration2 *operator=;
    struct IHTMLCSSStyleDeclaration2 *operator=;
};

typedef struct IHTMLCSSStyleDeclaration3 {
    struct IDispatch IDispatch;
    HRESULT put_flex;
    HRESULT get_flex;
    HRESULT put_flexDirection;
    HRESULT get_flexDirection;
    HRESULT put_flexWrap;
    HRESULT get_flexWrap;
    HRESULT put_flexFlow;
    HRESULT get_flexFlow;
    HRESULT put_flexGrow;
    HRESULT get_flexGrow;
    HRESULT put_flexShrink;
    HRESULT get_flexShrink;
    HRESULT put_flexBasis;
    HRESULT get_flexBasis;
    HRESULT put_justifyContent;
    HRESULT get_justifyContent;
    HRESULT put_alignItems;
    HRESULT get_alignItems;
    HRESULT put_alignSelf;
    HRESULT get_alignSelf;
    HRESULT put_alignContent;
    HRESULT get_alignContent;
    HRESULT put_borderImage;
    HRESULT get_borderImage;
    HRESULT put_borderImageSource;
    HRESULT get_borderImageSource;
    HRESULT put_borderImageSlice;
    HRESULT get_borderImageSlice;
    HRESULT put_borderImageWidth;
    HRESULT get_borderImageWidth;
    HRESULT put_borderImageOutset;
    HRESULT get_borderImageOutset;
    HRESULT put_borderImageRepeat;
    HRESULT get_borderImageRepeat;
    HRESULT put_msImeAlign;
    HRESULT get_msImeAlign;
    HRESULT put_msTextCombineHorizontal;
    HRESULT get_msTextCombineHorizontal;
    HRESULT put_touchAction;
    HRESULT get_touchAction;
    VOID IHTMLCSSStyleDeclaration3;
    VOID IHTMLCSSStyleDeclaration3;
    VOID IHTMLCSSStyleDeclaration3;
    struct IHTMLCSSStyleDeclaration3 *operator=;
    struct IHTMLCSSStyleDeclaration3 *operator=;
};

typedef struct IHTMLCSSStyleDeclaration4 {
    struct IDispatch IDispatch;
    HRESULT put_webkitAppearance;
    HRESULT get_webkitAppearance;
    HRESULT put_webkitUserSelect;
    HRESULT get_webkitUserSelect;
    HRESULT put_webkitBoxAlign;
    HRESULT get_webkitBoxAlign;
    HRESULT put_webkitBoxOrdinalGroup;
    HRESULT get_webkitBoxOrdinalGroup;
    HRESULT put_webkitBoxPack;
    HRESULT get_webkitBoxPack;
    HRESULT put_webkitBoxFlex;
    HRESULT get_webkitBoxFlex;
    HRESULT put_webkitBoxOrient;
    HRESULT get_webkitBoxOrient;
    HRESULT put_webkitBoxDirection;
    HRESULT get_webkitBoxDirection;
    HRESULT put_webkitTransform;
    HRESULT get_webkitTransform;
    HRESULT put_webkitBackgroundSize;
    HRESULT get_webkitBackgroundSize;
    HRESULT put_webkitBackfaceVisibility;
    HRESULT get_webkitBackfaceVisibility;
    HRESULT put_webkitAnimation;
    HRESULT get_webkitAnimation;
    HRESULT put_webkitTransition;
    HRESULT get_webkitTransition;
    HRESULT put_webkitAnimationName;
    HRESULT get_webkitAnimationName;
    HRESULT put_webkitAnimationDuration;
    HRESULT get_webkitAnimationDuration;
    HRESULT put_webkitAnimationTimingFunction;
    HRESULT get_webkitAnimationTimingFunction;
    HRESULT put_webkitAnimationDelay;
    HRESULT get_webkitAnimationDelay;
    HRESULT put_webkitAnimationIterationCount;
    HRESULT get_webkitAnimationIterationCount;
    HRESULT put_webkitAnimationDirection;
    HRESULT get_webkitAnimationDirection;
    HRESULT put_webkitAnimationPlayState;
    HRESULT get_webkitAnimationPlayState;
    HRESULT put_webkitTransitionProperty;
    HRESULT get_webkitTransitionProperty;
    HRESULT put_webkitTransitionDuration;
    HRESULT get_webkitTransitionDuration;
    HRESULT put_webkitTransitionTimingFunction;
    HRESULT get_webkitTransitionTimingFunction;
    HRESULT put_webkitTransitionDelay;
    HRESULT get_webkitTransitionDelay;
    HRESULT put_webkitBackgroundAttachment;
    HRESULT get_webkitBackgroundAttachment;
    HRESULT put_webkitBackgroundColor;
    HRESULT get_webkitBackgroundColor;
    HRESULT put_webkitBackgroundClip;
    HRESULT get_webkitBackgroundClip;
    HRESULT put_webkitBackgroundImage;
    HRESULT get_webkitBackgroundImage;
    HRESULT put_webkitBackgroundRepeat;
    HRESULT get_webkitBackgroundRepeat;
    HRESULT put_webkitBackgroundOrigin;
    HRESULT get_webkitBackgroundOrigin;
    HRESULT put_webkitBackgroundPosition;
    HRESULT get_webkitBackgroundPosition;
    HRESULT put_webkitBackgroundPositionX;
    HRESULT get_webkitBackgroundPositionX;
    HRESULT put_webkitBackgroundPositionY;
    HRESULT get_webkitBackgroundPositionY;
    HRESULT put_webkitBackground;
    HRESULT get_webkitBackground;
    HRESULT put_webkitTransformOrigin;
    HRESULT get_webkitTransformOrigin;
    HRESULT put_msTextSizeAdjust;
    HRESULT get_msTextSizeAdjust;
    HRESULT put_webkitTextSizeAdjust;
    HRESULT get_webkitTextSizeAdjust;
    HRESULT put_webkitBorderImage;
    HRESULT get_webkitBorderImage;
    HRESULT put_webkitBorderImageSource;
    HRESULT get_webkitBorderImageSource;
    HRESULT put_webkitBorderImageSlice;
    HRESULT get_webkitBorderImageSlice;
    HRESULT put_webkitBorderImageWidth;
    HRESULT get_webkitBorderImageWidth;
    HRESULT put_webkitBorderImageOutset;
    HRESULT get_webkitBorderImageOutset;
    HRESULT put_webkitBorderImageRepeat;
    HRESULT get_webkitBorderImageRepeat;
    HRESULT put_webkitBoxSizing;
    HRESULT get_webkitBoxSizing;
    HRESULT put_webkitAnimationFillMode;
    HRESULT get_webkitAnimationFillMode;
    VOID IHTMLCSSStyleDeclaration4;
    VOID IHTMLCSSStyleDeclaration4;
    VOID IHTMLCSSStyleDeclaration4;
    struct IHTMLCSSStyleDeclaration4 *operator=;
    struct IHTMLCSSStyleDeclaration4 *operator=;
};

typedef struct IHTMLCanvasElement {
    struct IDispatch IDispatch;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT getContext;
    HRESULT toDataURL;
    VOID IHTMLCanvasElement;
    VOID IHTMLCanvasElement;
    VOID IHTMLCanvasElement;
    struct IHTMLCanvasElement *operator=;
    struct IHTMLCanvasElement *operator=;
};

typedef struct IHTMLCaret {
    struct IUnknown IUnknown;
    HRESULT MoveCaretToPointer;
    HRESULT MoveCaretToPointerEx;
    HRESULT MoveMarkupPointerToCaret;
    HRESULT MoveDisplayPointerToCaret;
    HRESULT IsVisible;
    HRESULT Show;
    HRESULT Hide;
    HRESULT InsertText;
    HRESULT ScrollIntoView;
    HRESULT GetLocation;
    HRESULT GetCaretDirection;
    HRESULT SetCaretDirection;
    VOID IHTMLCaret;
    VOID IHTMLCaret;
    VOID IHTMLCaret;
    struct IHTMLCaret *operator=;
    struct IHTMLCaret *operator=;
};

typedef struct IHTMLChangeLog {
    struct IUnknown IUnknown;
    HRESULT GetNextChange;
    VOID IHTMLChangeLog;
    VOID IHTMLChangeLog;
    VOID IHTMLChangeLog;
    struct IHTMLChangeLog *operator=;
    struct IHTMLChangeLog *operator=;
};

typedef struct IHTMLChangePlayback {
    struct IUnknown IUnknown;
    HRESULT ExecChange;
    VOID IHTMLChangePlayback;
    VOID IHTMLChangePlayback;
    VOID IHTMLChangePlayback;
    struct IHTMLChangePlayback *operator=;
    struct IHTMLChangePlayback *operator=;
};

typedef struct IHTMLChangeSink {
    struct IUnknown IUnknown;
    HRESULT Notify;
    VOID IHTMLChangeSink;
    VOID IHTMLChangeSink;
    VOID IHTMLChangeSink;
    struct IHTMLChangeSink *operator=;
    struct IHTMLChangeSink *operator=;
};

typedef struct IHTMLCommentElement {
    struct IDispatch IDispatch;
    HRESULT put_text;
    HRESULT get_text;
    HRESULT put_atomic;
    HRESULT get_atomic;
    VOID IHTMLCommentElement;
    VOID IHTMLCommentElement;
    VOID IHTMLCommentElement;
    struct IHTMLCommentElement *operator=;
    struct IHTMLCommentElement *operator=;
};

typedef struct IHTMLCommentElement2 {
    struct IDispatch IDispatch;
    HRESULT put_data;
    HRESULT get_data;
    HRESULT get_length;
    HRESULT substringData;
    HRESULT appendData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    VOID IHTMLCommentElement2;
    VOID IHTMLCommentElement2;
    VOID IHTMLCommentElement2;
    struct IHTMLCommentElement2 *operator=;
    struct IHTMLCommentElement2 *operator=;
};

typedef struct IHTMLCommentElement3 {
    struct IDispatch IDispatch;
    HRESULT substringData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    VOID IHTMLCommentElement3;
    VOID IHTMLCommentElement3;
    VOID IHTMLCommentElement3;
    struct IHTMLCommentElement3 *operator=;
    struct IHTMLCommentElement3 *operator=;
};

typedef struct IHTMLComputedStyle {
    struct IUnknown IUnknown;
    HRESULT get_bold;
    HRESULT get_italic;
    HRESULT get_underline;
    HRESULT get_overline;
    HRESULT get_strikeOut;
    HRESULT get_subScript;
    HRESULT get_superScript;
    HRESULT get_explicitFace;
    HRESULT get_fontWeight;
    HRESULT get_fontSize;
    HRESULT get_fontName;
    HRESULT get_hasBgColor;
    HRESULT get_textColor;
    HRESULT get_backgroundColor;
    HRESULT get_preFormatted;
    HRESULT get_direction;
    HRESULT get_blockDirection;
    HRESULT get_OL;
    HRESULT IsEqual;
    VOID IHTMLComputedStyle;
    VOID IHTMLComputedStyle;
    VOID IHTMLComputedStyle;
    struct IHTMLComputedStyle *operator=;
    struct IHTMLComputedStyle *operator=;
};

typedef struct IHTMLControlElement {
    struct IDispatch IDispatch;
    HRESULT put_tabIndex;
    HRESULT get_tabIndex;
    HRESULT focus;
    HRESULT put_accessKey;
    HRESULT get_accessKey;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_onresize;
    HRESULT get_onresize;
    HRESULT blur;
    HRESULT addFilter;
    HRESULT removeFilter;
    HRESULT get_clientHeight;
    HRESULT get_clientWidth;
    HRESULT get_clientTop;
    HRESULT get_clientLeft;
    VOID IHTMLControlElement;
    VOID IHTMLControlElement;
    VOID IHTMLControlElement;
    struct IHTMLControlElement *operator=;
    struct IHTMLControlElement *operator=;
};

typedef struct IHTMLControlRange {
    struct IDispatch IDispatch;
    HRESULT select;
    HRESULT add;
    HRESULT remove;
    HRESULT item;
    HRESULT scrollIntoView;
    HRESULT queryCommandSupported;
    HRESULT queryCommandEnabled;
    HRESULT queryCommandState;
    HRESULT queryCommandIndeterm;
    HRESULT queryCommandText;
    HRESULT queryCommandValue;
    HRESULT execCommand;
    HRESULT execCommandShowHelp;
    HRESULT commonParentElement;
    HRESULT get_length;
    VOID IHTMLControlRange;
    VOID IHTMLControlRange;
    VOID IHTMLControlRange;
    struct IHTMLControlRange *operator=;
    struct IHTMLControlRange *operator=;
};

typedef struct IHTMLControlRange2 {
    struct IDispatch IDispatch;
    HRESULT addElement;
    VOID IHTMLControlRange2;
    VOID IHTMLControlRange2;
    VOID IHTMLControlRange2;
    struct IHTMLControlRange2 *operator=;
    struct IHTMLControlRange2 *operator=;
};

typedef struct IHTMLCurrentStyle {
    struct IDispatch IDispatch;
    HRESULT get_position;
    HRESULT get_styleFloat;
    HRESULT get_color;
    HRESULT get_backgroundColor;
    HRESULT get_fontFamily;
    HRESULT get_fontStyle;
    HRESULT get_fontVariant;
    HRESULT get_fontWeight;
    HRESULT get_fontSize;
    HRESULT get_backgroundImage;
    HRESULT get_backgroundPositionX;
    HRESULT get_backgroundPositionY;
    HRESULT get_backgroundRepeat;
    HRESULT get_borderLeftColor;
    HRESULT get_borderTopColor;
    HRESULT get_borderRightColor;
    HRESULT get_borderBottomColor;
    HRESULT get_borderTopStyle;
    HRESULT get_borderRightStyle;
    HRESULT get_borderBottomStyle;
    HRESULT get_borderLeftStyle;
    HRESULT get_borderTopWidth;
    HRESULT get_borderRightWidth;
    HRESULT get_borderBottomWidth;
    HRESULT get_borderLeftWidth;
    HRESULT get_left;
    HRESULT get_top;
    HRESULT get_width;
    HRESULT get_height;
    HRESULT get_paddingLeft;
    HRESULT get_paddingTop;
    HRESULT get_paddingRight;
    HRESULT get_paddingBottom;
    HRESULT get_textAlign;
    HRESULT get_textDecoration;
    HRESULT get_display;
    HRESULT get_visibility;
    HRESULT get_zIndex;
    HRESULT get_letterSpacing;
    HRESULT get_lineHeight;
    HRESULT get_textIndent;
    HRESULT get_verticalAlign;
    HRESULT get_backgroundAttachment;
    HRESULT get_marginTop;
    HRESULT get_marginRight;
    HRESULT get_marginBottom;
    HRESULT get_marginLeft;
    HRESULT get_clear;
    HRESULT get_listStyleType;
    HRESULT get_listStylePosition;
    HRESULT get_listStyleImage;
    HRESULT get_clipTop;
    HRESULT get_clipRight;
    HRESULT get_clipBottom;
    HRESULT get_clipLeft;
    HRESULT get_overflow;
    HRESULT get_pageBreakBefore;
    HRESULT get_pageBreakAfter;
    HRESULT get_cursor;
    HRESULT get_tableLayout;
    HRESULT get_borderCollapse;
    HRESULT get_direction;
    HRESULT get_behavior;
    HRESULT getAttribute;
    HRESULT get_unicodeBidi;
    HRESULT get_right;
    HRESULT get_bottom;
    HRESULT get_imeMode;
    HRESULT get_rubyAlign;
    HRESULT get_rubyPosition;
    HRESULT get_rubyOverhang;
    HRESULT get_textAutospace;
    HRESULT get_lineBreak;
    HRESULT get_wordBreak;
    HRESULT get_textJustify;
    HRESULT get_textJustifyTrim;
    HRESULT get_textKashida;
    HRESULT get_blockDirection;
    HRESULT get_layoutGridChar;
    HRESULT get_layoutGridLine;
    HRESULT get_layoutGridMode;
    HRESULT get_layoutGridType;
    HRESULT get_borderStyle;
    HRESULT get_borderColor;
    HRESULT get_borderWidth;
    HRESULT get_padding;
    HRESULT get_margin;
    HRESULT get_accelerator;
    HRESULT get_overflowX;
    HRESULT get_overflowY;
    HRESULT get_textTransform;
    VOID IHTMLCurrentStyle;
    VOID IHTMLCurrentStyle;
    VOID IHTMLCurrentStyle;
    struct IHTMLCurrentStyle *operator=;
    struct IHTMLCurrentStyle *operator=;
};

typedef struct IHTMLCurrentStyle2 {
    struct IDispatch IDispatch;
    HRESULT get_layoutFlow;
    HRESULT get_wordWrap;
    HRESULT get_textUnderlinePosition;
    HRESULT get_hasLayout;
    HRESULT get_scrollbarBaseColor;
    HRESULT get_scrollbarFaceColor;
    HRESULT get_scrollbar3dLightColor;
    HRESULT get_scrollbarShadowColor;
    HRESULT get_scrollbarHighlightColor;
    HRESULT get_scrollbarDarkShadowColor;
    HRESULT get_scrollbarArrowColor;
    HRESULT get_scrollbarTrackColor;
    HRESULT get_writingMode;
    HRESULT get_zoom;
    HRESULT get_filter;
    HRESULT get_textAlignLast;
    HRESULT get_textKashidaSpace;
    HRESULT get_isBlock;
    VOID IHTMLCurrentStyle2;
    VOID IHTMLCurrentStyle2;
    VOID IHTMLCurrentStyle2;
    struct IHTMLCurrentStyle2 *operator=;
    struct IHTMLCurrentStyle2 *operator=;
};

typedef struct IHTMLCurrentStyle3 {
    struct IDispatch IDispatch;
    HRESULT get_textOverflow;
    HRESULT get_minHeight;
    HRESULT get_wordSpacing;
    HRESULT get_whiteSpace;
    VOID IHTMLCurrentStyle3;
    VOID IHTMLCurrentStyle3;
    VOID IHTMLCurrentStyle3;
    struct IHTMLCurrentStyle3 *operator=;
    struct IHTMLCurrentStyle3 *operator=;
};

typedef struct IHTMLCurrentStyle4 {
    struct IDispatch IDispatch;
    HRESULT get_msInterpolationMode;
    HRESULT get_maxHeight;
    HRESULT get_minWidth;
    HRESULT get_maxWidth;
    VOID IHTMLCurrentStyle4;
    VOID IHTMLCurrentStyle4;
    VOID IHTMLCurrentStyle4;
    struct IHTMLCurrentStyle4 *operator=;
    struct IHTMLCurrentStyle4 *operator=;
};

typedef struct IHTMLCurrentStyle5 {
    struct IDispatch IDispatch;
    HRESULT get_captionSide;
    HRESULT get_outline;
    HRESULT get_outlineWidth;
    HRESULT get_outlineStyle;
    HRESULT get_outlineColor;
    HRESULT get_boxSizing;
    HRESULT get_borderSpacing;
    HRESULT get_orphans;
    HRESULT get_widows;
    HRESULT get_pageBreakInside;
    HRESULT get_emptyCells;
    HRESULT get_msBlockProgression;
    HRESULT get_quotes;
    VOID IHTMLCurrentStyle5;
    VOID IHTMLCurrentStyle5;
    VOID IHTMLCurrentStyle5;
    struct IHTMLCurrentStyle5 *operator=;
    struct IHTMLCurrentStyle5 *operator=;
};

typedef struct IHTMLDDElement {
    struct IDispatch IDispatch;
    HRESULT put_noWrap;
    HRESULT get_noWrap;
    VOID IHTMLDDElement;
    VOID IHTMLDDElement;
    VOID IHTMLDDElement;
    struct IHTMLDDElement *operator=;
    struct IHTMLDDElement *operator=;
};

typedef struct IHTMLDListElement {
    struct IDispatch IDispatch;
    HRESULT put_compact;
    HRESULT get_compact;
    VOID IHTMLDListElement;
    VOID IHTMLDListElement;
    VOID IHTMLDListElement;
    struct IHTMLDListElement *operator=;
    struct IHTMLDListElement *operator=;
};

typedef struct IHTMLDOMAttribute {
    struct IDispatch IDispatch;
    HRESULT get_nodeName;
    HRESULT put_nodeValue;
    HRESULT get_nodeValue;
    HRESULT get_specified;
    VOID IHTMLDOMAttribute;
    VOID IHTMLDOMAttribute;
    VOID IHTMLDOMAttribute;
    struct IHTMLDOMAttribute *operator=;
    struct IHTMLDOMAttribute *operator=;
};

typedef struct IHTMLDOMAttribute2 {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT get_expando;
    HRESULT get_nodeType;
    HRESULT get_parentNode;
    HRESULT get_childNodes;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_previousSibling;
    HRESULT get_nextSibling;
    HRESULT get_attributes;
    HRESULT get_ownerDocument;
    HRESULT insertBefore;
    HRESULT replaceChild;
    HRESULT removeChild;
    HRESULT appendChild;
    HRESULT hasChildNodes;
    HRESULT cloneNode;
    VOID IHTMLDOMAttribute2;
    VOID IHTMLDOMAttribute2;
    VOID IHTMLDOMAttribute2;
    struct IHTMLDOMAttribute2 *operator=;
    struct IHTMLDOMAttribute2 *operator=;
};

typedef struct IHTMLDOMAttribute3 {
    struct IDispatch IDispatch;
    HRESULT put_nodeValue;
    HRESULT get_nodeValue;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT get_specified;
    HRESULT get_ownerElement;
    VOID IHTMLDOMAttribute3;
    VOID IHTMLDOMAttribute3;
    VOID IHTMLDOMAttribute3;
    struct IHTMLDOMAttribute3 *operator=;
    struct IHTMLDOMAttribute3 *operator=;
};

typedef struct IHTMLDOMAttribute4 {
    struct IDispatch IDispatch;
    HRESULT put_nodeValue;
    HRESULT get_nodeValue;
    HRESULT get_nodeName;
    HRESULT get_name;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_childNodes;
    HRESULT hasAttributes;
    HRESULT hasChildNodes;
    HRESULT normalize;
    HRESULT get_specified;
    VOID IHTMLDOMAttribute4;
    VOID IHTMLDOMAttribute4;
    VOID IHTMLDOMAttribute4;
    struct IHTMLDOMAttribute4 *operator=;
    struct IHTMLDOMAttribute4 *operator=;
};

typedef struct IHTMLDOMChildrenCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLDOMChildrenCollection;
    VOID IHTMLDOMChildrenCollection;
    VOID IHTMLDOMChildrenCollection;
    struct IHTMLDOMChildrenCollection *operator=;
    struct IHTMLDOMChildrenCollection *operator=;
};

typedef struct IHTMLDOMChildrenCollection2 {
    struct IDispatch IDispatch;
    HRESULT item;
    VOID IHTMLDOMChildrenCollection2;
    VOID IHTMLDOMChildrenCollection2;
    VOID IHTMLDOMChildrenCollection2;
    struct IHTMLDOMChildrenCollection2 *operator=;
    struct IHTMLDOMChildrenCollection2 *operator=;
};

typedef struct IHTMLDOMConstructor {
    struct IDispatch IDispatch;
    HRESULT get_constructor;
    HRESULT LookupGetter;
    HRESULT LookupSetter;
    HRESULT DefineGetter;
    HRESULT DefineSetter;
    VOID IHTMLDOMConstructor;
    VOID IHTMLDOMConstructor;
    VOID IHTMLDOMConstructor;
    struct IHTMLDOMConstructor *operator=;
    struct IHTMLDOMConstructor *operator=;
};

typedef struct IHTMLDOMConstructorCollection {
    struct IDispatch IDispatch;
    HRESULT get_Attr;
    HRESULT get_BehaviorUrnsCollection;
    HRESULT get_BookmarkCollection;
    HRESULT get_CompatibleInfo;
    HRESULT get_CompatibleInfoCollection;
    HRESULT get_ControlRangeCollection;
    HRESULT get_CSSCurrentStyleDeclaration;
    HRESULT get_CSSRuleList;
    HRESULT get_CSSRuleStyleDeclaration;
    HRESULT get_CSSStyleDeclaration;
    HRESULT get_CSSStyleRule;
    HRESULT get_CSSStyleSheet;
    HRESULT get_DataTransfer;
    HRESULT get_DOMImplementation;
    HRESULT get_Element;
    HRESULT get_Event;
    HRESULT get_History;
    HRESULT get_HTCElementBehaviorDefaults;
    HRESULT get_HTMLAnchorElement;
    HRESULT get_HTMLAreaElement;
    HRESULT get_HTMLAreasCollection;
    HRESULT get_HTMLBaseElement;
    HRESULT get_HTMLBaseFontElement;
    HRESULT get_HTMLBGSoundElement;
    HRESULT get_HTMLBlockElement;
    HRESULT get_HTMLBodyElement;
    HRESULT get_HTMLBRElement;
    HRESULT get_HTMLButtonElement;
    HRESULT get_HTMLCollection;
    HRESULT get_HTMLCommentElement;
    HRESULT get_HTMLDDElement;
    HRESULT get_HTMLDivElement;
    HRESULT get_HTMLDocument;
    HRESULT get_HTMLDListElement;
    HRESULT get_HTMLDTElement;
    HRESULT get_HTMLEmbedElement;
    HRESULT get_HTMLFieldSetElement;
    HRESULT get_HTMLFontElement;
    HRESULT get_HTMLFormElement;
    HRESULT get_HTMLFrameElement;
    HRESULT get_HTMLFrameSetElement;
    HRESULT get_HTMLGenericElement;
    HRESULT get_HTMLHeadElement;
    HRESULT get_HTMLHeadingElement;
    HRESULT get_HTMLHRElement;
    HRESULT get_HTMLHtmlElement;
    HRESULT get_HTMLIFrameElement;
    HRESULT get_HTMLImageElement;
    HRESULT get_HTMLInputElement;
    HRESULT get_HTMLIsIndexElement;
    HRESULT get_HTMLLabelElement;
    HRESULT get_HTMLLegendElement;
    HRESULT get_HTMLLIElement;
    HRESULT get_HTMLLinkElement;
    HRESULT get_HTMLMapElement;
    HRESULT get_HTMLMarqueeElement;
    HRESULT get_HTMLMetaElement;
    HRESULT get_HTMLModelessDialog;
    HRESULT get_HTMLNamespaceInfo;
    HRESULT get_HTMLNamespaceInfoCollection;
    HRESULT get_HTMLNextIdElement;
    HRESULT get_HTMLNoShowElement;
    HRESULT get_HTMLObjectElement;
    HRESULT get_HTMLOListElement;
    HRESULT get_HTMLOptionElement;
    HRESULT get_HTMLParagraphElement;
    HRESULT get_HTMLParamElement;
    HRESULT get_HTMLPhraseElement;
    HRESULT get_HTMLPluginsCollection;
    HRESULT get_HTMLPopup;
    HRESULT get_HTMLScriptElement;
    HRESULT get_HTMLSelectElement;
    HRESULT get_HTMLSpanElement;
    HRESULT get_HTMLStyleElement;
    HRESULT get_HTMLTableCaptionElement;
    HRESULT get_HTMLTableCellElement;
    HRESULT get_HTMLTableColElement;
    HRESULT get_HTMLTableElement;
    HRESULT get_HTMLTableRowElement;
    HRESULT get_HTMLTableSectionElement;
    HRESULT get_HTMLTextAreaElement;
    HRESULT get_HTMLTextElement;
    HRESULT get_HTMLTitleElement;
    HRESULT get_HTMLUListElement;
    HRESULT get_HTMLUnknownElement;
    HRESULT get_Image;
    HRESULT get_Location;
    HRESULT get_NamedNodeMap;
    HRESULT get_Navigator;
    HRESULT get_NodeList;
    HRESULT get_Option;
    HRESULT get_Screen;
    HRESULT get_Selection;
    HRESULT get_StaticNodeList;
    HRESULT get_Storage;
    HRESULT get_StyleSheetList;
    HRESULT get_StyleSheetPage;
    HRESULT get_StyleSheetPageList;
    HRESULT get_Text;
    HRESULT get_TextRange;
    HRESULT get_TextRangeCollection;
    HRESULT get_TextRectangle;
    HRESULT get_TextRectangleList;
    HRESULT get_Window;
    HRESULT get_XDomainRequest;
    HRESULT get_XMLHttpRequest;
    VOID IHTMLDOMConstructorCollection;
    VOID IHTMLDOMConstructorCollection;
    VOID IHTMLDOMConstructorCollection;
    struct IHTMLDOMConstructorCollection *operator=;
    struct IHTMLDOMConstructorCollection *operator=;
};

typedef struct IHTMLDOMImplementation {
    struct IDispatch IDispatch;
    HRESULT hasFeature;
    VOID IHTMLDOMImplementation;
    VOID IHTMLDOMImplementation;
    VOID IHTMLDOMImplementation;
    struct IHTMLDOMImplementation *operator=;
    struct IHTMLDOMImplementation *operator=;
};

typedef struct IHTMLDOMImplementation2 {
    struct IDispatch IDispatch;
    HRESULT createDocumentType;
    HRESULT createDocument;
    HRESULT createHTMLDocument;
    HRESULT hasFeature;
    VOID IHTMLDOMImplementation2;
    VOID IHTMLDOMImplementation2;
    VOID IHTMLDOMImplementation2;
    struct IHTMLDOMImplementation2 *operator=;
    struct IHTMLDOMImplementation2 *operator=;
};

typedef struct IHTMLDOMNode {
    struct IDispatch IDispatch;
    HRESULT get_nodeType;
    HRESULT get_parentNode;
    HRESULT hasChildNodes;
    HRESULT get_childNodes;
    HRESULT get_attributes;
    HRESULT insertBefore;
    HRESULT removeChild;
    HRESULT replaceChild;
    HRESULT cloneNode;
    HRESULT removeNode;
    HRESULT swapNode;
    HRESULT replaceNode;
    HRESULT appendChild;
    HRESULT get_nodeName;
    HRESULT put_nodeValue;
    HRESULT get_nodeValue;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_previousSibling;
    HRESULT get_nextSibling;
    VOID IHTMLDOMNode;
    VOID IHTMLDOMNode;
    VOID IHTMLDOMNode;
    struct IHTMLDOMNode *operator=;
    struct IHTMLDOMNode *operator=;
};

typedef struct IHTMLDOMNode2 {
    struct IDispatch IDispatch;
    HRESULT get_ownerDocument;
    VOID IHTMLDOMNode2;
    VOID IHTMLDOMNode2;
    VOID IHTMLDOMNode2;
    struct IHTMLDOMNode2 *operator=;
    struct IHTMLDOMNode2 *operator=;
};

typedef struct IHTMLDOMNode3 {
    struct IDispatch IDispatch;
    HRESULT put_prefix;
    HRESULT get_prefix;
    HRESULT get_localName;
    HRESULT get_namespaceURI;
    HRESULT put_textContent;
    HRESULT get_textContent;
    HRESULT isEqualNode;
    HRESULT lookupNamespaceURI;
    HRESULT lookupPrefix;
    HRESULT isDefaultNamespace;
    HRESULT appendChild;
    HRESULT insertBefore;
    HRESULT removeChild;
    HRESULT replaceChild;
    HRESULT isSameNode;
    HRESULT compareDocumentPosition;
    HRESULT isSupported;
    VOID IHTMLDOMNode3;
    VOID IHTMLDOMNode3;
    VOID IHTMLDOMNode3;
    struct IHTMLDOMNode3 *operator=;
    struct IHTMLDOMNode3 *operator=;
};

typedef struct IHTMLDOMRange {
    struct IDispatch IDispatch;
    HRESULT get_startContainer;
    HRESULT get_startOffset;
    HRESULT get_endContainer;
    HRESULT get_endOffset;
    HRESULT get_collapsed;
    HRESULT get_commonAncestorContainer;
    HRESULT setStart;
    HRESULT setEnd;
    HRESULT setStartBefore;
    HRESULT setStartAfter;
    HRESULT setEndBefore;
    HRESULT setEndAfter;
    HRESULT collapse;
    HRESULT selectNode;
    HRESULT selectNodeContents;
    HRESULT compareBoundaryPoints;
    HRESULT deleteContents;
    HRESULT extractContents;
    HRESULT cloneContents;
    HRESULT insertNode;
    HRESULT surroundContents;
    HRESULT cloneRange;
    HRESULT toString;
    HRESULT detach;
    HRESULT getClientRects;
    HRESULT getBoundingClientRect;
    VOID IHTMLDOMRange;
    VOID IHTMLDOMRange;
    VOID IHTMLDOMRange;
    struct IHTMLDOMRange *operator=;
    struct IHTMLDOMRange *operator=;
};

typedef struct IHTMLDOMTextNode {
    struct IDispatch IDispatch;
    HRESULT put_data;
    HRESULT get_data;
    HRESULT toString;
    HRESULT get_length;
    HRESULT splitText;
    VOID IHTMLDOMTextNode;
    VOID IHTMLDOMTextNode;
    VOID IHTMLDOMTextNode;
    struct IHTMLDOMTextNode *operator=;
    struct IHTMLDOMTextNode *operator=;
};

typedef struct IHTMLDOMTextNode2 {
    struct IDispatch IDispatch;
    HRESULT substringData;
    HRESULT appendData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    VOID IHTMLDOMTextNode2;
    VOID IHTMLDOMTextNode2;
    VOID IHTMLDOMTextNode2;
    struct IHTMLDOMTextNode2 *operator=;
    struct IHTMLDOMTextNode2 *operator=;
};

typedef struct IHTMLDOMTextNode3 {
    struct IDispatch IDispatch;
    HRESULT substringData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    HRESULT splitText;
    HRESULT get_wholeText;
    HRESULT replaceWholeText;
    HRESULT hasAttributes;
    HRESULT normalize;
    VOID IHTMLDOMTextNode3;
    VOID IHTMLDOMTextNode3;
    VOID IHTMLDOMTextNode3;
    struct IHTMLDOMTextNode3 *operator=;
    struct IHTMLDOMTextNode3 *operator=;
};

typedef struct IHTMLDTElement {
    struct IDispatch IDispatch;
    HRESULT put_noWrap;
    HRESULT get_noWrap;
    VOID IHTMLDTElement;
    VOID IHTMLDTElement;
    VOID IHTMLDTElement;
    struct IHTMLDTElement *operator=;
    struct IHTMLDTElement *operator=;
};

typedef struct IHTMLDataTransfer {
    struct IDispatch IDispatch;
    HRESULT setData;
    HRESULT getData;
    HRESULT clearData;
    HRESULT put_dropEffect;
    HRESULT get_dropEffect;
    HRESULT put_effectAllowed;
    HRESULT get_effectAllowed;
    VOID IHTMLDataTransfer;
    VOID IHTMLDataTransfer;
    VOID IHTMLDataTransfer;
    struct IHTMLDataTransfer *operator=;
    struct IHTMLDataTransfer *operator=;
};

typedef struct IHTMLDatabinding {
    struct IDispatch IDispatch;
    HRESULT put_dataFld;
    HRESULT get_dataFld;
    HRESULT put_dataSrc;
    HRESULT get_dataSrc;
    HRESULT put_dataFormatAs;
    HRESULT get_dataFormatAs;
    VOID IHTMLDatabinding;
    VOID IHTMLDatabinding;
    VOID IHTMLDatabinding;
    struct IHTMLDatabinding *operator=;
    struct IHTMLDatabinding *operator=;
};

typedef struct IHTMLDialog {
    struct IDispatch IDispatch;
    HRESULT put_dialogTop;
    HRESULT get_dialogTop;
    HRESULT put_dialogLeft;
    HRESULT get_dialogLeft;
    HRESULT put_dialogWidth;
    HRESULT get_dialogWidth;
    HRESULT put_dialogHeight;
    HRESULT get_dialogHeight;
    HRESULT get_dialogArguments;
    HRESULT get_menuArguments;
    HRESULT put_returnValue;
    HRESULT get_returnValue;
    HRESULT close;
    HRESULT toString;
    VOID IHTMLDialog;
    VOID IHTMLDialog;
    VOID IHTMLDialog;
    struct IHTMLDialog *operator=;
    struct IHTMLDialog *operator=;
};

typedef struct IHTMLDialog2 {
    struct IDispatch IDispatch;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_resizable;
    HRESULT get_resizable;
    VOID IHTMLDialog2;
    VOID IHTMLDialog2;
    VOID IHTMLDialog2;
    struct IHTMLDialog2 *operator=;
    struct IHTMLDialog2 *operator=;
};

typedef struct IHTMLDialog3 {
    struct IDispatch IDispatch;
    HRESULT put_unadorned;
    HRESULT get_unadorned;
    HRESULT put_dialogHide;
    HRESULT get_dialogHide;
    VOID IHTMLDialog3;
    VOID IHTMLDialog3;
    VOID IHTMLDialog3;
    struct IHTMLDialog3 *operator=;
    struct IHTMLDialog3 *operator=;
};

typedef struct IHTMLDivElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_noWrap;
    HRESULT get_noWrap;
    VOID IHTMLDivElement;
    VOID IHTMLDivElement;
    VOID IHTMLDivElement;
    struct IHTMLDivElement *operator=;
    struct IHTMLDivElement *operator=;
};

typedef struct IHTMLDivPosition {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLDivPosition;
    VOID IHTMLDivPosition;
    VOID IHTMLDivPosition;
    struct IHTMLDivPosition *operator=;
    struct IHTMLDivPosition *operator=;
};

typedef struct IHTMLDocument {
    struct IDispatch IDispatch;
    HRESULT get_Script;
    VOID IHTMLDocument;
    VOID IHTMLDocument;
    VOID IHTMLDocument;
    struct IHTMLDocument *operator=;
    struct IHTMLDocument *operator=;
};

typedef struct IHTMLDocument2 {
    struct IHTMLDocument IHTMLDocument;
    HRESULT get_all;
    HRESULT get_body;
    HRESULT get_activeElement;
    HRESULT get_images;
    HRESULT get_applets;
    HRESULT get_links;
    HRESULT get_forms;
    HRESULT get_anchors;
    HRESULT put_title;
    HRESULT get_title;
    HRESULT get_scripts;
    HRESULT put_designMode;
    HRESULT get_designMode;
    HRESULT get_selection;
    HRESULT get_readyState;
    HRESULT get_frames;
    HRESULT get_embeds;
    HRESULT get_plugins;
    HRESULT put_alinkColor;
    HRESULT get_alinkColor;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_fgColor;
    HRESULT get_fgColor;
    HRESULT put_linkColor;
    HRESULT get_linkColor;
    HRESULT put_vlinkColor;
    HRESULT get_vlinkColor;
    HRESULT get_referrer;
    HRESULT get_location;
    HRESULT get_lastModified;
    HRESULT put_URL;
    HRESULT get_URL;
    HRESULT put_domain;
    HRESULT get_domain;
    HRESULT put_cookie;
    HRESULT get_cookie;
    HRESULT put_expando;
    HRESULT get_expando;
    HRESULT put_charset;
    HRESULT get_charset;
    HRESULT put_defaultCharset;
    HRESULT get_defaultCharset;
    HRESULT get_mimeType;
    HRESULT get_fileSize;
    HRESULT get_fileCreatedDate;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_security;
    HRESULT get_protocol;
    HRESULT get_nameProp;
    HRESULT write;
    HRESULT writeln;
    HRESULT open;
    HRESULT close;
    HRESULT clear;
    HRESULT queryCommandSupported;
    HRESULT queryCommandEnabled;
    HRESULT queryCommandState;
    HRESULT queryCommandIndeterm;
    HRESULT queryCommandText;
    HRESULT queryCommandValue;
    HRESULT execCommand;
    HRESULT execCommandShowHelp;
    HRESULT createElement;
    HRESULT put_onhelp;
    HRESULT get_onhelp;
    HRESULT put_onclick;
    HRESULT get_onclick;
    HRESULT put_ondblclick;
    HRESULT get_ondblclick;
    HRESULT put_onkeyup;
    HRESULT get_onkeyup;
    HRESULT put_onkeydown;
    HRESULT get_onkeydown;
    HRESULT put_onkeypress;
    HRESULT get_onkeypress;
    HRESULT put_onmouseup;
    HRESULT get_onmouseup;
    HRESULT put_onmousedown;
    HRESULT get_onmousedown;
    HRESULT put_onmousemove;
    HRESULT get_onmousemove;
    HRESULT put_onmouseout;
    HRESULT get_onmouseout;
    HRESULT put_onmouseover;
    HRESULT get_onmouseover;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onafterupdate;
    HRESULT get_onafterupdate;
    HRESULT put_onrowexit;
    HRESULT get_onrowexit;
    HRESULT put_onrowenter;
    HRESULT get_onrowenter;
    HRESULT put_ondragstart;
    HRESULT get_ondragstart;
    HRESULT put_onselectstart;
    HRESULT get_onselectstart;
    HRESULT elementFromPoint;
    HRESULT get_parentWindow;
    HRESULT get_styleSheets;
    HRESULT put_onbeforeupdate;
    HRESULT get_onbeforeupdate;
    HRESULT put_onerrorupdate;
    HRESULT get_onerrorupdate;
    HRESULT toString;
    HRESULT createStyleSheet;
    VOID IHTMLDocument2;
    VOID IHTMLDocument2;
    VOID IHTMLDocument2;
    struct IHTMLDocument2 *operator=;
    struct IHTMLDocument2 *operator=;
};

typedef struct IHTMLDocument3 {
    struct IDispatch IDispatch;
    HRESULT releaseCapture;
    HRESULT recalc;
    HRESULT createTextNode;
    HRESULT get_documentElement;
    HRESULT get_uniqueID;
    HRESULT attachEvent;
    HRESULT detachEvent;
    HRESULT put_onrowsdelete;
    HRESULT get_onrowsdelete;
    HRESULT put_onrowsinserted;
    HRESULT get_onrowsinserted;
    HRESULT put_oncellchange;
    HRESULT get_oncellchange;
    HRESULT put_ondatasetchanged;
    HRESULT get_ondatasetchanged;
    HRESULT put_ondataavailable;
    HRESULT get_ondataavailable;
    HRESULT put_ondatasetcomplete;
    HRESULT get_ondatasetcomplete;
    HRESULT put_onpropertychange;
    HRESULT get_onpropertychange;
    HRESULT put_dir;
    HRESULT get_dir;
    HRESULT put_oncontextmenu;
    HRESULT get_oncontextmenu;
    HRESULT put_onstop;
    HRESULT get_onstop;
    HRESULT createDocumentFragment;
    HRESULT get_parentDocument;
    HRESULT put_enableDownload;
    HRESULT get_enableDownload;
    HRESULT put_baseUrl;
    HRESULT get_baseUrl;
    HRESULT get_childNodes;
    HRESULT put_inheritStyleSheets;
    HRESULT get_inheritStyleSheets;
    HRESULT put_onbeforeeditfocus;
    HRESULT get_onbeforeeditfocus;
    HRESULT getElementsByName;
    HRESULT getElementById;
    HRESULT getElementsByTagName;
    VOID IHTMLDocument3;
    VOID IHTMLDocument3;
    VOID IHTMLDocument3;
    struct IHTMLDocument3 *operator=;
    struct IHTMLDocument3 *operator=;
};

typedef struct IHTMLDocument4 {
    struct IDispatch IDispatch;
    HRESULT focus;
    HRESULT hasFocus;
    HRESULT put_onselectionchange;
    HRESULT get_onselectionchange;
    HRESULT get_namespaces;
    HRESULT createDocumentFromUrl;
    HRESULT put_media;
    HRESULT get_media;
    HRESULT createEventObject;
    HRESULT fireEvent;
    HRESULT createRenderStyle;
    HRESULT put_oncontrolselect;
    HRESULT get_oncontrolselect;
    HRESULT get_URLUnencoded;
    VOID IHTMLDocument4;
    VOID IHTMLDocument4;
    VOID IHTMLDocument4;
    struct IHTMLDocument4 *operator=;
    struct IHTMLDocument4 *operator=;
};

typedef struct IHTMLDocument5 {
    struct IDispatch IDispatch;
    HRESULT put_onmousewheel;
    HRESULT get_onmousewheel;
    HRESULT get_doctype;
    HRESULT get_implementation;
    HRESULT createAttribute;
    HRESULT createComment;
    HRESULT put_onfocusin;
    HRESULT get_onfocusin;
    HRESULT put_onfocusout;
    HRESULT get_onfocusout;
    HRESULT put_onactivate;
    HRESULT get_onactivate;
    HRESULT put_ondeactivate;
    HRESULT get_ondeactivate;
    HRESULT put_onbeforeactivate;
    HRESULT get_onbeforeactivate;
    HRESULT put_onbeforedeactivate;
    HRESULT get_onbeforedeactivate;
    HRESULT get_compatMode;
    VOID IHTMLDocument5;
    VOID IHTMLDocument5;
    VOID IHTMLDocument5;
    struct IHTMLDocument5 *operator=;
    struct IHTMLDocument5 *operator=;
};

typedef struct IHTMLDocument6 {
    struct IDispatch IDispatch;
    HRESULT get_compatible;
    HRESULT get_documentMode;
    HRESULT put_onstorage;
    HRESULT get_onstorage;
    HRESULT put_onstoragecommit;
    HRESULT get_onstoragecommit;
    HRESULT getElementById;
    HRESULT updateSettings;
    VOID IHTMLDocument6;
    VOID IHTMLDocument6;
    VOID IHTMLDocument6;
    struct IHTMLDocument6 *operator=;
    struct IHTMLDocument6 *operator=;
};

typedef struct IHTMLDocument7 {
    struct IDispatch IDispatch;
    HRESULT get_defaultView;
    HRESULT createCDATASection;
    HRESULT getSelection;
    HRESULT getElementsByTagNameNS;
    HRESULT createElementNS;
    HRESULT createAttributeNS;
    HRESULT put_onmsthumbnailclick;
    HRESULT get_onmsthumbnailclick;
    HRESULT get_characterSet;
    HRESULT createElement;
    HRESULT createAttribute;
    HRESULT getElementsByClassName;
    HRESULT createProcessingInstruction;
    HRESULT adoptNode;
    HRESULT put_onmssitemodejumplistitemremoved;
    HRESULT get_onmssitemodejumplistitemremoved;
    HRESULT get_all;
    HRESULT get_inputEncoding;
    HRESULT get_xmlEncoding;
    HRESULT put_xmlStandalone;
    HRESULT get_xmlStandalone;
    HRESULT put_xmlVersion;
    HRESULT get_xmlVersion;
    HRESULT hasAttributes;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_oncanplay;
    HRESULT get_oncanplay;
    HRESULT put_oncanplaythrough;
    HRESULT get_oncanplaythrough;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_ondrag;
    HRESULT get_ondrag;
    HRESULT put_ondragend;
    HRESULT get_ondragend;
    HRESULT put_ondragenter;
    HRESULT get_ondragenter;
    HRESULT put_ondragleave;
    HRESULT get_ondragleave;
    HRESULT put_ondragover;
    HRESULT get_ondragover;
    HRESULT put_ondrop;
    HRESULT get_ondrop;
    HRESULT put_ondurationchange;
    HRESULT get_ondurationchange;
    HRESULT put_onemptied;
    HRESULT get_onemptied;
    HRESULT put_onended;
    HRESULT get_onended;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_oninput;
    HRESULT get_oninput;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onloadeddata;
    HRESULT get_onloadeddata;
    HRESULT put_onloadedmetadata;
    HRESULT get_onloadedmetadata;
    HRESULT put_onloadstart;
    HRESULT get_onloadstart;
    HRESULT put_onpause;
    HRESULT get_onpause;
    HRESULT put_onplay;
    HRESULT get_onplay;
    HRESULT put_onplaying;
    HRESULT get_onplaying;
    HRESULT put_onprogress;
    HRESULT get_onprogress;
    HRESULT put_onratechange;
    HRESULT get_onratechange;
    HRESULT put_onreset;
    HRESULT get_onreset;
    HRESULT put_onscroll;
    HRESULT get_onscroll;
    HRESULT put_onseeked;
    HRESULT get_onseeked;
    HRESULT put_onseeking;
    HRESULT get_onseeking;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_onstalled;
    HRESULT get_onstalled;
    HRESULT put_onsubmit;
    HRESULT get_onsubmit;
    HRESULT put_onsuspend;
    HRESULT get_onsuspend;
    HRESULT put_ontimeupdate;
    HRESULT get_ontimeupdate;
    HRESULT put_onvolumechange;
    HRESULT get_onvolumechange;
    HRESULT put_onwaiting;
    HRESULT get_onwaiting;
    HRESULT normalize;
    HRESULT importNode;
    HRESULT get_parentWindow;
    HRESULT putref_body;
    HRESULT get_body;
    HRESULT get_head;
    VOID IHTMLDocument7;
    VOID IHTMLDocument7;
    VOID IHTMLDocument7;
    struct IHTMLDocument7 *operator=;
    struct IHTMLDocument7 *operator=;
};

typedef struct IHTMLDocument8 {
    struct IDispatch IDispatch;
    HRESULT put_onmscontentzoom;
    HRESULT get_onmscontentzoom;
    HRESULT put_onmspointerdown;
    HRESULT get_onmspointerdown;
    HRESULT put_onmspointermove;
    HRESULT get_onmspointermove;
    HRESULT put_onmspointerup;
    HRESULT get_onmspointerup;
    HRESULT put_onmspointerover;
    HRESULT get_onmspointerover;
    HRESULT put_onmspointerout;
    HRESULT get_onmspointerout;
    HRESULT put_onmspointercancel;
    HRESULT get_onmspointercancel;
    HRESULT put_onmspointerhover;
    HRESULT get_onmspointerhover;
    HRESULT put_onmsgesturestart;
    HRESULT get_onmsgesturestart;
    HRESULT put_onmsgesturechange;
    HRESULT get_onmsgesturechange;
    HRESULT put_onmsgestureend;
    HRESULT get_onmsgestureend;
    HRESULT put_onmsgesturehold;
    HRESULT get_onmsgesturehold;
    HRESULT put_onmsgesturetap;
    HRESULT get_onmsgesturetap;
    HRESULT put_onmsgesturedoubletap;
    HRESULT get_onmsgesturedoubletap;
    HRESULT put_onmsinertiastart;
    HRESULT get_onmsinertiastart;
    HRESULT elementsFromPoint;
    HRESULT elementsFromRect;
    HRESULT put_onmsmanipulationstatechanged;
    HRESULT get_onmsmanipulationstatechanged;
    HRESULT put_msCapsLockWarningOff;
    HRESULT get_msCapsLockWarningOff;
    VOID IHTMLDocument8;
    VOID IHTMLDocument8;
    VOID IHTMLDocument8;
    struct IHTMLDocument8 *operator=;
    struct IHTMLDocument8 *operator=;
};

typedef struct IHTMLDocumentCompatibleInfo {
    struct IDispatch IDispatch;
    HRESULT get_userAgent;
    HRESULT get_version;
    VOID IHTMLDocumentCompatibleInfo;
    VOID IHTMLDocumentCompatibleInfo;
    VOID IHTMLDocumentCompatibleInfo;
    struct IHTMLDocumentCompatibleInfo *operator=;
    struct IHTMLDocumentCompatibleInfo *operator=;
};

typedef struct IHTMLDocumentCompatibleInfoCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID IHTMLDocumentCompatibleInfoCollection;
    VOID IHTMLDocumentCompatibleInfoCollection;
    VOID IHTMLDocumentCompatibleInfoCollection;
    struct IHTMLDocumentCompatibleInfoCollection *operator=;
    struct IHTMLDocumentCompatibleInfoCollection *operator=;
};

typedef struct IHTMLEditDesigner {
    struct IUnknown IUnknown;
    HRESULT PreHandleEvent;
    HRESULT PostHandleEvent;
    HRESULT TranslateAcceleratorW;
    HRESULT PostEditorEventNotify;
    VOID IHTMLEditDesigner;
    VOID IHTMLEditDesigner;
    VOID IHTMLEditDesigner;
    struct IHTMLEditDesigner *operator=;
    struct IHTMLEditDesigner *operator=;
};

typedef struct IHTMLEditHost {
    struct IUnknown IUnknown;
    HRESULT SnapRect;
    VOID IHTMLEditHost;
    VOID IHTMLEditHost;
    VOID IHTMLEditHost;
    struct IHTMLEditHost *operator=;
    struct IHTMLEditHost *operator=;
};

typedef struct IHTMLEditHost2 {
    struct IHTMLEditHost IHTMLEditHost;
    HRESULT PreDrag;
    VOID IHTMLEditHost2;
    VOID IHTMLEditHost2;
    VOID IHTMLEditHost2;
    struct IHTMLEditHost2 *operator=;
    struct IHTMLEditHost2 *operator=;
};

typedef struct IHTMLEditServices {
    struct IUnknown IUnknown;
    HRESULT AddDesigner;
    HRESULT RemoveDesigner;
    HRESULT GetSelectionServices;
    HRESULT MoveToSelectionAnchor;
    HRESULT MoveToSelectionEnd;
    HRESULT SelectRange;
    VOID IHTMLEditServices;
    VOID IHTMLEditServices;
    VOID IHTMLEditServices;
    struct IHTMLEditServices *operator=;
    struct IHTMLEditServices *operator=;
};

typedef struct IHTMLEditServices2 {
    struct IHTMLEditServices IHTMLEditServices;
    HRESULT MoveToSelectionAnchorEx;
    HRESULT MoveToSelectionEndEx;
    HRESULT FreezeVirtualCaretPos;
    HRESULT UnFreezeVirtualCaretPos;
    VOID IHTMLEditServices2;
    VOID IHTMLEditServices2;
    VOID IHTMLEditServices2;
    struct IHTMLEditServices2 *operator=;
    struct IHTMLEditServices2 *operator=;
};

typedef struct IHTMLElement {
    struct IDispatch IDispatch;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT put_className;
    HRESULT get_className;
    HRESULT put_id;
    HRESULT get_id;
    HRESULT get_tagName;
    HRESULT get_parentElement;
    HRESULT get_style;
    HRESULT put_onhelp;
    HRESULT get_onhelp;
    HRESULT put_onclick;
    HRESULT get_onclick;
    HRESULT put_ondblclick;
    HRESULT get_ondblclick;
    HRESULT put_onkeydown;
    HRESULT get_onkeydown;
    HRESULT put_onkeyup;
    HRESULT get_onkeyup;
    HRESULT put_onkeypress;
    HRESULT get_onkeypress;
    HRESULT put_onmouseout;
    HRESULT get_onmouseout;
    HRESULT put_onmouseover;
    HRESULT get_onmouseover;
    HRESULT put_onmousemove;
    HRESULT get_onmousemove;
    HRESULT put_onmousedown;
    HRESULT get_onmousedown;
    HRESULT put_onmouseup;
    HRESULT get_onmouseup;
    HRESULT get_document;
    HRESULT put_title;
    HRESULT get_title;
    HRESULT put_language;
    HRESULT get_language;
    HRESULT put_onselectstart;
    HRESULT get_onselectstart;
    HRESULT scrollIntoView;
    HRESULT contains;
    HRESULT get_sourceIndex;
    HRESULT get_recordNumber;
    HRESULT put_lang;
    HRESULT get_lang;
    HRESULT get_offsetLeft;
    HRESULT get_offsetTop;
    HRESULT get_offsetWidth;
    HRESULT get_offsetHeight;
    HRESULT get_offsetParent;
    HRESULT put_innerHTML;
    HRESULT get_innerHTML;
    HRESULT put_innerText;
    HRESULT get_innerText;
    HRESULT put_outerHTML;
    HRESULT get_outerHTML;
    HRESULT put_outerText;
    HRESULT get_outerText;
    HRESULT insertAdjacentHTML;
    HRESULT insertAdjacentText;
    HRESULT get_parentTextEdit;
    HRESULT get_isTextEdit;
    HRESULT click;
    HRESULT get_filters;
    HRESULT put_ondragstart;
    HRESULT get_ondragstart;
    HRESULT toString;
    HRESULT put_onbeforeupdate;
    HRESULT get_onbeforeupdate;
    HRESULT put_onafterupdate;
    HRESULT get_onafterupdate;
    HRESULT put_onerrorupdate;
    HRESULT get_onerrorupdate;
    HRESULT put_onrowexit;
    HRESULT get_onrowexit;
    HRESULT put_onrowenter;
    HRESULT get_onrowenter;
    HRESULT put_ondatasetchanged;
    HRESULT get_ondatasetchanged;
    HRESULT put_ondataavailable;
    HRESULT get_ondataavailable;
    HRESULT put_ondatasetcomplete;
    HRESULT get_ondatasetcomplete;
    HRESULT put_onfilterchange;
    HRESULT get_onfilterchange;
    HRESULT get_children;
    HRESULT get_all;
    VOID IHTMLElement;
    VOID IHTMLElement;
    VOID IHTMLElement;
    struct IHTMLElement *operator=;
    struct IHTMLElement *operator=;
};

typedef struct IHTMLElement2 {
    struct IDispatch IDispatch;
    HRESULT get_scopeName;
    HRESULT setCapture;
    HRESULT releaseCapture;
    HRESULT put_onlosecapture;
    HRESULT get_onlosecapture;
    HRESULT componentFromPoint;
    HRESULT doScroll;
    HRESULT put_onscroll;
    HRESULT get_onscroll;
    HRESULT put_ondrag;
    HRESULT get_ondrag;
    HRESULT put_ondragend;
    HRESULT get_ondragend;
    HRESULT put_ondragenter;
    HRESULT get_ondragenter;
    HRESULT put_ondragover;
    HRESULT get_ondragover;
    HRESULT put_ondragleave;
    HRESULT get_ondragleave;
    HRESULT put_ondrop;
    HRESULT get_ondrop;
    HRESULT put_onbeforecut;
    HRESULT get_onbeforecut;
    HRESULT put_oncut;
    HRESULT get_oncut;
    HRESULT put_onbeforecopy;
    HRESULT get_onbeforecopy;
    HRESULT put_oncopy;
    HRESULT get_oncopy;
    HRESULT put_onbeforepaste;
    HRESULT get_onbeforepaste;
    HRESULT put_onpaste;
    HRESULT get_onpaste;
    HRESULT get_currentStyle;
    HRESULT put_onpropertychange;
    HRESULT get_onpropertychange;
    HRESULT getClientRects;
    HRESULT getBoundingClientRect;
    HRESULT setExpression;
    HRESULT getExpression;
    HRESULT removeExpression;
    HRESULT put_tabIndex;
    HRESULT get_tabIndex;
    HRESULT focus;
    HRESULT put_accessKey;
    HRESULT get_accessKey;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_onresize;
    HRESULT get_onresize;
    HRESULT blur;
    HRESULT addFilter;
    HRESULT removeFilter;
    HRESULT get_clientHeight;
    HRESULT get_clientWidth;
    HRESULT get_clientTop;
    HRESULT get_clientLeft;
    HRESULT attachEvent;
    HRESULT detachEvent;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onrowsdelete;
    HRESULT get_onrowsdelete;
    HRESULT put_onrowsinserted;
    HRESULT get_onrowsinserted;
    HRESULT put_oncellchange;
    HRESULT get_oncellchange;
    HRESULT put_dir;
    HRESULT get_dir;
    HRESULT createControlRange;
    HRESULT get_scrollHeight;
    HRESULT get_scrollWidth;
    HRESULT put_scrollTop;
    HRESULT get_scrollTop;
    HRESULT put_scrollLeft;
    HRESULT get_scrollLeft;
    HRESULT clearAttributes;
    HRESULT mergeAttributes;
    HRESULT put_oncontextmenu;
    HRESULT get_oncontextmenu;
    HRESULT insertAdjacentElement;
    HRESULT applyElement;
    HRESULT getAdjacentText;
    HRESULT replaceAdjacentText;
    HRESULT get_canHaveChildren;
    HRESULT addBehavior;
    HRESULT removeBehavior;
    HRESULT get_runtimeStyle;
    HRESULT get_behaviorUrns;
    HRESULT put_tagUrn;
    HRESULT get_tagUrn;
    HRESULT put_onbeforeeditfocus;
    HRESULT get_onbeforeeditfocus;
    HRESULT get_readyStateValue;
    HRESULT getElementsByTagName;
    VOID IHTMLElement2;
    VOID IHTMLElement2;
    VOID IHTMLElement2;
    struct IHTMLElement2 *operator=;
    struct IHTMLElement2 *operator=;
};

typedef struct IHTMLElement3 {
    struct IDispatch IDispatch;
    HRESULT mergeAttributes;
    HRESULT get_isMultiLine;
    HRESULT get_canHaveHTML;
    HRESULT put_onlayoutcomplete;
    HRESULT get_onlayoutcomplete;
    HRESULT put_onpage;
    HRESULT get_onpage;
    HRESULT put_inflateBlock;
    HRESULT get_inflateBlock;
    HRESULT put_onbeforedeactivate;
    HRESULT get_onbeforedeactivate;
    HRESULT setActive;
    HRESULT put_contentEditable;
    HRESULT get_contentEditable;
    HRESULT get_isContentEditable;
    HRESULT put_hideFocus;
    HRESULT get_hideFocus;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_isDisabled;
    HRESULT put_onmove;
    HRESULT get_onmove;
    HRESULT put_oncontrolselect;
    HRESULT get_oncontrolselect;
    HRESULT fireEvent;
    HRESULT put_onresizestart;
    HRESULT get_onresizestart;
    HRESULT put_onresizeend;
    HRESULT get_onresizeend;
    HRESULT put_onmovestart;
    HRESULT get_onmovestart;
    HRESULT put_onmoveend;
    HRESULT get_onmoveend;
    HRESULT put_onmouseenter;
    HRESULT get_onmouseenter;
    HRESULT put_onmouseleave;
    HRESULT get_onmouseleave;
    HRESULT put_onactivate;
    HRESULT get_onactivate;
    HRESULT put_ondeactivate;
    HRESULT get_ondeactivate;
    HRESULT dragDrop;
    HRESULT get_glyphMode;
    VOID IHTMLElement3;
    VOID IHTMLElement3;
    VOID IHTMLElement3;
    struct IHTMLElement3 *operator=;
    struct IHTMLElement3 *operator=;
};

typedef struct IHTMLElement4 {
    struct IDispatch IDispatch;
    HRESULT put_onmousewheel;
    HRESULT get_onmousewheel;
    HRESULT normalize;
    HRESULT getAttributeNode;
    HRESULT setAttributeNode;
    HRESULT removeAttributeNode;
    HRESULT put_onbeforeactivate;
    HRESULT get_onbeforeactivate;
    HRESULT put_onfocusin;
    HRESULT get_onfocusin;
    HRESULT put_onfocusout;
    HRESULT get_onfocusout;
    VOID IHTMLElement4;
    VOID IHTMLElement4;
    VOID IHTMLElement4;
    struct IHTMLElement4 *operator=;
    struct IHTMLElement4 *operator=;
};

typedef struct IHTMLElement5 {
    struct IDispatch IDispatch;
    HRESULT getAttributeNode;
    HRESULT setAttributeNode;
    HRESULT removeAttributeNode;
    HRESULT hasAttribute;
    HRESULT put_role;
    HRESULT get_role;
    HRESULT put_ariaBusy;
    HRESULT get_ariaBusy;
    HRESULT put_ariaChecked;
    HRESULT get_ariaChecked;
    HRESULT put_ariaDisabled;
    HRESULT get_ariaDisabled;
    HRESULT put_ariaExpanded;
    HRESULT get_ariaExpanded;
    HRESULT put_ariaHaspopup;
    HRESULT get_ariaHaspopup;
    HRESULT put_ariaHidden;
    HRESULT get_ariaHidden;
    HRESULT put_ariaInvalid;
    HRESULT get_ariaInvalid;
    HRESULT put_ariaMultiselectable;
    HRESULT get_ariaMultiselectable;
    HRESULT put_ariaPressed;
    HRESULT get_ariaPressed;
    HRESULT put_ariaReadonly;
    HRESULT get_ariaReadonly;
    HRESULT put_ariaRequired;
    HRESULT get_ariaRequired;
    HRESULT put_ariaSecret;
    HRESULT get_ariaSecret;
    HRESULT put_ariaSelected;
    HRESULT get_ariaSelected;
    HRESULT getAttribute;
    HRESULT setAttribute;
    HRESULT removeAttribute;
    HRESULT get_attributes;
    HRESULT put_ariaValuenow;
    HRESULT get_ariaValuenow;
    HRESULT put_ariaPosinset;
    HRESULT get_ariaPosinset;
    HRESULT put_ariaSetsize;
    HRESULT get_ariaSetsize;
    HRESULT put_ariaLevel;
    HRESULT get_ariaLevel;
    HRESULT put_ariaValuemin;
    HRESULT get_ariaValuemin;
    HRESULT put_ariaValuemax;
    HRESULT get_ariaValuemax;
    HRESULT put_ariaControls;
    HRESULT get_ariaControls;
    HRESULT put_ariaDescribedby;
    HRESULT get_ariaDescribedby;
    HRESULT put_ariaFlowto;
    HRESULT get_ariaFlowto;
    HRESULT put_ariaLabelledby;
    HRESULT get_ariaLabelledby;
    HRESULT put_ariaActivedescendant;
    HRESULT get_ariaActivedescendant;
    HRESULT put_ariaOwns;
    HRESULT get_ariaOwns;
    HRESULT hasAttributes;
    HRESULT put_ariaLive;
    HRESULT get_ariaLive;
    HRESULT put_ariaRelevant;
    HRESULT get_ariaRelevant;
    VOID IHTMLElement5;
    VOID IHTMLElement5;
    VOID IHTMLElement5;
    struct IHTMLElement5 *operator=;
    struct IHTMLElement5 *operator=;
};

typedef struct IHTMLElement6 {
    struct IDispatch IDispatch;
    HRESULT getAttributeNS;
    HRESULT setAttributeNS;
    HRESULT removeAttributeNS;
    HRESULT getAttributeNodeNS;
    HRESULT setAttributeNodeNS;
    HRESULT hasAttributeNS;
    HRESULT getAttribute;
    HRESULT setAttribute;
    HRESULT removeAttribute;
    HRESULT getAttributeNode;
    HRESULT setAttributeNode;
    HRESULT removeAttributeNode;
    HRESULT hasAttribute;
    HRESULT getElementsByTagNameNS;
    HRESULT get_tagName;
    HRESULT get_nodeName;
    HRESULT getElementsByClassName;
    HRESULT msMatchesSelector;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_oncanplay;
    HRESULT get_oncanplay;
    HRESULT put_oncanplaythrough;
    HRESULT get_oncanplaythrough;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_ondurationchange;
    HRESULT get_ondurationchange;
    HRESULT put_onemptied;
    HRESULT get_onemptied;
    HRESULT put_onended;
    HRESULT get_onended;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_oninput;
    HRESULT get_oninput;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onloadeddata;
    HRESULT get_onloadeddata;
    HRESULT put_onloadedmetadata;
    HRESULT get_onloadedmetadata;
    HRESULT put_onloadstart;
    HRESULT get_onloadstart;
    HRESULT put_onpause;
    HRESULT get_onpause;
    HRESULT put_onplay;
    HRESULT get_onplay;
    HRESULT put_onplaying;
    HRESULT get_onplaying;
    HRESULT put_onprogress;
    HRESULT get_onprogress;
    HRESULT put_onratechange;
    HRESULT get_onratechange;
    HRESULT put_onreset;
    HRESULT get_onreset;
    HRESULT put_onseeked;
    HRESULT get_onseeked;
    HRESULT put_onseeking;
    HRESULT get_onseeking;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_onstalled;
    HRESULT get_onstalled;
    HRESULT put_onsubmit;
    HRESULT get_onsubmit;
    HRESULT put_onsuspend;
    HRESULT get_onsuspend;
    HRESULT put_ontimeupdate;
    HRESULT get_ontimeupdate;
    HRESULT put_onvolumechange;
    HRESULT get_onvolumechange;
    HRESULT put_onwaiting;
    HRESULT get_onwaiting;
    HRESULT hasAttributes;
    VOID IHTMLElement6;
    VOID IHTMLElement6;
    VOID IHTMLElement6;
    struct IHTMLElement6 *operator=;
    struct IHTMLElement6 *operator=;
};

typedef struct IHTMLElement7 {
    struct IDispatch IDispatch;
    HRESULT put_onmspointerdown;
    HRESULT get_onmspointerdown;
    HRESULT put_onmspointermove;
    HRESULT get_onmspointermove;
    HRESULT put_onmspointerup;
    HRESULT get_onmspointerup;
    HRESULT put_onmspointerover;
    HRESULT get_onmspointerover;
    HRESULT put_onmspointerout;
    HRESULT get_onmspointerout;
    HRESULT put_onmspointercancel;
    HRESULT get_onmspointercancel;
    HRESULT put_onmspointerhover;
    HRESULT get_onmspointerhover;
    HRESULT put_onmslostpointercapture;
    HRESULT get_onmslostpointercapture;
    HRESULT put_onmsgotpointercapture;
    HRESULT get_onmsgotpointercapture;
    HRESULT put_onmsgesturestart;
    HRESULT get_onmsgesturestart;
    HRESULT put_onmsgesturechange;
    HRESULT get_onmsgesturechange;
    HRESULT put_onmsgestureend;
    HRESULT get_onmsgestureend;
    HRESULT put_onmsgesturehold;
    HRESULT get_onmsgesturehold;
    HRESULT put_onmsgesturetap;
    HRESULT get_onmsgesturetap;
    HRESULT put_onmsgesturedoubletap;
    HRESULT get_onmsgesturedoubletap;
    HRESULT put_onmsinertiastart;
    HRESULT get_onmsinertiastart;
    HRESULT msSetPointerCapture;
    HRESULT msReleasePointerCapture;
    HRESULT put_onmstransitionstart;
    HRESULT get_onmstransitionstart;
    HRESULT put_onmstransitionend;
    HRESULT get_onmstransitionend;
    HRESULT put_onmsanimationstart;
    HRESULT get_onmsanimationstart;
    HRESULT put_onmsanimationend;
    HRESULT get_onmsanimationend;
    HRESULT put_onmsanimationiteration;
    HRESULT get_onmsanimationiteration;
    HRESULT put_oninvalid;
    HRESULT get_oninvalid;
    HRESULT put_xmsAcceleratorKey;
    HRESULT get_xmsAcceleratorKey;
    HRESULT put_spellcheck;
    HRESULT get_spellcheck;
    HRESULT put_onmsmanipulationstatechanged;
    HRESULT get_onmsmanipulationstatechanged;
    HRESULT put_oncuechange;
    HRESULT get_oncuechange;
    VOID IHTMLElement7;
    VOID IHTMLElement7;
    VOID IHTMLElement7;
    struct IHTMLElement7 *operator=;
    struct IHTMLElement7 *operator=;
};

typedef struct IHTMLElementAppliedStyles {
    struct IDispatch IDispatch;
    HRESULT msGetRulesApplied;
    HRESULT msGetRulesAppliedWithAncestor;
    VOID IHTMLElementAppliedStyles;
    VOID IHTMLElementAppliedStyles;
    VOID IHTMLElementAppliedStyles;
    struct IHTMLElementAppliedStyles *operator=;
    struct IHTMLElementAppliedStyles *operator=;
};

typedef struct IHTMLElementCollection {
    struct IDispatch IDispatch;
    HRESULT toString;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    HRESULT tags;
    VOID IHTMLElementCollection;
    VOID IHTMLElementCollection;
    VOID IHTMLElementCollection;
    struct IHTMLElementCollection *operator=;
    struct IHTMLElementCollection *operator=;
};

typedef struct IHTMLElementCollection2 {
    struct IDispatch IDispatch;
    HRESULT urns;
    VOID IHTMLElementCollection2;
    VOID IHTMLElementCollection2;
    VOID IHTMLElementCollection2;
    struct IHTMLElementCollection2 *operator=;
    struct IHTMLElementCollection2 *operator=;
};

typedef struct IHTMLElementCollection3 {
    struct IDispatch IDispatch;
    HRESULT namedItem;
    VOID IHTMLElementCollection3;
    VOID IHTMLElementCollection3;
    VOID IHTMLElementCollection3;
    struct IHTMLElementCollection3 *operator=;
    struct IHTMLElementCollection3 *operator=;
};

typedef struct IHTMLElementCollection4 {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    HRESULT namedItem;
    VOID IHTMLElementCollection4;
    VOID IHTMLElementCollection4;
    VOID IHTMLElementCollection4;
    struct IHTMLElementCollection4 *operator=;
    struct IHTMLElementCollection4 *operator=;
};

typedef struct IHTMLElementDefaults {
    struct IDispatch IDispatch;
    HRESULT get_style;
    HRESULT put_tabStop;
    HRESULT get_tabStop;
    HRESULT put_viewInheritStyle;
    HRESULT get_viewInheritStyle;
    HRESULT put_viewMasterTab;
    HRESULT get_viewMasterTab;
    HRESULT put_scrollSegmentX;
    HRESULT get_scrollSegmentX;
    HRESULT put_scrollSegmentY;
    HRESULT get_scrollSegmentY;
    HRESULT put_isMultiLine;
    HRESULT get_isMultiLine;
    HRESULT put_contentEditable;
    HRESULT get_contentEditable;
    HRESULT put_canHaveHTML;
    HRESULT get_canHaveHTML;
    HRESULT putref_viewLink;
    HRESULT get_viewLink;
    HRESULT put_frozen;
    HRESULT get_frozen;
    VOID IHTMLElementDefaults;
    VOID IHTMLElementDefaults;
    VOID IHTMLElementDefaults;
    struct IHTMLElementDefaults *operator=;
    struct IHTMLElementDefaults *operator=;
};

typedef struct IHTMLElementRender {
    struct IUnknown IUnknown;
    HRESULT DrawToDC;
    HRESULT SetDocumentPrinter;
    VOID IHTMLElementRender;
    VOID IHTMLElementRender;
    VOID IHTMLElementRender;
    struct IHTMLElementRender *operator=;
    struct IHTMLElementRender *operator=;
};

typedef struct IHTMLEmbedElement {
    struct IDispatch IDispatch;
    HRESULT put_hidden;
    HRESULT get_hidden;
    HRESULT get_palette;
    HRESULT get_pluginspage;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_units;
    HRESULT get_units;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    VOID IHTMLEmbedElement;
    VOID IHTMLEmbedElement;
    VOID IHTMLEmbedElement;
    struct IHTMLEmbedElement *operator=;
    struct IHTMLEmbedElement *operator=;
};

typedef struct IHTMLEmbedElement2 {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT get_pluginspage;
    VOID IHTMLEmbedElement2;
    VOID IHTMLEmbedElement2;
    VOID IHTMLEmbedElement2;
    struct IHTMLEmbedElement2 *operator=;
    struct IHTMLEmbedElement2 *operator=;
};

typedef struct IHTMLEventObj {
    struct IDispatch IDispatch;
    HRESULT get_srcElement;
    HRESULT get_altKey;
    HRESULT get_ctrlKey;
    HRESULT get_shiftKey;
    HRESULT put_returnValue;
    HRESULT get_returnValue;
    HRESULT put_cancelBubble;
    HRESULT get_cancelBubble;
    HRESULT get_fromElement;
    HRESULT get_toElement;
    HRESULT put_keyCode;
    HRESULT get_keyCode;
    HRESULT get_button;
    HRESULT get_type;
    HRESULT get_qualifier;
    HRESULT get_reason;
    HRESULT get_x;
    HRESULT get_y;
    HRESULT get_clientX;
    HRESULT get_clientY;
    HRESULT get_offsetX;
    HRESULT get_offsetY;
    HRESULT get_screenX;
    HRESULT get_screenY;
    HRESULT get_srcFilter;
    VOID IHTMLEventObj;
    VOID IHTMLEventObj;
    VOID IHTMLEventObj;
    struct IHTMLEventObj *operator=;
    struct IHTMLEventObj *operator=;
};

typedef struct IHTMLEventObj2 {
    struct IDispatch IDispatch;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT put_propertyName;
    HRESULT get_propertyName;
    HRESULT putref_bookmarks;
    HRESULT get_bookmarks;
    HRESULT putref_recordset;
    HRESULT get_recordset;
    HRESULT put_dataFld;
    HRESULT get_dataFld;
    HRESULT putref_boundElements;
    HRESULT get_boundElements;
    HRESULT put_repeat;
    HRESULT get_repeat;
    HRESULT put_srcUrn;
    HRESULT get_srcUrn;
    HRESULT putref_srcElement;
    HRESULT get_srcElement;
    HRESULT put_altKey;
    HRESULT get_altKey;
    HRESULT put_ctrlKey;
    HRESULT get_ctrlKey;
    HRESULT put_shiftKey;
    HRESULT get_shiftKey;
    HRESULT putref_fromElement;
    HRESULT get_fromElement;
    HRESULT putref_toElement;
    HRESULT get_toElement;
    HRESULT put_button;
    HRESULT get_button;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_qualifier;
    HRESULT get_qualifier;
    HRESULT put_reason;
    HRESULT get_reason;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_clientX;
    HRESULT get_clientX;
    HRESULT put_clientY;
    HRESULT get_clientY;
    HRESULT put_offsetX;
    HRESULT get_offsetX;
    HRESULT put_offsetY;
    HRESULT get_offsetY;
    HRESULT put_screenX;
    HRESULT get_screenX;
    HRESULT put_screenY;
    HRESULT get_screenY;
    HRESULT putref_srcFilter;
    HRESULT get_srcFilter;
    HRESULT get_dataTransfer;
    VOID IHTMLEventObj2;
    VOID IHTMLEventObj2;
    VOID IHTMLEventObj2;
    struct IHTMLEventObj2 *operator=;
    struct IHTMLEventObj2 *operator=;
};

typedef struct IHTMLEventObj3 {
    struct IDispatch IDispatch;
    HRESULT get_contentOverflow;
    HRESULT put_shiftLeft;
    HRESULT get_shiftLeft;
    HRESULT put_altLeft;
    HRESULT get_altLeft;
    HRESULT put_ctrlLeft;
    HRESULT get_ctrlLeft;
    HRESULT get_imeCompositionChange;
    HRESULT get_imeNotifyCommand;
    HRESULT get_imeNotifyData;
    HRESULT get_imeRequest;
    HRESULT get_imeRequestData;
    HRESULT get_keyboardLayout;
    HRESULT get_behaviorCookie;
    HRESULT get_behaviorPart;
    HRESULT get_nextPage;
    VOID IHTMLEventObj3;
    VOID IHTMLEventObj3;
    VOID IHTMLEventObj3;
    struct IHTMLEventObj3 *operator=;
    struct IHTMLEventObj3 *operator=;
};

typedef struct IHTMLEventObj4 {
    struct IDispatch IDispatch;
    HRESULT get_wheelDelta;
    VOID IHTMLEventObj4;
    VOID IHTMLEventObj4;
    VOID IHTMLEventObj4;
    struct IHTMLEventObj4 *operator=;
    struct IHTMLEventObj4 *operator=;
};

typedef struct IHTMLEventObj5 {
    struct IDispatch IDispatch;
    HRESULT put_url;
    HRESULT get_url;
    HRESULT put_data;
    HRESULT get_data;
    HRESULT get_source;
    HRESULT put_origin;
    HRESULT get_origin;
    HRESULT put_issession;
    HRESULT get_issession;
    VOID IHTMLEventObj5;
    VOID IHTMLEventObj5;
    VOID IHTMLEventObj5;
    struct IHTMLEventObj5 *operator=;
    struct IHTMLEventObj5 *operator=;
};

typedef struct IHTMLEventObj6 {
    struct IDispatch IDispatch;
    HRESULT get_actionURL;
    HRESULT get_buttonID;
    VOID IHTMLEventObj6;
    VOID IHTMLEventObj6;
    VOID IHTMLEventObj6;
    struct IHTMLEventObj6 *operator=;
    struct IHTMLEventObj6 *operator=;
};

typedef struct IHTMLFieldSetElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLFieldSetElement;
    VOID IHTMLFieldSetElement;
    VOID IHTMLFieldSetElement;
    struct IHTMLFieldSetElement *operator=;
    struct IHTMLFieldSetElement *operator=;
};

typedef struct IHTMLFieldSetElement2 {
    struct IDispatch IDispatch;
    HRESULT get_form;
    VOID IHTMLFieldSetElement2;
    VOID IHTMLFieldSetElement2;
    VOID IHTMLFieldSetElement2;
    struct IHTMLFieldSetElement2 *operator=;
    struct IHTMLFieldSetElement2 *operator=;
};

typedef struct IHTMLFiltersCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLFiltersCollection;
    VOID IHTMLFiltersCollection;
    VOID IHTMLFiltersCollection;
    struct IHTMLFiltersCollection *operator=;
    struct IHTMLFiltersCollection *operator=;
};

typedef struct IHTMLFontElement {
    struct IDispatch IDispatch;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_face;
    HRESULT get_face;
    HRESULT put_size;
    HRESULT get_size;
    VOID IHTMLFontElement;
    VOID IHTMLFontElement;
    VOID IHTMLFontElement;
    struct IHTMLFontElement *operator=;
    struct IHTMLFontElement *operator=;
};

typedef struct IHTMLFontNamesCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLFontNamesCollection;
    VOID IHTMLFontNamesCollection;
    VOID IHTMLFontNamesCollection;
    struct IHTMLFontNamesCollection *operator=;
    struct IHTMLFontNamesCollection *operator=;
};

typedef struct IHTMLFontSizesCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT get_forFont;
    HRESULT item;
    VOID IHTMLFontSizesCollection;
    VOID IHTMLFontSizesCollection;
    VOID IHTMLFontSizesCollection;
    struct IHTMLFontSizesCollection *operator=;
    struct IHTMLFontSizesCollection *operator=;
};

typedef struct IHTMLFormElement {
    struct IDispatch IDispatch;
    HRESULT put_action;
    HRESULT get_action;
    HRESULT put_dir;
    HRESULT get_dir;
    HRESULT put_encoding;
    HRESULT get_encoding;
    HRESULT put_method;
    HRESULT get_method;
    HRESULT get_elements;
    HRESULT put_target;
    HRESULT get_target;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_onsubmit;
    HRESULT get_onsubmit;
    HRESULT put_onreset;
    HRESULT get_onreset;
    HRESULT submit;
    HRESULT reset;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    HRESULT tags;
    VOID IHTMLFormElement;
    VOID IHTMLFormElement;
    VOID IHTMLFormElement;
    struct IHTMLFormElement *operator=;
    struct IHTMLFormElement *operator=;
};

typedef struct IHTMLFormElement2 {
    struct IDispatch IDispatch;
    HRESULT put_acceptCharset;
    HRESULT get_acceptCharset;
    HRESULT urns;
    VOID IHTMLFormElement2;
    VOID IHTMLFormElement2;
    VOID IHTMLFormElement2;
    struct IHTMLFormElement2 *operator=;
    struct IHTMLFormElement2 *operator=;
};

typedef struct IHTMLFormElement3 {
    struct IDispatch IDispatch;
    HRESULT namedItem;
    VOID IHTMLFormElement3;
    VOID IHTMLFormElement3;
    VOID IHTMLFormElement3;
    struct IHTMLFormElement3 *operator=;
    struct IHTMLFormElement3 *operator=;
};

typedef struct IHTMLFormElement4 {
    struct IDispatch IDispatch;
    HRESULT put_action;
    HRESULT get_action;
    VOID IHTMLFormElement4;
    VOID IHTMLFormElement4;
    VOID IHTMLFormElement4;
    struct IHTMLFormElement4 *operator=;
    struct IHTMLFormElement4 *operator=;
};

typedef struct IHTMLFrameBase {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_frameBorder;
    HRESULT get_frameBorder;
    HRESULT put_frameSpacing;
    HRESULT get_frameSpacing;
    HRESULT put_marginWidth;
    HRESULT get_marginWidth;
    HRESULT put_marginHeight;
    HRESULT get_marginHeight;
    HRESULT put_noResize;
    HRESULT get_noResize;
    HRESULT put_scrolling;
    HRESULT get_scrolling;
    VOID IHTMLFrameBase;
    VOID IHTMLFrameBase;
    VOID IHTMLFrameBase;
    struct IHTMLFrameBase *operator=;
    struct IHTMLFrameBase *operator=;
};

typedef struct IHTMLFrameBase2 {
    struct IDispatch IDispatch;
    HRESULT get_contentWindow;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT get_readyState;
    HRESULT put_allowTransparency;
    HRESULT get_allowTransparency;
    VOID IHTMLFrameBase2;
    VOID IHTMLFrameBase2;
    VOID IHTMLFrameBase2;
    struct IHTMLFrameBase2 *operator=;
    struct IHTMLFrameBase2 *operator=;
};

typedef struct IHTMLFrameBase3 {
    struct IDispatch IDispatch;
    HRESULT put_longDesc;
    HRESULT get_longDesc;
    VOID IHTMLFrameBase3;
    VOID IHTMLFrameBase3;
    VOID IHTMLFrameBase3;
    struct IHTMLFrameBase3 *operator=;
    struct IHTMLFrameBase3 *operator=;
};

typedef struct IHTMLFrameElement {
    struct IDispatch IDispatch;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    VOID IHTMLFrameElement;
    VOID IHTMLFrameElement;
    VOID IHTMLFrameElement;
    struct IHTMLFrameElement *operator=;
    struct IHTMLFrameElement *operator=;
};

typedef struct IHTMLFrameElement2 {
    struct IDispatch IDispatch;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_width;
    HRESULT get_width;
    VOID IHTMLFrameElement2;
    VOID IHTMLFrameElement2;
    VOID IHTMLFrameElement2;
    struct IHTMLFrameElement2 *operator=;
    struct IHTMLFrameElement2 *operator=;
};

typedef struct IHTMLFrameElement3 {
    struct IDispatch IDispatch;
    HRESULT get_contentDocument;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_longDesc;
    HRESULT get_longDesc;
    HRESULT put_frameBorder;
    HRESULT get_frameBorder;
    VOID IHTMLFrameElement3;
    VOID IHTMLFrameElement3;
    VOID IHTMLFrameElement3;
    struct IHTMLFrameElement3 *operator=;
    struct IHTMLFrameElement3 *operator=;
};

typedef struct IHTMLFrameSetElement {
    struct IDispatch IDispatch;
    HRESULT put_rows;
    HRESULT get_rows;
    HRESULT put_cols;
    HRESULT get_cols;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_frameBorder;
    HRESULT get_frameBorder;
    HRESULT put_frameSpacing;
    HRESULT get_frameSpacing;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onunload;
    HRESULT get_onunload;
    HRESULT put_onbeforeunload;
    HRESULT get_onbeforeunload;
    VOID IHTMLFrameSetElement;
    VOID IHTMLFrameSetElement;
    VOID IHTMLFrameSetElement;
    struct IHTMLFrameSetElement *operator=;
    struct IHTMLFrameSetElement *operator=;
};

typedef struct IHTMLFrameSetElement2 {
    struct IDispatch IDispatch;
    HRESULT put_onbeforeprint;
    HRESULT get_onbeforeprint;
    HRESULT put_onafterprint;
    HRESULT get_onafterprint;
    VOID IHTMLFrameSetElement2;
    VOID IHTMLFrameSetElement2;
    VOID IHTMLFrameSetElement2;
    struct IHTMLFrameSetElement2 *operator=;
    struct IHTMLFrameSetElement2 *operator=;
};

typedef struct IHTMLFrameSetElement3 {
    struct IDispatch IDispatch;
    HRESULT put_onhashchange;
    HRESULT get_onhashchange;
    HRESULT put_onmessage;
    HRESULT get_onmessage;
    HRESULT put_onoffline;
    HRESULT get_onoffline;
    HRESULT put_ononline;
    HRESULT get_ononline;
    HRESULT put_onstorage;
    HRESULT get_onstorage;
    VOID IHTMLFrameSetElement3;
    VOID IHTMLFrameSetElement3;
    VOID IHTMLFrameSetElement3;
    struct IHTMLFrameSetElement3 *operator=;
    struct IHTMLFrameSetElement3 *operator=;
};

typedef struct IHTMLFramesCollection2 {
    struct IDispatch IDispatch;
    HRESULT item;
    HRESULT get_length;
    VOID IHTMLFramesCollection2;
    VOID IHTMLFramesCollection2;
    VOID IHTMLFramesCollection2;
    struct IHTMLFramesCollection2 *operator=;
    struct IHTMLFramesCollection2 *operator=;
};

typedef struct IHTMLGenericElement {
    struct IDispatch IDispatch;
    HRESULT get_recordset;
    HRESULT namedRecordset;
    VOID IHTMLGenericElement;
    VOID IHTMLGenericElement;
    VOID IHTMLGenericElement;
    struct IHTMLGenericElement *operator=;
    struct IHTMLGenericElement *operator=;
};

typedef struct IHTMLHRElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_noShade;
    HRESULT get_noShade;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_size;
    HRESULT get_size;
    VOID IHTMLHRElement;
    VOID IHTMLHRElement;
    VOID IHTMLHRElement;
    struct IHTMLHRElement *operator=;
    struct IHTMLHRElement *operator=;
};

typedef struct IHTMLHeadElement {
    struct IDispatch IDispatch;
    HRESULT put_profile;
    HRESULT get_profile;
    VOID IHTMLHeadElement;
    VOID IHTMLHeadElement;
    VOID IHTMLHeadElement;
    struct IHTMLHeadElement *operator=;
    struct IHTMLHeadElement *operator=;
};

typedef struct IHTMLHeadElement2 {
    struct IDispatch IDispatch;
    HRESULT put_profile;
    HRESULT get_profile;
    VOID IHTMLHeadElement2;
    VOID IHTMLHeadElement2;
    VOID IHTMLHeadElement2;
    struct IHTMLHeadElement2 *operator=;
    struct IHTMLHeadElement2 *operator=;
};

typedef struct IHTMLHeaderElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLHeaderElement;
    VOID IHTMLHeaderElement;
    VOID IHTMLHeaderElement;
    struct IHTMLHeaderElement *operator=;
    struct IHTMLHeaderElement *operator=;
};

typedef struct IHTMLHtmlElement {
    struct IDispatch IDispatch;
    HRESULT put_version;
    HRESULT get_version;
    VOID IHTMLHtmlElement;
    VOID IHTMLHtmlElement;
    VOID IHTMLHtmlElement;
    struct IHTMLHtmlElement *operator=;
    struct IHTMLHtmlElement *operator=;
};

typedef struct IHTMLIFrameElement {
    struct IDispatch IDispatch;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLIFrameElement;
    VOID IHTMLIFrameElement;
    VOID IHTMLIFrameElement;
    struct IHTMLIFrameElement *operator=;
    struct IHTMLIFrameElement *operator=;
};

typedef struct IHTMLIFrameElement2 {
    struct IDispatch IDispatch;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_width;
    HRESULT get_width;
    VOID IHTMLIFrameElement2;
    VOID IHTMLIFrameElement2;
    VOID IHTMLIFrameElement2;
    struct IHTMLIFrameElement2 *operator=;
    struct IHTMLIFrameElement2 *operator=;
};

typedef struct IHTMLIFrameElement3 {
    struct IDispatch IDispatch;
    HRESULT get_contentDocument;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_longDesc;
    HRESULT get_longDesc;
    HRESULT put_frameBorder;
    HRESULT get_frameBorder;
    VOID IHTMLIFrameElement3;
    VOID IHTMLIFrameElement3;
    VOID IHTMLIFrameElement3;
    struct IHTMLIFrameElement3 *operator=;
    struct IHTMLIFrameElement3 *operator=;
};

typedef struct IHTMLIPrintCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLIPrintCollection;
    VOID IHTMLIPrintCollection;
    VOID IHTMLIPrintCollection;
    struct IHTMLIPrintCollection *operator=;
    struct IHTMLIPrintCollection *operator=;
};

typedef struct IHTMLImageElementFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IHTMLImageElementFactory;
    VOID IHTMLImageElementFactory;
    VOID IHTMLImageElementFactory;
    struct IHTMLImageElementFactory *operator=;
    struct IHTMLImageElementFactory *operator=;
};

typedef struct IHTMLImgElement {
    struct IDispatch IDispatch;
    HRESULT put_isMap;
    HRESULT get_isMap;
    HRESULT put_useMap;
    HRESULT get_useMap;
    HRESULT get_mimeType;
    HRESULT get_fileSize;
    HRESULT get_fileCreatedDate;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_protocol;
    HRESULT get_href;
    HRESULT get_nameProp;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_lowsrc;
    HRESULT get_lowsrc;
    HRESULT put_vrml;
    HRESULT get_vrml;
    HRESULT put_dynsrc;
    HRESULT get_dynsrc;
    HRESULT get_readyState;
    HRESULT get_complete;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_start;
    HRESULT get_start;
    VOID IHTMLImgElement;
    VOID IHTMLImgElement;
    VOID IHTMLImgElement;
    struct IHTMLImgElement *operator=;
    struct IHTMLImgElement *operator=;
};

typedef struct IHTMLImgElement2 {
    struct IDispatch IDispatch;
    HRESULT put_longDesc;
    HRESULT get_longDesc;
    VOID IHTMLImgElement2;
    VOID IHTMLImgElement2;
    VOID IHTMLImgElement2;
    struct IHTMLImgElement2 *operator=;
    struct IHTMLImgElement2 *operator=;
};

typedef struct IHTMLImgElement3 {
    struct IDispatch IDispatch;
    HRESULT put_longDesc;
    HRESULT get_longDesc;
    HRESULT put_vrml;
    HRESULT get_vrml;
    HRESULT put_lowsrc;
    HRESULT get_lowsrc;
    HRESULT put_dynsrc;
    HRESULT get_dynsrc;
    VOID IHTMLImgElement3;
    VOID IHTMLImgElement3;
    VOID IHTMLImgElement3;
    struct IHTMLImgElement3 *operator=;
    struct IHTMLImgElement3 *operator=;
};

typedef struct IHTMLImgElement4 {
    struct IDispatch IDispatch;
    HRESULT get_naturalWidth;
    HRESULT get_naturalHeight;
    VOID IHTMLImgElement4;
    VOID IHTMLImgElement4;
    VOID IHTMLImgElement4;
    struct IHTMLImgElement4 *operator=;
    struct IHTMLImgElement4 *operator=;
};

typedef struct IHTMLInputButtonElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT createTextRange;
    VOID IHTMLInputButtonElement;
    VOID IHTMLInputButtonElement;
    VOID IHTMLInputButtonElement;
    struct IHTMLInputButtonElement *operator=;
    struct IHTMLInputButtonElement *operator=;
};

typedef struct IHTMLInputElement {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT put_size;
    HRESULT get_size;
    HRESULT put_maxLength;
    HRESULT get_maxLength;
    HRESULT select;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_defaultValue;
    HRESULT get_defaultValue;
    HRESULT put_readOnly;
    HRESULT get_readOnly;
    HRESULT createTextRange;
    HRESULT put_indeterminate;
    HRESULT get_indeterminate;
    HRESULT put_defaultChecked;
    HRESULT get_defaultChecked;
    HRESULT put_checked;
    HRESULT get_checked;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_lowsrc;
    HRESULT get_lowsrc;
    HRESULT put_vrml;
    HRESULT get_vrml;
    HRESULT put_dynsrc;
    HRESULT get_dynsrc;
    HRESULT get_readyState;
    HRESULT get_complete;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_start;
    HRESULT get_start;
    VOID IHTMLInputElement;
    VOID IHTMLInputElement;
    VOID IHTMLInputElement;
    struct IHTMLInputElement *operator=;
    struct IHTMLInputElement *operator=;
};

typedef struct IHTMLInputElement2 {
    struct IDispatch IDispatch;
    HRESULT put_accept;
    HRESULT get_accept;
    HRESULT put_useMap;
    HRESULT get_useMap;
    VOID IHTMLInputElement2;
    VOID IHTMLInputElement2;
    VOID IHTMLInputElement2;
    struct IHTMLInputElement2 *operator=;
    struct IHTMLInputElement2 *operator=;
};

typedef struct IHTMLInputElement3 {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_lowsrc;
    HRESULT get_lowsrc;
    HRESULT put_vrml;
    HRESULT get_vrml;
    HRESULT put_dynsrc;
    HRESULT get_dynsrc;
    VOID IHTMLInputElement3;
    VOID IHTMLInputElement3;
    VOID IHTMLInputElement3;
    struct IHTMLInputElement3 *operator=;
    struct IHTMLInputElement3 *operator=;
};

typedef struct IHTMLInputFileElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT put_size;
    HRESULT get_size;
    HRESULT put_maxLength;
    HRESULT get_maxLength;
    HRESULT select;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_value;
    HRESULT get_value;
    VOID IHTMLInputFileElement;
    VOID IHTMLInputFileElement;
    VOID IHTMLInputFileElement;
    struct IHTMLInputFileElement *operator=;
    struct IHTMLInputFileElement *operator=;
};

typedef struct IHTMLInputHiddenElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT createTextRange;
    VOID IHTMLInputHiddenElement;
    VOID IHTMLInputHiddenElement;
    VOID IHTMLInputHiddenElement;
    struct IHTMLInputHiddenElement *operator=;
    struct IHTMLInputHiddenElement *operator=;
};

typedef struct IHTMLInputImage {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_lowsrc;
    HRESULT get_lowsrc;
    HRESULT put_vrml;
    HRESULT get_vrml;
    HRESULT put_dynsrc;
    HRESULT get_dynsrc;
    HRESULT get_readyState;
    HRESULT get_complete;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_start;
    HRESULT get_start;
    VOID IHTMLInputImage;
    VOID IHTMLInputImage;
    VOID IHTMLInputImage;
    struct IHTMLInputImage *operator=;
    struct IHTMLInputImage *operator=;
};

typedef struct IHTMLInputRangeElement {
    struct IDispatch IDispatch;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_type;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_min;
    HRESULT get_min;
    HRESULT put_max;
    HRESULT get_max;
    HRESULT put_step;
    HRESULT get_step;
    HRESULT put_valueAsNumber;
    HRESULT get_valueAsNumber;
    HRESULT stepUp;
    HRESULT stepDown;
    VOID IHTMLInputRangeElement;
    VOID IHTMLInputRangeElement;
    VOID IHTMLInputRangeElement;
    struct IHTMLInputRangeElement *operator=;
    struct IHTMLInputRangeElement *operator=;
};

typedef struct IHTMLInputTextElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT put_defaultValue;
    HRESULT get_defaultValue;
    HRESULT put_size;
    HRESULT get_size;
    HRESULT put_maxLength;
    HRESULT get_maxLength;
    HRESULT select;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_readOnly;
    HRESULT get_readOnly;
    HRESULT createTextRange;
    VOID IHTMLInputTextElement;
    VOID IHTMLInputTextElement;
    VOID IHTMLInputTextElement;
    struct IHTMLInputTextElement *operator=;
    struct IHTMLInputTextElement *operator=;
};

typedef struct IHTMLInputTextElement2 {
    struct IDispatch IDispatch;
    HRESULT put_selectionStart;
    HRESULT get_selectionStart;
    HRESULT put_selectionEnd;
    HRESULT get_selectionEnd;
    HRESULT setSelectionRange;
    VOID IHTMLInputTextElement2;
    VOID IHTMLInputTextElement2;
    VOID IHTMLInputTextElement2;
    struct IHTMLInputTextElement2 *operator=;
    struct IHTMLInputTextElement2 *operator=;
};

typedef struct IHTMLIsIndexElement {
    struct IDispatch IDispatch;
    HRESULT put_prompt;
    HRESULT get_prompt;
    HRESULT put_action;
    HRESULT get_action;
    VOID IHTMLIsIndexElement;
    VOID IHTMLIsIndexElement;
    VOID IHTMLIsIndexElement;
    struct IHTMLIsIndexElement *operator=;
    struct IHTMLIsIndexElement *operator=;
};

typedef struct IHTMLIsIndexElement2 {
    struct IDispatch IDispatch;
    HRESULT get_form;
    VOID IHTMLIsIndexElement2;
    VOID IHTMLIsIndexElement2;
    VOID IHTMLIsIndexElement2;
    struct IHTMLIsIndexElement2 *operator=;
    struct IHTMLIsIndexElement2 *operator=;
};

typedef struct IHTMLLIElement {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    VOID IHTMLLIElement;
    VOID IHTMLLIElement;
    VOID IHTMLLIElement;
    struct IHTMLLIElement *operator=;
    struct IHTMLLIElement *operator=;
};

typedef struct IHTMLLabelElement {
    struct IDispatch IDispatch;
    HRESULT put_htmlFor;
    HRESULT get_htmlFor;
    HRESULT put_accessKey;
    HRESULT get_accessKey;
    VOID IHTMLLabelElement;
    VOID IHTMLLabelElement;
    VOID IHTMLLabelElement;
    struct IHTMLLabelElement *operator=;
    struct IHTMLLabelElement *operator=;
};

typedef struct IHTMLLabelElement2 {
    struct IDispatch IDispatch;
    HRESULT get_form;
    VOID IHTMLLabelElement2;
    VOID IHTMLLabelElement2;
    VOID IHTMLLabelElement2;
    struct IHTMLLabelElement2 *operator=;
    struct IHTMLLabelElement2 *operator=;
};

typedef struct IHTMLLegendElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLLegendElement;
    VOID IHTMLLegendElement;
    VOID IHTMLLegendElement;
    struct IHTMLLegendElement *operator=;
    struct IHTMLLegendElement *operator=;
};

typedef struct IHTMLLegendElement2 {
    struct IDispatch IDispatch;
    HRESULT get_form;
    VOID IHTMLLegendElement2;
    VOID IHTMLLegendElement2;
    VOID IHTMLLegendElement2;
    struct IHTMLLegendElement2 *operator=;
    struct IHTMLLegendElement2 *operator=;
};

typedef struct IHTMLLinkElement {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT put_rel;
    HRESULT get_rel;
    HRESULT put_rev;
    HRESULT get_rev;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT get_styleSheet;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT put_media;
    HRESULT get_media;
    VOID IHTMLLinkElement;
    VOID IHTMLLinkElement;
    VOID IHTMLLinkElement;
    struct IHTMLLinkElement *operator=;
    struct IHTMLLinkElement *operator=;
};

typedef struct IHTMLLinkElement2 {
    struct IDispatch IDispatch;
    HRESULT put_target;
    HRESULT get_target;
    VOID IHTMLLinkElement2;
    VOID IHTMLLinkElement2;
    VOID IHTMLLinkElement2;
    struct IHTMLLinkElement2 *operator=;
    struct IHTMLLinkElement2 *operator=;
};

typedef struct IHTMLLinkElement3 {
    struct IDispatch IDispatch;
    HRESULT put_charset;
    HRESULT get_charset;
    HRESULT put_hreflang;
    HRESULT get_hreflang;
    VOID IHTMLLinkElement3;
    VOID IHTMLLinkElement3;
    VOID IHTMLLinkElement3;
    struct IHTMLLinkElement3 *operator=;
    struct IHTMLLinkElement3 *operator=;
};

typedef struct IHTMLLinkElement4 {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    VOID IHTMLLinkElement4;
    VOID IHTMLLinkElement4;
    VOID IHTMLLinkElement4;
    struct IHTMLLinkElement4 *operator=;
    struct IHTMLLinkElement4 *operator=;
};

typedef struct IHTMLLinkElement5 {
    struct IDispatch IDispatch;
    HRESULT get_sheet;
    VOID IHTMLLinkElement5;
    VOID IHTMLLinkElement5;
    VOID IHTMLLinkElement5;
    struct IHTMLLinkElement5 *operator=;
    struct IHTMLLinkElement5 *operator=;
};

typedef struct IHTMLListElement {
    struct IDispatch IDispatch;
    VOID IHTMLListElement;
    VOID IHTMLListElement;
    VOID IHTMLListElement;
    struct IHTMLListElement *operator=;
    struct IHTMLListElement *operator=;
};

typedef struct IHTMLListElement2 {
    struct IDispatch IDispatch;
    HRESULT put_compact;
    HRESULT get_compact;
    VOID IHTMLListElement2;
    VOID IHTMLListElement2;
    VOID IHTMLListElement2;
    struct IHTMLListElement2 *operator=;
    struct IHTMLListElement2 *operator=;
};

typedef struct IHTMLLocation {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT put_protocol;
    HRESULT get_protocol;
    HRESULT put_host;
    HRESULT get_host;
    HRESULT put_hostname;
    HRESULT get_hostname;
    HRESULT put_port;
    HRESULT get_port;
    HRESULT put_pathname;
    HRESULT get_pathname;
    HRESULT put_search;
    HRESULT get_search;
    HRESULT put_hash;
    HRESULT get_hash;
    HRESULT reload;
    HRESULT replace;
    HRESULT assign;
    HRESULT toString;
    VOID IHTMLLocation;
    VOID IHTMLLocation;
    VOID IHTMLLocation;
    struct IHTMLLocation *operator=;
    struct IHTMLLocation *operator=;
};

typedef struct IHTMLMSCSSKeyframeRule {
    struct IDispatch IDispatch;
    HRESULT put_keyText;
    HRESULT get_keyText;
    HRESULT get_style;
    VOID IHTMLMSCSSKeyframeRule;
    VOID IHTMLMSCSSKeyframeRule;
    VOID IHTMLMSCSSKeyframeRule;
    struct IHTMLMSCSSKeyframeRule *operator=;
    struct IHTMLMSCSSKeyframeRule *operator=;
};

typedef struct IHTMLMSCSSKeyframesRule {
    struct IDispatch IDispatch;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT get_cssRules;
    HRESULT appendRule;
    HRESULT deleteRule;
    HRESULT findRule;
    VOID IHTMLMSCSSKeyframesRule;
    VOID IHTMLMSCSSKeyframesRule;
    VOID IHTMLMSCSSKeyframesRule;
    struct IHTMLMSCSSKeyframesRule *operator=;
    struct IHTMLMSCSSKeyframesRule *operator=;
};

typedef struct IHTMLMSImgElement {
    struct IDispatch IDispatch;
    HRESULT put_msPlayToDisabled;
    HRESULT get_msPlayToDisabled;
    HRESULT put_msPlayToPrimary;
    HRESULT get_msPlayToPrimary;
    VOID IHTMLMSImgElement;
    VOID IHTMLMSImgElement;
    VOID IHTMLMSImgElement;
    struct IHTMLMSImgElement *operator=;
    struct IHTMLMSImgElement *operator=;
};

typedef struct IHTMLMSMediaElement {
    struct IDispatch IDispatch;
    HRESULT put_msPlayToDisabled;
    HRESULT get_msPlayToDisabled;
    HRESULT put_msPlayToPrimary;
    HRESULT get_msPlayToPrimary;
    VOID IHTMLMSMediaElement;
    VOID IHTMLMSMediaElement;
    VOID IHTMLMSMediaElement;
    struct IHTMLMSMediaElement *operator=;
    struct IHTMLMSMediaElement *operator=;
};

typedef struct IHTMLMapElement {
    struct IDispatch IDispatch;
    HRESULT get_areas;
    HRESULT put_name;
    HRESULT get_name;
    VOID IHTMLMapElement;
    VOID IHTMLMapElement;
    VOID IHTMLMapElement;
    struct IHTMLMapElement *operator=;
    struct IHTMLMapElement *operator=;
};

typedef struct IHTMLMarqueeElement {
    struct IDispatch IDispatch;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_scrollDelay;
    HRESULT get_scrollDelay;
    HRESULT put_direction;
    HRESULT get_direction;
    HRESULT put_behavior;
    HRESULT get_behavior;
    HRESULT put_scrollAmount;
    HRESULT get_scrollAmount;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    HRESULT put_onfinish;
    HRESULT get_onfinish;
    HRESULT put_onstart;
    HRESULT get_onstart;
    HRESULT put_onbounce;
    HRESULT get_onbounce;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_trueSpeed;
    HRESULT get_trueSpeed;
    HRESULT start;
    HRESULT stop;
    VOID IHTMLMarqueeElement;
    VOID IHTMLMarqueeElement;
    VOID IHTMLMarqueeElement;
    struct IHTMLMarqueeElement *operator=;
    struct IHTMLMarqueeElement *operator=;
};

typedef struct IHTMLMediaElement {
    struct IDispatch IDispatch;
    HRESULT get_error;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT get_currentSrc;
    HRESULT get_networkState;
    HRESULT put_preload;
    HRESULT get_preload;
    HRESULT get_buffered;
    HRESULT load;
    HRESULT canPlayType;
    HRESULT get_seeking;
    HRESULT put_currentTime;
    HRESULT get_currentTime;
    HRESULT get_initialTime;
    HRESULT get_duration;
    HRESULT get_paused;
    HRESULT put_defaultPlaybackRate;
    HRESULT get_defaultPlaybackRate;
    HRESULT put_playbackRate;
    HRESULT get_playbackRate;
    HRESULT get_played;
    HRESULT get_seekable;
    HRESULT get_ended;
    HRESULT put_autoplay;
    HRESULT get_autoplay;
    HRESULT put_loop;
    HRESULT get_loop;
    HRESULT play;
    HRESULT pause;
    HRESULT put_controls;
    HRESULT get_controls;
    HRESULT put_volume;
    HRESULT get_volume;
    HRESULT put_muted;
    HRESULT get_muted;
    HRESULT put_autobuffer;
    HRESULT get_autobuffer;
    VOID IHTMLMediaElement;
    VOID IHTMLMediaElement;
    VOID IHTMLMediaElement;
    struct IHTMLMediaElement *operator=;
    struct IHTMLMediaElement *operator=;
};

typedef struct IHTMLMediaElement2 {
    struct IDispatch IDispatch;
    HRESULT put_currentTimeDouble;
    HRESULT get_currentTimeDouble;
    HRESULT get_initialTimeDouble;
    HRESULT get_durationDouble;
    HRESULT put_defaultPlaybackRateDouble;
    HRESULT get_defaultPlaybackRateDouble;
    HRESULT put_playbackRateDouble;
    HRESULT get_playbackRateDouble;
    HRESULT put_volumeDouble;
    HRESULT get_volumeDouble;
    VOID IHTMLMediaElement2;
    VOID IHTMLMediaElement2;
    VOID IHTMLMediaElement2;
    struct IHTMLMediaElement2 *operator=;
    struct IHTMLMediaElement2 *operator=;
};

typedef struct IHTMLMediaError {
    struct IDispatch IDispatch;
    HRESULT get_code;
    VOID IHTMLMediaError;
    VOID IHTMLMediaError;
    VOID IHTMLMediaError;
    struct IHTMLMediaError *operator=;
    struct IHTMLMediaError *operator=;
};

typedef struct IHTMLMetaElement {
    struct IDispatch IDispatch;
    HRESULT put_httpEquiv;
    HRESULT get_httpEquiv;
    HRESULT put_content;
    HRESULT get_content;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_url;
    HRESULT get_url;
    HRESULT put_charset;
    HRESULT get_charset;
    VOID IHTMLMetaElement;
    VOID IHTMLMetaElement;
    VOID IHTMLMetaElement;
    struct IHTMLMetaElement *operator=;
    struct IHTMLMetaElement *operator=;
};

typedef struct IHTMLMetaElement2 {
    struct IDispatch IDispatch;
    HRESULT put_scheme;
    HRESULT get_scheme;
    VOID IHTMLMetaElement2;
    VOID IHTMLMetaElement2;
    VOID IHTMLMetaElement2;
    struct IHTMLMetaElement2 *operator=;
    struct IHTMLMetaElement2 *operator=;
};

typedef struct IHTMLMetaElement3 {
    struct IDispatch IDispatch;
    HRESULT put_url;
    HRESULT get_url;
    VOID IHTMLMetaElement3;
    VOID IHTMLMetaElement3;
    VOID IHTMLMetaElement3;
    struct IHTMLMetaElement3 *operator=;
    struct IHTMLMetaElement3 *operator=;
};

typedef struct IHTMLMimeTypesCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    VOID IHTMLMimeTypesCollection;
    VOID IHTMLMimeTypesCollection;
    VOID IHTMLMimeTypesCollection;
    struct IHTMLMimeTypesCollection *operator=;
    struct IHTMLMimeTypesCollection *operator=;
};

typedef struct IHTMLModelessInit {
    struct IDispatch IDispatch;
    HRESULT get_parameters;
    HRESULT get_optionString;
    HRESULT get_moniker;
    HRESULT get_document;
    VOID IHTMLModelessInit;
    VOID IHTMLModelessInit;
    VOID IHTMLModelessInit;
    struct IHTMLModelessInit *operator=;
    struct IHTMLModelessInit *operator=;
};

typedef struct IHTMLNamespace {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT get_urn;
    HRESULT get_tagNames;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT doImport;
    HRESULT attachEvent;
    HRESULT detachEvent;
    VOID IHTMLNamespace;
    VOID IHTMLNamespace;
    VOID IHTMLNamespace;
    struct IHTMLNamespace *operator=;
    struct IHTMLNamespace *operator=;
};

typedef struct IHTMLNamespaceCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    HRESULT add;
    VOID IHTMLNamespaceCollection;
    VOID IHTMLNamespaceCollection;
    VOID IHTMLNamespaceCollection;
    struct IHTMLNamespaceCollection *operator=;
    struct IHTMLNamespaceCollection *operator=;
};

typedef struct IHTMLNextIdElement {
    struct IDispatch IDispatch;
    HRESULT put_n;
    HRESULT get_n;
    VOID IHTMLNextIdElement;
    VOID IHTMLNextIdElement;
    VOID IHTMLNextIdElement;
    struct IHTMLNextIdElement *operator=;
    struct IHTMLNextIdElement *operator=;
};

typedef struct IHTMLNoShowElement {
    struct IDispatch IDispatch;
    VOID IHTMLNoShowElement;
    VOID IHTMLNoShowElement;
    VOID IHTMLNoShowElement;
    struct IHTMLNoShowElement *operator=;
    struct IHTMLNoShowElement *operator=;
};

typedef struct IHTMLOListElement {
    struct IDispatch IDispatch;
    HRESULT put_compact;
    HRESULT get_compact;
    HRESULT put_start;
    HRESULT get_start;
    HRESULT put_type;
    HRESULT get_type;
    VOID IHTMLOListElement;
    VOID IHTMLOListElement;
    VOID IHTMLOListElement;
    struct IHTMLOListElement *operator=;
    struct IHTMLOListElement *operator=;
};

typedef struct IHTMLObjectElement {
    struct IDispatch IDispatch;
    HRESULT get_object;
    HRESULT get_classid;
    HRESULT get_data;
    HRESULT putref_recordset;
    HRESULT get_recordset;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_codeBase;
    HRESULT get_codeBase;
    HRESULT put_codeType;
    HRESULT get_codeType;
    HRESULT put_code;
    HRESULT get_code;
    HRESULT get_BaseHref;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT get_form;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_altHtml;
    HRESULT get_altHtml;
    HRESULT put_vspace;
    HRESULT get_vspace;
    HRESULT put_hspace;
    HRESULT get_hspace;
    VOID IHTMLObjectElement;
    VOID IHTMLObjectElement;
    VOID IHTMLObjectElement;
    struct IHTMLObjectElement *operator=;
    struct IHTMLObjectElement *operator=;
};

typedef struct IHTMLObjectElement2 {
    struct IDispatch IDispatch;
    HRESULT namedRecordset;
    HRESULT put_classid;
    HRESULT get_classid;
    HRESULT put_data;
    HRESULT get_data;
    VOID IHTMLObjectElement2;
    VOID IHTMLObjectElement2;
    VOID IHTMLObjectElement2;
    struct IHTMLObjectElement2 *operator=;
    struct IHTMLObjectElement2 *operator=;
};

typedef struct IHTMLObjectElement3 {
    struct IDispatch IDispatch;
    HRESULT put_archive;
    HRESULT get_archive;
    HRESULT put_alt;
    HRESULT get_alt;
    HRESULT put_declare;
    HRESULT get_declare;
    HRESULT put_standby;
    HRESULT get_standby;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_useMap;
    HRESULT get_useMap;
    VOID IHTMLObjectElement3;
    VOID IHTMLObjectElement3;
    VOID IHTMLObjectElement3;
    struct IHTMLObjectElement3 *operator=;
    struct IHTMLObjectElement3 *operator=;
};

typedef struct IHTMLObjectElement4 {
    struct IDispatch IDispatch;
    HRESULT get_contentDocument;
    HRESULT put_codeBase;
    HRESULT get_codeBase;
    HRESULT put_data;
    HRESULT get_data;
    VOID IHTMLObjectElement4;
    VOID IHTMLObjectElement4;
    VOID IHTMLObjectElement4;
    struct IHTMLObjectElement4 *operator=;
    struct IHTMLObjectElement4 *operator=;
};

typedef struct IHTMLObjectElement5 {
    struct IDispatch IDispatch;
    HRESULT put_object;
    HRESULT get_object;
    VOID IHTMLObjectElement5;
    VOID IHTMLObjectElement5;
    VOID IHTMLObjectElement5;
    struct IHTMLObjectElement5 *operator=;
    struct IHTMLObjectElement5 *operator=;
};

typedef struct IHTMLOpsProfile {
    struct IDispatch IDispatch;
    HRESULT addRequest;
    HRESULT clearRequest;
    HRESULT doRequest;
    HRESULT getAttribute;
    HRESULT setAttribute;
    HRESULT commitChanges;
    HRESULT addReadRequest;
    HRESULT doReadRequest;
    HRESULT doWriteRequest;
    VOID IHTMLOpsProfile;
    VOID IHTMLOpsProfile;
    VOID IHTMLOpsProfile;
    struct IHTMLOpsProfile *operator=;
    struct IHTMLOpsProfile *operator=;
};

typedef struct IHTMLOptionButtonElement {
    struct IDispatch IDispatch;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT get_type;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_checked;
    HRESULT get_checked;
    HRESULT put_defaultChecked;
    HRESULT get_defaultChecked;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_indeterminate;
    HRESULT get_indeterminate;
    HRESULT get_form;
    VOID IHTMLOptionButtonElement;
    VOID IHTMLOptionButtonElement;
    VOID IHTMLOptionButtonElement;
    struct IHTMLOptionButtonElement *operator=;
    struct IHTMLOptionButtonElement *operator=;
};

typedef struct IHTMLOptionElement {
    struct IDispatch IDispatch;
    HRESULT put_selected;
    HRESULT get_selected;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_defaultSelected;
    HRESULT get_defaultSelected;
    HRESULT put_index;
    HRESULT get_index;
    HRESULT put_text;
    HRESULT get_text;
    HRESULT get_form;
    VOID IHTMLOptionElement;
    VOID IHTMLOptionElement;
    VOID IHTMLOptionElement;
    struct IHTMLOptionElement *operator=;
    struct IHTMLOptionElement *operator=;
};

typedef struct IHTMLOptionElement3 {
    struct IDispatch IDispatch;
    HRESULT put_label;
    HRESULT get_label;
    VOID IHTMLOptionElement3;
    VOID IHTMLOptionElement3;
    VOID IHTMLOptionElement3;
    struct IHTMLOptionElement3 *operator=;
    struct IHTMLOptionElement3 *operator=;
};

typedef struct IHTMLOptionElement4 {
    struct IDispatch IDispatch;
    HRESULT put_value;
    HRESULT get_value;
    VOID IHTMLOptionElement4;
    VOID IHTMLOptionElement4;
    VOID IHTMLOptionElement4;
    struct IHTMLOptionElement4 *operator=;
    struct IHTMLOptionElement4 *operator=;
};

typedef struct IHTMLOptionElementFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IHTMLOptionElementFactory;
    VOID IHTMLOptionElementFactory;
    VOID IHTMLOptionElementFactory;
    struct IHTMLOptionElementFactory *operator=;
    struct IHTMLOptionElementFactory *operator=;
};

typedef struct IHTMLOptionsHolder {
    struct IDispatch IDispatch;
    HRESULT get_document;
    HRESULT get_fonts;
    HRESULT put_execArg;
    HRESULT get_execArg;
    HRESULT put_errorLine;
    HRESULT get_errorLine;
    HRESULT put_errorCharacter;
    HRESULT get_errorCharacter;
    HRESULT put_errorCode;
    HRESULT get_errorCode;
    HRESULT put_errorMessage;
    HRESULT get_errorMessage;
    HRESULT put_errorDebug;
    HRESULT get_errorDebug;
    HRESULT get_unsecuredWindowOfDocument;
    HRESULT put_findText;
    HRESULT get_findText;
    HRESULT put_anythingAfterFrameset;
    HRESULT get_anythingAfterFrameset;
    HRESULT sizes;
    HRESULT openfiledlg;
    HRESULT savefiledlg;
    HRESULT choosecolordlg;
    HRESULT showSecurityInfo;
    HRESULT isApartmentModel;
    HRESULT getCharset;
    HRESULT get_secureConnectionInfo;
    VOID IHTMLOptionsHolder;
    VOID IHTMLOptionsHolder;
    VOID IHTMLOptionsHolder;
    struct IHTMLOptionsHolder *operator=;
    struct IHTMLOptionsHolder *operator=;
};

typedef struct IHTMLPaintSite {
    struct IUnknown IUnknown;
    HRESULT InvalidatePainterInfo;
    HRESULT InvalidateRect;
    HRESULT InvalidateRegion;
    HRESULT GetDrawInfo;
    HRESULT TransformGlobalToLocal;
    HRESULT TransformLocalToGlobal;
    HRESULT GetHitTestCookie;
    VOID IHTMLPaintSite;
    VOID IHTMLPaintSite;
    VOID IHTMLPaintSite;
    struct IHTMLPaintSite *operator=;
    struct IHTMLPaintSite *operator=;
};

typedef struct IHTMLPainter {
    struct IUnknown IUnknown;
    HRESULT Draw;
    HRESULT OnResize;
    HRESULT GetPainterInfo;
    HRESULT HitTestPoint;
    VOID IHTMLPainter;
    VOID IHTMLPainter;
    VOID IHTMLPainter;
    struct IHTMLPainter *operator=;
    struct IHTMLPainter *operator=;
};

typedef struct IHTMLPainterEventInfo {
    struct IUnknown IUnknown;
    HRESULT GetEventInfoFlags;
    HRESULT GetEventTarget;
    HRESULT SetCursor;
    HRESULT StringFromPartID;
    VOID IHTMLPainterEventInfo;
    VOID IHTMLPainterEventInfo;
    VOID IHTMLPainterEventInfo;
    struct IHTMLPainterEventInfo *operator=;
    struct IHTMLPainterEventInfo *operator=;
};

typedef struct IHTMLPainterOverlay {
    struct IUnknown IUnknown;
    HRESULT OnMove;
    VOID IHTMLPainterOverlay;
    VOID IHTMLPainterOverlay;
    VOID IHTMLPainterOverlay;
    struct IHTMLPainterOverlay *operator=;
    struct IHTMLPainterOverlay *operator=;
};

typedef struct IHTMLParaElement {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLParaElement;
    VOID IHTMLParaElement;
    VOID IHTMLParaElement;
    struct IHTMLParaElement *operator=;
    struct IHTMLParaElement *operator=;
};

typedef struct IHTMLParamElement {
    struct IDispatch IDispatch;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_valueType;
    HRESULT get_valueType;
    VOID IHTMLParamElement;
    VOID IHTMLParamElement;
    VOID IHTMLParamElement;
    struct IHTMLParamElement *operator=;
    struct IHTMLParamElement *operator=;
};

typedef struct IHTMLParamElement2 {
    struct IDispatch IDispatch;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_valueType;
    HRESULT get_valueType;
    VOID IHTMLParamElement2;
    VOID IHTMLParamElement2;
    VOID IHTMLParamElement2;
    struct IHTMLParamElement2 *operator=;
    struct IHTMLParamElement2 *operator=;
};

typedef struct IHTMLPerformance {
    struct IDispatch IDispatch;
    HRESULT get_navigation;
    HRESULT get_timing;
    HRESULT toString;
    HRESULT toJSON;
    VOID IHTMLPerformance;
    VOID IHTMLPerformance;
    VOID IHTMLPerformance;
    struct IHTMLPerformance *operator=;
    struct IHTMLPerformance *operator=;
};

typedef struct IHTMLPerformanceNavigation {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT get_redirectCount;
    HRESULT toString;
    HRESULT toJSON;
    VOID IHTMLPerformanceNavigation;
    VOID IHTMLPerformanceNavigation;
    VOID IHTMLPerformanceNavigation;
    struct IHTMLPerformanceNavigation *operator=;
    struct IHTMLPerformanceNavigation *operator=;
};

typedef struct IHTMLPerformanceTiming {
    struct IDispatch IDispatch;
    HRESULT get_navigationStart;
    HRESULT get_unloadEventStart;
    HRESULT get_unloadEventEnd;
    HRESULT get_redirectStart;
    HRESULT get_redirectEnd;
    HRESULT get_fetchStart;
    HRESULT get_domainLookupStart;
    HRESULT get_domainLookupEnd;
    HRESULT get_connectStart;
    HRESULT get_connectEnd;
    HRESULT get_requestStart;
    HRESULT get_responseStart;
    HRESULT get_responseEnd;
    HRESULT get_domLoading;
    HRESULT get_domInteractive;
    HRESULT get_domContentLoadedEventStart;
    HRESULT get_domContentLoadedEventEnd;
    HRESULT get_domComplete;
    HRESULT get_loadEventStart;
    HRESULT get_loadEventEnd;
    HRESULT get_msFirstPaint;
    HRESULT toString;
    HRESULT toJSON;
    VOID IHTMLPerformanceTiming;
    VOID IHTMLPerformanceTiming;
    VOID IHTMLPerformanceTiming;
    struct IHTMLPerformanceTiming *operator=;
    struct IHTMLPerformanceTiming *operator=;
};

typedef struct IHTMLPhraseElement {
    struct IDispatch IDispatch;
    VOID IHTMLPhraseElement;
    VOID IHTMLPhraseElement;
    VOID IHTMLPhraseElement;
    struct IHTMLPhraseElement *operator=;
    struct IHTMLPhraseElement *operator=;
};

typedef struct IHTMLPhraseElement2 {
    struct IDispatch IDispatch;
    HRESULT put_cite;
    HRESULT get_cite;
    HRESULT put_dateTime;
    HRESULT get_dateTime;
    VOID IHTMLPhraseElement2;
    VOID IHTMLPhraseElement2;
    VOID IHTMLPhraseElement2;
    struct IHTMLPhraseElement2 *operator=;
    struct IHTMLPhraseElement2 *operator=;
};

typedef struct IHTMLPhraseElement3 {
    struct IDispatch IDispatch;
    HRESULT put_cite;
    HRESULT get_cite;
    VOID IHTMLPhraseElement3;
    VOID IHTMLPhraseElement3;
    VOID IHTMLPhraseElement3;
    struct IHTMLPhraseElement3 *operator=;
    struct IHTMLPhraseElement3 *operator=;
};

typedef struct IHTMLPluginsCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT refresh;
    VOID IHTMLPluginsCollection;
    VOID IHTMLPluginsCollection;
    VOID IHTMLPluginsCollection;
    struct IHTMLPluginsCollection *operator=;
    struct IHTMLPluginsCollection *operator=;
};

typedef struct IHTMLPopup {
    struct IDispatch IDispatch;
    HRESULT show;
    HRESULT hide;
    HRESULT get_document;
    HRESULT get_isOpen;
    VOID IHTMLPopup;
    VOID IHTMLPopup;
    VOID IHTMLPopup;
    struct IHTMLPopup *operator=;
    struct IHTMLPopup *operator=;
};

typedef struct IHTMLProgressElement {
    struct IDispatch IDispatch;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_max;
    HRESULT get_max;
    HRESULT get_position;
    HRESULT get_form;
    VOID IHTMLProgressElement;
    VOID IHTMLProgressElement;
    VOID IHTMLProgressElement;
    struct IHTMLProgressElement *operator=;
    struct IHTMLProgressElement *operator=;
};

typedef struct IHTMLRect {
    struct IDispatch IDispatch;
    HRESULT put_left;
    HRESULT get_left;
    HRESULT put_top;
    HRESULT get_top;
    HRESULT put_right;
    HRESULT get_right;
    HRESULT put_bottom;
    HRESULT get_bottom;
    VOID IHTMLRect;
    VOID IHTMLRect;
    VOID IHTMLRect;
    struct IHTMLRect *operator=;
    struct IHTMLRect *operator=;
};

typedef struct IHTMLRect2 {
    struct IDispatch IDispatch;
    HRESULT get_width;
    HRESULT get_height;
    VOID IHTMLRect2;
    VOID IHTMLRect2;
    VOID IHTMLRect2;
    struct IHTMLRect2 *operator=;
    struct IHTMLRect2 *operator=;
};

typedef struct IHTMLRectCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLRectCollection;
    VOID IHTMLRectCollection;
    VOID IHTMLRectCollection;
    struct IHTMLRectCollection *operator=;
    struct IHTMLRectCollection *operator=;
};

typedef struct IHTMLRenderStyle {
    struct IDispatch IDispatch;
    HRESULT put_textLineThroughStyle;
    HRESULT get_textLineThroughStyle;
    HRESULT put_textUnderlineStyle;
    HRESULT get_textUnderlineStyle;
    HRESULT put_textEffect;
    HRESULT get_textEffect;
    HRESULT put_textColor;
    HRESULT get_textColor;
    HRESULT put_textBackgroundColor;
    HRESULT get_textBackgroundColor;
    HRESULT put_textDecorationColor;
    HRESULT get_textDecorationColor;
    HRESULT put_renderingPriority;
    HRESULT get_renderingPriority;
    HRESULT put_defaultTextSelection;
    HRESULT get_defaultTextSelection;
    HRESULT put_textDecoration;
    HRESULT get_textDecoration;
    VOID IHTMLRenderStyle;
    VOID IHTMLRenderStyle;
    VOID IHTMLRenderStyle;
    struct IHTMLRenderStyle *operator=;
    struct IHTMLRenderStyle *operator=;
};

typedef struct IHTMLRuleStyle {
    struct IDispatch IDispatch;
    HRESULT put_fontFamily;
    HRESULT get_fontFamily;
    HRESULT put_fontStyle;
    HRESULT get_fontStyle;
    HRESULT put_fontVariant;
    HRESULT get_fontVariant;
    HRESULT put_fontWeight;
    HRESULT get_fontWeight;
    HRESULT put_fontSize;
    HRESULT get_fontSize;
    HRESULT put_font;
    HRESULT get_font;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_backgroundColor;
    HRESULT get_backgroundColor;
    HRESULT put_backgroundImage;
    HRESULT get_backgroundImage;
    HRESULT put_backgroundRepeat;
    HRESULT get_backgroundRepeat;
    HRESULT put_backgroundAttachment;
    HRESULT get_backgroundAttachment;
    HRESULT put_backgroundPosition;
    HRESULT get_backgroundPosition;
    HRESULT put_backgroundPositionX;
    HRESULT get_backgroundPositionX;
    HRESULT put_backgroundPositionY;
    HRESULT get_backgroundPositionY;
    HRESULT put_wordSpacing;
    HRESULT get_wordSpacing;
    HRESULT put_letterSpacing;
    HRESULT get_letterSpacing;
    HRESULT put_textDecoration;
    HRESULT get_textDecoration;
    HRESULT put_textDecorationNone;
    HRESULT get_textDecorationNone;
    HRESULT put_textDecorationUnderline;
    HRESULT get_textDecorationUnderline;
    HRESULT put_textDecorationOverline;
    HRESULT get_textDecorationOverline;
    HRESULT put_textDecorationLineThrough;
    HRESULT get_textDecorationLineThrough;
    HRESULT put_textDecorationBlink;
    HRESULT get_textDecorationBlink;
    HRESULT put_verticalAlign;
    HRESULT get_verticalAlign;
    HRESULT put_textTransform;
    HRESULT get_textTransform;
    HRESULT put_textAlign;
    HRESULT get_textAlign;
    HRESULT put_textIndent;
    HRESULT get_textIndent;
    HRESULT put_lineHeight;
    HRESULT get_lineHeight;
    HRESULT put_marginTop;
    HRESULT get_marginTop;
    HRESULT put_marginRight;
    HRESULT get_marginRight;
    HRESULT put_marginBottom;
    HRESULT get_marginBottom;
    HRESULT put_marginLeft;
    HRESULT get_marginLeft;
    HRESULT put_margin;
    HRESULT get_margin;
    HRESULT put_paddingTop;
    HRESULT get_paddingTop;
    HRESULT put_paddingRight;
    HRESULT get_paddingRight;
    HRESULT put_paddingBottom;
    HRESULT get_paddingBottom;
    HRESULT put_paddingLeft;
    HRESULT get_paddingLeft;
    HRESULT put_padding;
    HRESULT get_padding;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_borderTop;
    HRESULT get_borderTop;
    HRESULT put_borderRight;
    HRESULT get_borderRight;
    HRESULT put_borderBottom;
    HRESULT get_borderBottom;
    HRESULT put_borderLeft;
    HRESULT get_borderLeft;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderTopColor;
    HRESULT get_borderTopColor;
    HRESULT put_borderRightColor;
    HRESULT get_borderRightColor;
    HRESULT put_borderBottomColor;
    HRESULT get_borderBottomColor;
    HRESULT put_borderLeftColor;
    HRESULT get_borderLeftColor;
    HRESULT put_borderWidth;
    HRESULT get_borderWidth;
    HRESULT put_borderTopWidth;
    HRESULT get_borderTopWidth;
    HRESULT put_borderRightWidth;
    HRESULT get_borderRightWidth;
    HRESULT put_borderBottomWidth;
    HRESULT get_borderBottomWidth;
    HRESULT put_borderLeftWidth;
    HRESULT get_borderLeftWidth;
    HRESULT put_borderStyle;
    HRESULT get_borderStyle;
    HRESULT put_borderTopStyle;
    HRESULT get_borderTopStyle;
    HRESULT put_borderRightStyle;
    HRESULT get_borderRightStyle;
    HRESULT put_borderBottomStyle;
    HRESULT get_borderBottomStyle;
    HRESULT put_borderLeftStyle;
    HRESULT get_borderLeftStyle;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_styleFloat;
    HRESULT get_styleFloat;
    HRESULT put_clear;
    HRESULT get_clear;
    HRESULT put_display;
    HRESULT get_display;
    HRESULT put_visibility;
    HRESULT get_visibility;
    HRESULT put_listStyleType;
    HRESULT get_listStyleType;
    HRESULT put_listStylePosition;
    HRESULT get_listStylePosition;
    HRESULT put_listStyleImage;
    HRESULT get_listStyleImage;
    HRESULT put_listStyle;
    HRESULT get_listStyle;
    HRESULT put_whiteSpace;
    HRESULT get_whiteSpace;
    HRESULT put_top;
    HRESULT get_top;
    HRESULT put_left;
    HRESULT get_left;
    HRESULT get_position;
    HRESULT put_zIndex;
    HRESULT get_zIndex;
    HRESULT put_overflow;
    HRESULT get_overflow;
    HRESULT put_pageBreakBefore;
    HRESULT get_pageBreakBefore;
    HRESULT put_pageBreakAfter;
    HRESULT get_pageBreakAfter;
    HRESULT put_cssText;
    HRESULT get_cssText;
    HRESULT put_cursor;
    HRESULT get_cursor;
    HRESULT put_clip;
    HRESULT get_clip;
    HRESULT put_filter;
    HRESULT get_filter;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    VOID IHTMLRuleStyle;
    VOID IHTMLRuleStyle;
    VOID IHTMLRuleStyle;
    struct IHTMLRuleStyle *operator=;
    struct IHTMLRuleStyle *operator=;
};

typedef struct IHTMLRuleStyle2 {
    struct IDispatch IDispatch;
    HRESULT put_tableLayout;
    HRESULT get_tableLayout;
    HRESULT put_borderCollapse;
    HRESULT get_borderCollapse;
    HRESULT put_direction;
    HRESULT get_direction;
    HRESULT put_behavior;
    HRESULT get_behavior;
    HRESULT put_position;
    HRESULT get_position;
    HRESULT put_unicodeBidi;
    HRESULT get_unicodeBidi;
    HRESULT put_bottom;
    HRESULT get_bottom;
    HRESULT put_right;
    HRESULT get_right;
    HRESULT put_pixelBottom;
    HRESULT get_pixelBottom;
    HRESULT put_pixelRight;
    HRESULT get_pixelRight;
    HRESULT put_posBottom;
    HRESULT get_posBottom;
    HRESULT put_posRight;
    HRESULT get_posRight;
    HRESULT put_imeMode;
    HRESULT get_imeMode;
    HRESULT put_rubyAlign;
    HRESULT get_rubyAlign;
    HRESULT put_rubyPosition;
    HRESULT get_rubyPosition;
    HRESULT put_rubyOverhang;
    HRESULT get_rubyOverhang;
    HRESULT put_layoutGridChar;
    HRESULT get_layoutGridChar;
    HRESULT put_layoutGridLine;
    HRESULT get_layoutGridLine;
    HRESULT put_layoutGridMode;
    HRESULT get_layoutGridMode;
    HRESULT put_layoutGridType;
    HRESULT get_layoutGridType;
    HRESULT put_layoutGrid;
    HRESULT get_layoutGrid;
    HRESULT put_textAutospace;
    HRESULT get_textAutospace;
    HRESULT put_wordBreak;
    HRESULT get_wordBreak;
    HRESULT put_lineBreak;
    HRESULT get_lineBreak;
    HRESULT put_textJustify;
    HRESULT get_textJustify;
    HRESULT put_textJustifyTrim;
    HRESULT get_textJustifyTrim;
    HRESULT put_textKashida;
    HRESULT get_textKashida;
    HRESULT put_overflowX;
    HRESULT get_overflowX;
    HRESULT put_overflowY;
    HRESULT get_overflowY;
    HRESULT put_accelerator;
    HRESULT get_accelerator;
    VOID IHTMLRuleStyle2;
    VOID IHTMLRuleStyle2;
    VOID IHTMLRuleStyle2;
    struct IHTMLRuleStyle2 *operator=;
    struct IHTMLRuleStyle2 *operator=;
};

typedef struct IHTMLRuleStyle3 {
    struct IDispatch IDispatch;
    HRESULT put_layoutFlow;
    HRESULT get_layoutFlow;
    HRESULT put_zoom;
    HRESULT get_zoom;
    HRESULT put_wordWrap;
    HRESULT get_wordWrap;
    HRESULT put_textUnderlinePosition;
    HRESULT get_textUnderlinePosition;
    HRESULT put_scrollbarBaseColor;
    HRESULT get_scrollbarBaseColor;
    HRESULT put_scrollbarFaceColor;
    HRESULT get_scrollbarFaceColor;
    HRESULT put_scrollbar3dLightColor;
    HRESULT get_scrollbar3dLightColor;
    HRESULT put_scrollbarShadowColor;
    HRESULT get_scrollbarShadowColor;
    HRESULT put_scrollbarHighlightColor;
    HRESULT get_scrollbarHighlightColor;
    HRESULT put_scrollbarDarkShadowColor;
    HRESULT get_scrollbarDarkShadowColor;
    HRESULT put_scrollbarArrowColor;
    HRESULT get_scrollbarArrowColor;
    HRESULT put_scrollbarTrackColor;
    HRESULT get_scrollbarTrackColor;
    HRESULT put_writingMode;
    HRESULT get_writingMode;
    HRESULT put_textAlignLast;
    HRESULT get_textAlignLast;
    HRESULT put_textKashidaSpace;
    HRESULT get_textKashidaSpace;
    VOID IHTMLRuleStyle3;
    VOID IHTMLRuleStyle3;
    VOID IHTMLRuleStyle3;
    struct IHTMLRuleStyle3 *operator=;
    struct IHTMLRuleStyle3 *operator=;
};

typedef struct IHTMLRuleStyle4 {
    struct IDispatch IDispatch;
    HRESULT put_textOverflow;
    HRESULT get_textOverflow;
    HRESULT put_minHeight;
    HRESULT get_minHeight;
    VOID IHTMLRuleStyle4;
    VOID IHTMLRuleStyle4;
    VOID IHTMLRuleStyle4;
    struct IHTMLRuleStyle4 *operator=;
    struct IHTMLRuleStyle4 *operator=;
};

typedef struct IHTMLRuleStyle5 {
    struct IDispatch IDispatch;
    HRESULT put_msInterpolationMode;
    HRESULT get_msInterpolationMode;
    HRESULT put_maxHeight;
    HRESULT get_maxHeight;
    HRESULT put_minWidth;
    HRESULT get_minWidth;
    HRESULT put_maxWidth;
    HRESULT get_maxWidth;
    VOID IHTMLRuleStyle5;
    VOID IHTMLRuleStyle5;
    VOID IHTMLRuleStyle5;
    struct IHTMLRuleStyle5 *operator=;
    struct IHTMLRuleStyle5 *operator=;
};

typedef struct IHTMLRuleStyle6 {
    struct IDispatch IDispatch;
    HRESULT put_content;
    HRESULT get_content;
    HRESULT put_captionSide;
    HRESULT get_captionSide;
    HRESULT put_counterIncrement;
    HRESULT get_counterIncrement;
    HRESULT put_counterReset;
    HRESULT get_counterReset;
    HRESULT put_outline;
    HRESULT get_outline;
    HRESULT put_outlineWidth;
    HRESULT get_outlineWidth;
    HRESULT put_outlineStyle;
    HRESULT get_outlineStyle;
    HRESULT put_outlineColor;
    HRESULT get_outlineColor;
    HRESULT put_boxSizing;
    HRESULT get_boxSizing;
    HRESULT put_borderSpacing;
    HRESULT get_borderSpacing;
    HRESULT put_orphans;
    HRESULT get_orphans;
    HRESULT put_widows;
    HRESULT get_widows;
    HRESULT put_pageBreakInside;
    HRESULT get_pageBreakInside;
    HRESULT put_emptyCells;
    HRESULT get_emptyCells;
    HRESULT put_msBlockProgression;
    HRESULT get_msBlockProgression;
    HRESULT put_quotes;
    HRESULT get_quotes;
    VOID IHTMLRuleStyle6;
    VOID IHTMLRuleStyle6;
    VOID IHTMLRuleStyle6;
    struct IHTMLRuleStyle6 *operator=;
    struct IHTMLRuleStyle6 *operator=;
};

typedef struct IHTMLScreen {
    struct IDispatch IDispatch;
    HRESULT get_colorDepth;
    HRESULT put_bufferDepth;
    HRESULT get_bufferDepth;
    HRESULT get_width;
    HRESULT get_height;
    HRESULT put_updateInterval;
    HRESULT get_updateInterval;
    HRESULT get_availHeight;
    HRESULT get_availWidth;
    HRESULT get_fontSmoothingEnabled;
    VOID IHTMLScreen;
    VOID IHTMLScreen;
    VOID IHTMLScreen;
    struct IHTMLScreen *operator=;
    struct IHTMLScreen *operator=;
};

typedef struct IHTMLScreen2 {
    struct IDispatch IDispatch;
    HRESULT get_logicalXDPI;
    HRESULT get_logicalYDPI;
    HRESULT get_deviceXDPI;
    HRESULT get_deviceYDPI;
    VOID IHTMLScreen2;
    VOID IHTMLScreen2;
    VOID IHTMLScreen2;
    struct IHTMLScreen2 *operator=;
    struct IHTMLScreen2 *operator=;
};

typedef struct IHTMLScreen3 {
    struct IDispatch IDispatch;
    HRESULT get_systemXDPI;
    HRESULT get_systemYDPI;
    VOID IHTMLScreen3;
    VOID IHTMLScreen3;
    VOID IHTMLScreen3;
    struct IHTMLScreen3 *operator=;
    struct IHTMLScreen3 *operator=;
};

typedef struct IHTMLScreen4 {
    struct IDispatch IDispatch;
    HRESULT get_pixelDepth;
    VOID IHTMLScreen4;
    VOID IHTMLScreen4;
    VOID IHTMLScreen4;
    struct IHTMLScreen4 *operator=;
    struct IHTMLScreen4 *operator=;
};

typedef struct IHTMLScriptElement {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_htmlFor;
    HRESULT get_htmlFor;
    HRESULT put_event;
    HRESULT get_event;
    HRESULT put_text;
    HRESULT get_text;
    HRESULT put_defer;
    HRESULT get_defer;
    HRESULT get_readyState;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_type;
    HRESULT get_type;
    VOID IHTMLScriptElement;
    VOID IHTMLScriptElement;
    VOID IHTMLScriptElement;
    struct IHTMLScriptElement *operator=;
    struct IHTMLScriptElement *operator=;
};

typedef struct IHTMLScriptElement2 {
    struct IDispatch IDispatch;
    HRESULT put_charset;
    HRESULT get_charset;
    VOID IHTMLScriptElement2;
    VOID IHTMLScriptElement2;
    VOID IHTMLScriptElement2;
    struct IHTMLScriptElement2 *operator=;
    struct IHTMLScriptElement2 *operator=;
};

typedef struct IHTMLScriptElement3 {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    VOID IHTMLScriptElement3;
    VOID IHTMLScriptElement3;
    VOID IHTMLScriptElement3;
    struct IHTMLScriptElement3 *operator=;
    struct IHTMLScriptElement3 *operator=;
};

typedef struct IHTMLScriptElement4 {
    struct IDispatch IDispatch;
    HRESULT get_usedCharset;
    VOID IHTMLScriptElement4;
    VOID IHTMLScriptElement4;
    VOID IHTMLScriptElement4;
    struct IHTMLScriptElement4 *operator=;
    struct IHTMLScriptElement4 *operator=;
};

typedef struct IHTMLSelectElement {
    struct IDispatch IDispatch;
    HRESULT put_size;
    HRESULT get_size;
    HRESULT put_multiple;
    HRESULT get_multiple;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT get_options;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_selectedIndex;
    HRESULT get_selectedIndex;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT add;
    HRESULT remove;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    HRESULT tags;
    VOID IHTMLSelectElement;
    VOID IHTMLSelectElement;
    VOID IHTMLSelectElement;
    struct IHTMLSelectElement *operator=;
    struct IHTMLSelectElement *operator=;
};

typedef struct IHTMLSelectElement2 {
    struct IDispatch IDispatch;
    HRESULT urns;
    VOID IHTMLSelectElement2;
    VOID IHTMLSelectElement2;
    VOID IHTMLSelectElement2;
    struct IHTMLSelectElement2 *operator=;
    struct IHTMLSelectElement2 *operator=;
};

typedef struct IHTMLSelectElement4 {
    struct IDispatch IDispatch;
    HRESULT namedItem;
    VOID IHTMLSelectElement4;
    VOID IHTMLSelectElement4;
    VOID IHTMLSelectElement4;
    struct IHTMLSelectElement4 *operator=;
    struct IHTMLSelectElement4 *operator=;
};

typedef struct IHTMLSelectElement5 {
    struct IDispatch IDispatch;
    HRESULT add;
    VOID IHTMLSelectElement5;
    VOID IHTMLSelectElement5;
    VOID IHTMLSelectElement5;
    struct IHTMLSelectElement5 *operator=;
    struct IHTMLSelectElement5 *operator=;
};

typedef struct IHTMLSelectElement6 {
    struct IDispatch IDispatch;
    HRESULT add;
    HRESULT put_value;
    HRESULT get_value;
    VOID IHTMLSelectElement6;
    VOID IHTMLSelectElement6;
    VOID IHTMLSelectElement6;
    struct IHTMLSelectElement6 *operator=;
    struct IHTMLSelectElement6 *operator=;
};

typedef struct IHTMLSelectElementEx {
    struct IUnknown IUnknown;
    HRESULT ShowDropdown;
    HRESULT SetSelectExFlags;
    HRESULT GetSelectExFlags;
    HRESULT GetDropdownOpen;
    VOID IHTMLSelectElementEx;
    VOID IHTMLSelectElementEx;
    VOID IHTMLSelectElementEx;
    struct IHTMLSelectElementEx *operator=;
    struct IHTMLSelectElementEx *operator=;
};

typedef struct IHTMLSelection {
    struct IDispatch IDispatch;
    HRESULT get_anchorNode;
    HRESULT get_anchorOffset;
    HRESULT get_focusNode;
    HRESULT get_focusOffset;
    HRESULT get_isCollapsed;
    HRESULT collapse;
    HRESULT collapseToStart;
    HRESULT collapseToEnd;
    HRESULT selectAllChildren;
    HRESULT deleteFromDocument;
    HRESULT get_rangeCount;
    HRESULT getRangeAt;
    HRESULT addRange;
    HRESULT removeRange;
    HRESULT removeAllRanges;
    HRESULT toString;
    VOID IHTMLSelection;
    VOID IHTMLSelection;
    VOID IHTMLSelection;
    struct IHTMLSelection *operator=;
    struct IHTMLSelection *operator=;
};

typedef struct IHTMLSelectionObject {
    struct IDispatch IDispatch;
    HRESULT createRange;
    HRESULT empty;
    HRESULT clear;
    HRESULT get_type;
    VOID IHTMLSelectionObject;
    VOID IHTMLSelectionObject;
    VOID IHTMLSelectionObject;
    struct IHTMLSelectionObject *operator=;
    struct IHTMLSelectionObject *operator=;
};

typedef struct IHTMLSelectionObject2 {
    struct IDispatch IDispatch;
    HRESULT createRangeCollection;
    HRESULT get_typeDetail;
    VOID IHTMLSelectionObject2;
    VOID IHTMLSelectionObject2;
    VOID IHTMLSelectionObject2;
    struct IHTMLSelectionObject2 *operator=;
    struct IHTMLSelectionObject2 *operator=;
};

typedef struct IHTMLSourceElement {
    struct IDispatch IDispatch;
    HRESULT put_src;
    HRESULT get_src;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_media;
    HRESULT get_media;
    VOID IHTMLSourceElement;
    VOID IHTMLSourceElement;
    VOID IHTMLSourceElement;
    struct IHTMLSourceElement *operator=;
    struct IHTMLSourceElement *operator=;
};

typedef struct IHTMLSpanElement {
    struct IDispatch IDispatch;
    VOID IHTMLSpanElement;
    VOID IHTMLSpanElement;
    VOID IHTMLSpanElement;
    struct IHTMLSpanElement *operator=;
    struct IHTMLSpanElement *operator=;
};

typedef struct IHTMLSpanFlow {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    VOID IHTMLSpanFlow;
    VOID IHTMLSpanFlow;
    VOID IHTMLSpanFlow;
    struct IHTMLSpanFlow *operator=;
    struct IHTMLSpanFlow *operator=;
};

typedef struct IHTMLStorage {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get_remainingSpace;
    HRESULT key;
    HRESULT getItem;
    HRESULT setItem;
    HRESULT removeItem;
    HRESULT clear;
    VOID IHTMLStorage;
    VOID IHTMLStorage;
    VOID IHTMLStorage;
    struct IHTMLStorage *operator=;
    struct IHTMLStorage *operator=;
};

typedef struct IHTMLStorage2 {
    struct IDispatch IDispatch;
    HRESULT setItem;
    VOID IHTMLStorage2;
    VOID IHTMLStorage2;
    VOID IHTMLStorage2;
    struct IHTMLStorage2 *operator=;
    struct IHTMLStorage2 *operator=;
};

typedef struct IHTMLStyle {
    struct IDispatch IDispatch;
    HRESULT put_fontFamily;
    HRESULT get_fontFamily;
    HRESULT put_fontStyle;
    HRESULT get_fontStyle;
    HRESULT put_fontVariant;
    HRESULT get_fontVariant;
    HRESULT put_fontWeight;
    HRESULT get_fontWeight;
    HRESULT put_fontSize;
    HRESULT get_fontSize;
    HRESULT put_font;
    HRESULT get_font;
    HRESULT put_color;
    HRESULT get_color;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_backgroundColor;
    HRESULT get_backgroundColor;
    HRESULT put_backgroundImage;
    HRESULT get_backgroundImage;
    HRESULT put_backgroundRepeat;
    HRESULT get_backgroundRepeat;
    HRESULT put_backgroundAttachment;
    HRESULT get_backgroundAttachment;
    HRESULT put_backgroundPosition;
    HRESULT get_backgroundPosition;
    HRESULT put_backgroundPositionX;
    HRESULT get_backgroundPositionX;
    HRESULT put_backgroundPositionY;
    HRESULT get_backgroundPositionY;
    HRESULT put_wordSpacing;
    HRESULT get_wordSpacing;
    HRESULT put_letterSpacing;
    HRESULT get_letterSpacing;
    HRESULT put_textDecoration;
    HRESULT get_textDecoration;
    HRESULT put_textDecorationNone;
    HRESULT get_textDecorationNone;
    HRESULT put_textDecorationUnderline;
    HRESULT get_textDecorationUnderline;
    HRESULT put_textDecorationOverline;
    HRESULT get_textDecorationOverline;
    HRESULT put_textDecorationLineThrough;
    HRESULT get_textDecorationLineThrough;
    HRESULT put_textDecorationBlink;
    HRESULT get_textDecorationBlink;
    HRESULT put_verticalAlign;
    HRESULT get_verticalAlign;
    HRESULT put_textTransform;
    HRESULT get_textTransform;
    HRESULT put_textAlign;
    HRESULT get_textAlign;
    HRESULT put_textIndent;
    HRESULT get_textIndent;
    HRESULT put_lineHeight;
    HRESULT get_lineHeight;
    HRESULT put_marginTop;
    HRESULT get_marginTop;
    HRESULT put_marginRight;
    HRESULT get_marginRight;
    HRESULT put_marginBottom;
    HRESULT get_marginBottom;
    HRESULT put_marginLeft;
    HRESULT get_marginLeft;
    HRESULT put_margin;
    HRESULT get_margin;
    HRESULT put_paddingTop;
    HRESULT get_paddingTop;
    HRESULT put_paddingRight;
    HRESULT get_paddingRight;
    HRESULT put_paddingBottom;
    HRESULT get_paddingBottom;
    HRESULT put_paddingLeft;
    HRESULT get_paddingLeft;
    HRESULT put_padding;
    HRESULT get_padding;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_borderTop;
    HRESULT get_borderTop;
    HRESULT put_borderRight;
    HRESULT get_borderRight;
    HRESULT put_borderBottom;
    HRESULT get_borderBottom;
    HRESULT put_borderLeft;
    HRESULT get_borderLeft;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderTopColor;
    HRESULT get_borderTopColor;
    HRESULT put_borderRightColor;
    HRESULT get_borderRightColor;
    HRESULT put_borderBottomColor;
    HRESULT get_borderBottomColor;
    HRESULT put_borderLeftColor;
    HRESULT get_borderLeftColor;
    HRESULT put_borderWidth;
    HRESULT get_borderWidth;
    HRESULT put_borderTopWidth;
    HRESULT get_borderTopWidth;
    HRESULT put_borderRightWidth;
    HRESULT get_borderRightWidth;
    HRESULT put_borderBottomWidth;
    HRESULT get_borderBottomWidth;
    HRESULT put_borderLeftWidth;
    HRESULT get_borderLeftWidth;
    HRESULT put_borderStyle;
    HRESULT get_borderStyle;
    HRESULT put_borderTopStyle;
    HRESULT get_borderTopStyle;
    HRESULT put_borderRightStyle;
    HRESULT get_borderRightStyle;
    HRESULT put_borderBottomStyle;
    HRESULT get_borderBottomStyle;
    HRESULT put_borderLeftStyle;
    HRESULT get_borderLeftStyle;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_styleFloat;
    HRESULT get_styleFloat;
    HRESULT put_clear;
    HRESULT get_clear;
    HRESULT put_display;
    HRESULT get_display;
    HRESULT put_visibility;
    HRESULT get_visibility;
    HRESULT put_listStyleType;
    HRESULT get_listStyleType;
    HRESULT put_listStylePosition;
    HRESULT get_listStylePosition;
    HRESULT put_listStyleImage;
    HRESULT get_listStyleImage;
    HRESULT put_listStyle;
    HRESULT get_listStyle;
    HRESULT put_whiteSpace;
    HRESULT get_whiteSpace;
    HRESULT put_top;
    HRESULT get_top;
    HRESULT put_left;
    HRESULT get_left;
    HRESULT get_position;
    HRESULT put_zIndex;
    HRESULT get_zIndex;
    HRESULT put_overflow;
    HRESULT get_overflow;
    HRESULT put_pageBreakBefore;
    HRESULT get_pageBreakBefore;
    HRESULT put_pageBreakAfter;
    HRESULT get_pageBreakAfter;
    HRESULT put_cssText;
    HRESULT get_cssText;
    HRESULT put_pixelTop;
    HRESULT get_pixelTop;
    HRESULT put_pixelLeft;
    HRESULT get_pixelLeft;
    HRESULT put_pixelWidth;
    HRESULT get_pixelWidth;
    HRESULT put_pixelHeight;
    HRESULT get_pixelHeight;
    HRESULT put_posTop;
    HRESULT get_posTop;
    HRESULT put_posLeft;
    HRESULT get_posLeft;
    HRESULT put_posWidth;
    HRESULT get_posWidth;
    HRESULT put_posHeight;
    HRESULT get_posHeight;
    HRESULT put_cursor;
    HRESULT get_cursor;
    HRESULT put_clip;
    HRESULT get_clip;
    HRESULT put_filter;
    HRESULT get_filter;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT toString;
    VOID IHTMLStyle;
    VOID IHTMLStyle;
    VOID IHTMLStyle;
    struct IHTMLStyle *operator=;
    struct IHTMLStyle *operator=;
};

typedef struct IHTMLStyle2 {
    struct IDispatch IDispatch;
    HRESULT put_tableLayout;
    HRESULT get_tableLayout;
    HRESULT put_borderCollapse;
    HRESULT get_borderCollapse;
    HRESULT put_direction;
    HRESULT get_direction;
    HRESULT put_behavior;
    HRESULT get_behavior;
    HRESULT setExpression;
    HRESULT getExpression;
    HRESULT removeExpression;
    HRESULT put_position;
    HRESULT get_position;
    HRESULT put_unicodeBidi;
    HRESULT get_unicodeBidi;
    HRESULT put_bottom;
    HRESULT get_bottom;
    HRESULT put_right;
    HRESULT get_right;
    HRESULT put_pixelBottom;
    HRESULT get_pixelBottom;
    HRESULT put_pixelRight;
    HRESULT get_pixelRight;
    HRESULT put_posBottom;
    HRESULT get_posBottom;
    HRESULT put_posRight;
    HRESULT get_posRight;
    HRESULT put_imeMode;
    HRESULT get_imeMode;
    HRESULT put_rubyAlign;
    HRESULT get_rubyAlign;
    HRESULT put_rubyPosition;
    HRESULT get_rubyPosition;
    HRESULT put_rubyOverhang;
    HRESULT get_rubyOverhang;
    HRESULT put_layoutGridChar;
    HRESULT get_layoutGridChar;
    HRESULT put_layoutGridLine;
    HRESULT get_layoutGridLine;
    HRESULT put_layoutGridMode;
    HRESULT get_layoutGridMode;
    HRESULT put_layoutGridType;
    HRESULT get_layoutGridType;
    HRESULT put_layoutGrid;
    HRESULT get_layoutGrid;
    HRESULT put_wordBreak;
    HRESULT get_wordBreak;
    HRESULT put_lineBreak;
    HRESULT get_lineBreak;
    HRESULT put_textJustify;
    HRESULT get_textJustify;
    HRESULT put_textJustifyTrim;
    HRESULT get_textJustifyTrim;
    HRESULT put_textKashida;
    HRESULT get_textKashida;
    HRESULT put_textAutospace;
    HRESULT get_textAutospace;
    HRESULT put_overflowX;
    HRESULT get_overflowX;
    HRESULT put_overflowY;
    HRESULT get_overflowY;
    HRESULT put_accelerator;
    HRESULT get_accelerator;
    VOID IHTMLStyle2;
    VOID IHTMLStyle2;
    VOID IHTMLStyle2;
    struct IHTMLStyle2 *operator=;
    struct IHTMLStyle2 *operator=;
};

typedef struct IHTMLStyle3 {
    struct IDispatch IDispatch;
    HRESULT put_layoutFlow;
    HRESULT get_layoutFlow;
    HRESULT put_zoom;
    HRESULT get_zoom;
    HRESULT put_wordWrap;
    HRESULT get_wordWrap;
    HRESULT put_textUnderlinePosition;
    HRESULT get_textUnderlinePosition;
    HRESULT put_scrollbarBaseColor;
    HRESULT get_scrollbarBaseColor;
    HRESULT put_scrollbarFaceColor;
    HRESULT get_scrollbarFaceColor;
    HRESULT put_scrollbar3dLightColor;
    HRESULT get_scrollbar3dLightColor;
    HRESULT put_scrollbarShadowColor;
    HRESULT get_scrollbarShadowColor;
    HRESULT put_scrollbarHighlightColor;
    HRESULT get_scrollbarHighlightColor;
    HRESULT put_scrollbarDarkShadowColor;
    HRESULT get_scrollbarDarkShadowColor;
    HRESULT put_scrollbarArrowColor;
    HRESULT get_scrollbarArrowColor;
    HRESULT put_scrollbarTrackColor;
    HRESULT get_scrollbarTrackColor;
    HRESULT put_writingMode;
    HRESULT get_writingMode;
    HRESULT put_textAlignLast;
    HRESULT get_textAlignLast;
    HRESULT put_textKashidaSpace;
    HRESULT get_textKashidaSpace;
    VOID IHTMLStyle3;
    VOID IHTMLStyle3;
    VOID IHTMLStyle3;
    struct IHTMLStyle3 *operator=;
    struct IHTMLStyle3 *operator=;
};

typedef struct IHTMLStyle4 {
    struct IDispatch IDispatch;
    HRESULT put_textOverflow;
    HRESULT get_textOverflow;
    HRESULT put_minHeight;
    HRESULT get_minHeight;
    VOID IHTMLStyle4;
    VOID IHTMLStyle4;
    VOID IHTMLStyle4;
    struct IHTMLStyle4 *operator=;
    struct IHTMLStyle4 *operator=;
};

typedef struct IHTMLStyle5 {
    struct IDispatch IDispatch;
    HRESULT put_msInterpolationMode;
    HRESULT get_msInterpolationMode;
    HRESULT put_maxHeight;
    HRESULT get_maxHeight;
    HRESULT put_minWidth;
    HRESULT get_minWidth;
    HRESULT put_maxWidth;
    HRESULT get_maxWidth;
    VOID IHTMLStyle5;
    VOID IHTMLStyle5;
    VOID IHTMLStyle5;
    struct IHTMLStyle5 *operator=;
    struct IHTMLStyle5 *operator=;
};

typedef struct IHTMLStyle6 {
    struct IDispatch IDispatch;
    HRESULT put_content;
    HRESULT get_content;
    HRESULT put_captionSide;
    HRESULT get_captionSide;
    HRESULT put_counterIncrement;
    HRESULT get_counterIncrement;
    HRESULT put_counterReset;
    HRESULT get_counterReset;
    HRESULT put_outline;
    HRESULT get_outline;
    HRESULT put_outlineWidth;
    HRESULT get_outlineWidth;
    HRESULT put_outlineStyle;
    HRESULT get_outlineStyle;
    HRESULT put_outlineColor;
    HRESULT get_outlineColor;
    HRESULT put_boxSizing;
    HRESULT get_boxSizing;
    HRESULT put_borderSpacing;
    HRESULT get_borderSpacing;
    HRESULT put_orphans;
    HRESULT get_orphans;
    HRESULT put_widows;
    HRESULT get_widows;
    HRESULT put_pageBreakInside;
    HRESULT get_pageBreakInside;
    HRESULT put_emptyCells;
    HRESULT get_emptyCells;
    HRESULT put_msBlockProgression;
    HRESULT get_msBlockProgression;
    HRESULT put_quotes;
    HRESULT get_quotes;
    VOID IHTMLStyle6;
    VOID IHTMLStyle6;
    VOID IHTMLStyle6;
    struct IHTMLStyle6 *operator=;
    struct IHTMLStyle6 *operator=;
};

typedef struct IHTMLStyleElement {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT get_styleSheet;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT put_media;
    HRESULT get_media;
    VOID IHTMLStyleElement;
    VOID IHTMLStyleElement;
    VOID IHTMLStyleElement;
    struct IHTMLStyleElement *operator=;
    struct IHTMLStyleElement *operator=;
};

typedef struct IHTMLStyleElement2 {
    struct IDispatch IDispatch;
    HRESULT get_sheet;
    VOID IHTMLStyleElement2;
    VOID IHTMLStyleElement2;
    VOID IHTMLStyleElement2;
    struct IHTMLStyleElement2 *operator=;
    struct IHTMLStyleElement2 *operator=;
};

typedef struct IHTMLStyleEnabled {
    struct IDispatch IDispatch;
    HRESULT msGetPropertyEnabled;
    HRESULT msPutPropertyEnabled;
    VOID IHTMLStyleEnabled;
    VOID IHTMLStyleEnabled;
    VOID IHTMLStyleEnabled;
    struct IHTMLStyleEnabled *operator=;
    struct IHTMLStyleEnabled *operator=;
};

typedef struct IHTMLStyleFontFace {
    struct IDispatch IDispatch;
    HRESULT put_fontsrc;
    HRESULT get_fontsrc;
    VOID IHTMLStyleFontFace;
    VOID IHTMLStyleFontFace;
    VOID IHTMLStyleFontFace;
    struct IHTMLStyleFontFace *operator=;
    struct IHTMLStyleFontFace *operator=;
};

typedef struct IHTMLStyleFontFace2 {
    struct IDispatch IDispatch;
    HRESULT get_style;
    VOID IHTMLStyleFontFace2;
    VOID IHTMLStyleFontFace2;
    VOID IHTMLStyleFontFace2;
    struct IHTMLStyleFontFace2 *operator=;
    struct IHTMLStyleFontFace2 *operator=;
};

typedef struct IHTMLStyleMedia {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT matchMedium;
    VOID IHTMLStyleMedia;
    VOID IHTMLStyleMedia;
    VOID IHTMLStyleMedia;
    struct IHTMLStyleMedia *operator=;
    struct IHTMLStyleMedia *operator=;
};

typedef struct IHTMLStyleSheet {
    struct IDispatch IDispatch;
    HRESULT put_title;
    HRESULT get_title;
    HRESULT get_parentStyleSheet;
    HRESULT get_owningElement;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_readOnly;
    HRESULT get_imports;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT get_type;
    HRESULT get_id;
    HRESULT addImport;
    HRESULT addRule;
    HRESULT removeImport;
    HRESULT removeRule;
    HRESULT put_media;
    HRESULT get_media;
    HRESULT put_cssText;
    HRESULT get_cssText;
    HRESULT get_rules;
    VOID IHTMLStyleSheet;
    VOID IHTMLStyleSheet;
    VOID IHTMLStyleSheet;
    struct IHTMLStyleSheet *operator=;
    struct IHTMLStyleSheet *operator=;
};

typedef struct IHTMLStyleSheet2 {
    struct IDispatch IDispatch;
    HRESULT get_pages;
    HRESULT addPageRule;
    VOID IHTMLStyleSheet2;
    VOID IHTMLStyleSheet2;
    VOID IHTMLStyleSheet2;
    struct IHTMLStyleSheet2 *operator=;
    struct IHTMLStyleSheet2 *operator=;
};

typedef struct IHTMLStyleSheet3 {
    struct IDispatch IDispatch;
    HRESULT put_href;
    HRESULT get_href;
    HRESULT get_isAlternate;
    HRESULT get_isPrefAlternate;
    VOID IHTMLStyleSheet3;
    VOID IHTMLStyleSheet3;
    VOID IHTMLStyleSheet3;
    struct IHTMLStyleSheet3 *operator=;
    struct IHTMLStyleSheet3 *operator=;
};

typedef struct IHTMLStyleSheet4 {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT get_href;
    HRESULT get_title;
    HRESULT get_ownerNode;
    HRESULT get_ownerRule;
    HRESULT get_cssRules;
    HRESULT get_media;
    HRESULT insertRule;
    HRESULT deleteRule;
    VOID IHTMLStyleSheet4;
    VOID IHTMLStyleSheet4;
    VOID IHTMLStyleSheet4;
    struct IHTMLStyleSheet4 *operator=;
    struct IHTMLStyleSheet4 *operator=;
};

typedef struct IHTMLStyleSheetPage {
    struct IDispatch IDispatch;
    HRESULT get_selector;
    HRESULT get_pseudoClass;
    VOID IHTMLStyleSheetPage;
    VOID IHTMLStyleSheetPage;
    VOID IHTMLStyleSheetPage;
    struct IHTMLStyleSheetPage *operator=;
    struct IHTMLStyleSheetPage *operator=;
};

typedef struct IHTMLStyleSheetPage2 {
    struct IDispatch IDispatch;
    HRESULT put_selectorText;
    HRESULT get_selectorText;
    HRESULT get_style;
    VOID IHTMLStyleSheetPage2;
    VOID IHTMLStyleSheetPage2;
    VOID IHTMLStyleSheetPage2;
    struct IHTMLStyleSheetPage2 *operator=;
    struct IHTMLStyleSheetPage2 *operator=;
};

typedef struct IHTMLStyleSheetPagesCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID IHTMLStyleSheetPagesCollection;
    VOID IHTMLStyleSheetPagesCollection;
    VOID IHTMLStyleSheetPagesCollection;
    struct IHTMLStyleSheetPagesCollection *operator=;
    struct IHTMLStyleSheetPagesCollection *operator=;
};

typedef struct IHTMLStyleSheetRule {
    struct IDispatch IDispatch;
    HRESULT put_selectorText;
    HRESULT get_selectorText;
    HRESULT get_style;
    HRESULT get_readOnly;
    VOID IHTMLStyleSheetRule;
    VOID IHTMLStyleSheetRule;
    VOID IHTMLStyleSheetRule;
    struct IHTMLStyleSheetRule *operator=;
    struct IHTMLStyleSheetRule *operator=;
};

typedef struct IHTMLStyleSheetRule2 {
    struct IDispatch IDispatch;
    HRESULT put_selectorText;
    HRESULT get_selectorText;
    VOID IHTMLStyleSheetRule2;
    VOID IHTMLStyleSheetRule2;
    VOID IHTMLStyleSheetRule2;
    struct IHTMLStyleSheetRule2 *operator=;
    struct IHTMLStyleSheetRule2 *operator=;
};

typedef struct IHTMLStyleSheetRuleApplied {
    struct IDispatch IDispatch;
    HRESULT get_msSpecificity;
    HRESULT msGetSpecificity;
    VOID IHTMLStyleSheetRuleApplied;
    VOID IHTMLStyleSheetRuleApplied;
    VOID IHTMLStyleSheetRuleApplied;
    struct IHTMLStyleSheetRuleApplied *operator=;
    struct IHTMLStyleSheetRuleApplied *operator=;
};

typedef struct IHTMLStyleSheetRulesAppliedCollection {
    struct IDispatch IDispatch;
    HRESULT item;
    HRESULT get_length;
    HRESULT propertyAppliedBy;
    HRESULT propertyAppliedTrace;
    HRESULT propertyAppliedTraceLength;
    VOID IHTMLStyleSheetRulesAppliedCollection;
    VOID IHTMLStyleSheetRulesAppliedCollection;
    VOID IHTMLStyleSheetRulesAppliedCollection;
    struct IHTMLStyleSheetRulesAppliedCollection *operator=;
    struct IHTMLStyleSheetRulesAppliedCollection *operator=;
};

typedef struct IHTMLStyleSheetRulesCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID IHTMLStyleSheetRulesCollection;
    VOID IHTMLStyleSheetRulesCollection;
    VOID IHTMLStyleSheetRulesCollection;
    struct IHTMLStyleSheetRulesCollection *operator=;
    struct IHTMLStyleSheetRulesCollection *operator=;
};

typedef struct IHTMLStyleSheetRulesCollection2 {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID IHTMLStyleSheetRulesCollection2;
    VOID IHTMLStyleSheetRulesCollection2;
    VOID IHTMLStyleSheetRulesCollection2;
    struct IHTMLStyleSheetRulesCollection2 *operator=;
    struct IHTMLStyleSheetRulesCollection2 *operator=;
};

typedef struct IHTMLStyleSheetsCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLStyleSheetsCollection;
    VOID IHTMLStyleSheetsCollection;
    VOID IHTMLStyleSheetsCollection;
    struct IHTMLStyleSheetsCollection *operator=;
    struct IHTMLStyleSheetsCollection *operator=;
};

typedef struct IHTMLStyleSheetsCollection2 {
    struct IDispatch IDispatch;
    HRESULT item;
    VOID IHTMLStyleSheetsCollection2;
    VOID IHTMLStyleSheetsCollection2;
    VOID IHTMLStyleSheetsCollection2;
    struct IHTMLStyleSheetsCollection2 *operator=;
    struct IHTMLStyleSheetsCollection2 *operator=;
};

typedef struct IHTMLSubmitData {
    struct IDispatch IDispatch;
    HRESULT appendNameValuePair;
    HRESULT appendNameFilePair;
    HRESULT appendItemSeparator;
    VOID IHTMLSubmitData;
    VOID IHTMLSubmitData;
    VOID IHTMLSubmitData;
    struct IHTMLSubmitData *operator=;
    struct IHTMLSubmitData *operator=;
};

typedef struct IHTMLTable {
    struct IDispatch IDispatch;
    HRESULT put_cols;
    HRESULT get_cols;
    HRESULT put_border;
    HRESULT get_border;
    HRESULT put_frame;
    HRESULT get_frame;
    HRESULT put_rules;
    HRESULT get_rules;
    HRESULT put_cellSpacing;
    HRESULT get_cellSpacing;
    HRESULT put_cellPadding;
    HRESULT get_cellPadding;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderColorLight;
    HRESULT get_borderColorLight;
    HRESULT put_borderColorDark;
    HRESULT get_borderColorDark;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT refresh;
    HRESULT get_rows;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT put_dataPageSize;
    HRESULT get_dataPageSize;
    HRESULT nextPage;
    HRESULT previousPage;
    HRESULT get_tHead;
    HRESULT get_tFoot;
    HRESULT get_tBodies;
    HRESULT get_caption;
    HRESULT createTHead;
    HRESULT deleteTHead;
    HRESULT createTFoot;
    HRESULT deleteTFoot;
    HRESULT createCaption;
    HRESULT deleteCaption;
    HRESULT insertRow;
    HRESULT deleteRow;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    VOID IHTMLTable;
    VOID IHTMLTable;
    VOID IHTMLTable;
    struct IHTMLTable *operator=;
    struct IHTMLTable *operator=;
};

typedef struct IHTMLTable2 {
    struct IDispatch IDispatch;
    HRESULT firstPage;
    HRESULT lastPage;
    HRESULT get_cells;
    HRESULT moveRow;
    VOID IHTMLTable2;
    VOID IHTMLTable2;
    VOID IHTMLTable2;
    struct IHTMLTable2 *operator=;
    struct IHTMLTable2 *operator=;
};

typedef struct IHTMLTable3 {
    struct IDispatch IDispatch;
    HRESULT put_summary;
    HRESULT get_summary;
    VOID IHTMLTable3;
    VOID IHTMLTable3;
    VOID IHTMLTable3;
    struct IHTMLTable3 *operator=;
    struct IHTMLTable3 *operator=;
};

typedef struct IHTMLTable4 {
    struct IDispatch IDispatch;
    HRESULT putref_tHead;
    HRESULT get_tHead;
    HRESULT putref_tFoot;
    HRESULT get_tFoot;
    HRESULT putref_caption;
    HRESULT get_caption;
    HRESULT insertRow;
    HRESULT deleteRow;
    HRESULT createTBody;
    VOID IHTMLTable4;
    VOID IHTMLTable4;
    VOID IHTMLTable4;
    struct IHTMLTable4 *operator=;
    struct IHTMLTable4 *operator=;
};

typedef struct IHTMLTableCaption {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_vAlign;
    HRESULT get_vAlign;
    VOID IHTMLTableCaption;
    VOID IHTMLTableCaption;
    VOID IHTMLTableCaption;
    struct IHTMLTableCaption *operator=;
    struct IHTMLTableCaption *operator=;
};

typedef struct IHTMLTableCell {
    struct IDispatch IDispatch;
    HRESULT put_rowSpan;
    HRESULT get_rowSpan;
    HRESULT put_colSpan;
    HRESULT get_colSpan;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_vAlign;
    HRESULT get_vAlign;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_noWrap;
    HRESULT get_noWrap;
    HRESULT put_background;
    HRESULT get_background;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderColorLight;
    HRESULT get_borderColorLight;
    HRESULT put_borderColorDark;
    HRESULT get_borderColorDark;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT get_cellIndex;
    VOID IHTMLTableCell;
    VOID IHTMLTableCell;
    VOID IHTMLTableCell;
    struct IHTMLTableCell *operator=;
    struct IHTMLTableCell *operator=;
};

typedef struct IHTMLTableCell2 {
    struct IDispatch IDispatch;
    HRESULT put_abbr;
    HRESULT get_abbr;
    HRESULT put_axis;
    HRESULT get_axis;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    HRESULT put_headers;
    HRESULT get_headers;
    HRESULT put_scope;
    HRESULT get_scope;
    VOID IHTMLTableCell2;
    VOID IHTMLTableCell2;
    VOID IHTMLTableCell2;
    struct IHTMLTableCell2 *operator=;
    struct IHTMLTableCell2 *operator=;
};

typedef struct IHTMLTableCell3 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    VOID IHTMLTableCell3;
    VOID IHTMLTableCell3;
    VOID IHTMLTableCell3;
    struct IHTMLTableCell3 *operator=;
    struct IHTMLTableCell3 *operator=;
};

typedef struct IHTMLTableCol {
    struct IDispatch IDispatch;
    HRESULT put_span;
    HRESULT get_span;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_vAlign;
    HRESULT get_vAlign;
    VOID IHTMLTableCol;
    VOID IHTMLTableCol;
    VOID IHTMLTableCol;
    struct IHTMLTableCol *operator=;
    struct IHTMLTableCol *operator=;
};

typedef struct IHTMLTableCol2 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    VOID IHTMLTableCol2;
    VOID IHTMLTableCol2;
    VOID IHTMLTableCol2;
    struct IHTMLTableCol2 *operator=;
    struct IHTMLTableCol2 *operator=;
};

typedef struct IHTMLTableCol3 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    VOID IHTMLTableCol3;
    VOID IHTMLTableCol3;
    VOID IHTMLTableCol3;
    struct IHTMLTableCol3 *operator=;
    struct IHTMLTableCol3 *operator=;
};

typedef struct IHTMLTableRow {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_vAlign;
    HRESULT get_vAlign;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT put_borderColor;
    HRESULT get_borderColor;
    HRESULT put_borderColorLight;
    HRESULT get_borderColorLight;
    HRESULT put_borderColorDark;
    HRESULT get_borderColorDark;
    HRESULT get_rowIndex;
    HRESULT get_sectionRowIndex;
    HRESULT get_cells;
    HRESULT insertCell;
    HRESULT deleteCell;
    VOID IHTMLTableRow;
    VOID IHTMLTableRow;
    VOID IHTMLTableRow;
    struct IHTMLTableRow *operator=;
    struct IHTMLTableRow *operator=;
};

typedef struct IHTMLTableRow2 {
    struct IDispatch IDispatch;
    HRESULT put_height;
    HRESULT get_height;
    VOID IHTMLTableRow2;
    VOID IHTMLTableRow2;
    VOID IHTMLTableRow2;
    struct IHTMLTableRow2 *operator=;
    struct IHTMLTableRow2 *operator=;
};

typedef struct IHTMLTableRow3 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    VOID IHTMLTableRow3;
    VOID IHTMLTableRow3;
    VOID IHTMLTableRow3;
    struct IHTMLTableRow3 *operator=;
    struct IHTMLTableRow3 *operator=;
};

typedef struct IHTMLTableRow4 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    HRESULT insertCell;
    HRESULT deleteCell;
    VOID IHTMLTableRow4;
    VOID IHTMLTableRow4;
    VOID IHTMLTableRow4;
    struct IHTMLTableRow4 *operator=;
    struct IHTMLTableRow4 *operator=;
};

typedef struct IHTMLTableRowMetrics {
    struct IDispatch IDispatch;
    HRESULT get_clientHeight;
    HRESULT get_clientWidth;
    HRESULT get_clientTop;
    HRESULT get_clientLeft;
    VOID IHTMLTableRowMetrics;
    VOID IHTMLTableRowMetrics;
    VOID IHTMLTableRowMetrics;
    struct IHTMLTableRowMetrics *operator=;
    struct IHTMLTableRowMetrics *operator=;
};

typedef struct IHTMLTableSection {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_vAlign;
    HRESULT get_vAlign;
    HRESULT put_bgColor;
    HRESULT get_bgColor;
    HRESULT get_rows;
    HRESULT insertRow;
    HRESULT deleteRow;
    VOID IHTMLTableSection;
    VOID IHTMLTableSection;
    VOID IHTMLTableSection;
    struct IHTMLTableSection *operator=;
    struct IHTMLTableSection *operator=;
};

typedef struct IHTMLTableSection2 {
    struct IDispatch IDispatch;
    HRESULT moveRow;
    VOID IHTMLTableSection2;
    VOID IHTMLTableSection2;
    VOID IHTMLTableSection2;
    struct IHTMLTableSection2 *operator=;
    struct IHTMLTableSection2 *operator=;
};

typedef struct IHTMLTableSection3 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    VOID IHTMLTableSection3;
    VOID IHTMLTableSection3;
    VOID IHTMLTableSection3;
    struct IHTMLTableSection3 *operator=;
    struct IHTMLTableSection3 *operator=;
};

typedef struct IHTMLTableSection4 {
    struct IDispatch IDispatch;
    HRESULT put_ch;
    HRESULT get_ch;
    HRESULT put_chOff;
    HRESULT get_chOff;
    HRESULT insertRow;
    HRESULT deleteRow;
    VOID IHTMLTableSection4;
    VOID IHTMLTableSection4;
    VOID IHTMLTableSection4;
    struct IHTMLTableSection4 *operator=;
    struct IHTMLTableSection4 *operator=;
};

typedef struct IHTMLTextAreaElement {
    struct IDispatch IDispatch;
    HRESULT get_type;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT put_disabled;
    HRESULT get_disabled;
    HRESULT get_form;
    HRESULT put_defaultValue;
    HRESULT get_defaultValue;
    HRESULT select;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_readOnly;
    HRESULT get_readOnly;
    HRESULT put_rows;
    HRESULT get_rows;
    HRESULT put_cols;
    HRESULT get_cols;
    HRESULT put_wrap;
    HRESULT get_wrap;
    HRESULT createTextRange;
    VOID IHTMLTextAreaElement;
    VOID IHTMLTextAreaElement;
    VOID IHTMLTextAreaElement;
    struct IHTMLTextAreaElement *operator=;
    struct IHTMLTextAreaElement *operator=;
};

typedef struct IHTMLTextAreaElement2 {
    struct IDispatch IDispatch;
    HRESULT put_selectionStart;
    HRESULT get_selectionStart;
    HRESULT put_selectionEnd;
    HRESULT get_selectionEnd;
    HRESULT setSelectionRange;
    VOID IHTMLTextAreaElement2;
    VOID IHTMLTextAreaElement2;
    VOID IHTMLTextAreaElement2;
    struct IHTMLTextAreaElement2 *operator=;
    struct IHTMLTextAreaElement2 *operator=;
};

typedef struct IHTMLTextContainer {
    struct IDispatch IDispatch;
    HRESULT createControlRange;
    HRESULT get_scrollHeight;
    HRESULT get_scrollWidth;
    HRESULT put_scrollTop;
    HRESULT get_scrollTop;
    HRESULT put_scrollLeft;
    HRESULT get_scrollLeft;
    HRESULT put_onscroll;
    HRESULT get_onscroll;
    VOID IHTMLTextContainer;
    VOID IHTMLTextContainer;
    VOID IHTMLTextContainer;
    struct IHTMLTextContainer *operator=;
    struct IHTMLTextContainer *operator=;
};

typedef struct IHTMLTextElement {
    struct IDispatch IDispatch;
    VOID IHTMLTextElement;
    VOID IHTMLTextElement;
    VOID IHTMLTextElement;
    struct IHTMLTextElement *operator=;
    struct IHTMLTextElement *operator=;
};

typedef struct IHTMLTextRangeMetrics {
    struct IDispatch IDispatch;
    HRESULT get_offsetTop;
    HRESULT get_offsetLeft;
    HRESULT get_boundingTop;
    HRESULT get_boundingLeft;
    HRESULT get_boundingWidth;
    HRESULT get_boundingHeight;
    VOID IHTMLTextRangeMetrics;
    VOID IHTMLTextRangeMetrics;
    VOID IHTMLTextRangeMetrics;
    struct IHTMLTextRangeMetrics *operator=;
    struct IHTMLTextRangeMetrics *operator=;
};

typedef struct IHTMLTextRangeMetrics2 {
    struct IDispatch IDispatch;
    HRESULT getClientRects;
    HRESULT getBoundingClientRect;
    VOID IHTMLTextRangeMetrics2;
    VOID IHTMLTextRangeMetrics2;
    VOID IHTMLTextRangeMetrics2;
    struct IHTMLTextRangeMetrics2 *operator=;
    struct IHTMLTextRangeMetrics2 *operator=;
};

typedef struct IHTMLTimeRanges {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT start;
    HRESULT end;
    VOID IHTMLTimeRanges;
    VOID IHTMLTimeRanges;
    VOID IHTMLTimeRanges;
    struct IHTMLTimeRanges *operator=;
    struct IHTMLTimeRanges *operator=;
};

typedef struct IHTMLTimeRanges2 {
    struct IDispatch IDispatch;
    HRESULT startDouble;
    HRESULT endDouble;
    VOID IHTMLTimeRanges2;
    VOID IHTMLTimeRanges2;
    VOID IHTMLTimeRanges2;
    struct IHTMLTimeRanges2 *operator=;
    struct IHTMLTimeRanges2 *operator=;
};

typedef struct IHTMLTitleElement {
    struct IDispatch IDispatch;
    HRESULT put_text;
    HRESULT get_text;
    VOID IHTMLTitleElement;
    VOID IHTMLTitleElement;
    VOID IHTMLTitleElement;
    struct IHTMLTitleElement *operator=;
    struct IHTMLTitleElement *operator=;
};

typedef struct IHTMLTxtRange {
    struct IDispatch IDispatch;
    HRESULT get_htmlText;
    HRESULT put_text;
    HRESULT get_text;
    HRESULT parentElement;
    HRESULT duplicate;
    HRESULT inRange;
    HRESULT isEqual;
    HRESULT scrollIntoView;
    HRESULT collapse;
    HRESULT expand;
    HRESULT move;
    HRESULT moveStart;
    HRESULT moveEnd;
    HRESULT select;
    HRESULT pasteHTML;
    HRESULT moveToElementText;
    HRESULT setEndPoint;
    HRESULT compareEndPoints;
    HRESULT findText;
    HRESULT moveToPoint;
    HRESULT getBookmark;
    HRESULT moveToBookmark;
    HRESULT queryCommandSupported;
    HRESULT queryCommandEnabled;
    HRESULT queryCommandState;
    HRESULT queryCommandIndeterm;
    HRESULT queryCommandText;
    HRESULT queryCommandValue;
    HRESULT execCommand;
    HRESULT execCommandShowHelp;
    VOID IHTMLTxtRange;
    VOID IHTMLTxtRange;
    VOID IHTMLTxtRange;
    struct IHTMLTxtRange *operator=;
    struct IHTMLTxtRange *operator=;
};

typedef struct IHTMLTxtRangeCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IHTMLTxtRangeCollection;
    VOID IHTMLTxtRangeCollection;
    VOID IHTMLTxtRangeCollection;
    struct IHTMLTxtRangeCollection *operator=;
    struct IHTMLTxtRangeCollection *operator=;
};

typedef struct IHTMLUListElement {
    struct IDispatch IDispatch;
    HRESULT put_compact;
    HRESULT get_compact;
    HRESULT put_type;
    HRESULT get_type;
    VOID IHTMLUListElement;
    VOID IHTMLUListElement;
    VOID IHTMLUListElement;
    struct IHTMLUListElement *operator=;
    struct IHTMLUListElement *operator=;
};

typedef struct IHTMLUniqueName {
    struct IDispatch IDispatch;
    HRESULT get_uniqueNumber;
    HRESULT get_uniqueID;
    VOID IHTMLUniqueName;
    VOID IHTMLUniqueName;
    VOID IHTMLUniqueName;
    struct IHTMLUniqueName *operator=;
    struct IHTMLUniqueName *operator=;
};

typedef struct IHTMLUnknownElement {
    struct IDispatch IDispatch;
    VOID IHTMLUnknownElement;
    VOID IHTMLUnknownElement;
    VOID IHTMLUnknownElement;
    struct IHTMLUnknownElement *operator=;
    struct IHTMLUnknownElement *operator=;
};

typedef struct IHTMLUrnCollection {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID IHTMLUrnCollection;
    VOID IHTMLUrnCollection;
    VOID IHTMLUrnCollection;
    struct IHTMLUrnCollection *operator=;
    struct IHTMLUrnCollection *operator=;
};

typedef struct IHTMLVideoElement {
    struct IDispatch IDispatch;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    HRESULT get_videoWidth;
    HRESULT get_videoHeight;
    HRESULT put_poster;
    HRESULT get_poster;
    VOID IHTMLVideoElement;
    VOID IHTMLVideoElement;
    VOID IHTMLVideoElement;
    struct IHTMLVideoElement *operator=;
    struct IHTMLVideoElement *operator=;
};

typedef struct IHTMLWindow2 {
    struct IHTMLFramesCollection2 IHTMLFramesCollection2;
    HRESULT get_frames;
    HRESULT put_defaultStatus;
    HRESULT get_defaultStatus;
    HRESULT put_status;
    HRESULT get_status;
    HRESULT setTimeout;
    HRESULT clearTimeout;
    HRESULT alert;
    HRESULT confirm;
    HRESULT prompt;
    HRESULT get_Image;
    HRESULT get_location;
    HRESULT get_history;
    HRESULT close;
    HRESULT put_opener;
    HRESULT get_opener;
    HRESULT get_navigator;
    HRESULT put_name;
    HRESULT get_name;
    HRESULT get_parent;
    HRESULT open;
    HRESULT get_self;
    HRESULT get_top;
    HRESULT get_window;
    HRESULT navigate;
    HRESULT put_onfocus;
    HRESULT get_onfocus;
    HRESULT put_onblur;
    HRESULT get_onblur;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT put_onbeforeunload;
    HRESULT get_onbeforeunload;
    HRESULT put_onunload;
    HRESULT get_onunload;
    HRESULT put_onhelp;
    HRESULT get_onhelp;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_onresize;
    HRESULT get_onresize;
    HRESULT put_onscroll;
    HRESULT get_onscroll;
    HRESULT get_document;
    HRESULT get_event;
    HRESULT get__newEnum;
    HRESULT showModalDialog;
    HRESULT showHelp;
    HRESULT get_screen;
    HRESULT get_Option;
    HRESULT focus;
    HRESULT get_closed;
    HRESULT blur;
    HRESULT scroll;
    HRESULT get_clientInformation;
    HRESULT setInterval;
    HRESULT clearInterval;
    HRESULT put_offscreenBuffering;
    HRESULT get_offscreenBuffering;
    HRESULT execScript;
    HRESULT toString;
    HRESULT scrollBy;
    HRESULT scrollTo;
    HRESULT moveTo;
    HRESULT moveBy;
    HRESULT resizeTo;
    HRESULT resizeBy;
    HRESULT get_external;
    VOID IHTMLWindow2;
    VOID IHTMLWindow2;
    VOID IHTMLWindow2;
    struct IHTMLWindow2 *operator=;
    struct IHTMLWindow2 *operator=;
};

typedef struct IHTMLWindow3 {
    struct IDispatch IDispatch;
    HRESULT get_screenLeft;
    HRESULT get_screenTop;
    HRESULT attachEvent;
    HRESULT detachEvent;
    HRESULT setTimeout;
    HRESULT setInterval;
    HRESULT print;
    HRESULT put_onbeforeprint;
    HRESULT get_onbeforeprint;
    HRESULT put_onafterprint;
    HRESULT get_onafterprint;
    HRESULT get_clipboardData;
    HRESULT showModelessDialog;
    VOID IHTMLWindow3;
    VOID IHTMLWindow3;
    VOID IHTMLWindow3;
    struct IHTMLWindow3 *operator=;
    struct IHTMLWindow3 *operator=;
};

typedef struct IHTMLWindow4 {
    struct IDispatch IDispatch;
    HRESULT createPopup;
    HRESULT get_frameElement;
    VOID IHTMLWindow4;
    VOID IHTMLWindow4;
    VOID IHTMLWindow4;
    struct IHTMLWindow4 *operator=;
    struct IHTMLWindow4 *operator=;
};

typedef struct IHTMLWindow5 {
    struct IDispatch IDispatch;
    HRESULT put_XMLHttpRequest;
    HRESULT get_XMLHttpRequest;
    VOID IHTMLWindow5;
    VOID IHTMLWindow5;
    VOID IHTMLWindow5;
    struct IHTMLWindow5 *operator=;
    struct IHTMLWindow5 *operator=;
};

typedef struct IHTMLWindow6 {
    struct IDispatch IDispatch;
    HRESULT put_XDomainRequest;
    HRESULT get_XDomainRequest;
    HRESULT get_sessionStorage;
    HRESULT get_localStorage;
    HRESULT put_onhashchange;
    HRESULT get_onhashchange;
    HRESULT get_maxConnectionsPerServer;
    HRESULT postMessage;
    HRESULT toStaticHTML;
    HRESULT put_onmessage;
    HRESULT get_onmessage;
    HRESULT msWriteProfilerMark;
    VOID IHTMLWindow6;
    VOID IHTMLWindow6;
    VOID IHTMLWindow6;
    struct IHTMLWindow6 *operator=;
    struct IHTMLWindow6 *operator=;
};

typedef struct IHTMLWindow7 {
    struct IDispatch IDispatch;
    HRESULT getSelection;
    HRESULT getComputedStyle;
    HRESULT get_styleMedia;
    HRESULT put_performance;
    HRESULT get_performance;
    HRESULT get_innerWidth;
    HRESULT get_innerHeight;
    HRESULT get_pageXOffset;
    HRESULT get_pageYOffset;
    HRESULT get_screenX;
    HRESULT get_screenY;
    HRESULT get_outerWidth;
    HRESULT get_outerHeight;
    HRESULT put_onabort;
    HRESULT get_onabort;
    HRESULT put_oncanplay;
    HRESULT get_oncanplay;
    HRESULT put_oncanplaythrough;
    HRESULT get_oncanplaythrough;
    HRESULT put_onchange;
    HRESULT get_onchange;
    HRESULT put_onclick;
    HRESULT get_onclick;
    HRESULT put_oncontextmenu;
    HRESULT get_oncontextmenu;
    HRESULT put_ondblclick;
    HRESULT get_ondblclick;
    HRESULT put_ondrag;
    HRESULT get_ondrag;
    HRESULT put_ondragend;
    HRESULT get_ondragend;
    HRESULT put_ondragenter;
    HRESULT get_ondragenter;
    HRESULT put_ondragleave;
    HRESULT get_ondragleave;
    HRESULT put_ondragover;
    HRESULT get_ondragover;
    HRESULT put_ondragstart;
    HRESULT get_ondragstart;
    HRESULT put_ondrop;
    HRESULT get_ondrop;
    HRESULT put_ondurationchange;
    HRESULT get_ondurationchange;
    HRESULT put_onfocusin;
    HRESULT get_onfocusin;
    HRESULT put_onfocusout;
    HRESULT get_onfocusout;
    HRESULT put_oninput;
    HRESULT get_oninput;
    HRESULT put_onemptied;
    HRESULT get_onemptied;
    HRESULT put_onended;
    HRESULT get_onended;
    HRESULT put_onkeydown;
    HRESULT get_onkeydown;
    HRESULT put_onkeypress;
    HRESULT get_onkeypress;
    HRESULT put_onkeyup;
    HRESULT get_onkeyup;
    HRESULT put_onloadeddata;
    HRESULT get_onloadeddata;
    HRESULT put_onloadedmetadata;
    HRESULT get_onloadedmetadata;
    HRESULT put_onloadstart;
    HRESULT get_onloadstart;
    HRESULT put_onmousedown;
    HRESULT get_onmousedown;
    HRESULT put_onmouseenter;
    HRESULT get_onmouseenter;
    HRESULT put_onmouseleave;
    HRESULT get_onmouseleave;
    HRESULT put_onmousemove;
    HRESULT get_onmousemove;
    HRESULT put_onmouseout;
    HRESULT get_onmouseout;
    HRESULT put_onmouseover;
    HRESULT get_onmouseover;
    HRESULT put_onmouseup;
    HRESULT get_onmouseup;
    HRESULT put_onmousewheel;
    HRESULT get_onmousewheel;
    HRESULT put_onoffline;
    HRESULT get_onoffline;
    HRESULT put_ononline;
    HRESULT get_ononline;
    HRESULT put_onprogress;
    HRESULT get_onprogress;
    HRESULT put_onratechange;
    HRESULT get_onratechange;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT put_onreset;
    HRESULT get_onreset;
    HRESULT put_onseeked;
    HRESULT get_onseeked;
    HRESULT put_onseeking;
    HRESULT get_onseeking;
    HRESULT put_onselect;
    HRESULT get_onselect;
    HRESULT put_onstalled;
    HRESULT get_onstalled;
    HRESULT put_onstorage;
    HRESULT get_onstorage;
    HRESULT put_onsubmit;
    HRESULT get_onsubmit;
    HRESULT put_onsuspend;
    HRESULT get_onsuspend;
    HRESULT put_ontimeupdate;
    HRESULT get_ontimeupdate;
    HRESULT put_onpause;
    HRESULT get_onpause;
    HRESULT put_onplay;
    HRESULT get_onplay;
    HRESULT put_onplaying;
    HRESULT get_onplaying;
    HRESULT put_onvolumechange;
    HRESULT get_onvolumechange;
    HRESULT put_onwaiting;
    HRESULT get_onwaiting;
    VOID IHTMLWindow7;
    VOID IHTMLWindow7;
    VOID IHTMLWindow7;
    struct IHTMLWindow7 *operator=;
    struct IHTMLWindow7 *operator=;
};

typedef struct IHTMLWindow8 {
    struct IDispatch IDispatch;
    HRESULT put_onmspointerdown;
    HRESULT get_onmspointerdown;
    HRESULT put_onmspointermove;
    HRESULT get_onmspointermove;
    HRESULT put_onmspointerup;
    HRESULT get_onmspointerup;
    HRESULT put_onmspointerover;
    HRESULT get_onmspointerover;
    HRESULT put_onmspointerout;
    HRESULT get_onmspointerout;
    HRESULT put_onmspointercancel;
    HRESULT get_onmspointercancel;
    HRESULT put_onmspointerhover;
    HRESULT get_onmspointerhover;
    HRESULT put_onmsgesturestart;
    HRESULT get_onmsgesturestart;
    HRESULT put_onmsgesturechange;
    HRESULT get_onmsgesturechange;
    HRESULT put_onmsgestureend;
    HRESULT get_onmsgestureend;
    HRESULT put_onmsgesturehold;
    HRESULT get_onmsgesturehold;
    HRESULT put_onmsgesturetap;
    HRESULT get_onmsgesturetap;
    HRESULT put_onmsgesturedoubletap;
    HRESULT get_onmsgesturedoubletap;
    HRESULT put_onmsinertiastart;
    HRESULT get_onmsinertiastart;
    HRESULT get_applicationCache;
    HRESULT put_onpopstate;
    HRESULT get_onpopstate;
    VOID IHTMLWindow8;
    VOID IHTMLWindow8;
    VOID IHTMLWindow8;
    struct IHTMLWindow8 *operator=;
    struct IHTMLWindow8 *operator=;
};

typedef struct IHTMLXDomainRequest {
    struct IDispatch IDispatch;
    HRESULT get_responseText;
    HRESULT put_timeout;
    HRESULT get_timeout;
    HRESULT get_contentType;
    HRESULT put_onprogress;
    HRESULT get_onprogress;
    HRESULT put_onerror;
    HRESULT get_onerror;
    HRESULT put_ontimeout;
    HRESULT get_ontimeout;
    HRESULT put_onload;
    HRESULT get_onload;
    HRESULT abort;
    HRESULT open;
    HRESULT send;
    VOID IHTMLXDomainRequest;
    VOID IHTMLXDomainRequest;
    VOID IHTMLXDomainRequest;
    struct IHTMLXDomainRequest *operator=;
    struct IHTMLXDomainRequest *operator=;
};

typedef struct IHTMLXDomainRequestFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IHTMLXDomainRequestFactory;
    VOID IHTMLXDomainRequestFactory;
    VOID IHTMLXDomainRequestFactory;
    struct IHTMLXDomainRequestFactory *operator=;
    struct IHTMLXDomainRequestFactory *operator=;
};

typedef struct IHTMLXMLHttpRequest {
    struct IDispatch IDispatch;
    HRESULT get_readyState;
    HRESULT get_responseBody;
    HRESULT get_responseText;
    HRESULT get_responseXML;
    HRESULT get_status;
    HRESULT get_statusText;
    HRESULT put_onreadystatechange;
    HRESULT get_onreadystatechange;
    HRESULT abort;
    HRESULT open;
    HRESULT send;
    HRESULT getAllResponseHeaders;
    HRESULT getResponseHeader;
    HRESULT setRequestHeader;
    VOID IHTMLXMLHttpRequest;
    VOID IHTMLXMLHttpRequest;
    VOID IHTMLXMLHttpRequest;
    struct IHTMLXMLHttpRequest *operator=;
    struct IHTMLXMLHttpRequest *operator=;
};

typedef struct IHTMLXMLHttpRequest2 {
    struct IDispatch IDispatch;
    HRESULT put_timeout;
    HRESULT get_timeout;
    HRESULT put_ontimeout;
    HRESULT get_ontimeout;
    VOID IHTMLXMLHttpRequest2;
    VOID IHTMLXMLHttpRequest2;
    VOID IHTMLXMLHttpRequest2;
    struct IHTMLXMLHttpRequest2 *operator=;
    struct IHTMLXMLHttpRequest2 *operator=;
};

typedef struct IHTMLXMLHttpRequestFactory {
    struct IDispatch IDispatch;
    HRESULT create;
    VOID IHTMLXMLHttpRequestFactory;
    VOID IHTMLXMLHttpRequestFactory;
    VOID IHTMLXMLHttpRequestFactory;
    struct IHTMLXMLHttpRequestFactory *operator=;
    struct IHTMLXMLHttpRequestFactory *operator=;
};

typedef struct IHighlightRenderingServices {
    struct IUnknown IUnknown;
    HRESULT AddSegment;
    HRESULT MoveSegmentToPointers;
    HRESULT RemoveSegment;
    VOID IHighlightRenderingServices;
    VOID IHighlightRenderingServices;
    VOID IHighlightRenderingServices;
    struct IHighlightRenderingServices *operator=;
    struct IHighlightRenderingServices *operator=;
};

typedef struct IHighlightSegment {
    struct ISegment ISegment;
    VOID IHighlightSegment;
    VOID IHighlightSegment;
    VOID IHighlightSegment;
    struct IHighlightSegment *operator=;
    struct IHighlightSegment *operator=;
};

typedef struct IHostBehaviorInit {
    struct IUnknown IUnknown;
    HRESULT PopulateNamespaceTable;
    VOID IHostBehaviorInit;
    VOID IHostBehaviorInit;
    VOID IHostBehaviorInit;
    struct IHostBehaviorInit *operator=;
    struct IHostBehaviorInit *operator=;
};

typedef struct IHtmlDlgSafeHelper {
    struct IDispatch IDispatch;
    HRESULT choosecolordlg;
    HRESULT getCharset;
    HRESULT get_Fonts;
    HRESULT get_BlockFormats;
    VOID IHtmlDlgSafeHelper;
    VOID IHtmlDlgSafeHelper;
    VOID IHtmlDlgSafeHelper;
    struct IHtmlDlgSafeHelper *operator=;
    struct IHtmlDlgSafeHelper *operator=;
};

typedef struct IHttpNegotiate {
    struct IUnknown IUnknown;
    HRESULT BeginningTransaction;
    HRESULT OnResponse;
    VOID IHttpNegotiate;
    VOID IHttpNegotiate;
    VOID IHttpNegotiate;
    struct IHttpNegotiate *operator=;
    struct IHttpNegotiate *operator=;
};

typedef struct IHttpNegotiate2 {
    struct IHttpNegotiate IHttpNegotiate;
    HRESULT GetRootSecurityId;
    VOID IHttpNegotiate2;
    VOID IHttpNegotiate2;
    VOID IHttpNegotiate2;
    struct IHttpNegotiate2 *operator=;
    struct IHttpNegotiate2 *operator=;
};

typedef struct IHttpNegotiate3 {
    struct IHttpNegotiate2 IHttpNegotiate2;
    HRESULT GetSerializedClientCertContext;
    VOID IHttpNegotiate3;
    VOID IHttpNegotiate3;
    VOID IHttpNegotiate3;
    struct IHttpNegotiate3 *operator=;
    struct IHttpNegotiate3 *operator=;
};

typedef struct IHttpProtocolListener {
    struct IUnknown IUnknown;
    HRESULT OnStartCallback;
    HRESULT OnSendingRequestCallback;
    HRESULT OnResponseCallback;
    HRESULT OnReadCallback;
    HRESULT OnCompleteCallback;
    HRESULT OnRedirectCallback;
    VOID IHttpProtocolListener;
    VOID IHttpProtocolListener;
    VOID IHttpProtocolListener;
    struct IHttpProtocolListener *operator=;
    struct IHttpProtocolListener *operator=;
};

typedef struct IHttpSecurity {
    struct IWindowForBindingUI IWindowForBindingUI;
    HRESULT OnSecurityProblem;
    VOID IHttpSecurity;
    VOID IHttpSecurity;
    VOID IHttpSecurity;
    struct IHttpSecurity *operator=;
    struct IHttpSecurity *operator=;
};

typedef struct IICCSVGColor {
    struct IDispatch IDispatch;
    VOID IICCSVGColor;
    VOID IICCSVGColor;
    VOID IICCSVGColor;
    struct IICCSVGColor *operator=;
    struct IICCSVGColor *operator=;
};

typedef struct IIE70DispatchEx {
    struct IDispatchEx IDispatchEx;
    VOID IIE70DispatchEx;
    VOID IIE70DispatchEx;
    VOID IIE70DispatchEx;
    struct IIE70DispatchEx *operator=;
    struct IIE70DispatchEx *operator=;
};

typedef struct IIE80DispatchEx {
    struct IDispatchEx IDispatchEx;
    VOID IIE80DispatchEx;
    VOID IIE80DispatchEx;
    VOID IIE80DispatchEx;
    struct IIE80DispatchEx *operator=;
    struct IIE80DispatchEx *operator=;
};

typedef struct IIETldListManager {
    struct IUnknown IUnknown;
    HRESULT IsSuffixTld;
    HRESULT IsSuffixDomain;
    HRESULT ResetIETldListSetting;
    HRESULT OnCleanUpEvent;
    VOID IIETldListManager;
    VOID IIETldListManager;
    VOID IIETldListManager;
    struct IIETldListManager *operator=;
    struct IIETldListManager *operator=;
};

typedef struct IIMEServices {
    struct IUnknown IUnknown;
    HRESULT GetActiveIMM;
    VOID IIMEServices;
    VOID IIMEServices;
    VOID IIMEServices;
    struct IIMEServices *operator=;
    struct IIMEServices *operator=;
};

typedef struct IInitializeSpy {
    struct IUnknown IUnknown;
    HRESULT PreInitialize;
    HRESULT PostInitialize;
    HRESULT PreUninitialize;
    HRESULT PostUninitialize;
    VOID IInitializeSpy;
    VOID IInitializeSpy;
    VOID IInitializeSpy;
    struct IInitializeSpy *operator=;
    struct IInitializeSpy *operator=;
};

typedef struct IInspectable {
    struct IUnknown IUnknown;
    HRESULT GetIids;
    HRESULT GetRuntimeClassName;
    HRESULT GetTrustLevel;
    VOID IInspectable;
    VOID IInspectable;
    VOID IInspectable;
    struct IInspectable *operator=;
    struct IInspectable *operator=;
};

typedef struct IInternalUnknown {
    struct IUnknown IUnknown;
    HRESULT QueryInternalInterface;
    VOID IInternalUnknown;
    VOID IInternalUnknown;
    VOID IInternalUnknown;
    struct IInternalUnknown *operator=;
    struct IInternalUnknown *operator=;
};

typedef struct IInternet {
    struct IUnknown IUnknown;
    VOID IInternet;
    VOID IInternet;
    VOID IInternet;
    struct IInternet *operator=;
    struct IInternet *operator=;
};

typedef struct IInternetBindInfo {
    struct IUnknown IUnknown;
    HRESULT GetBindInfo;
    HRESULT GetBindString;
    VOID IInternetBindInfo;
    VOID IInternetBindInfo;
    VOID IInternetBindInfo;
    struct IInternetBindInfo *operator=;
    struct IInternetBindInfo *operator=;
};

typedef struct IInternetBindInfoEx {
    struct IInternetBindInfo IInternetBindInfo;
    HRESULT GetBindInfoEx;
    VOID IInternetBindInfoEx;
    VOID IInternetBindInfoEx;
    VOID IInternetBindInfoEx;
    struct IInternetBindInfoEx *operator=;
    struct IInternetBindInfoEx *operator=;
};

typedef struct IInternetBindInfoInternal {
    struct IUnknown IUnknown;
    HRESULT GetBindCtx;
    HRESULT GetInternalBindOption;
    VOID IInternetBindInfoInternal;
    VOID IInternetBindInfoInternal;
    VOID IInternetBindInfoInternal;
    struct IInternetBindInfoInternal *operator=;
    struct IInternetBindInfoInternal *operator=;
};

typedef struct IInternetHostSecurityManager {
    struct IUnknown IUnknown;
    HRESULT GetSecurityId;
    HRESULT ProcessUrlAction;
    HRESULT QueryCustomPolicy;
    VOID IInternetHostSecurityManager;
    VOID IInternetHostSecurityManager;
    VOID IInternetHostSecurityManager;
    struct IInternetHostSecurityManager *operator=;
    struct IInternetHostSecurityManager *operator=;
};

typedef struct IInternetPriority {
    struct IUnknown IUnknown;
    HRESULT SetPriority;
    HRESULT GetPriority;
    VOID IInternetPriority;
    VOID IInternetPriority;
    VOID IInternetPriority;
    struct IInternetPriority *operator=;
    struct IInternetPriority *operator=;
};

typedef struct IInternetPriorityInfoInternal {
    struct IUnknown IUnknown;
    HRESULT GetDownloadPriorityInfo;
    VOID IInternetPriorityInfoInternal;
    VOID IInternetPriorityInfoInternal;
    VOID IInternetPriorityInfoInternal;
    struct IInternetPriorityInfoInternal *operator=;
    struct IInternetPriorityInfoInternal *operator=;
};

typedef struct IInternetPriorityInternal {
    struct IUnknown IUnknown;
    HRESULT SetDownloadPriorityInfo;
    VOID IInternetPriorityInternal;
    VOID IInternetPriorityInternal;
    VOID IInternetPriorityInternal;
    struct IInternetPriorityInternal *operator=;
    struct IInternetPriorityInternal *operator=;
};

typedef struct IInternetProtocol {
    struct IInternetProtocolRoot IInternetProtocolRoot;
    HRESULT Read;
    HRESULT Seek;
    HRESULT LockRequest;
    HRESULT UnlockRequest;
    VOID IInternetProtocol;
    VOID IInternetProtocol;
    VOID IInternetProtocol;
    struct IInternetProtocol *operator=;
    struct IInternetProtocol *operator=;
};

typedef struct IInternetProtocolEx {
    struct IInternetProtocol IInternetProtocol;
    HRESULT StartEx;
    VOID IInternetProtocolEx;
    VOID IInternetProtocolEx;
    VOID IInternetProtocolEx;
    struct IInternetProtocolEx *operator=;
    struct IInternetProtocolEx *operator=;
};

typedef struct IInternetProtocolFileProviderInternal {
    struct IUnknown IUnknown;
    HRESULT CreateFileHandle;
    LONG IsAsyncOperationNeeded;
    VOID IInternetProtocolFileProviderInternal;
    VOID IInternetProtocolFileProviderInternal;
    VOID IInternetProtocolFileProviderInternal;
    struct IInternetProtocolFileProviderInternal *operator=;
    struct IInternetProtocolFileProviderInternal *operator=;
};

typedef struct IInternetProtocolInfo {
    struct IUnknown IUnknown;
    HRESULT ParseUrl;
    HRESULT CombineUrl;
    HRESULT CompareUrl;
    HRESULT QueryInfo;
    VOID IInternetProtocolInfo;
    VOID IInternetProtocolInfo;
    VOID IInternetProtocolInfo;
    struct IInternetProtocolInfo *operator=;
    struct IInternetProtocolInfo *operator=;
};

typedef struct IInternetProtocolRoot {
    struct IUnknown IUnknown;
    HRESULT Start;
    HRESULT Continue;
    HRESULT Abort;
    HRESULT Terminate;
    HRESULT Suspend;
    HRESULT Resume;
    VOID IInternetProtocolRoot;
    VOID IInternetProtocolRoot;
    VOID IInternetProtocolRoot;
    struct IInternetProtocolRoot *operator=;
    struct IInternetProtocolRoot *operator=;
};

typedef struct IInternetProtocolSink {
    struct IUnknown IUnknown;
    HRESULT Switch;
    HRESULT ReportProgress;
    HRESULT ReportData;
    HRESULT ReportResult;
    VOID IInternetProtocolSink;
    VOID IInternetProtocolSink;
    VOID IInternetProtocolSink;
    struct IInternetProtocolSink *operator=;
    struct IInternetProtocolSink *operator=;
};

typedef struct IInternetProtocolSinkStackable {
    struct IUnknown IUnknown;
    HRESULT SwitchSink;
    HRESULT CommitSwitch;
    HRESULT RollbackSwitch;
    VOID IInternetProtocolSinkStackable;
    VOID IInternetProtocolSinkStackable;
    VOID IInternetProtocolSinkStackable;
    struct IInternetProtocolSinkStackable *operator=;
    struct IInternetProtocolSinkStackable *operator=;
};

typedef struct IInternetSameSiteCookieInfo {
    struct IUnknown IUnknown;
    HRESULT GetSameSiteCookieLevel;
    VOID IInternetSameSiteCookieInfo;
    VOID IInternetSameSiteCookieInfo;
    VOID IInternetSameSiteCookieInfo;
    struct IInternetSameSiteCookieInfo *operator=;
    struct IInternetSameSiteCookieInfo *operator=;
};

typedef struct IInternetSecurityManager {
    struct IUnknown IUnknown;
    HRESULT SetSecuritySite;
    HRESULT GetSecuritySite;
    HRESULT MapUrlToZone;
    HRESULT GetSecurityId;
    HRESULT ProcessUrlAction;
    HRESULT QueryCustomPolicy;
    HRESULT SetZoneMapping;
    HRESULT GetZoneMappings;
    VOID IInternetSecurityManager;
    VOID IInternetSecurityManager;
    VOID IInternetSecurityManager;
    struct IInternetSecurityManager *operator=;
    struct IInternetSecurityManager *operator=;
};

typedef struct IInternetSecurityManagerEx {
    struct IInternetSecurityManager IInternetSecurityManager;
    HRESULT ProcessUrlActionEx;
    VOID IInternetSecurityManagerEx;
    VOID IInternetSecurityManagerEx;
    VOID IInternetSecurityManagerEx;
    struct IInternetSecurityManagerEx *operator=;
    struct IInternetSecurityManagerEx *operator=;
};

typedef struct IInternetSecurityManagerEx2 {
    struct IInternetSecurityManagerEx IInternetSecurityManagerEx;
    HRESULT MapUrlToZoneEx2;
    HRESULT ProcessUrlActionEx2;
    HRESULT GetSecurityIdEx2;
    HRESULT QueryCustomPolicyEx2;
    VOID IInternetSecurityManagerEx2;
    VOID IInternetSecurityManagerEx2;
    VOID IInternetSecurityManagerEx2;
    struct IInternetSecurityManagerEx2 *operator=;
    struct IInternetSecurityManagerEx2 *operator=;
};

typedef struct IInternetSecurityManagerInternal {
    struct IUnknown IUnknown;
    HRESULT GetSecurityIdFromUriInternal;
    HRESULT GetSecurityIdFromUrlInternal;
    HRESULT MapUriToZoneInternal;
    HRESULT MapUrlToZoneInternal;
    HRESULT GetProcessUrlActionEx2Internal;
    VOID IInternetSecurityManagerInternal;
    VOID IInternetSecurityManagerInternal;
    VOID IInternetSecurityManagerInternal;
    struct IInternetSecurityManagerInternal *operator=;
    struct IInternetSecurityManagerInternal *operator=;
};

typedef struct IInternetSecurityMgrSite {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    HRESULT EnableModeless;
    VOID IInternetSecurityMgrSite;
    VOID IInternetSecurityMgrSite;
    VOID IInternetSecurityMgrSite;
    struct IInternetSecurityMgrSite *operator=;
    struct IInternetSecurityMgrSite *operator=;
};

typedef struct IInternetSession {
    struct IUnknown IUnknown;
    HRESULT RegisterNameSpace;
    HRESULT UnregisterNameSpace;
    HRESULT RegisterMimeFilter;
    HRESULT UnregisterMimeFilter;
    HRESULT CreateBinding;
    HRESULT SetSessionOption;
    HRESULT GetSessionOption;
    VOID IInternetSession;
    VOID IInternetSession;
    VOID IInternetSession;
    struct IInternetSession *operator=;
    struct IInternetSession *operator=;
};

typedef struct IInternetThreadSwitch {
    struct IUnknown IUnknown;
    HRESULT Prepare;
    HRESULT Continue;
    VOID IInternetThreadSwitch;
    VOID IInternetThreadSwitch;
    VOID IInternetThreadSwitch;
    struct IInternetThreadSwitch *operator=;
    struct IInternetThreadSwitch *operator=;
};

typedef struct IInternetZoneManager {
    struct IUnknown IUnknown;
    HRESULT GetZoneAttributes;
    HRESULT SetZoneAttributes;
    HRESULT GetZoneCustomPolicy;
    HRESULT SetZoneCustomPolicy;
    HRESULT GetZoneActionPolicy;
    HRESULT SetZoneActionPolicy;
    HRESULT PromptAction;
    HRESULT LogAction;
    HRESULT CreateZoneEnumerator;
    HRESULT GetZoneAt;
    HRESULT DestroyZoneEnumerator;
    HRESULT CopyTemplatePoliciesToZone;
    VOID IInternetZoneManager;
    VOID IInternetZoneManager;
    VOID IInternetZoneManager;
    struct IInternetZoneManager *operator=;
    struct IInternetZoneManager *operator=;
};

typedef struct IInternetZoneManagerEx {
    struct IInternetZoneManager IInternetZoneManager;
    HRESULT GetZoneActionPolicyEx;
    HRESULT SetZoneActionPolicyEx;
    VOID IInternetZoneManagerEx;
    VOID IInternetZoneManagerEx;
    VOID IInternetZoneManagerEx;
    struct IInternetZoneManagerEx *operator=;
    struct IInternetZoneManagerEx *operator=;
};

typedef struct IInternetZoneManagerEx2 {
    struct IInternetZoneManagerEx IInternetZoneManagerEx;
    HRESULT GetZoneAttributesEx;
    HRESULT GetZoneSecurityState;
    HRESULT GetIESecurityState;
    HRESULT FixUnsecureSettings;
    VOID IInternetZoneManagerEx2;
    VOID IInternetZoneManagerEx2;
    VOID IInternetZoneManagerEx2;
    struct IInternetZoneManagerEx2 *operator=;
    struct IInternetZoneManagerEx2 *operator=;
};

typedef struct ILanguageExceptionErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetLanguageException;
    VOID ILanguageExceptionErrorInfo;
    VOID ILanguageExceptionErrorInfo;
    VOID ILanguageExceptionErrorInfo;
    struct ILanguageExceptionErrorInfo *operator=;
    struct ILanguageExceptionErrorInfo *operator=;
};

typedef struct ILanguageExceptionErrorInfo2 {
    struct ILanguageExceptionErrorInfo ILanguageExceptionErrorInfo;
    HRESULT GetPreviousLanguageExceptionErrorInfo;
    HRESULT CapturePropagationContext;
    HRESULT GetPropagationContextHead;
    VOID ILanguageExceptionErrorInfo2;
    VOID ILanguageExceptionErrorInfo2;
    VOID ILanguageExceptionErrorInfo2;
    struct ILanguageExceptionErrorInfo2 *operator=;
    struct ILanguageExceptionErrorInfo2 *operator=;
};

typedef struct ILanguageExceptionStackBackTrace {
    struct IUnknown IUnknown;
    HRESULT GetStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    struct ILanguageExceptionStackBackTrace *operator=;
    struct ILanguageExceptionStackBackTrace *operator=;
};

typedef struct ILanguageExceptionTransform {
    struct IUnknown IUnknown;
    HRESULT GetTransformedRestrictedErrorInfo;
    VOID ILanguageExceptionTransform;
    VOID ILanguageExceptionTransform;
    VOID ILanguageExceptionTransform;
    struct ILanguageExceptionTransform *operator=;
    struct ILanguageExceptionTransform *operator=;
};

typedef struct ILayoutStorage {
    struct IUnknown IUnknown;
    HRESULT LayoutScript;
    HRESULT BeginMonitor;
    HRESULT EndMonitor;
    HRESULT ReLayoutDocfile;
    HRESULT ReLayoutDocfileOnILockBytes;
    VOID ILayoutStorage;
    VOID ILayoutStorage;
    VOID ILayoutStorage;
    struct ILayoutStorage *operator=;
    struct ILayoutStorage *operator=;
};

typedef struct ILineInfo {
    struct IUnknown IUnknown;
    HRESULT get_x;
    HRESULT get_baseLine;
    HRESULT get_textDescent;
    HRESULT get_textHeight;
    HRESULT get_lineDirection;
    VOID ILineInfo;
    VOID ILineInfo;
    VOID ILineInfo;
    struct ILineInfo *operator=;
    struct ILineInfo *operator=;
};

typedef struct ILockBytes {
    struct IUnknown IUnknown;
    HRESULT ReadAt;
    HRESULT WriteAt;
    HRESULT Flush;
    HRESULT SetSize;
    HRESULT LockRegion;
    HRESULT UnlockRegion;
    HRESULT Stat;
    VOID ILockBytes;
    VOID ILockBytes;
    VOID ILockBytes;
    struct ILockBytes *operator=;
    struct ILockBytes *operator=;
};

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    UCHAR bAuxType;
    UCHAR bReserved;
    ULONG SymbolTableIndex;
    UCHAR rgbReserved[12];
};

typedef struct IMAGE_COR20_HEADER {
    ULONG cb;
    USHORT MajorRuntimeVersion;
    USHORT MinorRuntimeVersion;
    struct _IMAGE_DATA_DIRECTORY MetaData;
    ULONG Flags;
    ULONG EntryPointToken;
    ULONG EntryPointRVA;
    struct _IMAGE_DATA_DIRECTORY Resources;
    struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
    struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
    struct _IMAGE_DATA_DIRECTORY VTableFixups;
    struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
    struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

typedef struct IMLangCodePages {
    struct IUnknown IUnknown;
    HRESULT GetCharCodePages;
    HRESULT GetStrCodePages;
    HRESULT CodePageToCodePages;
    HRESULT CodePagesToCodePage;
    VOID IMLangCodePages;
    VOID IMLangCodePages;
    VOID IMLangCodePages;
    struct IMLangCodePages *operator=;
    struct IMLangCodePages *operator=;
};

typedef struct IMLangConvertCharset {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT GetSourceCodePage;
    HRESULT GetDestinationCodePage;
    HRESULT GetProperty;
    HRESULT DoConversion;
    HRESULT DoConversionToUnicode;
    HRESULT DoConversionFromUnicode;
    VOID IMLangConvertCharset;
    VOID IMLangConvertCharset;
    VOID IMLangConvertCharset;
    struct IMLangConvertCharset *operator=;
    struct IMLangConvertCharset *operator=;
};

typedef struct IMLangFontLink {
    struct IMLangCodePages IMLangCodePages;
    HRESULT GetFontCodePages;
    HRESULT MapFont;
    HRESULT ReleaseFont;
    HRESULT ResetFontMapping;
    VOID IMLangFontLink;
    VOID IMLangFontLink;
    VOID IMLangFontLink;
    struct IMLangFontLink *operator=;
    struct IMLangFontLink *operator=;
};

typedef struct IMLangFontLink2 {
    struct IMLangCodePages IMLangCodePages;
    HRESULT GetFontCodePages;
    HRESULT ReleaseFont;
    HRESULT ResetFontMapping;
    HRESULT MapFont;
    HRESULT GetFontUnicodeRanges;
    HRESULT GetScriptFontInfo;
    HRESULT CodePageToScriptID;
    VOID IMLangFontLink2;
    VOID IMLangFontLink2;
    VOID IMLangFontLink2;
    struct IMLangFontLink2 *operator=;
    struct IMLangFontLink2 *operator=;
};

typedef struct IMLangLineBreakConsole {
    struct IUnknown IUnknown;
    HRESULT BreakLineML;
    HRESULT BreakLineW;
    HRESULT BreakLineA;
    VOID IMLangLineBreakConsole;
    VOID IMLangLineBreakConsole;
    VOID IMLangLineBreakConsole;
    struct IMLangLineBreakConsole *operator=;
    struct IMLangLineBreakConsole *operator=;
};

typedef struct IMLangString {
    struct IUnknown IUnknown;
    HRESULT Sync;
    HRESULT GetLength;
    HRESULT SetMLStr;
    HRESULT GetMLStr;
    VOID IMLangString;
    VOID IMLangString;
    VOID IMLangString;
    struct IMLangString *operator=;
    struct IMLangString *operator=;
};

typedef struct IMLangStringAStr {
    struct IMLangString IMLangString;
    HRESULT SetAStr;
    HRESULT SetStrBufA;
    HRESULT GetAStr;
    HRESULT GetStrBufA;
    HRESULT LockAStr;
    HRESULT UnlockAStr;
    HRESULT SetLocale;
    HRESULT GetLocale;
    VOID IMLangStringAStr;
    VOID IMLangStringAStr;
    VOID IMLangStringAStr;
    struct IMLangStringAStr *operator=;
    struct IMLangStringAStr *operator=;
};

typedef struct IMLangStringBufA {
    struct IUnknown IUnknown;
    HRESULT GetStatus;
    HRESULT LockBuf;
    HRESULT UnlockBuf;
    HRESULT Insert;
    HRESULT Delete;
    VOID IMLangStringBufA;
    VOID IMLangStringBufA;
    VOID IMLangStringBufA;
    struct IMLangStringBufA *operator=;
    struct IMLangStringBufA *operator=;
};

typedef struct IMLangStringBufW {
    struct IUnknown IUnknown;
    HRESULT GetStatus;
    HRESULT LockBuf;
    HRESULT UnlockBuf;
    HRESULT Insert;
    HRESULT Delete;
    VOID IMLangStringBufW;
    VOID IMLangStringBufW;
    VOID IMLangStringBufW;
    struct IMLangStringBufW *operator=;
    struct IMLangStringBufW *operator=;
};

typedef struct IMLangStringWStr {
    struct IMLangString IMLangString;
    HRESULT SetWStr;
    HRESULT SetStrBufW;
    HRESULT GetWStr;
    HRESULT GetStrBufW;
    HRESULT LockWStr;
    HRESULT UnlockWStr;
    HRESULT SetLocale;
    HRESULT GetLocale;
    VOID IMLangStringWStr;
    VOID IMLangStringWStr;
    VOID IMLangStringWStr;
    struct IMLangStringWStr *operator=;
    struct IMLangStringWStr *operator=;
};

typedef struct IMPORT_OBJECT_HEADER {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    ULONG SizeOfData;
    USHORT Ordinal;
    USHORT Hint;
    USHORT Type : 2;
    USHORT NameType : 3;
    USHORT Reserved : 11;
};

typedef struct IMXAttributes {
    struct IDispatch IDispatch;
    HRESULT addAttribute;
    HRESULT addAttributeFromIndex;
    HRESULT clear;
    HRESULT removeAttribute;
    HRESULT setAttribute;
    HRESULT setAttributes;
    HRESULT setLocalName;
    HRESULT setQName;
    HRESULT setType;
    HRESULT setURI;
    HRESULT setValue;
    VOID IMXAttributes;
    VOID IMXAttributes;
    VOID IMXAttributes;
    struct IMXAttributes *operator=;
    struct IMXAttributes *operator=;
};

typedef struct IMXNamespaceManager {
    struct IUnknown IUnknown;
    HRESULT putAllowOverride;
    HRESULT getAllowOverride;
    HRESULT reset;
    HRESULT pushContext;
    HRESULT pushNodeContext;
    HRESULT popContext;
    HRESULT declarePrefix;
    HRESULT getDeclaredPrefix;
    HRESULT getPrefix;
    HRESULT getURI;
    VOID IMXNamespaceManager;
    VOID IMXNamespaceManager;
    VOID IMXNamespaceManager;
    struct IMXNamespaceManager *operator=;
    struct IMXNamespaceManager *operator=;
};

typedef struct IMXNamespacePrefixes {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT get__newEnum;
    VOID IMXNamespacePrefixes;
    VOID IMXNamespacePrefixes;
    VOID IMXNamespacePrefixes;
    struct IMXNamespacePrefixes *operator=;
    struct IMXNamespacePrefixes *operator=;
};

typedef struct IMXRAttributes {
    struct ISAXAttributes ISAXAttributes;
    HRESULT getGrafted;
    HRESULT getTokensLength;
    HRESULT getToken;
    VOID IMXRAttributes;
    VOID IMXRAttributes;
    VOID IMXRAttributes;
    struct IMXRAttributes *operator=;
    struct IMXRAttributes *operator=;
};

typedef struct IMXRContentHandler {
    struct ISAXContentHandler ISAXContentHandler;
    HRESULT startEmptyElement;
    HRESULT endEmptyElement;
    HRESULT whitespace;
    VOID IMXRContentHandler;
    VOID IMXRContentHandler;
    VOID IMXRContentHandler;
    struct IMXRContentHandler *operator=;
    struct IMXRContentHandler *operator=;
};

typedef struct IMXReaderControl {
    struct IDispatch IDispatch;
    HRESULT abort;
    HRESULT resume;
    HRESULT suspend;
    VOID IMXReaderControl;
    VOID IMXReaderControl;
    VOID IMXReaderControl;
    struct IMXReaderControl *operator=;
    struct IMXReaderControl *operator=;
};

typedef struct IMXSchemaDeclHandler {
    struct IDispatch IDispatch;
    HRESULT schemaElementDecl;
    VOID IMXSchemaDeclHandler;
    VOID IMXSchemaDeclHandler;
    VOID IMXSchemaDeclHandler;
    struct IMXSchemaDeclHandler *operator=;
    struct IMXSchemaDeclHandler *operator=;
};

typedef struct IMXWriter {
    struct IDispatch IDispatch;
    HRESULT put_output;
    HRESULT get_output;
    HRESULT put_encoding;
    HRESULT get_encoding;
    HRESULT put_byteOrderMark;
    HRESULT get_byteOrderMark;
    HRESULT put_indent;
    HRESULT get_indent;
    HRESULT put_standalone;
    HRESULT get_standalone;
    HRESULT put_omitXMLDeclaration;
    HRESULT get_omitXMLDeclaration;
    HRESULT put_version;
    HRESULT get_version;
    HRESULT put_disableOutputEscaping;
    HRESULT get_disableOutputEscaping;
    HRESULT flush;
    VOID IMXWriter;
    VOID IMXWriter;
    VOID IMXWriter;
    struct IMXWriter *operator=;
    struct IMXWriter *operator=;
};

typedef struct IMXXMLFilter {
    struct IDispatch IDispatch;
    HRESULT getFeature;
    HRESULT putFeature;
    HRESULT getProperty;
    HRESULT putProperty;
    HRESULT get_entityResolver;
    HRESULT putref_entityResolver;
    HRESULT get_contentHandler;
    HRESULT putref_contentHandler;
    HRESULT get_dtdHandler;
    HRESULT putref_dtdHandler;
    HRESULT get_errorHandler;
    HRESULT putref_errorHandler;
    VOID IMXXMLFilter;
    VOID IMXXMLFilter;
    VOID IMXXMLFilter;
    struct IMXXMLFilter *operator=;
    struct IMXXMLFilter *operator=;
};

typedef struct IMalloc {
    struct IUnknown IUnknown;
    PVOID Alloc;
    PVOID Realloc;
    VOID Free;
    ULONG64 GetSize;
    LONG DidAlloc;
    VOID HeapMinimize;
    VOID IMalloc;
    VOID IMalloc;
    VOID IMalloc;
    struct IMalloc *operator=;
    struct IMalloc *operator=;
};

typedef struct IMallocSpy {
    struct IUnknown IUnknown;
    ULONG64 PreAlloc;
    PVOID PostAlloc;
    PVOID PreFree;
    VOID PostFree;
    ULONG64 PreRealloc;
    PVOID PostRealloc;
    PVOID PreGetSize;
    ULONG64 PostGetSize;
    PVOID PreDidAlloc;
    LONG PostDidAlloc;
    VOID PreHeapMinimize;
    VOID PostHeapMinimize;
    VOID IMallocSpy;
    VOID IMallocSpy;
    VOID IMallocSpy;
    struct IMallocSpy *operator=;
    struct IMallocSpy *operator=;
};

typedef struct IMarkupContainer {
    struct IUnknown IUnknown;
    HRESULT OwningDoc;
    VOID IMarkupContainer;
    VOID IMarkupContainer;
    VOID IMarkupContainer;
    struct IMarkupContainer *operator=;
    struct IMarkupContainer *operator=;
};

typedef struct IMarkupContainer2 {
    struct IMarkupContainer IMarkupContainer;
    HRESULT CreateChangeLog;
    HRESULT RegisterForDirtyRange;
    HRESULT UnRegisterForDirtyRange;
    HRESULT GetAndClearDirtyRange;
    LONG GetVersionNumber;
    HRESULT GetMasterElement;
    VOID IMarkupContainer2;
    VOID IMarkupContainer2;
    VOID IMarkupContainer2;
    struct IMarkupContainer2 *operator=;
    struct IMarkupContainer2 *operator=;
};

typedef struct IMarkupPointer {
    struct IUnknown IUnknown;
    HRESULT OwningDoc;
    HRESULT Gravity;
    HRESULT SetGravity;
    HRESULT Cling;
    HRESULT SetCling;
    HRESULT Unposition;
    HRESULT IsPositioned;
    HRESULT GetContainer;
    HRESULT MoveAdjacentToElement;
    HRESULT MoveToPointer;
    HRESULT MoveToContainer;
    HRESULT Left;
    HRESULT Right;
    HRESULT CurrentScope;
    HRESULT IsLeftOf;
    HRESULT IsLeftOfOrEqualTo;
    HRESULT IsRightOf;
    HRESULT IsRightOfOrEqualTo;
    HRESULT IsEqualTo;
    HRESULT MoveUnit;
    HRESULT FindText;
    VOID IMarkupPointer;
    VOID IMarkupPointer;
    VOID IMarkupPointer;
    struct IMarkupPointer *operator=;
    struct IMarkupPointer *operator=;
};

typedef struct IMarkupPointer2 {
    struct IMarkupPointer IMarkupPointer;
    HRESULT IsAtWordBreak;
    HRESULT GetMarkupPosition;
    HRESULT MoveToMarkupPosition;
    HRESULT MoveUnitBounded;
    HRESULT IsInsideURL;
    HRESULT MoveToContent;
    VOID IMarkupPointer2;
    VOID IMarkupPointer2;
    VOID IMarkupPointer2;
    struct IMarkupPointer2 *operator=;
    struct IMarkupPointer2 *operator=;
};

typedef struct IMarkupServices {
    struct IUnknown IUnknown;
    HRESULT CreateMarkupPointer;
    HRESULT CreateMarkupContainer;
    HRESULT CreateElement;
    HRESULT CloneElement;
    HRESULT InsertElement;
    HRESULT RemoveElement;
    HRESULT Remove;
    HRESULT Copy;
    HRESULT Move;
    HRESULT InsertText;
    HRESULT ParseString;
    HRESULT ParseGlobal;
    HRESULT IsScopedElement;
    HRESULT GetElementTagId;
    HRESULT GetTagIDForName;
    HRESULT GetNameForTagID;
    HRESULT MovePointersToRange;
    HRESULT MoveRangeToPointers;
    HRESULT BeginUndoUnit;
    HRESULT EndUndoUnit;
    VOID IMarkupServices;
    VOID IMarkupServices;
    VOID IMarkupServices;
    struct IMarkupServices *operator=;
    struct IMarkupServices *operator=;
};

typedef struct IMarkupServices2 {
    struct IMarkupServices IMarkupServices;
    HRESULT ParseGlobalEx;
    HRESULT ValidateElements;
    HRESULT SaveSegmentsToClipboard;
    VOID IMarkupServices2;
    VOID IMarkupServices2;
    VOID IMarkupServices2;
    struct IMarkupServices2 *operator=;
    struct IMarkupServices2 *operator=;
};

typedef struct IMarkupTextFrags {
    struct IUnknown IUnknown;
    HRESULT GetTextFragCount;
    HRESULT GetTextFrag;
    HRESULT RemoveTextFrag;
    HRESULT InsertTextFrag;
    HRESULT FindTextFragFromMarkupPointer;
    VOID IMarkupTextFrags;
    VOID IMarkupTextFrags;
    VOID IMarkupTextFrags;
    struct IMarkupTextFrags *operator=;
    struct IMarkupTextFrags *operator=;
};

typedef struct IMarshal {
    struct IUnknown IUnknown;
    HRESULT GetUnmarshalClass;
    HRESULT GetMarshalSizeMax;
    HRESULT MarshalInterface;
    HRESULT UnmarshalInterface;
    HRESULT ReleaseMarshalData;
    HRESULT DisconnectObject;
    VOID IMarshal;
    VOID IMarshal;
    VOID IMarshal;
    struct IMarshal *operator=;
    struct IMarshal *operator=;
};

typedef struct IMarshal2 {
    struct IMarshal IMarshal;
    VOID IMarshal2;
    VOID IMarshal2;
    VOID IMarshal2;
    struct IMarshal2 *operator=;
    struct IMarshal2 *operator=;
};

typedef struct IMarshalingStream {
    struct IStream IStream;
    HRESULT GetMarshalingContextAttribute;
    VOID IMarshalingStream;
    VOID IMarshalingStream;
    VOID IMarshalingStream;
    struct IMarshalingStream *operator=;
    struct IMarshalingStream *operator=;
};

typedef struct IMessageFilter {
    struct IUnknown IUnknown;
    ULONG HandleInComingCall;
    ULONG RetryRejectedCall;
    ULONG MessagePending;
    VOID IMessageFilter;
    VOID IMessageFilter;
    VOID IMessageFilter;
    struct IMessageFilter *operator=;
    struct IMessageFilter *operator=;
};

typedef struct IMoniker {
    struct IPersistStream IPersistStream;
    HRESULT BindToObject;
    HRESULT BindToStorage;
    HRESULT Reduce;
    HRESULT ComposeWith;
    HRESULT Enum;
    HRESULT IsEqual;
    HRESULT Hash;
    HRESULT IsRunning;
    HRESULT GetTimeOfLastChange;
    HRESULT Inverse;
    HRESULT CommonPrefixWith;
    HRESULT RelativePathTo;
    HRESULT GetDisplayName;
    HRESULT ParseDisplayName;
    HRESULT IsSystemMoniker;
    VOID IMoniker;
    VOID IMoniker;
    VOID IMoniker;
    struct IMoniker *operator=;
    struct IMoniker *operator=;
};

typedef struct IMonikerProp {
    struct IUnknown IUnknown;
    HRESULT PutProperty;
    VOID IMonikerProp;
    VOID IMonikerProp;
    VOID IMonikerProp;
    struct IMonikerProp *operator=;
    struct IMonikerProp *operator=;
};

typedef struct IMultiLanguage {
    struct IUnknown IUnknown;
    HRESULT GetNumberOfCodePageInfo;
    HRESULT GetCodePageInfo;
    HRESULT GetFamilyCodePage;
    HRESULT EnumCodePages;
    HRESULT GetCharsetInfo;
    HRESULT IsConvertible;
    HRESULT ConvertString;
    HRESULT ConvertStringToUnicode;
    HRESULT ConvertStringFromUnicode;
    HRESULT ConvertStringReset;
    HRESULT GetRfc1766FromLcid;
    HRESULT GetLcidFromRfc1766;
    HRESULT EnumRfc1766;
    HRESULT GetRfc1766Info;
    HRESULT CreateConvertCharset;
    VOID IMultiLanguage;
    VOID IMultiLanguage;
    VOID IMultiLanguage;
    struct IMultiLanguage *operator=;
    struct IMultiLanguage *operator=;
};

typedef struct IMultiLanguage2 {
    struct IUnknown IUnknown;
    HRESULT GetNumberOfCodePageInfo;
    HRESULT GetCodePageInfo;
    HRESULT GetFamilyCodePage;
    HRESULT EnumCodePages;
    HRESULT GetCharsetInfo;
    HRESULT IsConvertible;
    HRESULT ConvertString;
    HRESULT ConvertStringToUnicode;
    HRESULT ConvertStringFromUnicode;
    HRESULT ConvertStringReset;
    HRESULT GetRfc1766FromLcid;
    HRESULT GetLcidFromRfc1766;
    HRESULT EnumRfc1766;
    HRESULT GetRfc1766Info;
    HRESULT CreateConvertCharset;
    HRESULT ConvertStringInIStream;
    HRESULT ConvertStringToUnicodeEx;
    HRESULT ConvertStringFromUnicodeEx;
    HRESULT DetectCodepageInIStream;
    HRESULT DetectInputCodepage;
    HRESULT ValidateCodePage;
    HRESULT GetCodePageDescription;
    HRESULT IsCodePageInstallable;
    HRESULT SetMimeDBSource;
    HRESULT GetNumberOfScripts;
    HRESULT EnumScripts;
    HRESULT ValidateCodePageEx;
    VOID IMultiLanguage2;
    VOID IMultiLanguage2;
    VOID IMultiLanguage2;
    struct IMultiLanguage2 *operator=;
    struct IMultiLanguage2 *operator=;
};

typedef struct IMultiLanguage3 {
    struct IMultiLanguage2 IMultiLanguage2;
    HRESULT DetectOutboundCodePage;
    HRESULT DetectOutboundCodePageInIStream;
    VOID IMultiLanguage3;
    VOID IMultiLanguage3;
    VOID IMultiLanguage3;
    struct IMultiLanguage3 *operator=;
    struct IMultiLanguage3 *operator=;
};

typedef struct IMultiQI {
    struct IUnknown IUnknown;
    HRESULT QueryMultipleInterfaces;
    VOID IMultiQI;
    VOID IMultiQI;
    VOID IMultiQI;
    struct IMultiQI *operator=;
    struct IMultiQI *operator=;
};

typedef struct INTERNET_ASYNC_RESULT {
    ULONG64 dwResult;
    ULONG dwError;
};

typedef struct INTERNET_AUTH_NOTIFY_DATA {
    ULONG cbStruct;
    ULONG dwOptions;
    PULONG pfnNotify;
    ULONG64 dwContext;
};

typedef struct INTERNET_CERTIFICATE_INFO {
    struct _FILETIME ftExpiry;
    struct _FILETIME ftStart;
    PWCHAR lpszSubjectInfo;
    PWCHAR lpszIssuerInfo;
    PWCHAR lpszProtocolName;
    PWCHAR lpszSignatureAlgName;
    PWCHAR lpszEncryptionAlgName;
    ULONG dwKeySize;
};

typedef struct INTERNET_CONNECTED_INFO {
    ULONG dwConnectedState;
    ULONG dwFlags;
};

typedef struct INTERNET_COOKIE2 {
    PWCHAR pwszName;
    PWCHAR pwszValue;
    PWCHAR pwszDomain;
    PWCHAR pwszPath;
    ULONG dwFlags;
    struct _FILETIME ftExpires;
    LONG fExpiresSet;
};

typedef struct INTERNET_DIAGNOSTIC_SOCKET_INFO {
    ULONG64 Socket;
    ULONG SourcePort;
    ULONG DestPort;
    ULONG Flags;
};

typedef struct INTERNET_PER_CONN_OPTIONA {
    ULONG dwOption;
     <unnamed-type-Value>;
    union {
        ULONG dwValue;
        PCHAR pszValue;
        struct _FILETIME ftValue;
    } Value;
};

typedef struct INTERNET_PER_CONN_OPTIONW {
    ULONG dwOption;
     <unnamed-type-Value>;
    union {
        ULONG dwValue;
        PWCHAR pszValue;
        struct _FILETIME ftValue;
    } Value;
};

typedef struct INTERNET_PER_CONN_OPTION_LISTA {
    ULONG dwSize;
    PCHAR pszConnection;
    ULONG dwOptionCount;
    ULONG dwOptionError;
    struct INTERNET_PER_CONN_OPTIONA *pOptions;
};

typedef struct INTERNET_PER_CONN_OPTION_LISTW {
    ULONG dwSize;
    PWCHAR pszConnection;
    ULONG dwOptionCount;
    ULONG dwOptionError;
    struct INTERNET_PER_CONN_OPTIONW *pOptions;
};

typedef struct INTERNET_PROXY_INFO {
    ULONG dwAccessType;
    PWCHAR lpszProxy;
    PWCHAR lpszProxyBypass;
};

typedef struct INTERNET_VERSION_INFO {
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
};

typedef struct INVOKE_ARG {
    struct tagVARIANT vArg;
    BOOLEAN fClear;
    BOOLEAN fMissing;
};

typedef struct INVOKE_METHOD {
    PWCHAR pwszName;
    LONG dispid;
    UCHAR cArgs;
    PUSHORT rgTypes;
    struct _GUID **rgTypeIds;
    USHORT vtResult;
    USHORT wInvokeType;
};

typedef struct INavigatorDoNotTrack {
    struct IDispatch IDispatch;
    HRESULT get_msDoNotTrack;
    VOID INavigatorDoNotTrack;
    VOID INavigatorDoNotTrack;
    VOID INavigatorDoNotTrack;
    struct INavigatorDoNotTrack *operator=;
    struct INavigatorDoNotTrack *operator=;
};

typedef struct INavigatorGeolocation {
    struct IDispatch IDispatch;
    HRESULT get_geolocation;
    VOID INavigatorGeolocation;
    VOID INavigatorGeolocation;
    VOID INavigatorGeolocation;
    struct INavigatorGeolocation *operator=;
    struct INavigatorGeolocation *operator=;
};

typedef struct INetworkTransportSettings {
    struct IUnknown IUnknown;
    HRESULT ApplySetting;
    HRESULT QuerySetting;
    VOID INetworkTransportSettings;
    VOID INetworkTransportSettings;
    VOID INetworkTransportSettings;
    struct INetworkTransportSettings *operator=;
    struct INetworkTransportSettings *operator=;
};

typedef struct INoMarshal {
    struct IUnknown IUnknown;
    VOID INoMarshal;
    VOID INoMarshal;
    VOID INoMarshal;
    struct INoMarshal *operator=;
    struct INoMarshal *operator=;
};

typedef struct INotificationTransportSync {
    struct IUnknown IUnknown;
    HRESULT CompleteDelivery;
    HRESULT Flush;
    VOID INotificationTransportSync;
    VOID INotificationTransportSync;
    VOID INotificationTransportSync;
    struct INotificationTransportSync *operator=;
    struct INotificationTransportSync *operator=;
};

typedef struct INotifyInternal {
    struct IUnknown IUnknown;
    HRESULT Notify;
    VOID INotifyInternal;
    VOID INotifyInternal;
    VOID INotifyInternal;
    struct INotifyInternal *operator=;
    struct INotifyInternal *operator=;
};

typedef struct IObjectIdentity {
    struct IUnknown IUnknown;
    HRESULT IsEqualObject;
    VOID IObjectIdentity;
    VOID IObjectIdentity;
    VOID IObjectIdentity;
    struct IObjectIdentity *operator=;
    struct IObjectIdentity *operator=;
};

typedef struct IObjectSafety {
    struct IUnknown IUnknown;
    HRESULT GetInterfaceSafetyOptions;
    HRESULT SetInterfaceSafetyOptions;
    VOID IObjectSafety;
    VOID IObjectSafety;
    VOID IObjectSafety;
    struct IObjectSafety *operator=;
    struct IObjectSafety *operator=;
};

typedef struct IObjectWithSite {
    struct IUnknown IUnknown;
    HRESULT SetSite;
    HRESULT GetSite;
    VOID IObjectWithSite;
    VOID IObjectWithSite;
    VOID IObjectWithSite;
    struct IObjectWithSite *operator=;
    struct IObjectWithSite *operator=;
};

typedef struct IOleAdviseHolder {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT SendOnRename;
    HRESULT SendOnSave;
    HRESULT SendOnClose;
    VOID IOleAdviseHolder;
    VOID IOleAdviseHolder;
    VOID IOleAdviseHolder;
    struct IOleAdviseHolder *operator=;
    struct IOleAdviseHolder *operator=;
};

typedef struct IOleCache {
    struct IUnknown IUnknown;
    HRESULT Cache;
    HRESULT Uncache;
    HRESULT EnumCache;
    HRESULT InitCache;
    HRESULT SetData;
    VOID IOleCache;
    VOID IOleCache;
    VOID IOleCache;
    struct IOleCache *operator=;
    struct IOleCache *operator=;
};

typedef struct IOleCache2 {
    struct IOleCache IOleCache;
    HRESULT UpdateCache;
    HRESULT DiscardCache;
    VOID IOleCache2;
    VOID IOleCache2;
    VOID IOleCache2;
    struct IOleCache2 *operator=;
    struct IOleCache2 *operator=;
};

typedef struct IOleCacheControl {
    struct IUnknown IUnknown;
    HRESULT OnRun;
    HRESULT OnStop;
    VOID IOleCacheControl;
    VOID IOleCacheControl;
    VOID IOleCacheControl;
    struct IOleCacheControl *operator=;
    struct IOleCacheControl *operator=;
};

typedef struct IOleClientSite {
    struct IUnknown IUnknown;
    HRESULT SaveObject;
    HRESULT GetMoniker;
    HRESULT GetContainer;
    HRESULT ShowObject;
    HRESULT OnShowWindow;
    HRESULT RequestNewObjectLayout;
    VOID IOleClientSite;
    VOID IOleClientSite;
    VOID IOleClientSite;
    struct IOleClientSite *operator=;
    struct IOleClientSite *operator=;
};

typedef struct IOleCommandTarget {
    struct IUnknown IUnknown;
    HRESULT QueryStatus;
    HRESULT Exec;
    VOID IOleCommandTarget;
    VOID IOleCommandTarget;
    VOID IOleCommandTarget;
    struct IOleCommandTarget *operator=;
    struct IOleCommandTarget *operator=;
};

typedef struct IOleContainer {
    struct IParseDisplayName IParseDisplayName;
    HRESULT EnumObjects;
    HRESULT LockContainer;
    VOID IOleContainer;
    VOID IOleContainer;
    VOID IOleContainer;
    struct IOleContainer *operator=;
    struct IOleContainer *operator=;
};

typedef struct IOleControl {
    struct IUnknown IUnknown;
    HRESULT GetControlInfo;
    HRESULT OnMnemonic;
    HRESULT OnAmbientPropertyChange;
    HRESULT FreezeEvents;
    VOID IOleControl;
    VOID IOleControl;
    VOID IOleControl;
    struct IOleControl *operator=;
    struct IOleControl *operator=;
};

typedef struct IOleControlSite {
    struct IUnknown IUnknown;
    HRESULT OnControlInfoChanged;
    HRESULT LockInPlaceActive;
    HRESULT GetExtendedControl;
    HRESULT TransformCoords;
    HRESULT TranslateAcceleratorW;
    HRESULT OnFocus;
    HRESULT ShowPropertyFrame;
    VOID IOleControlSite;
    VOID IOleControlSite;
    VOID IOleControlSite;
    struct IOleControlSite *operator=;
    struct IOleControlSite *operator=;
};

typedef struct IOleDocument {
    struct IUnknown IUnknown;
    HRESULT CreateView;
    HRESULT GetDocMiscStatus;
    HRESULT EnumViews;
    VOID IOleDocument;
    VOID IOleDocument;
    VOID IOleDocument;
    struct IOleDocument *operator=;
    struct IOleDocument *operator=;
};

typedef struct IOleDocumentSite {
    struct IUnknown IUnknown;
    HRESULT ActivateMe;
    VOID IOleDocumentSite;
    VOID IOleDocumentSite;
    VOID IOleDocumentSite;
    struct IOleDocumentSite *operator=;
    struct IOleDocumentSite *operator=;
};

typedef struct IOleDocumentView {
    struct IUnknown IUnknown;
    HRESULT SetInPlaceSite;
    HRESULT GetInPlaceSite;
    HRESULT GetDocument;
    HRESULT SetRect;
    HRESULT GetRect;
    HRESULT SetRectComplex;
    HRESULT Show;
    HRESULT UIActivate;
    HRESULT Open;
    HRESULT CloseView;
    HRESULT SaveViewState;
    HRESULT ApplyViewState;
    HRESULT Clone;
    VOID IOleDocumentView;
    VOID IOleDocumentView;
    VOID IOleDocumentView;
    struct IOleDocumentView *operator=;
    struct IOleDocumentView *operator=;
};

typedef struct IOleInPlaceActiveObject {
    struct IOleWindow IOleWindow;
    HRESULT TranslateAcceleratorW;
    HRESULT OnFrameWindowActivate;
    HRESULT OnDocWindowActivate;
    HRESULT ResizeBorder;
    HRESULT EnableModeless;
    VOID IOleInPlaceActiveObject;
    VOID IOleInPlaceActiveObject;
    VOID IOleInPlaceActiveObject;
    struct IOleInPlaceActiveObject *operator=;
    struct IOleInPlaceActiveObject *operator=;
};

typedef struct IOleInPlaceFrame {
    struct IOleInPlaceUIWindow IOleInPlaceUIWindow;
    HRESULT InsertMenus;
    HRESULT SetMenu;
    HRESULT RemoveMenus;
    HRESULT SetStatusText;
    HRESULT EnableModeless;
    HRESULT TranslateAcceleratorW;
    VOID IOleInPlaceFrame;
    VOID IOleInPlaceFrame;
    VOID IOleInPlaceFrame;
    struct IOleInPlaceFrame *operator=;
    struct IOleInPlaceFrame *operator=;
};

typedef struct IOleInPlaceObject {
    struct IOleWindow IOleWindow;
    HRESULT InPlaceDeactivate;
    HRESULT UIDeactivate;
    HRESULT SetObjectRects;
    HRESULT ReactivateAndUndo;
    VOID IOleInPlaceObject;
    VOID IOleInPlaceObject;
    VOID IOleInPlaceObject;
    struct IOleInPlaceObject *operator=;
    struct IOleInPlaceObject *operator=;
};

typedef struct IOleInPlaceObjectWindowless {
    struct IOleInPlaceObject IOleInPlaceObject;
    HRESULT OnWindowMessage;
    HRESULT GetDropTarget;
    VOID IOleInPlaceObjectWindowless;
    VOID IOleInPlaceObjectWindowless;
    VOID IOleInPlaceObjectWindowless;
    struct IOleInPlaceObjectWindowless *operator=;
    struct IOleInPlaceObjectWindowless *operator=;
};

typedef struct IOleInPlaceSite {
    struct IOleWindow IOleWindow;
    HRESULT CanInPlaceActivate;
    HRESULT OnInPlaceActivate;
    HRESULT OnUIActivate;
    HRESULT GetWindowContext;
    HRESULT Scroll;
    HRESULT OnUIDeactivate;
    HRESULT OnInPlaceDeactivate;
    HRESULT DiscardUndoState;
    HRESULT DeactivateAndUndo;
    HRESULT OnPosRectChange;
    VOID IOleInPlaceSite;
    VOID IOleInPlaceSite;
    VOID IOleInPlaceSite;
    struct IOleInPlaceSite *operator=;
    struct IOleInPlaceSite *operator=;
};

typedef struct IOleInPlaceSiteEx {
    struct IOleInPlaceSite IOleInPlaceSite;
    HRESULT OnInPlaceActivateEx;
    HRESULT OnInPlaceDeactivateEx;
    HRESULT RequestUIActivate;
    VOID IOleInPlaceSiteEx;
    VOID IOleInPlaceSiteEx;
    VOID IOleInPlaceSiteEx;
    struct IOleInPlaceSiteEx *operator=;
    struct IOleInPlaceSiteEx *operator=;
};

typedef struct IOleInPlaceSiteWindowless {
    struct IOleInPlaceSiteEx IOleInPlaceSiteEx;
    HRESULT CanWindowlessActivate;
    HRESULT GetCapture;
    HRESULT SetCapture;
    HRESULT GetFocus;
    HRESULT SetFocus;
    HRESULT GetDC;
    HRESULT ReleaseDC;
    HRESULT InvalidateRect;
    HRESULT InvalidateRgn;
    HRESULT ScrollRect;
    HRESULT AdjustRect;
    HRESULT OnDefWindowMessage;
    VOID IOleInPlaceSiteWindowless;
    VOID IOleInPlaceSiteWindowless;
    VOID IOleInPlaceSiteWindowless;
    struct IOleInPlaceSiteWindowless *operator=;
    struct IOleInPlaceSiteWindowless *operator=;
};

typedef struct IOleInPlaceUIWindow {
    struct IOleWindow IOleWindow;
    HRESULT GetBorder;
    HRESULT RequestBorderSpace;
    HRESULT SetBorderSpace;
    HRESULT SetActiveObject;
    VOID IOleInPlaceUIWindow;
    VOID IOleInPlaceUIWindow;
    VOID IOleInPlaceUIWindow;
    struct IOleInPlaceUIWindow *operator=;
    struct IOleInPlaceUIWindow *operator=;
};

typedef struct IOleItemContainer {
    struct IOleContainer IOleContainer;
    HRESULT GetObjectW;
    HRESULT GetObjectStorage;
    HRESULT IsRunning;
    VOID IOleItemContainer;
    VOID IOleItemContainer;
    VOID IOleItemContainer;
    struct IOleItemContainer *operator=;
    struct IOleItemContainer *operator=;
};

typedef struct IOleLink {
    struct IUnknown IUnknown;
    HRESULT SetUpdateOptions;
    HRESULT GetUpdateOptions;
    HRESULT SetSourceMoniker;
    HRESULT GetSourceMoniker;
    HRESULT SetSourceDisplayName;
    HRESULT GetSourceDisplayName;
    HRESULT BindToSource;
    HRESULT BindIfRunning;
    HRESULT GetBoundSource;
    HRESULT UnbindSource;
    HRESULT Update;
    VOID IOleLink;
    VOID IOleLink;
    VOID IOleLink;
    struct IOleLink *operator=;
    struct IOleLink *operator=;
};

typedef struct IOleObject {
    struct IUnknown IUnknown;
    HRESULT SetClientSite;
    HRESULT GetClientSite;
    HRESULT SetHostNames;
    HRESULT Close;
    HRESULT SetMoniker;
    HRESULT GetMoniker;
    HRESULT InitFromData;
    HRESULT GetClipboardData;
    HRESULT DoVerb;
    HRESULT EnumVerbs;
    HRESULT Update;
    HRESULT IsUpToDate;
    HRESULT GetUserClassID;
    HRESULT GetUserType;
    HRESULT SetExtent;
    HRESULT GetExtent;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT GetMiscStatus;
    HRESULT SetColorScheme;
    VOID IOleObject;
    VOID IOleObject;
    VOID IOleObject;
    struct IOleObject *operator=;
    struct IOleObject *operator=;
};

typedef struct IOleParentUndoUnit {
    struct IOleUndoUnit IOleUndoUnit;
    HRESULT Open;
    HRESULT Close;
    HRESULT Add;
    HRESULT FindUnit;
    HRESULT GetParentState;
    VOID IOleParentUndoUnit;
    VOID IOleParentUndoUnit;
    VOID IOleParentUndoUnit;
    struct IOleParentUndoUnit *operator=;
    struct IOleParentUndoUnit *operator=;
};

typedef struct IOleUndoManager {
    struct IUnknown IUnknown;
    HRESULT Open;
    HRESULT Close;
    HRESULT Add;
    HRESULT GetOpenParentState;
    HRESULT DiscardFrom;
    HRESULT UndoTo;
    HRESULT RedoTo;
    HRESULT EnumUndoable;
    HRESULT EnumRedoable;
    HRESULT GetLastUndoDescription;
    HRESULT GetLastRedoDescription;
    HRESULT Enable;
    VOID IOleUndoManager;
    VOID IOleUndoManager;
    VOID IOleUndoManager;
    struct IOleUndoManager *operator=;
    struct IOleUndoManager *operator=;
};

typedef struct IOleUndoUnit {
    struct IUnknown IUnknown;
    HRESULT Do;
    HRESULT GetDescription;
    HRESULT GetUnitType;
    HRESULT OnNextAdd;
    VOID IOleUndoUnit;
    VOID IOleUndoUnit;
    VOID IOleUndoUnit;
    struct IOleUndoUnit *operator=;
    struct IOleUndoUnit *operator=;
};

typedef struct IOleWindow {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    HRESULT ContextSensitiveHelp;
    VOID IOleWindow;
    VOID IOleWindow;
    VOID IOleWindow;
    struct IOleWindow *operator=;
    struct IOleWindow *operator=;
};

typedef struct IOmHistory {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT back;
    HRESULT forward;
    HRESULT go;
    VOID IOmHistory;
    VOID IOmHistory;
    VOID IOmHistory;
    struct IOmHistory *operator=;
    struct IOmHistory *operator=;
};

typedef struct IOmNavigator {
    struct IDispatch IDispatch;
    HRESULT get_appCodeName;
    HRESULT get_appName;
    HRESULT get_appVersion;
    HRESULT get_userAgent;
    HRESULT javaEnabled;
    HRESULT taintEnabled;
    HRESULT get_mimeTypes;
    HRESULT get_plugins;
    HRESULT get_cookieEnabled;
    HRESULT get_opsProfile;
    HRESULT toString;
    HRESULT get_cpuClass;
    HRESULT get_systemLanguage;
    HRESULT get_browserLanguage;
    HRESULT get_userLanguage;
    HRESULT get_platform;
    HRESULT get_appMinorVersion;
    HRESULT get_connectionSpeed;
    HRESULT get_onLine;
    HRESULT get_userProfile;
    VOID IOmNavigator;
    VOID IOmNavigator;
    VOID IOmNavigator;
    struct IOmNavigator *operator=;
    struct IOmNavigator *operator=;
};

typedef struct IOplockStorage {
    struct IUnknown IUnknown;
    HRESULT CreateStorageEx;
    HRESULT OpenStorageEx;
    VOID IOplockStorage;
    VOID IOplockStorage;
    VOID IOplockStorage;
    struct IOplockStorage *operator=;
    struct IOplockStorage *operator=;
};

typedef struct IPSFactoryBuffer {
    struct IUnknown IUnknown;
    HRESULT CreateProxy;
    HRESULT CreateStub;
    VOID IPSFactoryBuffer;
    VOID IPSFactoryBuffer;
    VOID IPSFactoryBuffer;
    struct IPSFactoryBuffer *operator=;
    struct IPSFactoryBuffer *operator=;
};

typedef struct IPSFactoryBufferVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *CreateProxy;
    HRESULT *CreateStub;
};

typedef struct IParseDisplayName {
    struct IUnknown IUnknown;
    HRESULT ParseDisplayName;
    VOID IParseDisplayName;
    VOID IParseDisplayName;
    VOID IParseDisplayName;
    struct IParseDisplayName *operator=;
    struct IParseDisplayName *operator=;
};

typedef struct IPerPropertyBrowsing {
    struct IUnknown IUnknown;
    HRESULT GetDisplayString;
    HRESULT MapPropertyToPage;
    HRESULT GetPredefinedStrings;
    HRESULT GetPredefinedValue;
    VOID IPerPropertyBrowsing;
    VOID IPerPropertyBrowsing;
    VOID IPerPropertyBrowsing;
    struct IPerPropertyBrowsing *operator=;
    struct IPerPropertyBrowsing *operator=;
};

typedef struct IPermanentInternetSecurityManagerHelper {
    struct IUnknown IUnknown;
    HRESULT GetZoneForUri;
    VOID IPermanentInternetSecurityManagerHelper;
    VOID IPermanentInternetSecurityManagerHelper;
    VOID IPermanentInternetSecurityManagerHelper;
    struct IPermanentInternetSecurityManagerHelper *operator=;
    struct IPermanentInternetSecurityManagerHelper *operator=;
};

typedef struct IPermanentInternetSecurityManagerInternal {
    struct IUnknown IUnknown;
    VOID IPermanentInternetSecurityManagerInternal;
    VOID IPermanentInternetSecurityManagerInternal;
    VOID IPermanentInternetSecurityManagerInternal;
    struct IPermanentInternetSecurityManagerInternal *operator=;
    struct IPermanentInternetSecurityManagerInternal *operator=;
};

typedef struct IPermanentInternetZonePolicies {
    struct IUnknown IUnknown;
    HRESULT GetZoneActionPolicyEx;
    VOID IPermanentInternetZonePolicies;
    VOID IPermanentInternetZonePolicies;
    VOID IPermanentInternetZonePolicies;
    struct IPermanentInternetZonePolicies *operator=;
    struct IPermanentInternetZonePolicies *operator=;
};

typedef struct IPersist {
    struct IUnknown IUnknown;
    HRESULT GetClassID;
    VOID IPersist;
    VOID IPersist;
    VOID IPersist;
    struct IPersist *operator=;
    struct IPersist *operator=;
};

typedef struct IPersistFile {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT GetCurFile;
    VOID IPersistFile;
    VOID IPersistFile;
    VOID IPersistFile;
    struct IPersistFile *operator=;
    struct IPersistFile *operator=;
};

typedef struct IPersistMemory {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    HRESULT InitNew;
    VOID IPersistMemory;
    VOID IPersistMemory;
    VOID IPersistMemory;
    struct IPersistMemory *operator=;
    struct IPersistMemory *operator=;
};

typedef struct IPersistMoniker {
    struct IUnknown IUnknown;
    HRESULT GetClassID;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT GetCurMoniker;
    VOID IPersistMoniker;
    VOID IPersistMoniker;
    VOID IPersistMoniker;
    struct IPersistMoniker *operator=;
    struct IPersistMoniker *operator=;
};

typedef struct IPersistPropertyBag {
    struct IPersist IPersist;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    VOID IPersistPropertyBag;
    VOID IPersistPropertyBag;
    VOID IPersistPropertyBag;
    struct IPersistPropertyBag *operator=;
    struct IPersistPropertyBag *operator=;
};

typedef struct IPersistPropertyBag2 {
    struct IPersist IPersist;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    HRESULT IsDirty;
    VOID IPersistPropertyBag2;
    VOID IPersistPropertyBag2;
    VOID IPersistPropertyBag2;
    struct IPersistPropertyBag2 *operator=;
    struct IPersistPropertyBag2 *operator=;
};

typedef struct IPersistStorage {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT HandsOffStorage;
    VOID IPersistStorage;
    VOID IPersistStorage;
    VOID IPersistStorage;
    struct IPersistStorage *operator=;
    struct IPersistStorage *operator=;
};

typedef struct IPersistStream {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    VOID IPersistStream;
    VOID IPersistStream;
    VOID IPersistStream;
    struct IPersistStream *operator=;
    struct IPersistStream *operator=;
};

typedef struct IPersistStreamInit {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    HRESULT InitNew;
    VOID IPersistStreamInit;
    VOID IPersistStreamInit;
    VOID IPersistStreamInit;
    struct IPersistStreamInit *operator=;
    struct IPersistStreamInit *operator=;
};

typedef struct IPicture {
    struct IUnknown IUnknown;
    HRESULT get_Handle;
    HRESULT get_hPal;
    HRESULT get_Type;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT Render;
    HRESULT set_hPal;
    HRESULT get_CurDC;
    HRESULT SelectPicture;
    HRESULT get_KeepOriginalFormat;
    HRESULT put_KeepOriginalFormat;
    HRESULT PictureChanged;
    HRESULT SaveAsFile;
    HRESULT get_Attributes;
    VOID IPicture;
    VOID IPicture;
    VOID IPicture;
    struct IPicture *operator=;
    struct IPicture *operator=;
};

typedef struct IPicture2 {
    struct IUnknown IUnknown;
    HRESULT get_Handle;
    HRESULT get_hPal;
    HRESULT get_Type;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT Render;
    HRESULT set_hPal;
    HRESULT get_CurDC;
    HRESULT SelectPicture;
    HRESULT get_KeepOriginalFormat;
    HRESULT put_KeepOriginalFormat;
    HRESULT PictureChanged;
    HRESULT SaveAsFile;
    HRESULT get_Attributes;
    VOID IPicture2;
    VOID IPicture2;
    VOID IPicture2;
    struct IPicture2 *operator=;
    struct IPicture2 *operator=;
};

typedef struct IPictureDisp {
    struct IDispatch IDispatch;
    VOID IPictureDisp;
    VOID IPictureDisp;
    VOID IPictureDisp;
    struct IPictureDisp *operator=;
    struct IPictureDisp *operator=;
};

typedef struct IPipeByte {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeByte;
    VOID IPipeByte;
    VOID IPipeByte;
    struct IPipeByte *operator=;
    struct IPipeByte *operator=;
};

typedef struct IPipeDouble {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeDouble;
    VOID IPipeDouble;
    VOID IPipeDouble;
    struct IPipeDouble *operator=;
    struct IPipeDouble *operator=;
};

typedef struct IPipeLong {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeLong;
    VOID IPipeLong;
    VOID IPipeLong;
    struct IPipeLong *operator=;
    struct IPipeLong *operator=;
};

typedef struct IPointerInactive {
    struct IUnknown IUnknown;
    HRESULT GetActivationPolicy;
    HRESULT OnInactiveMouseMove;
    HRESULT OnInactiveSetCursor;
    VOID IPointerInactive;
    VOID IPointerInactive;
    VOID IPointerInactive;
    struct IPointerInactive *operator=;
    struct IPointerInactive *operator=;
};

typedef struct IPreBinding {
    struct IUnknown IUnknown;
    HRESULT DetachFromPreBind;
    VOID IPreBinding;
    VOID IPreBinding;
    VOID IPreBinding;
    struct IPreBinding *operator=;
    struct IPreBinding *operator=;
};

typedef struct IPreBindingSupport {
    struct IUnknown IUnknown;
    HRESULT EnablePreBinding;
    HRESULT ResumeMainBinding;
    VOID IPreBindingSupport;
    VOID IPreBindingSupport;
    VOID IPreBindingSupport;
    struct IPreBindingSupport *operator=;
    struct IPreBindingSupport *operator=;
};

typedef struct IPrint {
    struct IUnknown IUnknown;
    HRESULT SetInitialPageNum;
    HRESULT GetPageInfo;
    HRESULT Print;
    VOID IPrint;
    VOID IPrint;
    VOID IPrint;
    struct IPrint *operator=;
    struct IPrint *operator=;
};

typedef struct IPrintManagerTemplatePrinter {
    struct IDispatch IDispatch;
    HRESULT startPrint;
    HRESULT drawPreviewPage;
    HRESULT setPageCount;
    HRESULT invalidatePreview;
    HRESULT getPrintTaskOptionValue;
    HRESULT endPrint;
    VOID IPrintManagerTemplatePrinter;
    VOID IPrintManagerTemplatePrinter;
    VOID IPrintManagerTemplatePrinter;
    struct IPrintManagerTemplatePrinter *operator=;
    struct IPrintManagerTemplatePrinter *operator=;
};

typedef struct IPrintManagerTemplatePrinter2 {
    struct IPrintManagerTemplatePrinter IPrintManagerTemplatePrinter;
    HRESULT get_showHeaderFooter;
    HRESULT get_shrinkToFit;
    HRESULT get_percentScale;
    VOID IPrintManagerTemplatePrinter2;
    VOID IPrintManagerTemplatePrinter2;
    VOID IPrintManagerTemplatePrinter2;
    struct IPrintManagerTemplatePrinter2 *operator=;
    struct IPrintManagerTemplatePrinter2 *operator=;
};

typedef struct IProcessInitControl {
    struct IUnknown IUnknown;
    HRESULT ResetInitializerTimeout;
    VOID IProcessInitControl;
    VOID IProcessInitControl;
    VOID IProcessInitControl;
    struct IProcessInitControl *operator=;
    struct IProcessInitControl *operator=;
};

typedef struct IProcessLock {
    struct IUnknown IUnknown;
    ULONG AddRefOnProcess;
    ULONG ReleaseRefOnProcess;
    VOID IProcessLock;
    VOID IProcessLock;
    VOID IProcessLock;
    struct IProcessLock *operator=;
    struct IProcessLock *operator=;
};

typedef struct IProgressNotify {
    struct IUnknown IUnknown;
    HRESULT OnProgress;
    VOID IProgressNotify;
    VOID IProgressNotify;
    VOID IProgressNotify;
    struct IProgressNotify *operator=;
    struct IProgressNotify *operator=;
};

typedef struct IPropertyBag {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    VOID IPropertyBag;
    VOID IPropertyBag;
    VOID IPropertyBag;
    struct IPropertyBag *operator=;
    struct IPropertyBag *operator=;
};

typedef struct IPropertyBag2 {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    HRESULT CountProperties;
    HRESULT GetPropertyInfo;
    HRESULT LoadObject;
    VOID IPropertyBag2;
    VOID IPropertyBag2;
    VOID IPropertyBag2;
    struct IPropertyBag2 *operator=;
    struct IPropertyBag2 *operator=;
};

typedef struct IPropertyNotifySink {
    struct IUnknown IUnknown;
    HRESULT OnChanged;
    HRESULT OnRequestEdit;
    VOID IPropertyNotifySink;
    VOID IPropertyNotifySink;
    VOID IPropertyNotifySink;
    struct IPropertyNotifySink *operator=;
    struct IPropertyNotifySink *operator=;
};

typedef struct IPropertyPage {
    struct IUnknown IUnknown;
    HRESULT SetPageSite;
    HRESULT Activate;
    HRESULT Deactivate;
    HRESULT GetPageInfo;
    HRESULT SetObjects;
    HRESULT Show;
    HRESULT Move;
    HRESULT IsPageDirty;
    HRESULT Apply;
    HRESULT Help;
    HRESULT TranslateAcceleratorW;
    VOID IPropertyPage;
    VOID IPropertyPage;
    VOID IPropertyPage;
    struct IPropertyPage *operator=;
    struct IPropertyPage *operator=;
};

typedef struct IPropertyPage2 {
    struct IPropertyPage IPropertyPage;
    HRESULT EditProperty;
    VOID IPropertyPage2;
    VOID IPropertyPage2;
    VOID IPropertyPage2;
    struct IPropertyPage2 *operator=;
    struct IPropertyPage2 *operator=;
};

typedef struct IPropertyPageSite {
    struct IUnknown IUnknown;
    HRESULT OnStatusChange;
    HRESULT GetLocaleID;
    HRESULT GetPageContainer;
    HRESULT TranslateAcceleratorW;
    VOID IPropertyPageSite;
    VOID IPropertyPageSite;
    VOID IPropertyPageSite;
    struct IPropertyPageSite *operator=;
    struct IPropertyPageSite *operator=;
};

typedef struct IPropertySetStorage {
    struct IUnknown IUnknown;
    HRESULT Create;
    HRESULT Open;
    HRESULT Delete;
    HRESULT Enum;
    VOID IPropertySetStorage;
    VOID IPropertySetStorage;
    VOID IPropertySetStorage;
    struct IPropertySetStorage *operator=;
    struct IPropertySetStorage *operator=;
};

typedef struct IPropertyStorage {
    struct IUnknown IUnknown;
    HRESULT ReadMultiple;
    HRESULT WriteMultiple;
    HRESULT DeleteMultiple;
    HRESULT ReadPropertyNames;
    HRESULT WritePropertyNames;
    HRESULT DeletePropertyNames;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT Enum;
    HRESULT SetTimes;
    HRESULT SetClass;
    HRESULT Stat;
    VOID IPropertyStorage;
    VOID IPropertyStorage;
    VOID IPropertyStorage;
    struct IPropertyStorage *operator=;
    struct IPropertyStorage *operator=;
};

typedef struct IProtectFocus {
    struct IUnknown IUnknown;
    HRESULT AllowFocusChange;
    VOID IProtectFocus;
    VOID IProtectFocus;
    VOID IProtectFocus;
    struct IProtectFocus *operator=;
    struct IProtectFocus *operator=;
};

typedef struct IProtectedModeMenuServices {
    struct IUnknown IUnknown;
    HRESULT CreateMenu;
    HRESULT LoadMenuW;
    HRESULT LoadMenuID;
    VOID IProtectedModeMenuServices;
    VOID IProtectedModeMenuServices;
    VOID IProtectedModeMenuServices;
    struct IProtectedModeMenuServices *operator=;
    struct IProtectedModeMenuServices *operator=;
};

typedef struct IProtocolHandlerValidator {
    struct IUnknown IUnknown;
    HRESULT ValidateClsId;
    VOID IProtocolHandlerValidator;
    VOID IProtocolHandlerValidator;
    VOID IProtocolHandlerValidator;
    struct IProtocolHandlerValidator *operator=;
    struct IProtocolHandlerValidator *operator=;
};

typedef struct IProvideClassInfo {
    struct IUnknown IUnknown;
    HRESULT GetClassInfoW;
    VOID IProvideClassInfo;
    VOID IProvideClassInfo;
    VOID IProvideClassInfo;
    struct IProvideClassInfo *operator=;
    struct IProvideClassInfo *operator=;
};

typedef struct IProvideClassInfo2 {
    struct IProvideClassInfo IProvideClassInfo;
    HRESULT GetGUID;
    VOID IProvideClassInfo2;
    VOID IProvideClassInfo2;
    VOID IProvideClassInfo2;
    struct IProvideClassInfo2 *operator=;
    struct IProvideClassInfo2 *operator=;
};

typedef struct IProvideExpressionContexts {
    struct IUnknown IUnknown;
    HRESULT EnumExpressionContexts;
    VOID IProvideExpressionContexts;
    VOID IProvideExpressionContexts;
    VOID IProvideExpressionContexts;
    struct IProvideExpressionContexts *operator=;
    struct IProvideExpressionContexts *operator=;
};

typedef struct IProvideMultipleClassInfo {
    struct IProvideClassInfo2 IProvideClassInfo2;
    HRESULT GetMultiTypeInfoCount;
    HRESULT GetInfoOfIndex;
    VOID IProvideMultipleClassInfo;
    VOID IProvideMultipleClassInfo;
    VOID IProvideMultipleClassInfo;
    struct IProvideMultipleClassInfo *operator=;
    struct IProvideMultipleClassInfo *operator=;
};

typedef struct IProvideRuntimeContext {
    struct IUnknown IUnknown;
    HRESULT GetCurrentSourceContext;
    VOID IProvideRuntimeContext;
    VOID IProvideRuntimeContext;
    VOID IProvideRuntimeContext;
    struct IProvideRuntimeContext *operator=;
    struct IProvideRuntimeContext *operator=;
};

typedef struct IQueryAssociations {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT GetString;
    HRESULT GetKey;
    HRESULT GetData;
    HRESULT GetEnum;
    VOID IQueryAssociations;
    VOID IQueryAssociations;
    VOID IQueryAssociations;
    struct IQueryAssociations *operator=;
    struct IQueryAssociations *operator=;
};

typedef struct IQueryPopupMgr {
    struct IUnknown IUnknown;
    HRESULT QueryPopupManager;
    VOID IQueryPopupMgr;
    VOID IQueryPopupMgr;
    VOID IQueryPopupMgr;
    struct IQueryPopupMgr *operator=;
    struct IQueryPopupMgr *operator=;
};

typedef struct IQuickActivate {
    struct IUnknown IUnknown;
    HRESULT QuickActivate;
    HRESULT SetContentExtent;
    HRESULT GetContentExtent;
    VOID IQuickActivate;
    VOID IQuickActivate;
    VOID IQuickActivate;
    struct IQuickActivate *operator=;
    struct IQuickActivate *operator=;
};

typedef struct IROTData {
    struct IUnknown IUnknown;
    HRESULT GetComparisonData;
    VOID IROTData;
    VOID IROTData;
    VOID IROTData;
    struct IROTData *operator=;
    struct IROTData *operator=;
};

typedef struct IRangeException {
    struct IDispatch IDispatch;
    HRESULT put_code;
    HRESULT get_code;
    HRESULT get_message;
    VOID IRangeException;
    VOID IRangeException;
    VOID IRangeException;
    struct IRangeException *operator=;
    struct IRangeException *operator=;
};

typedef struct IReadCookie {
    struct IDispatch IDispatch;
    HRESULT get_Item;
    HRESULT get_HasKeys;
    HRESULT get__NewEnum;
    HRESULT get_Count;
    HRESULT get_Key;
    VOID IReadCookie;
    VOID IReadCookie;
    VOID IReadCookie;
    struct IReadCookie *operator=;
    struct IReadCookie *operator=;
};

typedef struct IRecordInfo {
    struct IUnknown IUnknown;
    HRESULT RecordInit;
    HRESULT RecordClear;
    HRESULT RecordCopy;
    HRESULT GetGuid;
    HRESULT GetName;
    HRESULT GetSize;
    HRESULT GetTypeInfo;
    HRESULT GetField;
    HRESULT GetFieldNoCopy;
    HRESULT PutField;
    HRESULT PutFieldNoCopy;
    HRESULT GetFieldNames;
    LONG IsMatchingType;
    PVOID RecordCreate;
    HRESULT RecordCreateCopy;
    HRESULT RecordDestroy;
    VOID IRecordInfo;
    VOID IRecordInfo;
    VOID IRecordInfo;
    struct IRecordInfo *operator=;
    struct IRecordInfo *operator=;
};

typedef struct IRecordInfoVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *RecordInit;
    HRESULT *RecordClear;
    HRESULT *RecordCopy;
    HRESULT *GetGuid;
    HRESULT *GetName;
    HRESULT *GetSize;
    HRESULT *GetTypeInfo;
    HRESULT *GetField;
    HRESULT *GetFieldNoCopy;
    HRESULT *PutField;
    HRESULT *PutFieldNoCopy;
    HRESULT *GetFieldNames;
    PLONG IsMatchingType;
    PVOID *RecordCreate;
    HRESULT *RecordCreateCopy;
    HRESULT *RecordDestroy;
};

typedef struct IReleaseMarshalBuffers {
    struct IUnknown IUnknown;
    HRESULT ReleaseMarshalBuffer;
    VOID IReleaseMarshalBuffers;
    VOID IReleaseMarshalBuffers;
    VOID IReleaseMarshalBuffers;
    struct IReleaseMarshalBuffers *operator=;
    struct IReleaseMarshalBuffers *operator=;
};

typedef struct IRemoteDebugApplication {
    struct IUnknown IUnknown;
    HRESULT ResumeFromBreakPoint;
    HRESULT CauseBreak;
    HRESULT ConnectDebugger;
    HRESULT DisconnectDebugger;
    HRESULT GetDebugger;
    HRESULT CreateInstanceAtApplication;
    HRESULT QueryAlive;
    HRESULT EnumThreads;
    HRESULT GetName;
    HRESULT GetRootNode;
    HRESULT EnumGlobalExpressionContexts;
    VOID IRemoteDebugApplication;
    VOID IRemoteDebugApplication;
    VOID IRemoteDebugApplication;
    struct IRemoteDebugApplication *operator=;
    struct IRemoteDebugApplication *operator=;
};

typedef struct IRemoteDebugApplicationThread {
    struct IUnknown IUnknown;
    HRESULT GetSystemThreadId;
    HRESULT GetApplication;
    HRESULT EnumStackFrames;
    HRESULT GetDescription;
    HRESULT SetNextStatement;
    HRESULT GetState;
    HRESULT Suspend;
    HRESULT Resume;
    HRESULT GetSuspendCount;
    VOID IRemoteDebugApplicationThread;
    VOID IRemoteDebugApplicationThread;
    VOID IRemoteDebugApplicationThread;
    struct IRemoteDebugApplicationThread *operator=;
    struct IRemoteDebugApplicationThread *operator=;
};

typedef struct IRequest {
    struct IDispatch IDispatch;
    HRESULT get_Item;
    HRESULT get_QueryString;
    HRESULT get_Form;
    HRESULT get_Body;
    HRESULT get_ServerVariables;
    HRESULT get_ClientCertificate;
    HRESULT get_Cookies;
    HRESULT get_TotalBytes;
    HRESULT BinaryRead;
    VOID IRequest;
    VOID IRequest;
    VOID IRequest;
    struct IRequest *operator=;
    struct IRequest *operator=;
};

typedef struct IRequestDictionary {
    struct IDispatch IDispatch;
    HRESULT get_Item;
    HRESULT get__NewEnum;
    HRESULT get_Count;
    HRESULT get_Key;
    VOID IRequestDictionary;
    VOID IRequestDictionary;
    VOID IRequestDictionary;
    struct IRequestDictionary *operator=;
    struct IRequestDictionary *operator=;
};

typedef struct IResponse {
    struct IDispatch IDispatch;
    HRESULT get_Buffer;
    HRESULT put_Buffer;
    HRESULT get_ContentType;
    HRESULT put_ContentType;
    HRESULT get_Expires;
    HRESULT put_Expires;
    HRESULT get_ExpiresAbsolute;
    HRESULT put_ExpiresAbsolute;
    HRESULT get_Cookies;
    HRESULT get_Status;
    HRESULT put_Status;
    HRESULT Add;
    HRESULT AddHeader;
    HRESULT AppendToLog;
    HRESULT BinaryWrite;
    HRESULT Clear;
    HRESULT End;
    HRESULT Flush;
    HRESULT Redirect;
    HRESULT Write;
    HRESULT WriteBlock;
    HRESULT IsClientConnected;
    HRESULT get_CharSet;
    HRESULT put_CharSet;
    HRESULT Pics;
    HRESULT get_CacheControl;
    HRESULT put_CacheControl;
    HRESULT get_CodePage;
    HRESULT put_CodePage;
    HRESULT get_LCID;
    HRESULT put_LCID;
    VOID IResponse;
    VOID IResponse;
    VOID IResponse;
    struct IResponse *operator=;
    struct IResponse *operator=;
};

typedef struct IRestrictedErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetErrorDetails;
    HRESULT GetReference;
    VOID IRestrictedErrorInfo;
    VOID IRestrictedErrorInfo;
    VOID IRestrictedErrorInfo;
    struct IRestrictedErrorInfo *operator=;
    struct IRestrictedErrorInfo *operator=;
};

typedef struct IRootStorage {
    struct IUnknown IUnknown;
    HRESULT SwitchToFile;
    VOID IRootStorage;
    VOID IRootStorage;
    VOID IRootStorage;
    struct IRootStorage *operator=;
    struct IRootStorage *operator=;
};

typedef struct IRpcChannelBuffer {
    struct IUnknown IUnknown;
    HRESULT GetBuffer;
    HRESULT SendReceive;
    HRESULT FreeBuffer;
    HRESULT GetDestCtx;
    HRESULT IsConnected;
    VOID IRpcChannelBuffer;
    VOID IRpcChannelBuffer;
    VOID IRpcChannelBuffer;
    struct IRpcChannelBuffer *operator=;
    struct IRpcChannelBuffer *operator=;
};

typedef struct IRpcChannelBuffer2 {
    struct IRpcChannelBuffer IRpcChannelBuffer;
    HRESULT GetProtocolVersion;
    VOID IRpcChannelBuffer2;
    VOID IRpcChannelBuffer2;
    VOID IRpcChannelBuffer2;
    struct IRpcChannelBuffer2 *operator=;
    struct IRpcChannelBuffer2 *operator=;
};

typedef struct IRpcChannelBuffer3 {
    struct IRpcChannelBuffer2 IRpcChannelBuffer2;
    HRESULT Send;
    HRESULT Receive;
    HRESULT Cancel;
    HRESULT GetCallContext;
    HRESULT GetDestCtxEx;
    HRESULT GetState;
    HRESULT RegisterAsync;
    VOID IRpcChannelBuffer3;
    VOID IRpcChannelBuffer3;
    VOID IRpcChannelBuffer3;
    struct IRpcChannelBuffer3 *operator=;
    struct IRpcChannelBuffer3 *operator=;
};

typedef struct IRpcChannelBufferVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *GetBuffer;
    HRESULT *SendReceive;
    HRESULT *FreeBuffer;
    HRESULT *GetDestCtx;
    HRESULT *IsConnected;
};

typedef struct IRpcHelper {
    struct IUnknown IUnknown;
    HRESULT GetDCOMProtocolVersion;
    HRESULT GetIIDFromOBJREF;
    VOID IRpcHelper;
    VOID IRpcHelper;
    VOID IRpcHelper;
    struct IRpcHelper *operator=;
    struct IRpcHelper *operator=;
};

typedef struct IRpcOptions {
    struct IUnknown IUnknown;
    HRESULT Set;
    HRESULT Query;
    VOID IRpcOptions;
    VOID IRpcOptions;
    VOID IRpcOptions;
    struct IRpcOptions *operator=;
    struct IRpcOptions *operator=;
};

typedef struct IRpcProxyBuffer {
    struct IUnknown IUnknown;
    HRESULT Connect;
    VOID Disconnect;
    VOID IRpcProxyBuffer;
    VOID IRpcProxyBuffer;
    VOID IRpcProxyBuffer;
    struct IRpcProxyBuffer *operator=;
    struct IRpcProxyBuffer *operator=;
};

typedef struct IRpcProxyBufferVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *Connect;
    PVOID Disconnect;
};

typedef struct IRpcStubBuffer {
    struct IUnknown IUnknown;
    HRESULT Connect;
    VOID Disconnect;
    HRESULT Invoke;
    struct IRpcStubBuffer *IsIIDSupported;
    ULONG CountRefs;
    HRESULT DebugServerQueryInterface;
    VOID DebugServerRelease;
    VOID IRpcStubBuffer;
    VOID IRpcStubBuffer;
    VOID IRpcStubBuffer;
    struct IRpcStubBuffer *operator=;
    struct IRpcStubBuffer *operator=;
};

typedef struct IRpcStubBufferVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *Connect;
    PVOID Disconnect;
    HRESULT *Invoke;
    struct IRpcStubBuffer **IsIIDSupported;
    PULONG CountRefs;
    HRESULT *DebugServerQueryInterface;
    PVOID DebugServerRelease;
};

typedef struct IRpcSyntaxNegotiate {
    struct IUnknown IUnknown;
    HRESULT NegotiateSyntax;
    VOID IRpcSyntaxNegotiate;
    VOID IRpcSyntaxNegotiate;
    VOID IRpcSyntaxNegotiate;
    struct IRpcSyntaxNegotiate *operator=;
    struct IRpcSyntaxNegotiate *operator=;
};

typedef struct IRulesApplied {
    struct IDispatch IDispatch;
    HRESULT get_element;
    HRESULT get_inlineStyles;
    HRESULT get_appliedRules;
    HRESULT propertyIsInline;
    HRESULT propertyIsInheritable;
    HRESULT hasInheritableProperty;
    VOID IRulesApplied;
    VOID IRulesApplied;
    VOID IRulesApplied;
    struct IRulesApplied *operator=;
    struct IRulesApplied *operator=;
};

typedef struct IRulesAppliedCollection {
    struct IDispatch IDispatch;
    HRESULT item;
    HRESULT get_length;
    HRESULT get_element;
    HRESULT propertyInheritedFrom;
    HRESULT get_propertyCount;
    HRESULT property;
    HRESULT propertyInheritedTrace;
    HRESULT propertyInheritedTraceLength;
    VOID IRulesAppliedCollection;
    VOID IRulesAppliedCollection;
    VOID IRulesAppliedCollection;
    struct IRulesAppliedCollection *operator=;
    struct IRulesAppliedCollection *operator=;
};

typedef struct IRunnableObject {
    struct IUnknown IUnknown;
    HRESULT GetRunningClass;
    HRESULT Run;
    LONG IsRunning;
    HRESULT LockRunning;
    HRESULT SetContainedObject;
    VOID IRunnableObject;
    VOID IRunnableObject;
    VOID IRunnableObject;
    struct IRunnableObject *operator=;
    struct IRunnableObject *operator=;
};

typedef struct IRunningObjectTable {
    struct IUnknown IUnknown;
    HRESULT Register;
    HRESULT Revoke;
    HRESULT IsRunning;
    HRESULT GetObjectW;
    HRESULT NoteChangeTime;
    HRESULT GetTimeOfLastChange;
    HRESULT EnumRunning;
    VOID IRunningObjectTable;
    VOID IRunningObjectTable;
    VOID IRunningObjectTable;
    struct IRunningObjectTable *operator=;
    struct IRunningObjectTable *operator=;
};

typedef struct ISAXAttributes {
    struct IUnknown IUnknown;
    HRESULT getLength;
    HRESULT getURI;
    HRESULT getLocalName;
    HRESULT getQName;
    HRESULT getName;
    HRESULT getIndexFromName;
    HRESULT getIndexFromQName;
    HRESULT getType;
    HRESULT getTypeFromName;
    HRESULT getTypeFromQName;
    HRESULT getValue;
    HRESULT getValueFromName;
    HRESULT getValueFromQName;
    VOID ISAXAttributes;
    VOID ISAXAttributes;
    VOID ISAXAttributes;
    struct ISAXAttributes *operator=;
    struct ISAXAttributes *operator=;
};

typedef struct ISAXContentHandler {
    struct IUnknown IUnknown;
    HRESULT putDocumentLocator;
    HRESULT startDocument;
    HRESULT endDocument;
    HRESULT startPrefixMapping;
    HRESULT endPrefixMapping;
    HRESULT startElement;
    HRESULT endElement;
    HRESULT characters;
    HRESULT ignorableWhitespace;
    HRESULT processingInstruction;
    HRESULT skippedEntity;
    VOID ISAXContentHandler;
    VOID ISAXContentHandler;
    VOID ISAXContentHandler;
    struct ISAXContentHandler *operator=;
    struct ISAXContentHandler *operator=;
};

typedef struct ISAXDTDHandler {
    struct IUnknown IUnknown;
    HRESULT notationDecl;
    HRESULT unparsedEntityDecl;
    VOID ISAXDTDHandler;
    VOID ISAXDTDHandler;
    VOID ISAXDTDHandler;
    struct ISAXDTDHandler *operator=;
    struct ISAXDTDHandler *operator=;
};

typedef struct ISAXDeclHandler {
    struct IUnknown IUnknown;
    HRESULT elementDecl;
    HRESULT attributeDecl;
    HRESULT internalEntityDecl;
    HRESULT externalEntityDecl;
    VOID ISAXDeclHandler;
    VOID ISAXDeclHandler;
    VOID ISAXDeclHandler;
    struct ISAXDeclHandler *operator=;
    struct ISAXDeclHandler *operator=;
};

typedef struct ISAXEntityResolver {
    struct IUnknown IUnknown;
    HRESULT resolveEntity;
    VOID ISAXEntityResolver;
    VOID ISAXEntityResolver;
    VOID ISAXEntityResolver;
    struct ISAXEntityResolver *operator=;
    struct ISAXEntityResolver *operator=;
};

typedef struct ISAXErrorHandler {
    struct IUnknown IUnknown;
    HRESULT error;
    HRESULT fatalError;
    HRESULT ignorableWarning;
    VOID ISAXErrorHandler;
    VOID ISAXErrorHandler;
    VOID ISAXErrorHandler;
    struct ISAXErrorHandler *operator=;
    struct ISAXErrorHandler *operator=;
};

typedef struct ISAXLexicalHandler {
    struct IUnknown IUnknown;
    HRESULT startDTD;
    HRESULT endDTD;
    HRESULT startEntity;
    HRESULT endEntity;
    HRESULT startCDATA;
    HRESULT endCDATA;
    HRESULT comment;
    VOID ISAXLexicalHandler;
    VOID ISAXLexicalHandler;
    VOID ISAXLexicalHandler;
    struct ISAXLexicalHandler *operator=;
    struct ISAXLexicalHandler *operator=;
};

typedef struct ISAXLocator {
    struct IUnknown IUnknown;
    HRESULT getColumnNumber;
    HRESULT getLineNumber;
    HRESULT getPublicId;
    HRESULT getSystemId;
    VOID ISAXLocator;
    VOID ISAXLocator;
    VOID ISAXLocator;
    struct ISAXLocator *operator=;
    struct ISAXLocator *operator=;
};

typedef struct ISAXXMLFilter {
    struct ISAXXMLReader ISAXXMLReader;
    HRESULT getParent;
    HRESULT putParent;
    VOID ISAXXMLFilter;
    VOID ISAXXMLFilter;
    VOID ISAXXMLFilter;
    struct ISAXXMLFilter *operator=;
    struct ISAXXMLFilter *operator=;
};

typedef struct ISAXXMLReader {
    struct IUnknown IUnknown;
    HRESULT getFeature;
    HRESULT putFeature;
    HRESULT getProperty;
    HRESULT putProperty;
    HRESULT getEntityResolver;
    HRESULT putEntityResolver;
    HRESULT getContentHandler;
    HRESULT putContentHandler;
    HRESULT getDTDHandler;
    HRESULT putDTDHandler;
    HRESULT getErrorHandler;
    HRESULT putErrorHandler;
    HRESULT getBaseURL;
    HRESULT putBaseURL;
    HRESULT getSecureBaseURL;
    HRESULT putSecureBaseURL;
    HRESULT parse;
    HRESULT parseURL;
    VOID ISAXXMLReader;
    VOID ISAXXMLReader;
    VOID ISAXXMLReader;
    struct ISAXXMLReader *operator=;
    struct ISAXXMLReader *operator=;
};

typedef struct ISVGAElement {
    struct IDispatch IDispatch;
    HRESULT putref_target;
    HRESULT get_target;
    VOID ISVGAElement;
    VOID ISVGAElement;
    VOID ISVGAElement;
    struct ISVGAElement *operator=;
    struct ISVGAElement *operator=;
};

typedef struct ISVGAngle {
    struct IDispatch IDispatch;
    HRESULT put_unitType;
    HRESULT get_unitType;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_valueInSpecifiedUnits;
    HRESULT get_valueInSpecifiedUnits;
    HRESULT put_valueAsString;
    HRESULT get_valueAsString;
    HRESULT newValueSpecifiedUnits;
    HRESULT convertToSpecifiedUnits;
    VOID ISVGAngle;
    VOID ISVGAngle;
    VOID ISVGAngle;
    struct ISVGAngle *operator=;
    struct ISVGAngle *operator=;
};

typedef struct ISVGAnimatedAngle {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedAngle;
    VOID ISVGAnimatedAngle;
    VOID ISVGAnimatedAngle;
    struct ISVGAnimatedAngle *operator=;
    struct ISVGAnimatedAngle *operator=;
};

typedef struct ISVGAnimatedBoolean {
    struct IDispatch IDispatch;
    HRESULT put_baseVal;
    HRESULT get_baseVal;
    HRESULT put_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedBoolean;
    VOID ISVGAnimatedBoolean;
    VOID ISVGAnimatedBoolean;
    struct ISVGAnimatedBoolean *operator=;
    struct ISVGAnimatedBoolean *operator=;
};

typedef struct ISVGAnimatedEnumeration {
    struct IDispatch IDispatch;
    HRESULT put_baseVal;
    HRESULT get_baseVal;
    HRESULT put_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedEnumeration;
    VOID ISVGAnimatedEnumeration;
    VOID ISVGAnimatedEnumeration;
    struct ISVGAnimatedEnumeration *operator=;
    struct ISVGAnimatedEnumeration *operator=;
};

typedef struct ISVGAnimatedInteger {
    struct IDispatch IDispatch;
    HRESULT put_baseVal;
    HRESULT get_baseVal;
    HRESULT put_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedInteger;
    VOID ISVGAnimatedInteger;
    VOID ISVGAnimatedInteger;
    struct ISVGAnimatedInteger *operator=;
    struct ISVGAnimatedInteger *operator=;
};

typedef struct ISVGAnimatedLength {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedLength;
    VOID ISVGAnimatedLength;
    VOID ISVGAnimatedLength;
    struct ISVGAnimatedLength *operator=;
    struct ISVGAnimatedLength *operator=;
};

typedef struct ISVGAnimatedLengthList {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedLengthList;
    VOID ISVGAnimatedLengthList;
    VOID ISVGAnimatedLengthList;
    struct ISVGAnimatedLengthList *operator=;
    struct ISVGAnimatedLengthList *operator=;
};

typedef struct ISVGAnimatedNumber {
    struct IDispatch IDispatch;
    HRESULT put_baseVal;
    HRESULT get_baseVal;
    HRESULT put_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedNumber;
    VOID ISVGAnimatedNumber;
    VOID ISVGAnimatedNumber;
    struct ISVGAnimatedNumber *operator=;
    struct ISVGAnimatedNumber *operator=;
};

typedef struct ISVGAnimatedNumberList {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedNumberList;
    VOID ISVGAnimatedNumberList;
    VOID ISVGAnimatedNumberList;
    struct ISVGAnimatedNumberList *operator=;
    struct ISVGAnimatedNumberList *operator=;
};

typedef struct ISVGAnimatedPathData {
    struct IDispatch IDispatch;
    HRESULT putref_pathSegList;
    HRESULT get_pathSegList;
    HRESULT putref_normalizedPathSegList;
    HRESULT get_normalizedPathSegList;
    HRESULT putref_animatedPathSegList;
    HRESULT get_animatedPathSegList;
    HRESULT putref_animatedNormalizedPathSegList;
    HRESULT get_animatedNormalizedPathSegList;
    VOID ISVGAnimatedPathData;
    VOID ISVGAnimatedPathData;
    VOID ISVGAnimatedPathData;
    struct ISVGAnimatedPathData *operator=;
    struct ISVGAnimatedPathData *operator=;
};

typedef struct ISVGAnimatedPoints {
    struct IDispatch IDispatch;
    HRESULT putref_points;
    HRESULT get_points;
    HRESULT putref_animatedPoints;
    HRESULT get_animatedPoints;
    VOID ISVGAnimatedPoints;
    VOID ISVGAnimatedPoints;
    VOID ISVGAnimatedPoints;
    struct ISVGAnimatedPoints *operator=;
    struct ISVGAnimatedPoints *operator=;
};

typedef struct ISVGAnimatedPreserveAspectRatio {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedPreserveAspectRatio;
    VOID ISVGAnimatedPreserveAspectRatio;
    VOID ISVGAnimatedPreserveAspectRatio;
    struct ISVGAnimatedPreserveAspectRatio *operator=;
    struct ISVGAnimatedPreserveAspectRatio *operator=;
};

typedef struct ISVGAnimatedRect {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedRect;
    VOID ISVGAnimatedRect;
    VOID ISVGAnimatedRect;
    struct ISVGAnimatedRect *operator=;
    struct ISVGAnimatedRect *operator=;
};

typedef struct ISVGAnimatedString {
    struct IDispatch IDispatch;
    HRESULT put_baseVal;
    HRESULT get_baseVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedString;
    VOID ISVGAnimatedString;
    VOID ISVGAnimatedString;
    struct ISVGAnimatedString *operator=;
    struct ISVGAnimatedString *operator=;
};

typedef struct ISVGAnimatedTransformList {
    struct IDispatch IDispatch;
    HRESULT putref_baseVal;
    HRESULT get_baseVal;
    HRESULT putref_animVal;
    HRESULT get_animVal;
    VOID ISVGAnimatedTransformList;
    VOID ISVGAnimatedTransformList;
    VOID ISVGAnimatedTransformList;
    struct ISVGAnimatedTransformList *operator=;
    struct ISVGAnimatedTransformList *operator=;
};

typedef struct ISVGCircleElement {
    struct IDispatch IDispatch;
    HRESULT putref_cx;
    HRESULT get_cx;
    HRESULT putref_cy;
    HRESULT get_cy;
    HRESULT putref_r;
    HRESULT get_r;
    VOID ISVGCircleElement;
    VOID ISVGCircleElement;
    VOID ISVGCircleElement;
    struct ISVGCircleElement *operator=;
    struct ISVGCircleElement *operator=;
};

typedef struct ISVGClipPathElement {
    struct IDispatch IDispatch;
    HRESULT putref_clipPathUnits;
    HRESULT get_clipPathUnits;
    VOID ISVGClipPathElement;
    VOID ISVGClipPathElement;
    VOID ISVGClipPathElement;
    struct ISVGClipPathElement *operator=;
    struct ISVGClipPathElement *operator=;
};

typedef struct ISVGDefsElement {
    struct IDispatch IDispatch;
    VOID ISVGDefsElement;
    VOID ISVGDefsElement;
    VOID ISVGDefsElement;
    struct ISVGDefsElement *operator=;
    struct ISVGDefsElement *operator=;
};

typedef struct ISVGDescElement {
    struct IDispatch IDispatch;
    VOID ISVGDescElement;
    VOID ISVGDescElement;
    VOID ISVGDescElement;
    struct ISVGDescElement *operator=;
    struct ISVGDescElement *operator=;
};

typedef struct ISVGDocument {
    struct IDispatch IDispatch;
    HRESULT get_rootElement;
    VOID ISVGDocument;
    VOID ISVGDocument;
    VOID ISVGDocument;
    struct ISVGDocument *operator=;
    struct ISVGDocument *operator=;
};

typedef struct ISVGElement {
    struct IDispatch IDispatch;
    HRESULT put_xmlbase;
    HRESULT get_xmlbase;
    HRESULT putref_ownerSVGElement;
    HRESULT get_ownerSVGElement;
    HRESULT putref_viewportElement;
    HRESULT get_viewportElement;
    HRESULT putref_focusable;
    HRESULT get_focusable;
    VOID ISVGElement;
    VOID ISVGElement;
    VOID ISVGElement;
    struct ISVGElement *operator=;
    struct ISVGElement *operator=;
};

typedef struct ISVGElementInstance {
    struct IDispatch IDispatch;
    HRESULT get_correspondingElement;
    HRESULT get_correspondingUseElement;
    HRESULT get_parentNode;
    HRESULT get_childNodes;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_previousSibling;
    HRESULT get_nextSibling;
    VOID ISVGElementInstance;
    VOID ISVGElementInstance;
    VOID ISVGElementInstance;
    struct ISVGElementInstance *operator=;
    struct ISVGElementInstance *operator=;
};

typedef struct ISVGElementInstanceList {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT item;
    VOID ISVGElementInstanceList;
    VOID ISVGElementInstanceList;
    VOID ISVGElementInstanceList;
    struct ISVGElementInstanceList *operator=;
    struct ISVGElementInstanceList *operator=;
};

typedef struct ISVGEllipseElement {
    struct IDispatch IDispatch;
    HRESULT putref_cx;
    HRESULT get_cx;
    HRESULT putref_cy;
    HRESULT get_cy;
    HRESULT putref_rx;
    HRESULT get_rx;
    HRESULT putref_ry;
    HRESULT get_ry;
    VOID ISVGEllipseElement;
    VOID ISVGEllipseElement;
    VOID ISVGEllipseElement;
    struct ISVGEllipseElement *operator=;
    struct ISVGEllipseElement *operator=;
};

typedef struct ISVGException {
    struct IDispatch IDispatch;
    HRESULT put_code;
    HRESULT get_code;
    HRESULT get_message;
    VOID ISVGException;
    VOID ISVGException;
    VOID ISVGException;
    struct ISVGException *operator=;
    struct ISVGException *operator=;
};

typedef struct ISVGExternalResourcesRequired {
    struct IDispatch IDispatch;
    HRESULT get_externalResourcesRequired;
    VOID ISVGExternalResourcesRequired;
    VOID ISVGExternalResourcesRequired;
    VOID ISVGExternalResourcesRequired;
    struct ISVGExternalResourcesRequired *operator=;
    struct ISVGExternalResourcesRequired *operator=;
};

typedef struct ISVGFitToViewBox {
    struct IDispatch IDispatch;
    HRESULT get_viewBox;
    HRESULT putref_preserveAspectRatio;
    HRESULT get_preserveAspectRatio;
    VOID ISVGFitToViewBox;
    VOID ISVGFitToViewBox;
    VOID ISVGFitToViewBox;
    struct ISVGFitToViewBox *operator=;
    struct ISVGFitToViewBox *operator=;
};

typedef struct ISVGGElement {
    struct IDispatch IDispatch;
    VOID ISVGGElement;
    VOID ISVGGElement;
    VOID ISVGGElement;
    struct ISVGGElement *operator=;
    struct ISVGGElement *operator=;
};

typedef struct ISVGGradientElement {
    struct IDispatch IDispatch;
    HRESULT putref_gradientUnits;
    HRESULT get_gradientUnits;
    HRESULT putref_gradientTransform;
    HRESULT get_gradientTransform;
    HRESULT putref_spreadMethod;
    HRESULT get_spreadMethod;
    VOID ISVGGradientElement;
    VOID ISVGGradientElement;
    VOID ISVGGradientElement;
    struct ISVGGradientElement *operator=;
    struct ISVGGradientElement *operator=;
};

typedef struct ISVGImageElement {
    struct IDispatch IDispatch;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    VOID ISVGImageElement;
    VOID ISVGImageElement;
    VOID ISVGImageElement;
    struct ISVGImageElement *operator=;
    struct ISVGImageElement *operator=;
};

typedef struct ISVGLangSpace {
    struct IDispatch IDispatch;
    HRESULT put_xmllang;
    HRESULT get_xmllang;
    HRESULT put_xmlspace;
    HRESULT get_xmlspace;
    VOID ISVGLangSpace;
    VOID ISVGLangSpace;
    VOID ISVGLangSpace;
    struct ISVGLangSpace *operator=;
    struct ISVGLangSpace *operator=;
};

typedef struct ISVGLength {
    struct IDispatch IDispatch;
    HRESULT put_unitType;
    HRESULT get_unitType;
    HRESULT put_value;
    HRESULT get_value;
    HRESULT put_valueInSpecifiedUnits;
    HRESULT get_valueInSpecifiedUnits;
    HRESULT put_valueAsString;
    HRESULT get_valueAsString;
    HRESULT newValueSpecifiedUnits;
    HRESULT convertToSpecifiedUnits;
    VOID ISVGLength;
    VOID ISVGLength;
    VOID ISVGLength;
    struct ISVGLength *operator=;
    struct ISVGLength *operator=;
};

typedef struct ISVGLengthList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    VOID ISVGLengthList;
    VOID ISVGLengthList;
    VOID ISVGLengthList;
    struct ISVGLengthList *operator=;
    struct ISVGLengthList *operator=;
};

typedef struct ISVGLineElement {
    struct IDispatch IDispatch;
    HRESULT putref_x1;
    HRESULT get_x1;
    HRESULT putref_y1;
    HRESULT get_y1;
    HRESULT putref_x2;
    HRESULT get_x2;
    HRESULT putref_y2;
    HRESULT get_y2;
    VOID ISVGLineElement;
    VOID ISVGLineElement;
    VOID ISVGLineElement;
    struct ISVGLineElement *operator=;
    struct ISVGLineElement *operator=;
};

typedef struct ISVGLinearGradientElement {
    struct IDispatch IDispatch;
    HRESULT putref_x1;
    HRESULT get_x1;
    HRESULT putref_y1;
    HRESULT get_y1;
    HRESULT putref_x2;
    HRESULT get_x2;
    HRESULT putref_y2;
    HRESULT get_y2;
    VOID ISVGLinearGradientElement;
    VOID ISVGLinearGradientElement;
    VOID ISVGLinearGradientElement;
    struct ISVGLinearGradientElement *operator=;
    struct ISVGLinearGradientElement *operator=;
};

typedef struct ISVGLocatable {
    struct IDispatch IDispatch;
    HRESULT get_nearestViewportElement;
    HRESULT get_farthestViewportElement;
    HRESULT getBBox;
    HRESULT getCTM;
    HRESULT getScreenCTM;
    HRESULT getTransformToElement;
    VOID ISVGLocatable;
    VOID ISVGLocatable;
    VOID ISVGLocatable;
    struct ISVGLocatable *operator=;
    struct ISVGLocatable *operator=;
};

typedef struct ISVGMarkerElement {
    struct IDispatch IDispatch;
    HRESULT putref_refX;
    HRESULT get_refX;
    HRESULT putref_refY;
    HRESULT get_refY;
    HRESULT putref_markerUnits;
    HRESULT get_markerUnits;
    HRESULT putref_markerWidth;
    HRESULT get_markerWidth;
    HRESULT putref_markerHeight;
    HRESULT get_markerHeight;
    HRESULT putref_orientType;
    HRESULT get_orientType;
    HRESULT putref_orientAngle;
    HRESULT get_orientAngle;
    HRESULT setOrientToAuto;
    HRESULT setOrientToAngle;
    VOID ISVGMarkerElement;
    VOID ISVGMarkerElement;
    VOID ISVGMarkerElement;
    struct ISVGMarkerElement *operator=;
    struct ISVGMarkerElement *operator=;
};

typedef struct ISVGMaskElement {
    struct IDispatch IDispatch;
    HRESULT putref_maskUnits;
    HRESULT get_maskUnits;
    HRESULT putref_maskContentUnits;
    HRESULT get_maskContentUnits;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    VOID ISVGMaskElement;
    VOID ISVGMaskElement;
    VOID ISVGMaskElement;
    struct ISVGMaskElement *operator=;
    struct ISVGMaskElement *operator=;
};

typedef struct ISVGMatrix {
    struct IDispatch IDispatch;
    HRESULT put_a;
    HRESULT get_a;
    HRESULT put_b;
    HRESULT get_b;
    HRESULT put_c;
    HRESULT get_c;
    HRESULT put_d;
    HRESULT get_d;
    HRESULT put_e;
    HRESULT get_e;
    HRESULT put_f;
    HRESULT get_f;
    HRESULT multiply;
    HRESULT inverse;
    HRESULT translate;
    HRESULT scale;
    HRESULT scaleNonUniform;
    HRESULT rotate;
    HRESULT rotateFromVector;
    HRESULT flipX;
    HRESULT flipY;
    HRESULT skewX;
    HRESULT skewY;
    VOID ISVGMatrix;
    VOID ISVGMatrix;
    VOID ISVGMatrix;
    struct ISVGMatrix *operator=;
    struct ISVGMatrix *operator=;
};

typedef struct ISVGMetadataElement {
    struct IDispatch IDispatch;
    VOID ISVGMetadataElement;
    VOID ISVGMetadataElement;
    VOID ISVGMetadataElement;
    struct ISVGMetadataElement *operator=;
    struct ISVGMetadataElement *operator=;
};

typedef struct ISVGNumber {
    struct IDispatch IDispatch;
    HRESULT put_value;
    HRESULT get_value;
    VOID ISVGNumber;
    VOID ISVGNumber;
    VOID ISVGNumber;
    struct ISVGNumber *operator=;
    struct ISVGNumber *operator=;
};

typedef struct ISVGNumberList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    VOID ISVGNumberList;
    VOID ISVGNumberList;
    VOID ISVGNumberList;
    struct ISVGNumberList *operator=;
    struct ISVGNumberList *operator=;
};

typedef struct ISVGPaint {
    struct IDispatch IDispatch;
    VOID ISVGPaint;
    VOID ISVGPaint;
    VOID ISVGPaint;
    struct ISVGPaint *operator=;
    struct ISVGPaint *operator=;
};

typedef struct ISVGPathElement {
    struct IDispatch IDispatch;
    HRESULT putref_pathLength;
    HRESULT get_pathLength;
    HRESULT getTotalLength;
    HRESULT getPointAtLength;
    HRESULT getPathSegAtLength;
    HRESULT createSVGPathSegClosePath;
    HRESULT createSVGPathSegMovetoAbs;
    HRESULT createSVGPathSegMovetoRel;
    HRESULT createSVGPathSegLinetoAbs;
    HRESULT createSVGPathSegLinetoRel;
    HRESULT createSVGPathSegCurvetoCubicAbs;
    HRESULT createSVGPathSegCurvetoCubicRel;
    HRESULT createSVGPathSegCurvetoQuadraticAbs;
    HRESULT createSVGPathSegCurvetoQuadraticRel;
    HRESULT createSVGPathSegArcAbs;
    HRESULT createSVGPathSegArcRel;
    HRESULT createSVGPathSegLinetoHorizontalAbs;
    HRESULT createSVGPathSegLinetoHorizontalRel;
    HRESULT createSVGPathSegLinetoVerticalAbs;
    HRESULT createSVGPathSegLinetoVerticalRel;
    HRESULT createSVGPathSegCurvetoCubicSmoothAbs;
    HRESULT createSVGPathSegCurvetoCubicSmoothRel;
    HRESULT createSVGPathSegCurvetoQuadraticSmoothAbs;
    HRESULT createSVGPathSegCurvetoQuadraticSmoothRel;
    VOID ISVGPathElement;
    VOID ISVGPathElement;
    VOID ISVGPathElement;
    struct ISVGPathElement *operator=;
    struct ISVGPathElement *operator=;
};

typedef struct ISVGPathSeg {
    struct IDispatch IDispatch;
    HRESULT put_pathSegType;
    HRESULT get_pathSegType;
    HRESULT get_pathSegTypeAsLetter;
    VOID ISVGPathSeg;
    VOID ISVGPathSeg;
    VOID ISVGPathSeg;
    struct ISVGPathSeg *operator=;
    struct ISVGPathSeg *operator=;
};

typedef struct ISVGPathSegArcAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_r1;
    HRESULT get_r1;
    HRESULT put_r2;
    HRESULT get_r2;
    HRESULT put_angle;
    HRESULT get_angle;
    HRESULT put_largeArcFlag;
    HRESULT get_largeArcFlag;
    HRESULT put_sweepFlag;
    HRESULT get_sweepFlag;
    VOID ISVGPathSegArcAbs;
    VOID ISVGPathSegArcAbs;
    VOID ISVGPathSegArcAbs;
    struct ISVGPathSegArcAbs *operator=;
    struct ISVGPathSegArcAbs *operator=;
};

typedef struct ISVGPathSegArcRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_r1;
    HRESULT get_r1;
    HRESULT put_r2;
    HRESULT get_r2;
    HRESULT put_angle;
    HRESULT get_angle;
    HRESULT put_largeArcFlag;
    HRESULT get_largeArcFlag;
    HRESULT put_sweepFlag;
    HRESULT get_sweepFlag;
    VOID ISVGPathSegArcRel;
    VOID ISVGPathSegArcRel;
    VOID ISVGPathSegArcRel;
    struct ISVGPathSegArcRel *operator=;
    struct ISVGPathSegArcRel *operator=;
};

typedef struct ISVGPathSegClosePath {
    struct IDispatch IDispatch;
    VOID ISVGPathSegClosePath;
    VOID ISVGPathSegClosePath;
    VOID ISVGPathSegClosePath;
    struct ISVGPathSegClosePath *operator=;
    struct ISVGPathSegClosePath *operator=;
};

typedef struct ISVGPathSegCurvetoCubicAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x1;
    HRESULT get_x1;
    HRESULT put_y1;
    HRESULT get_y1;
    HRESULT put_x2;
    HRESULT get_x2;
    HRESULT put_y2;
    HRESULT get_y2;
    VOID ISVGPathSegCurvetoCubicAbs;
    VOID ISVGPathSegCurvetoCubicAbs;
    VOID ISVGPathSegCurvetoCubicAbs;
    struct ISVGPathSegCurvetoCubicAbs *operator=;
    struct ISVGPathSegCurvetoCubicAbs *operator=;
};

typedef struct ISVGPathSegCurvetoCubicRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x1;
    HRESULT get_x1;
    HRESULT put_y1;
    HRESULT get_y1;
    HRESULT put_x2;
    HRESULT get_x2;
    HRESULT put_y2;
    HRESULT get_y2;
    VOID ISVGPathSegCurvetoCubicRel;
    VOID ISVGPathSegCurvetoCubicRel;
    VOID ISVGPathSegCurvetoCubicRel;
    struct ISVGPathSegCurvetoCubicRel *operator=;
    struct ISVGPathSegCurvetoCubicRel *operator=;
};

typedef struct ISVGPathSegCurvetoCubicSmoothAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x2;
    HRESULT get_x2;
    HRESULT put_y2;
    HRESULT get_y2;
    VOID ISVGPathSegCurvetoCubicSmoothAbs;
    VOID ISVGPathSegCurvetoCubicSmoothAbs;
    VOID ISVGPathSegCurvetoCubicSmoothAbs;
    struct ISVGPathSegCurvetoCubicSmoothAbs *operator=;
    struct ISVGPathSegCurvetoCubicSmoothAbs *operator=;
};

typedef struct ISVGPathSegCurvetoCubicSmoothRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x2;
    HRESULT get_x2;
    HRESULT put_y2;
    HRESULT get_y2;
    VOID ISVGPathSegCurvetoCubicSmoothRel;
    VOID ISVGPathSegCurvetoCubicSmoothRel;
    VOID ISVGPathSegCurvetoCubicSmoothRel;
    struct ISVGPathSegCurvetoCubicSmoothRel *operator=;
    struct ISVGPathSegCurvetoCubicSmoothRel *operator=;
};

typedef struct ISVGPathSegCurvetoQuadraticAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x1;
    HRESULT get_x1;
    HRESULT put_y1;
    HRESULT get_y1;
    VOID ISVGPathSegCurvetoQuadraticAbs;
    VOID ISVGPathSegCurvetoQuadraticAbs;
    VOID ISVGPathSegCurvetoQuadraticAbs;
    struct ISVGPathSegCurvetoQuadraticAbs *operator=;
    struct ISVGPathSegCurvetoQuadraticAbs *operator=;
};

typedef struct ISVGPathSegCurvetoQuadraticRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_x1;
    HRESULT get_x1;
    HRESULT put_y1;
    HRESULT get_y1;
    VOID ISVGPathSegCurvetoQuadraticRel;
    VOID ISVGPathSegCurvetoQuadraticRel;
    VOID ISVGPathSegCurvetoQuadraticRel;
    struct ISVGPathSegCurvetoQuadraticRel *operator=;
    struct ISVGPathSegCurvetoQuadraticRel *operator=;
};

typedef struct ISVGPathSegCurvetoQuadraticSmoothAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegCurvetoQuadraticSmoothAbs;
    VOID ISVGPathSegCurvetoQuadraticSmoothAbs;
    VOID ISVGPathSegCurvetoQuadraticSmoothAbs;
    struct ISVGPathSegCurvetoQuadraticSmoothAbs *operator=;
    struct ISVGPathSegCurvetoQuadraticSmoothAbs *operator=;
};

typedef struct ISVGPathSegCurvetoQuadraticSmoothRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegCurvetoQuadraticSmoothRel;
    VOID ISVGPathSegCurvetoQuadraticSmoothRel;
    VOID ISVGPathSegCurvetoQuadraticSmoothRel;
    struct ISVGPathSegCurvetoQuadraticSmoothRel *operator=;
    struct ISVGPathSegCurvetoQuadraticSmoothRel *operator=;
};

typedef struct ISVGPathSegLinetoAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegLinetoAbs;
    VOID ISVGPathSegLinetoAbs;
    VOID ISVGPathSegLinetoAbs;
    struct ISVGPathSegLinetoAbs *operator=;
    struct ISVGPathSegLinetoAbs *operator=;
};

typedef struct ISVGPathSegLinetoHorizontalAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    VOID ISVGPathSegLinetoHorizontalAbs;
    VOID ISVGPathSegLinetoHorizontalAbs;
    VOID ISVGPathSegLinetoHorizontalAbs;
    struct ISVGPathSegLinetoHorizontalAbs *operator=;
    struct ISVGPathSegLinetoHorizontalAbs *operator=;
};

typedef struct ISVGPathSegLinetoHorizontalRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    VOID ISVGPathSegLinetoHorizontalRel;
    VOID ISVGPathSegLinetoHorizontalRel;
    VOID ISVGPathSegLinetoHorizontalRel;
    struct ISVGPathSegLinetoHorizontalRel *operator=;
    struct ISVGPathSegLinetoHorizontalRel *operator=;
};

typedef struct ISVGPathSegLinetoRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegLinetoRel;
    VOID ISVGPathSegLinetoRel;
    VOID ISVGPathSegLinetoRel;
    struct ISVGPathSegLinetoRel *operator=;
    struct ISVGPathSegLinetoRel *operator=;
};

typedef struct ISVGPathSegLinetoVerticalAbs {
    struct IDispatch IDispatch;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegLinetoVerticalAbs;
    VOID ISVGPathSegLinetoVerticalAbs;
    VOID ISVGPathSegLinetoVerticalAbs;
    struct ISVGPathSegLinetoVerticalAbs *operator=;
    struct ISVGPathSegLinetoVerticalAbs *operator=;
};

typedef struct ISVGPathSegLinetoVerticalRel {
    struct IDispatch IDispatch;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegLinetoVerticalRel;
    VOID ISVGPathSegLinetoVerticalRel;
    VOID ISVGPathSegLinetoVerticalRel;
    struct ISVGPathSegLinetoVerticalRel *operator=;
    struct ISVGPathSegLinetoVerticalRel *operator=;
};

typedef struct ISVGPathSegList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    VOID ISVGPathSegList;
    VOID ISVGPathSegList;
    VOID ISVGPathSegList;
    struct ISVGPathSegList *operator=;
    struct ISVGPathSegList *operator=;
};

typedef struct ISVGPathSegMovetoAbs {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegMovetoAbs;
    VOID ISVGPathSegMovetoAbs;
    VOID ISVGPathSegMovetoAbs;
    struct ISVGPathSegMovetoAbs *operator=;
    struct ISVGPathSegMovetoAbs *operator=;
};

typedef struct ISVGPathSegMovetoRel {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    VOID ISVGPathSegMovetoRel;
    VOID ISVGPathSegMovetoRel;
    VOID ISVGPathSegMovetoRel;
    struct ISVGPathSegMovetoRel *operator=;
    struct ISVGPathSegMovetoRel *operator=;
};

typedef struct ISVGPatternElement {
    struct IDispatch IDispatch;
    HRESULT putref_patternUnits;
    HRESULT get_patternUnits;
    HRESULT putref_patternContentUnits;
    HRESULT get_patternContentUnits;
    HRESULT putref_patternTransform;
    HRESULT get_patternTransform;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    VOID ISVGPatternElement;
    VOID ISVGPatternElement;
    VOID ISVGPatternElement;
    struct ISVGPatternElement *operator=;
    struct ISVGPatternElement *operator=;
};

typedef struct ISVGPoint {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT matrixTransform;
    VOID ISVGPoint;
    VOID ISVGPoint;
    VOID ISVGPoint;
    struct ISVGPoint *operator=;
    struct ISVGPoint *operator=;
};

typedef struct ISVGPointList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    VOID ISVGPointList;
    VOID ISVGPointList;
    VOID ISVGPointList;
    struct ISVGPointList *operator=;
    struct ISVGPointList *operator=;
};

typedef struct ISVGPolygonElement {
    struct IDispatch IDispatch;
    VOID ISVGPolygonElement;
    VOID ISVGPolygonElement;
    VOID ISVGPolygonElement;
    struct ISVGPolygonElement *operator=;
    struct ISVGPolygonElement *operator=;
};

typedef struct ISVGPolylineElement {
    struct IDispatch IDispatch;
    VOID ISVGPolylineElement;
    VOID ISVGPolylineElement;
    VOID ISVGPolylineElement;
    struct ISVGPolylineElement *operator=;
    struct ISVGPolylineElement *operator=;
};

typedef struct ISVGPreserveAspectRatio {
    struct IDispatch IDispatch;
    HRESULT put_align;
    HRESULT get_align;
    HRESULT put_meetOrSlice;
    HRESULT get_meetOrSlice;
    VOID ISVGPreserveAspectRatio;
    VOID ISVGPreserveAspectRatio;
    VOID ISVGPreserveAspectRatio;
    struct ISVGPreserveAspectRatio *operator=;
    struct ISVGPreserveAspectRatio *operator=;
};

typedef struct ISVGRadialGradientElement {
    struct IDispatch IDispatch;
    HRESULT putref_cx;
    HRESULT get_cx;
    HRESULT putref_cy;
    HRESULT get_cy;
    HRESULT putref_r;
    HRESULT get_r;
    HRESULT putref_fx;
    HRESULT get_fx;
    HRESULT putref_fy;
    HRESULT get_fy;
    VOID ISVGRadialGradientElement;
    VOID ISVGRadialGradientElement;
    VOID ISVGRadialGradientElement;
    struct ISVGRadialGradientElement *operator=;
    struct ISVGRadialGradientElement *operator=;
};

typedef struct ISVGRect {
    struct IDispatch IDispatch;
    HRESULT put_x;
    HRESULT get_x;
    HRESULT put_y;
    HRESULT get_y;
    HRESULT put_width;
    HRESULT get_width;
    HRESULT put_height;
    HRESULT get_height;
    VOID ISVGRect;
    VOID ISVGRect;
    VOID ISVGRect;
    struct ISVGRect *operator=;
    struct ISVGRect *operator=;
};

typedef struct ISVGRectElement {
    struct IDispatch IDispatch;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    HRESULT putref_rx;
    HRESULT get_rx;
    HRESULT putref_ry;
    HRESULT get_ry;
    VOID ISVGRectElement;
    VOID ISVGRectElement;
    VOID ISVGRectElement;
    struct ISVGRectElement *operator=;
    struct ISVGRectElement *operator=;
};

typedef struct ISVGSVGElement {
    struct IDispatch IDispatch;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    HRESULT put_contentScriptType;
    HRESULT get_contentScriptType;
    HRESULT put_contentStyleType;
    HRESULT get_contentStyleType;
    HRESULT putref_viewport;
    HRESULT get_viewport;
    HRESULT put_pixelUnitToMillimeterX;
    HRESULT get_pixelUnitToMillimeterX;
    HRESULT put_pixelUnitToMillimeterY;
    HRESULT get_pixelUnitToMillimeterY;
    HRESULT put_screenPixelToMillimeterX;
    HRESULT get_screenPixelToMillimeterX;
    HRESULT put_screenPixelToMillimeterY;
    HRESULT get_screenPixelToMillimeterY;
    HRESULT put_useCurrentView;
    HRESULT get_useCurrentView;
    HRESULT putref_currentView;
    HRESULT get_currentView;
    HRESULT put_currentScale;
    HRESULT get_currentScale;
    HRESULT putref_currentTranslate;
    HRESULT get_currentTranslate;
    HRESULT suspendRedraw;
    HRESULT unsuspendRedraw;
    HRESULT unsuspendRedrawAll;
    HRESULT forceRedraw;
    HRESULT pauseAnimations;
    HRESULT unpauseAnimations;
    HRESULT animationsPaused;
    HRESULT getCurrentTime;
    HRESULT setCurrentTime;
    HRESULT getIntersectionList;
    HRESULT getEnclosureList;
    HRESULT checkIntersection;
    HRESULT checkEnclosure;
    HRESULT deselectAll;
    HRESULT createSVGNumber;
    HRESULT createSVGLength;
    HRESULT createSVGAngle;
    HRESULT createSVGPoint;
    HRESULT createSVGMatrix;
    HRESULT createSVGRect;
    HRESULT createSVGTransform;
    HRESULT createSVGTransformFromMatrix;
    HRESULT getElementById;
    VOID ISVGSVGElement;
    VOID ISVGSVGElement;
    VOID ISVGSVGElement;
    struct ISVGSVGElement *operator=;
    struct ISVGSVGElement *operator=;
};

typedef struct ISVGScriptElement {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    VOID ISVGScriptElement;
    VOID ISVGScriptElement;
    VOID ISVGScriptElement;
    struct ISVGScriptElement *operator=;
    struct ISVGScriptElement *operator=;
};

typedef struct ISVGStopElement {
    struct IDispatch IDispatch;
    HRESULT putref_offset;
    HRESULT get_offset;
    VOID ISVGStopElement;
    VOID ISVGStopElement;
    VOID ISVGStopElement;
    struct ISVGStopElement *operator=;
    struct ISVGStopElement *operator=;
};

typedef struct ISVGStringList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    VOID ISVGStringList;
    VOID ISVGStringList;
    VOID ISVGStringList;
    struct ISVGStringList *operator=;
    struct ISVGStringList *operator=;
};

typedef struct ISVGStylable {
    struct IDispatch IDispatch;
    HRESULT get_className;
    VOID ISVGStylable;
    VOID ISVGStylable;
    VOID ISVGStylable;
    struct ISVGStylable *operator=;
    struct ISVGStylable *operator=;
};

typedef struct ISVGStyleElement {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT put_media;
    HRESULT get_media;
    VOID ISVGStyleElement;
    VOID ISVGStyleElement;
    VOID ISVGStyleElement;
    struct ISVGStyleElement *operator=;
    struct ISVGStyleElement *operator=;
};

typedef struct ISVGSwitchElement {
    struct IDispatch IDispatch;
    VOID ISVGSwitchElement;
    VOID ISVGSwitchElement;
    VOID ISVGSwitchElement;
    struct ISVGSwitchElement *operator=;
    struct ISVGSwitchElement *operator=;
};

typedef struct ISVGSymbolElement {
    struct IDispatch IDispatch;
    VOID ISVGSymbolElement;
    VOID ISVGSymbolElement;
    VOID ISVGSymbolElement;
    struct ISVGSymbolElement *operator=;
    struct ISVGSymbolElement *operator=;
};

typedef struct ISVGTSpanElement {
    struct IDispatch IDispatch;
    VOID ISVGTSpanElement;
    VOID ISVGTSpanElement;
    VOID ISVGTSpanElement;
    struct ISVGTSpanElement *operator=;
    struct ISVGTSpanElement *operator=;
};

typedef struct ISVGTests {
    struct IDispatch IDispatch;
    HRESULT get_requiredFeatures;
    HRESULT get_requiredExtensions;
    HRESULT get_systemLanguage;
    HRESULT hasExtension;
    VOID ISVGTests;
    VOID ISVGTests;
    VOID ISVGTests;
    struct ISVGTests *operator=;
    struct ISVGTests *operator=;
};

typedef struct ISVGTextContentElement {
    struct IDispatch IDispatch;
    HRESULT putref_textLength;
    HRESULT get_textLength;
    HRESULT putref_lengthAdjust;
    HRESULT get_lengthAdjust;
    HRESULT getNumberOfChars;
    HRESULT getComputedTextLength;
    HRESULT getSubStringLength;
    HRESULT getStartPositionOfChar;
    HRESULT getEndPositionOfChar;
    HRESULT getExtentOfChar;
    HRESULT getRotationOfChar;
    HRESULT getCharNumAtPosition;
    HRESULT selectSubString;
    VOID ISVGTextContentElement;
    VOID ISVGTextContentElement;
    VOID ISVGTextContentElement;
    struct ISVGTextContentElement *operator=;
    struct ISVGTextContentElement *operator=;
};

typedef struct ISVGTextElement {
    struct IDispatch IDispatch;
    VOID ISVGTextElement;
    VOID ISVGTextElement;
    VOID ISVGTextElement;
    struct ISVGTextElement *operator=;
    struct ISVGTextElement *operator=;
};

typedef struct ISVGTextPathElement {
    struct IDispatch IDispatch;
    HRESULT putref_startOffset;
    HRESULT get_startOffset;
    HRESULT putref_method;
    HRESULT get_method;
    HRESULT putref_spacing;
    HRESULT get_spacing;
    VOID ISVGTextPathElement;
    VOID ISVGTextPathElement;
    VOID ISVGTextPathElement;
    struct ISVGTextPathElement *operator=;
    struct ISVGTextPathElement *operator=;
};

typedef struct ISVGTextPositioningElement {
    struct IDispatch IDispatch;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_dx;
    HRESULT get_dx;
    HRESULT putref_dy;
    HRESULT get_dy;
    HRESULT putref_rotate;
    HRESULT get_rotate;
    VOID ISVGTextPositioningElement;
    VOID ISVGTextPositioningElement;
    VOID ISVGTextPositioningElement;
    struct ISVGTextPositioningElement *operator=;
    struct ISVGTextPositioningElement *operator=;
};

typedef struct ISVGTitleElement {
    struct IDispatch IDispatch;
    VOID ISVGTitleElement;
    VOID ISVGTitleElement;
    VOID ISVGTitleElement;
    struct ISVGTitleElement *operator=;
    struct ISVGTitleElement *operator=;
};

typedef struct ISVGTransform {
    struct IDispatch IDispatch;
    HRESULT put_type;
    HRESULT get_type;
    HRESULT putref_matrix;
    HRESULT get_matrix;
    HRESULT put_angle;
    HRESULT get_angle;
    HRESULT setMatrix;
    HRESULT setTranslate;
    HRESULT setScale;
    HRESULT setRotate;
    HRESULT setSkewX;
    HRESULT setSkewY;
    VOID ISVGTransform;
    VOID ISVGTransform;
    VOID ISVGTransform;
    struct ISVGTransform *operator=;
    struct ISVGTransform *operator=;
};

typedef struct ISVGTransformList {
    struct IDispatch IDispatch;
    HRESULT put_numberOfItems;
    HRESULT get_numberOfItems;
    HRESULT clear;
    HRESULT initialize;
    HRESULT getItem;
    HRESULT insertItemBefore;
    HRESULT replaceItem;
    HRESULT removeItem;
    HRESULT appendItem;
    HRESULT createSVGTransformFromMatrix;
    HRESULT consolidate;
    VOID ISVGTransformList;
    VOID ISVGTransformList;
    VOID ISVGTransformList;
    struct ISVGTransformList *operator=;
    struct ISVGTransformList *operator=;
};

typedef struct ISVGTransformable {
    struct IDispatch IDispatch;
    HRESULT get_transform;
    VOID ISVGTransformable;
    VOID ISVGTransformable;
    VOID ISVGTransformable;
    struct ISVGTransformable *operator=;
    struct ISVGTransformable *operator=;
};

typedef struct ISVGURIReference {
    struct IDispatch IDispatch;
    HRESULT get_href;
    VOID ISVGURIReference;
    VOID ISVGURIReference;
    VOID ISVGURIReference;
    struct ISVGURIReference *operator=;
    struct ISVGURIReference *operator=;
};

typedef struct ISVGUseElement {
    struct IDispatch IDispatch;
    HRESULT putref_x;
    HRESULT get_x;
    HRESULT putref_y;
    HRESULT get_y;
    HRESULT putref_width;
    HRESULT get_width;
    HRESULT putref_height;
    HRESULT get_height;
    HRESULT putref_instanceRoot;
    HRESULT get_instanceRoot;
    HRESULT putref_animatedInstanceRoot;
    HRESULT get_animatedInstanceRoot;
    VOID ISVGUseElement;
    VOID ISVGUseElement;
    VOID ISVGUseElement;
    struct ISVGUseElement *operator=;
    struct ISVGUseElement *operator=;
};

typedef struct ISVGViewElement {
    struct IDispatch IDispatch;
    HRESULT putref_viewTarget;
    HRESULT get_viewTarget;
    VOID ISVGViewElement;
    VOID ISVGViewElement;
    VOID ISVGViewElement;
    struct ISVGViewElement *operator=;
    struct ISVGViewElement *operator=;
};

typedef struct ISVGViewSpec {
    struct IDispatch IDispatch;
    VOID ISVGViewSpec;
    VOID ISVGViewSpec;
    VOID ISVGViewSpec;
    struct ISVGViewSpec *operator=;
    struct ISVGViewSpec *operator=;
};

typedef struct ISVGZoomAndPan {
    struct IDispatch IDispatch;
    HRESULT get_zoomAndPan;
    VOID ISVGZoomAndPan;
    VOID ISVGZoomAndPan;
    VOID ISVGZoomAndPan;
    struct ISVGZoomAndPan *operator=;
    struct ISVGZoomAndPan *operator=;
};

typedef struct ISVGZoomEvent {
    struct IDispatch IDispatch;
    HRESULT get_zoomRectScreen;
    HRESULT get_previousScale;
    HRESULT get_previousTranslate;
    HRESULT get_newScale;
    HRESULT get_newTranslate;
    VOID ISVGZoomEvent;
    VOID ISVGZoomEvent;
    VOID ISVGZoomEvent;
    struct ISVGZoomEvent *operator=;
    struct ISVGZoomEvent *operator=;
};

typedef struct ISchema {
    struct ISchemaItem ISchemaItem;
    HRESULT get_targetNamespace;
    HRESULT get_version;
    HRESULT get_types;
    HRESULT get_elements;
    HRESULT get_attributes;
    HRESULT get_attributeGroups;
    HRESULT get_modelGroups;
    HRESULT get_notations;
    HRESULT get_schemaLocations;
    VOID ISchema;
    VOID ISchema;
    VOID ISchema;
    struct ISchema *operator=;
    struct ISchema *operator=;
};

typedef struct ISchemaAny {
    struct ISchemaParticle ISchemaParticle;
    HRESULT get_namespaces;
    HRESULT get_processContents;
    VOID ISchemaAny;
    VOID ISchemaAny;
    VOID ISchemaAny;
    struct ISchemaAny *operator=;
    struct ISchemaAny *operator=;
};

typedef struct ISchemaAttribute {
    struct ISchemaItem ISchemaItem;
    HRESULT get_type;
    HRESULT get_scope;
    HRESULT get_defaultValue;
    HRESULT get_fixedValue;
    HRESULT get_use;
    HRESULT get_isReference;
    VOID ISchemaAttribute;
    VOID ISchemaAttribute;
    VOID ISchemaAttribute;
    struct ISchemaAttribute *operator=;
    struct ISchemaAttribute *operator=;
};

typedef struct ISchemaAttributeGroup {
    struct ISchemaItem ISchemaItem;
    HRESULT get_anyAttribute;
    HRESULT get_attributes;
    VOID ISchemaAttributeGroup;
    VOID ISchemaAttributeGroup;
    VOID ISchemaAttributeGroup;
    struct ISchemaAttributeGroup *operator=;
    struct ISchemaAttributeGroup *operator=;
};

typedef struct ISchemaComplexType {
    struct ISchemaType ISchemaType;
    HRESULT get_isAbstract;
    HRESULT get_anyAttribute;
    HRESULT get_attributes;
    HRESULT get_contentType;
    HRESULT get_contentModel;
    HRESULT get_prohibitedSubstitutions;
    VOID ISchemaComplexType;
    VOID ISchemaComplexType;
    VOID ISchemaComplexType;
    struct ISchemaComplexType *operator=;
    struct ISchemaComplexType *operator=;
};

typedef struct ISchemaElement {
    struct ISchemaParticle ISchemaParticle;
    HRESULT get_type;
    HRESULT get_scope;
    HRESULT get_defaultValue;
    HRESULT get_fixedValue;
    HRESULT get_isNillable;
    HRESULT get_identityConstraints;
    HRESULT get_substitutionGroup;
    HRESULT get_substitutionGroupExclusions;
    HRESULT get_disallowedSubstitutions;
    HRESULT get_isAbstract;
    HRESULT get_isReference;
    VOID ISchemaElement;
    VOID ISchemaElement;
    VOID ISchemaElement;
    struct ISchemaElement *operator=;
    struct ISchemaElement *operator=;
};

typedef struct ISchemaIdentityConstraint {
    struct ISchemaItem ISchemaItem;
    HRESULT get_selector;
    HRESULT get_fields;
    HRESULT get_referencedKey;
    VOID ISchemaIdentityConstraint;
    VOID ISchemaIdentityConstraint;
    VOID ISchemaIdentityConstraint;
    struct ISchemaIdentityConstraint *operator=;
    struct ISchemaIdentityConstraint *operator=;
};

typedef struct ISchemaItem {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT get_namespaceURI;
    HRESULT get_schema;
    HRESULT get_id;
    HRESULT get_itemType;
    HRESULT get_unhandledAttributes;
    HRESULT writeAnnotation;
    VOID ISchemaItem;
    VOID ISchemaItem;
    VOID ISchemaItem;
    struct ISchemaItem *operator=;
    struct ISchemaItem *operator=;
};

typedef struct ISchemaItemCollection {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT itemByName;
    HRESULT itemByQName;
    HRESULT get_length;
    HRESULT get__newEnum;
    VOID ISchemaItemCollection;
    VOID ISchemaItemCollection;
    VOID ISchemaItemCollection;
    struct ISchemaItemCollection *operator=;
    struct ISchemaItemCollection *operator=;
};

typedef struct ISchemaModelGroup {
    struct ISchemaParticle ISchemaParticle;
    HRESULT get_particles;
    VOID ISchemaModelGroup;
    VOID ISchemaModelGroup;
    VOID ISchemaModelGroup;
    struct ISchemaModelGroup *operator=;
    struct ISchemaModelGroup *operator=;
};

typedef struct ISchemaNotation {
    struct ISchemaItem ISchemaItem;
    HRESULT get_systemIdentifier;
    HRESULT get_publicIdentifier;
    VOID ISchemaNotation;
    VOID ISchemaNotation;
    VOID ISchemaNotation;
    struct ISchemaNotation *operator=;
    struct ISchemaNotation *operator=;
};

typedef struct ISchemaParticle {
    struct ISchemaItem ISchemaItem;
    HRESULT get_minOccurs;
    HRESULT get_maxOccurs;
    VOID ISchemaParticle;
    VOID ISchemaParticle;
    VOID ISchemaParticle;
    struct ISchemaParticle *operator=;
    struct ISchemaParticle *operator=;
};

typedef struct ISchemaStringCollection {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT get__newEnum;
    VOID ISchemaStringCollection;
    VOID ISchemaStringCollection;
    VOID ISchemaStringCollection;
    struct ISchemaStringCollection *operator=;
    struct ISchemaStringCollection *operator=;
};

typedef struct ISchemaType {
    struct ISchemaItem ISchemaItem;
    HRESULT get_baseTypes;
    HRESULT get_final;
    HRESULT get_variety;
    HRESULT get_derivedBy;
    HRESULT isValid;
    HRESULT get_minExclusive;
    HRESULT get_minInclusive;
    HRESULT get_maxExclusive;
    HRESULT get_maxInclusive;
    HRESULT get_totalDigits;
    HRESULT get_fractionDigits;
    HRESULT get_length;
    HRESULT get_minLength;
    HRESULT get_maxLength;
    HRESULT get_enumeration;
    HRESULT get_whitespace;
    HRESULT get_patterns;
    VOID ISchemaType;
    VOID ISchemaType;
    VOID ISchemaType;
    struct ISchemaType *operator=;
    struct ISchemaType *operator=;
};

typedef struct IScriptEventHandler {
    struct IUnknown IUnknown;
    HRESULT FunctionName;
    HRESULT DebugDocumentContext;
    HRESULT EventHandlerDispatch;
    HRESULT UsesCapture;
    HRESULT Cookie;
    VOID IScriptEventHandler;
    VOID IScriptEventHandler;
    VOID IScriptEventHandler;
    struct IScriptEventHandler *operator=;
    struct IScriptEventHandler *operator=;
};

typedef struct IScriptEventHandlerSourceInfo {
    struct IUnknown IUnknown;
    HRESULT GetSourceInfo;
    VOID IScriptEventHandlerSourceInfo;
    VOID IScriptEventHandlerSourceInfo;
    VOID IScriptEventHandlerSourceInfo;
    struct IScriptEventHandlerSourceInfo *operator=;
    struct IScriptEventHandlerSourceInfo *operator=;
};

typedef struct IScriptingContext {
    struct IDispatch IDispatch;
    HRESULT get_Request;
    HRESULT get_Response;
    HRESULT get_Server;
    HRESULT get_Session;
    HRESULT get_Application;
    VOID IScriptingContext;
    VOID IScriptingContext;
    VOID IScriptingContext;
    struct IScriptingContext *operator=;
    struct IScriptingContext *operator=;
};

typedef struct ISecureUrlHost {
    struct IUnknown IUnknown;
    HRESULT ValidateSecureUrl;
    VOID ISecureUrlHost;
    VOID ISecureUrlHost;
    VOID ISecureUrlHost;
    struct ISecureUrlHost *operator=;
    struct ISecureUrlHost *operator=;
};

typedef struct ISegment {
    struct IUnknown IUnknown;
    HRESULT GetPointers;
    VOID ISegment;
    VOID ISegment;
    VOID ISegment;
    struct ISegment *operator=;
    struct ISegment *operator=;
};

typedef struct ISegmentList {
    struct IUnknown IUnknown;
    HRESULT CreateIterator;
    HRESULT GetType;
    HRESULT IsEmpty;
    VOID ISegmentList;
    VOID ISegmentList;
    VOID ISegmentList;
    struct ISegmentList *operator=;
    struct ISegmentList *operator=;
};

typedef struct ISegmentListIterator {
    struct IUnknown IUnknown;
    HRESULT Current;
    HRESULT First;
    HRESULT IsDone;
    HRESULT Advance;
    VOID ISegmentListIterator;
    VOID ISegmentListIterator;
    VOID ISegmentListIterator;
    struct ISegmentListIterator *operator=;
    struct ISegmentListIterator *operator=;
};

typedef struct ISelectionServices {
    struct IUnknown IUnknown;
    HRESULT SetSelectionType;
    HRESULT GetMarkupContainer;
    HRESULT AddSegment;
    HRESULT AddElementSegment;
    HRESULT RemoveSegment;
    HRESULT GetSelectionServicesListener;
    VOID ISelectionServices;
    VOID ISelectionServices;
    VOID ISelectionServices;
    struct ISelectionServices *operator=;
    struct ISelectionServices *operator=;
};

typedef struct ISelectionServicesListener {
    struct IUnknown IUnknown;
    HRESULT BeginSelectionUndo;
    HRESULT EndSelectionUndo;
    HRESULT OnSelectedElementExit;
    HRESULT OnChangeType;
    HRESULT GetTypeDetail;
    VOID ISelectionServicesListener;
    VOID ISelectionServicesListener;
    VOID ISelectionServicesListener;
    struct ISelectionServicesListener *operator=;
    struct ISelectionServicesListener *operator=;
};

typedef struct ISequenceNumber {
    struct IUnknown IUnknown;
    HRESULT GetSequenceNumber;
    VOID ISequenceNumber;
    VOID ISequenceNumber;
    VOID ISequenceNumber;
    struct ISequenceNumber *operator=;
    struct ISequenceNumber *operator=;
};

typedef struct ISequentialStream {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    VOID ISequentialStream;
    VOID ISequentialStream;
    VOID ISequentialStream;
    struct ISequentialStream *operator=;
    struct ISequentialStream *operator=;
};

typedef struct IServer {
    struct IDispatch IDispatch;
    HRESULT get_ScriptTimeout;
    HRESULT put_ScriptTimeout;
    HRESULT CreateObject;
    HRESULT HTMLEncode;
    HRESULT MapPath;
    HRESULT URLEncode;
    HRESULT URLPathEncode;
    HRESULT Execute;
    HRESULT Transfer;
    HRESULT GetLastError;
    VOID IServer;
    VOID IServer;
    VOID IServer;
    struct IServer *operator=;
    struct IServer *operator=;
};

typedef struct IServerSecurity {
    struct IUnknown IUnknown;
    HRESULT QueryBlanket;
    HRESULT ImpersonateClient;
    HRESULT RevertToSelf;
    LONG IsImpersonating;
    VOID IServerSecurity;
    VOID IServerSecurity;
    VOID IServerSecurity;
    struct IServerSecurity *operator=;
    struct IServerSecurity *operator=;
};

typedef struct IServerXMLHTTPRequest {
    struct IXMLHTTPRequest IXMLHTTPRequest;
    HRESULT setTimeouts;
    HRESULT waitForResponse;
    HRESULT getOption;
    HRESULT setOption;
    VOID IServerXMLHTTPRequest;
    VOID IServerXMLHTTPRequest;
    VOID IServerXMLHTTPRequest;
    struct IServerXMLHTTPRequest *operator=;
    struct IServerXMLHTTPRequest *operator=;
};

typedef struct IServerXMLHTTPRequest2 {
    struct IServerXMLHTTPRequest IServerXMLHTTPRequest;
    HRESULT setProxy;
    HRESULT setProxyCredentials;
    VOID IServerXMLHTTPRequest2;
    VOID IServerXMLHTTPRequest2;
    VOID IServerXMLHTTPRequest2;
    struct IServerXMLHTTPRequest2 *operator=;
    struct IServerXMLHTTPRequest2 *operator=;
};

typedef struct IServiceProvider {
    struct IUnknown IUnknown;
    HRESULT QueryService;
    VOID IServiceProvider;
    VOID IServiceProvider;
    VOID IServiceProvider;
    struct IServiceProvider *operator=;
    struct IServiceProvider *operator=;
};

typedef struct ISessionObject {
    struct IDispatch IDispatch;
    HRESULT get_SessionID;
    HRESULT get_Value;
    HRESULT put_Value;
    HRESULT putref_Value;
    HRESULT get_Timeout;
    HRESULT put_Timeout;
    HRESULT Abandon;
    HRESULT get_CodePage;
    HRESULT put_CodePage;
    HRESULT get_LCID;
    HRESULT put_LCID;
    HRESULT get_StaticObjects;
    HRESULT get_Contents;
    VOID ISessionObject;
    VOID ISessionObject;
    VOID ISessionObject;
    struct ISessionObject *operator=;
    struct ISessionObject *operator=;
};

typedef struct ISimpleFrameSite {
    struct IUnknown IUnknown;
    HRESULT PreMessageFilter;
    HRESULT PostMessageFilter;
    VOID ISimpleFrameSite;
    VOID ISimpleFrameSite;
    VOID ISimpleFrameSite;
    struct ISimpleFrameSite *operator=;
    struct ISimpleFrameSite *operator=;
};

typedef struct ISoftDistExt {
    struct IUnknown IUnknown;
    HRESULT ProcessSoftDist;
    HRESULT GetFirstCodeBase;
    HRESULT GetNextCodeBase;
    HRESULT AsyncInstallDistributionUnit;
    VOID ISoftDistExt;
    VOID ISoftDistExt;
    VOID ISoftDistExt;
    struct ISoftDistExt *operator=;
    struct ISoftDistExt *operator=;
};

typedef struct ISpecifyPropertyPages {
    struct IUnknown IUnknown;
    HRESULT GetPages;
    VOID ISpecifyPropertyPages;
    VOID ISpecifyPropertyPages;
    VOID ISpecifyPropertyPages;
    struct ISpecifyPropertyPages *operator=;
    struct ISpecifyPropertyPages *operator=;
};

typedef struct IStdMarshalInfo {
    struct IUnknown IUnknown;
    HRESULT GetClassForHandler;
    VOID IStdMarshalInfo;
    VOID IStdMarshalInfo;
    VOID IStdMarshalInfo;
    struct IStdMarshalInfo *operator=;
    struct IStdMarshalInfo *operator=;
};

typedef struct IStorage {
    struct IUnknown IUnknown;
    HRESULT CreateStream;
    HRESULT OpenStream;
    HRESULT CreateStorage;
    HRESULT OpenStorage;
    HRESULT CopyTo;
    HRESULT MoveElementTo;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT EnumElements;
    HRESULT DestroyElement;
    HRESULT RenameElement;
    HRESULT SetElementTimes;
    HRESULT SetClass;
    HRESULT SetStateBits;
    HRESULT Stat;
    VOID IStorage;
    VOID IStorage;
    VOID IStorage;
    struct IStorage *operator=;
    struct IStorage *operator=;
};

typedef struct IStream {
    struct ISequentialStream ISequentialStream;
    HRESULT Seek;
    HRESULT SetSize;
    HRESULT CopyTo;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT LockRegion;
    HRESULT UnlockRegion;
    HRESULT Stat;
    HRESULT Clone;
    VOID IStream;
    VOID IStream;
    VOID IStream;
    struct IStream *operator=;
    struct IStream *operator=;
};

typedef struct IStreamDataNotificationCallback {
    struct IUnknown IUnknown;
    HRESULT OnStreamDataAvailable;
    VOID IStreamDataNotificationCallback;
    VOID IStreamDataNotificationCallback;
    VOID IStreamDataNotificationCallback;
    struct IStreamDataNotificationCallback *operator=;
    struct IStreamDataNotificationCallback *operator=;
};

typedef struct IStreamWithDataNotification {
    struct IUnknown IUnknown;
    HRESULT SetCallback;
    VOID IStreamWithDataNotification;
    VOID IStreamWithDataNotification;
    VOID IStreamWithDataNotification;
    struct IStreamWithDataNotification *operator=;
    struct IStreamWithDataNotification *operator=;
};

typedef struct IStringList {
    struct IDispatch IDispatch;
    HRESULT get_Item;
    HRESULT get_Count;
    HRESULT get__NewEnum;
    VOID IStringList;
    VOID IStringList;
    VOID IStringList;
    struct IStringList *operator=;
    struct IStringList *operator=;
};

typedef struct ISupportErrorInfo {
    struct IUnknown IUnknown;
    HRESULT InterfaceSupportsErrorInfo;
    VOID ISupportErrorInfo;
    VOID ISupportErrorInfo;
    VOID ISupportErrorInfo;
    struct ISupportErrorInfo *operator=;
    struct ISupportErrorInfo *operator=;
};

typedef struct ISurfacePresenter {
    struct IUnknown IUnknown;
    HRESULT Present;
    HRESULT GetBuffer;
    HRESULT IsCurrent;
    VOID ISurfacePresenter;
    VOID ISurfacePresenter;
    VOID ISurfacePresenter;
    struct ISurfacePresenter *operator=;
    struct ISurfacePresenter *operator=;
};

typedef struct ISurrogate {
    struct IUnknown IUnknown;
    HRESULT LoadDllServer;
    HRESULT FreeSurrogate;
    VOID ISurrogate;
    VOID ISurrogate;
    VOID ISurrogate;
    struct ISurrogate *operator=;
    struct ISurrogate *operator=;
};

typedef struct ISurrogateService {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT ApplicationLaunch;
    HRESULT ApplicationFree;
    HRESULT CatalogRefresh;
    HRESULT ProcessShutdown;
    VOID ISurrogateService;
    VOID ISurrogateService;
    VOID ISurrogateService;
    struct ISurrogateService *operator=;
    struct ISurrogateService *operator=;
};

typedef struct ISynchronize {
    struct IUnknown IUnknown;
    HRESULT Wait;
    HRESULT Signal;
    HRESULT Reset;
    VOID ISynchronize;
    VOID ISynchronize;
    VOID ISynchronize;
    struct ISynchronize *operator=;
    struct ISynchronize *operator=;
};

typedef struct ISynchronizeContainer {
    struct IUnknown IUnknown;
    HRESULT AddSynchronize;
    HRESULT WaitMultiple;
    VOID ISynchronizeContainer;
    VOID ISynchronizeContainer;
    VOID ISynchronizeContainer;
    struct ISynchronizeContainer *operator=;
    struct ISynchronizeContainer *operator=;
};

typedef struct ISynchronizeEvent {
    struct ISynchronizeHandle ISynchronizeHandle;
    HRESULT SetEventHandle;
    VOID ISynchronizeEvent;
    VOID ISynchronizeEvent;
    VOID ISynchronizeEvent;
    struct ISynchronizeEvent *operator=;
    struct ISynchronizeEvent *operator=;
};

typedef struct ISynchronizeHandle {
    struct IUnknown IUnknown;
    HRESULT GetHandle;
    VOID ISynchronizeHandle;
    VOID ISynchronizeHandle;
    VOID ISynchronizeHandle;
    struct ISynchronizeHandle *operator=;
    struct ISynchronizeHandle *operator=;
};

typedef struct ISynchronizeMutex {
    struct ISynchronize ISynchronize;
    HRESULT ReleaseMutex;
    VOID ISynchronizeMutex;
    VOID ISynchronizeMutex;
    VOID ISynchronizeMutex;
    struct ISynchronizeMutex *operator=;
    struct ISynchronizeMutex *operator=;
};

typedef struct ITemplatePrinter {
    struct IDispatch IDispatch;
    HRESULT startDoc;
    HRESULT stopDoc;
    HRESULT printBlankPage;
    HRESULT printPage;
    HRESULT ensurePrintDialogDefaults;
    HRESULT showPrintDialog;
    HRESULT showPageSetupDialog;
    HRESULT printNonNative;
    HRESULT printNonNativeFrames;
    HRESULT put_framesetDocument;
    HRESULT get_framesetDocument;
    HRESULT put_frameActive;
    HRESULT get_frameActive;
    HRESULT put_frameAsShown;
    HRESULT get_frameAsShown;
    HRESULT put_selection;
    HRESULT get_selection;
    HRESULT put_selectedPages;
    HRESULT get_selectedPages;
    HRESULT put_currentPage;
    HRESULT get_currentPage;
    HRESULT put_currentPageAvail;
    HRESULT get_currentPageAvail;
    HRESULT put_collate;
    HRESULT get_collate;
    HRESULT get_duplex;
    HRESULT put_copies;
    HRESULT get_copies;
    HRESULT put_pageFrom;
    HRESULT get_pageFrom;
    HRESULT put_pageTo;
    HRESULT get_pageTo;
    HRESULT put_tableOfLinks;
    HRESULT get_tableOfLinks;
    HRESULT put_allLinkedDocuments;
    HRESULT get_allLinkedDocuments;
    HRESULT put_header;
    HRESULT get_header;
    HRESULT put_footer;
    HRESULT get_footer;
    HRESULT put_marginLeft;
    HRESULT get_marginLeft;
    HRESULT put_marginRight;
    HRESULT get_marginRight;
    HRESULT put_marginTop;
    HRESULT get_marginTop;
    HRESULT put_marginBottom;
    HRESULT get_marginBottom;
    HRESULT get_pageWidth;
    HRESULT get_pageHeight;
    HRESULT get_unprintableLeft;
    HRESULT get_unprintableTop;
    HRESULT get_unprintableRight;
    HRESULT get_unprintableBottom;
    HRESULT updatePageStatus;
    VOID ITemplatePrinter;
    VOID ITemplatePrinter;
    VOID ITemplatePrinter;
    struct ITemplatePrinter *operator=;
    struct ITemplatePrinter *operator=;
};

typedef struct ITemplatePrinter2 {
    struct ITemplatePrinter ITemplatePrinter;
    HRESULT put_selectionEnabled;
    HRESULT get_selectionEnabled;
    HRESULT put_frameActiveEnabled;
    HRESULT get_frameActiveEnabled;
    HRESULT put_orientation;
    HRESULT get_orientation;
    HRESULT put_usePrinterCopyCollate;
    HRESULT get_usePrinterCopyCollate;
    HRESULT deviceSupports;
    VOID ITemplatePrinter2;
    VOID ITemplatePrinter2;
    VOID ITemplatePrinter2;
    struct ITemplatePrinter2 *operator=;
    struct ITemplatePrinter2 *operator=;
};

typedef struct ITemplatePrinter3 {
    struct ITemplatePrinter2 ITemplatePrinter2;
    HRESULT put_headerFooterFont;
    HRESULT get_headerFooterFont;
    HRESULT getPageMarginTop;
    HRESULT getPageMarginRight;
    HRESULT getPageMarginBottom;
    HRESULT getPageMarginLeft;
    HRESULT getPageMarginTopImportant;
    HRESULT getPageMarginRightImportant;
    HRESULT getPageMarginBottomImportant;
    HRESULT getPageMarginLeftImportant;
    VOID ITemplatePrinter3;
    VOID ITemplatePrinter3;
    VOID ITemplatePrinter3;
    struct ITemplatePrinter3 *operator=;
    struct ITemplatePrinter3 *operator=;
};

typedef struct IThumbnailExtractor {
    struct IUnknown IUnknown;
    HRESULT ExtractThumbnail;
    HRESULT OnFileUpdated;
    VOID IThumbnailExtractor;
    VOID IThumbnailExtractor;
    VOID IThumbnailExtractor;
    struct IThumbnailExtractor *operator=;
    struct IThumbnailExtractor *operator=;
};

typedef struct ITimeAndNoticeControl {
    struct IUnknown IUnknown;
    HRESULT SuppressChanges;
    VOID ITimeAndNoticeControl;
    VOID ITimeAndNoticeControl;
    VOID ITimeAndNoticeControl;
    struct ITimeAndNoticeControl *operator=;
    struct ITimeAndNoticeControl *operator=;
};

typedef struct ITrackingProtection {
    struct IUnknown IUnknown;
    HRESULT EvaluateUrl;
    HRESULT GetEnabled;
    VOID ITrackingProtection;
    VOID ITrackingProtection;
    VOID ITrackingProtection;
    struct ITrackingProtection *operator=;
    struct ITrackingProtection *operator=;
};

typedef struct ITransactionInternal {
    struct IUnknown IUnknown;
    HRESULT GetTransactionFlags;
    HRESULT SetTransactionFlags;
    HRESULT AddTransactionFlags;
    HRESULT Set4GBDownloadFlag;
    HRESULT Reset4GBDownloadFlag;
    HRESULT SetRedirectKeepVerbFlag;
    HRESULT ResetRedirectKeepVerbFlag;
    HRESULT GetFinalRedirectSource;
    HRESULT GetObjectNoAddRef;
    HRESULT GetTransactionMsgId;
    VOID GetInitialNavigationUri;
    LONG IsMonikerBind;
    LONG IsNullOrigin;
    VOID SetNullOrigin;
    HRESULT GetAsyncHost;
    VOID ITransactionInternal;
    VOID ITransactionInternal;
    VOID ITransactionInternal;
    struct ITransactionInternal *operator=;
    struct ITransactionInternal *operator=;
};

typedef struct ITridentEventSink {
    struct IUnknown IUnknown;
    HRESULT FireEvent;
    VOID ITridentEventSink;
    VOID ITridentEventSink;
    VOID ITridentEventSink;
    struct ITridentEventSink *operator=;
    struct ITridentEventSink *operator=;
};

typedef struct ITypeChangeEvents {
    struct IUnknown IUnknown;
    HRESULT RequestTypeChange;
    HRESULT AfterTypeChange;
    VOID ITypeChangeEvents;
    VOID ITypeChangeEvents;
    VOID ITypeChangeEvents;
    struct ITypeChangeEvents *operator=;
    struct ITypeChangeEvents *operator=;
};

typedef struct ITypeComp {
    struct IUnknown IUnknown;
    HRESULT Bind;
    HRESULT BindType;
    VOID ITypeComp;
    VOID ITypeComp;
    VOID ITypeComp;
    struct ITypeComp *operator=;
    struct ITypeComp *operator=;
};

typedef struct ITypeCompVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *Bind;
    HRESULT *BindType;
};

typedef struct ITypeFactory {
    struct IUnknown IUnknown;
    HRESULT CreateFromTypeInfo;
    VOID ITypeFactory;
    VOID ITypeFactory;
    VOID ITypeFactory;
    struct ITypeFactory *operator=;
    struct ITypeFactory *operator=;
};

typedef struct ITypeInfo {
    struct IUnknown IUnknown;
    HRESULT GetTypeAttr;
    HRESULT GetTypeComp;
    HRESULT GetFuncDesc;
    HRESULT GetVarDesc;
    HRESULT GetNames;
    HRESULT GetRefTypeOfImplType;
    HRESULT GetImplTypeFlags;
    HRESULT GetIDsOfNames;
    HRESULT Invoke;
    HRESULT GetDocumentation;
    HRESULT GetDllEntry;
    HRESULT GetRefTypeInfo;
    HRESULT AddressOfMember;
    HRESULT CreateInstance;
    HRESULT GetMops;
    HRESULT GetContainingTypeLib;
    VOID ReleaseTypeAttr;
    VOID ReleaseFuncDesc;
    VOID ReleaseVarDesc;
    VOID ITypeInfo;
    VOID ITypeInfo;
    VOID ITypeInfo;
    struct ITypeInfo *operator=;
    struct ITypeInfo *operator=;
};

typedef struct ITypeInfo2 {
    struct ITypeInfo ITypeInfo;
    HRESULT GetTypeKind;
    HRESULT GetTypeFlags;
    HRESULT GetFuncIndexOfMemId;
    HRESULT GetVarIndexOfMemId;
    HRESULT GetCustData;
    HRESULT GetFuncCustData;
    HRESULT GetParamCustData;
    HRESULT GetVarCustData;
    HRESULT GetImplTypeCustData;
    HRESULT GetDocumentation2;
    HRESULT GetAllCustData;
    HRESULT GetAllFuncCustData;
    HRESULT GetAllParamCustData;
    HRESULT GetAllVarCustData;
    HRESULT GetAllImplTypeCustData;
    VOID ITypeInfo2;
    VOID ITypeInfo2;
    VOID ITypeInfo2;
    struct ITypeInfo2 *operator=;
    struct ITypeInfo2 *operator=;
};

typedef struct ITypeInfoVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    HRESULT *GetTypeAttr;
    HRESULT *GetTypeComp;
    HRESULT *GetFuncDesc;
    HRESULT *GetVarDesc;
    HRESULT *GetNames;
    HRESULT *GetRefTypeOfImplType;
    HRESULT *GetImplTypeFlags;
    HRESULT *GetIDsOfNames;
    HRESULT *Invoke;
    HRESULT *GetDocumentation;
    HRESULT *GetDllEntry;
    HRESULT *GetRefTypeInfo;
    HRESULT *AddressOfMember;
    HRESULT *CreateInstance;
    HRESULT *GetMops;
    HRESULT *GetContainingTypeLib;
    PVOID ReleaseTypeAttr;
    PVOID ReleaseFuncDesc;
    PVOID ReleaseVarDesc;
};

typedef struct ITypeLib {
    struct IUnknown IUnknown;
    ULONG GetTypeInfoCount;
    HRESULT GetTypeInfo;
    HRESULT GetTypeInfoType;
    HRESULT GetTypeInfoOfGuid;
    HRESULT GetLibAttr;
    HRESULT GetTypeComp;
    HRESULT GetDocumentation;
    HRESULT IsName;
    HRESULT FindName;
    VOID ReleaseTLibAttr;
    VOID ITypeLib;
    VOID ITypeLib;
    VOID ITypeLib;
    struct ITypeLib *operator=;
    struct ITypeLib *operator=;
};

typedef struct ITypeLib2 {
    struct ITypeLib ITypeLib;
    HRESULT GetCustData;
    HRESULT GetLibStatistics;
    HRESULT GetDocumentation2;
    HRESULT GetAllCustData;
    VOID ITypeLib2;
    VOID ITypeLib2;
    VOID ITypeLib2;
    struct ITypeLib2 *operator=;
    struct ITypeLib2 *operator=;
};

typedef struct ITypeLibRegistration {
    struct IUnknown IUnknown;
    HRESULT GetGuid;
    HRESULT GetVersion;
    HRESULT GetLcid;
    HRESULT GetWin32Path;
    HRESULT GetWin64Path;
    HRESULT GetDisplayName;
    HRESULT GetFlags;
    HRESULT GetHelpDir;
    VOID ITypeLibRegistration;
    VOID ITypeLibRegistration;
    VOID ITypeLibRegistration;
    struct ITypeLibRegistration *operator=;
    struct ITypeLibRegistration *operator=;
};

typedef struct ITypeLibRegistrationReader {
    struct IUnknown IUnknown;
    HRESULT EnumTypeLibRegistrations;
    VOID ITypeLibRegistrationReader;
    VOID ITypeLibRegistrationReader;
    VOID ITypeLibRegistrationReader;
    struct ITypeLibRegistrationReader *operator=;
    struct ITypeLibRegistrationReader *operator=;
};

typedef struct ITypeLibVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
    PULONG GetTypeInfoCount;
    HRESULT *GetTypeInfo;
    HRESULT *GetTypeInfoType;
    HRESULT *GetTypeInfoOfGuid;
    HRESULT *GetLibAttr;
    HRESULT *GetTypeComp;
    HRESULT *GetDocumentation;
    HRESULT *IsName;
    HRESULT *FindName;
    PVOID ReleaseTLibAttr;
};

typedef struct ITypeMarshal {
    struct IUnknown IUnknown;
    HRESULT Size;
    HRESULT Marshal;
    HRESULT Unmarshal;
    HRESULT Free;
    VOID ITypeMarshal;
    VOID ITypeMarshal;
    VOID ITypeMarshal;
    struct ITypeMarshal *operator=;
    struct ITypeMarshal *operator=;
};

typedef struct IURLDownloadTask {
    struct IUnknown IUnknown;
    HRESULT HandleData;
    HRESULT SetCharset;
    VOID IURLDownloadTask;
    VOID IURLDownloadTask;
    VOID IURLDownloadTask;
    struct IURLDownloadTask *operator=;
    struct IURLDownloadTask *operator=;
};

typedef struct IURLRequest {
Error: Could not get member name.
    HRESULT init;
    VOID abort;
    VOID recycle;
    HRESULT open;
    HRESULT send;
    HRESULT set_requestHeader;
    HRESULT set_requestHeader;
    HRESULT get_responseHeader;
    HRESULT get_allResponseHeaders;
    HRESULT get_status;
    HRESULT get_statusText;
    HRESULT get_responseText;
    HRESULT get_responseStreamVARIANT;
    HRESULT get_responseStream;
    HRESULT get_responseBody;
    HRESULT put_onreadystatechange;
    HRESULT get_option;
    HRESULT set_option;
    HRESULT set_proxy;
    HRESULT set_proxyCredentials;
    HRESULT set_timeouts;
    HRESULT waitForResponse;
    HRESULT set_property;
    HRESULT set_customStream;
    HRESULT set_EDPClaim;
    HRESULT set_clientProxyCredentials;
    HRESULT set_clientCert;
    HRESULT ApplySetting;
    HRESULT QuerySetting;
    HRESULT CompleteDelivery;
    HRESULT Flush;
    VOID Lock;
    VOID Unlock;
    VOID AbortEx;
    HRESULT GetXHRObject;
    VOID ClearXHRObject;
    HRESULT crackURL;
    VOID IURLRequest;
    VOID IURLRequest;
    VOID IURLRequest;
    struct IURLRequest *operator=;
    struct IURLRequest *operator=;
};

typedef struct IURLRequestSite {
    struct IUnknown IUnknown;
    PWCHAR get_secureBaseURL;
    PWCHAR get_baseURL;
    HRESULT get_window;
    HRESULT createXMLDocument;
    HRESULT get_securityManager;
    BOOLEAN isSecure;
    BOOLEAN isHostSecure;
    VOID IURLRequestSite;
    VOID IURLRequestSite;
    VOID IURLRequestSite;
    struct IURLRequestSite *operator=;
    struct IURLRequestSite *operator=;
};

typedef struct IURLStream {
    struct IStream IStream;
    HRESULT deferedOpen;
    VOID abort;
    VOID reset;
    PWCHAR getCharset;
    PWCHAR getResolvedURL;
    VOID IURLStream;
    VOID IURLStream;
    VOID IURLStream;
    struct IURLStream *operator=;
    struct IURLStream *operator=;
};

typedef struct IUnknown {
Error: Could not get member name.
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    VOID IUnknown;
    VOID IUnknown;
    VOID IUnknown;
    struct IUnknown *operator=;
    struct IUnknown *operator=;
};

typedef struct IUnknownVtbl {
    HRESULT *QueryInterface;
    PULONG AddRef;
    PULONG Release;
};

typedef struct IUri {
    struct IUnknown IUnknown;
    HRESULT GetPropertyBSTR;
    HRESULT GetPropertyLength;
    HRESULT GetPropertyDWORD;
    HRESULT HasProperty;
    HRESULT GetAbsoluteUri;
    HRESULT GetAuthority;
    HRESULT GetDisplayUri;
    HRESULT GetDomain;
    HRESULT GetExtension;
    HRESULT GetFragment;
    HRESULT GetHost;
    HRESULT GetPassword;
    HRESULT GetPath;
    HRESULT GetPathAndQuery;
    HRESULT GetQuery;
    HRESULT GetRawUri;
    HRESULT GetSchemeName;
    HRESULT GetUserInfo;
    HRESULT GetUserNameW;
    HRESULT GetHostType;
    HRESULT GetPort;
    HRESULT GetScheme;
    HRESULT GetZone;
    HRESULT GetProperties;
    HRESULT IsEqual;
    VOID IUri;
    VOID IUri;
    VOID IUri;
    struct IUri *operator=;
    struct IUri *operator=;
};

typedef struct IUriBuilder {
    struct IUnknown IUnknown;
    HRESULT CreateUriSimple;
    HRESULT CreateUri;
    HRESULT CreateUriWithFlags;
    HRESULT GetIUri;
    HRESULT SetIUri;
    HRESULT GetFragment;
    HRESULT GetHost;
    HRESULT GetPassword;
    HRESULT GetPath;
    HRESULT GetPort;
    HRESULT GetQuery;
    HRESULT GetSchemeName;
    HRESULT GetUserNameW;
    HRESULT SetFragment;
    HRESULT SetHost;
    HRESULT SetPassword;
    HRESULT SetPath;
    HRESULT SetPort;
    HRESULT SetQuery;
    HRESULT SetSchemeName;
    HRESULT SetUserName;
    HRESULT RemoveProperties;
    HRESULT HasBeenModified;
    VOID IUriBuilder;
    VOID IUriBuilder;
    VOID IUriBuilder;
    struct IUriBuilder *operator=;
    struct IUriBuilder *operator=;
};

typedef struct IUriBuilderFactory {
    struct IUnknown IUnknown;
    HRESULT CreateIUriBuilder;
    HRESULT CreateInitializedIUriBuilder;
    VOID IUriBuilderFactory;
    VOID IUriBuilderFactory;
    VOID IUriBuilderFactory;
    struct IUriBuilderFactory *operator=;
    struct IUriBuilderFactory *operator=;
};

typedef struct IUriContainer {
    struct IUnknown IUnknown;
    HRESULT GetIUri;
    VOID IUriContainer;
    VOID IUriContainer;
    VOID IUriContainer;
    struct IUriContainer *operator=;
    struct IUriContainer *operator=;
};

typedef struct IUrlMon {
    struct IUnknown IUnknown;
    HRESULT AsyncGetClassBits;
    VOID IUrlMon;
    VOID IUrlMon;
    VOID IUrlMon;
    struct IUrlMon *operator=;
    struct IUrlMon *operator=;
};

typedef struct IUrlRedirectionPolicyManager {
    struct IUnknown IUnknown;
    HRESULT IsRedirectToBrokerNeeded;
    HRESULT GetBrowserTransitionState;
    VOID IUrlRedirectionPolicyManager;
    VOID IUrlRedirectionPolicyManager;
    VOID IUrlRedirectionPolicyManager;
    struct IUrlRedirectionPolicyManager *operator=;
    struct IUrlRedirectionPolicyManager *operator=;
};

typedef struct IUrlmonBindingInternal {
    struct IUnknown IUnknown;
    HRESULT IsFromUrlmonCBinding;
    HRESULT IsCachedHeaderAvailable;
    HRESULT QueryInfoFromCachedHeader;
    HRESULT SuppressOnStopBinding;
    HRESULT TriggerOnStopBinding;
    HRESULT SetSuppressedOnStopBindResult;
    VOID IUrlmonBindingInternal;
    VOID IUrlmonBindingInternal;
    VOID IUrlmonBindingInternal;
    struct IUrlmonBindingInternal *operator=;
    struct IUrlmonBindingInternal *operator=;
};

typedef struct IVBMXNamespaceManager {
    struct IDispatch IDispatch;
    HRESULT put_allowOverride;
    HRESULT get_allowOverride;
    HRESULT reset;
    HRESULT pushContext;
    HRESULT pushNodeContext;
    HRESULT popContext;
    HRESULT declarePrefix;
    HRESULT getDeclaredPrefixes;
    HRESULT getPrefixes;
    HRESULT getURI;
    HRESULT getURIFromNode;
    VOID IVBMXNamespaceManager;
    VOID IVBMXNamespaceManager;
    VOID IVBMXNamespaceManager;
    struct IVBMXNamespaceManager *operator=;
    struct IVBMXNamespaceManager *operator=;
};

typedef struct IVBSAXAttributes {
    struct IDispatch IDispatch;
    HRESULT get_length;
    HRESULT getURI;
    HRESULT getLocalName;
    HRESULT getQName;
    HRESULT getIndexFromName;
    HRESULT getIndexFromQName;
    HRESULT getType;
    HRESULT getTypeFromName;
    HRESULT getTypeFromQName;
    HRESULT getValue;
    HRESULT getValueFromName;
    HRESULT getValueFromQName;
    VOID IVBSAXAttributes;
    VOID IVBSAXAttributes;
    VOID IVBSAXAttributes;
    struct IVBSAXAttributes *operator=;
    struct IVBSAXAttributes *operator=;
};

typedef struct IVBSAXContentHandler {
    struct IDispatch IDispatch;
    HRESULT putref_documentLocator;
    HRESULT startDocument;
    HRESULT endDocument;
    HRESULT startPrefixMapping;
    HRESULT endPrefixMapping;
    HRESULT startElement;
    HRESULT endElement;
    HRESULT characters;
    HRESULT ignorableWhitespace;
    HRESULT processingInstruction;
    HRESULT skippedEntity;
    VOID IVBSAXContentHandler;
    VOID IVBSAXContentHandler;
    VOID IVBSAXContentHandler;
    struct IVBSAXContentHandler *operator=;
    struct IVBSAXContentHandler *operator=;
};

typedef struct IVBSAXDTDHandler {
    struct IDispatch IDispatch;
    HRESULT notationDecl;
    HRESULT unparsedEntityDecl;
    VOID IVBSAXDTDHandler;
    VOID IVBSAXDTDHandler;
    VOID IVBSAXDTDHandler;
    struct IVBSAXDTDHandler *operator=;
    struct IVBSAXDTDHandler *operator=;
};

typedef struct IVBSAXDeclHandler {
    struct IDispatch IDispatch;
    HRESULT elementDecl;
    HRESULT attributeDecl;
    HRESULT internalEntityDecl;
    HRESULT externalEntityDecl;
    VOID IVBSAXDeclHandler;
    VOID IVBSAXDeclHandler;
    VOID IVBSAXDeclHandler;
    struct IVBSAXDeclHandler *operator=;
    struct IVBSAXDeclHandler *operator=;
};

typedef struct IVBSAXEntityResolver {
    struct IDispatch IDispatch;
    HRESULT resolveEntity;
    VOID IVBSAXEntityResolver;
    VOID IVBSAXEntityResolver;
    VOID IVBSAXEntityResolver;
    struct IVBSAXEntityResolver *operator=;
    struct IVBSAXEntityResolver *operator=;
};

typedef struct IVBSAXErrorHandler {
    struct IDispatch IDispatch;
    HRESULT error;
    HRESULT fatalError;
    HRESULT ignorableWarning;
    VOID IVBSAXErrorHandler;
    VOID IVBSAXErrorHandler;
    VOID IVBSAXErrorHandler;
    struct IVBSAXErrorHandler *operator=;
    struct IVBSAXErrorHandler *operator=;
};

typedef struct IVBSAXLexicalHandler {
    struct IDispatch IDispatch;
    HRESULT startDTD;
    HRESULT endDTD;
    HRESULT startEntity;
    HRESULT endEntity;
    HRESULT startCDATA;
    HRESULT endCDATA;
    HRESULT comment;
    VOID IVBSAXLexicalHandler;
    VOID IVBSAXLexicalHandler;
    VOID IVBSAXLexicalHandler;
    struct IVBSAXLexicalHandler *operator=;
    struct IVBSAXLexicalHandler *operator=;
};

typedef struct IVBSAXLocator {
    struct IDispatch IDispatch;
    HRESULT get_columnNumber;
    HRESULT get_lineNumber;
    HRESULT get_publicId;
    HRESULT get_systemId;
    VOID IVBSAXLocator;
    VOID IVBSAXLocator;
    VOID IVBSAXLocator;
    struct IVBSAXLocator *operator=;
    struct IVBSAXLocator *operator=;
};

typedef struct IVBSAXXMLFilter {
    struct IDispatch IDispatch;
    HRESULT get_parent;
    HRESULT putref_parent;
    VOID IVBSAXXMLFilter;
    VOID IVBSAXXMLFilter;
    VOID IVBSAXXMLFilter;
    struct IVBSAXXMLFilter *operator=;
    struct IVBSAXXMLFilter *operator=;
};

typedef struct IVBSAXXMLReader {
    struct IDispatch IDispatch;
    HRESULT getFeature;
    HRESULT putFeature;
    HRESULT getProperty;
    HRESULT putProperty;
    HRESULT get_entityResolver;
    HRESULT putref_entityResolver;
    HRESULT get_contentHandler;
    HRESULT putref_contentHandler;
    HRESULT get_dtdHandler;
    HRESULT putref_dtdHandler;
    HRESULT get_errorHandler;
    HRESULT putref_errorHandler;
    HRESULT get_baseURL;
    HRESULT put_baseURL;
    HRESULT get_secureBaseURL;
    HRESULT put_secureBaseURL;
    HRESULT parse;
    HRESULT parseURL;
    VOID IVBSAXXMLReader;
    VOID IVBSAXXMLReader;
    VOID IVBSAXXMLReader;
    struct IVBSAXXMLReader *operator=;
    struct IVBSAXXMLReader *operator=;
};

typedef struct IVariantChangeType {
    struct IUnknown IUnknown;
    HRESULT ChangeType;
    VOID IVariantChangeType;
    VOID IVariantChangeType;
    VOID IVariantChangeType;
    struct IVariantChangeType *operator=;
    struct IVariantChangeType *operator=;
};

typedef struct IVariantDictionary {
    struct IDispatch IDispatch;
    HRESULT get_Item;
    HRESULT put_Item;
    HRESULT putref_Item;
    HRESULT get_Key;
    HRESULT get_Count;
    HRESULT get__NewEnum;
    HRESULT Remove;
    HRESULT RemoveAll;
    VOID IVariantDictionary;
    VOID IVariantDictionary;
    VOID IVariantDictionary;
    struct IVariantDictionary *operator=;
    struct IVariantDictionary *operator=;
};

typedef struct IViewObject {
    struct IUnknown IUnknown;
    HRESULT Draw;
    HRESULT GetColorSet;
    HRESULT Freeze;
    HRESULT Unfreeze;
    HRESULT SetAdvise;
    HRESULT GetAdvise;
    VOID IViewObject;
    VOID IViewObject;
    VOID IViewObject;
    struct IViewObject *operator=;
    struct IViewObject *operator=;
};

typedef struct IViewObject2 {
    struct IViewObject IViewObject;
    HRESULT GetExtent;
    VOID IViewObject2;
    VOID IViewObject2;
    VOID IViewObject2;
    struct IViewObject2 *operator=;
    struct IViewObject2 *operator=;
};

typedef struct IViewObjectEx {
    struct IViewObject2 IViewObject2;
    HRESULT GetRect;
    HRESULT GetViewStatus;
    HRESULT QueryHitPoint;
    HRESULT QueryHitRect;
    HRESULT GetNaturalExtent;
    VOID IViewObjectEx;
    VOID IViewObjectEx;
    VOID IViewObjectEx;
    struct IViewObjectEx *operator=;
    struct IViewObjectEx *operator=;
};

typedef struct IViewObjectPresentNotify {
    struct IUnknown IUnknown;
    HRESULT OnPreRender;
    VOID IViewObjectPresentNotify;
    VOID IViewObjectPresentNotify;
    VOID IViewObjectPresentNotify;
    struct IViewObjectPresentNotify *operator=;
    struct IViewObjectPresentNotify *operator=;
};

typedef struct IViewObjectPresentNotifySite {
    struct IViewObjectPresentSite IViewObjectPresentSite;
    HRESULT RequestFrame;
    VOID IViewObjectPresentNotifySite;
    VOID IViewObjectPresentNotifySite;
    VOID IViewObjectPresentNotifySite;
    struct IViewObjectPresentNotifySite *operator=;
    struct IViewObjectPresentNotifySite *operator=;
};

typedef struct IViewObjectPresentSite {
    struct IUnknown IUnknown;
    HRESULT CreateSurfacePresenter;
    HRESULT IsHardwareComposition;
    HRESULT SetCompositionMode;
    VOID IViewObjectPresentSite;
    VOID IViewObjectPresentSite;
    VOID IViewObjectPresentSite;
    struct IViewObjectPresentSite *operator=;
    struct IViewObjectPresentSite *operator=;
};

typedef struct IViewObjectPrint {
    struct IUnknown IUnknown;
    HRESULT GetPrintBitmap;
    VOID IViewObjectPrint;
    VOID IViewObjectPrint;
    VOID IViewObjectPrint;
    struct IViewObjectPrint *operator=;
    struct IViewObjectPrint *operator=;
};

typedef struct IWBScriptControl {
    struct IDispatch IDispatch;
    HRESULT raiseEvent;
    HRESULT bubbleEvent;
    HRESULT setContextMenu;
    HRESULT put_selectableContent;
    HRESULT get_selectableContent;
    HRESULT get_frozen;
    HRESULT put_scrollbar;
    HRESULT get_scrollbar;
    HRESULT get_version;
    HRESULT get_visibility;
    HRESULT put_onvisibilitychange;
    HRESULT get_onvisibilitychange;
    VOID IWBScriptControl;
    VOID IWBScriptControl;
    VOID IWBScriptControl;
    struct IWBScriptControl *operator=;
    struct IWBScriptControl *operator=;
};

typedef struct IWPCBlockedUrls {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetUrl;
    VOID IWPCBlockedUrls;
    VOID IWPCBlockedUrls;
    VOID IWPCBlockedUrls;
    struct IWPCBlockedUrls *operator=;
    struct IWPCBlockedUrls *operator=;
};

typedef struct IWaitMultiple {
    struct IUnknown IUnknown;
    HRESULT WaitMultiple;
    HRESULT AddSynchronize;
    VOID IWaitMultiple;
    VOID IWaitMultiple;
    VOID IWaitMultiple;
    struct IWaitMultiple *operator=;
    struct IWaitMultiple *operator=;
};

typedef struct IWeakReference {
    struct IUnknown IUnknown;
    HRESULT Resolve;
    VOID IWeakReference;
    VOID IWeakReference;
    VOID IWeakReference;
    struct IWeakReference *operator=;
    struct IWeakReference *operator=;
};

typedef struct IWeakReferenceSource {
    struct IUnknown IUnknown;
    HRESULT GetWeakReference;
    VOID IWeakReferenceSource;
    VOID IWeakReferenceSource;
    VOID IWeakReferenceSource;
    struct IWeakReferenceSource *operator=;
    struct IWeakReferenceSource *operator=;
};

typedef struct IWebBridge {
    struct IDispatch IDispatch;
    HRESULT put_URL;
    HRESULT get_URL;
    HRESULT put_Scrollbar;
    HRESULT get_Scrollbar;
    HRESULT put_embed;
    HRESULT get_embed;
    HRESULT get_event;
    HRESULT get_readyState;
    HRESULT AboutBox;
    VOID IWebBridge;
    VOID IWebBridge;
    VOID IWebBridge;
    struct IWebBridge *operator=;
    struct IWebBridge *operator=;
};

typedef struct IWebGeocoordinates {
    struct IDispatch IDispatch;
    HRESULT get_latitude;
    HRESULT get_longitude;
    HRESULT get_altitude;
    HRESULT get_accuracy;
    HRESULT get_altitudeAccuracy;
    HRESULT get_heading;
    HRESULT get_speed;
    VOID IWebGeocoordinates;
    VOID IWebGeocoordinates;
    VOID IWebGeocoordinates;
    struct IWebGeocoordinates *operator=;
    struct IWebGeocoordinates *operator=;
};

typedef struct IWebGeolocation {
    struct IDispatch IDispatch;
    HRESULT getCurrentPosition;
    HRESULT watchPosition;
    HRESULT clearWatch;
    VOID IWebGeolocation;
    VOID IWebGeolocation;
    VOID IWebGeolocation;
    struct IWebGeolocation *operator=;
    struct IWebGeolocation *operator=;
};

typedef struct IWebGeoposition {
    struct IDispatch IDispatch;
    HRESULT get_coords;
    HRESULT get_timestamp;
    VOID IWebGeoposition;
    VOID IWebGeoposition;
    VOID IWebGeoposition;
    struct IWebGeoposition *operator=;
    struct IWebGeoposition *operator=;
};

typedef struct IWebGeopositionError {
    struct IDispatch IDispatch;
    HRESULT get_code;
    HRESULT get_message;
    VOID IWebGeopositionError;
    VOID IWebGeopositionError;
    VOID IWebGeopositionError;
    struct IWebGeopositionError *operator=;
    struct IWebGeopositionError *operator=;
};

typedef struct IWebPlatformAsyncHost {
};

typedef struct IWebPlatformPermanentSecurityManager {
    struct IWebPlatformSecurityManager IWebPlatformSecurityManager;
    HRESULT GetZoneActionPolicyEx;
    VOID IWebPlatformPermanentSecurityManager;
    VOID IWebPlatformPermanentSecurityManager;
    VOID IWebPlatformPermanentSecurityManager;
    struct IWebPlatformPermanentSecurityManager *operator=;
    struct IWebPlatformPermanentSecurityManager *operator=;
};

typedef struct IWebPlatformPermanentSecurityManagerInternal {
    struct IUnknown IUnknown;
    HRESULT RegisterHostPermanentSecurityManager;
    HRESULT UnregisterHostPermanentSecurityManager;
    HRESULT IsRegisteredHostPermanentSecurityManager;
    VOID IWebPlatformPermanentSecurityManagerInternal;
    VOID IWebPlatformPermanentSecurityManagerInternal;
    VOID IWebPlatformPermanentSecurityManagerInternal;
    struct IWebPlatformPermanentSecurityManagerInternal *operator=;
    struct IWebPlatformPermanentSecurityManagerInternal *operator=;
};

typedef struct IWebPlatformSecurityManager {
    struct IUnknown IUnknown;
    HRESULT MapUrlToZone;
    HRESULT ProcessUrlAction;
    HRESULT GetSecurityId;
    HRESULT QueryCustomPolicy;
    VOID IWebPlatformSecurityManager;
    VOID IWebPlatformSecurityManager;
    VOID IWebPlatformSecurityManager;
    struct IWebPlatformSecurityManager *operator=;
    struct IWebPlatformSecurityManager *operator=;
};

typedef struct IWebPlatformSecurityManagerInternal {
    struct IUnknown IUnknown;
    HRESULT MapUrlToZoneInternal;
    VOID IWebPlatformSecurityManagerInternal;
    VOID IWebPlatformSecurityManagerInternal;
    VOID IWebPlatformSecurityManagerInternal;
    struct IWebPlatformSecurityManagerInternal *operator=;
    struct IWebPlatformSecurityManagerInternal *operator=;
};

typedef struct IWinHttpRequest {
    struct IDispatch IDispatch;
    HRESULT SetProxy;
    HRESULT SetCredentials;
    HRESULT Open;
    HRESULT SetRequestHeader;
    HRESULT GetResponseHeader;
    HRESULT GetAllResponseHeaders;
    HRESULT Send;
    HRESULT get_Status;
    HRESULT get_StatusText;
    HRESULT get_ResponseText;
    HRESULT get_ResponseBody;
    HRESULT get_ResponseStream;
    HRESULT get_Option;
    HRESULT put_Option;
    HRESULT WaitForResponse;
    HRESULT Abort;
    HRESULT SetTimeouts;
    HRESULT SetClientCertificate;
    HRESULT SetAutoLogonPolicy;
    VOID IWinHttpRequest;
    VOID IWinHttpRequest;
    VOID IWinHttpRequest;
    struct IWinHttpRequest *operator=;
    struct IWinHttpRequest *operator=;
};

typedef struct IWinHttpRequestEvents {
    struct IUnknown IUnknown;
    VOID OnResponseStart;
    VOID OnResponseDataAvailable;
    VOID OnResponseFinished;
    VOID OnError;
    VOID IWinHttpRequestEvents;
    VOID IWinHttpRequestEvents;
    VOID IWinHttpRequestEvents;
    struct IWinHttpRequestEvents *operator=;
    struct IWinHttpRequestEvents *operator=;
};

typedef struct IWinInetCacheHints {
    struct IUnknown IUnknown;
    HRESULT SetCacheExtension;
    VOID IWinInetCacheHints;
    VOID IWinInetCacheHints;
    VOID IWinInetCacheHints;
    struct IWinInetCacheHints *operator=;
    struct IWinInetCacheHints *operator=;
};

typedef struct IWinInetCacheHints2 {
    struct IWinInetCacheHints IWinInetCacheHints;
    HRESULT SetCacheExtension2;
    VOID IWinInetCacheHints2;
    VOID IWinInetCacheHints2;
    VOID IWinInetCacheHints2;
    struct IWinInetCacheHints2 *operator=;
    struct IWinInetCacheHints2 *operator=;
};

typedef struct IWinInetFileStream {
    struct IUnknown IUnknown;
    HRESULT SetHandleForUnlock;
    HRESULT SetDeleteFile;
    VOID IWinInetFileStream;
    VOID IWinInetFileStream;
    VOID IWinInetFileStream;
    struct IWinInetFileStream *operator=;
    struct IWinInetFileStream *operator=;
};

typedef struct IWinInetHttpInfo {
    struct IWinInetInfo IWinInetInfo;
    HRESULT QueryInfo;
    VOID IWinInetHttpInfo;
    VOID IWinInetHttpInfo;
    VOID IWinInetHttpInfo;
    struct IWinInetHttpInfo *operator=;
    struct IWinInetHttpInfo *operator=;
};

typedef struct IWinInetHttpTimeouts {
    struct IUnknown IUnknown;
    HRESULT GetRequestTimeouts;
    VOID IWinInetHttpTimeouts;
    VOID IWinInetHttpTimeouts;
    VOID IWinInetHttpTimeouts;
    struct IWinInetHttpTimeouts *operator=;
    struct IWinInetHttpTimeouts *operator=;
};

typedef struct IWinInetInfo {
    struct IUnknown IUnknown;
    HRESULT QueryOption;
    VOID IWinInetInfo;
    VOID IWinInetInfo;
    VOID IWinInetInfo;
    struct IWinInetInfo *operator=;
    struct IWinInetInfo *operator=;
};

typedef struct IWindowForBindingUI {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    VOID IWindowForBindingUI;
    VOID IWindowForBindingUI;
    VOID IWindowForBindingUI;
    struct IWindowForBindingUI *operator=;
    struct IWindowForBindingUI *operator=;
};

typedef struct IWrappedProtocol {
    struct IUnknown IUnknown;
    HRESULT GetWrapperCode;
    VOID IWrappedProtocol;
    VOID IWrappedProtocol;
    VOID IWrappedProtocol;
    struct IWrappedProtocol *operator=;
    struct IWrappedProtocol *operator=;
};

typedef struct IWriteCookie {
    struct IDispatch IDispatch;
    HRESULT put_Item;
    HRESULT put_Expires;
    HRESULT put_Domain;
    HRESULT put_Path;
    HRESULT put_Secure;
    HRESULT get_HasKeys;
    HRESULT get__NewEnum;
    VOID IWriteCookie;
    VOID IWriteCookie;
    VOID IWriteCookie;
    struct IWriteCookie *operator=;
    struct IWriteCookie *operator=;
};

typedef struct IXMLAttribute {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT get_value;
    VOID IXMLAttribute;
    VOID IXMLAttribute;
    VOID IXMLAttribute;
    struct IXMLAttribute *operator=;
    struct IXMLAttribute *operator=;
};

typedef struct IXMLDOMAttribute {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_name;
    HRESULT get_value;
    HRESULT put_value;
    VOID IXMLDOMAttribute;
    VOID IXMLDOMAttribute;
    VOID IXMLDOMAttribute;
    struct IXMLDOMAttribute *operator=;
    struct IXMLDOMAttribute *operator=;
};

typedef struct IXMLDOMCDATASection {
    struct IXMLDOMText IXMLDOMText;
    VOID IXMLDOMCDATASection;
    VOID IXMLDOMCDATASection;
    VOID IXMLDOMCDATASection;
    struct IXMLDOMCDATASection *operator=;
    struct IXMLDOMCDATASection *operator=;
};

typedef struct IXMLDOMCharacterData {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_data;
    HRESULT put_data;
    HRESULT get_length;
    HRESULT substringData;
    HRESULT appendData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    VOID IXMLDOMCharacterData;
    VOID IXMLDOMCharacterData;
    VOID IXMLDOMCharacterData;
    struct IXMLDOMCharacterData *operator=;
    struct IXMLDOMCharacterData *operator=;
};

typedef struct IXMLDOMComment {
    struct IXMLDOMCharacterData IXMLDOMCharacterData;
    VOID IXMLDOMComment;
    VOID IXMLDOMComment;
    VOID IXMLDOMComment;
    struct IXMLDOMComment *operator=;
    struct IXMLDOMComment *operator=;
};

typedef struct IXMLDOMDocument {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_doctype;
    HRESULT get_implementation;
    HRESULT get_documentElement;
    HRESULT putref_documentElement;
    HRESULT createElement;
    HRESULT createDocumentFragment;
    HRESULT createTextNode;
    HRESULT createComment;
    HRESULT createCDATASection;
    HRESULT createProcessingInstruction;
    HRESULT createAttribute;
    HRESULT createEntityReference;
    HRESULT getElementsByTagName;
    HRESULT createNode;
    HRESULT nodeFromID;
    HRESULT load;
    HRESULT get_readyState;
    HRESULT get_parseError;
    HRESULT get_url;
    HRESULT get_async;
    HRESULT put_async;
    HRESULT abort;
    HRESULT loadXML;
    HRESULT save;
    HRESULT get_validateOnParse;
    HRESULT put_validateOnParse;
    HRESULT get_resolveExternals;
    HRESULT put_resolveExternals;
    HRESULT get_preserveWhiteSpace;
    HRESULT put_preserveWhiteSpace;
    HRESULT put_onreadystatechange;
    HRESULT put_ondataavailable;
    HRESULT put_ontransformnode;
    VOID IXMLDOMDocument;
    VOID IXMLDOMDocument;
    VOID IXMLDOMDocument;
    struct IXMLDOMDocument *operator=;
    struct IXMLDOMDocument *operator=;
};

typedef struct IXMLDOMDocument2 {
    struct IXMLDOMDocument IXMLDOMDocument;
    HRESULT get_namespaces;
    HRESULT get_schemas;
    HRESULT putref_schemas;
    HRESULT validate;
    HRESULT setProperty;
    HRESULT getProperty;
    VOID IXMLDOMDocument2;
    VOID IXMLDOMDocument2;
    VOID IXMLDOMDocument2;
    struct IXMLDOMDocument2 *operator=;
    struct IXMLDOMDocument2 *operator=;
};

typedef struct IXMLDOMDocument3 {
    struct IXMLDOMDocument2 IXMLDOMDocument2;
    HRESULT validateNode;
    HRESULT importNode;
    VOID IXMLDOMDocument3;
    VOID IXMLDOMDocument3;
    VOID IXMLDOMDocument3;
    struct IXMLDOMDocument3 *operator=;
    struct IXMLDOMDocument3 *operator=;
};

typedef struct IXMLDOMDocumentFragment {
    struct IXMLDOMNode IXMLDOMNode;
    VOID IXMLDOMDocumentFragment;
    VOID IXMLDOMDocumentFragment;
    VOID IXMLDOMDocumentFragment;
    struct IXMLDOMDocumentFragment *operator=;
    struct IXMLDOMDocumentFragment *operator=;
};

typedef struct IXMLDOMDocumentType {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_name;
    HRESULT get_entities;
    HRESULT get_notations;
    VOID IXMLDOMDocumentType;
    VOID IXMLDOMDocumentType;
    VOID IXMLDOMDocumentType;
    struct IXMLDOMDocumentType *operator=;
    struct IXMLDOMDocumentType *operator=;
};

typedef struct IXMLDOMElement {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_tagName;
    HRESULT getAttribute;
    HRESULT setAttribute;
    HRESULT removeAttribute;
    HRESULT getAttributeNode;
    HRESULT setAttributeNode;
    HRESULT removeAttributeNode;
    HRESULT getElementsByTagName;
    HRESULT normalize;
    VOID IXMLDOMElement;
    VOID IXMLDOMElement;
    VOID IXMLDOMElement;
    struct IXMLDOMElement *operator=;
    struct IXMLDOMElement *operator=;
};

typedef struct IXMLDOMEntity {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_publicId;
    HRESULT get_systemId;
    HRESULT get_notationName;
    VOID IXMLDOMEntity;
    VOID IXMLDOMEntity;
    VOID IXMLDOMEntity;
    struct IXMLDOMEntity *operator=;
    struct IXMLDOMEntity *operator=;
};

typedef struct IXMLDOMEntityReference {
    struct IXMLDOMNode IXMLDOMNode;
    VOID IXMLDOMEntityReference;
    VOID IXMLDOMEntityReference;
    VOID IXMLDOMEntityReference;
    struct IXMLDOMEntityReference *operator=;
    struct IXMLDOMEntityReference *operator=;
};

typedef struct IXMLDOMImplementation {
    struct IDispatch IDispatch;
    HRESULT hasFeature;
    VOID IXMLDOMImplementation;
    VOID IXMLDOMImplementation;
    VOID IXMLDOMImplementation;
    struct IXMLDOMImplementation *operator=;
    struct IXMLDOMImplementation *operator=;
};

typedef struct IXMLDOMNamedNodeMap {
    struct IDispatch IDispatch;
    HRESULT getNamedItem;
    HRESULT setNamedItem;
    HRESULT removeNamedItem;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT getQualifiedItem;
    HRESULT removeQualifiedItem;
    HRESULT nextNode;
    HRESULT reset;
    HRESULT get__newEnum;
    VOID IXMLDOMNamedNodeMap;
    VOID IXMLDOMNamedNodeMap;
    VOID IXMLDOMNamedNodeMap;
    struct IXMLDOMNamedNodeMap *operator=;
    struct IXMLDOMNamedNodeMap *operator=;
};

typedef struct IXMLDOMNode {
    struct IDispatch IDispatch;
    HRESULT get_nodeName;
    HRESULT get_nodeValue;
    HRESULT put_nodeValue;
    HRESULT get_nodeType;
    HRESULT get_parentNode;
    HRESULT get_childNodes;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_previousSibling;
    HRESULT get_nextSibling;
    HRESULT get_attributes;
    HRESULT insertBefore;
    HRESULT replaceChild;
    HRESULT removeChild;
    HRESULT appendChild;
    HRESULT hasChildNodes;
    HRESULT get_ownerDocument;
    HRESULT cloneNode;
    HRESULT get_nodeTypeString;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT get_specified;
    HRESULT get_definition;
    HRESULT get_nodeTypedValue;
    HRESULT put_nodeTypedValue;
    HRESULT get_dataType;
    HRESULT put_dataType;
    HRESULT get_xml;
    HRESULT transformNode;
    HRESULT selectNodes;
    HRESULT selectSingleNode;
    HRESULT get_parsed;
    HRESULT get_namespaceURI;
    HRESULT get_prefix;
    HRESULT get_baseName;
    HRESULT transformNodeToObject;
    VOID IXMLDOMNode;
    VOID IXMLDOMNode;
    VOID IXMLDOMNode;
    struct IXMLDOMNode *operator=;
    struct IXMLDOMNode *operator=;
};

typedef struct IXMLDOMNodeList {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT nextNode;
    HRESULT reset;
    HRESULT get__newEnum;
    VOID IXMLDOMNodeList;
    VOID IXMLDOMNodeList;
    VOID IXMLDOMNodeList;
    struct IXMLDOMNodeList *operator=;
    struct IXMLDOMNodeList *operator=;
};

typedef struct IXMLDOMNotation {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_publicId;
    HRESULT get_systemId;
    VOID IXMLDOMNotation;
    VOID IXMLDOMNotation;
    VOID IXMLDOMNotation;
    struct IXMLDOMNotation *operator=;
    struct IXMLDOMNotation *operator=;
};

typedef struct IXMLDOMParseError {
    struct IDispatch IDispatch;
    HRESULT get_errorCode;
    HRESULT get_url;
    HRESULT get_reason;
    HRESULT get_srcText;
    HRESULT get_line;
    HRESULT get_linepos;
    HRESULT get_filepos;
    VOID IXMLDOMParseError;
    VOID IXMLDOMParseError;
    VOID IXMLDOMParseError;
    struct IXMLDOMParseError *operator=;
    struct IXMLDOMParseError *operator=;
};

typedef struct IXMLDOMParseError2 {
    struct IXMLDOMParseError IXMLDOMParseError;
    HRESULT get_errorXPath;
    HRESULT get_allErrors;
    HRESULT errorParameters;
    HRESULT get_errorParametersCount;
    VOID IXMLDOMParseError2;
    VOID IXMLDOMParseError2;
    VOID IXMLDOMParseError2;
    struct IXMLDOMParseError2 *operator=;
    struct IXMLDOMParseError2 *operator=;
};

typedef struct IXMLDOMParseErrorCollection {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT get_next;
    HRESULT reset;
    HRESULT get__newEnum;
    VOID IXMLDOMParseErrorCollection;
    VOID IXMLDOMParseErrorCollection;
    VOID IXMLDOMParseErrorCollection;
    struct IXMLDOMParseErrorCollection *operator=;
    struct IXMLDOMParseErrorCollection *operator=;
};

typedef struct IXMLDOMProcessingInstruction {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_target;
    HRESULT get_data;
    HRESULT put_data;
    VOID IXMLDOMProcessingInstruction;
    VOID IXMLDOMProcessingInstruction;
    VOID IXMLDOMProcessingInstruction;
    struct IXMLDOMProcessingInstruction *operator=;
    struct IXMLDOMProcessingInstruction *operator=;
};

typedef struct IXMLDOMSchemaCollection {
    struct IDispatch IDispatch;
    HRESULT add;
    HRESULT get;
    HRESULT remove;
    HRESULT get_length;
    HRESULT get_namespaceURI;
    HRESULT addCollection;
    HRESULT get__newEnum;
    VOID IXMLDOMSchemaCollection;
    VOID IXMLDOMSchemaCollection;
    VOID IXMLDOMSchemaCollection;
    struct IXMLDOMSchemaCollection *operator=;
    struct IXMLDOMSchemaCollection *operator=;
};

typedef struct IXMLDOMSchemaCollection2 {
    struct IXMLDOMSchemaCollection IXMLDOMSchemaCollection;
    HRESULT validate;
    HRESULT put_validateOnLoad;
    HRESULT get_validateOnLoad;
    HRESULT getSchema;
    HRESULT getDeclaration;
    VOID IXMLDOMSchemaCollection2;
    VOID IXMLDOMSchemaCollection2;
    VOID IXMLDOMSchemaCollection2;
    struct IXMLDOMSchemaCollection2 *operator=;
    struct IXMLDOMSchemaCollection2 *operator=;
};

typedef struct IXMLDOMSelection {
    struct IXMLDOMNodeList IXMLDOMNodeList;
    HRESULT get_expr;
    HRESULT put_expr;
    HRESULT get_context;
    HRESULT putref_context;
    HRESULT peekNode;
    HRESULT matches;
    HRESULT removeNext;
    HRESULT removeAll;
    HRESULT clone;
    HRESULT getProperty;
    HRESULT setProperty;
    VOID IXMLDOMSelection;
    VOID IXMLDOMSelection;
    VOID IXMLDOMSelection;
    struct IXMLDOMSelection *operator=;
    struct IXMLDOMSelection *operator=;
};

typedef struct IXMLDOMText {
    struct IXMLDOMCharacterData IXMLDOMCharacterData;
    HRESULT splitText;
    VOID IXMLDOMText;
    VOID IXMLDOMText;
    VOID IXMLDOMText;
    struct IXMLDOMText *operator=;
    struct IXMLDOMText *operator=;
};

typedef struct IXMLDSOControl {
    struct IDispatch IDispatch;
    HRESULT get_XMLDocument;
    HRESULT put_XMLDocument;
    HRESULT get_JavaDSOCompatible;
    HRESULT put_JavaDSOCompatible;
    HRESULT get_readyState;
    VOID IXMLDSOControl;
    VOID IXMLDSOControl;
    VOID IXMLDSOControl;
    struct IXMLDSOControl *operator=;
    struct IXMLDSOControl *operator=;
};

typedef struct IXMLDocument {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_fileSize;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_URL;
    HRESULT put_URL;
    HRESULT get_mimeType;
    HRESULT get_readyState;
    HRESULT get_charset;
    HRESULT put_charset;
    HRESULT get_version;
    HRESULT get_doctype;
    HRESULT get_dtdURL;
    HRESULT createElement;
    VOID IXMLDocument;
    VOID IXMLDocument;
    VOID IXMLDocument;
    struct IXMLDocument *operator=;
    struct IXMLDocument *operator=;
};

typedef struct IXMLDocument2 {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_fileSize;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_URL;
    HRESULT put_URL;
    HRESULT get_mimeType;
    HRESULT get_readyState;
    HRESULT get_charset;
    HRESULT put_charset;
    HRESULT get_version;
    HRESULT get_doctype;
    HRESULT get_dtdURL;
    HRESULT createElement;
    HRESULT get_async;
    HRESULT put_async;
    VOID IXMLDocument2;
    VOID IXMLDocument2;
    VOID IXMLDocument2;
    struct IXMLDocument2 *operator=;
    struct IXMLDocument2 *operator=;
};

typedef struct IXMLDocumentNotify {
    struct IUnknown IUnknown;
    HRESULT OnNodeChange;
    VOID IXMLDocumentNotify;
    VOID IXMLDocumentNotify;
    VOID IXMLDocumentNotify;
    struct IXMLDocumentNotify *operator=;
    struct IXMLDocumentNotify *operator=;
};

typedef struct IXMLElement {
    struct IDispatch IDispatch;
    HRESULT get_tagName;
    HRESULT put_tagName;
    HRESULT get_parent;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT get_children;
    HRESULT get_type;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT addChild;
    HRESULT removeChild;
    VOID IXMLElement;
    VOID IXMLElement;
    VOID IXMLElement;
    struct IXMLElement *operator=;
    struct IXMLElement *operator=;
};

typedef struct IXMLElement2 {
    struct IDispatch IDispatch;
    HRESULT get_tagName;
    HRESULT put_tagName;
    HRESULT get_parent;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT get_children;
    HRESULT get_type;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT addChild;
    HRESULT removeChild;
    HRESULT get_attributes;
    VOID IXMLElement2;
    VOID IXMLElement2;
    VOID IXMLElement2;
    struct IXMLElement2 *operator=;
    struct IXMLElement2 *operator=;
};

typedef struct IXMLElementCollection {
    struct IDispatch IDispatch;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IXMLElementCollection;
    VOID IXMLElementCollection;
    VOID IXMLElementCollection;
    struct IXMLElementCollection *operator=;
    struct IXMLElementCollection *operator=;
};

typedef struct IXMLError {
    struct IUnknown IUnknown;
    HRESULT GetErrorInfo;
    VOID IXMLError;
    VOID IXMLError;
    VOID IXMLError;
    struct IXMLError *operator=;
    struct IXMLError *operator=;
};

typedef struct IXMLGenericParse {
    struct IUnknown IUnknown;
    HRESULT SetGenericParse;
    VOID IXMLGenericParse;
    VOID IXMLGenericParse;
    VOID IXMLGenericParse;
    struct IXMLGenericParse *operator=;
    struct IXMLGenericParse *operator=;
};

typedef struct IXMLHTTPRequest {
    struct IDispatch IDispatch;
    HRESULT open;
    HRESULT setRequestHeader;
    HRESULT getResponseHeader;
    HRESULT getAllResponseHeaders;
    HRESULT send;
    HRESULT abort;
    HRESULT get_status;
    HRESULT get_statusText;
    HRESULT get_responseXML;
    HRESULT get_responseText;
    HRESULT get_responseBody;
    HRESULT get_responseStream;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    VOID IXMLHTTPRequest;
    VOID IXMLHTTPRequest;
    VOID IXMLHTTPRequest;
    struct IXMLHTTPRequest *operator=;
    struct IXMLHTTPRequest *operator=;
};

typedef struct IXMLHTTPRequest2 {
    struct IUnknown IUnknown;
    HRESULT Open;
    HRESULT Send;
    HRESULT Abort;
    HRESULT SetCookie;
    HRESULT SetCustomResponseStream;
    HRESULT SetProperty;
    HRESULT SetRequestHeader;
    HRESULT GetAllResponseHeaders;
    HRESULT GetCookie;
    HRESULT GetResponseHeader;
    VOID IXMLHTTPRequest2;
    VOID IXMLHTTPRequest2;
    VOID IXMLHTTPRequest2;
    struct IXMLHTTPRequest2 *operator=;
    struct IXMLHTTPRequest2 *operator=;
};

typedef struct IXMLHTTPRequest2Callback {
    struct IUnknown IUnknown;
    HRESULT OnRedirect;
    HRESULT OnHeadersAvailable;
    HRESULT OnDataAvailable;
    HRESULT OnResponseReceived;
    HRESULT OnError;
    VOID IXMLHTTPRequest2Callback;
    VOID IXMLHTTPRequest2Callback;
    VOID IXMLHTTPRequest2Callback;
    struct IXMLHTTPRequest2Callback *operator=;
    struct IXMLHTTPRequest2Callback *operator=;
};

typedef struct IXMLHTTPRequest3 {
    struct IXMLHTTPRequest2 IXMLHTTPRequest2;
    HRESULT SetClientCertificate;
    VOID IXMLHTTPRequest3;
    VOID IXMLHTTPRequest3;
    VOID IXMLHTTPRequest3;
    struct IXMLHTTPRequest3 *operator=;
    struct IXMLHTTPRequest3 *operator=;
};

typedef struct IXMLHTTPRequest3Callback {
    struct IXMLHTTPRequest2Callback IXMLHTTPRequest2Callback;
    HRESULT OnServerCertificateReceived;
    HRESULT OnClientCertificateRequested;
    VOID IXMLHTTPRequest3Callback;
    VOID IXMLHTTPRequest3Callback;
    VOID IXMLHTTPRequest3Callback;
    struct IXMLHTTPRequest3Callback *operator=;
    struct IXMLHTTPRequest3Callback *operator=;
};

typedef struct IXMLHttpRequest {
    struct IDispatch IDispatch;
    HRESULT open;
    HRESULT setRequestHeader;
    HRESULT getResponseHeader;
    HRESULT getAllResponseHeaders;
    HRESULT send;
    HRESULT abort;
    HRESULT get_status;
    HRESULT get_statusText;
    HRESULT get_responseXML;
    HRESULT get_responseText;
    HRESULT get_responseBody;
    HRESULT get_responseStream;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    VOID IXMLHttpRequest;
    VOID IXMLHttpRequest;
    VOID IXMLHttpRequest;
    struct IXMLHttpRequest *operator=;
    struct IXMLHttpRequest *operator=;
};

typedef struct IXMLHttpRequestEventTarget {
    struct IDispatch IDispatch;
    VOID IXMLHttpRequestEventTarget;
    VOID IXMLHttpRequestEventTarget;
    VOID IXMLHttpRequestEventTarget;
    struct IXMLHttpRequestEventTarget *operator=;
    struct IXMLHttpRequestEventTarget *operator=;
};

typedef struct IXMLNodeFactory {
    struct IUnknown IUnknown;
    HRESULT NotifyEvent;
    HRESULT BeginChildren;
    HRESULT EndChildren;
    HRESULT Error;
    HRESULT CreateNode;
    VOID IXMLNodeFactory;
    VOID IXMLNodeFactory;
    VOID IXMLNodeFactory;
    struct IXMLNodeFactory *operator=;
    struct IXMLNodeFactory *operator=;
};

typedef struct IXMLNodeSource {
    struct IUnknown IUnknown;
    HRESULT SetFactory;
    HRESULT GetFactory;
    HRESULT Abort;
    ULONG GetLineNumber;
    ULONG GetLinePosition;
    ULONG GetAbsolutePosition;
    HRESULT GetLineBuffer;
    HRESULT GetLastError;
    HRESULT GetErrorInfo;
    ULONG GetFlags;
    HRESULT GetURL;
    VOID IXMLNodeSource;
    VOID IXMLNodeSource;
    VOID IXMLNodeSource;
    struct IXMLNodeSource *operator=;
    struct IXMLNodeSource *operator=;
};

typedef struct IXMLParser {
    struct IXMLNodeSource IXMLNodeSource;
    HRESULT SetURL;
    HRESULT Load;
    HRESULT SetInput;
    HRESULT PushData;
    HRESULT LoadDTD;
    HRESULT LoadEntity;
    HRESULT ParseEntity;
    HRESULT ExpandEntity;
    HRESULT SetRoot;
    HRESULT GetRoot;
    HRESULT Run;
    HRESULT GetParserState;
    HRESULT Suspend;
    HRESULT Reset;
    HRESULT SetFlags;
    HRESULT SetSecureBaseURL;
    HRESULT GetSecureBaseURL;
    VOID IXMLParser;
    VOID IXMLParser;
    VOID IXMLParser;
    struct IXMLParser *operator=;
    struct IXMLParser *operator=;
};

typedef struct IXMLParser2 {
    struct IXMLParser IXMLParser;
    HRESULT SetMaxXmlSize;
    HRESULT GetMaxXmlSize;
    VOID IXMLParser2;
    VOID IXMLParser2;
    VOID IXMLParser2;
    struct IXMLParser2 *operator=;
    struct IXMLParser2 *operator=;
};

typedef struct IXMLParser3 {
    struct IXMLParser2 IXMLParser2;
    HRESULT SetProperty;
    HRESULT GetProperty;
    VOID IXMLParser3;
    VOID IXMLParser3;
    VOID IXMLParser3;
    struct IXMLParser3 *operator=;
    struct IXMLParser3 *operator=;
};

typedef struct IXSLProcessor {
    struct IDispatch IDispatch;
    HRESULT put_input;
    HRESULT get_input;
    HRESULT get_ownerTemplate;
    HRESULT setStartMode;
    HRESULT get_startMode;
    HRESULT get_startModeURI;
    HRESULT put_output;
    HRESULT get_output;
    HRESULT transform;
    HRESULT reset;
    HRESULT get_readyState;
    HRESULT addParameter;
    HRESULT addObject;
    HRESULT get_stylesheet;
    VOID IXSLProcessor;
    VOID IXSLProcessor;
    VOID IXSLProcessor;
    struct IXSLProcessor *operator=;
    struct IXSLProcessor *operator=;
};

typedef struct IXSLTemplate {
    struct IDispatch IDispatch;
    HRESULT putref_stylesheet;
    HRESULT get_stylesheet;
    HRESULT createProcessor;
    VOID IXSLTemplate;
    VOID IXSLTemplate;
    VOID IXSLTemplate;
    struct IXSLTemplate *operator=;
    struct IXSLTemplate *operator=;
};

typedef struct IXTLRuntime {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT uniqueID;
    HRESULT depth;
    HRESULT childNumber;
    HRESULT ancestorChildNumber;
    HRESULT absoluteChildNumber;
    HRESULT formatIndex;
    HRESULT formatNumber;
    HRESULT formatDate;
    HRESULT formatTime;
    VOID IXTLRuntime;
    VOID IXTLRuntime;
    VOID IXTLRuntime;
    struct IXTLRuntime *operator=;
    struct IXTLRuntime *operator=;
};

typedef struct IXmlHttpRequestInternal {
    struct IUnknown IUnknown;
    HRESULT SendContinue;
    VOID IXmlHttpRequestInternal;
    VOID IXmlHttpRequestInternal;
    VOID IXmlHttpRequestInternal;
    struct IXmlHttpRequestInternal *operator=;
    struct IXmlHttpRequestInternal *operator=;
};

typedef struct IZoneIdentifier {
    struct IUnknown IUnknown;
    HRESULT GetId;
    HRESULT SetId;
    HRESULT Remove;
    VOID IZoneIdentifier;
    VOID IZoneIdentifier;
    VOID IZoneIdentifier;
    struct IZoneIdentifier *operator=;
    struct IZoneIdentifier *operator=;
};

typedef struct IZoneIdentifier2 {
    struct IZoneIdentifier IZoneIdentifier;
    HRESULT GetLastWriterPackageFamilyName;
    HRESULT SetLastWriterPackageFamilyName;
    HRESULT RemoveLastWriterPackageFamilyName;
    HRESULT GetAppZoneId;
    HRESULT SetAppZoneId;
    HRESULT RemoveAppZoneId;
    VOID IZoneIdentifier2;
    VOID IZoneIdentifier2;
    VOID IZoneIdentifier2;
    struct IZoneIdentifier2 *operator=;
    struct IZoneIdentifier2 *operator=;
};

typedef struct IZoneIdentifierPriv {
    struct IUnknown IUnknown;
    HRESULT DoesRemoveRequireElevation;
    VOID IZoneIdentifierPriv;
    VOID IZoneIdentifierPriv;
    VOID IZoneIdentifierPriv;
    struct IZoneIdentifierPriv *operator=;
    struct IZoneIdentifierPriv *operator=;
};

typedef struct IZoneIdentifierPriv2 {
    struct IUnknown IUnknown;
    HRESULT GetNameCount;
    HRESULT GetNameAt;
    HRESULT GetNamedValue;
    HRESULT SetNamedValue;
    HRESULT RemoveNamedValue;
    VOID IZoneIdentifierPriv2;
    VOID IZoneIdentifierPriv2;
    VOID IZoneIdentifierPriv2;
    struct IZoneIdentifierPriv2 *operator=;
    struct IZoneIdentifierPriv2 *operator=;
};

typedef struct IZoomEvents {
    struct IUnknown IUnknown;
    HRESULT OnZoomPercentChanged;
    VOID IZoomEvents;
    VOID IZoomEvents;
    VOID IZoomEvents;
    struct IZoomEvents *operator=;
    struct IZoomEvents *operator=;
};

typedef struct ImgDelayDescrV2 {
    ULONG grAttrs;
    ULONG rvaDLLName;
    ULONG rvaHmod;
    ULONG rvaIAT;
    ULONG rvaINT;
    ULONG rvaBoundIAT;
    ULONG rvaUnloadIAT;
    ULONG dwTimeStamp;
};

typedef struct ImportInfo {
    LONG _parentIndex;
    LONG _lastDesc;
    LONG _importPri;
};

typedef struct ImportManager::ImportInfo {
    LONG _parentIndex;
    LONG _lastDesc;
    LONG _importPri;
};

typedef struct IncomingCookieState {
    LONG cSession;
    LONG cPersistent;
    LONG cAccepted;
    LONG cLeashed;
    LONG cDowngraded;
    LONG cBlocked;
    PCHAR pszLocation;
};

typedef struct IndexInfo {
    _reference<Name> _keyName;
    XPNavData _keyRoot;
    _reference<Hashtable> _index;
    VOID IndexInfo;
    VOID IndexInfo;
    VOID IndexInfo;
    VOID ~IndexInfo;
    struct IndexManager::IndexInfo *operator=;
    struct IndexManager::IndexInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct IndexManager::IndexInfo {
    _reference<Name> _keyName;
    XPNavData _keyRoot;
    _reference<Hashtable> _index;
    VOID IndexInfo;
    VOID IndexInfo;
    VOID IndexInfo;
    VOID ~IndexInfo;
    struct IndexManager::IndexInfo *operator=;
    struct IndexManager::IndexInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct InputInfo {
    _reference<BufferedStream> _pInput;
    WCHAR _chLookahead;
    BOOLEAN _fPE;
    BOOLEAN _fExternalPE;
    BOOLEAN _fInternalSubset;
    HRESULT *_fnState;
    VOID InputInfo;
    VOID InputInfo;
    VOID InputInfo;
    VOID ~InputInfo;
    struct XMLStream::InputInfo *operator=;
    struct XMLStream::InputInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct Instruction {
    PLONG64 _funcExec;
    ULONG64 _padding;
};

typedef struct IntInstr {
    struct XCode::Instruction XCode::Instruction;
    LONG _int;
};

typedef struct IntegerAttrs {
    BOOLEAN fAllowSign;
    BOOLEAN fPositive;
    BOOLEAN fNegative;
    BOOLEAN fZero;
    LONG nSigNytes;
    PWCHAR wszTypeName;
    PWCHAR wszMin;
    PWCHAR wszMax;
};

typedef struct InternetCookieHistory {
    LONG fAccepted;
    LONG fLeashed;
    LONG fDowngraded;
    LONG fRejected;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    ULONG ControlFlags;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2 {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
    LONG64 CriticalReservationIops;
    LONG64 ReservationBandwidth;
    LONG64 CriticalReservationBandwidth;
    LONG64 MaxTimePercent;
    LONG64 ReservationTimePercent;
    LONG64 CriticalReservationTimePercent;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
    LONG64 CriticalReservationIops;
    LONG64 ReservationBandwidth;
    LONG64 CriticalReservationBandwidth;
    LONG64 MaxTimePercent;
    LONG64 ReservationTimePercent;
    LONG64 CriticalReservationTimePercent;
    LONG64 SoftMaxIops;
    LONG64 SoftMaxBandwidth;
    LONG64 SoftMaxTimePercent;
    LONG64 LimitExcessNotifyIops;
    LONG64 LimitExcessNotifyBandwidth;
    LONG64 LimitExcessNotifyTimePercent;
};

typedef struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2 {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobHighMemoryLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
    ULONG64 JobLowMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlToleranceLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlToleranceLimit;
};

typedef struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION {
    ULONG64 MaxBandwidth;
    enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS ControlFlags;
    UCHAR DscpTag;
};

typedef struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2 {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobHighMemoryLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL CpuRateControlToleranceInterval;
    ULONG LimitFlags;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
    ULONG64 JobLowMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL IoRateControlToleranceInterval;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL NetRateControlToleranceInterval;
};

typedef struct KEY_PID_ARRAY {
    PVOID PID;
    struct _UNICODE_STRING KeyName;
};

typedef struct KeyDefinitions::KeyInfo {
    _reference<Name> _nmKey;
    PVOID _exprSelect;
    PVOID _exprUse;
    VOID KeyInfo;
    VOID KeyInfo;
    VOID KeyInfo;
    VOID ~KeyInfo;
    struct KeyDefinitions::KeyInfo *operator=;
    struct KeyDefinitions::KeyInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct KeyInfo {
    _reference<Name> _nmKey;
    PVOID _exprSelect;
    PVOID _exprUse;
    VOID KeyInfo;
    VOID KeyInfo;
    VOID KeyInfo;
    VOID ~KeyInfo;
    struct KeyDefinitions::KeyInfo *operator=;
    struct KeyDefinitions::KeyInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct KeyNodeSet::MergeList {
    KeyNode *_keyNodeFirst;
    KeyNode *_keyNodeCurr;
};

typedef struct KeyStorage::Page {
    VOID Page;
    PVOID operator new;
    PVOID operator new;
    struct KeyStorage::Page *_next;
    PUCHAR _dataEnd;
    UCHAR _data[1];
};

typedef struct KeywordInfo {
    String *_strKeyword;
    Object **_pObject;
    ULONG _fIsKeyword : 1;
};

typedef struct LC {
    WCHAR _chMin;
    WCHAR _chMax;
    LONG _lcOp;
    LONG _data;
};

typedef struct LIST_ENTRY32 {
    ULONG Flink;
    ULONG Blink;
};

typedef struct LIST_ENTRY64 {
    ULONG64 Flink;
    ULONG64 Blink;
};

typedef struct LLStack<ValidationState,16>::Chunk {
    struct LLStack<ValidationState,16>::Chunk *_prev;
    struct LLStack<ValidationState,16>::Chunk *_next;
    struct ValidationState *data;
};

typedef struct Local2Instr {
    struct XCode::LocalInstr XCode::LocalInstr;
    ULONG64 _loc2;
};

typedef struct LocalInstr {
    struct XCode::Instruction XCode::Instruction;
    ULONG64 _loc;
};

typedef struct LocalIntInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG _int;
};

typedef struct MARK_HANDLE_INFO {
    ULONG UsnSourceInfo;
    ULONG CopyNumber;
    PVOID VolumeHandle;
    ULONG HandleInfo;
};

typedef struct MARK_HANDLE_INFO32 {
    ULONG UsnSourceInfo;
    ULONG CopyNumber;
    ULONG VolumeHandle;
    ULONG HandleInfo;
};

typedef struct MEM_EXTENDED_PARAMETER {
    ULONG64 Type : 8;
    ULONG64 Reserved : 56;
    ULONG64 ULong64;
    PVOID Pointer;
    ULONG64 Size;
    PVOID Handle;
    ULONG ULong;
};

typedef struct MENUITEMTEMPLATE {
    USHORT mtOption;
    USHORT mtID;
    WCHAR mtString[1];
};

typedef struct MENUITEMTEMPLATEHEADER {
    USHORT versionNumber;
    USHORT offset;
};

typedef struct MFT_ENUM_DATA_V0 {
    ULONG64 StartFileReferenceNumber;
    LONG64 LowUsn;
    LONG64 HighUsn;
};

typedef struct MFT_ENUM_DATA_V1 {
    ULONG64 StartFileReferenceNumber;
    LONG64 LowUsn;
    LONG64 HighUsn;
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct MOVE_FILE_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER StartingLcn;
    ULONG ClusterCount;
};

typedef struct MOVE_FILE_RECORD_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileRecord;
    union _LARGE_INTEGER TargetFileRecord;
};

typedef struct MY_XML_NODE_INFO {
    struct _XML_NODE_INFO _XML_NODE_INFO;
    PWCHAR _pwcTagName;
    ULONG _ulBufLen;
};

typedef struct Map {
    struct CloneStringPtr prefix;
    struct CloneStringPtr uri;
    LONG nContext;
    LONG nHashNext;
    ULONG nHash;
    VOID Map;
    VOID ~Map;
    PVOID __vecDelDtor;
};

typedef struct MatchNameLookup::NameCollection {
    _reference<Name> _nm;
    MatcherCollection *_mtchCollect;
    VOID NameCollection;
    VOID NameCollection;
    VOID NameCollection;
    VOID ~NameCollection;
    struct MatchNameLookup::NameCollection *operator=;
    struct MatchNameLookup::NameCollection *operator=;
    PVOID __vecDelDtor;
};

typedef struct MatchNodeSetMem {
    UCHAR _rg[80];
};

typedef struct MatcherCollection::MatcherPriority {
    Matcher *_matcher;
    LONG _priority;
};

typedef struct MatcherPriority {
    Matcher *_matcher;
    LONG _priority;
};

typedef struct MergeList {
    KeyNode *_keyNodeFirst;
    KeyNode *_keyNodeCurr;
};

typedef struct Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> {
    struct Microsoft::WRL::Details::AsyncOptionsBase Microsoft::WRL::Details::AsyncOptionsBase;
    PWCHAR GetAsyncOperationName;
    struct _GUID GetPlatformId;
    enum Windows::Foundation::Diagnostics::CausalitySource GetCausalitySource;
    BOOLEAN hasCausalityOptions;
    BOOLEAN hasCausalityOperationName;
};

typedef struct Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> {
    struct Microsoft::WRL::Details::AsyncOptionsBase Microsoft::WRL::Details::AsyncOptionsBase;
    PWCHAR GetAsyncOperationName;
    struct _GUID GetPlatformId;
    enum Windows::Foundation::Diagnostics::CausalitySource GetCausalitySource;
    BOOLEAN hasCausalityOptions;
    BOOLEAN hasCausalityOperationName;
};

typedef struct Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Windows::Data::Xml::Dom::IXmlDocument Windows::Data::Xml::Dom::IXmlDocument;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG IidCount;
    VOID FillArrayWithIid;
    VOID ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft:;
    VOID ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft:;
    VOID ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft:;
    struct Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
};

typedef struct Microsoft::WRL::CloakedIid<IMarshal> {
    struct IMarshal IMarshal;
    VOID CloakedIid<IMarshal>;
    VOID CloakedIid<IMarshal>;
    VOID CloakedIid<IMarshal>;
    struct Microsoft::WRL::CloakedIid<IMarshal> *operator=;
    struct Microsoft::WRL::CloakedIid<IMarshal> *operator=;
};

typedef struct Microsoft::WRL::DelegateTraits<-1> {
    VOID EnsureStackSnapshot;
    HRESULT CheckReturn;
};

typedef struct Microsoft::WRL::DelegateTraits<1> {
    HRESULT CheckReturn;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,1> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<7>,1> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1> Type;
};

typedef struct Microsoft::WRL::Details::AreAllNil<Microsoft::WRL::Details::Nil> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncActionCompletedHandler::*)(Windows::Foundation::IAsyncAction *,enum ABI::Windows::Foundation::AsyncStatus)> {
    LONG args;
    struct Windows::Foundation::IAsyncAction *Arg1Type;
    enum ABI::Windows::Foundation::AsyncStatus Arg2Type;
};

typedef struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >::*)(Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> *,enum ABI::Windows::Foundation::AsyncStatus)> {
    LONG args;
    struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> *Arg1Type;
    enum ABI::Windows::Foundation::AsyncStatus Arg2Type;
};

typedef struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    PWCHAR GetAsyncOperationName;
    struct _GUID GetPlatformId;
    enum Windows::Foundation::Diagnostics::CausalitySource GetCausalitySource;
    BOOLEAN CausalityEnabled;
};

typedef struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    PWCHAR GetAsyncOperationName;
    struct _GUID GetPlatformId;
    enum Windows::Foundation::Diagnostics::CausalitySource GetCausalitySource;
    BOOLEAN CausalityEnabled;
};

typedef struct Microsoft::WRL::Details::AsyncOptionsBase {
    BOOLEAN hasCausalityOptions;
    BOOLEAN hasErrorPropagationPolicy;
    BOOLEAN hasCausalityOperationName;
    BOOLEAN isCausalityEnabled;
};

typedef struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
};

typedef struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
};

typedef struct Microsoft::WRL::Details::BoolStruct {
    LONG Member;
};

typedef struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    PWCHAR GetName;
};

typedef struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    PWCHAR GetName;
};

typedef struct Microsoft::WRL::Details::CreatorMap {
    HRESULT *factoryCreator;
     <unnamed-type-activationId>;
    union {
        struct _GUID *clsid;
        PWCHAR *getRuntimeName;
    } activationId;
    enum TrustLevel *getTrustLevel;
    struct Microsoft::WRL::Details::FactoryCache *factoryCache;
    PWCHAR serverName;
};

typedef struct Microsoft::WRL::Details::Dummy {
};

typedef struct Microsoft::WRL::Details::EnableIf<1,void *> {
    PVOID type;
};

typedef struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    enum Microsoft::WRL::ErrorPropagationPolicy PropagationPolicy;
};

typedef struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > {
    enum Microsoft::WRL::ErrorPropagationPolicy PropagationPolicy;
};

typedef struct Microsoft::WRL::Details::FactoryCache {
    struct IUnknown *factory;
     <unnamed-type-cookie>;
    union {
        struct {
        } *winrt;
        ULONG com;
    } cookie;
};

typedef struct Microsoft::WRL::Details::Identity<IUnknown * &> {
    struct IUnknown **Type;
};

typedef struct Microsoft::WRL::Details::ImplementsBase {
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct IActivationFactory IActivationFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct IActivationFactory IActivationFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct IActivationFactory IActivationFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Windows::Data::Xml::Dom::IXmlDocumentStatics Windows::Data::Xml::Dom::IXmlDocumentStatics;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Windows::Data::Xml::Xsl::IXsltProcessorFactory Windows::Data::Xml::Xsl::IXsltProcessorFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct Windows::Data::Xml::Dom::IXmlLoadSettings Windows::Data::Xml::Dom::IXmlLoadSettings;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlLoadSettings,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> {
    struct Windows::Data::Xml::Dom::IXmlNodeList Windows::Data::Xml::Dom::IXmlNodeList;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data:;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Dom::IXmlNodeList,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> {
    struct Windows::Data::Xml::Xsl::IXsltProcessor Windows::Data::Xml::Xsl::IXsltProcessor;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Data::Xml::Xsl::IXsltProcessor,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource> {
    struct Windows::Foundation::Collections::IVectorChangedEventArgs Windows::Foundation::Collections::IVectorChangedEventArgs;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo> {
    struct IAsyncInfo IAsyncInfo;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL:;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > {
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > {
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityO;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityO;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityO;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausality;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> {
    struct Windows::Data::Xml::Xsl::IXsltProcessor2 Windows::Data::Xml::Xsl::IXsltProcessor2;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > {
    struct Windows::Foundation::IAsyncAction Windows::Foundation::IAsyncAction;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALIT;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALIT;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALIT;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALI;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > {
    struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument ;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown> {
    struct IUnknown IUnknown;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> {
    struct IWeakReference IWeakReference;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::IAsyncActionCompletedHandler Windows::Foundation::IAsyncActionCompletedHandler;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *> Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *> Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> {
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> {
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows:;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows:;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> {
    struct IMarshal IMarshal;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> CurrentType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAs;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAs;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAs;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileA;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsof;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsof;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsof;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microso;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation> {
    struct Windows::Data::Xml::Dom::IXmlDomImplementation Windows::Data::Xml::Dom::IXmlDomImplementation;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlDomImplementation> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Windows::Data::Xml::Dom::IXmlNamedNodeMap Windows::Data::Xml::Dom::IXmlNamedNodeMap;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNo;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNo;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNo;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Windows::Data::Xml::Dom::IXmlNodeList Windows::Data::Xml::Dom::IXmlNodeList;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Windows::Data::Xml::Dom::IXmlDocumentIO Windows::Data::Xml::Dom::IXmlDocumentIO;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Windows::Data::Xml::Dom::IXmlDocumentIO2 Windows::Data::Xml::Dom::IXmlDocumentIO2;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Windows::Data::Xml::Dom::IXmlNodeSerializer Windows::Data::Xml::Dom::IXmlNodeSerializer;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::InterfaceListHelper<Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> {
    struct Microsoft::WRL::Details::InterfaceListHelper<Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2> TypeT;
};

typedef struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > TypeT;
};

typedef struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > {
    struct Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> > TypeT;
};

typedef struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil> {
    Microsoft::WRL::Details::Nil Base;
    ULONG IidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlDocument> {
    struct Windows::Data::Xml::Dom::IXmlDocument Base;
    ULONG IidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlNode> {
    struct Windows::Data::Xml::Dom::IXmlNode Base;
    ULONG IidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::InterfaceTraits<Windows::Data::Xml::Dom::IXmlNodeSelector> {
    struct Windows::Data::Xml::Dom::IXmlNodeSelector Base;
    ULONG IidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::IsSame<IAgileReference,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IAgileReference,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IInspectable,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IInspectable,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IMarshal,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IMarshal,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IUnknown,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IUnknown,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IWeakReference,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IWeakReference,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IPropertyValueStatics,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IPropertyValueStatics,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IUriRuntimeClassFactory,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Windows::Foundation::IUriRuntimeClassFactory,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::MarkImplements<IMarshal,0> {
    struct IMarshal Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<IWeakReference,0> {
    struct IWeakReference Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Microsoft::WRL::CloakedIid<IMarshal>,0> {
    struct Microsoft::WRL::CloakedIid<IMarshal> Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlDocumentIO,0> {
    struct Windows::Data::Xml::Dom::IXmlDocumentIO Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlDocumentIO2,0> {
    struct Windows::Data::Xml::Dom::IXmlDocumentIO2 Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Windows::Data::Xml::Dom::IXmlNodeSerializer,0> {
    struct Windows::Data::Xml::Dom::IXmlNodeSerializer Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,0> {
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,0> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> Type;
};

typedef struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > {
    CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::Implem;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::Implem;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::Implem;
    VOID ~Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::Imple;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > {
    CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID ~Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > {
    Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::Implem;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::Implem;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::Implem;
    VOID ~Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::Imple;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > {
    Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::;
    VOID ~Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL:;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >,IWeakReferenceSource> > *operator=;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<W;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0> >,IWeakReferenceSource> > *operator=;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID ~Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL:;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::;
    VOID ~Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL:;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL:;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > {
    Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::W;
    VOID ~Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > *operator=;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > {
    Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelp;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelp;
    VOID Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelp;
    VOID ~Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHel;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > *operator=;
    struct Microsoft::WRL::Details::Selector<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IActivationFactory,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IAsyncInfo,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::FtmBase,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlDocumentStatics,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlLoadSettings,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Dom::IXmlNodeList,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessor,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessor2,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Data::Xml::Xsl::IXsltProcessorFactory,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorChangedEventArgs,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncAction,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncActionCompletedHandler,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>,0,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,0>,0,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IWeakReferenceSource,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Microsoft::WRL::FtmBase,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlDomImplementation,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlNamedNodeMap,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Data::Xml::Dom::IXmlNodeList,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::ErrorHelper<0> {
    VOID OriginateError;
};

typedef struct Microsoft::WRL::ErrorHelper<16> {
    VOID OriginateError;
};

typedef struct Microsoft::WRL::ErrorPropagationPolicyTraits<-1> {
    HRESULT FireCompletionErrorPropagationPolicyFilter;
    HRESULT FireProgressErrorPropagationPolicyFilter;
};

typedef struct Microsoft::WRL::ErrorPropagationPolicyTraits<1> {
    HRESULT FireCompletionErrorPropagationPolicyFilter;
    HRESULT FireProgressErrorPropagationPolicyFilter;
};

typedef struct Microsoft::WRL::ErrorPropagationPolicyTraits<2> {
    HRESULT FireCompletionErrorPropagationPolicyFilter;
    HRESULT FireProgressErrorPropagationPolicyFilter;
};

typedef struct Microsoft::WRL::Implements<IAsyncInfo> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<1> ClassFlags;
    struct IAsyncInfo FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo> BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<IAsyncInfo>;
    VOID Implements<IAsyncInfo>;
    VOID Implements<IAsyncInfo>;
    struct Microsoft::WRL::Implements<IAsyncInfo> *operator=;
    struct Microsoft::WRL::Implements<IAsyncInfo> *operator=;
};

typedef struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<3> ClassFlags;
    Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_;
    VOID ~Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<3> ClassFlags;
    Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >,Microsoft::WRL::FtmBase> BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WI;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WI;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WI;
    VOID ~Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_W;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::FtmBase> *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<3> ClassFlags;
    struct Microsoft::WRL::CloakedIid<IMarshal> FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
};

typedef struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<1> ClassFlags;
    struct Windows::Foundation::IAsyncAction FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    VOID Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    VOID Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    VOID ~Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncAction,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<1> ClassFlags;
    struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&;
    VOID Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&;
    VOID Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&;
    VOID ~Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,;
    struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    struct Microsoft::WRL::Implements<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>,Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<13> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<1> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<2> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<3> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<4103> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<4> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<5> {
};

typedef struct Microsoft::WRL::RuntimeClassFlags<7> {
    ULONG value;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits {
    struct _RTL_CRITICAL_SECTION *Type;
    struct _RTL_CRITICAL_SECTION *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits {
    PVOID Type;
    BOOLEAN Close;
    PVOID GetInvalidValue;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits {
    PVOID Type;
    BOOLEAN Close;
    PVOID GetInvalidValue;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits {
    struct _RTL_SRWLOCK *Type;
    struct _RTL_SRWLOCK *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits {
    struct _RTL_SRWLOCK *Type;
    struct _RTL_SRWLOCK *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
    VOID Unlock;
};

typedef struct NCRYPT_ALLOC_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER {
    ULONG magic;
    ULONG cbHeader;
    ULONG cbPublic;
    ULONG cbPrivate;
    ULONG cbName;
};

typedef struct NCryptKeyName {
    PWCHAR pszName;
    PWCHAR pszAlgid;
    ULONG dwLegacyKeySpec;
    ULONG dwFlags;
};

typedef struct NCryptProviderName {
    PWCHAR pszName;
    PWCHAR pszComment;
};

typedef struct NDR64_STRING_HEADER_FORMAT {
    UCHAR FormatCode;
    struct _NDR64_STRING_FLAGS Flags;
    USHORT ElementSize;
};

typedef struct NDR_ALLOC_ALL_NODES_CONTEXT {
};

typedef struct NDR_POINTER_QUEUE_STATE {
};

typedef struct NOTIFY_USER_POWER_SETTING {
    struct _GUID Guid;
};

typedef struct NTFS_EXTENDED_VOLUME_DATA {
    ULONG ByteCount;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG BytesPerPhysicalSector;
    USHORT LfsMajorVersion;
    USHORT LfsMinorVersion;
    ULONG MaxDeviceTrimExtentCount;
    ULONG MaxDeviceTrimByteCount;
    ULONG MaxVolumeTrimExtentCount;
    ULONG MaxVolumeTrimByteCount;
};

typedef struct NTFS_FILE_RECORD_INPUT_BUFFER {
    union _LARGE_INTEGER FileReferenceNumber;
};

typedef struct NTFS_FILE_RECORD_OUTPUT_BUFFER {
    union _LARGE_INTEGER FileReferenceNumber;
    ULONG FileRecordLength;
    UCHAR FileRecordBuffer[1];
};

typedef struct NTFS_VOLUME_DATA_BUFFER {
    union _LARGE_INTEGER VolumeSerialNumber;
    union _LARGE_INTEGER NumberSectors;
    union _LARGE_INTEGER TotalClusters;
    union _LARGE_INTEGER FreeClusters;
    union _LARGE_INTEGER TotalReserved;
    ULONG BytesPerSector;
    ULONG BytesPerCluster;
    ULONG BytesPerFileRecordSegment;
    ULONG ClustersPerFileRecordSegment;
    union _LARGE_INTEGER MftValidDataLength;
    union _LARGE_INTEGER MftStartLcn;
    union _LARGE_INTEGER Mft2StartLcn;
    union _LARGE_INTEGER MftZoneStart;
    union _LARGE_INTEGER MftZoneEnd;
};

typedef struct NUMBER {
    LONG precision;
    LONG scale;
    LONG sign;
    WCHAR digits[32];
};

typedef struct NUMPARSE {
    LONG cDig;
    ULONG dwInFlags;
    ULONG dwOutFlags;
    LONG cchUsed;
    LONG nBaseShift;
    LONG nPwr10;
};

typedef struct NameCollection {
    _reference<Name> _nm;
    MatcherCollection *_mtchCollect;
    VOID NameCollection;
    VOID NameCollection;
    VOID NameCollection;
    VOID ~NameCollection;
    struct MatchNameLookup::NameCollection *operator=;
    struct MatchNameLookup::NameCollection *operator=;
    PVOID __vecDelDtor;
};

typedef struct NameDefInstr {
    struct XCode::Instruction XCode::Instruction;
    NameDef *_nmdef;
};

typedef struct NameDefStringInstr {
    struct XCode::NameDefInstr XCode::NameDefInstr;
    String *_str;
};

typedef struct NameInstr {
    struct XCode::Instruction XCode::Instruction;
    Name *_nm;
};

typedef struct NameTest {
    _reference<Name> _nm;
    _reference<Atom> _atomURI;
    _reference<Atom> _atomLocalName;
    LONG _importIndex;
    LONG _id;
    BOOLEAN _fStripSpace;
    VOID NameTest;
    VOID NameTest;
    VOID NameTest;
    VOID ~NameTest;
    struct WhitespaceRules::NameTest *operator=;
    struct WhitespaceRules::NameTest *operator=;
    PVOID __vecDelDtor;
};

typedef struct NamespaceMgr::Entry {
    Atom *_pPrefix;
    Atom *_pURN;
    PVOID _pContext;
    ULONG _iHashNext;
    BOOLEAN deleted;
    struct NamespaceMgr::Entry *_alloc;
    VOID _free;
    VOID _remove;
};

typedef struct NamespaceSupport::Map {
    struct CloneStringPtr prefix;
    struct CloneStringPtr uri;
    LONG nContext;
    LONG nHashNext;
    ULONG nHash;
    VOID Map;
    VOID ~Map;
    PVOID __vecDelDtor;
};

typedef struct NavFilterInstr {
    struct XCode::Instruction XCode::Instruction;
    NavFilter *_fltr;
};

typedef struct Node {
    wil::details::ThreadFailureCallbackHolder *value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node *pNext;
    VOID Node;
};

typedef struct Node::CloneInfo {
    BOOLEAN fReadOnly;
    Document *pDoc;
    BOOLEAN fWholeDoc;
    Node *pMapNode;
};

typedef struct Node::_save::__l2::SaveContext {
    Node *this_;
    Node *pChildNode;
    String *pTagText;
    enum Node::NodeType nodetype;
    VOID SaveContext;
    VOID cleanup;
    Node *operator class Node *;
    Node *operator->;
};

typedef struct NodeID {
    union _LARGE_INTEGER _salt;
    Node *_ndPrimary;
    Node *_ndSecondary;
};

typedef struct NodeLocation {
    LONG LocationFlags;
    struct NodeLocation *initLocation;
    LONG compareLocation;
    LONG compareNodes;
    LONG compareAttributes;
    LONG compareNamespaces;
    LONG compareDefaultNamespaces;
    Document *_doc;
    Node *_ndPrimary;
    Node *_ndSecondary;
    enum NodeLocation::LocationFlags _flags;
};

typedef struct NodeTest {
    enum XPBuilder::TestType _type;
    struct XPBuilder::QName _name;
};

typedef struct NodeTestInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    NavFilter *_fltr;
};

typedef struct ObjInstr {
    struct XCode::Instruction XCode::Instruction;
    Object *_obj;
};

typedef struct OutgoingCookieState {
    LONG cSent;
    LONG cSuppressed;
    PCHAR pszLocation;
};

typedef struct POWERBROADCAST_SETTING {
    struct _GUID PowerSetting;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct POWER_ACTION_POLICY {
    enum POWER_ACTION Action;
    ULONG Flags;
    ULONG EventCode;
};

typedef struct POWER_STATE_HANDLER {
    enum POWER_STATE_HANDLER_TYPE Type;
    UCHAR RtcWake;
    UCHAR Spare[3];
    PLONG Handler;
    PVOID Context;
};

typedef struct POWER_STATE_NOTIFY_HANDLER {
    PLONG Handler;
    PVOID Context;
};

typedef struct PPM_IDLESTATE_EVENT {
    ULONG NewState;
    ULONG OldState;
    ULONG64 Processors;
};

typedef struct PPM_IDLE_ACCOUNTING {
    ULONG StateCount;
    ULONG TotalTransitions;
    ULONG ResetCount;
    ULONG64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING State[1];
};

typedef struct PPM_IDLE_ACCOUNTING_EX {
    ULONG StateCount;
    ULONG TotalTransitions;
    ULONG ResetCount;
    ULONG AbortCount;
    ULONG64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
};

typedef struct PPM_IDLE_STATE_ACCOUNTING {
    ULONG IdleTransitions;
    ULONG FailedTransitions;
    ULONG InvalidBucketIndex;
    ULONG64 TotalTime;
    ULONG IdleTimeBuckets[6];
};

typedef struct PPM_IDLE_STATE_ACCOUNTING_EX {
    ULONG64 TotalTime;
    ULONG IdleTransitions;
    ULONG FailedTransitions;
    ULONG InvalidBucketIndex;
    ULONG MinTimeUs;
    ULONG MaxTimeUs;
    ULONG CancelledTransitions;
    struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
};

typedef struct PPM_IDLE_STATE_BUCKET_EX {
    ULONG64 TotalTimeUs;
    ULONG MinTimeUs;
    ULONG MaxTimeUs;
    ULONG Count;
};

typedef struct PPM_PERFSTATE_DOMAIN_EVENT {
    ULONG State;
    ULONG Latency;
    ULONG Speed;
    ULONG64 Processors;
};

typedef struct PPM_PERFSTATE_EVENT {
    ULONG State;
    ULONG Status;
    ULONG Latency;
    ULONG Speed;
    ULONG Processor;
};

typedef struct PPM_THERMALCHANGE_EVENT {
    ULONG ThermalConstraint;
    ULONG64 Processors;
};

typedef struct PPM_THERMAL_POLICY_EVENT {
    UCHAR Mode;
    ULONG64 Processors;
};

typedef struct PPM_WMI_IDLE_STATE {
    ULONG Latency;
    ULONG Power;
    ULONG TimeCheck;
    UCHAR PromotePercent;
    UCHAR DemotePercent;
    UCHAR StateType;
    UCHAR Reserved;
    ULONG StateFlags;
    ULONG Context;
    ULONG IdleHandler;
    ULONG Reserved1;
};

typedef struct PPM_WMI_IDLE_STATES {
    ULONG Type;
    ULONG Count;
    ULONG TargetState;
    ULONG OldState;
    ULONG64 TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_IDLE_STATES_EX {
    ULONG Type;
    ULONG Count;
    ULONG TargetState;
    ULONG OldState;
    PVOID TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_LEGACY_PERFSTATE {
    ULONG Frequency;
    ULONG Flags;
    ULONG PercentFrequency;
};

typedef struct PPM_WMI_PERF_STATE {
    ULONG Frequency;
    ULONG Power;
    UCHAR PercentFrequency;
    UCHAR IncreaseLevel;
    UCHAR DecreaseLevel;
    UCHAR Type;
    ULONG IncreaseTime;
    ULONG DecreaseTime;
    ULONG64 Control;
    ULONG64 Status;
    ULONG HitCount;
    ULONG Reserved1;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
};

typedef struct PPM_WMI_PERF_STATES {
    ULONG Count;
    ULONG MaxFrequency;
    ULONG CurrentState;
    ULONG MaxPerfState;
    ULONG MinPerfState;
    ULONG LowestPerfState;
    ULONG ThermalConstraint;
    UCHAR BusyAdjThreshold;
    UCHAR PolicyType;
    UCHAR Type;
    UCHAR Reserved;
    ULONG TimerInterval;
    ULONG64 TargetProcessors;
    ULONG PStateHandler;
    ULONG PStateContext;
    ULONG TStateHandler;
    ULONG TStateContext;
    ULONG FeedbackHandler;
    ULONG Reserved1;
    ULONG64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef struct PPM_WMI_PERF_STATES_EX {
    ULONG Count;
    ULONG MaxFrequency;
    ULONG CurrentState;
    ULONG MaxPerfState;
    ULONG MinPerfState;
    ULONG LowestPerfState;
    ULONG ThermalConstraint;
    UCHAR BusyAdjThreshold;
    UCHAR PolicyType;
    UCHAR Type;
    UCHAR Reserved;
    ULONG TimerInterval;
    PVOID TargetProcessors;
    ULONG PStateHandler;
    ULONG PStateContext;
    ULONG TStateHandler;
    ULONG TStateContext;
    ULONG FeedbackHandler;
    ULONG Reserved1;
    ULONG64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef struct PROCESSOR_IDLESTATE_INFO {
    ULONG TimeCheck;
    UCHAR DemotePercent;
    UCHAR PromotePercent;
    UCHAR Spare[2];
};

typedef struct PROCESSOR_IDLESTATE_POLICY {
    USHORT Revision;
     <unnamed-type-Flags>;
    union {
        USHORT AsUSHORT;
        USHORT AllowScaling : 1;
        USHORT Disabled : 1;
        USHORT Reserved : 14;
    } Flags;
    ULONG PolicyCount;
    struct PROCESSOR_IDLESTATE_INFO Policy[3];
};

typedef struct PROCESSOR_IDLE_TIMES {
    ULONG64 StartTime;
    ULONG64 EndTime;
    ULONG Reserved[4];
};

typedef struct PROCESSOR_PERFSTATE_POLICY {
    ULONG Revision;
    UCHAR MaxThrottle;
    UCHAR MinThrottle;
    UCHAR BusyAdjThreshold;
    UCHAR Spare;
    union {
        UCHAR AsUCHAR;
        UCHAR NoDomainAccounting : 1;
        UCHAR IncreasePolicy : 2;
        UCHAR DecreasePolicy : 2;
        UCHAR Reserved : 3;
    } Flags;
    ULONG TimeCheck;
    ULONG IncreaseTime;
    ULONG DecreaseTime;
    ULONG IncreasePercent;
    ULONG DecreasePercent;
};

typedef struct PROCESS_PROTECTION_LEVEL_INFORMATION {
    ULONG ProtectionLevel;
};

typedef struct PROPERTIES {
    PWCHAR property;
    PWCHAR set;
};

typedef struct Page {
    VOID Page;
    PVOID operator new;
    PVOID operator new;
    struct KeyStorage::Page *_next;
    PUCHAR _dataEnd;
    UCHAR _data[1];
};

typedef struct ParseElementContext {
    VOID ParseElementContext;
    struct StringPtr name;
    PVOID pScope;
    PVOID pAttributesScope;
    LONG nContext;
};

typedef struct ParseElementNContext {
    struct StringPtr qname;
    struct StringPtr prefix;
    struct StringPtr uri;
    struct StringPtr lname;
    PVOID pScope;
    PVOID pAttributesScope;
    LONG nContext;
    VOID ParseElementNContext;
};

typedef struct ParserCallbacks {
    enum DTDFactory::NameParseEnum _nameparse;
    HRESULT *_createnode;
    HRESULT *_beginchildren;
    HRESULT *_endchildren;
};

typedef struct PathNode::NodeTest {
    VOID NodeTest;
    VOID NodeTest;
    VOID NodeTest;
    BOOLEAN isAnyNode;
    BOOLEAN equals;
    enum XPBuilder::TestType _type;
    _reference<Atom> _atomURI;
    _reference<Atom> _atomLocalName;
    VOID ~NodeTest;
    struct PathNode::NodeTest *operator=;
    struct PathNode::NodeTest *operator=;
    PVOID __vecDelDtor;
};

typedef struct PendingResultCallback {
    LONG fPending;
    HRESULT hrResult;
    ULONG dwError;
    PWCHAR pwszResult;
};

typedef struct PosInfo {
    VOID PosInfo;
    BitSet *_position;
    PULONG _counterSet;
};

typedef struct Position {
    ULONG64 symbol;
    PVOID particle;
    VOID Position;
    VOID Position;
};

typedef struct PredExpr {
    PVOID _exprHandle;
    LONG _iPos;
};

typedef struct PropertyHelper::PropertyInfo {
    LONG _id;
    USHORT _vtProp;
    BOOLEAN _fAllowNull;
};

typedef struct PropertyInfo {
    LONG _id;
    USHORT _vtProp;
    BOOLEAN _fAllowNull;
};

typedef struct QITAB {
    struct _GUID *piid;
    ULONG dwOffset;
};

typedef struct QName {
    PWCHAR _pwsPrefix;
    LONG _cwchPrefix;
    PWCHAR _pwsLocalName;
    LONG _cwchLocalName;
};

typedef struct R8Instr {
    struct XCode::Instruction XCode::Instruction;
    DOUBLE _r8;
};

typedef struct READ_FILE_USN_DATA {
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct READ_USN_JOURNAL_DATA_V0 {
    LONG64 StartUsn;
    ULONG ReasonMask;
    ULONG ReturnOnlyOnClose;
    ULONG64 Timeout;
    ULONG64 BytesToWaitFor;
    ULONG64 UsnJournalID;
};

typedef struct READ_USN_JOURNAL_DATA_V1 {
    LONG64 StartUsn;
    ULONG ReasonMask;
    ULONG ReturnOnlyOnClose;
    ULONG64 Timeout;
    ULONG64 BytesToWaitFor;
    ULONG64 UsnJournalID;
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct REFS_VOLUME_DATA_BUFFER {
    ULONG ByteCount;
    ULONG MajorVersion;
    ULONG MinorVersion;
    ULONG BytesPerPhysicalSector;
    union _LARGE_INTEGER VolumeSerialNumber;
    union _LARGE_INTEGER NumberSectors;
    union _LARGE_INTEGER TotalClusters;
    union _LARGE_INTEGER FreeClusters;
    union _LARGE_INTEGER TotalReserved;
    ULONG BytesPerSector;
    ULONG BytesPerCluster;
    union _LARGE_INTEGER MaximumSizeOfResidentFile;
    union _LARGE_INTEGER Reserved[10];
};

typedef struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER {
    ULONG ExtentCount;
    union _LARGE_INTEGER StartingVcn;
     <unnamed-type-Extents>;
    struct {
        union _LARGE_INTEGER NextVcn;
        union _LARGE_INTEGER Lcn;
        ULONG ReferenceCount;
    } Extents[1];
};

typedef struct RETRIEVAL_POINTERS_BUFFER {
    ULONG ExtentCount;
    union _LARGE_INTEGER StartingVcn;
     <unnamed-type-Extents>;
    struct {
        union _LARGE_INTEGER NextVcn;
        union _LARGE_INTEGER Lcn;
    } Extents[1];
};

typedef struct RETRIEVAL_POINTER_COUNT {
    ULONG ExtentCount;
};

typedef struct RPC_CLIENT_INFORMATION1 {
    PUCHAR UserName;
    PUCHAR ComputerName;
    USHORT Privilege;
    ULONG AuthFlags;
};

typedef struct RPC_DISPATCH_TABLE {
    ULONG DispatchTableCount;
    PVOID *DispatchTable;
    LONG64 Reserved;
};

typedef struct RPC_ENDPOINT_TEMPLATEA {
    ULONG Version;
    PUCHAR ProtSeq;
    PUCHAR Endpoint;
    PVOID SecurityDescriptor;
    ULONG Backlog;
};

typedef struct RPC_ENDPOINT_TEMPLATEW {
    ULONG Version;
    PWCHAR ProtSeq;
    PWCHAR Endpoint;
    PVOID SecurityDescriptor;
    ULONG Backlog;
};

typedef struct RPC_IF_ID_VECTOR {
    ULONG Count;
    struct _RPC_IF_ID *IfId[1];
};

typedef struct RPC_IMPORT_CONTEXT_P {
    PVOID LookupContext;
    PVOID ProposedHandle;
    struct _RPC_BINDING_VECTOR *Bindings;
};

typedef struct RPC_INTERFACE_TEMPLATEA {
    ULONG Version;
    PVOID IfSpec;
    struct _GUID *MgrTypeUuid;
    PVOID MgrEpv;
    ULONG Flags;
    ULONG MaxCalls;
    ULONG MaxRpcSize;
    PLONG IfCallback;
    struct _UUID_VECTOR *UuidVector;
    PUCHAR Annotation;
    PVOID SecurityDescriptor;
};

typedef struct RPC_INTERFACE_TEMPLATEW {
    ULONG Version;
    PVOID IfSpec;
    struct _GUID *MgrTypeUuid;
    PVOID MgrEpv;
    ULONG Flags;
    ULONG MaxCalls;
    ULONG MaxRpcSize;
    PLONG IfCallback;
    struct _UUID_VECTOR *UuidVector;
    PWCHAR Annotation;
    PVOID SecurityDescriptor;
};

typedef struct RPC_STATS_VECTOR {
    ULONG Count;
    ULONG Stats[1];
};

typedef struct RTLWOW64_CROSSPROCESS_WORK_HEAD {
    ULONG First;
    ULONG Sequence;
    LONG64 Value;
    VOID RTLWOW64_CROSSPROCESS_WORK_HEAD;
    VOID RTLWOW64_CROSSPROCESS_WORK_HEAD;
    struct RTLWOW64_CROSSPROCESS_WORK_HEAD *operator=;
    struct RTLWOW64_CROSSPROCESS_WORK_HEAD *operator=;
};

typedef struct RTLWOW64_CROSSPROCESS_WORK_ITEM {
    ULONG Next;
    enum RTLWOW64_CROSSPROCESS_WORK_OPERATION Operation;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG AllocationType;
        ULONG Protect;
        LONG SyscallStatus;
    } MemoryAllocData;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG FreeType;
        LONG SyscallStatus;
    } MemoryFreeData;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG NewProtect;
        LONG SyscallStatus;
    } MemoryProtectData;
    struct {
        PVOID BaseAddress;
        ULONG64 Length;
    } InstructionCacheFlushData;
};

typedef struct RTL_ACE_DATA {
    UCHAR AceType;
    UCHAR InheritFlags;
    UCHAR AceFlags;
    ULONG Mask;
    PVOID *Sid;
};

typedef struct ReadSettings {
    struct HKEY__ *_hKey;
    PWCHAR _pwszKeyName;
    PWCHAR _pwszValueName;
    ULONG _dwValueType;
    ULONG _dwID;
    PVOID _pDWORDFunc;
};

typedef struct Reader::ParseElementContext {
    VOID ParseElementContext;
    struct StringPtr name;
    PVOID pScope;
    PVOID pAttributesScope;
    LONG nContext;
};

typedef struct Reader::ParseElementNContext {
    struct StringPtr qname;
    struct StringPtr prefix;
    struct StringPtr uri;
    struct StringPtr lname;
    PVOID pScope;
    PVOID pAttributesScope;
    LONG nContext;
    VOID ParseElementNContext;
};

typedef struct Registry::ReadSettings {
    struct HKEY__ *_hKey;
    PWCHAR _pwszKeyName;
    PWCHAR _pwszValueName;
    ULONG _dwValueType;
    ULONG _dwID;
    PVOID _pDWORDFunc;
};

typedef struct RestrictionFacets {
    APN Length;
    APN MinLength;
    APN MaxLength;
    _reference<Vector> Patterns;
    _reference<Vector> Enumeration;
    enum SchemaWhiteSpace WhiteSpace;
    _reference<TypeWrapper> MaxInclusive;
    _reference<TypeWrapper> MaxExclusive;
    _reference<TypeWrapper> MinInclusive;
    _reference<TypeWrapper> MinExclusive;
    APN TotalDigits;
    APN FractionDigits;
    enum RestrictionFlags Flags;
    enum RestrictionFlags FixedFlags;
    VOID RestrictionFacets;
    VOID RestrictionFacets;
    VOID RestrictionFacets;
    VOID ~RestrictionFacets;
    struct SchemaDatatype::RestrictionFacets *operator=;
    struct SchemaDatatype::RestrictionFacets *operator=;
    PVOID __vecDelDtor;
};

typedef struct RoVariant::USE_INSTEAD_ReleaseAndGetAddressOf {
};

typedef struct SAXHandlerInfo {
    _reference<String> _pEncoding;
    _reference<String> _pVersion;
    BOOLEAN _fWriteBOM;
    BOOLEAN _fIndent;
    enum TriState _triStandalone;
    BOOLEAN _fOmitXMLDeclaration;
    BOOLEAN _fDisableOutputEscaping;
    BOOLEAN _fLittleEndian;
    BOOLEAN _fWriteComments;
    VOID SAXHandlerInfo;
    VOID SAXHandlerInfo;
    VOID SAXHandlerInfo;
    VOID ~SAXHandlerInfo;
    struct SAXHandlerInfo *operator=;
    struct SAXHandlerInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct SC_HANDLE__ {
    LONG unused;
};

typedef struct SChannelHookCallInfo {
    struct _GUID iid;
    ULONG cbSize;
    struct _GUID uCausality;
    ULONG dwServerPid;
    ULONG iMethod;
    PVOID pObject;
};

typedef struct SERVICE_STATUS_HANDLE__ {
    LONG unused;
};

typedef struct SERVICE_TRIGGER_CUSTOM_STATE_ID {
    ULONG Data[2];
};

typedef struct SET_POWER_SETTING_VALUE {
    ULONG Version;
    struct _GUID Guid;
    enum SYSTEM_POWER_CONDITION PowerCondition;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct SHA2::Digest {
    ULONG64 q[4];
};

typedef struct SHELLHOOKINFO {
    struct HWND__ *hwnd;
    struct tagRECT rc;
};

typedef struct STARTING_LCN_INPUT_BUFFER {
    union _LARGE_INTEGER StartingLcn;
};

typedef struct STARTING_LCN_INPUT_BUFFER_EX {
    union _LARGE_INTEGER StartingLcn;
    ULONG Flags;
};

typedef struct STARTING_VCN_INPUT_BUFFER {
    union _LARGE_INTEGER StartingVcn;
};

typedef struct SXPathNode::NodeTest {
    VOID NodeTest;
    VOID NodeTest;
    VOID NodeTest;
    BOOLEAN isAny;
    BOOLEAN equals;
    BOOLEAN equal;
    enum XPBuilder::TestType _type;
    _reference<Atom> _atomURI;
    _reference<Atom> _atomLocalName;
    VOID ~NodeTest;
    struct SXPathNode::NodeTest *operator=;
    struct SXPathNode::NodeTest *operator=;
    PVOID __vecDelDtor;
};

typedef struct SYSTEM_BATTERY_STATE {
    UCHAR AcOnLine;
    UCHAR BatteryPresent;
    UCHAR Charging;
    UCHAR Discharging;
    UCHAR Spare1[3];
    UCHAR Tag;
    ULONG MaxCapacity;
    ULONG RemainingCapacity;
    ULONG Rate;
    ULONG EstimatedTime;
    ULONG DefaultAlert1;
    ULONG DefaultAlert2;
};

typedef struct SYSTEM_POWER_CAPABILITIES {
    UCHAR PowerButtonPresent;
    UCHAR SleepButtonPresent;
    UCHAR LidPresent;
    UCHAR SystemS1;
    UCHAR SystemS2;
    UCHAR SystemS3;
    UCHAR SystemS4;
    UCHAR SystemS5;
    UCHAR HiberFilePresent;
    UCHAR FullWake;
    UCHAR VideoDimPresent;
    UCHAR ApmPresent;
    UCHAR UpsPresent;
    UCHAR ThermalControl;
    UCHAR ProcessorThrottle;
    UCHAR ProcessorMinThrottle;
    UCHAR ProcessorMaxThrottle;
    UCHAR FastSystemS4;
    UCHAR Hiberboot;
    UCHAR WakeAlarmPresent;
    UCHAR AoAc;
    UCHAR DiskSpinDown;
    UCHAR HiberFileType;
    UCHAR AoAcConnectivitySupported;
    UCHAR spare3[6];
    UCHAR SystemBatteriesPresent;
    UCHAR BatteriesAreShortTerm;
    struct BATTERY_REPORTING_SCALE BatteryScale[3];
    enum _SYSTEM_POWER_STATE AcOnLineWake;
    enum _SYSTEM_POWER_STATE SoftLidWake;
    enum _SYSTEM_POWER_STATE RtcWake;
    enum _SYSTEM_POWER_STATE MinDeviceWakeState;
    enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

typedef struct SYSTEM_POWER_LEVEL {
    UCHAR Enable;
    UCHAR Spare[3];
    ULONG BatteryLevel;
    struct POWER_ACTION_POLICY PowerPolicy;
    enum _SYSTEM_POWER_STATE MinSystemState;
};

typedef struct SchemaDatatype::Map {
    WCHAR match;
    PWCHAR replacement;
};

typedef struct SchemaDatatype::RestrictionFacets {
    APN Length;
    APN MinLength;
    APN MaxLength;
    _reference<Vector> Patterns;
    _reference<Vector> Enumeration;
    enum SchemaWhiteSpace WhiteSpace;
    _reference<TypeWrapper> MaxInclusive;
    _reference<TypeWrapper> MaxExclusive;
    _reference<TypeWrapper> MinInclusive;
    _reference<TypeWrapper> MinExclusive;
    APN TotalDigits;
    APN FractionDigits;
    enum RestrictionFlags Flags;
    enum RestrictionFlags FixedFlags;
    VOID RestrictionFacets;
    VOID RestrictionFacets;
    VOID RestrictionFacets;
    VOID ~RestrictionFacets;
    struct SchemaDatatype::RestrictionFacets *operator=;
    struct SchemaDatatype::RestrictionFacets *operator=;
    PVOID __vecDelDtor;
};

typedef struct SchemaDatatype::SchemaDatatypeMap {
    PWCHAR _name;
    LONG _length;
    SchemaDatatype **_type;
};

typedef struct SchemaDatatypeMap {
    PWCHAR _name;
    LONG _length;
    SchemaDatatype **_type;
};

typedef struct SizeInstr {
    struct XCode::Instruction XCode::Instruction;
    ULONG64 _size;
};

typedef struct SortKey {
    PVOID _opndSort;
    enum XPBuilder::OpType _type;
    ULONG _lang;
    BOOLEAN _fDescending;
    BOOLEAN _fUpperFirst;
    PVOID _opndDataType;
    PVOID _opndLang;
    PVOID _opndSortOrder;
    PVOID _opndCaseOrder;
};

typedef struct SortNodeSet::SortKey {
    PVOID _exprSort;
    enum XVariant::DataType _type;
    ULONG _lang;
    ULONG _codepage;
    BOOLEAN _fDescending;
    BOOLEAN _fUpperFirst;
};

typedef struct StaPrepareContext {
    struct IGlobalInterfaceTable *pGIT;
    ULONG dwCookie;
    struct IUri *pUri;
};

typedef struct StateEntry {
    enum OPCODE _sOp;
    PWCHAR _pch;
    ULONG _sGoto;
    LONG _sArg1;
    LONG _lDelta;
};

typedef struct StateInfo {
    HRESULT *_fnState;
    ULONG _sSubState;
    struct StateEntry *_pTable;
    HRESULT _lEOFError;
    LONG _cStreamDepth;
};

typedef struct StaticUnknown {
    PCHAR pName;
    struct IUnknown **ppUnk;
    struct StaticUnknown *pNext;
};

typedef struct StringInstr {
    struct XCode::Instruction XCode::Instruction;
    String *_str;
};

typedef struct StringPtr {
    VOID StringPtr;
    PWCHAR pwh;
    LONG n;
    VOID __dflt_ctor_closure;
};

typedef struct StringRef {
    PWCHAR ptr;
    ULONG length;
    VOID StringRef;
    VOID StringRef;
    struct StringRef FromHSTRING;
    struct StringRef FromPCWSTR;
};

typedef struct StringStruct {
    VOID clear;
    _reference<String> _str;
    PWCHAR _wsz;
    LONG _len;
    VOID StringStruct;
    VOID StringStruct;
    VOID StringStruct;
    VOID ~StringStruct;
    struct DecimalFormat::StringStruct *operator=;
    struct DecimalFormat::StringStruct *operator=;
    PVOID __vecDelDtor;
};

typedef struct StringTable::Entry {
    PWCHAR _pwsz;
    ULONG64 _ptr;
};

typedef struct Subscription {
    PVOID callback;
    PVOID context;
};

typedef struct TLSDATA {
    HRESULT _hrException;
    HRESULT _hrSystemException;
    Exception *_pException;
    Exception *_pExceptionOther;
    struct _SYS_EXCEPTION_RECORD *_pLatestExceptionOfStackOverflow;
    BOOLEAN _fLatestExceptionOfStackOverflowHandling;
    ULONG _dwTID;
    ScopedAllocator *_pRegexAlloc;
    PathDeclCache *_pDeclCache;
    _rawstack<Node *> *_pDelayedFinalizeNodes;
    ULONG64 _dwDelayedFinalizeDepth;
    VOID TLSDATA;
    VOID ~TLSDATA;
    LONG init;
    VOID clear;
    PVOID operator new;
    PVOID operator new;
    VOID operator delete;
    PVOID __vecDelDtor;
};

typedef struct TRANSPORT_SETTING_ID {
    struct _GUID Guid;
};

typedef struct TernaryNode {
    UCHAR _ch;
    UCHAR _lt;
    UCHAR _gt;
    UCHAR _data;
};

typedef struct TernaryTreeRO::TernaryNode {
    UCHAR _ch;
    UCHAR _lt;
    UCHAR _gt;
    UCHAR _data;
};

typedef struct TextContext {
    UCHAR _buffer[16];
};

typedef struct TextVisitor::TextContext {
    UCHAR _buffer[16];
};

typedef struct TranslateCharsBase::CharMap {
    WCHAR _wchFrom;
    WCHAR _wchTo;
};

typedef struct TranslateCharsBase::CharMapSurr {
    WCHAR _wchFrom;
    WCHAR _wchFromSurr;
    WCHAR _wchTo;
    WCHAR _wchToSurr;
};

typedef struct TypeNameSize {
    PWCHAR pwszTypeName;
    LONG iTypeNameLen;
};

typedef struct UDATE {
    struct _SYSTEMTIME st;
    USHORT wDayOfYear;
};

typedef struct URLStream::ConstString {
    PWCHAR pwszText;
    ULONG nLength;
};

typedef struct URLStream::OpenPreloadResource::__l2::ResourceMapEntry {
    struct URLStream::ConstString fromURL;
    PWCHAR resourceURL;
};

typedef struct URL_COMPONENTSA {
    ULONG dwStructSize;
    PCHAR lpszScheme;
    ULONG dwSchemeLength;
    enum INTERNET_SCHEME nScheme;
    PCHAR lpszHostName;
    ULONG dwHostNameLength;
    USHORT nPort;
    PCHAR lpszUserName;
    ULONG dwUserNameLength;
    PCHAR lpszPassword;
    ULONG dwPasswordLength;
    PCHAR lpszUrlPath;
    ULONG dwUrlPathLength;
    PCHAR lpszExtraInfo;
    ULONG dwExtraInfoLength;
};

typedef struct URL_COMPONENTSW {
    ULONG dwStructSize;
    PWCHAR lpszScheme;
    ULONG dwSchemeLength;
    enum INTERNET_SCHEME nScheme;
    PWCHAR lpszHostName;
    ULONG dwHostNameLength;
    USHORT nPort;
    PWCHAR lpszUserName;
    ULONG dwUserNameLength;
    PWCHAR lpszPassword;
    ULONG dwPasswordLength;
    PWCHAR lpszUrlPath;
    ULONG dwUrlPathLength;
    PWCHAR lpszExtraInfo;
    ULONG dwExtraInfoLength;
};

typedef struct USE_INSTEAD_ReleaseAndGetAddressOf {
};

typedef struct USN_JOURNAL_DATA_V0 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
};

typedef struct USN_JOURNAL_DATA_V1 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
    USHORT MinSupportedMajorVersion;
    USHORT MaxSupportedMajorVersion;
};

typedef struct USN_JOURNAL_DATA_V2 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
    USHORT MinSupportedMajorVersion;
    USHORT MaxSupportedMajorVersion;
    ULONG Flags;
    ULONG64 RangeTrackChunkSize;
    LONG64 RangeTrackFileSizeThreshold;
};

typedef struct USN_RANGE_TRACK_OUTPUT {
    LONG64 Usn;
};

typedef struct USN_RECORD_COMMON_HEADER {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct USN_RECORD_EXTENT {
    LONG64 Offset;
    LONG64 Length;
};

typedef struct USN_RECORD_V2 {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG64 FileReferenceNumber;
    ULONG64 ParentFileReferenceNumber;
    LONG64 Usn;
    union _LARGE_INTEGER TimeStamp;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG SecurityId;
    ULONG FileAttributes;
    USHORT FileNameLength;
    USHORT FileNameOffset;
    WCHAR FileName[1];
};

typedef struct USN_RECORD_V3 {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
    struct _FILE_ID_128 FileReferenceNumber;
    struct _FILE_ID_128 ParentFileReferenceNumber;
    LONG64 Usn;
    union _LARGE_INTEGER TimeStamp;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG SecurityId;
    ULONG FileAttributes;
    USHORT FileNameLength;
    USHORT FileNameOffset;
    WCHAR FileName[1];
};

typedef struct USN_RECORD_V4 {
    struct USN_RECORD_COMMON_HEADER Header;
    struct _FILE_ID_128 FileReferenceNumber;
    struct _FILE_ID_128 ParentFileReferenceNumber;
    LONG64 Usn;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG RemainingExtents;
    USHORT NumberOfExtents;
    USHORT ExtentSize;
    struct USN_RECORD_EXTENT Extents[1];
};

typedef struct USN_TRACK_MODIFIED_RANGES {
    ULONG Flags;
    ULONG Unused;
    ULONG64 ChunkSize;
    LONG64 FileSizeThreshold;
};

typedef struct VOLUME_BITMAP_BUFFER {
    union _LARGE_INTEGER StartingLcn;
    union _LARGE_INTEGER BitmapSize;
    UCHAR Buffer[1];
};

typedef struct ValidationState {
    _reference<Name> pName;
    ElementDecl *pDecl;
    enum SchemaContentProcessing _ProcessContents;
    _reference<BitSet> _AllElements;
    xarray<PosInfo,xarray_allocator<PosInfo> > *pRunningPositions;
    _reference<StringBuffer> textvalue;
    ElementDecl *pPreXsiDecl;
    _weakreference<Node> pElementNode;
    LONG nDFAState;
    LONG nRunningPositions;
    BOOLEAN fMatched;
    BOOLEAN _ValidateChildren;
    BOOLEAN _fNil;
    BOOLEAN _fNoContentCheck;
    BOOLEAN _fTooComplex;
    VOID ~ValidationState;
    VOID ValidationState;
    VOID ValidationState;
    struct ValidationState *operator=;
    PVOID __vecDelDtor;
};

typedef struct WIN32_MEMORY_REGION_INFORMATION {
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG Flags;
    ULONG Private : 1;
    ULONG MappedDataFile : 1;
    ULONG MappedImage : 1;
    ULONG MappedPageFile : 1;
    ULONG MappedPhysical : 1;
    ULONG DirectMapped : 1;
    ULONG Reserved : 26;
    ULONG64 RegionSize;
    ULONG64 CommitSize;
};

typedef struct WINHTTP51::URL_COMPONENTS {
    ULONG dwStructSize;
    PWCHAR lpszScheme;
    ULONG dwSchemeLength;
    LONG nScheme;
    PWCHAR lpszHostName;
    ULONG dwHostNameLength;
    USHORT nPort;
    PWCHAR lpszUserName;
    ULONG dwUserNameLength;
    PWCHAR lpszPassword;
    ULONG dwPasswordLength;
    PWCHAR lpszUrlPath;
    ULONG dwUrlPathLength;
    PWCHAR lpszExtraInfo;
    ULONG dwExtraInfoLength;
};

typedef struct WhitespaceRules::NameTest {
    _reference<Name> _nm;
    _reference<Atom> _atomURI;
    _reference<Atom> _atomLocalName;
    LONG _importIndex;
    LONG _id;
    BOOLEAN _fStripSpace;
    VOID NameTest;
    VOID NameTest;
    VOID NameTest;
    VOID ~NameTest;
    struct WhitespaceRules::NameTest *operator=;
    struct WhitespaceRules::NameTest *operator=;
    PVOID __vecDelDtor;
};

typedef struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_TaskInstance;
    VOID IBackgroundActivatedEventArgs;
    VOID IBackgroundActivatedEventArgs;
    VOID IBackgroundActivatedEventArgs;
    struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *operator=;
    struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundCondition {
    struct IInspectable IInspectable;
    VOID IBackgroundCondition;
    VOID IBackgroundCondition;
    VOID IBackgroundCondition;
    struct Windows::ApplicationModel::Background::IBackgroundCondition *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundCondition *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTask {
    struct IInspectable IInspectable;
    HRESULT Run;
    VOID IBackgroundTask;
    VOID IBackgroundTask;
    VOID IBackgroundTask;
    struct Windows::ApplicationModel::Background::IBackgroundTask *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTask *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder {
    struct IInspectable IInspectable;
    HRESULT put_TaskEntryPoint;
    HRESULT get_TaskEntryPoint;
    HRESULT SetTrigger;
    HRESULT AddCondition;
    HRESULT put_Name;
    HRESULT get_Name;
    HRESULT Register;
    VOID IBackgroundTaskBuilder;
    VOID IBackgroundTaskBuilder;
    VOID IBackgroundTaskBuilder;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder2 {
    struct IInspectable IInspectable;
    HRESULT put_CancelOnConditionLoss;
    HRESULT get_CancelOnConditionLoss;
    VOID IBackgroundTaskBuilder2;
    VOID IBackgroundTaskBuilder2;
    VOID IBackgroundTaskBuilder2;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder2 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder2 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder3 {
    struct IInspectable IInspectable;
    HRESULT put_IsNetworkRequested;
    HRESULT get_IsNetworkRequested;
    VOID IBackgroundTaskBuilder3;
    VOID IBackgroundTaskBuilder3;
    VOID IBackgroundTaskBuilder3;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder3 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder3 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder4 {
    struct IInspectable IInspectable;
    HRESULT get_TaskGroup;
    HRESULT put_TaskGroup;
    VOID IBackgroundTaskBuilder4;
    VOID IBackgroundTaskBuilder4;
    VOID IBackgroundTaskBuilder4;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder4 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskBuilder4 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IBackgroundTaskCanceledEventHandler;
    VOID IBackgroundTaskCanceledEventHandler;
    VOID IBackgroundTaskCanceledEventHandler;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_InstanceId;
    HRESULT CheckResult;
    VOID IBackgroundTaskCompletedEventArgs;
    VOID IBackgroundTaskCompletedEventArgs;
    VOID IBackgroundTaskCompletedEventArgs;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IBackgroundTaskCompletedEventHandler;
    VOID IBackgroundTaskCompletedEventHandler;
    VOID IBackgroundTaskCompletedEventHandler;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral {
    struct IInspectable IInspectable;
    HRESULT Complete;
    VOID IBackgroundTaskDeferral;
    VOID IBackgroundTaskDeferral;
    VOID IBackgroundTaskDeferral;
    struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskInstance {
    struct IInspectable IInspectable;
    HRESULT get_InstanceId;
    HRESULT get_Task;
    HRESULT get_Progress;
    HRESULT put_Progress;
    HRESULT get_TriggerDetails;
    HRESULT add_Canceled;
    HRESULT remove_Canceled;
    HRESULT get_SuspendedCount;
    HRESULT GetDeferral;
    VOID IBackgroundTaskInstance;
    VOID IBackgroundTaskInstance;
    VOID IBackgroundTaskInstance;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskInstance2 {
    struct IInspectable IInspectable;
    HRESULT GetThrottleCount;
    VOID IBackgroundTaskInstance2;
    VOID IBackgroundTaskInstance2;
    VOID IBackgroundTaskInstance2;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance2 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance2 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskInstance3 {
    struct IInspectable IInspectable;
    HRESULT YieldUntil;
    HRESULT YieldUntilAny;
    HRESULT YieldForTime;
    HRESULT get_MinYieldTimeout;
    HRESULT get_MaxYieldTimeout;
    VOID IBackgroundTaskInstance3;
    VOID IBackgroundTaskInstance3;
    VOID IBackgroundTaskInstance3;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance3 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance3 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskInstance4 {
    struct IInspectable IInspectable;
    HRESULT get_User;
    VOID IBackgroundTaskInstance4;
    VOID IBackgroundTaskInstance4;
    VOID IBackgroundTaskInstance4;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance4 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskInstance4 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_InstanceId;
    HRESULT get_Progress;
    VOID IBackgroundTaskProgressEventArgs;
    VOID IBackgroundTaskProgressEventArgs;
    VOID IBackgroundTaskProgressEventArgs;
    struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IBackgroundTaskProgressEventHandler;
    VOID IBackgroundTaskProgressEventHandler;
    VOID IBackgroundTaskProgressEventHandler;
    struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration {
    struct IInspectable IInspectable;
    HRESULT get_TaskId;
    HRESULT get_Name;
    HRESULT add_Progress;
    HRESULT remove_Progress;
    HRESULT add_Completed;
    HRESULT remove_Completed;
    HRESULT Unregister;
    VOID IBackgroundTaskRegistration;
    VOID IBackgroundTaskRegistration;
    VOID IBackgroundTaskRegistration;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration2 {
    struct IInspectable IInspectable;
    HRESULT get_Trigger;
    VOID IBackgroundTaskRegistration2;
    VOID IBackgroundTaskRegistration2;
    VOID IBackgroundTaskRegistration2;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration2 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration2 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration3 {
    struct IInspectable IInspectable;
    HRESULT get_TaskGroup;
    VOID IBackgroundTaskRegistration3;
    VOID IBackgroundTaskRegistration3;
    VOID IBackgroundTaskRegistration3;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration3 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration3 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup {
    struct IInspectable IInspectable;
    HRESULT get_Id;
    HRESULT get_Name;
    HRESULT add_BackgroundActivated;
    HRESULT remove_BackgroundActivated;
    HRESULT get_AllTasks;
    VOID IBackgroundTaskRegistrationGroup;
    VOID IBackgroundTaskRegistrationGroup;
    VOID IBackgroundTaskRegistrationGroup;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroupFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    HRESULT CreateWithName;
    VOID IBackgroundTaskRegistrationGroupFactory;
    VOID IBackgroundTaskRegistrationGroupFactory;
    VOID IBackgroundTaskRegistrationGroupFactory;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroupFactory *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroupFactory *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics {
    struct IInspectable IInspectable;
    HRESULT get_AllTasks;
    VOID IBackgroundTaskRegistrationStatics;
    VOID IBackgroundTaskRegistrationStatics;
    VOID IBackgroundTaskRegistrationStatics;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics2 {
    struct IInspectable IInspectable;
    HRESULT get_AllTaskGroups;
    HRESULT GetTaskGroup;
    VOID IBackgroundTaskRegistrationStatics2;
    VOID IBackgroundTaskRegistrationStatics2;
    VOID IBackgroundTaskRegistrationStatics2;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics2 *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationStatics2 *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskYieldAnyResult {
    struct IInspectable IInspectable;
    HRESULT get_Status;
    HRESULT get_Source;
    VOID IBackgroundTaskYieldAnyResult;
    VOID IBackgroundTaskYieldAnyResult;
    VOID IBackgroundTaskYieldAnyResult;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldAnyResult *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldAnyResult *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable {
    struct IInspectable IInspectable;
    VOID IBackgroundTaskYieldable;
    VOID IBackgroundTaskYieldable;
    VOID IBackgroundTaskYieldable;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundTrigger {
    struct IInspectable IInspectable;
    VOID IBackgroundTrigger;
    VOID IBackgroundTrigger;
    VOID IBackgroundTrigger;
    struct Windows::ApplicationModel::Background::IBackgroundTrigger *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundTrigger *operator=;
};

typedef struct Windows::ApplicationModel::Background::IBackgroundWorkCostStatics {
    struct IInspectable IInspectable;
    HRESULT get_CurrentBackgroundWorkCost;
    VOID IBackgroundWorkCostStatics;
    VOID IBackgroundWorkCostStatics;
    VOID IBackgroundWorkCostStatics;
    struct Windows::ApplicationModel::Background::IBackgroundWorkCostStatics *operator=;
    struct Windows::ApplicationModel::Background::IBackgroundWorkCostStatics *operator=;
};

typedef struct Windows::ApplicationModel::Background::IStorageLibraryChangeTrackerTriggerFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    VOID IStorageLibraryChangeTrackerTriggerFactory;
    VOID IStorageLibraryChangeTrackerTriggerFactory;
    VOID IStorageLibraryChangeTrackerTriggerFactory;
    struct Windows::ApplicationModel::Background::IStorageLibraryChangeTrackerTriggerFactory *operator=;
    struct Windows::ApplicationModel::Background::IStorageLibraryChangeTrackerTriggerFactory *operator=;
};

typedef struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTrigger {
    struct IInspectable IInspectable;
    VOID IStorageLibraryContentChangedTrigger;
    VOID IStorageLibraryContentChangedTrigger;
    VOID IStorageLibraryContentChangedTrigger;
    struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTrigger *operator=;
    struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTrigger *operator=;
};

typedef struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTriggerStatics {
    struct IInspectable IInspectable;
    HRESULT Create;
    HRESULT CreateFromLibraries;
    VOID IStorageLibraryContentChangedTriggerStatics;
    VOID IStorageLibraryContentChangedTriggerStatics;
    VOID IStorageLibraryContentChangedTriggerStatics;
    struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTriggerStatics *operator=;
    struct Windows::ApplicationModel::Background::IStorageLibraryContentChangedTriggerStatics *operator=;
};

typedef struct Windows::ApplicationModel::DataTransfer::ISharedStorageAccessManagerStatics {
    struct IInspectable IInspectable;
    HRESULT AddFile;
    HRESULT RedeemTokenForFileAsync;
    HRESULT RemoveFile;
    VOID ISharedStorageAccessManagerStatics;
    VOID ISharedStorageAccessManagerStatics;
    VOID ISharedStorageAccessManagerStatics;
    struct Windows::ApplicationModel::DataTransfer::ISharedStorageAccessManagerStatics *operator=;
    struct Windows::ApplicationModel::DataTransfer::ISharedStorageAccessManagerStatics *operator=;
};

typedef struct Windows::Data::Text::ISemanticTextQuery {
    struct IInspectable IInspectable;
    HRESULT Find;
    HRESULT FindInProperty;
    VOID ISemanticTextQuery;
    VOID ISemanticTextQuery;
    VOID ISemanticTextQuery;
    struct Windows::Data::Text::ISemanticTextQuery *operator=;
    struct Windows::Data::Text::ISemanticTextQuery *operator=;
};

typedef struct Windows::Data::Text::ISemanticTextQueryFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    HRESULT CreateWithLanguage;
    VOID ISemanticTextQueryFactory;
    VOID ISemanticTextQueryFactory;
    VOID ISemanticTextQueryFactory;
    struct Windows::Data::Text::ISemanticTextQueryFactory *operator=;
    struct Windows::Data::Text::ISemanticTextQueryFactory *operator=;
};

typedef struct Windows::Data::Text::TextSegment {
    ULONG StartPosition;
    ULONG Length;
};

typedef struct Windows::Data::Xml::Dom::IDtdEntity {
    struct IInspectable IInspectable;
    HRESULT get_PublicId;
    HRESULT get_SystemId;
    HRESULT get_NotationName;
    VOID IDtdEntity;
    VOID IDtdEntity;
    VOID IDtdEntity;
    struct Windows::Data::Xml::Dom::IDtdEntity *operator=;
    struct Windows::Data::Xml::Dom::IDtdEntity *operator=;
};

typedef struct Windows::Data::Xml::Dom::IDtdNotation {
    struct IInspectable IInspectable;
    HRESULT get_PublicId;
    HRESULT get_SystemId;
    VOID IDtdNotation;
    VOID IDtdNotation;
    VOID IDtdNotation;
    struct Windows::Data::Xml::Dom::IDtdNotation *operator=;
    struct Windows::Data::Xml::Dom::IDtdNotation *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlAttribute {
    struct IInspectable IInspectable;
    HRESULT get_Name;
    HRESULT get_Specified;
    HRESULT get_Value;
    HRESULT put_Value;
    VOID IXmlAttribute;
    VOID IXmlAttribute;
    VOID IXmlAttribute;
    struct Windows::Data::Xml::Dom::IXmlAttribute *operator=;
    struct Windows::Data::Xml::Dom::IXmlAttribute *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlCDataSection {
    struct IInspectable IInspectable;
    VOID IXmlCDataSection;
    VOID IXmlCDataSection;
    VOID IXmlCDataSection;
    struct Windows::Data::Xml::Dom::IXmlCDataSection *operator=;
    struct Windows::Data::Xml::Dom::IXmlCDataSection *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlCharacterData {
    struct IInspectable IInspectable;
    HRESULT get_Data;
    HRESULT put_Data;
    HRESULT get_Length;
    HRESULT SubstringData;
    HRESULT AppendData;
    HRESULT InsertData;
    HRESULT DeleteData;
    HRESULT ReplaceData;
    VOID IXmlCharacterData;
    VOID IXmlCharacterData;
    VOID IXmlCharacterData;
    struct Windows::Data::Xml::Dom::IXmlCharacterData *operator=;
    struct Windows::Data::Xml::Dom::IXmlCharacterData *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlComment {
    struct IInspectable IInspectable;
    VOID IXmlComment;
    VOID IXmlComment;
    VOID IXmlComment;
    struct Windows::Data::Xml::Dom::IXmlComment *operator=;
    struct Windows::Data::Xml::Dom::IXmlComment *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocument {
    struct IInspectable IInspectable;
    HRESULT get_Doctype;
    HRESULT get_Implementation;
    HRESULT get_DocumentElement;
    HRESULT CreateElement;
    HRESULT CreateDocumentFragment;
    HRESULT CreateTextNode;
    HRESULT CreateComment;
    HRESULT CreateProcessingInstruction;
    HRESULT CreateAttribute;
    HRESULT CreateEntityReference;
    HRESULT GetElementsByTagName;
    HRESULT CreateCDataSection;
    HRESULT get_DocumentUri;
    HRESULT CreateAttributeNS;
    HRESULT CreateElementNS;
    HRESULT GetElementById;
    HRESULT ImportNode;
    VOID IXmlDocument;
    VOID IXmlDocument;
    VOID IXmlDocument;
    struct Windows::Data::Xml::Dom::IXmlDocument *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocument *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocumentFragment {
    struct IInspectable IInspectable;
    VOID IXmlDocumentFragment;
    VOID IXmlDocumentFragment;
    VOID IXmlDocumentFragment;
    struct Windows::Data::Xml::Dom::IXmlDocumentFragment *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocumentFragment *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocumentIO {
    struct IInspectable IInspectable;
    HRESULT LoadXml;
    HRESULT LoadXmlWithSettings;
    HRESULT SaveToFileAsync;
    VOID IXmlDocumentIO;
    VOID IXmlDocumentIO;
    VOID IXmlDocumentIO;
    struct Windows::Data::Xml::Dom::IXmlDocumentIO *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocumentIO *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocumentIO2 {
    struct IInspectable IInspectable;
    HRESULT LoadXmlFromBuffer;
    HRESULT LoadXmlFromBufferWithSettings;
    VOID IXmlDocumentIO2;
    VOID IXmlDocumentIO2;
    VOID IXmlDocumentIO2;
    struct Windows::Data::Xml::Dom::IXmlDocumentIO2 *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocumentIO2 *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocumentStatics {
    struct IInspectable IInspectable;
    HRESULT LoadFromUriAsync;
    HRESULT LoadFromUriWithSettingsAsync;
    HRESULT LoadFromFileAsync;
    HRESULT LoadFromFileWithSettingsAsync;
    VOID IXmlDocumentStatics;
    VOID IXmlDocumentStatics;
    VOID IXmlDocumentStatics;
    struct Windows::Data::Xml::Dom::IXmlDocumentStatics *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocumentStatics *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDocumentType {
    struct IInspectable IInspectable;
    HRESULT get_Name;
    HRESULT get_Entities;
    HRESULT get_Notations;
    VOID IXmlDocumentType;
    VOID IXmlDocumentType;
    VOID IXmlDocumentType;
    struct Windows::Data::Xml::Dom::IXmlDocumentType *operator=;
    struct Windows::Data::Xml::Dom::IXmlDocumentType *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlDomImplementation {
    struct IInspectable IInspectable;
    HRESULT HasFeature;
    VOID IXmlDomImplementation;
    VOID IXmlDomImplementation;
    VOID IXmlDomImplementation;
    struct Windows::Data::Xml::Dom::IXmlDomImplementation *operator=;
    struct Windows::Data::Xml::Dom::IXmlDomImplementation *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlElement {
    struct IInspectable IInspectable;
    HRESULT get_TagName;
    HRESULT GetAttribute;
    HRESULT SetAttribute;
    HRESULT RemoveAttribute;
    HRESULT GetAttributeNode;
    HRESULT SetAttributeNode;
    HRESULT RemoveAttributeNode;
    HRESULT GetElementsByTagName;
    HRESULT SetAttributeNS;
    HRESULT GetAttributeNS;
    HRESULT RemoveAttributeNS;
    HRESULT SetAttributeNodeNS;
    HRESULT GetAttributeNodeNS;
    VOID IXmlElement;
    VOID IXmlElement;
    VOID IXmlElement;
    struct Windows::Data::Xml::Dom::IXmlElement *operator=;
    struct Windows::Data::Xml::Dom::IXmlElement *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlEntityReference {
    struct IInspectable IInspectable;
    VOID IXmlEntityReference;
    VOID IXmlEntityReference;
    VOID IXmlEntityReference;
    struct Windows::Data::Xml::Dom::IXmlEntityReference *operator=;
    struct Windows::Data::Xml::Dom::IXmlEntityReference *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlLoadSettings {
    struct IInspectable IInspectable;
    HRESULT get_MaxElementDepth;
    HRESULT put_MaxElementDepth;
    HRESULT get_ProhibitDtd;
    HRESULT put_ProhibitDtd;
    HRESULT get_ResolveExternals;
    HRESULT put_ResolveExternals;
    HRESULT get_ValidateOnParse;
    HRESULT put_ValidateOnParse;
    HRESULT get_ElementContentWhiteSpace;
    HRESULT put_ElementContentWhiteSpace;
    VOID IXmlLoadSettings;
    VOID IXmlLoadSettings;
    VOID IXmlLoadSettings;
    struct Windows::Data::Xml::Dom::IXmlLoadSettings *operator=;
    struct Windows::Data::Xml::Dom::IXmlLoadSettings *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlNamedNodeMap {
    struct IInspectable IInspectable;
    HRESULT get_Length;
    HRESULT Item;
    HRESULT GetNamedItem;
    HRESULT SetNamedItem;
    HRESULT RemoveNamedItem;
    HRESULT GetNamedItemNS;
    HRESULT RemoveNamedItemNS;
    HRESULT SetNamedItemNS;
    VOID IXmlNamedNodeMap;
    VOID IXmlNamedNodeMap;
    VOID IXmlNamedNodeMap;
    struct Windows::Data::Xml::Dom::IXmlNamedNodeMap *operator=;
    struct Windows::Data::Xml::Dom::IXmlNamedNodeMap *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlNode {
    struct IInspectable IInspectable;
    HRESULT get_NodeValue;
    HRESULT put_NodeValue;
    HRESULT get_NodeType;
    HRESULT get_NodeName;
    HRESULT get_ParentNode;
    HRESULT get_ChildNodes;
    HRESULT get_FirstChild;
    HRESULT get_LastChild;
    HRESULT get_PreviousSibling;
    HRESULT get_NextSibling;
    HRESULT get_Attributes;
    HRESULT HasChildNodes;
    HRESULT get_OwnerDocument;
    HRESULT InsertBefore;
    HRESULT ReplaceChild;
    HRESULT RemoveChild;
    HRESULT AppendChild;
    HRESULT CloneNode;
    HRESULT get_NamespaceUri;
    HRESULT get_LocalName;
    HRESULT get_Prefix;
    HRESULT Normalize;
    HRESULT put_Prefix;
    VOID IXmlNode;
    VOID IXmlNode;
    VOID IXmlNode;
    struct Windows::Data::Xml::Dom::IXmlNode *operator=;
    struct Windows::Data::Xml::Dom::IXmlNode *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlNodeList {
    struct IInspectable IInspectable;
    HRESULT get_Length;
    HRESULT Item;
    VOID IXmlNodeList;
    VOID IXmlNodeList;
    VOID IXmlNodeList;
    struct Windows::Data::Xml::Dom::IXmlNodeList *operator=;
    struct Windows::Data::Xml::Dom::IXmlNodeList *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlNodeSelector {
    struct IInspectable IInspectable;
    HRESULT SelectSingleNode;
    HRESULT SelectNodes;
    HRESULT SelectSingleNodeNS;
    HRESULT SelectNodesNS;
    VOID IXmlNodeSelector;
    VOID IXmlNodeSelector;
    VOID IXmlNodeSelector;
    struct Windows::Data::Xml::Dom::IXmlNodeSelector *operator=;
    struct Windows::Data::Xml::Dom::IXmlNodeSelector *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlNodeSerializer {
    struct IInspectable IInspectable;
    HRESULT GetXml;
    HRESULT get_InnerText;
    HRESULT put_InnerText;
    VOID IXmlNodeSerializer;
    VOID IXmlNodeSerializer;
    VOID IXmlNodeSerializer;
    struct Windows::Data::Xml::Dom::IXmlNodeSerializer *operator=;
    struct Windows::Data::Xml::Dom::IXmlNodeSerializer *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlProcessingInstruction {
    struct IInspectable IInspectable;
    HRESULT get_Target;
    HRESULT get_Data;
    HRESULT put_Data;
    VOID IXmlProcessingInstruction;
    VOID IXmlProcessingInstruction;
    VOID IXmlProcessingInstruction;
    struct Windows::Data::Xml::Dom::IXmlProcessingInstruction *operator=;
    struct Windows::Data::Xml::Dom::IXmlProcessingInstruction *operator=;
};

typedef struct Windows::Data::Xml::Dom::IXmlText {
    struct IInspectable IInspectable;
    HRESULT SplitText;
    VOID IXmlText;
    VOID IXmlText;
    VOID IXmlText;
    struct Windows::Data::Xml::Dom::IXmlText *operator=;
    struct Windows::Data::Xml::Dom::IXmlText *operator=;
};

typedef struct Windows::Data::Xml::Xsl::IXsltProcessor {
    struct IInspectable IInspectable;
    HRESULT TransformToString;
    VOID IXsltProcessor;
    VOID IXsltProcessor;
    VOID IXsltProcessor;
    struct Windows::Data::Xml::Xsl::IXsltProcessor *operator=;
    struct Windows::Data::Xml::Xsl::IXsltProcessor *operator=;
};

typedef struct Windows::Data::Xml::Xsl::IXsltProcessor2 {
    struct IInspectable IInspectable;
    HRESULT TransformToDocument;
    VOID IXsltProcessor2;
    VOID IXsltProcessor2;
    VOID IXsltProcessor2;
    struct Windows::Data::Xml::Xsl::IXsltProcessor2 *operator=;
    struct Windows::Data::Xml::Xsl::IXsltProcessor2 *operator=;
};

typedef struct Windows::Data::Xml::Xsl::IXsltProcessorFactory {
    struct IInspectable IInspectable;
    HRESULT CreateInstance;
    VOID IXsltProcessorFactory;
    VOID IXsltProcessorFactory;
    VOID IXsltProcessorFactory;
    struct Windows::Data::Xml::Xsl::IXsltProcessorFactory *operator=;
    struct Windows::Data::Xml::Xsl::IXsltProcessorFactory *operator=;
};

typedef struct Windows::Foundation::Collections::Detail::enable_if<0,void *> {
};

typedef struct Windows::Foundation::Collections::Detail::enable_if<1,void *> {
    PVOID type;
};

typedef struct Windows::Foundation::Collections::IIterable<HSTRING__ *> {
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<HSTRING__ *>;
    VOID IIterable<HSTRING__ *>;
    VOID IIterable<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterable<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterable<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<IInspectable *> {
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> Windows::Foundation::Collections::IIterable_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<IInspectable *>;
    VOID IIterable<IInspectable *>;
    VOID IIterable<IInspectable *>;
    struct Windows::Foundation::Collections::IIterable<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterable<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment> Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Data::Text::TextSegment>;
    VOID IIterable<Windows::Data::Text::TextSegment>;
    VOID IIterable<Windows::Data::Text::TextSegment>;
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *> Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterable<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Point>;
    VOID IIterable<Windows::Foundation::Point>;
    VOID IIterable<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Rect>;
    VOID IIterable<Windows::Foundation::Rect>;
    VOID IIterable<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Uri *>;
    VOID IIterable<Windows::Foundation::Uri *>;
    VOID IIterable<Windows::Foundation::Uri *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterable<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterable<Windows::Storage::AccessCache::AccessListEntry>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::FileInformation *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::FolderInformation *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::IStorageFile *>;
    VOID IIterable<Windows::Storage::IStorageFile *>;
    VOID IIterable<Windows::Storage::IStorageFile *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::IStorageFolder *>;
    VOID IIterable<Windows::Storage::IStorageFolder *>;
    VOID IIterable<Windows::Storage::IStorageFolder *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::IStorageItem *>;
    VOID IIterable<Windows::Storage::IStorageItem *>;
    VOID IIterable<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::Search::SortEntry>;
    VOID IIterable<Windows::Storage::Search::SortEntry>;
    VOID IIterable<Windows::Storage::Search::SortEntry>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::StorageFile *>;
    VOID IIterable<Windows::Storage::StorageFile *>;
    VOID IIterable<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::StorageFolder *>;
    VOID IIterable<Windows::Storage::StorageFolder *>;
    VOID IIterable<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::StorageLibrary *>;
    VOID IIterable<Windows::Storage::StorageLibrary *>;
    VOID IIterable<Windows::Storage::StorageLibrary *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::StorageLibraryChange *>;
    VOID IIterable<Windows::Storage::StorageLibraryChange *>;
    VOID IIterable<Windows::Storage::StorageLibraryChange *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *> Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Storage::Streams::IBuffer *>;
    VOID IIterable<Windows::Storage::Streams::IBuffer *>;
    VOID IIterable<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::System::User *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::System::User *>;
    VOID IIterable<Windows::System::User *>;
    VOID IIterable<Windows::System::User *>;
    struct Windows::Foundation::Collections::IIterable<Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<_GUID> {
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> Windows::Foundation::Collections::IIterable_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<_GUID>;
    VOID IIterable<_GUID>;
    VOID IIterable<_GUID>;
    struct Windows::Foundation::Collections::IIterable<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterable<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<__int64> {
    struct Windows::Foundation::Collections::IIterable_impl<__int64> Windows::Foundation::Collections::IIterable_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<__int64>;
    VOID IIterable<__int64>;
    VOID IIterable<__int64>;
    struct Windows::Foundation::Collections::IIterable<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterable<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<bool> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<bool>;
    VOID IIterable<bool>;
    VOID IIterable<bool>;
    struct Windows::Foundation::Collections::IIterable<bool> *operator=;
    struct Windows::Foundation::Collections::IIterable<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<double> {
    struct Windows::Foundation::Collections::IIterable_impl<double> Windows::Foundation::Collections::IIterable_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<double>;
    VOID IIterable<double>;
    VOID IIterable<double>;
    struct Windows::Foundation::Collections::IIterable<double> *operator=;
    struct Windows::Foundation::Collections::IIterable<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<float> {
    struct Windows::Foundation::Collections::IIterable_impl<float> Windows::Foundation::Collections::IIterable_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<float>;
    VOID IIterable<float>;
    VOID IIterable<float>;
    struct Windows::Foundation::Collections::IIterable<float> *operator=;
    struct Windows::Foundation::Collections::IIterable<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<int> {
    struct Windows::Foundation::Collections::IIterable_impl<int> Windows::Foundation::Collections::IIterable_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<int>;
    VOID IIterable<int>;
    VOID IIterable<int>;
    struct Windows::Foundation::Collections::IIterable<int> *operator=;
    struct Windows::Foundation::Collections::IIterable<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<short> {
    struct Windows::Foundation::Collections::IIterable_impl<short> Windows::Foundation::Collections::IIterable_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<short>;
    VOID IIterable<short>;
    VOID IIterable<short>;
    struct Windows::Foundation::Collections::IIterable<short> *operator=;
    struct Windows::Foundation::Collections::IIterable<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned __int64> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> Windows::Foundation::Collections::IIterable_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned __int64>;
    VOID IIterable<unsigned __int64>;
    VOID IIterable<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterable<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned char> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> Windows::Foundation::Collections::IIterable_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned char>;
    VOID IIterable<unsigned char>;
    VOID IIterable<unsigned char>;
    struct Windows::Foundation::Collections::IIterable<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned int> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> Windows::Foundation::Collections::IIterable_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned int>;
    VOID IIterable<unsigned int>;
    VOID IIterable<unsigned int>;
    struct Windows::Foundation::Collections::IIterable<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT First;
    VOID IIterable_impl<HSTRING__ *>;
    VOID IIterable_impl<HSTRING__ *>;
    VOID IIterable_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT First;
    VOID IIterable_impl<IInspectable *>;
    VOID IIterable_impl<IInspectable *>;
    VOID IIterable_impl<IInspectable *>;
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct IInspectable IInspectable;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment> {
    struct IInspectable IInspectable;
    struct Windows::Data::Text::TextSegment T_abi;
    struct Windows::Data::Text::TextSegment T_logical;
    struct Windows::Data::Text::TextSegment T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Data::Text::TextSegment>;
    VOID IIterable_impl<Windows::Data::Text::TextSegment>;
    VOID IIterable_impl<Windows::Data::Text::TextSegment>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *> {
    struct IInspectable IInspectable;
    struct Windows::Data::Xml::Dom::IXmlNode *T_abi;
    struct Windows::Data::Xml::Dom::IXmlNode *T_logical;
    struct Windows::Data::Xml::Dom::IXmlNode *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_abi;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_logical;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_abi;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_logical;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IUriRuntimeClass *T_abi;
    Windows::Foundation::Uri *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FileInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FolderInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    Windows::Storage::StorageFile *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibrary *T_abi;
    Windows::Storage::StorageLibrary *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibraryChange *T_abi;
    Windows::Storage::StorageLibraryChange *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IInspectable IInspectable;
    struct Windows::System::IUser *T_abi;
    Windows::System::User *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Point>;
    VOID IIterable_impl<Windows::Foundation::Point>;
    VOID IIterable_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry> {
    struct IInspectable IInspectable;
    struct Windows::Storage::AccessCache::AccessListEntry T_abi;
    struct Windows::Storage::AccessCache::AccessListEntry T_logical;
    struct Windows::Storage::AccessCache::AccessListEntry T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_logical;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    struct Windows::Storage::IStorageFile *T_logical;
    struct Windows::Storage::IStorageFile *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::IStorageFile *>;
    VOID IIterable_impl<Windows::Storage::IStorageFile *>;
    VOID IIterable_impl<Windows::Storage::IStorageFile *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    struct Windows::Storage::IStorageFolder *T_logical;
    struct Windows::Storage::IStorageFolder *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::IStorageFolder *>;
    VOID IIterable_impl<Windows::Storage::IStorageFolder *>;
    VOID IIterable_impl<Windows::Storage::IStorageFolder *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageItem *T_abi;
    struct Windows::Storage::IStorageItem *T_logical;
    struct Windows::Storage::IStorageItem *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::IStorageItem *>;
    VOID IIterable_impl<Windows::Storage::IStorageItem *>;
    VOID IIterable_impl<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Search::SortEntry T_abi;
    struct Windows::Storage::Search::SortEntry T_logical;
    struct Windows::Storage::Search::SortEntry T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::Search::SortEntry>;
    VOID IIterable_impl<Windows::Storage::Search::SortEntry>;
    VOID IIterable_impl<Windows::Storage::Search::SortEntry>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IBuffer *T_abi;
    struct Windows::Storage::Streams::IBuffer *T_logical;
    struct Windows::Storage::Streams::IBuffer *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IIterable_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IIterable_impl<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT First;
    VOID IIterable_impl<_GUID>;
    VOID IIterable_impl<_GUID>;
    VOID IIterable_impl<_GUID>;
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT First;
    VOID IIterable_impl<__int64>;
    VOID IIterable_impl<__int64>;
    VOID IIterable_impl<__int64>;
    struct Windows::Foundation::Collections::IIterable_impl<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT First;
    VOID IIterable_impl<double>;
    VOID IIterable_impl<double>;
    VOID IIterable_impl<double>;
    struct Windows::Foundation::Collections::IIterable_impl<double> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT First;
    VOID IIterable_impl<float>;
    VOID IIterable_impl<float>;
    VOID IIterable_impl<float>;
    struct Windows::Foundation::Collections::IIterable_impl<float> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT First;
    VOID IIterable_impl<int>;
    VOID IIterable_impl<int>;
    VOID IIterable_impl<int>;
    struct Windows::Foundation::Collections::IIterable_impl<int> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT First;
    VOID IIterable_impl<short>;
    VOID IIterable_impl<short>;
    VOID IIterable_impl<short>;
    struct Windows::Foundation::Collections::IIterable_impl<short> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned __int64>;
    VOID IIterable_impl<unsigned __int64>;
    VOID IIterable_impl<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned char>;
    VOID IIterable_impl<unsigned char>;
    VOID IIterable_impl<unsigned char>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned int>;
    VOID IIterable_impl<unsigned int>;
    VOID IIterable_impl<unsigned int>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<HSTRING__ *> {
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<HSTRING__ *>;
    VOID IIterator<HSTRING__ *>;
    VOID IIterator<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterator<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterator<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<IInspectable *> {
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<IInspectable *>;
    VOID IIterator<IInspectable *>;
    VOID IIterator<IInspectable *>;
    struct Windows::Foundation::Collections::IIterator<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterator<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0> Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Data::Text::TextSegment>;
    VOID IIterator<Windows::Data::Text::TextSegment>;
    VOID IIterator<Windows::Data::Text::TextSegment>;
    struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterator<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IIterator<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Point>;
    VOID IIterator<Windows::Foundation::Point>;
    VOID IIterator<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Rect>;
    VOID IIterator<Windows::Foundation::Rect>;
    VOID IIterator<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Uri *>;
    VOID IIterator<Windows::Foundation::Uri *>;
    VOID IIterator<Windows::Foundation::Uri *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterator<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IIterator<Windows::Storage::AccessCache::AccessListEntry>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::FileInformation *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::FolderInformation *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::IStorageFile *>;
    VOID IIterator<Windows::Storage::IStorageFile *>;
    VOID IIterator<Windows::Storage::IStorageFile *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::IStorageFolder *>;
    VOID IIterator<Windows::Storage::IStorageFolder *>;
    VOID IIterator<Windows::Storage::IStorageFolder *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::IStorageItem *>;
    VOID IIterator<Windows::Storage::IStorageItem *>;
    VOID IIterator<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::Search::SortEntry>;
    VOID IIterator<Windows::Storage::Search::SortEntry>;
    VOID IIterator<Windows::Storage::Search::SortEntry>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::StorageFile *>;
    VOID IIterator<Windows::Storage::StorageFile *>;
    VOID IIterator<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::StorageFolder *>;
    VOID IIterator<Windows::Storage::StorageFolder *>;
    VOID IIterator<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::StorageLibrary *>;
    VOID IIterator<Windows::Storage::StorageLibrary *>;
    VOID IIterator<Windows::Storage::StorageLibrary *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::StorageLibraryChange *>;
    VOID IIterator<Windows::Storage::StorageLibraryChange *>;
    VOID IIterator<Windows::Storage::StorageLibraryChange *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Storage::Streams::IBuffer *>;
    VOID IIterator<Windows::Storage::Streams::IBuffer *>;
    VOID IIterator<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::System::User *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::System::User *>;
    VOID IIterator<Windows::System::User *>;
    VOID IIterator<Windows::System::User *>;
    struct Windows::Foundation::Collections::IIterator<Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<_GUID> {
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> Windows::Foundation::Collections::IIterator_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<_GUID>;
    VOID IIterator<_GUID>;
    VOID IIterator<_GUID>;
    struct Windows::Foundation::Collections::IIterator<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterator<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<__int64> {
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> Windows::Foundation::Collections::IIterator_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<__int64>;
    VOID IIterator<__int64>;
    VOID IIterator<__int64>;
    struct Windows::Foundation::Collections::IIterator<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterator<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<bool> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<bool>;
    VOID IIterator<bool>;
    VOID IIterator<bool>;
    struct Windows::Foundation::Collections::IIterator<bool> *operator=;
    struct Windows::Foundation::Collections::IIterator<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<double> {
    struct Windows::Foundation::Collections::IIterator_impl<double,1> Windows::Foundation::Collections::IIterator_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<double>;
    VOID IIterator<double>;
    VOID IIterator<double>;
    struct Windows::Foundation::Collections::IIterator<double> *operator=;
    struct Windows::Foundation::Collections::IIterator<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<float> {
    struct Windows::Foundation::Collections::IIterator_impl<float,1> Windows::Foundation::Collections::IIterator_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<float>;
    VOID IIterator<float>;
    VOID IIterator<float>;
    struct Windows::Foundation::Collections::IIterator<float> *operator=;
    struct Windows::Foundation::Collections::IIterator<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<int> {
    struct Windows::Foundation::Collections::IIterator_impl<int,1> Windows::Foundation::Collections::IIterator_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<int>;
    VOID IIterator<int>;
    VOID IIterator<int>;
    struct Windows::Foundation::Collections::IIterator<int> *operator=;
    struct Windows::Foundation::Collections::IIterator<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<short> {
    struct Windows::Foundation::Collections::IIterator_impl<short,1> Windows::Foundation::Collections::IIterator_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<short>;
    VOID IIterator<short>;
    VOID IIterator<short>;
    struct Windows::Foundation::Collections::IIterator<short> *operator=;
    struct Windows::Foundation::Collections::IIterator<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned __int64> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned __int64>;
    VOID IIterator<unsigned __int64>;
    VOID IIterator<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterator<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned char> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> Windows::Foundation::Collections::IIterator_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned char>;
    VOID IIterator<unsigned char>;
    VOID IIterator<unsigned char>;
    struct Windows::Foundation::Collections::IIterator<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned int> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> Windows::Foundation::Collections::IIterator_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned int>;
    VOID IIterator<unsigned int>;
    VOID IIterator<unsigned int>;
    struct Windows::Foundation::Collections::IIterator<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<HSTRING__ *,1>;
    VOID IIterator_impl<HSTRING__ *,1>;
    VOID IIterator_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<IInspectable *,1>;
    VOID IIterator_impl<IInspectable *,1>;
    VOID IIterator_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> {
    struct IInspectable IInspectable;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0> {
    struct IInspectable IInspectable;
    struct Windows::Data::Text::TextSegment T_abi;
    struct Windows::Data::Text::TextSegment T_logical;
    struct Windows::Data::Text::TextSegment T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Data::Text::TextSegment,0>;
    VOID IIterator_impl<Windows::Data::Text::TextSegment,0>;
    VOID IIterator_impl<Windows::Data::Text::TextSegment,0>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1> {
    struct IInspectable IInspectable;
    struct Windows::Data::Xml::Dom::IXmlNode *T_abi;
    struct Windows::Data::Xml::Dom::IXmlNode *T_logical;
    struct Windows::Data::Xml::Dom::IXmlNode *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    VOID IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    VOID IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_abi;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_logical;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_abi;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_logical;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    VOID IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    VOID IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IUriRuntimeClass *T_abi;
    Windows::Foundation::Uri *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FileInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FolderInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    Windows::Storage::StorageFile *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibrary *T_abi;
    Windows::Storage::StorageLibrary *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibraryChange *T_abi;
    Windows::Storage::StorageLibraryChange *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> {
    struct IInspectable IInspectable;
    struct Windows::System::IUser *T_abi;
    Windows::System::User *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0> {
    struct IInspectable IInspectable;
    struct Windows::Storage::AccessCache::AccessListEntry T_abi;
    struct Windows::Storage::AccessCache::AccessListEntry T_logical;
    struct Windows::Storage::AccessCache::AccessListEntry T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    VOID IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    VOID IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_logical;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    VOID IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    VOID IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    struct Windows::Storage::IStorageFile *T_logical;
    struct Windows::Storage::IStorageFile *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::IStorageFile *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageFile *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageFile *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    struct Windows::Storage::IStorageFolder *T_logical;
    struct Windows::Storage::IStorageFolder *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageFolder *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageItem *T_abi;
    struct Windows::Storage::IStorageItem *T_logical;
    struct Windows::Storage::IStorageItem *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::IStorageItem *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageItem *,1>;
    VOID IIterator_impl<Windows::Storage::IStorageItem *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Search::SortEntry T_abi;
    struct Windows::Storage::Search::SortEntry T_logical;
    struct Windows::Storage::Search::SortEntry T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IIterator_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IIterator_impl<Windows::Storage::Search::SortEntry,0>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IBuffer *T_abi;
    struct Windows::Storage::Streams::IBuffer *T_logical;
    struct Windows::Storage::Streams::IBuffer *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<_GUID,1>;
    VOID IIterator_impl<_GUID,1>;
    VOID IIterator_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<__int64,1>;
    VOID IIterator_impl<__int64,1>;
    VOID IIterator_impl<__int64,1>;
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<double,1>;
    VOID IIterator_impl<double,1>;
    VOID IIterator_impl<double,1>;
    struct Windows::Foundation::Collections::IIterator_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<float,1>;
    VOID IIterator_impl<float,1>;
    VOID IIterator_impl<float,1>;
    struct Windows::Foundation::Collections::IIterator_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<int,1>;
    VOID IIterator_impl<int,1>;
    VOID IIterator_impl<int,1>;
    struct Windows::Foundation::Collections::IIterator_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<short,1>;
    VOID IIterator_impl<short,1>;
    VOID IIterator_impl<short,1>;
    struct Windows::Foundation::Collections::IIterator_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned __int64,1>;
    VOID IIterator_impl<unsigned __int64,1>;
    VOID IIterator_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned char,1>;
    VOID IIterator_impl<unsigned char,1>;
    VOID IIterator_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned int,1>;
    VOID IIterator_impl<unsigned int,1>;
    VOID IIterator_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,double>;
    VOID IKeyValuePair<HSTRING__ *,double>;
    VOID IKeyValuePair<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,float>;
    VOID IKeyValuePair<HSTRING__ *,float>;
    VOID IKeyValuePair<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,short>;
    VOID IKeyValuePair<HSTRING__ *,short>;
    VOID IKeyValuePair<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,bool>;
    VOID IKeyValuePair<_GUID,bool>;
    VOID IKeyValuePair<_GUID,bool>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,__int64>;
    VOID IKeyValuePair<__int64,__int64>;
    VOID IKeyValuePair<__int64,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,double>;
    VOID IKeyValuePair<__int64,double>;
    VOID IKeyValuePair<__int64,double>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,float>;
    VOID IKeyValuePair<__int64,float>;
    VOID IKeyValuePair<__int64,float>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,Windows::System::User *>;
    VOID IKeyValuePair<unsigned int,Windows::System::User *>;
    VOID IKeyValuePair<unsigned int,Windows::System::User *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *V_abi;
    Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_logical;
    struct _GUID K_complex;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_abi;
    Windows::ApplicationModel::Background::BackgroundTaskRegistration *V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,__int64>;
    VOID IKeyValuePair_impl<__int64,__int64>;
    VOID IKeyValuePair_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,double>;
    VOID IKeyValuePair_impl<__int64,double>;
    VOID IKeyValuePair_impl<__int64,double>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,float>;
    VOID IKeyValuePair_impl<__int64,float>;
    VOID IKeyValuePair_impl<__int64,float>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct Windows::System::IUser *V_abi;
    Windows::System::User *V_logical;
    ULONG K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<EventRegistrationToken,int>;
    VOID IMap<EventRegistrationToken,int>;
    VOID IMap<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,IInspectable *>;
    VOID IMap<HSTRING__ *,IInspectable *>;
    VOID IMap<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,__int64>;
    VOID IMap<HSTRING__ *,__int64>;
    VOID IMap<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,double>;
    VOID IMap<HSTRING__ *,double>;
    VOID IMap<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,float>;
    VOID IMap<HSTRING__ *,float>;
    VOID IMap<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,short>;
    VOID IMap<HSTRING__ *,short>;
    VOID IMap<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,unsigned char>;
    VOID IMap<HSTRING__ *,unsigned char>;
    VOID IMap<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,unsigned int>;
    VOID IMap<HSTRING__ *,unsigned int>;
    VOID IMap<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<IInspectable *,IInspectable *>;
    VOID IMap<IInspectable *,IInspectable *>;
    VOID IMap<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,HSTRING__ *>;
    VOID IMap<_GUID,HSTRING__ *>;
    VOID IMap<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,IInspectable *>;
    VOID IMap<_GUID,IInspectable *>;
    VOID IMap<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,bool> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,bool>;
    VOID IMap<_GUID,bool>;
    VOID IMap<_GUID,bool>;
    struct Windows::Foundation::Collections::IMap<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,HSTRING__ *>;
    VOID IMap<__int64,HSTRING__ *>;
    VOID IMap<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,__int64> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> Windows::Foundation::Collections::IMap_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,__int64>;
    VOID IMap<__int64,__int64>;
    VOID IMap<__int64,__int64>;
    struct Windows::Foundation::Collections::IMap<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,double> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> Windows::Foundation::Collections::IMap_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,double>;
    VOID IMap<__int64,double>;
    VOID IMap<__int64,double>;
    struct Windows::Foundation::Collections::IMap<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,float> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> Windows::Foundation::Collections::IMap_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,float>;
    VOID IMap<__int64,float>;
    VOID IMap<__int64,float>;
    struct Windows::Foundation::Collections::IMap<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,HSTRING__ *>;
    VOID IMap<unsigned int,HSTRING__ *>;
    VOID IMap<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,IInspectable *>;
    VOID IMap<unsigned int,IInspectable *>;
    VOID IMap<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,IWeakReference *>;
    VOID IMap<unsigned int,IWeakReference *>;
    VOID IMap<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,Windows::System::User *>;
    VOID IMap<unsigned int,Windows::System::User *>;
    VOID IMap<unsigned int,Windows::System::User *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> {
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapChangedEventArgs<_GUID>;
    VOID IMapChangedEventArgs<_GUID>;
    VOID IMapChangedEventArgs<_GUID>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_complex;
    HRESULT get_CollectionChange;
    HRESULT get_Key;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_complex;
    HRESULT get_CollectionChange;
    HRESULT get_Key;
    VOID IMapChangedEventArgs_impl<_GUID>;
    VOID IMapChangedEventArgs_impl<_GUID>;
    VOID IMapChangedEventArgs_impl<_GUID>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<EventRegistrationToken,int>;
    VOID IMapView<EventRegistrationToken,int>;
    VOID IMapView<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    VOID IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    VOID IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,__int64>;
    VOID IMapView<HSTRING__ *,__int64>;
    VOID IMapView<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,double>;
    VOID IMapView<HSTRING__ *,double>;
    VOID IMapView<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,float>;
    VOID IMapView<HSTRING__ *,float>;
    VOID IMapView<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,short>;
    VOID IMapView<HSTRING__ *,short>;
    VOID IMapView<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,unsigned char>;
    VOID IMapView<HSTRING__ *,unsigned char>;
    VOID IMapView<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,unsigned int>;
    VOID IMapView<HSTRING__ *,unsigned int>;
    VOID IMapView<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<IInspectable *,IInspectable *>;
    VOID IMapView<IInspectable *,IInspectable *>;
    VOID IMapView<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,HSTRING__ *>;
    VOID IMapView<_GUID,HSTRING__ *>;
    VOID IMapView<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,IInspectable *>;
    VOID IMapView<_GUID,IInspectable *>;
    VOID IMapView<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,bool> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,bool>;
    VOID IMapView<_GUID,bool>;
    VOID IMapView<_GUID,bool>;
    struct Windows::Foundation::Collections::IMapView<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,HSTRING__ *>;
    VOID IMapView<__int64,HSTRING__ *>;
    VOID IMapView<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,__int64> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> Windows::Foundation::Collections::IMapView_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,__int64>;
    VOID IMapView<__int64,__int64>;
    VOID IMapView<__int64,__int64>;
    struct Windows::Foundation::Collections::IMapView<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,double> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> Windows::Foundation::Collections::IMapView_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,double>;
    VOID IMapView<__int64,double>;
    VOID IMapView<__int64,double>;
    struct Windows::Foundation::Collections::IMapView<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,float> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> Windows::Foundation::Collections::IMapView_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,float>;
    VOID IMapView<__int64,float>;
    VOID IMapView<__int64,float>;
    struct Windows::Foundation::Collections::IMapView<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,HSTRING__ *>;
    VOID IMapView<unsigned int,HSTRING__ *>;
    VOID IMapView<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,IInspectable *>;
    VOID IMapView<unsigned int,IInspectable *>;
    VOID IMapView<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,IWeakReference *>;
    VOID IMapView<unsigned int,IWeakReference *>;
    VOID IMapView<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,Windows::System::User *>;
    VOID IMapView<unsigned int,Windows::System::User *>;
    VOID IMapView<unsigned int,Windows::System::User *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<EventRegistrationToken,int>;
    VOID IMapView_impl<EventRegistrationToken,int>;
    VOID IMapView_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *V_abi;
    Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,double>;
    VOID IMapView_impl<HSTRING__ *,double>;
    VOID IMapView_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,float>;
    VOID IMapView_impl<HSTRING__ *,float>;
    VOID IMapView_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,short>;
    VOID IMapView_impl<HSTRING__ *,short>;
    VOID IMapView_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,IInspectable *>;
    VOID IMapView_impl<_GUID,IInspectable *>;
    VOID IMapView_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_logical;
    struct _GUID K_complex;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    VOID IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *V_abi;
    Windows::ApplicationModel::Background::BackgroundTaskRegistration *V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,__int64>;
    VOID IMapView_impl<__int64,__int64>;
    VOID IMapView_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,double>;
    VOID IMapView_impl<__int64,double>;
    VOID IMapView_impl<__int64,double>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,float>;
    VOID IMapView_impl<__int64,float>;
    VOID IMapView_impl<__int64,float>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct Windows::System::IUser *V_abi;
    Windows::System::User *V_logical;
    ULONG K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<EventRegistrationToken,int>;
    VOID IMap_impl<EventRegistrationToken,int>;
    VOID IMap_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,__int64>;
    VOID IMap_impl<HSTRING__ *,__int64>;
    VOID IMap_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,double>;
    VOID IMap_impl<HSTRING__ *,double>;
    VOID IMap_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,float>;
    VOID IMap_impl<HSTRING__ *,float>;
    VOID IMap_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,short>;
    VOID IMap_impl<HSTRING__ *,short>;
    VOID IMap_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,IInspectable *>;
    VOID IMap_impl<_GUID,IInspectable *>;
    VOID IMap_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,HSTRING__ *>;
    VOID IMap_impl<__int64,HSTRING__ *>;
    VOID IMap_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,__int64>;
    VOID IMap_impl<__int64,__int64>;
    VOID IMap_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,double>;
    VOID IMap_impl<__int64,double>;
    VOID IMap_impl<__int64,double>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,float>;
    VOID IMap_impl<__int64,float>;
    VOID IMap_impl<__int64,float>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,IInspectable *>;
    VOID IMap_impl<unsigned int,IInspectable *>;
    VOID IMap_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct Windows::System::IUser *V_abi;
    Windows::System::User *V_logical;
    ULONG K_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT add_MapChanged;
    HRESULT remove_MapChanged;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT add_MapChanged;
    HRESULT remove_MapChanged;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> {
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<HSTRING__ *>;
    VOID IObservableVector<HSTRING__ *>;
    VOID IObservableVector<HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<IInspectable *> {
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<IInspectable *>;
    VOID IObservableVector<IInspectable *>;
    VOID IObservableVector<IInspectable *>;
    struct Windows::Foundation::Collections::IObservableVector<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<Windows::Storage::StorageFolder *>;
    VOID IObservableVector<Windows::Storage::StorageFolder *>;
    VOID IObservableVector<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<float> {
    struct Windows::Foundation::Collections::IObservableVector_impl<float> Windows::Foundation::Collections::IObservableVector_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<float>;
    VOID IObservableVector<float>;
    VOID IObservableVector<float>;
    struct Windows::Foundation::Collections::IObservableVector<float> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<HSTRING__ *>;
    VOID IObservableVector_impl<HSTRING__ *>;
    VOID IObservableVector_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<IInspectable *>;
    VOID IObservableVector_impl<IInspectable *>;
    VOID IObservableVector_impl<IInspectable *>;
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct IInspectable IInspectable;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<float>;
    VOID IObservableVector_impl<float>;
    VOID IObservableVector_impl<float>;
    struct Windows::Foundation::Collections::IObservableVector_impl<float> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IPropertySet {
    struct IInspectable IInspectable;
    VOID IPropertySet;
    VOID IPropertySet;
    VOID IPropertySet;
    struct Windows::Foundation::Collections::IPropertySet *operator=;
    struct Windows::Foundation::Collections::IPropertySet *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<HSTRING__ *> {
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<HSTRING__ *>;
    VOID IVector<HSTRING__ *>;
    VOID IVector<HSTRING__ *>;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<IInspectable *> {
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> Windows::Foundation::Collections::IVector_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<IInspectable *>;
    VOID IVector<IInspectable *>;
    VOID IVector<IInspectable *>;
    struct Windows::Foundation::Collections::IVector<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IVector<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0> Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Data::Text::TextSegment>;
    VOID IVector<Windows::Data::Text::TextSegment>;
    VOID IVector<Windows::Data::Text::TextSegment>;
    struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Point>;
    VOID IVector<Windows::Foundation::Point>;
    VOID IVector<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Uri *>;
    VOID IVector<Windows::Foundation::Uri *>;
    VOID IVector<Windows::Foundation::Uri *>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1> Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::IStorageFile *>;
    VOID IVector<Windows::Storage::IStorageFile *>;
    VOID IVector<Windows::Storage::IStorageFile *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1> Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::IStorageFolder *>;
    VOID IVector<Windows::Storage::IStorageFolder *>;
    VOID IVector<Windows::Storage::IStorageFolder *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1> Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::IStorageItem *>;
    VOID IVector<Windows::Storage::IStorageItem *>;
    VOID IVector<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0> Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::Search::SortEntry>;
    VOID IVector<Windows::Storage::Search::SortEntry>;
    VOID IVector<Windows::Storage::Search::SortEntry>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::StorageFile *>;
    VOID IVector<Windows::Storage::StorageFile *>;
    VOID IVector<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::StorageFolder *>;
    VOID IVector<Windows::Storage::StorageFolder *>;
    VOID IVector<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::StorageLibraryChange *>;
    VOID IVector<Windows::Storage::StorageLibraryChange *>;
    VOID IVector<Windows::Storage::StorageLibraryChange *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1> Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Storage::Streams::IBuffer *>;
    VOID IVector<Windows::Storage::Streams::IBuffer *>;
    VOID IVector<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::System::User *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::System::User *>;
    VOID IVector<Windows::System::User *>;
    VOID IVector<Windows::System::User *>;
    struct Windows::Foundation::Collections::IVector<Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<_GUID> {
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> Windows::Foundation::Collections::IVector_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<_GUID>;
    VOID IVector<_GUID>;
    VOID IVector<_GUID>;
    struct Windows::Foundation::Collections::IVector<_GUID> *operator=;
    struct Windows::Foundation::Collections::IVector<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<__int64> {
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> Windows::Foundation::Collections::IVector_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<__int64>;
    VOID IVector<__int64>;
    VOID IVector<__int64>;
    struct Windows::Foundation::Collections::IVector<__int64> *operator=;
    struct Windows::Foundation::Collections::IVector<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<bool> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<bool>;
    VOID IVector<bool>;
    VOID IVector<bool>;
    struct Windows::Foundation::Collections::IVector<bool> *operator=;
    struct Windows::Foundation::Collections::IVector<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<double> {
    struct Windows::Foundation::Collections::IVector_impl<double,1> Windows::Foundation::Collections::IVector_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<double>;
    VOID IVector<double>;
    VOID IVector<double>;
    struct Windows::Foundation::Collections::IVector<double> *operator=;
    struct Windows::Foundation::Collections::IVector<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<float> {
    struct Windows::Foundation::Collections::IVector_impl<float,1> Windows::Foundation::Collections::IVector_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<float>;
    VOID IVector<float>;
    VOID IVector<float>;
    struct Windows::Foundation::Collections::IVector<float> *operator=;
    struct Windows::Foundation::Collections::IVector<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<int> {
    struct Windows::Foundation::Collections::IVector_impl<int,1> Windows::Foundation::Collections::IVector_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<int>;
    VOID IVector<int>;
    VOID IVector<int>;
    struct Windows::Foundation::Collections::IVector<int> *operator=;
    struct Windows::Foundation::Collections::IVector<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<short> {
    struct Windows::Foundation::Collections::IVector_impl<short,1> Windows::Foundation::Collections::IVector_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<short>;
    VOID IVector<short>;
    VOID IVector<short>;
    struct Windows::Foundation::Collections::IVector<short> *operator=;
    struct Windows::Foundation::Collections::IVector<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned __int64> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned __int64>;
    VOID IVector<unsigned __int64>;
    VOID IVector<unsigned __int64>;
    struct Windows::Foundation::Collections::IVector<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned char> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> Windows::Foundation::Collections::IVector_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned char>;
    VOID IVector<unsigned char>;
    VOID IVector<unsigned char>;
    struct Windows::Foundation::Collections::IVector<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned int> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> Windows::Foundation::Collections::IVector_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned int>;
    VOID IVector<unsigned int>;
    VOID IVector<unsigned int>;
    struct Windows::Foundation::Collections::IVector<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorChangedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_CollectionChange;
    HRESULT get_Index;
    VOID IVectorChangedEventArgs;
    VOID IVectorChangedEventArgs;
    VOID IVectorChangedEventArgs;
    struct Windows::Foundation::Collections::IVectorChangedEventArgs *operator=;
    struct Windows::Foundation::Collections::IVectorChangedEventArgs *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> {
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<HSTRING__ *>;
    VOID IVectorView<HSTRING__ *>;
    VOID IVectorView<HSTRING__ *>;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<IInspectable *> {
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<IInspectable *>;
    VOID IVectorView<IInspectable *>;
    VOID IVectorView<IInspectable *>;
    struct Windows::Foundation::Collections::IVectorView<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    VOID IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0> Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Data::Text::TextSegment>;
    VOID IVectorView<Windows::Data::Text::TextSegment>;
    VOID IVectorView<Windows::Data::Text::TextSegment>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
    VOID IVectorView<Windows::Data::Xml::Dom::IXmlNode *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    VOID IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Point>;
    VOID IVectorView<Windows::Foundation::Point>;
    VOID IVectorView<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Rect>;
    VOID IVectorView<Windows::Foundation::Rect>;
    VOID IVectorView<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Uri *>;
    VOID IVectorView<Windows::Foundation::Uri *>;
    VOID IVectorView<Windows::Foundation::Uri *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IVectorView<Windows::Storage::AccessCache::AccessListEntry>;
    VOID IVectorView<Windows::Storage::AccessCache::AccessListEntry>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::FileInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::FileInformation *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::FolderInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::FolderInformation *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    VOID IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::IStorageFile *>;
    VOID IVectorView<Windows::Storage::IStorageFile *>;
    VOID IVectorView<Windows::Storage::IStorageFile *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::IStorageFolder *>;
    VOID IVectorView<Windows::Storage::IStorageFolder *>;
    VOID IVectorView<Windows::Storage::IStorageFolder *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::IStorageItem *>;
    VOID IVectorView<Windows::Storage::IStorageItem *>;
    VOID IVectorView<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::Search::SortEntry>;
    VOID IVectorView<Windows::Storage::Search::SortEntry>;
    VOID IVectorView<Windows::Storage::Search::SortEntry>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::StorageFile *>;
    VOID IVectorView<Windows::Storage::StorageFile *>;
    VOID IVectorView<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::StorageFolder *>;
    VOID IVectorView<Windows::Storage::StorageFolder *>;
    VOID IVectorView<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::StorageLibraryChange *>;
    VOID IVectorView<Windows::Storage::StorageLibraryChange *>;
    VOID IVectorView<Windows::Storage::StorageLibraryChange *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Storage::Streams::IBuffer *>;
    VOID IVectorView<Windows::Storage::Streams::IBuffer *>;
    VOID IVectorView<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::System::User *>;
    VOID IVectorView<Windows::System::User *>;
    VOID IVectorView<Windows::System::User *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<_GUID> {
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> Windows::Foundation::Collections::IVectorView_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<_GUID>;
    VOID IVectorView<_GUID>;
    VOID IVectorView<_GUID>;
    struct Windows::Foundation::Collections::IVectorView<_GUID> *operator=;
    struct Windows::Foundation::Collections::IVectorView<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<__int64> {
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> Windows::Foundation::Collections::IVectorView_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<__int64>;
    VOID IVectorView<__int64>;
    VOID IVectorView<__int64>;
    struct Windows::Foundation::Collections::IVectorView<__int64> *operator=;
    struct Windows::Foundation::Collections::IVectorView<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<bool> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<bool>;
    VOID IVectorView<bool>;
    VOID IVectorView<bool>;
    struct Windows::Foundation::Collections::IVectorView<bool> *operator=;
    struct Windows::Foundation::Collections::IVectorView<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<double> {
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> Windows::Foundation::Collections::IVectorView_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<double>;
    VOID IVectorView<double>;
    VOID IVectorView<double>;
    struct Windows::Foundation::Collections::IVectorView<double> *operator=;
    struct Windows::Foundation::Collections::IVectorView<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<float> {
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> Windows::Foundation::Collections::IVectorView_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<float>;
    VOID IVectorView<float>;
    VOID IVectorView<float>;
    struct Windows::Foundation::Collections::IVectorView<float> *operator=;
    struct Windows::Foundation::Collections::IVectorView<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<int> {
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> Windows::Foundation::Collections::IVectorView_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<int>;
    VOID IVectorView<int>;
    VOID IVectorView<int>;
    struct Windows::Foundation::Collections::IVectorView<int> *operator=;
    struct Windows::Foundation::Collections::IVectorView<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<short> {
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> Windows::Foundation::Collections::IVectorView_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<short>;
    VOID IVectorView<short>;
    VOID IVectorView<short>;
    struct Windows::Foundation::Collections::IVectorView<short> *operator=;
    struct Windows::Foundation::Collections::IVectorView<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned __int64> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned __int64>;
    VOID IVectorView<unsigned __int64>;
    VOID IVectorView<unsigned __int64>;
    struct Windows::Foundation::Collections::IVectorView<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned char> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned char>;
    VOID IVectorView<unsigned char>;
    VOID IVectorView<unsigned char>;
    struct Windows::Foundation::Collections::IVectorView<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned int> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned int>;
    VOID IVectorView<unsigned int>;
    VOID IVectorView<unsigned int>;
    struct Windows::Foundation::Collections::IVectorView<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<HSTRING__ *,1>;
    VOID IVectorView_impl<HSTRING__ *,1>;
    VOID IVectorView_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<IInspectable *,1>;
    VOID IVectorView_impl<IInspectable *,1>;
    VOID IVectorView_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> {
    struct IInspectable IInspectable;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0> {
    struct IInspectable IInspectable;
    struct Windows::Data::Text::TextSegment T_abi;
    struct Windows::Data::Text::TextSegment T_logical;
    struct Windows::Data::Text::TextSegment T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Data::Text::TextSegment,0>;
    VOID IVectorView_impl<Windows::Data::Text::TextSegment,0>;
    VOID IVectorView_impl<Windows::Data::Text::TextSegment,0>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1> {
    struct IInspectable IInspectable;
    struct Windows::Data::Xml::Dom::IXmlNode *T_abi;
    struct Windows::Data::Xml::Dom::IXmlNode *T_logical;
    struct Windows::Data::Xml::Dom::IXmlNode *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    VOID IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    VOID IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_abi;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_logical;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    VOID IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    VOID IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IUriRuntimeClass *T_abi;
    Windows::Foundation::Uri *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FileInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    Windows::Storage::BulkAccess::FolderInformation *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    Windows::Storage::StorageFile *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibraryChange *T_abi;
    Windows::Storage::StorageLibraryChange *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> {
    struct IInspectable IInspectable;
    struct Windows::System::IUser *T_abi;
    Windows::System::User *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0> {
    struct IInspectable IInspectable;
    struct Windows::Storage::AccessCache::AccessListEntry T_abi;
    struct Windows::Storage::AccessCache::AccessListEntry T_logical;
    struct Windows::Storage::AccessCache::AccessListEntry T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    VOID IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    VOID IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_abi;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_logical;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    VOID IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    VOID IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    struct Windows::Storage::IStorageFile *T_logical;
    struct Windows::Storage::IStorageFile *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::IStorageFile *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageFile *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageFile *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    struct Windows::Storage::IStorageFolder *T_logical;
    struct Windows::Storage::IStorageFolder *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageItem *T_abi;
    struct Windows::Storage::IStorageItem *T_logical;
    struct Windows::Storage::IStorageItem *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::IStorageItem *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageItem *,1>;
    VOID IVectorView_impl<Windows::Storage::IStorageItem *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Search::SortEntry T_abi;
    struct Windows::Storage::Search::SortEntry T_logical;
    struct Windows::Storage::Search::SortEntry T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IBuffer *T_abi;
    struct Windows::Storage::Streams::IBuffer *T_logical;
    struct Windows::Storage::Streams::IBuffer *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<_GUID,1>;
    VOID IVectorView_impl<_GUID,1>;
    VOID IVectorView_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<__int64,1>;
    VOID IVectorView_impl<__int64,1>;
    VOID IVectorView_impl<__int64,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<double,1>;
    VOID IVectorView_impl<double,1>;
    VOID IVectorView_impl<double,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<float,1>;
    VOID IVectorView_impl<float,1>;
    VOID IVectorView_impl<float,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<int,1>;
    VOID IVectorView_impl<int,1>;
    VOID IVectorView_impl<int,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<short,1>;
    VOID IVectorView_impl<short,1>;
    VOID IVectorView_impl<short,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned __int64,1>;
    VOID IVectorView_impl<unsigned __int64,1>;
    VOID IVectorView_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned char,1>;
    VOID IVectorView_impl<unsigned char,1>;
    VOID IVectorView_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned int,1>;
    VOID IVectorView_impl<unsigned int,1>;
    VOID IVectorView_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<HSTRING__ *,1>;
    VOID IVector_impl<HSTRING__ *,1>;
    VOID IVector_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<IInspectable *,1>;
    VOID IVector_impl<IInspectable *,1>;
    VOID IVector_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> {
    struct IInspectable IInspectable;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_abi;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_logical;
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    VOID IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0> {
    struct IInspectable IInspectable;
    struct Windows::Data::Text::TextSegment T_abi;
    struct Windows::Data::Text::TextSegment T_logical;
    struct Windows::Data::Text::TextSegment T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Data::Text::TextSegment,0>;
    VOID IVector_impl<Windows::Data::Text::TextSegment,0>;
    VOID IVector_impl<Windows::Data::Text::TextSegment,0>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IUriRuntimeClass *T_abi;
    Windows::Foundation::Uri *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    Windows::Storage::StorageFile *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibraryChange *T_abi;
    Windows::Storage::StorageLibraryChange *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> {
    struct IInspectable IInspectable;
    struct Windows::System::IUser *T_abi;
    Windows::System::User *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *T_abi;
    struct Windows::Storage::IStorageFile *T_logical;
    struct Windows::Storage::IStorageFile *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Storage::IStorageFile *,1>;
    VOID IVector_impl<Windows::Storage::IStorageFile *,1>;
    VOID IVector_impl<Windows::Storage::IStorageFile *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *T_abi;
    struct Windows::Storage::IStorageFolder *T_logical;
    struct Windows::Storage::IStorageFolder *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IVector_impl<Windows::Storage::IStorageFolder *,1>;
    VOID IVector_impl<Windows::Storage::IStorageFolder *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageItem *T_abi;
    struct Windows::Storage::IStorageItem *T_logical;
    struct Windows::Storage::IStorageItem *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Storage::IStorageItem *,1>;
    VOID IVector_impl<Windows::Storage::IStorageItem *,1>;
    VOID IVector_impl<Windows::Storage::IStorageItem *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Search::SortEntry T_abi;
    struct Windows::Storage::Search::SortEntry T_logical;
    struct Windows::Storage::Search::SortEntry T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IVector_impl<Windows::Storage::Search::SortEntry,0>;
    VOID IVector_impl<Windows::Storage::Search::SortEntry,0>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IBuffer *T_abi;
    struct Windows::Storage::Streams::IBuffer *T_logical;
    struct Windows::Storage::Streams::IBuffer *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
    VOID IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<_GUID,1>;
    VOID IVector_impl<_GUID,1>;
    VOID IVector_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<__int64,1>;
    VOID IVector_impl<__int64,1>;
    VOID IVector_impl<__int64,1>;
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<double,1>;
    VOID IVector_impl<double,1>;
    VOID IVector_impl<double,1>;
    struct Windows::Foundation::Collections::IVector_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<float,1>;
    VOID IVector_impl<float,1>;
    VOID IVector_impl<float,1>;
    struct Windows::Foundation::Collections::IVector_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<int,1>;
    VOID IVector_impl<int,1>;
    VOID IVector_impl<int,1>;
    struct Windows::Foundation::Collections::IVector_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<short,1>;
    VOID IVector_impl<short,1>;
    VOID IVector_impl<short,1>;
    struct Windows::Foundation::Collections::IVector_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned __int64,1>;
    VOID IVector_impl<unsigned __int64,1>;
    VOID IVector_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned char,1>;
    VOID IVector_impl<unsigned char,1>;
    VOID IVector_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned int,1>;
    VOID IVector_impl<unsigned int,1>;
    VOID IVector_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<Windows::Data::Xml::Dom::IXmlNode *> {
    struct XWinRT::InterfaceEquals XWinRT::InterfaceEquals;
};

typedef struct Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<Windows::Data::Xml::Dom::IXmlNode *> {
    struct XWinRT::InterfaceLifetimeTraits XWinRT::InterfaceLifetimeTraits;
};

typedef struct Windows::Foundation::Collections::Internal::NoVersionTag {
    BOOLEAN operator==;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Invoke;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Invoke;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<IInspectable *>;
    VOID VectorChangedEventHandler<IInspectable *>;
    VOID VectorChangedEventHandler<IInspectable *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<Windows::Storage::StorageFolder *>;
    VOID VectorChangedEventHandler<Windows::Storage::StorageFolder *>;
    VOID VectorChangedEventHandler<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<float> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<float>;
    VOID VectorChangedEventHandler<float>;
    VOID VectorChangedEventHandler<float>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<float> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<float> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct IUnknown IUnknown;
    Windows::Storage::StorageFolder *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> {
    struct IUnknown IUnknown;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<float>;
    VOID VectorChangedEventHandler_impl<float>;
    VOID VectorChangedEventHandler_impl<float>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Text::TextSegment> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Xml::Dom::IXmlNode *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::DateTime> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IUriRuntimeClass *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Size> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::TimeSpan> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::AccessCache::AccessListEntry> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFile *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFolder *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageItem *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibrary *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibraryChange *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Search::SortEntry> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IBuffer *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::System::IUser *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<_GUID> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<__int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<double> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<float> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<short> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned char> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<HSTRING__ *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<IInspectable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Data::Text::TextSegment> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Data::Xml::Dom::IXmlNode *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IUriRuntimeClass *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::AccessCache::AccessListEntry> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFile *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFolder *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageItem *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibrary *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibraryChange *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Search::SortEntry> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IBuffer *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::System::IUser *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<_GUID> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<__int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<double> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<float> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<short> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned __int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned char> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *> {
    struct HSTRING__ *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<IInspectable *> {
    struct IInspectable *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Text::TextSegment> {
    struct Windows::Data::Text::TextSegment _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Data::Xml::Dom::IXmlNode *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IPropertySet *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    struct Windows::Foundation::IUriRuntimeClass *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    struct Windows::Storage::IStorageFile *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct Windows::Storage::IStorageFolder *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    struct Windows::Storage::IStorageLibrary *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > {
    struct Windows::Storage::IStorageLibraryChange *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct Windows::System::IUser *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    UCHAR _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point> {
    struct Windows::Foundation::Point _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect> {
    struct Windows::Foundation::Rect _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Storage::AccessCache::AccessListEntry _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFile *> {
    struct Windows::Storage::IStorageFile *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFolder *> {
    struct Windows::Storage::IStorageFolder *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageItem *> {
    struct Windows::Storage::IStorageItem *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Search::SortEntry> {
    struct Windows::Storage::Search::SortEntry _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Storage::Streams::IBuffer *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<_GUID> {
    struct _GUID _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<__int64> {
    LONG64 _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<double> {
    DOUBLE _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<float> {
    FLOAT _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<int> {
    LONG _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<short> {
    SHORT _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64> {
    ULONG64 _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned char> {
    UCHAR _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned int> {
    ULONG _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::DateTime {
    LONG64 UniversalTime;
};

typedef struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics {
    struct IInspectable IInspectable;
    HRESULT TraceOperationCreation;
    HRESULT TraceOperationCompletion;
    HRESULT TraceOperationRelation;
    HRESULT TraceSynchronousWorkStart;
    HRESULT TraceSynchronousWorkCompletion;
    HRESULT add_TracingStatusChanged;
    HRESULT remove_TracingStatusChanged;
    VOID IAsyncCausalityTracerStatics;
    VOID IAsyncCausalityTracerStatics;
    VOID IAsyncCausalityTracerStatics;
    struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics *operator=;
    struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics *operator=;
};

typedef struct Windows::Foundation::Diagnostics::IErrorReportingSettings {
    struct IInspectable IInspectable;
    HRESULT SetErrorOptions;
    HRESULT GetErrorOptions;
    VOID IErrorReportingSettings;
    VOID IErrorReportingSettings;
    VOID IErrorReportingSettings;
    struct Windows::Foundation::Diagnostics::IErrorReportingSettings *operator=;
    struct Windows::Foundation::Diagnostics::IErrorReportingSettings *operator=;
};

typedef struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_Enabled;
    HRESULT get_TraceLevel;
    VOID ITracingStatusChangedEventArgs;
    VOID ITracingStatusChangedEventArgs;
    VOID ITracingStatusChangedEventArgs;
    struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *operator=;
    struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *operator=;
};

typedef struct Windows::Foundation::IAsyncAction {
    struct IInspectable IInspectable;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncAction;
    VOID IAsyncAction;
    VOID IAsyncAction;
    struct Windows::Foundation::IAsyncAction *operator=;
    struct Windows::Foundation::IAsyncAction *operator=;
};

typedef struct Windows::Foundation::IAsyncActionCompletedHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IAsyncActionCompletedHandler;
    VOID IAsyncActionCompletedHandler;
    VOID IAsyncActionCompletedHandler;
    struct Windows::Foundation::IAsyncActionCompletedHandler *operator=;
    struct Windows::Foundation::IAsyncActionCompletedHandler *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<double> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> Windows::Foundation::IAsyncActionProgressHandler_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<double>;
    VOID IAsyncActionProgressHandler<double>;
    VOID IAsyncActionProgressHandler<double>;
    struct Windows::Foundation::IAsyncActionProgressHandler<double> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<unsigned int>;
    VOID IAsyncActionProgressHandler<unsigned int>;
    VOID IAsyncActionProgressHandler<unsigned int>;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> {
    struct IUnknown IUnknown;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<double>;
    VOID IAsyncActionProgressHandler_impl<double>;
    VOID IAsyncActionProgressHandler_impl<double>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<double> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> Windows::Foundation::IAsyncActionWithProgress_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<double>;
    VOID IAsyncActionWithProgress<double>;
    VOID IAsyncActionWithProgress<double>;
    struct Windows::Foundation::IAsyncActionWithProgress<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<unsigned int>;
    VOID IAsyncActionWithProgress<unsigned int>;
    VOID IAsyncActionWithProgress<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> {
    struct IUnknown IUnknown;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<double>;
    VOID IAsyncActionWithProgress_impl<double>;
    VOID IAsyncActionWithProgress_impl<double>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<HSTRING__ *> {
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<HSTRING__ *>;
    VOID IAsyncOperation<HSTRING__ *>;
    VOID IAsyncOperation<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperation<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperation<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<IInspectable *> {
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> Windows::Foundation::IAsyncOperation_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<IInspectable *>;
    VOID IAsyncOperation<IInspectable *>;
    VOID IAsyncOperation<IInspectable *>;
    struct Windows::Foundation::IAsyncOperation<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperation<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>;
    VOID IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>;
    VOID IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Uri *>;
    VOID IAsyncOperation<Windows::Foundation::Uri *>;
    VOID IAsyncOperation<Windows::Foundation::Uri *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>;
    VOID IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperation<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperation<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::StorageFile *>;
    VOID IAsyncOperation<Windows::Storage::StorageFile *>;
    VOID IAsyncOperation<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::StorageFolder *>;
    VOID IAsyncOperation<Windows::Storage::StorageFolder *>;
    VOID IAsyncOperation<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::StorageLibrary *>;
    VOID IAsyncOperation<Windows::Storage::StorageLibrary *>;
    VOID IAsyncOperation<Windows::Storage::StorageLibrary *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::StorageStreamTransaction *>;
    VOID IAsyncOperation<Windows::Storage::StorageStreamTransaction *>;
    VOID IAsyncOperation<Windows::Storage::StorageStreamTransaction *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IInputStream *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IOutputStream *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>;
    VOID IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>;
    VOID IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::System::User *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::System::User *>;
    VOID IAsyncOperation<Windows::System::User *>;
    VOID IAsyncOperation<Windows::System::User *>;
    struct Windows::Foundation::IAsyncOperation<Windows::System::User *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<_GUID> {
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> Windows::Foundation::IAsyncOperation_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<_GUID>;
    VOID IAsyncOperation<_GUID>;
    VOID IAsyncOperation<_GUID>;
    struct Windows::Foundation::IAsyncOperation<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperation<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<__int64> {
    struct Windows::Foundation::IAsyncOperation_impl<__int64> Windows::Foundation::IAsyncOperation_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<__int64>;
    VOID IAsyncOperation<__int64>;
    VOID IAsyncOperation<__int64>;
    struct Windows::Foundation::IAsyncOperation<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperation<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<bool> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<bool>;
    VOID IAsyncOperation<bool>;
    VOID IAsyncOperation<bool>;
    struct Windows::Foundation::IAsyncOperation<bool> *operator=;
    struct Windows::Foundation::IAsyncOperation<bool> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus> {
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus> Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>;
    struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
    struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState> {
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState> Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperation<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperation<enum Windows::Storage::Search::IndexedState>;
    struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState> *operator=;
    struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<int> {
    struct Windows::Foundation::IAsyncOperation_impl<int> Windows::Foundation::IAsyncOperation_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<int>;
    VOID IAsyncOperation<int>;
    VOID IAsyncOperation<int>;
    struct Windows::Foundation::IAsyncOperation<int> *operator=;
    struct Windows::Foundation::IAsyncOperation<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<unsigned __int64> {
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> Windows::Foundation::IAsyncOperation_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<unsigned __int64>;
    VOID IAsyncOperation<unsigned __int64>;
    VOID IAsyncOperation<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperation<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperation<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<unsigned int> {
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> Windows::Foundation::IAsyncOperation_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<unsigned int>;
    VOID IAsyncOperation<unsigned int>;
    VOID IAsyncOperation<unsigned int>;
    struct Windows::Foundation::IAsyncOperation<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperation<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>;
    VOID IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>;
    VOID IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::System::User *>;
    VOID IAsyncOperationCompletedHandler<Windows::System::User *>;
    VOID IAsyncOperationCompletedHandler<Windows::System::User *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<__int64>;
    VOID IAsyncOperationCompletedHandler<__int64>;
    VOID IAsyncOperationCompletedHandler<__int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<bool>;
    VOID IAsyncOperationCompletedHandler<bool>;
    VOID IAsyncOperationCompletedHandler<bool>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus> Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState> Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<int> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<int>;
    VOID IAsyncOperationCompletedHandler<int>;
    VOID IAsyncOperationCompletedHandler<int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *TResult_abi;
    struct IInspectable *TResult_logical;
    struct IInspectable *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IPropertySet *TResult_abi;
    struct Windows::Foundation::Collections::IPropertySet *TResult_logical;
    struct Windows::Foundation::Collections::IPropertySet *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > {
    struct IUnknown IUnknown;
    struct Windows::Data::Xml::Dom::IXmlDocument *TResult_abi;
    Windows::Data::Xml::Dom::XmlDocument *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    struct IUnknown IUnknown;
    struct Windows::Foundation::IUriRuntimeClass *TResult_abi;
    Windows::Foundation::Uri *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::FileProperties::IBasicProperties *TResult_abi;
    Windows::Storage::FileProperties::BasicProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::FileProperties::IDocumentProperties *TResult_abi;
    Windows::Storage::FileProperties::DocumentProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::FileProperties::IImageProperties *TResult_abi;
    Windows::Storage::FileProperties::ImageProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::FileProperties::IMusicProperties *TResult_abi;
    Windows::Storage::FileProperties::MusicProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_abi;
    Windows::Storage::FileProperties::StorageItemThumbnail *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::FileProperties::IVideoProperties *TResult_abi;
    Windows::Storage::FileProperties::VideoProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageFile *TResult_abi;
    Windows::Storage::StorageFile *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageFolder *TResult_abi;
    Windows::Storage::StorageFolder *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageLibrary *TResult_abi;
    Windows::Storage::StorageLibrary *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageStreamTransaction *TResult_abi;
    Windows::Storage::StorageStreamTransaction *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_abi;
    Windows::Storage::Streams::RandomAccessStreamReference *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IUnknown IUnknown;
    struct Windows::System::IUser *TResult_abi;
    Windows::System::User *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IUnknown IUnknown;
    UCHAR TResult_abi;
    BOOLEAN TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::TimeSpan TResult_abi;
    struct Windows::Foundation::TimeSpan TResult_logical;
    struct Windows::Foundation::TimeSpan TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageItem *TResult_abi;
    struct Windows::Storage::IStorageItem *TResult_logical;
    struct Windows::Storage::IStorageItem *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IInputStream *TResult_abi;
    struct Windows::Storage::Streams::IInputStream *TResult_logical;
    struct Windows::Storage::Streams::IInputStream *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IOutputStream *TResult_abi;
    struct Windows::Storage::Streams::IOutputStream *TResult_logical;
    struct Windows::Storage::Streams::IOutputStream *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> {
    struct IUnknown IUnknown;
    struct _GUID TResult_abi;
    struct _GUID TResult_logical;
    struct _GUID TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> {
    struct IUnknown IUnknown;
    LONG64 TResult_abi;
    LONG64 TResult_logical;
    LONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus> {
    struct IUnknown IUnknown;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_abi;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_logical;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState> {
    struct IUnknown IUnknown;
    enum Windows::Storage::Search::IndexedState TResult_abi;
    enum Windows::Storage::Search::IndexedState TResult_logical;
    enum Windows::Storage::Search::IndexedState TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> {
    struct IUnknown IUnknown;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<int,int>;
    VOID IAsyncOperationProgressHandler<int,int>;
    VOID IAsyncOperationProgressHandler<int,int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IInputStream *TResult_abi;
    struct Windows::Storage::Streams::IInputStream *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IInputStream *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> {
    struct IUnknown IUnknown;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int> Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<int,int> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<int,int>;
    VOID IAsyncOperationWithProgress<int,int>;
    VOID IAsyncOperationWithProgress<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgress<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IInputStream *TResult_abi;
    struct Windows::Storage::Streams::IInputStream *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IInputStream *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> {
    struct IUnknown IUnknown;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int> {
    struct IInspectable IInspectable;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    ULONG TProgress_complex;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct Windows::Storage::Streams::IInputStream *TResult_abi;
    struct Windows::Storage::Streams::IInputStream *TResult_logical;
    ULONG64 TProgress_complex;
    struct Windows::Storage::Streams::IInputStream *TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> {
    struct IInspectable IInspectable;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> {
    struct IInspectable IInspectable;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    struct HSTRING__ *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *TResult_abi;
    struct IInspectable *TResult_logical;
    struct IInspectable *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<IInspectable *>;
    VOID IAsyncOperation_impl<IInspectable *>;
    VOID IAsyncOperation_impl<IInspectable *>;
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *TResult_abi;
    struct Windows::Foundation::Collections::IPropertySet *TResult_logical;
    struct Windows::Foundation::Collections::IPropertySet *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > {
    struct IInspectable IInspectable;
    struct Windows::Data::Xml::Dom::IXmlDocument *TResult_abi;
    Windows::Data::Xml::Dom::XmlDocument *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    struct IInspectable IInspectable;
    struct Windows::Foundation::IUriRuntimeClass *TResult_abi;
    Windows::Foundation::Uri *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::FileProperties::IBasicProperties *TResult_abi;
    Windows::Storage::FileProperties::BasicProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::FileProperties::IDocumentProperties *TResult_abi;
    Windows::Storage::FileProperties::DocumentProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::FileProperties::IImageProperties *TResult_abi;
    Windows::Storage::FileProperties::ImageProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::FileProperties::IMusicProperties *TResult_abi;
    Windows::Storage::FileProperties::MusicProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_abi;
    Windows::Storage::FileProperties::StorageItemThumbnail *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::FileProperties::IVideoProperties *TResult_abi;
    Windows::Storage::FileProperties::VideoProperties *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFile *TResult_abi;
    Windows::Storage::StorageFile *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageFolder *TResult_abi;
    Windows::Storage::StorageFolder *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageLibrary *TResult_abi;
    Windows::Storage::StorageLibrary *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageStreamTransaction *TResult_abi;
    Windows::Storage::StorageStreamTransaction *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_abi;
    Windows::Storage::Streams::RandomAccessStreamReference *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct IInspectable IInspectable;
    struct Windows::System::IUser *TResult_abi;
    Windows::System::User *TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR TResult_abi;
    BOOLEAN TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan TResult_abi;
    struct Windows::Foundation::TimeSpan TResult_logical;
    struct Windows::Foundation::TimeSpan TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::IStorageItem *TResult_abi;
    struct Windows::Storage::IStorageItem *TResult_logical;
    struct Windows::Storage::IStorageItem *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
    VOID IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IBuffer *TResult_abi;
    struct Windows::Storage::Streams::IBuffer *TResult_logical;
    struct Windows::Storage::Streams::IBuffer *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IInputStream *TResult_abi;
    struct Windows::Storage::Streams::IInputStream *TResult_logical;
    struct Windows::Storage::Streams::IInputStream *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IOutputStream *TResult_abi;
    struct Windows::Storage::Streams::IOutputStream *TResult_logical;
    struct Windows::Storage::Streams::IOutputStream *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStream *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct IInspectable IInspectable;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_abi;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_logical;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    VOID IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID TResult_abi;
    struct _GUID TResult_logical;
    struct _GUID TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<_GUID>;
    VOID IAsyncOperation_impl<_GUID>;
    VOID IAsyncOperation_impl<_GUID>;
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 TResult_abi;
    LONG64 TResult_logical;
    LONG64 TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<__int64>;
    VOID IAsyncOperation_impl<__int64>;
    VOID IAsyncOperation_impl<__int64>;
    struct Windows::Foundation::IAsyncOperation_impl<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus> {
    struct IInspectable IInspectable;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_abi;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_logical;
    enum Windows::Storage::Provider::FileUpdateStatus TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    VOID IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState> {
    struct IInspectable IInspectable;
    enum Windows::Storage::Search::IndexedState TResult_abi;
    enum Windows::Storage::Search::IndexedState TResult_logical;
    enum Windows::Storage::Search::IndexedState TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
    VOID IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<int> {
    struct IInspectable IInspectable;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<int>;
    VOID IAsyncOperation_impl<int>;
    VOID IAsyncOperation_impl<int>;
    struct Windows::Foundation::IAsyncOperation_impl<int> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<unsigned __int64>;
    VOID IAsyncOperation_impl<unsigned __int64>;
    VOID IAsyncOperation_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<unsigned int>;
    VOID IAsyncOperation_impl<unsigned int>;
    VOID IAsyncOperation_impl<unsigned int>;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IClosable {
    struct IInspectable IInspectable;
    HRESULT Close;
    VOID IClosable;
    VOID IClosable;
    VOID IClosable;
    struct Windows::Foundation::IClosable *operator=;
    struct Windows::Foundation::IClosable *operator=;
};

typedef struct Windows::Foundation::IDeferral {
    struct IInspectable IInspectable;
    HRESULT Complete;
    VOID IDeferral;
    VOID IDeferral;
    VOID IDeferral;
    struct Windows::Foundation::IDeferral *operator=;
    struct Windows::Foundation::IDeferral *operator=;
};

typedef struct Windows::Foundation::IDeferralCompletedHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IDeferralCompletedHandler;
    VOID IDeferralCompletedHandler;
    VOID IDeferralCompletedHandler;
    struct Windows::Foundation::IDeferralCompletedHandler *operator=;
    struct Windows::Foundation::IDeferralCompletedHandler *operator=;
};

typedef struct Windows::Foundation::IDeferralFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    VOID IDeferralFactory;
    VOID IDeferralFactory;
    VOID IDeferralFactory;
    struct Windows::Foundation::IDeferralFactory *operator=;
    struct Windows::Foundation::IDeferralFactory *operator=;
};

typedef struct Windows::Foundation::IEventHandler<HSTRING__ *> {
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> Windows::Foundation::IEventHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<HSTRING__ *>;
    VOID IEventHandler<HSTRING__ *>;
    VOID IEventHandler<HSTRING__ *>;
    struct Windows::Foundation::IEventHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::IEventHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<IInspectable *> {
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> Windows::Foundation::IEventHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<IInspectable *>;
    VOID IEventHandler<IInspectable *>;
    VOID IEventHandler<IInspectable *>;
    struct Windows::Foundation::IEventHandler<IInspectable *> *operator=;
    struct Windows::Foundation::IEventHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *> {
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> > Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>;
    VOID IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>;
    VOID IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>;
    struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *> *operator=;
    struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<bool> {
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<bool>;
    VOID IEventHandler<bool>;
    VOID IEventHandler<bool>;
    struct Windows::Foundation::IEventHandler<bool> *operator=;
    struct Windows::Foundation::IEventHandler<bool> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<HSTRING__ *>;
    VOID IEventHandler_impl<HSTRING__ *>;
    VOID IEventHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<IInspectable *>;
    VOID IEventHandler_impl<IInspectable *>;
    VOID IEventHandler_impl<IInspectable *>;
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> > {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *T_abi;
    Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *T_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> > *operator=;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> > *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IUnknown IUnknown;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IGuidHelperStatics {
    struct IInspectable IInspectable;
    HRESULT CreateNewGuid;
    HRESULT get_Empty;
    HRESULT Equals;
    VOID IGuidHelperStatics;
    VOID IGuidHelperStatics;
    VOID IGuidHelperStatics;
    struct Windows::Foundation::IGuidHelperStatics *operator=;
    struct Windows::Foundation::IGuidHelperStatics *operator=;
};

typedef struct Windows::Foundation::IMemoryBuffer {
    struct IInspectable IInspectable;
    HRESULT CreateReference;
    VOID IMemoryBuffer;
    VOID IMemoryBuffer;
    VOID IMemoryBuffer;
    struct Windows::Foundation::IMemoryBuffer *operator=;
    struct Windows::Foundation::IMemoryBuffer *operator=;
};

typedef struct Windows::Foundation::IMemoryBufferFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    VOID IMemoryBufferFactory;
    VOID IMemoryBufferFactory;
    VOID IMemoryBufferFactory;
    struct Windows::Foundation::IMemoryBufferFactory *operator=;
    struct Windows::Foundation::IMemoryBufferFactory *operator=;
};

typedef struct Windows::Foundation::IMemoryBufferReference {
    struct IInspectable IInspectable;
    HRESULT get_Capacity;
    HRESULT add_Closed;
    HRESULT remove_Closed;
    VOID IMemoryBufferReference;
    VOID IMemoryBufferReference;
    VOID IMemoryBufferReference;
    struct Windows::Foundation::IMemoryBufferReference *operator=;
    struct Windows::Foundation::IMemoryBufferReference *operator=;
};

typedef struct Windows::Foundation::IPropertyValue {
    struct IInspectable IInspectable;
    HRESULT get_Type;
    HRESULT get_IsNumericScalar;
    HRESULT GetUInt8;
    HRESULT GetInt16;
    HRESULT GetUInt16;
    HRESULT GetInt32;
    HRESULT GetUInt32;
    HRESULT GetInt64;
    HRESULT GetUInt64;
    HRESULT GetSingle;
    HRESULT GetDouble;
    HRESULT GetChar16;
    HRESULT GetBoolean;
    HRESULT GetString;
    HRESULT GetGuid;
    HRESULT GetDateTime;
    HRESULT GetTimeSpan;
    HRESULT GetPoint;
    HRESULT GetSize;
    HRESULT GetRect;
    HRESULT GetUInt8Array;
    HRESULT GetInt16Array;
    HRESULT GetUInt16Array;
    HRESULT GetInt32Array;
    HRESULT GetUInt32Array;
    HRESULT GetInt64Array;
    HRESULT GetUInt64Array;
    HRESULT GetSingleArray;
    HRESULT GetDoubleArray;
    HRESULT GetChar16Array;
    HRESULT GetBooleanArray;
    HRESULT GetStringArray;
    HRESULT GetInspectableArray;
    HRESULT GetGuidArray;
    HRESULT GetDateTimeArray;
    HRESULT GetTimeSpanArray;
    HRESULT GetPointArray;
    HRESULT GetSizeArray;
    HRESULT GetRectArray;
    VOID IPropertyValue;
    VOID IPropertyValue;
    VOID IPropertyValue;
    struct Windows::Foundation::IPropertyValue *operator=;
    struct Windows::Foundation::IPropertyValue *operator=;
};

typedef struct Windows::Foundation::IPropertyValueStatics {
    struct IInspectable IInspectable;
    HRESULT CreateEmpty;
    HRESULT CreateUInt8;
    HRESULT CreateInt16;
    HRESULT CreateUInt16;
    HRESULT CreateInt32;
    HRESULT CreateUInt32;
    HRESULT CreateInt64;
    HRESULT CreateUInt64;
    HRESULT CreateSingle;
    HRESULT CreateDouble;
    HRESULT CreateChar16;
    HRESULT CreateBoolean;
    HRESULT CreateString;
    HRESULT CreateInspectable;
    HRESULT CreateGuid;
    HRESULT CreateDateTime;
    HRESULT CreateTimeSpan;
    HRESULT CreatePoint;
    HRESULT CreateSize;
    HRESULT CreateRect;
    HRESULT CreateUInt8Array;
    HRESULT CreateInt16Array;
    HRESULT CreateUInt16Array;
    HRESULT CreateInt32Array;
    HRESULT CreateUInt32Array;
    HRESULT CreateInt64Array;
    HRESULT CreateUInt64Array;
    HRESULT CreateSingleArray;
    HRESULT CreateDoubleArray;
    HRESULT CreateChar16Array;
    HRESULT CreateBooleanArray;
    HRESULT CreateStringArray;
    HRESULT CreateInspectableArray;
    HRESULT CreateGuidArray;
    HRESULT CreateDateTimeArray;
    HRESULT CreateTimeSpanArray;
    HRESULT CreatePointArray;
    HRESULT CreateSizeArray;
    HRESULT CreateRectArray;
    VOID IPropertyValueStatics;
    VOID IPropertyValueStatics;
    VOID IPropertyValueStatics;
    struct Windows::Foundation::IPropertyValueStatics *operator=;
    struct Windows::Foundation::IPropertyValueStatics *operator=;
};

typedef struct Windows::Foundation::IReference<HSTRING__ *> {
    struct Windows::Foundation::IReference_impl<HSTRING__ *> Windows::Foundation::IReference_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<HSTRING__ *>;
    VOID IReference<HSTRING__ *>;
    VOID IReference<HSTRING__ *>;
    struct Windows::Foundation::IReference<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReference<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::DateTime> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::DateTime>;
    VOID IReference<Windows::Foundation::DateTime>;
    VOID IReference<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReference<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Point> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> Windows::Foundation::IReference_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Point>;
    VOID IReference<Windows::Foundation::Point>;
    VOID IReference<Windows::Foundation::Point>;
    struct Windows::Foundation::IReference<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Rect> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> Windows::Foundation::IReference_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Rect>;
    VOID IReference<Windows::Foundation::Rect>;
    VOID IReference<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReference<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Size> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> Windows::Foundation::IReference_impl<Windows::Foundation::Size>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Size>;
    VOID IReference<Windows::Foundation::Size>;
    VOID IReference<Windows::Foundation::Size>;
    struct Windows::Foundation::IReference<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::TimeSpan>;
    VOID IReference<Windows::Foundation::TimeSpan>;
    VOID IReference<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReference<_GUID> {
    struct Windows::Foundation::IReference_impl<_GUID> Windows::Foundation::IReference_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<_GUID>;
    VOID IReference<_GUID>;
    VOID IReference<_GUID>;
    struct Windows::Foundation::IReference<_GUID> *operator=;
    struct Windows::Foundation::IReference<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReference<__int64> {
    struct Windows::Foundation::IReference_impl<__int64> Windows::Foundation::IReference_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<__int64>;
    VOID IReference<__int64>;
    VOID IReference<__int64>;
    struct Windows::Foundation::IReference<__int64> *operator=;
    struct Windows::Foundation::IReference<__int64> *operator=;
};

typedef struct Windows::Foundation::IReference<bool> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<bool>;
    VOID IReference<bool>;
    VOID IReference<bool>;
    struct Windows::Foundation::IReference<bool> *operator=;
    struct Windows::Foundation::IReference<bool> *operator=;
};

typedef struct Windows::Foundation::IReference<double> {
    struct Windows::Foundation::IReference_impl<double> Windows::Foundation::IReference_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<double>;
    VOID IReference<double>;
    VOID IReference<double>;
    struct Windows::Foundation::IReference<double> *operator=;
    struct Windows::Foundation::IReference<double> *operator=;
};

typedef struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes> {
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes> Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<enum Windows::Storage::FileAttributes>;
    VOID IReference<enum Windows::Storage::FileAttributes>;
    VOID IReference<enum Windows::Storage::FileAttributes>;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes> *operator=;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes> *operator=;
};

typedef struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation> {
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation> Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<enum Windows::Storage::FileProperties::PhotoOrientation>;
    VOID IReference<enum Windows::Storage::FileProperties::PhotoOrientation>;
    VOID IReference<enum Windows::Storage::FileProperties::PhotoOrientation>;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation> *operator=;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation> *operator=;
};

typedef struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation> {
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation> Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<enum Windows::Storage::FileProperties::VideoOrientation>;
    VOID IReference<enum Windows::Storage::FileProperties::VideoOrientation>;
    VOID IReference<enum Windows::Storage::FileProperties::VideoOrientation>;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation> *operator=;
    struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation> *operator=;
};

typedef struct Windows::Foundation::IReference<float> {
    struct Windows::Foundation::IReference_impl<float> Windows::Foundation::IReference_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<float>;
    VOID IReference<float>;
    VOID IReference<float>;
    struct Windows::Foundation::IReference<float> *operator=;
    struct Windows::Foundation::IReference<float> *operator=;
};

typedef struct Windows::Foundation::IReference<int> {
    struct Windows::Foundation::IReference_impl<int> Windows::Foundation::IReference_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<int>;
    VOID IReference<int>;
    VOID IReference<int>;
    struct Windows::Foundation::IReference<int> *operator=;
    struct Windows::Foundation::IReference<int> *operator=;
};

typedef struct Windows::Foundation::IReference<short> {
    struct Windows::Foundation::IReference_impl<short> Windows::Foundation::IReference_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<short>;
    VOID IReference<short>;
    VOID IReference<short>;
    struct Windows::Foundation::IReference<short> *operator=;
    struct Windows::Foundation::IReference<short> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned __int64> {
    struct Windows::Foundation::IReference_impl<unsigned __int64> Windows::Foundation::IReference_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned __int64>;
    VOID IReference<unsigned __int64>;
    VOID IReference<unsigned __int64>;
    struct Windows::Foundation::IReference<unsigned __int64> *operator=;
    struct Windows::Foundation::IReference<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned char> {
    struct Windows::Foundation::IReference_impl<unsigned char> Windows::Foundation::IReference_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned char>;
    VOID IReference<unsigned char>;
    VOID IReference<unsigned char>;
    struct Windows::Foundation::IReference<unsigned char> *operator=;
    struct Windows::Foundation::IReference<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned int> {
    struct Windows::Foundation::IReference_impl<unsigned int> Windows::Foundation::IReference_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned int>;
    VOID IReference<unsigned int>;
    VOID IReference<unsigned int>;
    struct Windows::Foundation::IReference<unsigned int> *operator=;
    struct Windows::Foundation::IReference<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<HSTRING__ *> {
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> Windows::Foundation::IReferenceArray_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<HSTRING__ *>;
    VOID IReferenceArray<HSTRING__ *>;
    VOID IReferenceArray<HSTRING__ *>;
    struct Windows::Foundation::IReferenceArray<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReferenceArray<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<IInspectable *> {
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> Windows::Foundation::IReferenceArray_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<IInspectable *>;
    VOID IReferenceArray<IInspectable *>;
    VOID IReferenceArray<IInspectable *>;
    struct Windows::Foundation::IReferenceArray<IInspectable *> *operator=;
    struct Windows::Foundation::IReferenceArray<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Point>;
    VOID IReferenceArray<Windows::Foundation::Point>;
    VOID IReferenceArray<Windows::Foundation::Point>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Size>;
    VOID IReferenceArray<Windows::Foundation::Size>;
    VOID IReferenceArray<Windows::Foundation::Size>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<_GUID> {
    struct Windows::Foundation::IReferenceArray_impl<_GUID> Windows::Foundation::IReferenceArray_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<_GUID>;
    VOID IReferenceArray<_GUID>;
    VOID IReferenceArray<_GUID>;
    struct Windows::Foundation::IReferenceArray<_GUID> *operator=;
    struct Windows::Foundation::IReferenceArray<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<__int64> {
    struct Windows::Foundation::IReferenceArray_impl<__int64> Windows::Foundation::IReferenceArray_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<__int64>;
    VOID IReferenceArray<__int64>;
    VOID IReferenceArray<__int64>;
    struct Windows::Foundation::IReferenceArray<__int64> *operator=;
    struct Windows::Foundation::IReferenceArray<__int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<bool> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<bool>;
    VOID IReferenceArray<bool>;
    VOID IReferenceArray<bool>;
    struct Windows::Foundation::IReferenceArray<bool> *operator=;
    struct Windows::Foundation::IReferenceArray<bool> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<double> {
    struct Windows::Foundation::IReferenceArray_impl<double> Windows::Foundation::IReferenceArray_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<double>;
    VOID IReferenceArray<double>;
    VOID IReferenceArray<double>;
    struct Windows::Foundation::IReferenceArray<double> *operator=;
    struct Windows::Foundation::IReferenceArray<double> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<float> {
    struct Windows::Foundation::IReferenceArray_impl<float> Windows::Foundation::IReferenceArray_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<float>;
    VOID IReferenceArray<float>;
    VOID IReferenceArray<float>;
    struct Windows::Foundation::IReferenceArray<float> *operator=;
    struct Windows::Foundation::IReferenceArray<float> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<int> {
    struct Windows::Foundation::IReferenceArray_impl<int> Windows::Foundation::IReferenceArray_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<int>;
    VOID IReferenceArray<int>;
    VOID IReferenceArray<int>;
    struct Windows::Foundation::IReferenceArray<int> *operator=;
    struct Windows::Foundation::IReferenceArray<int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<short> {
    struct Windows::Foundation::IReferenceArray_impl<short> Windows::Foundation::IReferenceArray_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<short>;
    VOID IReferenceArray<short>;
    VOID IReferenceArray<short>;
    struct Windows::Foundation::IReferenceArray<short> *operator=;
    struct Windows::Foundation::IReferenceArray<short> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned __int64> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> Windows::Foundation::IReferenceArray_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned __int64>;
    VOID IReferenceArray<unsigned __int64>;
    VOID IReferenceArray<unsigned __int64>;
    struct Windows::Foundation::IReferenceArray<unsigned __int64> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned char> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> Windows::Foundation::IReferenceArray_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned char>;
    VOID IReferenceArray<unsigned char>;
    VOID IReferenceArray<unsigned char>;
    struct Windows::Foundation::IReferenceArray<unsigned char> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned int> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> Windows::Foundation::IReferenceArray_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned int>;
    VOID IReferenceArray<unsigned int>;
    VOID IReferenceArray<unsigned int>;
    struct Windows::Foundation::IReferenceArray<unsigned int> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<HSTRING__ *>;
    VOID IReferenceArray_impl<HSTRING__ *>;
    VOID IReferenceArray_impl<HSTRING__ *>;
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<IInspectable *>;
    VOID IReferenceArray_impl<IInspectable *>;
    VOID IReferenceArray_impl<IInspectable *>;
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::DateTime T_abi;
    struct Windows::Foundation::DateTime T_logical;
    struct Windows::Foundation::DateTime T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Size T_abi;
    struct Windows::Foundation::Size T_logical;
    struct Windows::Foundation::Size T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan T_abi;
    struct Windows::Foundation::TimeSpan T_logical;
    struct Windows::Foundation::TimeSpan T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<_GUID>;
    VOID IReferenceArray_impl<_GUID>;
    VOID IReferenceArray_impl<_GUID>;
    struct Windows::Foundation::IReferenceArray_impl<_GUID> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<__int64>;
    VOID IReferenceArray_impl<__int64>;
    VOID IReferenceArray_impl<__int64>;
    struct Windows::Foundation::IReferenceArray_impl<__int64> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<double>;
    VOID IReferenceArray_impl<double>;
    VOID IReferenceArray_impl<double>;
    struct Windows::Foundation::IReferenceArray_impl<double> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<double> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<float>;
    VOID IReferenceArray_impl<float>;
    VOID IReferenceArray_impl<float>;
    struct Windows::Foundation::IReferenceArray_impl<float> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<float> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<int>;
    VOID IReferenceArray_impl<int>;
    VOID IReferenceArray_impl<int>;
    struct Windows::Foundation::IReferenceArray_impl<int> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<short>;
    VOID IReferenceArray_impl<short>;
    VOID IReferenceArray_impl<short>;
    struct Windows::Foundation::IReferenceArray_impl<short> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<short> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned __int64>;
    VOID IReferenceArray_impl<unsigned __int64>;
    VOID IReferenceArray_impl<unsigned __int64>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned char>;
    VOID IReferenceArray_impl<unsigned char>;
    VOID IReferenceArray_impl<unsigned char>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned int>;
    VOID IReferenceArray_impl<unsigned int>;
    VOID IReferenceArray_impl<unsigned int>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Value;
    VOID IReference_impl<HSTRING__ *>;
    VOID IReference_impl<HSTRING__ *>;
    VOID IReference_impl<HSTRING__ *>;
    struct Windows::Foundation::IReference_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReference_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::DateTime T_abi;
    struct Windows::Foundation::DateTime T_logical;
    struct Windows::Foundation::DateTime T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Point>;
    VOID IReference_impl<Windows::Foundation::Point>;
    VOID IReference_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Rect>;
    VOID IReference_impl<Windows::Foundation::Rect>;
    VOID IReference_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Size T_abi;
    struct Windows::Foundation::Size T_logical;
    struct Windows::Foundation::Size T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Size>;
    VOID IReference_impl<Windows::Foundation::Size>;
    VOID IReference_impl<Windows::Foundation::Size>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan T_abi;
    struct Windows::Foundation::TimeSpan T_logical;
    struct Windows::Foundation::TimeSpan T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Value;
    VOID IReference_impl<_GUID>;
    VOID IReference_impl<_GUID>;
    VOID IReference_impl<_GUID>;
    struct Windows::Foundation::IReference_impl<_GUID> *operator=;
    struct Windows::Foundation::IReference_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Value;
    VOID IReference_impl<__int64>;
    VOID IReference_impl<__int64>;
    VOID IReference_impl<__int64>;
    struct Windows::Foundation::IReference_impl<__int64> *operator=;
    struct Windows::Foundation::IReference_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Value;
    VOID IReference_impl<double>;
    VOID IReference_impl<double>;
    VOID IReference_impl<double>;
    struct Windows::Foundation::IReference_impl<double> *operator=;
    struct Windows::Foundation::IReference_impl<double> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes> {
    struct IInspectable IInspectable;
    enum Windows::Storage::FileAttributes T_abi;
    enum Windows::Storage::FileAttributes T_logical;
    enum Windows::Storage::FileAttributes T_complex;
    HRESULT get_Value;
    VOID IReference_impl<enum Windows::Storage::FileAttributes>;
    VOID IReference_impl<enum Windows::Storage::FileAttributes>;
    VOID IReference_impl<enum Windows::Storage::FileAttributes>;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes> *operator=;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation> {
    struct IInspectable IInspectable;
    enum Windows::Storage::FileProperties::PhotoOrientation T_abi;
    enum Windows::Storage::FileProperties::PhotoOrientation T_logical;
    enum Windows::Storage::FileProperties::PhotoOrientation T_complex;
    HRESULT get_Value;
    VOID IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
    VOID IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
    VOID IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation> *operator=;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation> {
    struct IInspectable IInspectable;
    enum Windows::Storage::FileProperties::VideoOrientation T_abi;
    enum Windows::Storage::FileProperties::VideoOrientation T_logical;
    enum Windows::Storage::FileProperties::VideoOrientation T_complex;
    HRESULT get_Value;
    VOID IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
    VOID IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
    VOID IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation> *operator=;
    struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Value;
    VOID IReference_impl<float>;
    VOID IReference_impl<float>;
    VOID IReference_impl<float>;
    struct Windows::Foundation::IReference_impl<float> *operator=;
    struct Windows::Foundation::IReference_impl<float> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Value;
    VOID IReference_impl<int>;
    VOID IReference_impl<int>;
    VOID IReference_impl<int>;
    struct Windows::Foundation::IReference_impl<int> *operator=;
    struct Windows::Foundation::IReference_impl<int> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Value;
    VOID IReference_impl<short>;
    VOID IReference_impl<short>;
    VOID IReference_impl<short>;
    struct Windows::Foundation::IReference_impl<short> *operator=;
    struct Windows::Foundation::IReference_impl<short> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned __int64>;
    VOID IReference_impl<unsigned __int64>;
    VOID IReference_impl<unsigned __int64>;
    struct Windows::Foundation::IReference_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned char>;
    VOID IReference_impl<unsigned char>;
    VOID IReference_impl<unsigned char>;
    struct Windows::Foundation::IReference_impl<unsigned char> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned int>;
    VOID IReference_impl<unsigned int>;
    VOID IReference_impl<unsigned int>;
    struct Windows::Foundation::IReference_impl<unsigned int> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IStringable {
    struct IInspectable IInspectable;
    HRESULT ToString;
    VOID IStringable;
    VOID IStringable;
    VOID IStringable;
    struct Windows::Foundation::IStringable *operator=;
    struct Windows::Foundation::IStringable *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>;
    VOID ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>;
    VOID ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>;
    VOID ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>;
    VOID ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>;
    VOID ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *TSender_abi;
    struct IInspectable *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct IInspectable *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::IMemoryBufferReference *TSender_abi;
    struct Windows::Foundation::IMemoryBufferReference *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Foundation::IMemoryBufferReference *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > {
    struct IUnknown IUnknown;
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *TSender_abi;
    Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *TSender_logical;
    struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *TArgs_abi;
    Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> TSender_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::Aggregat;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::Aggregat;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::Aggregat;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > {
    struct IUnknown IUnknown;
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *TSender_abi;
    Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *TSender_logical;
    struct Windows::Storage::AccessCache::IItemRemovedEventArgs *TArgs_abi;
    Windows::Storage::AccessCache::ItemRemovedEventArgs *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> TSender_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::S;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::S;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::S;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::IStorageLibrary *TSender_abi;
    Windows::Storage::StorageLibrary *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::System::IUserWatcher *TSender_abi;
    Windows::System::UserWatcher *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > {
    struct IUnknown IUnknown;
    struct Windows::System::IUserWatcher *TSender_abi;
    Windows::System::UserWatcher *TSender_logical;
    struct Windows::System::IUserAuthenticationStatusChangingEventArgs *TArgs_abi;
    Windows::System::UserAuthenticationStatusChangingEventArgs *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> TSender_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > {
    struct IUnknown IUnknown;
    struct Windows::System::IUserWatcher *TSender_abi;
    Windows::System::UserWatcher *TSender_logical;
    struct Windows::System::IUserChangedEventArgs *TArgs_abi;
    Windows::System::UserChangedEventArgs *TArgs_logical;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> TSender_complex;
    struct Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs;
    VOID ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *TSender_abi;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::Storage::Search::IStorageQueryResultBase *TSender_abi;
    struct Windows::Storage::Search::IStorageQueryResultBase *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Storage::Search::IStorageQueryResultBase *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IUriEscapeStatics {
    struct IInspectable IInspectable;
    HRESULT UnescapeComponent;
    HRESULT EscapeComponent;
    VOID IUriEscapeStatics;
    VOID IUriEscapeStatics;
    VOID IUriEscapeStatics;
    struct Windows::Foundation::IUriEscapeStatics *operator=;
    struct Windows::Foundation::IUriEscapeStatics *operator=;
};

typedef struct Windows::Foundation::IUriRuntimeClass {
    struct IInspectable IInspectable;
    HRESULT get_AbsoluteUri;
    HRESULT get_DisplayUri;
    HRESULT get_Domain;
    HRESULT get_Extension;
    HRESULT get_Fragment;
    HRESULT get_Host;
    HRESULT get_Password;
    HRESULT get_Path;
    HRESULT get_Query;
    HRESULT get_QueryParsed;
    HRESULT get_RawUri;
    HRESULT get_SchemeName;
    HRESULT get_UserName;
    HRESULT get_Port;
    HRESULT get_Suspicious;
    HRESULT Equals;
    HRESULT CombineUri;
    VOID IUriRuntimeClass;
    VOID IUriRuntimeClass;
    VOID IUriRuntimeClass;
    struct Windows::Foundation::IUriRuntimeClass *operator=;
    struct Windows::Foundation::IUriRuntimeClass *operator=;
};

typedef struct Windows::Foundation::IUriRuntimeClassFactory {
    struct IInspectable IInspectable;
    HRESULT CreateUri;
    HRESULT CreateWithRelativeUri;
    VOID IUriRuntimeClassFactory;
    VOID IUriRuntimeClassFactory;
    VOID IUriRuntimeClassFactory;
    struct Windows::Foundation::IUriRuntimeClassFactory *operator=;
    struct Windows::Foundation::IUriRuntimeClassFactory *operator=;
};

typedef struct Windows::Foundation::IUriRuntimeClassWithAbsoluteCanonicalUri {
    struct IInspectable IInspectable;
    HRESULT get_AbsoluteCanonicalUri;
    HRESULT get_DisplayIri;
    VOID IUriRuntimeClassWithAbsoluteCanonicalUri;
    VOID IUriRuntimeClassWithAbsoluteCanonicalUri;
    VOID IUriRuntimeClassWithAbsoluteCanonicalUri;
    struct Windows::Foundation::IUriRuntimeClassWithAbsoluteCanonicalUri *operator=;
    struct Windows::Foundation::IUriRuntimeClassWithAbsoluteCanonicalUri *operator=;
};

typedef struct Windows::Foundation::IWwwFormUrlDecoderEntry {
    struct IInspectable IInspectable;
    HRESULT get_Name;
    HRESULT get_Value;
    VOID IWwwFormUrlDecoderEntry;
    VOID IWwwFormUrlDecoderEntry;
    VOID IWwwFormUrlDecoderEntry;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *operator=;
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *operator=;
};

typedef struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass {
    struct IInspectable IInspectable;
    HRESULT GetFirstValueByName;
    VOID IWwwFormUrlDecoderRuntimeClass;
    VOID IWwwFormUrlDecoderRuntimeClass;
    VOID IWwwFormUrlDecoderRuntimeClass;
    struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass *operator=;
    struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass *operator=;
};

typedef struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClassFactory {
    struct IInspectable IInspectable;
    HRESULT CreateWwwFormUrlDecoder;
    VOID IWwwFormUrlDecoderRuntimeClassFactory;
    VOID IWwwFormUrlDecoderRuntimeClassFactory;
    VOID IWwwFormUrlDecoderRuntimeClassFactory;
    struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClassFactory *operator=;
    struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClassFactory *operator=;
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> {
};

typedef struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> {
};

typedef struct Windows::Foundation::Internal::GetAbiType<EventRegistrationToken> {
    struct EventRegistrationToken type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<HSTRING__ *> {
    struct HSTRING__ *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<IInspectable *> {
    struct IInspectable *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<IWeakReference *> {
    struct IWeakReference *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Data::Text::TextSegment> {
    struct Windows::Data::Text::TextSegment type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Data::Xml::Dom::IXmlNode *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IPropertySet *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::Collections::IVector<unsigned int> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::DateTime> {
    struct Windows::Foundation::DateTime type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IMemoryBufferReference *> {
    struct Windows::Foundation::IMemoryBufferReference *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::IPropertyValue *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > {
    struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > {
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > {
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > {
    struct Windows::Data::Xml::Dom::IXmlDocument *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    struct Windows::Foundation::IUriRuntimeClass *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > {
    struct Windows::Storage::AccessCache::IItemRemovedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> > {
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > {
    struct Windows::Storage::FileProperties::IBasicProperties *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > {
    struct Windows::Storage::FileProperties::IDocumentProperties *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > {
    struct Windows::Storage::FileProperties::IImageProperties *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > {
    struct Windows::Storage::FileProperties::IMusicProperties *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > {
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > {
    struct Windows::Storage::FileProperties::IVideoProperties *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    struct Windows::Storage::IStorageFile *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    struct Windows::Storage::IStorageFolder *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    struct Windows::Storage::IStorageLibrary *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > {
    struct Windows::Storage::IStorageLibraryChange *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > {
    struct Windows::Storage::IStorageStreamTransaction *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > {
    struct Windows::Storage::Streams::IRandomAccessStreamReference *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    struct Windows::System::IUser *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > {
    struct Windows::System::IUserAuthenticationStatusChangingEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > {
    struct Windows::System::IUserChangedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> > {
    struct Windows::System::IUserWatcher *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    UCHAR type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Point> {
    struct Windows::Foundation::Point type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Rect> {
    struct Windows::Foundation::Rect type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::Size> {
    struct Windows::Foundation::Size type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::TimeSpan type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Storage::AccessCache::AccessListEntry type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageFile *> {
    struct Windows::Storage::IStorageFile *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageFolder *> {
    struct Windows::Storage::IStorageFolder *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::IStorageItem *> {
    struct Windows::Storage::IStorageItem *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Search::IStorageQueryResultBase *> {
    struct Windows::Storage::Search::IStorageQueryResultBase *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Search::SortEntry> {
    struct Windows::Storage::Search::SortEntry type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Storage::Streams::IBuffer *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IInputStream *> {
    struct Windows::Storage::Streams::IInputStream *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IOutputStream *> {
    struct Windows::Storage::Streams::IOutputStream *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStream *> {
    struct Windows::Storage::Streams::IRandomAccessStream *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct Windows::Storage::Streams::IRandomAccessStreamReference *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<_GUID> {
    struct _GUID type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<__int64> {
    LONG64 type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<double> {
    DOUBLE type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileAttributes> {
    enum Windows::Storage::FileAttributes type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileProperties::PhotoOrientation> {
    enum Windows::Storage::FileProperties::PhotoOrientation type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::FileProperties::VideoOrientation> {
    enum Windows::Storage::FileProperties::VideoOrientation type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::Provider::FileUpdateStatus> {
    enum Windows::Storage::Provider::FileUpdateStatus type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<enum Windows::Storage::Search::IndexedState> {
    enum Windows::Storage::Search::IndexedState type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<float> {
    FLOAT type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<int> {
    LONG type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<short> {
    SHORT type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<unsigned __int64> {
    ULONG64 type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<unsigned char> {
    UCHAR type;
};

typedef struct Windows::Foundation::Internal::GetAbiType<unsigned int> {
    ULONG type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<EventRegistrationToken> {
    struct EventRegistrationToken type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<HSTRING__ *> {
    struct HSTRING__ *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<IInspectable *> {
    struct IInspectable *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<IWeakReference *> {
    struct IWeakReference *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> {
    struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *> {
    struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Data::Text::TextSegment> {
    struct Windows::Data::Text::TextSegment type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Data::Xml::Dom::IXmlNode *> {
    struct Windows::Data::Xml::Dom::IXmlNode *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IPropertySet *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::Collections::IVector<unsigned int> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *> {
    struct Windows::Foundation::Collections::IVectorView<Windows::System::User *> *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::DateTime> {
    struct Windows::Foundation::DateTime type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IMemoryBufferReference *> {
    struct Windows::Foundation::IMemoryBufferReference *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::IPropertyValue *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::IWwwFormUrlDecoderEntry *> {
    struct Windows::Foundation::IWwwFormUrlDecoderEntry *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> > {
    Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> > {
    Windows::ApplicationModel::Background::BackgroundTaskRegistration *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> > {
    Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Data::Xml::Dom::XmlDocument *,Windows::Data::Xml::Dom::IXmlDocument *> > {
    Windows::Data::Xml::Dom::XmlDocument *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> > {
    Windows::Foundation::Uri *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> > {
    Windows::Storage::AccessCache::ItemRemovedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *> > {
    Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    Windows::Storage::BulkAccess::FileInformation *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> > {
    Windows::Storage::BulkAccess::FolderInformation *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> > {
    Windows::Storage::FileProperties::BasicProperties *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> > {
    Windows::Storage::FileProperties::DocumentProperties *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> > {
    Windows::Storage::FileProperties::ImageProperties *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> > {
    Windows::Storage::FileProperties::MusicProperties *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> > {
    Windows::Storage::FileProperties::StorageItemThumbnail *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> > {
    Windows::Storage::FileProperties::VideoProperties *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> > {
    Windows::Storage::StorageFile *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> > {
    Windows::Storage::StorageFolder *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> > {
    Windows::Storage::StorageLibrary *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> > {
    Windows::Storage::StorageLibraryChange *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> > {
    Windows::Storage::StorageStreamTransaction *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> > {
    Windows::Storage::Streams::RandomAccessStreamReference *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> > {
    Windows::System::User *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> > {
    Windows::System::UserAuthenticationStatusChangingEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> > {
    Windows::System::UserChangedEventArgs *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *> > {
    Windows::System::UserWatcher *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    BOOLEAN type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Point> {
    struct Windows::Foundation::Point type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Rect> {
    struct Windows::Foundation::Rect type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::Size> {
    struct Windows::Foundation::Size type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::TimeSpan type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::AccessCache::AccessListEntry> {
    struct Windows::Storage::AccessCache::AccessListEntry type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::BulkAccess::IStorageItemInformation *> {
    struct Windows::Storage::BulkAccess::IStorageItemInformation *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageFile *> {
    struct Windows::Storage::IStorageFile *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageFolder *> {
    struct Windows::Storage::IStorageFolder *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::IStorageItem *> {
    struct Windows::Storage::IStorageItem *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Search::IStorageQueryResultBase *> {
    struct Windows::Storage::Search::IStorageQueryResultBase *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Search::SortEntry> {
    struct Windows::Storage::Search::SortEntry type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IBuffer *> {
    struct Windows::Storage::Streams::IBuffer *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IInputStream *> {
    struct Windows::Storage::Streams::IInputStream *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IOutputStream *> {
    struct Windows::Storage::Streams::IOutputStream *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStream *> {
    struct Windows::Storage::Streams::IRandomAccessStream *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStreamReference *> {
    struct Windows::Storage::Streams::IRandomAccessStreamReference *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<Windows::Storage::Streams::IRandomAccessStreamWithContentType *> {
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<_GUID> {
    struct _GUID type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<__int64> {
    LONG64 type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<double> {
    DOUBLE type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileAttributes> {
    enum Windows::Storage::FileAttributes type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileProperties::PhotoOrientation> {
    enum Windows::Storage::FileProperties::PhotoOrientation type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::FileProperties::VideoOrientation> {
    enum Windows::Storage::FileProperties::VideoOrientation type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::Provider::FileUpdateStatus> {
    enum Windows::Storage::Provider::FileUpdateStatus type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<enum Windows::Storage::Search::IndexedState> {
    enum Windows::Storage::Search::IndexedState type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<float> {
    FLOAT type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<int> {
    LONG type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<short> {
    SHORT type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<unsigned __int64> {
    ULONG64 type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<unsigned char> {
    UCHAR type;
};

typedef struct Windows::Foundation::Internal::GetLogicalType<unsigned int> {
    ULONG type;
};

typedef struct Windows::Foundation::Point {
    FLOAT X;
    FLOAT Y;
};

typedef struct Windows::Foundation::Rect {
    FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};

typedef struct Windows::Foundation::Size {
    FLOAT Width;
    FLOAT Height;
};

typedef struct Windows::Foundation::TimeSpan {
    LONG64 Duration;
};

typedef struct Windows::Internal::_StringDetail::dummy_t {
};

typedef struct Windows::Internal::_StringDetail::enable_if<1,Windows::Internal::_StringDetail::dummy_t> {
    struct Windows::Internal::_StringDetail::dummy_t type;
};

typedef struct Windows::Storage::AccessCache::AccessListEntry {
    struct HSTRING__ *Token;
    struct HSTRING__ *Metadata;
};

typedef struct Windows::Storage::AccessCache::IItemRemovedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_RemovedEntry;
    VOID IItemRemovedEventArgs;
    VOID IItemRemovedEventArgs;
    VOID IItemRemovedEventArgs;
    struct Windows::Storage::AccessCache::IItemRemovedEventArgs *operator=;
    struct Windows::Storage::AccessCache::IItemRemovedEventArgs *operator=;
};

typedef struct Windows::Storage::AccessCache::IStorageApplicationPermissionsStatics {
    struct IInspectable IInspectable;
    HRESULT get_FutureAccessList;
    HRESULT get_MostRecentlyUsedList;
    VOID IStorageApplicationPermissionsStatics;
    VOID IStorageApplicationPermissionsStatics;
    VOID IStorageApplicationPermissionsStatics;
    struct Windows::Storage::AccessCache::IStorageApplicationPermissionsStatics *operator=;
    struct Windows::Storage::AccessCache::IStorageApplicationPermissionsStatics *operator=;
};

typedef struct Windows::Storage::AccessCache::IStorageItemAccessList {
    struct IInspectable IInspectable;
    HRESULT AddOverloadDefaultMetadata;
    HRESULT Add;
    HRESULT AddOrReplaceOverloadDefaultMetadata;
    HRESULT AddOrReplace;
    HRESULT GetItemAsync;
    HRESULT GetFileAsync;
    HRESULT GetFolderAsync;
    HRESULT GetItemWithOptionsAsync;
    HRESULT GetFileWithOptionsAsync;
    HRESULT GetFolderWithOptionsAsync;
    HRESULT Remove;
    HRESULT ContainsItem;
    HRESULT Clear;
    HRESULT CheckAccess;
    HRESULT get_Entries;
    HRESULT get_MaximumItemsAllowed;
    VOID IStorageItemAccessList;
    VOID IStorageItemAccessList;
    VOID IStorageItemAccessList;
    struct Windows::Storage::AccessCache::IStorageItemAccessList *operator=;
    struct Windows::Storage::AccessCache::IStorageItemAccessList *operator=;
};

typedef struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList {
    struct IInspectable IInspectable;
    HRESULT add_ItemRemoved;
    HRESULT remove_ItemRemoved;
    VOID IStorageItemMostRecentlyUsedList;
    VOID IStorageItemMostRecentlyUsedList;
    VOID IStorageItemMostRecentlyUsedList;
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *operator=;
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *operator=;
};

typedef struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList2 {
    struct IInspectable IInspectable;
    HRESULT AddWithMetadataAndVisibility;
    HRESULT AddOrReplaceWithMetadataAndVisibility;
    VOID IStorageItemMostRecentlyUsedList2;
    VOID IStorageItemMostRecentlyUsedList2;
    VOID IStorageItemMostRecentlyUsedList2;
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList2 *operator=;
    struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList2 *operator=;
};

typedef struct Windows::Storage::BulkAccess::IFileInformationFactory {
    struct IInspectable IInspectable;
    HRESULT GetItemsAsync;
    HRESULT GetItemsAsyncDefaultStartAndCount;
    HRESULT GetFilesAsync;
    HRESULT GetFilesAsyncDefaultStartAndCount;
    HRESULT GetFoldersAsync;
    HRESULT GetFoldersAsyncDefaultStartAndCount;
    HRESULT GetVirtualizedItemsVector;
    HRESULT GetVirtualizedFilesVector;
    HRESULT GetVirtualizedFoldersVector;
    VOID IFileInformationFactory;
    VOID IFileInformationFactory;
    VOID IFileInformationFactory;
    struct Windows::Storage::BulkAccess::IFileInformationFactory *operator=;
    struct Windows::Storage::BulkAccess::IFileInformationFactory *operator=;
};

typedef struct Windows::Storage::BulkAccess::IFileInformationFactoryFactory {
    struct IInspectable IInspectable;
    HRESULT CreateWithMode;
    HRESULT CreateWithModeAndSize;
    HRESULT CreateWithModeAndSizeAndOptions;
    HRESULT CreateWithModeAndSizeAndOptionsAndFlags;
    VOID IFileInformationFactoryFactory;
    VOID IFileInformationFactoryFactory;
    VOID IFileInformationFactoryFactory;
    struct Windows::Storage::BulkAccess::IFileInformationFactoryFactory *operator=;
    struct Windows::Storage::BulkAccess::IFileInformationFactoryFactory *operator=;
};

typedef struct Windows::Storage::BulkAccess::IStorageItemInformation {
    struct IInspectable IInspectable;
    HRESULT get_MusicProperties;
    HRESULT get_VideoProperties;
    HRESULT get_ImageProperties;
    HRESULT get_DocumentProperties;
    HRESULT get_BasicProperties;
    HRESULT get_Thumbnail;
    HRESULT add_ThumbnailUpdated;
    HRESULT remove_ThumbnailUpdated;
    HRESULT add_PropertiesUpdated;
    HRESULT remove_PropertiesUpdated;
    VOID IStorageItemInformation;
    VOID IStorageItemInformation;
    VOID IStorageItemInformation;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *operator=;
    struct Windows::Storage::BulkAccess::IStorageItemInformation *operator=;
};

typedef struct Windows::Storage::FileProperties::IBasicProperties {
    struct IInspectable IInspectable;
    HRESULT get_Size;
    HRESULT get_DateModified;
    HRESULT get_ItemDate;
    VOID IBasicProperties;
    VOID IBasicProperties;
    VOID IBasicProperties;
    struct Windows::Storage::FileProperties::IBasicProperties *operator=;
    struct Windows::Storage::FileProperties::IBasicProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IDocumentProperties {
    struct IInspectable IInspectable;
    HRESULT get_Author;
    HRESULT get_Title;
    HRESULT put_Title;
    HRESULT get_Keywords;
    HRESULT get_Comment;
    HRESULT put_Comment;
    VOID IDocumentProperties;
    VOID IDocumentProperties;
    VOID IDocumentProperties;
    struct Windows::Storage::FileProperties::IDocumentProperties *operator=;
    struct Windows::Storage::FileProperties::IDocumentProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IImageProperties {
    struct IInspectable IInspectable;
    HRESULT get_Rating;
    HRESULT put_Rating;
    HRESULT get_Keywords;
    HRESULT get_DateTaken;
    HRESULT put_DateTaken;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT get_Title;
    HRESULT put_Title;
    HRESULT get_Latitude;
    HRESULT get_Longitude;
    HRESULT get_CameraManufacturer;
    HRESULT put_CameraManufacturer;
    HRESULT get_CameraModel;
    HRESULT put_CameraModel;
    HRESULT get_Orientation;
    HRESULT get_PeopleNames;
    VOID IImageProperties;
    VOID IImageProperties;
    VOID IImageProperties;
    struct Windows::Storage::FileProperties::IImageProperties *operator=;
    struct Windows::Storage::FileProperties::IImageProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IMusicProperties {
    struct IInspectable IInspectable;
    HRESULT get_Album;
    HRESULT put_Album;
    HRESULT get_Artist;
    HRESULT put_Artist;
    HRESULT get_Genre;
    HRESULT get_TrackNumber;
    HRESULT put_TrackNumber;
    HRESULT get_Title;
    HRESULT put_Title;
    HRESULT get_Rating;
    HRESULT put_Rating;
    HRESULT get_Duration;
    HRESULT get_Bitrate;
    HRESULT get_AlbumArtist;
    HRESULT put_AlbumArtist;
    HRESULT get_Composers;
    HRESULT get_Conductors;
    HRESULT get_Subtitle;
    HRESULT put_Subtitle;
    HRESULT get_Producers;
    HRESULT get_Publisher;
    HRESULT put_Publisher;
    HRESULT get_Writers;
    HRESULT get_Year;
    HRESULT put_Year;
    VOID IMusicProperties;
    VOID IMusicProperties;
    VOID IMusicProperties;
    struct Windows::Storage::FileProperties::IMusicProperties *operator=;
    struct Windows::Storage::FileProperties::IMusicProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IStorageItemContentProperties {
    struct IInspectable IInspectable;
    HRESULT GetMusicPropertiesAsync;
    HRESULT GetVideoPropertiesAsync;
    HRESULT GetImagePropertiesAsync;
    HRESULT GetDocumentPropertiesAsync;
    VOID IStorageItemContentProperties;
    VOID IStorageItemContentProperties;
    VOID IStorageItemContentProperties;
    struct Windows::Storage::FileProperties::IStorageItemContentProperties *operator=;
    struct Windows::Storage::FileProperties::IStorageItemContentProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IStorageItemExtraProperties {
    struct IInspectable IInspectable;
    HRESULT RetrievePropertiesAsync;
    HRESULT SavePropertiesAsync;
    HRESULT SavePropertiesAsyncOverloadDefault;
    VOID IStorageItemExtraProperties;
    VOID IStorageItemExtraProperties;
    VOID IStorageItemExtraProperties;
    struct Windows::Storage::FileProperties::IStorageItemExtraProperties *operator=;
    struct Windows::Storage::FileProperties::IStorageItemExtraProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IThumbnailProperties {
    struct IInspectable IInspectable;
    HRESULT get_OriginalWidth;
    HRESULT get_OriginalHeight;
    HRESULT get_ReturnedSmallerCachedSize;
    HRESULT get_Type;
    VOID IThumbnailProperties;
    VOID IThumbnailProperties;
    VOID IThumbnailProperties;
    struct Windows::Storage::FileProperties::IThumbnailProperties *operator=;
    struct Windows::Storage::FileProperties::IThumbnailProperties *operator=;
};

typedef struct Windows::Storage::FileProperties::IVideoProperties {
    struct IInspectable IInspectable;
    HRESULT get_Rating;
    HRESULT put_Rating;
    HRESULT get_Keywords;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT get_Duration;
    HRESULT get_Latitude;
    HRESULT get_Longitude;
    HRESULT get_Title;
    HRESULT put_Title;
    HRESULT get_Subtitle;
    HRESULT put_Subtitle;
    HRESULT get_Producers;
    HRESULT get_Publisher;
    HRESULT put_Publisher;
    HRESULT get_Writers;
    HRESULT get_Year;
    HRESULT put_Year;
    HRESULT get_Bitrate;
    HRESULT get_Directors;
    HRESULT get_Orientation;
    VOID IVideoProperties;
    VOID IVideoProperties;
    VOID IVideoProperties;
    struct Windows::Storage::FileProperties::IVideoProperties *operator=;
    struct Windows::Storage::FileProperties::IVideoProperties *operator=;
};

typedef struct Windows::Storage::IAppDataPaths {
    struct IInspectable IInspectable;
    HRESULT get_Cookies;
    HRESULT get_Desktop;
    HRESULT get_Documents;
    HRESULT get_Favorites;
    HRESULT get_History;
    HRESULT get_InternetCache;
    HRESULT get_LocalAppData;
    HRESULT get_ProgramData;
    HRESULT get_RoamingAppData;
    VOID IAppDataPaths;
    VOID IAppDataPaths;
    VOID IAppDataPaths;
    struct Windows::Storage::IAppDataPaths *operator=;
    struct Windows::Storage::IAppDataPaths *operator=;
};

typedef struct Windows::Storage::IAppDataPathsStatics {
    struct IInspectable IInspectable;
    HRESULT GetForUser;
    HRESULT GetDefault;
    VOID IAppDataPathsStatics;
    VOID IAppDataPathsStatics;
    VOID IAppDataPathsStatics;
    struct Windows::Storage::IAppDataPathsStatics *operator=;
    struct Windows::Storage::IAppDataPathsStatics *operator=;
};

typedef struct Windows::Storage::ICachedFileManagerStatics {
    struct IInspectable IInspectable;
    HRESULT DeferUpdates;
    HRESULT CompleteUpdatesAsync;
    VOID ICachedFileManagerStatics;
    VOID ICachedFileManagerStatics;
    VOID ICachedFileManagerStatics;
    struct Windows::Storage::ICachedFileManagerStatics *operator=;
    struct Windows::Storage::ICachedFileManagerStatics *operator=;
};

typedef struct Windows::Storage::IDownloadsFolderStatics {
    struct IInspectable IInspectable;
    HRESULT CreateFileAsync;
    HRESULT CreateFolderAsync;
    HRESULT CreateFileWithCollisionOptionAsync;
    HRESULT CreateFolderWithCollisionOptionAsync;
    VOID IDownloadsFolderStatics;
    VOID IDownloadsFolderStatics;
    VOID IDownloadsFolderStatics;
    struct Windows::Storage::IDownloadsFolderStatics *operator=;
    struct Windows::Storage::IDownloadsFolderStatics *operator=;
};

typedef struct Windows::Storage::IDownloadsFolderStatics2 {
    struct IInspectable IInspectable;
    HRESULT CreateFileForUserAsync;
    HRESULT CreateFolderForUserAsync;
    HRESULT CreateFileForUserWithCollisionOptionAsync;
    HRESULT CreateFolderForUserWithCollisionOptionAsync;
    VOID IDownloadsFolderStatics2;
    VOID IDownloadsFolderStatics2;
    VOID IDownloadsFolderStatics2;
    struct Windows::Storage::IDownloadsFolderStatics2 *operator=;
    struct Windows::Storage::IDownloadsFolderStatics2 *operator=;
};

typedef struct Windows::Storage::IFileIOStatics {
    struct IInspectable IInspectable;
    HRESULT ReadTextAsync;
    HRESULT ReadTextWithEncodingAsync;
    HRESULT WriteTextAsync;
    HRESULT WriteTextWithEncodingAsync;
    HRESULT AppendTextAsync;
    HRESULT AppendTextWithEncodingAsync;
    HRESULT ReadLinesAsync;
    HRESULT ReadLinesWithEncodingAsync;
    HRESULT WriteLinesAsync;
    HRESULT WriteLinesWithEncodingAsync;
    HRESULT AppendLinesAsync;
    HRESULT AppendLinesWithEncodingAsync;
    HRESULT ReadBufferAsync;
    HRESULT WriteBufferAsync;
    HRESULT WriteBytesAsync;
    VOID IFileIOStatics;
    VOID IFileIOStatics;
    VOID IFileIOStatics;
    struct Windows::Storage::IFileIOStatics *operator=;
    struct Windows::Storage::IFileIOStatics *operator=;
};

typedef struct Windows::Storage::IKnownFoldersCameraRollStatics {
    struct IInspectable IInspectable;
    HRESULT get_CameraRoll;
    VOID IKnownFoldersCameraRollStatics;
    VOID IKnownFoldersCameraRollStatics;
    VOID IKnownFoldersCameraRollStatics;
    struct Windows::Storage::IKnownFoldersCameraRollStatics *operator=;
    struct Windows::Storage::IKnownFoldersCameraRollStatics *operator=;
};

typedef struct Windows::Storage::IKnownFoldersPlaylistsStatics {
    struct IInspectable IInspectable;
    HRESULT get_Playlists;
    VOID IKnownFoldersPlaylistsStatics;
    VOID IKnownFoldersPlaylistsStatics;
    VOID IKnownFoldersPlaylistsStatics;
    struct Windows::Storage::IKnownFoldersPlaylistsStatics *operator=;
    struct Windows::Storage::IKnownFoldersPlaylistsStatics *operator=;
};

typedef struct Windows::Storage::IKnownFoldersSavedPicturesStatics {
    struct IInspectable IInspectable;
    HRESULT get_SavedPictures;
    VOID IKnownFoldersSavedPicturesStatics;
    VOID IKnownFoldersSavedPicturesStatics;
    VOID IKnownFoldersSavedPicturesStatics;
    struct Windows::Storage::IKnownFoldersSavedPicturesStatics *operator=;
    struct Windows::Storage::IKnownFoldersSavedPicturesStatics *operator=;
};

typedef struct Windows::Storage::IKnownFoldersStatics {
    struct IInspectable IInspectable;
    HRESULT get_MusicLibrary;
    HRESULT get_PicturesLibrary;
    HRESULT get_VideosLibrary;
    HRESULT get_DocumentsLibrary;
    HRESULT get_HomeGroup;
    HRESULT get_RemovableDevices;
    HRESULT get_MediaServerDevices;
    VOID IKnownFoldersStatics;
    VOID IKnownFoldersStatics;
    VOID IKnownFoldersStatics;
    struct Windows::Storage::IKnownFoldersStatics *operator=;
    struct Windows::Storage::IKnownFoldersStatics *operator=;
};

typedef struct Windows::Storage::IKnownFoldersStatics2 {
    struct IInspectable IInspectable;
    HRESULT get_Objects3D;
    HRESULT get_AppCaptures;
    HRESULT get_RecordedCalls;
    VOID IKnownFoldersStatics2;
    VOID IKnownFoldersStatics2;
    VOID IKnownFoldersStatics2;
    struct Windows::Storage::IKnownFoldersStatics2 *operator=;
    struct Windows::Storage::IKnownFoldersStatics2 *operator=;
};

typedef struct Windows::Storage::IKnownFoldersStatics3 {
    struct IInspectable IInspectable;
    HRESULT GetFolderForUserAsync;
    VOID IKnownFoldersStatics3;
    VOID IKnownFoldersStatics3;
    VOID IKnownFoldersStatics3;
    struct Windows::Storage::IKnownFoldersStatics3 *operator=;
    struct Windows::Storage::IKnownFoldersStatics3 *operator=;
};

typedef struct Windows::Storage::IPathIOStatics {
    struct IInspectable IInspectable;
    HRESULT ReadTextAsync;
    HRESULT ReadTextWithEncodingAsync;
    HRESULT WriteTextAsync;
    HRESULT WriteTextWithEncodingAsync;
    HRESULT AppendTextAsync;
    HRESULT AppendTextWithEncodingAsync;
    HRESULT ReadLinesAsync;
    HRESULT ReadLinesWithEncodingAsync;
    HRESULT WriteLinesAsync;
    HRESULT WriteLinesWithEncodingAsync;
    HRESULT AppendLinesAsync;
    HRESULT AppendLinesWithEncodingAsync;
    HRESULT ReadBufferAsync;
    HRESULT WriteBufferAsync;
    HRESULT WriteBytesAsync;
    VOID IPathIOStatics;
    VOID IPathIOStatics;
    VOID IPathIOStatics;
    struct Windows::Storage::IPathIOStatics *operator=;
    struct Windows::Storage::IPathIOStatics *operator=;
};

typedef struct Windows::Storage::IStorageFile {
    struct IInspectable IInspectable;
    HRESULT get_FileType;
    HRESULT get_ContentType;
    HRESULT OpenAsync;
    HRESULT OpenTransactedWriteAsync;
    HRESULT CopyOverloadDefaultNameAndOptions;
    HRESULT CopyOverloadDefaultOptions;
    HRESULT CopyOverload;
    HRESULT CopyAndReplaceAsync;
    HRESULT MoveOverloadDefaultNameAndOptions;
    HRESULT MoveOverloadDefaultOptions;
    HRESULT MoveOverload;
    HRESULT MoveAndReplaceAsync;
    VOID IStorageFile;
    VOID IStorageFile;
    VOID IStorageFile;
    struct Windows::Storage::IStorageFile *operator=;
    struct Windows::Storage::IStorageFile *operator=;
};

typedef struct Windows::Storage::IStorageFile2 {
    struct IInspectable IInspectable;
    HRESULT OpenWithOptionsAsync;
    HRESULT OpenTransactedWriteWithOptionsAsync;
    VOID IStorageFile2;
    VOID IStorageFile2;
    VOID IStorageFile2;
    struct Windows::Storage::IStorageFile2 *operator=;
    struct Windows::Storage::IStorageFile2 *operator=;
};

typedef struct Windows::Storage::IStorageFilePropertiesWithAvailability {
    struct IInspectable IInspectable;
    HRESULT get_IsAvailable;
    VOID IStorageFilePropertiesWithAvailability;
    VOID IStorageFilePropertiesWithAvailability;
    VOID IStorageFilePropertiesWithAvailability;
    struct Windows::Storage::IStorageFilePropertiesWithAvailability *operator=;
    struct Windows::Storage::IStorageFilePropertiesWithAvailability *operator=;
};

typedef struct Windows::Storage::IStorageFileStatics {
    struct IInspectable IInspectable;
    HRESULT GetFileFromPathAsync;
    HRESULT GetFileFromApplicationUriAsync;
    HRESULT CreateStreamedFileAsync;
    HRESULT ReplaceWithStreamedFileAsync;
    HRESULT CreateStreamedFileFromUriAsync;
    HRESULT ReplaceWithStreamedFileFromUriAsync;
    VOID IStorageFileStatics;
    VOID IStorageFileStatics;
    VOID IStorageFileStatics;
    struct Windows::Storage::IStorageFileStatics *operator=;
    struct Windows::Storage::IStorageFileStatics *operator=;
};

typedef struct Windows::Storage::IStorageFolder {
    struct IInspectable IInspectable;
    HRESULT CreateFileAsyncOverloadDefaultOptions;
    HRESULT CreateFileAsync;
    HRESULT CreateFolderAsyncOverloadDefaultOptions;
    HRESULT CreateFolderAsync;
    HRESULT GetFileAsync;
    HRESULT GetFolderAsync;
    HRESULT GetItemAsync;
    HRESULT GetFilesAsyncOverloadDefaultOptionsStartAndCount;
    HRESULT GetFoldersAsyncOverloadDefaultOptionsStartAndCount;
    HRESULT GetItemsAsyncOverloadDefaultStartAndCount;
    VOID IStorageFolder;
    VOID IStorageFolder;
    VOID IStorageFolder;
    struct Windows::Storage::IStorageFolder *operator=;
    struct Windows::Storage::IStorageFolder *operator=;
};

typedef struct Windows::Storage::IStorageFolder2 {
    struct IInspectable IInspectable;
    HRESULT TryGetItemAsync;
    VOID IStorageFolder2;
    VOID IStorageFolder2;
    VOID IStorageFolder2;
    struct Windows::Storage::IStorageFolder2 *operator=;
    struct Windows::Storage::IStorageFolder2 *operator=;
};

typedef struct Windows::Storage::IStorageFolder3 {
    struct IInspectable IInspectable;
    HRESULT TryGetChangeTracker;
    VOID IStorageFolder3;
    VOID IStorageFolder3;
    VOID IStorageFolder3;
    struct Windows::Storage::IStorageFolder3 *operator=;
    struct Windows::Storage::IStorageFolder3 *operator=;
};

typedef struct Windows::Storage::IStorageFolderStatics {
    struct IInspectable IInspectable;
    HRESULT GetFolderFromPathAsync;
    VOID IStorageFolderStatics;
    VOID IStorageFolderStatics;
    VOID IStorageFolderStatics;
    struct Windows::Storage::IStorageFolderStatics *operator=;
    struct Windows::Storage::IStorageFolderStatics *operator=;
};

typedef struct Windows::Storage::IStorageItem {
    struct IInspectable IInspectable;
    HRESULT RenameAsyncOverloadDefaultOptions;
    HRESULT RenameAsync;
    HRESULT DeleteAsyncOverloadDefaultOptions;
    HRESULT DeleteAsync;
    HRESULT GetBasicPropertiesAsync;
    HRESULT get_Name;
    HRESULT get_Path;
    HRESULT get_Attributes;
    HRESULT get_DateCreated;
    HRESULT IsOfType;
    VOID IStorageItem;
    VOID IStorageItem;
    VOID IStorageItem;
    struct Windows::Storage::IStorageItem *operator=;
    struct Windows::Storage::IStorageItem *operator=;
};

typedef struct Windows::Storage::IStorageItem2 {
    struct IInspectable IInspectable;
    HRESULT GetParentAsync;
    HRESULT IsEqual;
    VOID IStorageItem2;
    VOID IStorageItem2;
    VOID IStorageItem2;
    struct Windows::Storage::IStorageItem2 *operator=;
    struct Windows::Storage::IStorageItem2 *operator=;
};

typedef struct Windows::Storage::IStorageItemProperties {
    struct IInspectable IInspectable;
    HRESULT GetThumbnailAsyncOverloadDefaultSizeDefaultOptions;
    HRESULT GetThumbnailAsyncOverloadDefaultOptions;
    HRESULT GetThumbnailAsync;
    HRESULT get_DisplayName;
    HRESULT get_DisplayType;
    HRESULT get_FolderRelativeId;
    HRESULT get_Properties;
    VOID IStorageItemProperties;
    VOID IStorageItemProperties;
    VOID IStorageItemProperties;
    struct Windows::Storage::IStorageItemProperties *operator=;
    struct Windows::Storage::IStorageItemProperties *operator=;
};

typedef struct Windows::Storage::IStorageItemProperties2 {
    struct IInspectable IInspectable;
    HRESULT GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions;
    HRESULT GetScaledImageAsThumbnailAsyncOverloadDefaultOptions;
    HRESULT GetScaledImageAsThumbnailAsync;
    VOID IStorageItemProperties2;
    VOID IStorageItemProperties2;
    VOID IStorageItemProperties2;
    struct Windows::Storage::IStorageItemProperties2 *operator=;
    struct Windows::Storage::IStorageItemProperties2 *operator=;
};

typedef struct Windows::Storage::IStorageItemPropertiesWithProvider {
    struct IInspectable IInspectable;
    HRESULT get_Provider;
    VOID IStorageItemPropertiesWithProvider;
    VOID IStorageItemPropertiesWithProvider;
    VOID IStorageItemPropertiesWithProvider;
    struct Windows::Storage::IStorageItemPropertiesWithProvider *operator=;
    struct Windows::Storage::IStorageItemPropertiesWithProvider *operator=;
};

typedef struct Windows::Storage::IStorageLibrary {
    struct IInspectable IInspectable;
    HRESULT RequestAddFolderAsync;
    HRESULT RequestRemoveFolderAsync;
    HRESULT get_Folders;
    HRESULT get_SaveFolder;
    HRESULT add_DefinitionChanged;
    HRESULT remove_DefinitionChanged;
    VOID IStorageLibrary;
    VOID IStorageLibrary;
    VOID IStorageLibrary;
    struct Windows::Storage::IStorageLibrary *operator=;
    struct Windows::Storage::IStorageLibrary *operator=;
};

typedef struct Windows::Storage::IStorageLibrary2 {
    struct IInspectable IInspectable;
    HRESULT get_ChangeTracker;
    VOID IStorageLibrary2;
    VOID IStorageLibrary2;
    VOID IStorageLibrary2;
    struct Windows::Storage::IStorageLibrary2 *operator=;
    struct Windows::Storage::IStorageLibrary2 *operator=;
};

typedef struct Windows::Storage::IStorageLibrary3 {
    struct IInspectable IInspectable;
    HRESULT AreFolderSuggestionsAvailableAsync;
    VOID IStorageLibrary3;
    VOID IStorageLibrary3;
    VOID IStorageLibrary3;
    struct Windows::Storage::IStorageLibrary3 *operator=;
    struct Windows::Storage::IStorageLibrary3 *operator=;
};

typedef struct Windows::Storage::IStorageLibraryChange {
    struct IInspectable IInspectable;
    HRESULT get_ChangeType;
    HRESULT get_Path;
    HRESULT get_PreviousPath;
    HRESULT IsOfType;
    HRESULT GetStorageItemAsync;
    VOID IStorageLibraryChange;
    VOID IStorageLibraryChange;
    VOID IStorageLibraryChange;
    struct Windows::Storage::IStorageLibraryChange *operator=;
    struct Windows::Storage::IStorageLibraryChange *operator=;
};

typedef struct Windows::Storage::IStorageLibraryChangeReader {
    struct IInspectable IInspectable;
    HRESULT ReadBatchAsync;
    HRESULT AcceptChangesAsync;
    VOID IStorageLibraryChangeReader;
    VOID IStorageLibraryChangeReader;
    VOID IStorageLibraryChangeReader;
    struct Windows::Storage::IStorageLibraryChangeReader *operator=;
    struct Windows::Storage::IStorageLibraryChangeReader *operator=;
};

typedef struct Windows::Storage::IStorageLibraryChangeTracker {
    struct IInspectable IInspectable;
    HRESULT GetChangeReader;
    HRESULT Enable;
    HRESULT Reset;
    VOID IStorageLibraryChangeTracker;
    VOID IStorageLibraryChangeTracker;
    VOID IStorageLibraryChangeTracker;
    struct Windows::Storage::IStorageLibraryChangeTracker *operator=;
    struct Windows::Storage::IStorageLibraryChangeTracker *operator=;
};

typedef struct Windows::Storage::IStorageLibraryStatics {
    struct IInspectable IInspectable;
    HRESULT GetLibraryAsync;
    VOID IStorageLibraryStatics;
    VOID IStorageLibraryStatics;
    VOID IStorageLibraryStatics;
    struct Windows::Storage::IStorageLibraryStatics *operator=;
    struct Windows::Storage::IStorageLibraryStatics *operator=;
};

typedef struct Windows::Storage::IStorageLibraryStatics2 {
    struct IInspectable IInspectable;
    HRESULT GetLibraryForUserAsync;
    VOID IStorageLibraryStatics2;
    VOID IStorageLibraryStatics2;
    VOID IStorageLibraryStatics2;
    struct Windows::Storage::IStorageLibraryStatics2 *operator=;
    struct Windows::Storage::IStorageLibraryStatics2 *operator=;
};

typedef struct Windows::Storage::IStorageProvider {
    struct IInspectable IInspectable;
    HRESULT get_Id;
    HRESULT get_DisplayName;
    VOID IStorageProvider;
    VOID IStorageProvider;
    VOID IStorageProvider;
    struct Windows::Storage::IStorageProvider *operator=;
    struct Windows::Storage::IStorageProvider *operator=;
};

typedef struct Windows::Storage::IStorageProvider2 {
    struct IInspectable IInspectable;
    HRESULT IsPropertySupportedForPartialFileAsync;
    VOID IStorageProvider2;
    VOID IStorageProvider2;
    VOID IStorageProvider2;
    struct Windows::Storage::IStorageProvider2 *operator=;
    struct Windows::Storage::IStorageProvider2 *operator=;
};

typedef struct Windows::Storage::IStorageStreamTransaction {
    struct IInspectable IInspectable;
    HRESULT get_Stream;
    HRESULT CommitAsync;
    VOID IStorageStreamTransaction;
    VOID IStorageStreamTransaction;
    VOID IStorageStreamTransaction;
    struct Windows::Storage::IStorageStreamTransaction *operator=;
    struct Windows::Storage::IStorageStreamTransaction *operator=;
};

typedef struct Windows::Storage::IStreamedFileDataRequest {
    struct IInspectable IInspectable;
    HRESULT FailAndClose;
    VOID IStreamedFileDataRequest;
    VOID IStreamedFileDataRequest;
    VOID IStreamedFileDataRequest;
    struct Windows::Storage::IStreamedFileDataRequest *operator=;
    struct Windows::Storage::IStreamedFileDataRequest *operator=;
};

typedef struct Windows::Storage::IStreamedFileDataRequestedHandler {
    struct IUnknown IUnknown;
    HRESULT Invoke;
    VOID IStreamedFileDataRequestedHandler;
    VOID IStreamedFileDataRequestedHandler;
    VOID IStreamedFileDataRequestedHandler;
    struct Windows::Storage::IStreamedFileDataRequestedHandler *operator=;
    struct Windows::Storage::IStreamedFileDataRequestedHandler *operator=;
};

typedef struct Windows::Storage::ISystemDataPaths {
    struct IInspectable IInspectable;
    HRESULT get_Fonts;
    HRESULT get_ProgramData;
    HRESULT get_Public;
    HRESULT get_PublicDesktop;
    HRESULT get_PublicDocuments;
    HRESULT get_PublicDownloads;
    HRESULT get_PublicMusic;
    HRESULT get_PublicPictures;
    HRESULT get_PublicVideos;
    HRESULT get_System;
    HRESULT get_SystemHost;
    HRESULT get_SystemX86;
    HRESULT get_SystemX64;
    HRESULT get_SystemArm;
    HRESULT get_UserProfiles;
    HRESULT get_Windows;
    VOID ISystemDataPaths;
    VOID ISystemDataPaths;
    VOID ISystemDataPaths;
    struct Windows::Storage::ISystemDataPaths *operator=;
    struct Windows::Storage::ISystemDataPaths *operator=;
};

typedef struct Windows::Storage::ISystemDataPathsStatics {
    struct IInspectable IInspectable;
    HRESULT GetDefault;
    VOID ISystemDataPathsStatics;
    VOID ISystemDataPathsStatics;
    VOID ISystemDataPathsStatics;
    struct Windows::Storage::ISystemDataPathsStatics *operator=;
    struct Windows::Storage::ISystemDataPathsStatics *operator=;
};

typedef struct Windows::Storage::IUserDataPaths {
    struct IInspectable IInspectable;
    HRESULT get_CameraRoll;
    HRESULT get_Cookies;
    HRESULT get_Desktop;
    HRESULT get_Documents;
    HRESULT get_Downloads;
    HRESULT get_Favorites;
    HRESULT get_History;
    HRESULT get_InternetCache;
    HRESULT get_LocalAppData;
    HRESULT get_LocalAppDataLow;
    HRESULT get_Music;
    HRESULT get_Pictures;
    HRESULT get_Profile;
    HRESULT get_Recent;
    HRESULT get_RoamingAppData;
    HRESULT get_SavedPictures;
    HRESULT get_Screenshots;
    HRESULT get_Templates;
    HRESULT get_Videos;
    VOID IUserDataPaths;
    VOID IUserDataPaths;
    VOID IUserDataPaths;
    struct Windows::Storage::IUserDataPaths *operator=;
    struct Windows::Storage::IUserDataPaths *operator=;
};

typedef struct Windows::Storage::IUserDataPathsStatics {
    struct IInspectable IInspectable;
    HRESULT GetForUser;
    HRESULT GetDefault;
    VOID IUserDataPathsStatics;
    VOID IUserDataPathsStatics;
    VOID IUserDataPathsStatics;
    struct Windows::Storage::IUserDataPathsStatics *operator=;
    struct Windows::Storage::IUserDataPathsStatics *operator=;
};

typedef struct Windows::Storage::Pickers::IFileOpenPicker {
    struct IInspectable IInspectable;
    HRESULT get_ViewMode;
    HRESULT put_ViewMode;
    HRESULT get_SettingsIdentifier;
    HRESULT put_SettingsIdentifier;
    HRESULT get_SuggestedStartLocation;
    HRESULT put_SuggestedStartLocation;
    HRESULT get_CommitButtonText;
    HRESULT put_CommitButtonText;
    HRESULT get_FileTypeFilter;
    HRESULT PickSingleFileAsync;
    HRESULT PickMultipleFilesAsync;
    VOID IFileOpenPicker;
    VOID IFileOpenPicker;
    VOID IFileOpenPicker;
    struct Windows::Storage::Pickers::IFileOpenPicker *operator=;
    struct Windows::Storage::Pickers::IFileOpenPicker *operator=;
};

typedef struct Windows::Storage::Pickers::IFileOpenPicker2 {
    struct IInspectable IInspectable;
    HRESULT get_ContinuationData;
    HRESULT PickSingleFileAndContinue;
    HRESULT PickMultipleFilesAndContinue;
    VOID IFileOpenPicker2;
    VOID IFileOpenPicker2;
    VOID IFileOpenPicker2;
    struct Windows::Storage::Pickers::IFileOpenPicker2 *operator=;
    struct Windows::Storage::Pickers::IFileOpenPicker2 *operator=;
};

typedef struct Windows::Storage::Pickers::IFileOpenPickerStatics {
    struct IInspectable IInspectable;
    HRESULT ResumePickSingleFileAsync;
    VOID IFileOpenPickerStatics;
    VOID IFileOpenPickerStatics;
    VOID IFileOpenPickerStatics;
    struct Windows::Storage::Pickers::IFileOpenPickerStatics *operator=;
    struct Windows::Storage::Pickers::IFileOpenPickerStatics *operator=;
};

typedef struct Windows::Storage::Pickers::IFileOpenPickerWithOperationId {
    struct IInspectable IInspectable;
    HRESULT PickSingleFileAsync;
    VOID IFileOpenPickerWithOperationId;
    VOID IFileOpenPickerWithOperationId;
    VOID IFileOpenPickerWithOperationId;
    struct Windows::Storage::Pickers::IFileOpenPickerWithOperationId *operator=;
    struct Windows::Storage::Pickers::IFileOpenPickerWithOperationId *operator=;
};

typedef struct Windows::Storage::Pickers::IFileSavePicker {
    struct IInspectable IInspectable;
    HRESULT get_SettingsIdentifier;
    HRESULT put_SettingsIdentifier;
    HRESULT get_SuggestedStartLocation;
    HRESULT put_SuggestedStartLocation;
    HRESULT get_CommitButtonText;
    HRESULT put_CommitButtonText;
    HRESULT get_FileTypeChoices;
    HRESULT get_DefaultFileExtension;
    HRESULT put_DefaultFileExtension;
    HRESULT get_SuggestedSaveFile;
    HRESULT put_SuggestedSaveFile;
    HRESULT get_SuggestedFileName;
    HRESULT put_SuggestedFileName;
    HRESULT PickSaveFileAsync;
    VOID IFileSavePicker;
    VOID IFileSavePicker;
    VOID IFileSavePicker;
    struct Windows::Storage::Pickers::IFileSavePicker *operator=;
    struct Windows::Storage::Pickers::IFileSavePicker *operator=;
};

typedef struct Windows::Storage::Pickers::IFileSavePicker2 {
    struct IInspectable IInspectable;
    HRESULT get_ContinuationData;
    HRESULT PickSaveFileAndContinue;
    VOID IFileSavePicker2;
    VOID IFileSavePicker2;
    VOID IFileSavePicker2;
    struct Windows::Storage::Pickers::IFileSavePicker2 *operator=;
    struct Windows::Storage::Pickers::IFileSavePicker2 *operator=;
};

typedef struct Windows::Storage::Pickers::IFileSavePicker3 {
    struct IInspectable IInspectable;
    HRESULT get_EnterpriseId;
    HRESULT put_EnterpriseId;
    VOID IFileSavePicker3;
    VOID IFileSavePicker3;
    VOID IFileSavePicker3;
    struct Windows::Storage::Pickers::IFileSavePicker3 *operator=;
    struct Windows::Storage::Pickers::IFileSavePicker3 *operator=;
};

typedef struct Windows::Storage::Pickers::IFolderPicker {
    struct IInspectable IInspectable;
    HRESULT get_ViewMode;
    HRESULT put_ViewMode;
    HRESULT get_SettingsIdentifier;
    HRESULT put_SettingsIdentifier;
    HRESULT get_SuggestedStartLocation;
    HRESULT put_SuggestedStartLocation;
    HRESULT get_CommitButtonText;
    HRESULT put_CommitButtonText;
    HRESULT get_FileTypeFilter;
    HRESULT PickSingleFolderAsync;
    VOID IFolderPicker;
    VOID IFolderPicker;
    VOID IFolderPicker;
    struct Windows::Storage::Pickers::IFolderPicker *operator=;
    struct Windows::Storage::Pickers::IFolderPicker *operator=;
};

typedef struct Windows::Storage::Pickers::IFolderPicker2 {
    struct IInspectable IInspectable;
    HRESULT get_ContinuationData;
    HRESULT PickFolderAndContinue;
    VOID IFolderPicker2;
    VOID IFolderPicker2;
    VOID IFolderPicker2;
    struct Windows::Storage::Pickers::IFolderPicker2 *operator=;
    struct Windows::Storage::Pickers::IFolderPicker2 *operator=;
};

typedef struct Windows::Storage::Provider::ICachedFileUpdaterStatics {
    struct IInspectable IInspectable;
    HRESULT SetUpdateInformation;
    VOID ICachedFileUpdaterStatics;
    VOID ICachedFileUpdaterStatics;
    VOID ICachedFileUpdaterStatics;
    struct Windows::Storage::Provider::ICachedFileUpdaterStatics *operator=;
    struct Windows::Storage::Provider::ICachedFileUpdaterStatics *operator=;
};

typedef struct Windows::Storage::Provider::IStorageProviderPropertyCapabilities {
    struct IInspectable IInspectable;
    HRESULT IsPropertySupported;
    VOID IStorageProviderPropertyCapabilities;
    VOID IStorageProviderPropertyCapabilities;
    VOID IStorageProviderPropertyCapabilities;
    struct Windows::Storage::Provider::IStorageProviderPropertyCapabilities *operator=;
    struct Windows::Storage::Provider::IStorageProviderPropertyCapabilities *operator=;
};

typedef struct Windows::Storage::Search::IQueryOptions {
    struct IInspectable IInspectable;
    HRESULT get_FileTypeFilter;
    HRESULT get_FolderDepth;
    HRESULT put_FolderDepth;
    HRESULT get_ApplicationSearchFilter;
    HRESULT put_ApplicationSearchFilter;
    HRESULT get_UserSearchFilter;
    HRESULT put_UserSearchFilter;
    HRESULT get_Language;
    HRESULT put_Language;
    HRESULT get_IndexerOption;
    HRESULT put_IndexerOption;
    HRESULT get_SortOrder;
    HRESULT get_GroupPropertyName;
    HRESULT get_DateStackOption;
    HRESULT SaveToString;
    HRESULT LoadFromString;
    HRESULT SetThumbnailPrefetch;
    HRESULT SetPropertyPrefetch;
    VOID IQueryOptions;
    VOID IQueryOptions;
    VOID IQueryOptions;
    struct Windows::Storage::Search::IQueryOptions *operator=;
    struct Windows::Storage::Search::IQueryOptions *operator=;
};

typedef struct Windows::Storage::Search::IQueryOptionsFactory {
    struct IInspectable IInspectable;
    HRESULT CreateCommonFileQuery;
    HRESULT CreateCommonFolderQuery;
    VOID IQueryOptionsFactory;
    VOID IQueryOptionsFactory;
    VOID IQueryOptionsFactory;
    struct Windows::Storage::Search::IQueryOptionsFactory *operator=;
    struct Windows::Storage::Search::IQueryOptionsFactory *operator=;
};

typedef struct Windows::Storage::Search::IQueryOptionsWithProviderFilter {
    struct IInspectable IInspectable;
    HRESULT get_StorageProviderIdFilter;
    VOID IQueryOptionsWithProviderFilter;
    VOID IQueryOptionsWithProviderFilter;
    VOID IQueryOptionsWithProviderFilter;
    struct Windows::Storage::Search::IQueryOptionsWithProviderFilter *operator=;
    struct Windows::Storage::Search::IQueryOptionsWithProviderFilter *operator=;
};

typedef struct Windows::Storage::Search::IStorageFileQueryResult {
    struct IInspectable IInspectable;
    HRESULT GetFilesAsync;
    HRESULT GetFilesAsyncDefaultStartAndCount;
    VOID IStorageFileQueryResult;
    VOID IStorageFileQueryResult;
    VOID IStorageFileQueryResult;
    struct Windows::Storage::Search::IStorageFileQueryResult *operator=;
    struct Windows::Storage::Search::IStorageFileQueryResult *operator=;
};

typedef struct Windows::Storage::Search::IStorageFileQueryResult2 {
    struct IInspectable IInspectable;
    HRESULT GetMatchingPropertiesWithRanges;
    VOID IStorageFileQueryResult2;
    VOID IStorageFileQueryResult2;
    VOID IStorageFileQueryResult2;
    struct Windows::Storage::Search::IStorageFileQueryResult2 *operator=;
    struct Windows::Storage::Search::IStorageFileQueryResult2 *operator=;
};

typedef struct Windows::Storage::Search::IStorageFolderQueryOperations {
    struct IInspectable IInspectable;
    HRESULT GetIndexedStateAsync;
    HRESULT CreateFileQueryOverloadDefault;
    HRESULT CreateFileQuery;
    HRESULT CreateFileQueryWithOptions;
    HRESULT CreateFolderQueryOverloadDefault;
    HRESULT CreateFolderQuery;
    HRESULT CreateFolderQueryWithOptions;
    HRESULT CreateItemQuery;
    HRESULT CreateItemQueryWithOptions;
    HRESULT GetFilesAsync;
    HRESULT GetFilesAsyncOverloadDefaultStartAndCount;
    HRESULT GetFoldersAsync;
    HRESULT GetFoldersAsyncOverloadDefaultStartAndCount;
    HRESULT GetItemsAsync;
    HRESULT AreQueryOptionsSupported;
    HRESULT IsCommonFolderQuerySupported;
    HRESULT IsCommonFileQuerySupported;
    VOID IStorageFolderQueryOperations;
    VOID IStorageFolderQueryOperations;
    VOID IStorageFolderQueryOperations;
    struct Windows::Storage::Search::IStorageFolderQueryOperations *operator=;
    struct Windows::Storage::Search::IStorageFolderQueryOperations *operator=;
};

typedef struct Windows::Storage::Search::IStorageFolderQueryResult {
    struct IInspectable IInspectable;
    HRESULT GetFoldersAsync;
    HRESULT GetFoldersAsyncDefaultStartAndCount;
    VOID IStorageFolderQueryResult;
    VOID IStorageFolderQueryResult;
    VOID IStorageFolderQueryResult;
    struct Windows::Storage::Search::IStorageFolderQueryResult *operator=;
    struct Windows::Storage::Search::IStorageFolderQueryResult *operator=;
};

typedef struct Windows::Storage::Search::IStorageItemQueryResult {
    struct IInspectable IInspectable;
    HRESULT GetItemsAsync;
    HRESULT GetItemsAsyncDefaultStartAndCount;
    VOID IStorageItemQueryResult;
    VOID IStorageItemQueryResult;
    VOID IStorageItemQueryResult;
    struct Windows::Storage::Search::IStorageItemQueryResult *operator=;
    struct Windows::Storage::Search::IStorageItemQueryResult *operator=;
};

typedef struct Windows::Storage::Search::IStorageLibraryChangeTrackerTriggerDetails {
    struct IInspectable IInspectable;
    HRESULT get_Folder;
    HRESULT get_ChangeTracker;
    VOID IStorageLibraryChangeTrackerTriggerDetails;
    VOID IStorageLibraryChangeTrackerTriggerDetails;
    VOID IStorageLibraryChangeTrackerTriggerDetails;
    struct Windows::Storage::Search::IStorageLibraryChangeTrackerTriggerDetails *operator=;
    struct Windows::Storage::Search::IStorageLibraryChangeTrackerTriggerDetails *operator=;
};

typedef struct Windows::Storage::Search::IStorageLibraryContentChangedTriggerDetails {
    struct IInspectable IInspectable;
    HRESULT get_Folder;
    HRESULT CreateModifiedSinceQuery;
    VOID IStorageLibraryContentChangedTriggerDetails;
    VOID IStorageLibraryContentChangedTriggerDetails;
    VOID IStorageLibraryContentChangedTriggerDetails;
    struct Windows::Storage::Search::IStorageLibraryContentChangedTriggerDetails *operator=;
    struct Windows::Storage::Search::IStorageLibraryContentChangedTriggerDetails *operator=;
};

typedef struct Windows::Storage::Search::IStorageQueryResultBase {
    struct IInspectable IInspectable;
    HRESULT GetItemCountAsync;
    HRESULT get_Folder;
    HRESULT add_ContentsChanged;
    HRESULT remove_ContentsChanged;
    HRESULT add_OptionsChanged;
    HRESULT remove_OptionsChanged;
    HRESULT FindStartIndexAsync;
    HRESULT GetCurrentQueryOptions;
    HRESULT ApplyNewQueryOptions;
    VOID IStorageQueryResultBase;
    VOID IStorageQueryResultBase;
    VOID IStorageQueryResultBase;
    struct Windows::Storage::Search::IStorageQueryResultBase *operator=;
    struct Windows::Storage::Search::IStorageQueryResultBase *operator=;
};

typedef struct Windows::Storage::Search::SortEntry {
    struct HSTRING__ *PropertyName;
    UCHAR AscendingOrder;
};

typedef struct Windows::Storage::Streams::IBuffer {
    struct IInspectable IInspectable;
    HRESULT get_Capacity;
    HRESULT get_Length;
    HRESULT put_Length;
    VOID IBuffer;
    VOID IBuffer;
    VOID IBuffer;
    struct Windows::Storage::Streams::IBuffer *operator=;
    struct Windows::Storage::Streams::IBuffer *operator=;
};

typedef struct Windows::Storage::Streams::IBufferByteAccess {
    struct IUnknown IUnknown;
    HRESULT Buffer;
    VOID IBufferByteAccess;
    VOID IBufferByteAccess;
    VOID IBufferByteAccess;
    struct Windows::Storage::Streams::IBufferByteAccess *operator=;
    struct Windows::Storage::Streams::IBufferByteAccess *operator=;
};

typedef struct Windows::Storage::Streams::IBufferFactory {
    struct IInspectable IInspectable;
    HRESULT Create;
    VOID IBufferFactory;
    VOID IBufferFactory;
    VOID IBufferFactory;
    struct Windows::Storage::Streams::IBufferFactory *operator=;
    struct Windows::Storage::Streams::IBufferFactory *operator=;
};

typedef struct Windows::Storage::Streams::IBufferStatics {
    struct IInspectable IInspectable;
    HRESULT CreateCopyFromMemoryBuffer;
    HRESULT CreateMemoryBufferOverIBuffer;
    VOID IBufferStatics;
    VOID IBufferStatics;
    VOID IBufferStatics;
    struct Windows::Storage::Streams::IBufferStatics *operator=;
    struct Windows::Storage::Streams::IBufferStatics *operator=;
};

typedef struct Windows::Storage::Streams::IContentTypeProvider {
    struct IInspectable IInspectable;
    HRESULT get_ContentType;
    VOID IContentTypeProvider;
    VOID IContentTypeProvider;
    VOID IContentTypeProvider;
    struct Windows::Storage::Streams::IContentTypeProvider *operator=;
    struct Windows::Storage::Streams::IContentTypeProvider *operator=;
};

typedef struct Windows::Storage::Streams::IDataReader {
    struct IInspectable IInspectable;
    HRESULT get_UnconsumedBufferLength;
    HRESULT get_UnicodeEncoding;
    HRESULT put_UnicodeEncoding;
    HRESULT get_ByteOrder;
    HRESULT put_ByteOrder;
    HRESULT get_InputStreamOptions;
    HRESULT put_InputStreamOptions;
    HRESULT ReadByte;
    HRESULT ReadBytes;
    HRESULT ReadBuffer;
    HRESULT ReadBoolean;
    HRESULT ReadGuid;
    HRESULT ReadInt16;
    HRESULT ReadInt32;
    HRESULT ReadInt64;
    HRESULT ReadUInt16;
    HRESULT ReadUInt32;
    HRESULT ReadUInt64;
    HRESULT ReadSingle;
    HRESULT ReadDouble;
    HRESULT ReadString;
    HRESULT ReadDateTime;
    HRESULT ReadTimeSpan;
    HRESULT LoadAsync;
    HRESULT DetachBuffer;
    HRESULT DetachStream;
    VOID IDataReader;
    VOID IDataReader;
    VOID IDataReader;
    struct Windows::Storage::Streams::IDataReader *operator=;
    struct Windows::Storage::Streams::IDataReader *operator=;
};

typedef struct Windows::Storage::Streams::IDataReaderFactory {
    struct IInspectable IInspectable;
    HRESULT CreateDataReader;
    VOID IDataReaderFactory;
    VOID IDataReaderFactory;
    VOID IDataReaderFactory;
    struct Windows::Storage::Streams::IDataReaderFactory *operator=;
    struct Windows::Storage::Streams::IDataReaderFactory *operator=;
};

typedef struct Windows::Storage::Streams::IDataReaderStatics {
    struct IInspectable IInspectable;
    HRESULT FromBuffer;
    VOID IDataReaderStatics;
    VOID IDataReaderStatics;
    VOID IDataReaderStatics;
    struct Windows::Storage::Streams::IDataReaderStatics *operator=;
    struct Windows::Storage::Streams::IDataReaderStatics *operator=;
};

typedef struct Windows::Storage::Streams::IDataWriter {
    struct IInspectable IInspectable;
    HRESULT get_UnstoredBufferLength;
    HRESULT get_UnicodeEncoding;
    HRESULT put_UnicodeEncoding;
    HRESULT get_ByteOrder;
    HRESULT put_ByteOrder;
    HRESULT WriteByte;
    HRESULT WriteBytes;
    HRESULT WriteBuffer;
    HRESULT WriteBufferRange;
    HRESULT WriteBoolean;
    HRESULT WriteGuid;
    HRESULT WriteInt16;
    HRESULT WriteInt32;
    HRESULT WriteInt64;
    HRESULT WriteUInt16;
    HRESULT WriteUInt32;
    HRESULT WriteUInt64;
    HRESULT WriteSingle;
    HRESULT WriteDouble;
    HRESULT WriteDateTime;
    HRESULT WriteTimeSpan;
    HRESULT WriteString;
    HRESULT MeasureString;
    HRESULT StoreAsync;
    HRESULT FlushAsync;
    HRESULT DetachBuffer;
    HRESULT DetachStream;
    VOID IDataWriter;
    VOID IDataWriter;
    VOID IDataWriter;
    struct Windows::Storage::Streams::IDataWriter *operator=;
    struct Windows::Storage::Streams::IDataWriter *operator=;
};

typedef struct Windows::Storage::Streams::IDataWriterFactory {
    struct IInspectable IInspectable;
    HRESULT CreateDataWriter;
    VOID IDataWriterFactory;
    VOID IDataWriterFactory;
    VOID IDataWriterFactory;
    struct Windows::Storage::Streams::IDataWriterFactory *operator=;
    struct Windows::Storage::Streams::IDataWriterFactory *operator=;
};

typedef struct Windows::Storage::Streams::IFileRandomAccessStreamStatics {
    struct IInspectable IInspectable;
    HRESULT OpenAsync;
    HRESULT OpenWithOptionsAsync;
    HRESULT OpenTransactedWriteAsync;
    HRESULT OpenTransactedWriteWithOptionsAsync;
    HRESULT OpenForUserAsync;
    HRESULT OpenForUserWithOptionsAsync;
    HRESULT OpenTransactedWriteForUserAsync;
    HRESULT OpenTransactedWriteForUserWithOptionsAsync;
    VOID IFileRandomAccessStreamStatics;
    VOID IFileRandomAccessStreamStatics;
    VOID IFileRandomAccessStreamStatics;
    struct Windows::Storage::Streams::IFileRandomAccessStreamStatics *operator=;
    struct Windows::Storage::Streams::IFileRandomAccessStreamStatics *operator=;
};

typedef struct Windows::Storage::Streams::IInputStream {
    struct IInspectable IInspectable;
    HRESULT ReadAsync;
    VOID IInputStream;
    VOID IInputStream;
    VOID IInputStream;
    struct Windows::Storage::Streams::IInputStream *operator=;
    struct Windows::Storage::Streams::IInputStream *operator=;
};

typedef struct Windows::Storage::Streams::IInputStreamReference {
    struct IInspectable IInspectable;
    HRESULT OpenSequentialReadAsync;
    VOID IInputStreamReference;
    VOID IInputStreamReference;
    VOID IInputStreamReference;
    struct Windows::Storage::Streams::IInputStreamReference *operator=;
    struct Windows::Storage::Streams::IInputStreamReference *operator=;
};

typedef struct Windows::Storage::Streams::IOutputStream {
    struct IInspectable IInspectable;
    HRESULT WriteAsync;
    HRESULT FlushAsync;
    VOID IOutputStream;
    VOID IOutputStream;
    VOID IOutputStream;
    struct Windows::Storage::Streams::IOutputStream *operator=;
    struct Windows::Storage::Streams::IOutputStream *operator=;
};

typedef struct Windows::Storage::Streams::IRandomAccessStream {
    struct IInspectable IInspectable;
    HRESULT get_Size;
    HRESULT put_Size;
    HRESULT GetInputStreamAt;
    HRESULT GetOutputStreamAt;
    HRESULT get_Position;
    HRESULT Seek;
    HRESULT CloneStream;
    HRESULT get_CanRead;
    HRESULT get_CanWrite;
    VOID IRandomAccessStream;
    VOID IRandomAccessStream;
    VOID IRandomAccessStream;
    struct Windows::Storage::Streams::IRandomAccessStream *operator=;
    struct Windows::Storage::Streams::IRandomAccessStream *operator=;
};

typedef struct Windows::Storage::Streams::IRandomAccessStreamReference {
    struct IInspectable IInspectable;
    HRESULT OpenReadAsync;
    VOID IRandomAccessStreamReference;
    VOID IRandomAccessStreamReference;
    VOID IRandomAccessStreamReference;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *operator=;
    struct Windows::Storage::Streams::IRandomAccessStreamReference *operator=;
};

typedef struct Windows::Storage::Streams::IRandomAccessStreamReferenceStatics {
    struct IInspectable IInspectable;
    HRESULT CreateFromFile;
    HRESULT CreateFromUri;
    HRESULT CreateFromStream;
    VOID IRandomAccessStreamReferenceStatics;
    VOID IRandomAccessStreamReferenceStatics;
    VOID IRandomAccessStreamReferenceStatics;
    struct Windows::Storage::Streams::IRandomAccessStreamReferenceStatics *operator=;
    struct Windows::Storage::Streams::IRandomAccessStreamReferenceStatics *operator=;
};

typedef struct Windows::Storage::Streams::IRandomAccessStreamStatics {
    struct IInspectable IInspectable;
    HRESULT CopyAsync;
    HRESULT CopySizeAsync;
    HRESULT CopyAndCloseAsync;
    VOID IRandomAccessStreamStatics;
    VOID IRandomAccessStreamStatics;
    VOID IRandomAccessStreamStatics;
    struct Windows::Storage::Streams::IRandomAccessStreamStatics *operator=;
    struct Windows::Storage::Streams::IRandomAccessStreamStatics *operator=;
};

typedef struct Windows::Storage::Streams::IRandomAccessStreamWithContentType {
    struct IInspectable IInspectable;
    VOID IRandomAccessStreamWithContentType;
    VOID IRandomAccessStreamWithContentType;
    VOID IRandomAccessStreamWithContentType;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *operator=;
    struct Windows::Storage::Streams::IRandomAccessStreamWithContentType *operator=;
};

typedef struct Windows::System::IKnownUserPropertiesStatics {
    struct IInspectable IInspectable;
    HRESULT get_DisplayName;
    HRESULT get_FirstName;
    HRESULT get_LastName;
    HRESULT get_ProviderName;
    HRESULT get_AccountName;
    HRESULT get_GuestHost;
    HRESULT get_PrincipalName;
    HRESULT get_DomainName;
    HRESULT get_SessionInitiationProtocolUri;
    VOID IKnownUserPropertiesStatics;
    VOID IKnownUserPropertiesStatics;
    VOID IKnownUserPropertiesStatics;
    struct Windows::System::IKnownUserPropertiesStatics *operator=;
    struct Windows::System::IKnownUserPropertiesStatics *operator=;
};

typedef struct Windows::System::IUser {
    struct IInspectable IInspectable;
    HRESULT get_NonRoamableId;
    HRESULT get_AuthenticationStatus;
    HRESULT get_Type;
    HRESULT GetPropertyAsync;
    HRESULT GetPropertiesAsync;
    HRESULT GetPictureAsync;
    VOID IUser;
    VOID IUser;
    VOID IUser;
    struct Windows::System::IUser *operator=;
    struct Windows::System::IUser *operator=;
};

typedef struct Windows::System::IUserAuthenticationStatusChangeDeferral {
    struct IInspectable IInspectable;
    HRESULT Complete;
    VOID IUserAuthenticationStatusChangeDeferral;
    VOID IUserAuthenticationStatusChangeDeferral;
    VOID IUserAuthenticationStatusChangeDeferral;
    struct Windows::System::IUserAuthenticationStatusChangeDeferral *operator=;
    struct Windows::System::IUserAuthenticationStatusChangeDeferral *operator=;
};

typedef struct Windows::System::IUserAuthenticationStatusChangingEventArgs {
    struct IInspectable IInspectable;
    HRESULT GetDeferral;
    HRESULT get_User;
    HRESULT get_NewStatus;
    HRESULT get_CurrentStatus;
    VOID IUserAuthenticationStatusChangingEventArgs;
    VOID IUserAuthenticationStatusChangingEventArgs;
    VOID IUserAuthenticationStatusChangingEventArgs;
    struct Windows::System::IUserAuthenticationStatusChangingEventArgs *operator=;
    struct Windows::System::IUserAuthenticationStatusChangingEventArgs *operator=;
};

typedef struct Windows::System::IUserChangedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_User;
    VOID IUserChangedEventArgs;
    VOID IUserChangedEventArgs;
    VOID IUserChangedEventArgs;
    struct Windows::System::IUserChangedEventArgs *operator=;
    struct Windows::System::IUserChangedEventArgs *operator=;
};

typedef struct Windows::System::IUserPicker {
    struct IInspectable IInspectable;
    HRESULT get_AllowGuestAccounts;
    HRESULT put_AllowGuestAccounts;
    HRESULT get_SuggestedSelectedUser;
    HRESULT put_SuggestedSelectedUser;
    HRESULT PickSingleUserAsync;
    VOID IUserPicker;
    VOID IUserPicker;
    VOID IUserPicker;
    struct Windows::System::IUserPicker *operator=;
    struct Windows::System::IUserPicker *operator=;
};

typedef struct Windows::System::IUserPickerStatics {
    struct IInspectable IInspectable;
    HRESULT IsSupported;
    VOID IUserPickerStatics;
    VOID IUserPickerStatics;
    VOID IUserPickerStatics;
    struct Windows::System::IUserPickerStatics *operator=;
    struct Windows::System::IUserPickerStatics *operator=;
};

typedef struct Windows::System::IUserStatics {
    struct IInspectable IInspectable;
    HRESULT CreateWatcher;
    HRESULT FindAllAsync;
    HRESULT FindAllAsyncByType;
    HRESULT FindAllAsyncByTypeAndStatus;
    HRESULT GetFromId;
    VOID IUserStatics;
    VOID IUserStatics;
    VOID IUserStatics;
    struct Windows::System::IUserStatics *operator=;
    struct Windows::System::IUserStatics *operator=;
};

typedef struct Windows::System::IUserStatics2 {
    struct IInspectable IInspectable;
    HRESULT GetDefault;
    VOID IUserStatics2;
    VOID IUserStatics2;
    VOID IUserStatics2;
    struct Windows::System::IUserStatics2 *operator=;
    struct Windows::System::IUserStatics2 *operator=;
};

typedef struct Windows::System::IUserWatcher {
    struct IInspectable IInspectable;
    HRESULT get_Status;
    HRESULT Start;
    HRESULT Stop;
    HRESULT add_Added;
    HRESULT remove_Added;
    HRESULT add_Removed;
    HRESULT remove_Removed;
    HRESULT add_Updated;
    HRESULT remove_Updated;
    HRESULT add_AuthenticationStatusChanged;
    HRESULT remove_AuthenticationStatusChanged;
    HRESULT add_AuthenticationStatusChanging;
    HRESULT remove_AuthenticationStatusChanging;
    HRESULT add_EnumerationCompleted;
    HRESULT remove_EnumerationCompleted;
    HRESULT add_Stopped;
    HRESULT remove_Stopped;
    VOID IUserWatcher;
    VOID IUserWatcher;
    VOID IUserWatcher;
    struct Windows::System::IUserWatcher *operator=;
    struct Windows::System::IUserWatcher *operator=;
};

typedef struct WinrtRtti {
    enum WinrtRttiKind Kind;
    ULONG Version;
    struct WinrtRtti *Namespace;
    PWCHAR Name;
    struct _MIDL_METHOD_PROPERTY_MAP PropertyMap;
};

typedef struct WinrtRttiDelegate_V1 {
    struct WinrtRtti _Base;
    struct _GUID *Iid;
};

typedef struct WinrtRttiInterface_V1 {
    struct WinrtRtti _Base;
    struct _GUID *Iid;
};

typedef struct WinrtRttiNamespace_V1 {
    struct WinrtRtti _Base;
};

typedef struct WinrtRttiParameterizedDelegateInstance_V1 {
    struct WinrtRtti _Base;
    struct _GUID *Iid;
    struct WinrtRtti *ParameterizedDelegate;
};

typedef struct WinrtRttiParameterizedDelegate_V1 {
    struct WinrtRtti _Base;
};

typedef struct WinrtRttiParameterizedInterfaceInstance_V1 {
    struct WinrtRtti _Base;
    struct _GUID *Iid;
    struct WinrtRtti *ParameterizedInterface;
};

typedef struct WinrtRttiParameterizedInterface_V1 {
    struct WinrtRtti _Base;
};

typedef struct WppPointerToUshort {
    USHORT m_val;
    VOID WppPointerToUshort;
    PUSHORT get;
};

typedef struct XAttributesImpl::AttrNameVal {
    NameDef *_namedefAttr;
    Name *_nmAttr;
    _reference<String> _strAttr;
    LONG _offset;
    LONG _len;
    VOID AttrNameVal;
    VOID AttrNameVal;
    VOID AttrNameVal;
    VOID ~AttrNameVal;
    struct XAttributesImpl::AttrNameVal *operator=;
    struct XAttributesImpl::AttrNameVal *operator=;
    PVOID __vecDelDtor;
};

typedef struct XCode::AddrInstr {
    struct XCode::Instruction XCode::Instruction;
    LONG64 _addr;
};

typedef struct XCode::BoolInstr {
    struct XCode::Instruction XCode::Instruction;
    BOOLEAN _bool;
};

typedef struct XCode::BrArgInstr {
    struct XCode::NameInstr XCode::NameInstr;
    ULONG64 _loc;
    LONG64 _addr;
};

typedef struct XCode::ExtFuncInstr {
    struct XCode::Instruction XCode::Instruction;
    PVOID _func;
};

typedef struct XCode::FltrInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG64 _evalgrp;
    LONG64 _evalpred;
};

typedef struct XCode::FltrRangeInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG _start;
    LONG _end;
};

typedef struct XCode::FrameInstr {
    struct XCode::SizeInstr XCode::SizeInstr;
};

typedef struct XCode::GlobalVarInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG64 _evalgbl;
};

typedef struct XCode::Instruction {
    PLONG64 _funcExec;
    ULONG64 _padding;
};

typedef struct XCode::IntInstr {
    struct XCode::Instruction XCode::Instruction;
    LONG _int;
};

typedef struct XCode::Local2Instr {
    struct XCode::LocalInstr XCode::LocalInstr;
    ULONG64 _loc2;
};

typedef struct XCode::LocalInstr {
    struct XCode::Instruction XCode::Instruction;
    ULONG64 _loc;
};

typedef struct XCode::LocalIntInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    LONG _int;
};

typedef struct XCode::NameDefInstr {
    struct XCode::Instruction XCode::Instruction;
    NameDef *_nmdef;
};

typedef struct XCode::NameDefStringInstr {
    struct XCode::NameDefInstr XCode::NameDefInstr;
    String *_str;
};

typedef struct XCode::NameInstr {
    struct XCode::Instruction XCode::Instruction;
    Name *_nm;
};

typedef struct XCode::NavFilterInstr {
    struct XCode::Instruction XCode::Instruction;
    NavFilter *_fltr;
};

typedef struct XCode::NodeTestInstr {
    struct XCode::LocalInstr XCode::LocalInstr;
    NavFilter *_fltr;
};

typedef struct XCode::ObjInstr {
    struct XCode::Instruction XCode::Instruction;
    Object *_obj;
};

typedef struct XCode::R8Instr {
    struct XCode::Instruction XCode::Instruction;
    DOUBLE _r8;
};

typedef struct XCode::SizeInstr {
    struct XCode::Instruction XCode::Instruction;
    ULONG64 _size;
};

typedef struct XCode::StringInstr {
    struct XCode::Instruction XCode::Instruction;
    String *_str;
};

typedef struct XCodeGen::BooleanFixup {
    struct XCodeGen::BooleanFixup *_nextFixup;
    USHORT _brtype;
    USHORT _labelTarget;
};

typedef struct XMLDOMDocumentEvents {
    struct IDispatch IDispatch;
    VOID XMLDOMDocumentEvents;
    VOID XMLDOMDocumentEvents;
    VOID XMLDOMDocumentEvents;
    struct XMLDOMDocumentEvents *operator=;
    struct XMLDOMDocumentEvents *operator=;
};

typedef struct XMLParser::Download {
    _reference<XMLStream> _pTokenizer;
    _reference<IURLStream> _pURLStream;
    _reference<EncodingStream> _pEncodingStream;
    BOOLEAN _fAsync;
    BOOLEAN _fDTD;
    BOOLEAN _fEntity;
    LONG _fPEReference;
    BOOLEAN _fInternalEntity;
    BOOLEAN _fFoundNonWS;
    BOOLEAN _fFoundRoot;
    BOOLEAN _fSeenDocType;
    BOOLEAN _fRootLevel;
    ULONG _ulDepth;
    VOID Download;
    VOID Download;
    VOID Download;
    VOID ~Download;
    struct XMLParser::Download *operator=;
    struct XMLParser::Download *operator=;
    PVOID __vecDelDtor;
};

typedef struct XMLParser::HashCheckDupAttributes::__l2::AttrInfo {
    struct _XML_NODE_INFO *pNodeInfo;
    ULONG nHashNext;
    ULONG hashcode;
};

typedef struct XMLParser::_MY_XML_NODE_INFO {
    struct _XML_NODE_INFO _XML_NODE_INFO;
    PWCHAR _pwcTagName;
    ULONG _ulBufLen;
};

typedef struct XMLStream::InputInfo {
    _reference<BufferedStream> _pInput;
    WCHAR _chLookahead;
    BOOLEAN _fPE;
    BOOLEAN _fExternalPE;
    BOOLEAN _fInternalSubset;
    HRESULT *_fnState;
    VOID InputInfo;
    VOID InputInfo;
    VOID InputInfo;
    VOID ~InputInfo;
    struct XMLStream::InputInfo *operator=;
    struct XMLStream::InputInfo *operator=;
    PVOID __vecDelDtor;
};

typedef struct XMLStream::StateInfo {
    HRESULT *_fnState;
    ULONG _sSubState;
    struct StateEntry *_pTable;
    HRESULT _lEOFError;
    LONG _cStreamDepth;
};

typedef struct XPBuilder::NodeTest {
    enum XPBuilder::TestType _type;
    struct XPBuilder::QName _name;
};

typedef struct XPBuilder::QName {
    PWCHAR _pwsPrefix;
    LONG _cwchPrefix;
    PWCHAR _pwsLocalName;
    LONG _cwchLocalName;
};

typedef struct XPBuilder::SortKey {
    PVOID _opndSort;
    enum XPBuilder::OpType _type;
    ULONG _lang;
    BOOLEAN _fDescending;
    BOOLEAN _fUpperFirst;
    PVOID _opndDataType;
    PVOID _opndLang;
    PVOID _opndSortOrder;
    PVOID _opndCaseOrder;
};

typedef struct XPNav::XPNavVtbl {
    String **getTextFunc;
    String **fngetText;
    NameDef **getNameFunc;
    NameDef **fngetName;
    enum XMLNav::NodeType *getTypeFunc;
    enum XMLNav::NodeType *fngetType;
    String **getBaseURIFunc;
    String **fngetBaseURI;
    String **getUniqueIDFunc;
    String **fngetUniqueID;
    PULONG64 getFlagFunc;
    PULONG64 fngetFlag;
    Document **getDocumentFunc;
    Document **fngetDocument;
    PULONG64 isInSubtreeFunc;
    PULONG64 fnisInSubtree;
    PULONG64 isSameLocationFunc;
    PULONG64 fnisSameLocation;
    PLONG compareLocationFunc;
    PLONG fncompareLocation;
    PULONG64 moveToChildFunc;
    PULONG64 fnmoveToChild;
    PULONG64 moveToAttributeFunc;
    PULONG64 fnmoveToAttribute;
    PULONG64 moveToNamespaceFunc;
    PULONG64 fnmoveToNamespace;
    PULONG64 moveToSiblingFunc;
    PULONG64 fnmoveToSibling;
    PULONG64 moveToParentFunc;
    PULONG64 fnmoveToParent;
    PULONG64 skipToAttributeFunc;
    PULONG64 fnskipToAttribute;
    PULONG64 skipToChildFunc;
    PULONG64 fnskipToChild;
    PULONG64 skipToDescendantFunc;
    PULONG64 fnskipToDescendant;
    PULONG64 skipToSiblingFunc;
    PULONG64 fnskipToSibling;
    PULONG64 cacheInScopeNamespacesFunc;
    PULONG64 fncacheInScopeNamespaces;
    enum XPNav::Type *getNavTypeFunc;
    enum XPNav::Type *fngetNavType;
    PVOID setContextFunc;
    PVOID fnsetContext;
    Document **getHandleDocumentFunc;
    Document **fngetHandleDocument;
    PVOID releaseHandleFunc;
    PVOID fnreleaseHandle;
    PVOID copyHandleFunc;
    PVOID fncopyHandle;
    PVOID toHandleFunc;
    PVOID fntoHandle;
    XPNav **toXPNavFunc;
    XPNav **fntoXPNav;
    Node **toNodeFunc;
    Node **fntoNode;
    PBOOLEAN getAdjacentTextFunc;
    PBOOLEAN fngetAdjacentText;
    PBOOLEAN isAdjacentTextFunc;
    PBOOLEAN fnisAdjacentText;
};

typedef struct XPNavVtbl {
    String **getTextFunc;
    String **fngetText;
    NameDef **getNameFunc;
    NameDef **fngetName;
    enum XMLNav::NodeType *getTypeFunc;
    enum XMLNav::NodeType *fngetType;
    String **getBaseURIFunc;
    String **fngetBaseURI;
    String **getUniqueIDFunc;
    String **fngetUniqueID;
    PULONG64 getFlagFunc;
    PULONG64 fngetFlag;
    Document **getDocumentFunc;
    Document **fngetDocument;
    PULONG64 isInSubtreeFunc;
    PULONG64 fnisInSubtree;
    PULONG64 isSameLocationFunc;
    PULONG64 fnisSameLocation;
    PLONG compareLocationFunc;
    PLONG fncompareLocation;
    PULONG64 moveToChildFunc;
    PULONG64 fnmoveToChild;
    PULONG64 moveToAttributeFunc;
    PULONG64 fnmoveToAttribute;
    PULONG64 moveToNamespaceFunc;
    PULONG64 fnmoveToNamespace;
    PULONG64 moveToSiblingFunc;
    PULONG64 fnmoveToSibling;
    PULONG64 moveToParentFunc;
    PULONG64 fnmoveToParent;
    PULONG64 skipToAttributeFunc;
    PULONG64 fnskipToAttribute;
    PULONG64 skipToChildFunc;
    PULONG64 fnskipToChild;
    PULONG64 skipToDescendantFunc;
    PULONG64 fnskipToDescendant;
    PULONG64 skipToSiblingFunc;
    PULONG64 fnskipToSibling;
    PULONG64 cacheInScopeNamespacesFunc;
    PULONG64 fncacheInScopeNamespaces;
    enum XPNav::Type *getNavTypeFunc;
    enum XPNav::Type *fngetNavType;
    PVOID setContextFunc;
    PVOID fnsetContext;
    Document **getHandleDocumentFunc;
    Document **fngetHandleDocument;
    PVOID releaseHandleFunc;
    PVOID fnreleaseHandle;
    PVOID copyHandleFunc;
    PVOID fncopyHandle;
    PVOID toHandleFunc;
    PVOID fntoHandle;
    XPNav **toXPNavFunc;
    XPNav **fntoXPNav;
    Node **toNodeFunc;
    Node **fntoNode;
    PBOOLEAN getAdjacentTextFunc;
    PBOOLEAN fngetAdjacentText;
    PBOOLEAN isAdjacentTextFunc;
    PBOOLEAN fnisAdjacentText;
};

typedef struct XPNodeNav::XPNodeNavVtbl {
    struct XPNav::XPNavVtbl _navVtbl;
    BOOLEAN _checksWhitespace;
    Node **getParentFunc;
    Node **fngetParent;
    struct NodeLocation **getNodeLocationFunc;
    struct NodeLocation **fngetNodeLocation;
    PVOID toggleWhitespaceCheckFunc;
    PVOID fntoggleWhitespaceCheck;
};

typedef struct XPNodeNavVtbl {
    struct XPNav::XPNavVtbl _navVtbl;
    BOOLEAN _checksWhitespace;
    Node **getParentFunc;
    Node **fngetParent;
    struct NodeLocation **getNodeLocationFunc;
    struct NodeLocation **fngetNodeLocation;
    PVOID toggleWhitespaceCheckFunc;
    PVOID fntoggleWhitespaceCheck;
};

typedef struct XSAVE_CPU_ERRATA {
    ULONG NumberOfErrata;
    struct XSAVE_CPU_INFO Errata[1];
};

typedef struct XSAVE_CPU_INFO {
    UCHAR Processor;
    USHORT Family;
    USHORT Model;
    USHORT Stepping;
    USHORT ExtendedModel;
    ULONG ExtendedFamily;
    ULONG64 MicrocodeVersion;
    ULONG Reserved;
};

typedef struct XSLTKeywords::KeywordInfo {
    String *_strKeyword;
    Object **_pObject;
    ULONG _fIsKeyword : 1;
};

typedef struct XSLTTextContext {
    Node *_eParent;
    BOOLEAN _fXmlSpace;
    enum TriState _triStripSiblings;
};

typedef struct XSLTTextVisitor::XSLTTextContext {
    Node *_eParent;
    BOOLEAN _fXmlSpace;
    enum TriState _triStripSiblings;
};

typedef struct XWinRT::IntVersionTag {
    LONG _iVersion;
    BOOLEAN operator==;
};

typedef struct XWinRT::InterfaceEquals {
};

typedef struct XWinRT::InterfaceLifetimeTraits {
};

typedef struct XWinRT::SecureVersionTag {
     Tag;
     TagManager;
    BOOLEAN operator==;
    LONG AddRef;
    LONG Release;
    XWinRT::SecureVersionTag::Tag *_pVersion;
};

typedef struct XWinRT::SerializingLockPolicy {
    XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireRead> Read;
    XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireWrite> Write;
};

typedef struct XWinRT::StringEquals {
    HRESULT operator();
};

typedef struct XWinRT::StringHash {
    HRESULT operator();
};

typedef struct XWinRT::StringLifetimeTraits {
    HRESULT Construct;
    VOID Construct;
    VOID Destroy;
};

typedef struct XWinRT::XPlex {
    struct XWinRT::XPlex *pNext;
    PVOID data;
    struct XWinRT::XPlex *Create;
    VOID FreeDataChain;
};

typedef struct XWinRT::detail::AcquireRead {
};

typedef struct XWinRT::detail::AcquireWrite {
};

typedef struct XWinRT::detail::ReentrancyGuard<1> {
    HRESULT _hr;
    PLONG _pGuard;
    VOID ReentrancyGuard<1>;
    VOID ReentrancyGuard<1>;
    VOID ReentrancyGuard<1>;
    VOID ReentrancyGuard<1>;
    HRESULT hr;
    BOOLEAN IsFlagged;
    struct XWinRT::detail::ReentrancyGuard<1> *operator=;
    VOID ~ReentrancyGuard<1>;
    PVOID __vecDelDtor;
};

typedef struct XWinRT::detail::TryAcquireRead {
};

typedef struct XWinRT::detail::TryAcquireWrite {
};

typedef struct XmlEventCache::XmlEventPage {
    VOID ~XmlEventPage;
    LONG <unnamed-enum-NUM_XML_EVENTS>;
    PVOID operator new;
    LONG _capacity;
    XmlEvent _sentinel;
    XmlEvent _events[16];
    PVOID __vecDelDtor;
};

typedef struct XmlEventPage {
    VOID ~XmlEventPage;
    LONG <unnamed-enum-NUM_XML_EVENTS>;
    PVOID operator new;
    LONG _capacity;
    XmlEvent _sentinel;
    XmlEvent _events[16];
    PVOID __vecDelDtor;
};

typedef struct XmlSpaceContext {
    struct BaseTextAppendVisitor::BaseContext BaseTextAppendVisitor::BaseContext;
    BOOLEAN _fXmlSpace;
};

typedef struct XsdAttributeEntry {
    LONG Attribute;
    LONG Datatype;
    PVOID BuildFunc;
};

typedef struct XsdBuilder::ContainerState {
    LONG ContainerType;
    SchemaObject *Container;
};

typedef struct XsdEntry {
    LONG eName;
    LONG iPadding;
    PLONG aNextStates;
    PVOID InitFunc;
    PVOID BeginChildFunc;
    PVOID EndChildFunc;
    struct XsdAttributeEntry *aAttributes;
};

typedef struct _ABC {
    LONG abcA;
    ULONG abcB;
    LONG abcC;
};

typedef struct _ABCFLOAT {
    FLOAT abcfA;
    FLOAT abcfB;
    FLOAT abcfC;
};

typedef struct _ACCESS_ALLOWED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_REASONS {
    ULONG Data[32];
};

typedef struct _ACE_HEADER {
    UCHAR AceType;
    UCHAR AceFlags;
    USHORT AceSize;
};

typedef struct _ACL {
    UCHAR AclRevision;
    UCHAR Sbz1;
    USHORT AclSize;
    USHORT AceCount;
    USHORT Sbz2;
};

typedef struct _ACL_REVISION_INFORMATION {
    ULONG AclRevision;
};

typedef struct _ACL_SIZE_INFORMATION {
    ULONG AceCount;
    ULONG AclBytesInUse;
    ULONG AclBytesFree;
};

typedef struct _ACTIVATION_CONTEXT {
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA {
    ULONG Size;
    ULONG Flags;
    PWCHAR AssemblyName;
    ULONG AssemblyNameLength;
    ULONG HashAlgorithm;
    ULONG PseudoKey;
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    ULONG ulFlags;
    ULONG ulEncodedAssemblyIdentityLength;
    ULONG ulManifestPathType;
    ULONG ulManifestPathLength;
    union _LARGE_INTEGER liManifestLastWriteTime;
    ULONG ulPolicyPathType;
    ULONG ulPolicyPathLength;
    union _LARGE_INTEGER liPolicyLastWriteTime;
    ULONG ulMetadataSatelliteRosterIndex;
    ULONG ulManifestVersionMajor;
    ULONG ulManifestVersionMinor;
    ULONG ulPolicyVersionMajor;
    ULONG ulPolicyVersionMinor;
    ULONG ulAssemblyDirectoryNameLength;
    PWCHAR lpAssemblyEncodedAssemblyIdentity;
    PWCHAR lpAssemblyManifestPath;
    PWCHAR lpAssemblyPolicyPath;
    PWCHAR lpAssemblyDirectoryName;
    ULONG ulFileCount;
};

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {
    struct _ACTIVATION_CONTEXT *ActivationContext;
    PVOID hActCtx;
    ULONG Flags;
    ULONG dwFlags;
};

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
    ULONG ElementCount;
    struct _COMPATIBILITY_CONTEXT_ELEMENT Elements[0];
};

typedef struct _ACTIVATION_CONTEXT_DATA {
};

typedef struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION {
};

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    ULONG dwFlags;
    ULONG ulFormatVersion;
    ULONG ulAssemblyCount;
    ULONG ulRootManifestPathType;
    ULONG ulRootManifestPathChars;
    ULONG ulRootConfigurationPathType;
    ULONG ulRootConfigurationPathChars;
    ULONG ulAppDirPathType;
    ULONG ulAppDirPathChars;
    PWCHAR lpRootManifestPath;
    PWCHAR lpRootConfigurationPath;
    PWCHAR lpAppDirPath;
};

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    ULONG ulAssemblyIndex;
    ULONG ulFileIndexInAssembly;
};

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
    ULONG ulFlags;
    enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
    ULONG UiAccess;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA {
    ULONG Size;
    ULONG DataFormatVersion;
    PVOID Data;
    ULONG Length;
    PVOID SectionGlobalData;
    ULONG SectionGlobalDataLength;
    PVOID SectionBase;
    ULONG SectionTotalLength;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG AssemblyRosterIndex;
    ULONG Flags;
    struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600 {
    ULONG Size;
    ULONG DataFormatVersion;
    PVOID Data;
    ULONG Length;
    PVOID SectionGlobalData;
    ULONG SectionGlobalDataLength;
    PVOID SectionBase;
    ULONG SectionTotalLength;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG AssemblyRosterIndex;
    ULONG Flags;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION *Information;
    PVOID SectionBase;
    ULONG SectionLength;
    PVOID SectionGlobalDataBase;
    ULONG SectionGlobalDataLength;
};

typedef struct _ACTIVATION_CONTEXT_STACK {
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
    struct _LIST_ENTRY FrameListCache;
    ULONG Flags;
    ULONG NextCookieSequenceNumber;
    ULONG StackId;
};

typedef struct _ADMINISTRATOR_POWER_POLICY {
    enum _SYSTEM_POWER_STATE MinSleep;
    enum _SYSTEM_POWER_STATE MaxSleep;
    ULONG MinVideoTimeout;
    ULONG MaxVideoTimeout;
    ULONG MinSpindownTimeout;
    ULONG MaxSpindownTimeout;
};

typedef struct _ALPC_BASIC_INFORMATION {
    ULONG Flags;
    ULONG SequenceNo;
    PVOID PortContext;
};

typedef struct _ALPC_CONTEXT_ATTR {
    PVOID PortContext;
    PVOID MessageContext;
    ULONG Sequence;
    ULONG MessageId;
    ULONG CallbackId;
};

typedef struct _ALPC_DATA_VIEW_ATTR {
    ULONG Flags;
    PVOID SectionHandle;
    PVOID ViewBase;
    ULONG64 ViewSize;
};

typedef struct _ALPC_DIRECT_ATTR {
    PVOID Event;
};

typedef struct _ALPC_HANDLE_ATTR {
    ULONG Flags;
    ULONG Reserved0 : 16;
    ULONG SameAccess : 1;
    ULONG SameAttributes : 1;
    ULONG Indirect : 1;
    ULONG Inherit : 1;
    ULONG Reserved1 : 12;
    PVOID Handle;
    struct _ALPC_HANDLE_ATTR32 *HandleAttrArray;
    ULONG ObjectType;
    ULONG HandleCount;
    ULONG DesiredAccess;
    ULONG GrantedAccess;
};

typedef struct _ALPC_HANDLE_ATTR32 {
    ULONG Flags;
    ULONG Reserved0 : 16;
    ULONG SameAccess : 1;
    ULONG SameAttributes : 1;
    ULONG Indirect : 1;
    ULONG Inherit : 1;
    ULONG Reserved1 : 12;
    ULONG Handle;
    ULONG ObjectType;
    ULONG DesiredAccess;
    ULONG GrantedAccess;
};

typedef struct _ALPC_MESSAGE_ATTRIBUTES {
    ULONG AllocatedAttributes;
    ULONG ValidAttributes;
};

typedef struct _ALPC_MESSAGE_HANDLE_INFORMATION {
    ULONG Index;
    ULONG Flags;
    ULONG Handle;
    ULONG ObjectType;
    ULONG GrantedAccess;
};

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    PVOID CompletionPort;
};

typedef struct _ALPC_PORT_ATTRIBUTES {
    ULONG Flags;
    struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
    ULONG64 MaxMessageLength;
    ULONG64 MemoryBandwidth;
    ULONG64 MaxPoolUsage;
    ULONG64 MaxSectionSize;
    ULONG64 MaxViewSize;
    ULONG64 MaxTotalSectionSize;
    ULONG DupObjectTypes;
    ULONG Reserved;
};

typedef struct _ALPC_PORT_CALLBACK_INFORMATION {
    PVOID CallbackObject;
    PVOID Context;
};

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION {
    PVOID Buffer;
    ULONG Size;
    ULONG ConcurrencyCount;
    ULONG AttributeFlags;
};

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION {
    PVOID Buffer;
    ULONG Size;
};

typedef struct _ALPC_SECURITY_ATTR {
    ULONG Flags;
    struct _SECURITY_QUALITY_OF_SERVICE *QoS;
    PVOID ContextHandle;
};

typedef struct _ALPC_SERVER_INFORMATION {
    struct {
        PVOID ThreadHandle;
    } In;
    struct {
        UCHAR ThreadBlocked;
        PVOID ConnectedProcessId;
        struct _UNICODE_STRING ConnectionPortName;
    } Out;
};

typedef struct _ALPC_TOKEN_ATTR {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    struct _LUID ModifiedId;
};

typedef struct _ALPC_WORK_ON_BEHALF_ATTR {
    struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
};

typedef struct _ALPC_WORK_ON_BEHALF_TICKET {
    ULONG ThreadId;
    ULONG ThreadCreationTimeLow;
};

typedef struct _AMD64_CONTEXT {
};

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {
    union _LARGE_INTEGER ActivationTime;
    ULONG Flags;
    ULONG ButtonInstanceID;
};

typedef struct _APP_MEMORY_INFORMATION {
    ULONG64 AvailableCommit;
    ULONG64 PrivateCommitUsage;
    ULONG64 PeakPrivateCommitUsage;
    ULONG64 TotalCommitUsage;
};

typedef struct _ARM64_CONTEXT {
};

typedef struct _ARM_CONTEXT {
};

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    ULONG ulFlags;
    ULONG ulFilenameLength;
    ULONG ulPathLength;
    PWCHAR lpFileName;
    PWCHAR lpFilePath;
};

typedef struct _ASSEMBLY_STORAGE_MAP {
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT {
    PVOID ResolutionContext;
    ULONG64 RootIndex;
    UCHAR CancelResolution;
    UCHAR NoMoreEntries;
    struct _UNICODE_STRING Root;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING {
    PVOID Data;
    ULONG AssemblyRosterIndex;
    PVOID ResolutionContext;
    struct _UNICODE_STRING Root;
    UCHAR KnownRoot;
    ULONG64 RootCount;
    UCHAR CancelResolution;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING {
    PVOID ResolutionContext;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL {
    PVOID ResolutionContext;
    ULONG RootIndexUsed;
};

typedef struct _ATOM_BASIC_INFORMATION {
    USHORT UsageCount;
    USHORT Flags;
    USHORT NameLength;
    WCHAR Name[1];
};

typedef struct _ATOM_TABLE_INFORMATION {
    ULONG NumberOfAtoms;
    USHORT Atoms[1];
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRegPolicySettings;
    struct _CMSG_SIGNER_INFO *pSignerInfo;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    LONG fCommercial;
};

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRegPolicySettings;
    LONG fCommercial;
};

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER {
    PWCHAR pszName;
    ULONG dwClass;
    ULONG dwFlags;
};

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO {
    ULONG cbSize;
    ULONG dwInfoVersion;
    PUCHAR pbNonce;
    ULONG cbNonce;
    PUCHAR pbAuthData;
    ULONG cbAuthData;
    PUCHAR pbTag;
    ULONG cbTag;
    PUCHAR pbMacContext;
    ULONG cbMacContext;
    ULONG cbAAD;
    ULONG64 cbData;
    ULONG dwFlags;
};

typedef struct _BCRYPT_DH_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_DH_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
};

typedef struct _BCRYPT_DSA_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_DSA_KEY_BLOB_V2 {
    ULONG dwMagic;
    ULONG cbKey;
    enum HASHALGORITHM_ENUM hashAlgorithm;
    enum DSAFIPSVERSION_ENUM standardVersion;
    ULONG cbSeedLength;
    ULONG cbGroupSize;
    UCHAR Count[4];
};

typedef struct _BCRYPT_DSA_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2 {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
    enum HASHALGORITHM_ENUM hashAlgorithm;
    enum DSAFIPSVERSION_ENUM standardVersion;
    ULONG cbSeedLength;
    ULONG cbGroupSize;
    UCHAR Count[4];
};

typedef struct _BCRYPT_ECCFULLKEY_BLOB {
    ULONG dwMagic;
    ULONG dwVersion;
    enum ECC_CURVE_TYPE_ENUM dwCurveType;
    enum ECC_CURVE_ALG_ID_ENUM dwCurveGenerationAlgId;
    ULONG cbFieldLength;
    ULONG cbSubgroupOrder;
    ULONG cbCofactor;
    ULONG cbSeed;
};

typedef struct _BCRYPT_ECCKEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_ECC_CURVE_NAMES {
    ULONG dwEccCurveNames;
    PWCHAR *pEccCurveNames;
};

typedef struct _BCRYPT_INTERFACE_VERSION {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _BCRYPT_KEY_BLOB {
    ULONG Magic;
};

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER {
    ULONG dwMagic;
    ULONG dwVersion;
    ULONG cbKeyData;
};

typedef struct _BCRYPT_MULTI_HASH_OPERATION {
    ULONG iHash;
    enum BCRYPT_HASH_OPERATION_TYPE hashOperation;
    PUCHAR pbBuffer;
    ULONG cbBuffer;
};

typedef struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT {
    ULONG cbPerObject;
    ULONG cbPerElement;
};

typedef struct _BCRYPT_OAEP_PADDING_INFO {
    PWCHAR pszAlgId;
    PUCHAR pbLabel;
    ULONG cbLabel;
};

typedef struct _BCRYPT_OID {
    ULONG cbOID;
    PUCHAR pbOID;
};

typedef struct _BCRYPT_OID_LIST {
    ULONG dwOIDCount;
    struct _BCRYPT_OID *pOIDs;
};

typedef struct _BCRYPT_PKCS1_PADDING_INFO {
    PWCHAR pszAlgId;
};

typedef struct _BCRYPT_PROVIDER_NAME {
    PWCHAR pszProviderName;
};

typedef struct _BCRYPT_PSS_PADDING_INFO {
    PWCHAR pszAlgId;
    ULONG cbSalt;
};

typedef struct _BCRYPT_RSAKEY_BLOB {
    ULONG Magic;
    ULONG BitLength;
    ULONG cbPublicExp;
    ULONG cbModulus;
    ULONG cbPrime1;
    ULONG cbPrime2;
};

typedef struct _BCryptBuffer {
    ULONG cbBuffer;
    ULONG BufferType;
    PVOID pvBuffer;
};

typedef struct _BCryptBufferDesc {
    ULONG ulVersion;
    ULONG cBuffers;
    struct _BCryptBuffer *pBuffers;
};

typedef struct _BLENDFUNCTION {
    UCHAR BlendOp;
    UCHAR BlendFlags;
    UCHAR SourceConstantAlpha;
    UCHAR AlphaFormat;
};

typedef struct _BOOT_AREA_INFO {
    ULONG BootSectorCount;
     <unnamed-type-BootSectors>;
    struct {
        union _LARGE_INTEGER Offset;
    } BootSectors[2];
};

typedef struct _BOOT_ENTROPY_NT_RESULT {
    ULONG maxEntropySources;
    struct _BOOT_ENTROPY_SOURCE_NT_RESULT EntropySourceResult[10];
    UCHAR SeedBytesForCng[48];
};

typedef struct _BOOT_ENTROPY_SOURCE_NT_RESULT {
    enum _BOOT_ENTROPY_SOURCE_ID SourceId;
    ULONG64 Policy;
    enum _BOOT_ENTROPY_SOURCE_RESULT_CODE ResultCode;
    LONG ResultStatus;
    ULONG64 Time;
    ULONG EntropyLength;
    UCHAR EntropyData[64];
};

typedef struct _BOOT_ENTRY {
    ULONG Version;
    ULONG Length;
    ULONG Id;
    ULONG Attributes;
    ULONG FriendlyNameOffset;
    ULONG BootFilePathOffset;
    ULONG OsOptionsLength;
    UCHAR OsOptions[1];
};

typedef struct _BOOT_ENTRY_LIST {
    ULONG NextEntryOffset;
    struct _BOOT_ENTRY BootEntry;
};

typedef struct _BOOT_OPTIONS {
    ULONG Version;
    ULONG Length;
    ULONG Timeout;
    ULONG CurrentBootEntryId;
    ULONG NextBootEntryId;
    WCHAR HeadlessRedirection[1];
};

typedef struct _BYTE_BLOB {
    ULONG clSize;
    UCHAR abData[1];
};

typedef struct _BYTE_SIZEDARR {
    ULONG clSize;
    PUCHAR pData;
};

typedef struct _BY_HANDLE_FILE_INFORMATION {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG dwVolumeSerialNumber;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG nNumberOfLinks;
    ULONG nFileIndexHigh;
    ULONG nFileIndexLow;
};

typedef struct _CACHE_DESCRIPTOR {
    UCHAR Level;
    UCHAR Associativity;
    USHORT LineSize;
    ULONG Size;
    enum _PROCESSOR_CACHE_TYPE Type;
};

typedef struct _CACHE_RELATIONSHIP {
    UCHAR Level;
    UCHAR Associativity;
    USHORT LineSize;
    ULONG CacheSize;
    enum _PROCESSOR_CACHE_TYPE Type;
    UCHAR Reserved[20];
    struct _GROUP_AFFINITY GroupMask;
};

typedef struct _CALL_FRAME {
    PVOID ReturnAddress;
    PVOID Param1Home;
    PVOID Param2Home;
    PVOID Param3Home;
    PVOID Param4Home;
};

typedef struct _CERT_ACCESS_DESCRIPTION {
    PCHAR pszAccessMethod;
    struct _CERT_ALT_NAME_ENTRY AccessLocation;
};

typedef struct _CERT_ALT_NAME_ENTRY {
    ULONG dwAltNameChoice;
    struct _CERT_OTHER_NAME *pOtherName;
    PWCHAR pwszRfc822Name;
    PWCHAR pwszDNSName;
    struct _CRYPTOAPI_BLOB DirectoryName;
    PWCHAR pwszURL;
    struct _CRYPTOAPI_BLOB IPAddress;
    PCHAR pszRegisteredID;
};

typedef struct _CERT_ALT_NAME_INFO {
    ULONG cAltEntry;
    struct _CERT_ALT_NAME_ENTRY *rgAltEntry;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS {
    ULONG cAccDescr;
    struct _CERT_ACCESS_DESCRIPTION *rgAccDescr;
};

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
    struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
};

typedef struct _CERT_AUTHORITY_KEY_ID_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPTOAPI_BLOB CertIssuer;
    struct _CRYPTOAPI_BLOB CertSerialNumber;
};

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO {
    LONG fCA;
    LONG fPathLenConstraint;
    ULONG dwPathLenConstraint;
};

typedef struct _CERT_BASIC_CONSTRAINTS_INFO {
    struct _CRYPT_BIT_BLOB SubjectType;
    LONG fPathLenConstraint;
    ULONG dwPathLenConstraint;
    ULONG cSubtreesConstraint;
    struct _CRYPTOAPI_BLOB *rgSubtreesConstraint;
};

typedef struct _CERT_BIOMETRIC_DATA {
    ULONG dwTypeOfBiometricDataChoice;
    ULONG dwPredefined;
    PCHAR pszObjId;
    struct _CERT_HASHED_URL HashedUrl;
};

typedef struct _CERT_BIOMETRIC_EXT_INFO {
    ULONG cBiometricData;
    struct _CERT_BIOMETRIC_DATA *rgBiometricData;
};

typedef struct _CERT_CHAIN {
    ULONG cCerts;
    struct _CRYPTOAPI_BLOB *certs;
    struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

typedef struct _CERT_CHAIN_CONTEXT {
    ULONG cbSize;
    struct _CERT_TRUST_STATUS TrustStatus;
    ULONG cChain;
    struct _CERT_SIMPLE_CHAIN **rgpChain;
    ULONG cLowerQualityChainContext;
    struct _CERT_CHAIN_CONTEXT **rgpLowerQualityChainContext;
    LONG fHasRevocationFreshnessTime;
    ULONG dwRevocationFreshnessTime;
    ULONG dwCreateFlags;
    struct _GUID ChainId;
};

typedef struct _CERT_CHAIN_ELEMENT {
    ULONG cbSize;
    struct _CERT_CONTEXT *pCertContext;
    struct _CERT_TRUST_STATUS TrustStatus;
    struct _CERT_REVOCATION_INFO *pRevocationInfo;
    struct _CTL_USAGE *pIssuanceUsage;
    struct _CTL_USAGE *pApplicationUsage;
    PWCHAR pwszExtendedErrorInfo;
};

typedef struct _CERT_CHAIN_ENGINE_CONFIG {
    ULONG cbSize;
    PVOID hRestrictedRoot;
    PVOID hRestrictedTrust;
    PVOID hRestrictedOther;
    ULONG cAdditionalStore;
    PVOID *rghAdditionalStore;
    ULONG dwFlags;
    ULONG dwUrlRetrievalTimeout;
    ULONG MaximumCachedCertificates;
    ULONG CycleDetectionModulus;
    PVOID hExclusiveRoot;
    PVOID hExclusiveTrustedPeople;
    ULONG dwExclusiveFlags;
};

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
    ULONG cbSize;
    PCHAR pszUsageIdentifier;
    ULONG dwKeySpec;
    ULONG dwAcquirePrivateKeyFlags;
    ULONG cIssuer;
    struct _CRYPTOAPI_BLOB *rgIssuer;
    PLONG pfnFindCallback;
    PVOID pvFindArg;
};

typedef struct _CERT_CHAIN_PARA {
    ULONG cbSize;
    struct _CERT_USAGE_MATCH RequestedUsage;
};

typedef struct _CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwFlags;
    PVOID pvExtraPolicyPara;
};

typedef struct _CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwError;
    LONG lChainIndex;
    LONG lElementIndex;
    PVOID pvExtraPolicyStatus;
};

typedef struct _CERT_CONTEXT {
    ULONG dwCertEncodingType;
    PUCHAR pbCertEncoded;
    ULONG cbCertEncoded;
    struct _CERT_INFO *pCertInfo;
    PVOID hCertStore;
};

typedef struct _CERT_CREATE_CONTEXT_PARA {
    ULONG cbSize;
    PVOID pfnFree;
    PVOID pvFree;
    PLONG pfnSort;
    PVOID pvSort;
};

typedef struct _CERT_CRL_CONTEXT_PAIR {
    struct _CERT_CONTEXT *pCertContext;
    struct _CRL_CONTEXT *pCrlContext;
};

typedef struct _CERT_DH_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB g;
};

typedef struct _CERT_DSS_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB q;
    struct _CRYPTOAPI_BLOB g;
};

typedef struct _CERT_ECC_SIGNATURE {
    struct _CRYPTOAPI_BLOB r;
    struct _CRYPTOAPI_BLOB s;
};

typedef struct _CERT_EXTENSION {
    PCHAR pszObjId;
    LONG fCritical;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_EXTENSIONS {
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CERT_FORTEZZA_DATA_PROP {
    UCHAR SerialNumber[8];
    LONG CertIndex;
    UCHAR CertLabel[36];
};

typedef struct _CERT_GENERAL_SUBTREE {
    struct _CERT_ALT_NAME_ENTRY Base;
    ULONG dwMinimum;
    LONG fMaximum;
    ULONG dwMaximum;
};

typedef struct _CERT_HASHED_URL {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB Hash;
    PWCHAR pwszUrl;
};

typedef struct _CERT_ID {
    ULONG dwIdChoice;
    struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPTOAPI_BLOB HashId;
};

typedef struct _CERT_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _FILETIME NotBefore;
    struct _FILETIME NotAfter;
    struct _CRYPTOAPI_BLOB Subject;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    struct _CRYPT_BIT_BLOB IssuerUniqueId;
    struct _CRYPT_BIT_BLOB SubjectUniqueId;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CERT_ISSUER_SERIAL_NUMBER {
    struct _CRYPTOAPI_BLOB Issuer;
    struct _CRYPTOAPI_BLOB SerialNumber;
};

typedef struct _CERT_KEYGEN_REQUEST_INFO {
    ULONG dwVersion;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    PWCHAR pwszChallengeString;
};

typedef struct _CERT_KEY_ATTRIBUTES_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPT_BIT_BLOB IntendedKeyUsage;
    struct _CERT_PRIVATE_KEY_VALIDITY *pPrivateKeyUsagePeriod;
};

typedef struct _CERT_KEY_CONTEXT {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
};

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO {
    ULONG cCertPolicyId;
    struct _CERT_POLICY_ID *rgCertPolicyId;
    struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
};

typedef struct _CERT_LDAP_STORE_OPENED_PARA {
    PVOID pvLdapSessionHandle;
    PWCHAR pwszLdapUrl;
};

typedef struct _CERT_LOGOTYPE_AUDIO {
    struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
    struct _CERT_LOGOTYPE_AUDIO_INFO *pLogotypeAudioInfo;
};

typedef struct _CERT_LOGOTYPE_AUDIO_INFO {
    ULONG dwFileSize;
    ULONG dwPlayTime;
    ULONG dwChannels;
    ULONG dwSampleRate;
    PWCHAR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_DATA {
    ULONG cLogotypeImage;
    struct _CERT_LOGOTYPE_IMAGE *rgLogotypeImage;
    ULONG cLogotypeAudio;
    struct _CERT_LOGOTYPE_AUDIO *rgLogotypeAudio;
};

typedef struct _CERT_LOGOTYPE_DETAILS {
    PWCHAR pwszMimeType;
    ULONG cHashedUrl;
    struct _CERT_HASHED_URL *rgHashedUrl;
};

typedef struct _CERT_LOGOTYPE_EXT_INFO {
    ULONG cCommunityLogo;
    struct _CERT_LOGOTYPE_INFO *rgCommunityLogo;
    struct _CERT_LOGOTYPE_INFO *pIssuerLogo;
    struct _CERT_LOGOTYPE_INFO *pSubjectLogo;
    ULONG cOtherLogo;
    struct _CERT_OTHER_LOGOTYPE_INFO *rgOtherLogo;
};

typedef struct _CERT_LOGOTYPE_IMAGE {
    struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
    struct _CERT_LOGOTYPE_IMAGE_INFO *pLogotypeImageInfo;
};

typedef struct _CERT_LOGOTYPE_IMAGE_INFO {
    ULONG dwLogotypeImageInfoChoice;
    ULONG dwFileSize;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwLogotypeImageResolutionChoice;
    ULONG dwNumBits;
    ULONG dwTableSize;
    PWCHAR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_INFO {
    ULONG dwLogotypeInfoChoice;
    struct _CERT_LOGOTYPE_DATA *pLogotypeDirectInfo;
    struct _CERT_LOGOTYPE_REFERENCE *pLogotypeIndirectInfo;
};

typedef struct _CERT_LOGOTYPE_REFERENCE {
    ULONG cHashedUrl;
    struct _CERT_HASHED_URL *rgHashedUrl;
};

typedef struct _CERT_NAME_CONSTRAINTS_INFO {
    ULONG cPermittedSubtree;
    struct _CERT_GENERAL_SUBTREE *rgPermittedSubtree;
    ULONG cExcludedSubtree;
    struct _CERT_GENERAL_SUBTREE *rgExcludedSubtree;
};

typedef struct _CERT_NAME_INFO {
    ULONG cRDN;
    struct _CERT_RDN *rgRDN;
};

typedef struct _CERT_NAME_VALUE {
    ULONG dwValueType;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_OR_CRL_BLOB {
    ULONG dwChoice;
    ULONG cbEncoded;
    PUCHAR pbEncoded;
};

typedef struct _CERT_OR_CRL_BUNDLE {
    ULONG cItem;
    struct _CERT_OR_CRL_BLOB *rgItem;
};

typedef struct _CERT_OTHER_LOGOTYPE_INFO {
    PCHAR pszObjId;
    struct _CERT_LOGOTYPE_INFO LogotypeInfo;
};

typedef struct _CERT_OTHER_NAME {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_PAIR {
    struct _CRYPTOAPI_BLOB Forward;
    struct _CRYPTOAPI_BLOB Reverse;
};

typedef struct _CERT_PHYSICAL_STORE_INFO {
    ULONG cbSize;
    PCHAR pszOpenStoreProvider;
    ULONG dwOpenEncodingType;
    ULONG dwOpenFlags;
    struct _CRYPTOAPI_BLOB OpenParameters;
    ULONG dwFlags;
    ULONG dwPriority;
};

typedef struct _CERT_POLICIES_INFO {
    ULONG cPolicyInfo;
    struct _CERT_POLICY_INFO *rgPolicyInfo;
};

typedef struct _CERT_POLICY95_QUALIFIER1 {
    PWCHAR pszPracticesReference;
    PCHAR pszNoticeIdentifier;
    PCHAR pszNSINoticeIdentifier;
    ULONG cCPSURLs;
    struct _CPS_URLS *rgCPSURLs;
};

typedef struct _CERT_POLICY_CONSTRAINTS_INFO {
    LONG fRequireExplicitPolicy;
    ULONG dwRequireExplicitPolicySkipCerts;
    LONG fInhibitPolicyMapping;
    ULONG dwInhibitPolicyMappingSkipCerts;
};

typedef struct _CERT_POLICY_ID {
    ULONG cCertPolicyElementId;
    PCHAR *rgpszCertPolicyElementId;
};

typedef struct _CERT_POLICY_INFO {
    PCHAR pszPolicyIdentifier;
    ULONG cPolicyQualifier;
    struct _CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

typedef struct _CERT_POLICY_MAPPING {
    PCHAR pszIssuerDomainPolicy;
    PCHAR pszSubjectDomainPolicy;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO {
    ULONG cPolicyMapping;
    struct _CERT_POLICY_MAPPING *rgPolicyMapping;
};

typedef struct _CERT_POLICY_QUALIFIER_INFO {
    PCHAR pszPolicyQualifierId;
    struct _CRYPTOAPI_BLOB Qualifier;
};

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
    PCHAR pszOrganization;
    ULONG cNoticeNumbers;
    PLONG rgNoticeNumbers;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
    struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
    PWCHAR pszDisplayText;
};

typedef struct _CERT_PRIVATE_KEY_VALIDITY {
    struct _FILETIME NotBefore;
    struct _FILETIME NotAfter;
};

typedef struct _CERT_PUBLIC_KEY_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPT_BIT_BLOB PublicKey;
};

typedef struct _CERT_QC_STATEMENT {
    PCHAR pszStatementId;
    struct _CRYPTOAPI_BLOB StatementInfo;
};

typedef struct _CERT_QC_STATEMENTS_EXT_INFO {
    ULONG cStatement;
    struct _CERT_QC_STATEMENT *rgStatement;
};

typedef struct _CERT_RDN {
    ULONG cRDNAttr;
    struct _CERT_RDN_ATTR *rgRDNAttr;
};

typedef struct _CERT_RDN_ATTR {
    PCHAR pszObjId;
    ULONG dwValueType;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
    struct HKEY__ *hKeyBase;
    PWCHAR pwszRegPath;
};

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA {
    struct HKEY__ *hKey;
    PWCHAR pwszStoreDirectory;
};

typedef struct _CERT_REQUEST_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB Subject;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CERT_REVOCATION_CHAIN_PARA {
    ULONG cbSize;
    PVOID hChainEngine;
    PVOID hAdditionalStore;
    ULONG dwChainFlags;
    ULONG dwUrlRetrievalTimeout;
    struct _FILETIME *pftCurrentTime;
    struct _FILETIME *pftCacheResync;
    ULONG cbMaxUrlRetrievalByteCount;
};

typedef struct _CERT_REVOCATION_CRL_INFO {
    ULONG cbSize;
    struct _CRL_CONTEXT *pBaseCrlContext;
    struct _CRL_CONTEXT *pDeltaCrlContext;
    struct _CRL_ENTRY *pCrlEntry;
    LONG fDeltaCrlEntry;
};

typedef struct _CERT_REVOCATION_INFO {
    ULONG cbSize;
    ULONG dwRevocationResult;
    PCHAR pszRevocationOid;
    PVOID pvOidSpecificInfo;
    LONG fHasFreshnessTime;
    ULONG dwFreshnessTime;
    struct _CERT_REVOCATION_CRL_INFO *pCrlInfo;
};

typedef struct _CERT_REVOCATION_PARA {
    ULONG cbSize;
    struct _CERT_CONTEXT *pIssuerCert;
    ULONG cCertStore;
    PVOID *rgCertStore;
    PVOID hCrlStore;
    struct _FILETIME *pftTimeToUse;
};

typedef struct _CERT_REVOCATION_STATUS {
    ULONG cbSize;
    ULONG dwIndex;
    ULONG dwError;
    ULONG dwReason;
    LONG fHasFreshnessTime;
    ULONG dwFreshnessTime;
};

typedef struct _CERT_SELECT_CHAIN_PARA {
    PVOID hChainEngine;
    struct _FILETIME *pTime;
    PVOID hAdditionalStore;
    struct _CERT_CHAIN_PARA *pChainPara;
    ULONG dwFlags;
};

typedef struct _CERT_SELECT_CRITERIA {
    ULONG dwType;
    ULONG cPara;
    PVOID *ppPara;
};

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT {
    ULONG cbSize;
    PUCHAR pbEncodedOcspResponse;
    ULONG cbEncodedOcspResponse;
};

typedef struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA {
    ULONG cbSize;
    ULONG dwFlags;
    PULONG pcbUsedSize;
    PWCHAR pwszOcspDirectory;
    PVOID pfnUpdateCallback;
    PVOID pvUpdateCallbackArg;
};

typedef struct _CERT_SIGNED_CONTENT_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPT_BIT_BLOB Signature;
};

typedef struct _CERT_SIMPLE_CHAIN {
    ULONG cbSize;
    struct _CERT_TRUST_STATUS TrustStatus;
    ULONG cElement;
    struct _CERT_CHAIN_ELEMENT **rgpElement;
    struct _CERT_TRUST_LIST_INFO *pTrustListInfo;
    LONG fHasRevocationFreshnessTime;
    ULONG dwRevocationFreshnessTime;
};

typedef struct _CERT_STORE_PROV_FIND_INFO {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG dwFindFlags;
    ULONG dwFindType;
    PVOID pvFindPara;
};

typedef struct _CERT_STORE_PROV_INFO {
    ULONG cbSize;
    ULONG cStoreProvFunc;
    PVOID *rgpvStoreProvFunc;
    PVOID hStoreProv;
    ULONG dwStoreProvFlags;
    PVOID hStoreProvFuncAddr2;
};

typedef struct _CERT_STRONG_SIGN_PARA {
    ULONG cbSize;
    ULONG dwInfoChoice;
    PVOID pvInfo;
    struct _CERT_STRONG_SIGN_SERIALIZED_INFO *pSerializedInfo;
    PCHAR pszOID;
};

typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO {
    ULONG dwFlags;
    PWCHAR pwszCNGSignHashAlgids;
    PWCHAR pwszCNGPubKeyMinBitLengths;
};

typedef struct _CERT_SUPPORTED_ALGORITHM_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPT_BIT_BLOB IntendedKeyUsage;
    struct _CERT_POLICIES_INFO IntendedCertPolicies;
};

typedef struct _CERT_SYSTEM_STORE_INFO {
    ULONG cbSize;
};

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
    struct HKEY__ *hKeyBase;
    PVOID pvBase;
    PVOID pvSystemStore;
    PCHAR pszSystemStore;
    PWCHAR pwszSystemStore;
};

typedef struct _CERT_TEMPLATE_EXT {
    PCHAR pszObjId;
    ULONG dwMajorVersion;
    LONG fMinorVersion;
    ULONG dwMinorVersion;
};

typedef struct _CERT_TPM_SPECIFICATION_INFO {
    PWCHAR pwszFamily;
    ULONG dwLevel;
    ULONG dwRevision;
};

typedef struct _CERT_TRUST_LIST_INFO {
    ULONG cbSize;
    struct _CTL_ENTRY *pCtlEntry;
    struct _CTL_CONTEXT *pCtlContext;
};

typedef struct _CERT_TRUST_STATUS {
    ULONG dwErrorStatus;
    ULONG dwInfoStatus;
};

typedef struct _CERT_USAGE_MATCH {
    ULONG dwType;
    struct _CTL_USAGE Usage;
};

typedef struct _CERT_X942_DH_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB g;
    struct _CRYPTOAPI_BLOB q;
    struct _CRYPTOAPI_BLOB j;
    struct _CERT_X942_DH_VALIDATION_PARAMS *pValidationParams;
};

typedef struct _CERT_X942_DH_VALIDATION_PARAMS {
    struct _CRYPT_BIT_BLOB seed;
    ULONG pgenCounter;
};

typedef struct _CFG_CALL_TARGET_INFO {
    ULONG64 Offset;
    ULONG64 Flags;
};

typedef struct _CFG_CALL_TARGET_LIST_INFORMATION {
    ULONG NumberOfEntries;
    ULONG Reserved;
    PULONG NumberOfEntriesProcessed;
    struct _CFG_CALL_TARGET_INFO *CallTargetInfo;
    PVOID Section;
    ULONG64 FileOffset;
};

typedef struct _CHAR_INFO {
     <unnamed-type-Char>;
    union {
        WCHAR UnicodeChar;
        CHAR AsciiChar;
    } Char;
    USHORT Attributes;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    ULONG AttributeCount;
     <unnamed-type-Attribute>;
    union {
        struct _CLAIM_SECURITY_ATTRIBUTE_V1 *pAttributeV1;
    } Attribute;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {
    ULONG64 Version;
    PWCHAR Name;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
    PVOID pValue;
    ULONG ValueLength;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {
    ULONG Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        ULONG pInt64[1];
        ULONG pUint64[1];
        ULONG ppString[1];
        ULONG pFqbn[1];
        ULONG pOctetString[1];
    } Values;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {
    PWCHAR Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        PLONG64 pInt64;
        PULONG64 pUint64;
        PWCHAR *ppString;
        struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE *pFqbn;
        struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *pOctetString;
    } Values;
};

typedef struct _CLIENT_ID {
    PVOID UniqueProcess;
    PVOID UniqueThread;
};

typedef struct _CLIENT_ID64 {
    ULONG64 UniqueProcess;
    ULONG64 UniqueThread;
};

typedef struct _CLUSTER_RANGE {
    union _LARGE_INTEGER StartingCluster;
    union _LARGE_INTEGER ClusterCount;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO {
    ULONG dwCmcDataReference;
    ULONG cCertReference;
    PULONG rgdwCertReference;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CMC_ADD_EXTENSIONS_INFO {
    ULONG dwCmcDataReference;
    ULONG cCertReference;
    PULONG rgdwCertReference;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CMC_DATA_INFO {
    ULONG cTaggedAttribute;
    struct _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
    ULONG cTaggedRequest;
    struct _CMC_TAGGED_REQUEST *rgTaggedRequest;
    ULONG cTaggedContentInfo;
    struct _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
    ULONG cTaggedOtherMsg;
    struct _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

typedef struct _CMC_PEND_INFO {
    struct _CRYPTOAPI_BLOB PendToken;
    struct _FILETIME PendTime;
};

typedef struct _CMC_RESPONSE_INFO {
    ULONG cTaggedAttribute;
    struct _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
    ULONG cTaggedContentInfo;
    struct _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
    ULONG cTaggedOtherMsg;
    struct _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

typedef struct _CMC_STATUS_INFO {
    ULONG dwStatus;
    ULONG cBodyList;
    PULONG rgdwBodyList;
    PWCHAR pwszStatusString;
    ULONG dwOtherInfoChoice;
    ULONG dwFailInfo;
    struct _CMC_PEND_INFO *pPendInfo;
};

typedef struct _CMC_TAGGED_ATTRIBUTE {
    ULONG dwBodyPartID;
    struct _CRYPT_ATTRIBUTE Attribute;
};

typedef struct _CMC_TAGGED_CERT_REQUEST {
    ULONG dwBodyPartID;
    struct _CRYPTOAPI_BLOB SignedCertRequest;
};

typedef struct _CMC_TAGGED_CONTENT_INFO {
    ULONG dwBodyPartID;
    struct _CRYPTOAPI_BLOB EncodedContentInfo;
};

typedef struct _CMC_TAGGED_OTHER_MSG {
    ULONG dwBodyPartID;
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CMC_TAGGED_REQUEST {
    ULONG dwTaggedRequestChoice;
    struct _CMC_TAGGED_CERT_REQUEST *pTaggedCertRequest;
};

typedef struct _CMSG_CMS_RECIPIENT_INFO {
    ULONG dwRecipientChoice;
    struct _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
    struct _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
    struct _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
};

typedef struct _CMSG_CMS_SIGNER_INFO {
    ULONG dwVersion;
    struct _CERT_ID SignerId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedHash;
    struct _CRYPT_ATTRIBUTES AuthAttrs;
    struct _CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID *pfnAlloc;
    PVOID pfnFree;
    ULONG64 hNCryptKey;
    PUCHAR pbContentEncryptKey;
    ULONG cbContentEncryptKey;
    PVOID hCNGContentEncryptKey;
    PUCHAR pbCNGContentEncryptKeyObject;
};

typedef struct _CMSG_CONTENT_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG cRecipients;
    struct _CMSG_RECIPIENT_ENCODE_INFO *rgCmsRecipients;
    PVOID *pfnAlloc;
    PVOID pfnFree;
    ULONG dwEncryptFlags;
    ULONG64 hContentEncryptKey;
    PVOID hCNGContentEncryptKey;
    ULONG dwFlags;
    LONG fCNG;
    PUCHAR pbCNGContentEncryptKeyObject;
    PUCHAR pbContentEncryptKey;
    ULONG cbContentEncryptKey;
};

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
    ULONG cbSize;
    ULONG dwSignerIndex;
    struct _CRYPTOAPI_BLOB blob;
};

typedef struct _CMSG_CTRL_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    ULONG dwRecipientIndex;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
    ULONG cbSize;
    ULONG dwSignerIndex;
    ULONG dwUnauthAttrIndex;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
    ULONG dwRecipientIndex;
    ULONG dwRecipientEncryptedKeyIndex;
    struct _CRYPT_BIT_BLOB OriginatorPublicKey;
};

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
    ULONG dwRecipientIndex;
};

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
    ULONG dwRecipientIndex;
    ULONG dwKeyChoice;
    ULONG64 hKeyEncryptionKey;
    PVOID pvKeyEncryptionKey;
};

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG dwSignerIndex;
    ULONG dwSignerType;
    PVOID pvSigner;
};

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
};

typedef struct _CMSG_ENVELOPED_ENCODE_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG cRecipients;
    struct _CERT_INFO **rgpRecipients;
};

typedef struct _CMSG_HASHED_ENCODE_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
};

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    ULONG dwOriginatorChoice;
    struct _CERT_ID OriginatorCertId;
    struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
    ULONG cKeyAgreeKeyEncryptInfo;
    struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO **rgpKeyAgreeKeyEncryptInfo;
    ULONG dwFlags;
};

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
    ULONG cbSize;
    struct _CRYPTOAPI_BLOB EncryptedKey;
};

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
    PVOID pvKeyWrapAuxInfo;
    ULONG64 hCryptProv;
    ULONG dwKeySpec;
    ULONG dwKeyChoice;
    struct _CRYPT_ALGORITHM_IDENTIFIER *pEphemeralAlgorithm;
    struct _CERT_ID *pSenderId;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    ULONG cRecipientEncryptedKeys;
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO **rgpRecipientEncryptedKeys;
};

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
    ULONG dwVersion;
    ULONG dwOriginatorChoice;
    struct _CERT_ID OriginatorCertId;
    struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    ULONG cRecipientEncryptedKeys;
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO **rgpRecipientEncryptedKeys;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    ULONG dwFlags;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    ULONG64 hCryptProv;
    struct _CRYPT_BIT_BLOB RecipientPublicKey;
    struct _CERT_ID RecipientId;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
    ULONG dwVersion;
    struct _CERT_ID RecipientId;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    ULONG dwFlags;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    ULONG64 hCryptProv;
    ULONG dwKeyChoice;
    ULONG64 hKeyEncryptionKey;
    PVOID pvKeyEncryptionKey;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_RC2_AUX_INFO {
    ULONG cbSize;
    ULONG dwBitLen;
};

typedef struct _CMSG_RC4_AUX_INFO {
    ULONG cbSize;
    ULONG dwBitLen;
};

typedef struct _CMSG_RECIPIENT_ENCODE_INFO {
    ULONG dwRecipientChoice;
    struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *pKeyTrans;
    struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *pKeyAgree;
    struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *pMailList;
};

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_BIT_BLOB RecipientPublicKey;
    struct _CERT_ID RecipientId;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
    struct _CERT_ID RecipientId;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
    ULONG cbSize;
    struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
    struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

typedef struct _CMSG_SIGNED_ENCODE_INFO {
    ULONG cbSize;
    ULONG cSigners;
    struct _CMSG_SIGNER_ENCODE_INFO *rgSigners;
    ULONG cCertEncoded;
    struct _CRYPTOAPI_BLOB *rgCertEncoded;
    ULONG cCrlEncoded;
    struct _CRYPTOAPI_BLOB *rgCrlEncoded;
};

typedef struct _CMSG_SIGNER_ENCODE_INFO {
    ULONG cbSize;
    struct _CERT_INFO *pCertInfo;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    ULONG cAuthAttr;
    struct _CRYPT_ATTRIBUTE *rgAuthAttr;
    ULONG cUnauthAttr;
    struct _CRYPT_ATTRIBUTE *rgUnauthAttr;
};

typedef struct _CMSG_SIGNER_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedHash;
    struct _CRYPT_ATTRIBUTES AuthAttrs;
    struct _CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct _CMSG_STREAM_INFO {
    ULONG cbContent;
    PLONG pfnStreamOutput;
    PVOID pvArg;
};

typedef struct _CMS_DH_KEY_INFO {
    ULONG dwVersion;
    ULONG Algid;
    PCHAR pszContentEncObjId;
    struct _CRYPTOAPI_BLOB PubInfo;
    PVOID pReserved;
};

typedef struct _CMS_KEY_INFO {
    ULONG dwVersion;
    ULONG Algid;
    PUCHAR pbOID;
    ULONG cbOID;
};

typedef struct _CM_COMPONENT_INFORMATION {
    struct _DEVICE_FLAGS Flags;
    ULONG Version;
    ULONG Key;
    ULONG64 AffinityMask;
};

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA {
    ULONG BytesPerSector;
    ULONG NumberOfCylinders;
    ULONG SectorsPerTrack;
    ULONG NumberOfHeads;
};

typedef struct _CM_EISA_FUNCTION_INFORMATION {
    ULONG CompressedId;
    UCHAR IdSlotFlags1;
    UCHAR IdSlotFlags2;
    UCHAR MinorRevision;
    UCHAR MajorRevision;
    UCHAR Selections[26];
    UCHAR FunctionFlags;
    UCHAR TypeString[80];
    struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
    struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
    struct _EISA_DMA_CONFIGURATION EisaDma[4];
    struct _EISA_PORT_CONFIGURATION EisaPort[20];
    UCHAR InitializationData[60];
};

typedef struct _CM_EISA_SLOT_INFORMATION {
    UCHAR ReturnCode;
    UCHAR ReturnFlags;
    UCHAR MajorRevision;
    UCHAR MinorRevision;
    USHORT Checksum;
    UCHAR NumberFunctions;
    UCHAR FunctionInformation;
    ULONG CompressedId;
};

typedef struct _CM_FLOPPY_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    CHAR Size[8];
    ULONG MaxDensity;
    ULONG MountDensity;
    UCHAR StepRateHeadUnloadTime;
    UCHAR HeadLoadTime;
    UCHAR MotorOffTime;
    UCHAR SectorLengthCode;
    UCHAR SectorPerTrack;
    UCHAR ReadWriteGapLength;
    UCHAR DataTransferLength;
    UCHAR FormatGapLength;
    UCHAR FormatFillCharacter;
    UCHAR HeadSettleTime;
    UCHAR MotorSettleTime;
    UCHAR MaximumTrackValue;
    UCHAR DataTransferRate;
};

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR {
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

typedef struct _CM_INT13_DRIVE_PARAMETER {
    USHORT DriveSelect;
    ULONG MaxCylinders;
    USHORT SectorsPerTrack;
    USHORT MaxHeads;
    USHORT NumberDrives;
};

typedef struct _CM_KEYBOARD_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    UCHAR Type;
    UCHAR Subtype;
    USHORT KeyboardFlags;
};

typedef struct _CM_MCA_POS_DATA {
    USHORT AdapterId;
    UCHAR PosData1;
    UCHAR PosData2;
    UCHAR PosData3;
    UCHAR PosData4;
};

typedef struct _CM_MONITOR_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    USHORT HorizontalScreenSize;
    USHORT VerticalScreenSize;
    USHORT HorizontalResolution;
    USHORT VerticalResolution;
    USHORT HorizontalDisplayTimeLow;
    USHORT HorizontalDisplayTime;
    USHORT HorizontalDisplayTimeHigh;
    USHORT HorizontalBackPorchLow;
    USHORT HorizontalBackPorch;
    USHORT HorizontalBackPorchHigh;
    USHORT HorizontalFrontPorchLow;
    USHORT HorizontalFrontPorch;
    USHORT HorizontalFrontPorchHigh;
    USHORT HorizontalSyncLow;
    USHORT HorizontalSync;
    USHORT HorizontalSyncHigh;
    USHORT VerticalBackPorchLow;
    USHORT VerticalBackPorch;
    USHORT VerticalBackPorchHigh;
    USHORT VerticalFrontPorchLow;
    USHORT VerticalFrontPorch;
    USHORT VerticalFrontPorchHigh;
    USHORT VerticalSyncLow;
    USHORT VerticalSync;
    USHORT VerticalSyncHigh;
};

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {
    UCHAR Type;
    UCHAR ShareDisposition;
    USHORT Flags;
     <unnamed-type-u>;
    union {
         <unnamed-type-Generic>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Generic;
         <unnamed-type-Port>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Port;
         <unnamed-type-Interrupt>;
        struct {
            ULONG Level;
            ULONG Vector;
            ULONG64 Affinity;
        } Interrupt;
         <unnamed-type-MessageInterrupt>;
        struct {
            struct {
                USHORT Reserved;
                USHORT MessageCount;
                ULONG Vector;
                ULONG64 Affinity;
            } Raw;
            struct {
                ULONG Level;
                ULONG Vector;
                ULONG64 Affinity;
            } Translated;
        } MessageInterrupt;
         <unnamed-type-Memory>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Memory;
         <unnamed-type-Dma>;
        struct {
            ULONG Channel;
            ULONG Port;
            ULONG Reserved1;
        } Dma;
         <unnamed-type-DmaV3>;
        struct {
            ULONG Channel;
            ULONG RequestLine;
            UCHAR TransferWidth;
            UCHAR Reserved1;
            UCHAR Reserved2;
            UCHAR Reserved3;
        } DmaV3;
         <unnamed-type-DevicePrivate>;
        struct {
            ULONG Data[3];
        } DevicePrivate;
         <unnamed-type-BusNumber>;
        struct {
            ULONG Start;
            ULONG Length;
            ULONG Reserved;
        } BusNumber;
         <unnamed-type-DeviceSpecificData>;
        struct {
            ULONG DataSize;
            ULONG Reserved1;
            ULONG Reserved2;
        } DeviceSpecificData;
         <unnamed-type-Memory40>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length40;
        } Memory40;
         <unnamed-type-Memory48>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length48;
        } Memory48;
         <unnamed-type-Memory64>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length64;
        } Memory64;
         <unnamed-type-Connection>;
        struct {
            UCHAR Class;
            UCHAR Type;
            UCHAR Reserved1;
            UCHAR Reserved2;
            ULONG IdLowPart;
            ULONG IdHighPart;
        } Connection;
    } u;
};

typedef struct _CM_PARTIAL_RESOURCE_LIST {
    USHORT Version;
    USHORT Revision;
    ULONG Count;
    struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

typedef struct _CM_PCCARD_DEVICE_DATA {
    UCHAR Flags;
    UCHAR ErrorCode;
    USHORT Reserved;
    ULONG BusData;
    ULONG DeviceId;
    ULONG LegacyBaseAddress;
    UCHAR IRQMap[16];
};

typedef struct _CM_PNP_BIOS_DEVICE_NODE {
    USHORT Size;
    UCHAR Node;
    ULONG ProductId;
    UCHAR DeviceType[3];
    USHORT DeviceAttributes;
};

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK {
    UCHAR Signature[4];
    UCHAR Revision;
    UCHAR Length;
    USHORT ControlField;
    UCHAR Checksum;
    ULONG EventFlagAddress;
    USHORT RealModeEntryOffset;
    USHORT RealModeEntrySegment;
    USHORT ProtectedModeEntryOffset;
    ULONG ProtectedModeCodeBaseAddress;
    ULONG OemDeviceId;
    USHORT RealModeDataBaseAddress;
    ULONG ProtectedModeDataBaseAddress;
};

typedef struct _CM_RESOURCE_LIST {
    ULONG Count;
    struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

typedef struct _CM_ROM_BLOCK {
    ULONG Address;
    ULONG Size;
};

typedef struct _CM_SCSI_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    UCHAR HostIdentifier;
};

typedef struct _CM_SERIAL_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    ULONG BaudClock;
};

typedef struct _CM_SONIC_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    USHORT DataConfigurationRegister;
    UCHAR EthernetAddress[8];
};

typedef struct _CM_VIDEO_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    ULONG VideoClock;
};

typedef struct _COAUTHIDENTITY {
    PWCHAR User;
    ULONG UserLength;
    PWCHAR Domain;
    ULONG DomainLength;
    PWCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _COAUTHINFO {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PWCHAR pwszServerPrincName;
    ULONG dwAuthnLevel;
    ULONG dwImpersonationLevel;
    struct _COAUTHIDENTITY *pAuthIdentityData;
    ULONG dwCapabilities;
};

typedef struct _COMDLG_FILTERSPEC {
    PWCHAR pszName;
    PWCHAR pszSpec;
};

typedef struct _COMMCONFIG {
    ULONG dwSize;
    USHORT wVersion;
    USHORT wReserved;
    struct _DCB dcb;
    ULONG dwProviderSubType;
    ULONG dwProviderOffset;
    ULONG dwProviderSize;
    WCHAR wcProviderData[1];
};

typedef struct _COMMPROP {
    USHORT wPacketLength;
    USHORT wPacketVersion;
    ULONG dwServiceMask;
    ULONG dwReserved1;
    ULONG dwMaxTxQueue;
    ULONG dwMaxRxQueue;
    ULONG dwMaxBaud;
    ULONG dwProvSubType;
    ULONG dwProvCapabilities;
    ULONG dwSettableParams;
    ULONG dwSettableBaud;
    USHORT wSettableData;
    USHORT wSettableStopParity;
    ULONG dwCurrentTxQueue;
    ULONG dwCurrentRxQueue;
    ULONG dwProvSpec1;
    ULONG dwProvSpec2;
    WCHAR wcProvChar[1];
};

typedef struct _COMMTIMEOUTS {
    ULONG ReadIntervalTimeout;
    ULONG ReadTotalTimeoutMultiplier;
    ULONG ReadTotalTimeoutConstant;
    ULONG WriteTotalTimeoutMultiplier;
    ULONG WriteTotalTimeoutConstant;
};

typedef struct _COMM_FAULT_OFFSETS {
    SHORT CommOffset;
    SHORT FaultOffset;
};

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {
    struct _GUID Id;
    enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
};

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    USHORT CompoundAceType;
    USHORT Reserved;
    ULONG SidStart;
};

typedef struct _COMPRESSED_DATA_INFO {
    USHORT CompressionFormatAndEngine;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved;
    USHORT NumberOfChunks;
    ULONG CompressedChunkSizes[1];
};

typedef struct _COMSTAT {
    ULONG fCtsHold : 1;
    ULONG fDsrHold : 1;
    ULONG fRlsdHold : 1;
    ULONG fXoffHold : 1;
    ULONG fXoffSent : 1;
    ULONG fEof : 1;
    ULONG fTxim : 1;
    ULONG fReserved : 25;
    ULONG cbInQue;
    ULONG cbOutQue;
};

typedef struct _CONNECTDLGSTRUCTA {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    struct _NETRESOURCEA *lpConnRes;
    ULONG dwFlags;
    ULONG dwDevNum;
};

typedef struct _CONNECTDLGSTRUCTW {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    struct _NETRESOURCEW *lpConnRes;
    ULONG dwFlags;
    ULONG dwDevNum;
};

typedef struct _CONSOLE_CURSOR_INFO {
    ULONG dwSize;
    LONG bVisible;
};

typedef struct _CONSOLE_FONT_INFO {
    ULONG nFont;
    struct _COORD dwFontSize;
};

typedef struct _CONSOLE_FONT_INFOEX {
    ULONG cbSize;
    ULONG nFont;
    struct _COORD dwFontSize;
    ULONG FontFamily;
    ULONG FontWeight;
    WCHAR FaceName[32];
};

typedef struct _CONSOLE_HISTORY_INFO {
    ULONG cbSize;
    ULONG HistoryBufferSize;
    ULONG NumberOfHistoryBuffers;
    ULONG dwFlags;
};

typedef struct _CONSOLE_READCONSOLE_CONTROL {
    ULONG nLength;
    ULONG nInitialChars;
    ULONG dwCtrlWakeupMask;
    ULONG dwControlKeyState;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFO {
    struct _COORD dwSize;
    struct _COORD dwCursorPosition;
    USHORT wAttributes;
    struct _SMALL_RECT srWindow;
    struct _COORD dwMaximumWindowSize;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX {
    ULONG cbSize;
    struct _COORD dwSize;
    struct _COORD dwCursorPosition;
    USHORT wAttributes;
    struct _SMALL_RECT srWindow;
    struct _COORD dwMaximumWindowSize;
    USHORT wPopupAttributes;
    LONG bFullscreenSupported;
    ULONG ColorTable[16];
};

typedef struct _CONSOLE_SELECTION_INFO {
    ULONG dwFlags;
    struct _COORD dwSelectionAnchor;
    struct _SMALL_RECT srSelection;
};

typedef struct _CONTAINER_ROOT_INFO_INPUT {
    ULONG Flags;
};

typedef struct _CONTAINER_ROOT_INFO_OUTPUT {
    USHORT ContainerRootIdLength;
    UCHAR ContainerRootId[1];
};

typedef struct _CONTAINER_VOLUME_STATE {
    ULONG Flags;
};

typedef struct _CONTEXT {
    ULONG64 P1Home;
    ULONG64 P2Home;
    ULONG64 P3Home;
    ULONG64 P4Home;
    ULONG64 P5Home;
    ULONG64 P6Home;
    ULONG ContextFlags;
    ULONG MxCsr;
    USHORT SegCs;
    USHORT SegDs;
    USHORT SegEs;
    USHORT SegFs;
    USHORT SegGs;
    USHORT SegSs;
    ULONG EFlags;
    ULONG64 Dr0;
    ULONG64 Dr1;
    ULONG64 Dr2;
    ULONG64 Dr3;
    ULONG64 Dr6;
    ULONG64 Dr7;
    ULONG64 Rax;
    ULONG64 Rcx;
    ULONG64 Rdx;
    ULONG64 Rbx;
    ULONG64 Rsp;
    ULONG64 Rbp;
    ULONG64 Rsi;
    ULONG64 Rdi;
    ULONG64 R8;
    ULONG64 R9;
    ULONG64 R10;
    ULONG64 R11;
    ULONG64 R12;
    ULONG64 R13;
    ULONG64 R14;
    ULONG64 R15;
    ULONG64 Rip;
    struct _XSAVE_FORMAT FltSave;
    struct _M128A Header[2];
    struct _M128A Legacy[8];
    struct _M128A Xmm0;
    struct _M128A Xmm1;
    struct _M128A Xmm2;
    struct _M128A Xmm3;
    struct _M128A Xmm4;
    struct _M128A Xmm5;
    struct _M128A Xmm6;
    struct _M128A Xmm7;
    struct _M128A Xmm8;
    struct _M128A Xmm9;
    struct _M128A Xmm10;
    struct _M128A Xmm11;
    struct _M128A Xmm12;
    struct _M128A Xmm13;
    struct _M128A Xmm14;
    struct _M128A Xmm15;
    struct _M128A VectorRegister[26];
    ULONG64 VectorControl;
    ULONG64 DebugControl;
    ULONG64 LastBranchToRip;
    ULONG64 LastBranchFromRip;
    ULONG64 LastExceptionToRip;
    ULONG64 LastExceptionFromRip;
};

typedef struct _CONTEXT_CHUNK {
    LONG Offset;
    ULONG Length;
};

typedef struct _CONTEXT_EX {
    struct _CONTEXT_CHUNK All;
    struct _CONTEXT_CHUNK Legacy;
    struct _CONTEXT_CHUNK XState;
};

typedef struct _COORD {
    SHORT X;
    SHORT Y;
};

typedef struct _COSERVERINFO {
    ULONG dwReserved1;
    PWCHAR pwszName;
    struct _COAUTHINFO *pAuthInfo;
    ULONG dwReserved2;
};

typedef struct _COUNTED_REASON_CONTEXT {
    ULONG Version;
    ULONG Flags;
    struct _UNICODE_STRING ResourceFileName;
    USHORT ResourceReasonId;
    ULONG StringCount;
    struct _UNICODE_STRING *ReasonStrings;
    struct _UNICODE_STRING SimpleString;
};

typedef struct _COUNTER_READING {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Index;
    ULONG64 Start;
    ULONG64 Total;
};

typedef struct _COVERAGE_MODULES {
    ULONG ListAndReset;
    ULONG NumberOfModules;
    struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
    struct _COVERAGE_MODULE_INFO Modules[1];
};

typedef struct _COVERAGE_MODULE_INFO {
    ULONG ModuleInfoSize;
    ULONG IsBinaryLoaded;
    struct _UNICODE_STRING ModulePathName;
    ULONG CoverageSectionSize;
    UCHAR CoverageSection[1];
};

typedef struct _COVERAGE_MODULE_REQUEST {
    enum _COVERAGE_REQUEST_CODES RequestType;
     <unnamed-type-SearchInfo>;
    union {
        UCHAR MD5Hash[16];
        struct _UNICODE_STRING ModuleName;
    } SearchInfo;
};

typedef struct _COVERAGE_SECTION_HEADER {
    ULONG Signature;
    ULONG CoverageType;
    UCHAR MD5Hash[16];
    ULONG CoverageSectionSize;
    ULONG CoverageVectorSize;
    ULONG CoverageVectorOffset;
    ULONG ExtraDataOffset;
};

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY {
    struct _LIST_ENTRY NextEntry;
    struct _UNICODE_STRING BaseDllName;
    struct _UNICODE_STRING FullDllName;
    ULONG CoverageSectionSize;
    PVOID CoverageSection;
};

typedef struct _CPS_URLS {
    PWCHAR pszURL;
    struct _CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
    struct _CRYPTOAPI_BLOB *pDigest;
};

typedef struct _CPTABLEINFO {
    USHORT CodePage;
    USHORT MaximumCharacterSize;
    USHORT DefaultChar;
    USHORT UniDefaultChar;
    USHORT TransDefaultChar;
    USHORT TransUniDefaultChar;
    USHORT DBCSCodePage;
    UCHAR LeadByte[12];
    PWCHAR MultiByteTable;
    PVOID WideCharTable;
    PWCHAR DBCSRanges;
    PWCHAR DBCSOffsets;
};

typedef struct _CREATEFILE2_EXTENDED_PARAMETERS {
    ULONG dwSize;
    ULONG dwFileAttributes;
    ULONG dwFileFlags;
    ULONG dwSecurityQosFlags;
    struct _SECURITY_ATTRIBUTES *lpSecurityAttributes;
    PVOID hTemplateFile;
};

typedef struct _CREATE_PROCESS_DEBUG_INFO {
    PVOID hFile;
    PVOID hProcess;
    PVOID hThread;
    PVOID lpBaseOfImage;
    ULONG dwDebugInfoFileOffset;
    ULONG nDebugInfoSize;
    PVOID lpThreadLocalBase;
    PULONG lpStartAddress;
    PVOID lpImageName;
    USHORT fUnicode;
};

typedef struct _CREATE_THREAD_DEBUG_INFO {
    PVOID hThread;
    PVOID lpThreadLocalBase;
    PULONG lpStartAddress;
};

typedef struct _CRITICAL_PROCESS_EXCEPTION_DATA {
    struct _GUID ReportId;
    struct _UNICODE_STRING ModuleName;
    ULONG ModuleTimestamp;
    ULONG ModuleSize;
    ULONG64 Offset;
};

typedef struct _CRL_CONTEXT {
    ULONG dwCertEncodingType;
    PUCHAR pbCrlEncoded;
    ULONG cbCrlEncoded;
    struct _CRL_INFO *pCrlInfo;
    PVOID hCertStore;
};

typedef struct _CRL_DIST_POINT {
    struct _CRL_DIST_POINT_NAME DistPointName;
    struct _CRYPT_BIT_BLOB ReasonFlags;
    struct _CERT_ALT_NAME_INFO CRLIssuer;
};

typedef struct _CRL_DIST_POINTS_INFO {
    ULONG cDistPoint;
    struct _CRL_DIST_POINT *rgDistPoint;
};

typedef struct _CRL_DIST_POINT_NAME {
    ULONG dwDistPointNameChoice;
    struct _CERT_ALT_NAME_INFO FullName;
};

typedef struct _CRL_ENTRY {
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _FILETIME RevocationDate;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA {
    struct _CERT_CONTEXT *pSubjectCert;
    struct _CERT_CONTEXT *pIssuerCert;
};

typedef struct _CRL_INFO {
    ULONG dwVersion;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    ULONG cCRLEntry;
    struct _CRL_ENTRY *rgCRLEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRL_ISSUING_DIST_POINT {
    struct _CRL_DIST_POINT_NAME DistPointName;
    LONG fOnlyContainsUserCerts;
    LONG fOnlyContainsCACerts;
    struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
    LONG fIndirectCRL;
};

typedef struct _CRL_REVOCATION_INFO {
    struct _CRL_ENTRY *pCrlEntry;
    struct _CRL_CONTEXT *pCrlContext;
    struct _CERT_CHAIN_CONTEXT *pCrlIssuerChain;
};

typedef struct _CROSS_CERT_DIST_POINTS_INFO {
    ULONG dwSyncDeltaTime;
    ULONG cDistPoint;
    struct _CERT_ALT_NAME_INFO *rgDistPoint;
};

typedef struct _CRT_DOUBLE {
    DOUBLE x;
};

typedef struct _CRT_FLOAT {
    FLOAT f;
};

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO {
    ULONG cbSize;
    ULONG dwExemptSeconds;
    struct _FILETIME ExpireTime;
};

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {
    ULONG cbSize;
    ULONG dwObjectType;
    ULONG dwError;
    ULONG dwReserved;
    struct _FILETIME ThisUpdateTime;
    struct _FILETIME NextUpdateTime;
    struct _FILETIME PublishTime;
};

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {
    ULONG cbSize;
    USHORT wResponseType;
    USHORT wResponseFlags;
    struct _FILETIME LastModifiedTime;
    ULONG dwMaxAge;
    PWCHAR pwszETag;
    ULONG dwProxyId;
};

typedef struct _CRYPTOAPI_BLOB {
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _CRYPTPROTECT_PROMPTSTRUCT {
    ULONG cbSize;
    ULONG dwPromptFlags;
    struct HWND__ *hwndApp;
    PWCHAR szPrompt;
};

typedef struct _CRYPT_3DES_KEY_STATE {
    UCHAR Key[24];
    UCHAR IV[8];
    UCHAR Feedback[8];
};

typedef struct _CRYPT_AES_128_KEY_STATE {
    UCHAR Key[16];
    UCHAR IV[16];
    UCHAR EncryptionState[11][16];
    UCHAR DecryptionState[11][16];
    UCHAR Feedback[16];
};

typedef struct _CRYPT_AES_256_KEY_STATE {
    UCHAR Key[32];
    UCHAR IV[16];
    UCHAR EncryptionState[15][16];
    UCHAR DecryptionState[15][16];
    UCHAR Feedback[16];
};

typedef struct _CRYPT_ALGORITHM_IDENTIFIER {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Parameters;
};

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
    PVOID pfnCompletion;
    PVOID pvCompletion;
};

typedef struct _CRYPT_ATTRIBUTE {
    PCHAR pszObjId;
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_ATTRIBUTES {
    ULONG cAttr;
    struct _CRYPT_ATTRIBUTE *rgAttr;
};

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CRYPT_BIT_BLOB {
    ULONG cbData;
    PUCHAR pbData;
    ULONG cUnusedBits;
};

typedef struct _CRYPT_BLOB_ARRAY {
    ULONG cBlob;
    struct _CRYPTOAPI_BLOB *rgBlob;
};

typedef struct _CRYPT_CONTENT_INFO {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Content;
};

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
    PCHAR pszObjId;
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_CONTEXTS {
    ULONG cContexts;
    PWCHAR *rgpszContexts;
};

typedef struct _CRYPT_CONTEXT_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTIONS {
    ULONG cFunctions;
    PWCHAR *rgpszFunctions;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS {
    ULONG cProviders;
    PWCHAR *rgpszProviders;
};

typedef struct _CRYPT_CREDENTIALS {
    ULONG cbSize;
    PCHAR pszCredentialsOid;
    PVOID pvCredentials;
};

typedef struct _CRYPT_CSP_PROVIDER {
    ULONG dwKeySpec;
    PWCHAR pwszProviderName;
    struct _CRYPT_BIT_BLOB Signature;
};

typedef struct _CRYPT_DECODE_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG cCertStore;
    PVOID *rghCertStore;
};

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
    ULONG cOID;
    PCHAR *rgpszOID;
};

typedef struct _CRYPT_DES_KEY_STATE {
    UCHAR Key[8];
    UCHAR IV[8];
    UCHAR Feedback[8];
};

typedef struct _CRYPT_ECC_CMS_SHARED_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPTOAPI_BLOB EntityUInfo;
    UCHAR rgbSuppPubInfo[4];
};

typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB PrivateKey;
    PCHAR szCurveOid;
    struct _CRYPT_BIT_BLOB PublicKey;
};

typedef struct _CRYPT_ENCODE_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
};

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG dwFlags;
    ULONG dwInnerContentType;
};

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
    PWCHAR pwszName;
    PWCHAR pwszValue;
};

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
    ULONG cbSize;
    LONG iDeltaCrlIndicator;
    struct _FILETIME *pftCacheResync;
    struct _FILETIME *pLastSyncTime;
    struct _FILETIME *pMaxAgeTime;
    struct _CERT_REVOCATION_CHAIN_PARA *pChainPara;
    struct _CRYPTOAPI_BLOB *pDeltaCrlIndicator;
};

typedef struct _CRYPT_HASH_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB Hash;
};

typedef struct _CRYPT_HASH_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
};

typedef struct _CRYPT_IMAGE_REF {
    PWCHAR pszImage;
    ULONG dwFlags;
};

typedef struct _CRYPT_IMAGE_REG {
    PWCHAR pszImage;
    ULONG cInterfaces;
    struct _CRYPT_INTERFACE_REG **rgpInterfaces;
};

typedef struct _CRYPT_INTERFACE_REG {
    ULONG dwInterface;
    ULONG dwFlags;
    ULONG cFunctions;
    PWCHAR *rgpszFunctions;
};

typedef struct _CRYPT_KEY_PROV_INFO {
    PWCHAR pwszContainerName;
    PWCHAR pwszProvName;
    ULONG dwProvType;
    ULONG dwFlags;
    ULONG cProvParam;
    struct _CRYPT_KEY_PROV_PARAM *rgProvParam;
    ULONG dwKeySpec;
};

typedef struct _CRYPT_KEY_PROV_PARAM {
    ULONG dwParam;
    PUCHAR pbData;
    ULONG cbData;
    ULONG dwFlags;
};

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
};

typedef struct _CRYPT_MASK_GEN_ALGORITHM {
    PCHAR pszObjId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
};

typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE {
    ULONG cbSize;
    PLONG pfnGet;
    PVOID pfnRelease;
    PVOID pfnFreePassword;
    PVOID pfnFree;
    PVOID pfnFreeIdentifier;
};

typedef struct _CRYPT_OBJID_TABLE {
    ULONG dwAlgId;
    PCHAR pszObjId;
};

typedef struct _CRYPT_OID_FUNC_ENTRY {
    PCHAR pszOID;
    PVOID pvFuncAddr;
};

typedef struct _CRYPT_OID_INFO {
    ULONG cbSize;
    PCHAR pszOID;
    PWCHAR pwszName;
    ULONG dwGroupId;
    ULONG dwValue;
    ULONG Algid;
    ULONG dwLength;
    struct _CRYPTOAPI_BLOB ExtraInfo;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSA {
    ULONG cbSize;
    PCHAR pszUsername;
    PCHAR pszPassword;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSW {
    ULONG cbSize;
    PWCHAR pszUsername;
    PWCHAR pszPassword;
};

typedef struct _CRYPT_PKCS12_PBE_PARAMS {
    LONG iIterations;
    ULONG cbSalt;
};

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS {
    ULONG64 hCryptProv;
    ULONG dwKeySpec;
    PCHAR pszPrivateKeyObjId;
    PLONG pEncryptPrivateKeyFunc;
    PVOID pVoidEncryptFunc;
};

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {
    struct _CRYPTOAPI_BLOB PrivateKey;
    PLONG pResolvehCryptProvFunc;
    PVOID pVoidResolveFunc;
    PLONG pDecryptPrivateKeyFunc;
    PVOID pVoidDecryptFunc;
};

typedef struct _CRYPT_PRIVATE_KEY_INFO {
    ULONG Version;
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPTOAPI_BLOB PrivateKey;
    struct _CRYPT_ATTRIBUTES *pAttributes;
};

typedef struct _CRYPT_PROPERTY_REF {
    PWCHAR pszProperty;
    ULONG cbValue;
    PUCHAR pbValue;
};

typedef struct _CRYPT_PROVIDERS {
    ULONG cProviders;
    PWCHAR *rgpszProviders;
};

typedef struct _CRYPT_PROVIDER_REF {
    ULONG dwInterface;
    PWCHAR pszFunction;
    PWCHAR pszProvider;
    ULONG cProperties;
    struct _CRYPT_PROPERTY_REF **rgpProperties;
    struct _CRYPT_IMAGE_REF *pUM;
    struct _CRYPT_IMAGE_REF *pKM;
};

typedef struct _CRYPT_PROVIDER_REFS {
    ULONG cProviders;
    struct _CRYPT_PROVIDER_REF **rgpProviders;
};

typedef struct _CRYPT_PROVIDER_REG {
    ULONG cAliases;
    PWCHAR *rgpszAliases;
    struct _CRYPT_IMAGE_REG *pUM;
    struct _CRYPT_IMAGE_REG *pKM;
};

typedef struct _CRYPT_PSOURCE_ALGORITHM {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB EncodingParameters;
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS {
    ULONG dwVersion;
    LONG fIV;
    UCHAR rgbIV[8];
};

typedef struct _CRYPT_RC4_KEY_STATE {
    UCHAR Key[16];
    UCHAR SBox[256];
    UCHAR i;
    UCHAR j;
};

typedef struct _CRYPT_RETRIEVE_AUX_INFO {
    ULONG cbSize;
    struct _FILETIME *pLastSyncTime;
    ULONG dwMaxUrlRetrievalByteCount;
    struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO *pPreFetchInfo;
    struct _CRYPTNET_URL_CACHE_FLUSH_INFO *pFlushInfo;
    struct _CRYPTNET_URL_CACHE_RESPONSE_INFO **ppResponseInfo;
    PWCHAR pwszCacheFileNamePrefix;
    struct _FILETIME *pftCacheResync;
    LONG fProxyCacheRetrieval;
    ULONG dwHttpStatusCode;
    PWCHAR *ppwszErrorResponseHeaders;
    struct _CRYPTOAPI_BLOB **ppErrorContentBlob;
};

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
};

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    ULONG dwSaltLength;
    ULONG dwTrailerField;
};

typedef struct _CRYPT_SEQUENCE_OF_ANY {
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_SIGN_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    struct _CERT_CONTEXT *pSigningCert;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    ULONG cMsgCert;
    struct _CERT_CONTEXT **rgpMsgCert;
    ULONG cMsgCrl;
    struct _CRL_CONTEXT **rgpMsgCrl;
    ULONG cAuthAttr;
    struct _CRYPT_ATTRIBUTE *rgAuthAttr;
    ULONG cUnauthAttr;
    struct _CRYPT_ATTRIBUTE *rgUnauthAttr;
    ULONG dwFlags;
    ULONG dwInnerContentType;
};

typedef struct _CRYPT_SMART_CARD_ROOT_INFO {
    UCHAR rgbCardID[16];
    struct _ROOT_INFO_LUID luid;
};

typedef struct _CRYPT_SMIME_CAPABILITIES {
    ULONG cCapability;
    struct _CRYPT_SMIME_CAPABILITY *rgCapability;
};

typedef struct _CRYPT_SMIME_CAPABILITY {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Parameters;
};

typedef struct _CRYPT_TIMESTAMP_ACCURACY {
    ULONG dwSeconds;
    ULONG dwMillis;
    ULONG dwMicros;
};

typedef struct _CRYPT_TIMESTAMP_CONTEXT {
    ULONG cbEncoded;
    PUCHAR pbEncoded;
    struct _CRYPT_TIMESTAMP_INFO *pTimeStamp;
};

typedef struct _CRYPT_TIMESTAMP_INFO {
    ULONG dwVersion;
    PCHAR pszTSAPolicyId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB HashedMessage;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _FILETIME ftTime;
    struct _CRYPT_TIMESTAMP_ACCURACY *pvAccuracy;
    LONG fOrdering;
    struct _CRYPTOAPI_BLOB Nonce;
    struct _CRYPTOAPI_BLOB Tsa;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_PARA {
    PCHAR pszTSAPolicyId;
    LONG fRequestCerts;
    struct _CRYPTOAPI_BLOB Nonce;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_REQUEST {
    ULONG dwVersion;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB HashedMessage;
    PCHAR pszTSAPolicyId;
    struct _CRYPTOAPI_BLOB Nonce;
    LONG fCertReq;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_RESPONSE {
    ULONG dwStatus;
    ULONG cFreeText;
    PWCHAR *rgFreeText;
    struct _CRYPT_BIT_BLOB FailureInfo;
    struct _CRYPTOAPI_BLOB ContentInfo;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO {
    PCHAR pszTimeStampAlgorithm;
    PCHAR pszContentType;
    struct _CRYPTOAPI_BLOB Content;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CRYPT_URL_ARRAY {
    ULONG cUrl;
    PWCHAR *rgwszUrl;
};

typedef struct _CRYPT_URL_INFO {
    ULONG cbSize;
    ULONG dwSyncDeltaTime;
    ULONG cGroup;
    PULONG rgcGroupEntry;
};

typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO {
    struct _CRYPTOAPI_BLOB CertSignHashCNGAlgPropData;
    struct _CRYPTOAPI_BLOB CertIssuerPubKeyBitLengthPropData;
};

typedef struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO {
    ULONG cCNGHashAlgid;
    PWCHAR *rgpwszCNGHashAlgid;
    ULONG dwWeakIndex;
};

typedef struct _CRYPT_VERIFY_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG64 hCryptProv;
    struct _CERT_CONTEXT **pfnGetSignerCertificate;
    PVOID pvGetArg;
};

typedef struct _CRYPT_X942_OTHER_INFO {
    PCHAR pszContentEncryptionObjId;
    UCHAR rgbCounter[4];
    UCHAR rgbKeyLength[4];
    struct _CRYPTOAPI_BLOB PubInfo;
};

typedef struct _CSTRING {
    USHORT Length;
    USHORT MaximumLength;
    PCHAR Buffer;
};

typedef struct _CSV_CONTROL_PARAM {
    enum _CSV_CONTROL_OP Operation;
    LONG64 Unused;
};

typedef struct _CSV_IS_OWNED_BY_CSVFS {
    UCHAR OwnedByCSVFS;
};

typedef struct _CSV_MGMT_LOCK {
    ULONG Flags;
};

typedef struct _CSV_NAMESPACE_INFO {
    ULONG Version;
    ULONG DeviceNumber;
    union _LARGE_INTEGER StartingOffset;
    ULONG SectorSize;
};

typedef struct _CSV_QUERY_FILE_REVISION {
    LONG64 FileId;
    LONG64 FileRevision[3];
};

typedef struct _CSV_QUERY_FILE_REVISION_FILE_ID_128 {
    struct _FILE_ID_128 FileId;
    LONG64 FileRevision[3];
};

typedef struct _CSV_QUERY_MDS_PATH {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    ULONG PathLength;
    WCHAR Path[1];
};

typedef struct _CSV_QUERY_MDS_PATH_V2 {
    LONG64 Version;
    ULONG RequiredSize;
    ULONG MdsNodeId;
    ULONG DsNodeId;
    ULONG Flags;
    enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
    struct _GUID VolumeId;
    ULONG IpAddressOffset;
    ULONG IpAddressLength;
    ULONG PathOffset;
    ULONG PathLength;
};

typedef struct _CSV_QUERY_REDIRECT_STATE {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    UCHAR FileRedirected;
};

typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT {
    ULONG64 VetoedFromAltitudeIntegral;
    ULONG64 VetoedFromAltitudeDecimal;
    WCHAR Reason[256];
};

typedef struct _CSV_QUERY_VOLUME_REDIRECT_STATE {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    UCHAR IsDiskConnected;
    UCHAR ClusterEnableDirectIo;
    enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
};

typedef struct _CTL_ANY_SUBJECT_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    struct _CRYPTOAPI_BLOB SubjectIdentifier;
};

typedef struct _CTL_CONTEXT {
    ULONG dwMsgAndCertEncodingType;
    PUCHAR pbCtlEncoded;
    ULONG cbCtlEncoded;
    struct _CTL_INFO *pCtlInfo;
    PVOID hCertStore;
    PVOID hCryptMsg;
    PUCHAR pbCtlContent;
    ULONG cbCtlContent;
};

typedef struct _CTL_ENTRY {
    struct _CRYPTOAPI_BLOB SubjectIdentifier;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CTL_FIND_SUBJECT_PARA {
    ULONG cbSize;
    struct _CTL_FIND_USAGE_PARA *pUsagePara;
    ULONG dwSubjectType;
    PVOID pvSubject;
};

typedef struct _CTL_FIND_USAGE_PARA {
    ULONG cbSize;
    struct _CTL_USAGE SubjectUsage;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    struct _CERT_INFO *pSigner;
};

typedef struct _CTL_INFO {
    ULONG dwVersion;
    struct _CTL_USAGE SubjectUsage;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    struct _CRYPTOAPI_BLOB SequenceNumber;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    ULONG cCTLEntry;
    struct _CTL_ENTRY *rgCTLEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CTL_USAGE {
    ULONG cUsageIdentifier;
    PCHAR *rgpszUsageIdentifier;
};

typedef struct _CTL_USAGE_MATCH {
    ULONG dwType;
    struct _CTL_USAGE Usage;
};

typedef struct _CTL_VERIFY_USAGE_PARA {
    ULONG cbSize;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    ULONG cCtlStore;
    PVOID *rghCtlStore;
    ULONG cSignerStore;
    PVOID *rghSignerStore;
};

typedef struct _CTL_VERIFY_USAGE_STATUS {
    ULONG cbSize;
    ULONG dwError;
    ULONG dwFlags;
    struct _CTL_CONTEXT **ppCtl;
    ULONG dwCtlEntryIndex;
    struct _CERT_CONTEXT **ppSigner;
    ULONG dwSignerIndex;
};

typedef struct _CURDIR {
    struct _UNICODE_STRING DosPath;
    PVOID Handle;
};

typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG {
    ULONG Size;
    PWCHAR TriggerId;
};

typedef struct _D3DCOLORVALUE {
    FLOAT r;
    FLOAT g;
    FLOAT b;
    FLOAT a;
};

typedef struct _DCB {
    ULONG DCBlength;
    ULONG BaudRate;
    ULONG fBinary : 1;
    ULONG fParity : 1;
    ULONG fOutxCtsFlow : 1;
    ULONG fOutxDsrFlow : 1;
    ULONG fDtrControl : 2;
    ULONG fDsrSensitivity : 1;
    ULONG fTXContinueOnXoff : 1;
    ULONG fOutX : 1;
    ULONG fInX : 1;
    ULONG fErrorChar : 1;
    ULONG fNull : 1;
    ULONG fRtsControl : 2;
    ULONG fAbortOnError : 1;
    ULONG fDummy2 : 17;
    USHORT wReserved;
    USHORT XonLim;
    USHORT XoffLim;
    UCHAR ByteSize;
    UCHAR Parity;
    UCHAR StopBits;
    CHAR XonChar;
    CHAR XoffChar;
    CHAR ErrorChar;
    CHAR EofChar;
    CHAR EvtChar;
    USHORT wReserved1;
};

typedef struct _DEBUG_EVENT {
    ULONG dwDebugEventCode;
    ULONG dwProcessId;
    ULONG dwThreadId;
     <unnamed-type-u>;
    union {
        struct _EXCEPTION_DEBUG_INFO Exception;
        struct _CREATE_THREAD_DEBUG_INFO CreateThread;
        struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
        struct _EXIT_THREAD_DEBUG_INFO ExitThread;
        struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
        struct _LOAD_DLL_DEBUG_INFO LoadDll;
        struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
        struct _OUTPUT_DEBUG_STRING_INFO DebugString;
        struct _RIP_INFO RipInfo;
    } u;
};

typedef struct _DECRYPTION_STATUS_BUFFER {
    UCHAR NoEncryptedStreams;
};

typedef struct _DEDUP_CHUNK_INFORMATION_HASH32 {
    ULONG ChunkFlags;
    LONG64 ChunkOffsetInFile;
    LONG64 ChunkSize;
    UCHAR HashVal[32];
};

typedef struct _DEDUP_FILE_OPERATION {
    ULONG Code;
};

typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER {
    ULONG Version;
    ULONG QueryFlags;
    ULONG HashAlgorithm;
    union _LARGE_INTEGER RangeOffsetInFile;
    union _LARGE_INTEGER RangeLength;
};

typedef struct _DEFINE_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaDefinitionOffset;
    ULONG AreaDefinitionCount;
    struct _STORAGE_RESERVE_AREA_DEFINITION AreaDefinition[1];
};

typedef struct _DELAYLOAD_INFO {
    ULONG Size;
    struct _IMAGE_DELAYLOAD_DESCRIPTOR *DelayloadDescriptor;
    struct _IMAGE_THUNK_DATA64 *ThunkAddress;
    PCHAR TargetDllName;
    struct _DELAYLOAD_PROC_DESCRIPTOR TargetApiDescriptor;
    PVOID TargetModuleBase;
    PVOID Unused;
    ULONG LastError;
};

typedef struct _DELAYLOAD_PROC_DESCRIPTOR {
    ULONG ImportDescribedByName;
    union {
        PCHAR Name;
        ULONG Ordinal;
    } Description;
};

typedef struct _DELETE_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _DEVICE_FLAGS {
    ULONG Failed : 1;
    ULONG ReadOnly : 1;
    ULONG Removable : 1;
    ULONG ConsoleIn : 1;
    ULONG ConsoleOut : 1;
    ULONG Input : 1;
    ULONG Output : 1;
};

typedef struct _DIAGNOSTIC_BUFFER {
    ULONG64 Size;
    enum _REQUESTER_TYPE CallerType;
    ULONG64 ProcessImageNameOffset;
    ULONG ProcessId;
    ULONG ServiceTag;
    ULONG64 DeviceDescriptionOffset;
    ULONG64 DevicePathOffset;
    ULONG64 ReasonOffset;
};

typedef struct _DISCDLGSTRUCTA {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    PCHAR lpLocalName;
    PCHAR lpRemoteName;
    ULONG dwFlags;
};

typedef struct _DISCDLGSTRUCTW {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    PWCHAR lpLocalName;
    PWCHAR lpRemoteName;
    ULONG dwFlags;
};

typedef struct _DISPATCHER_CONTEXT {
    ULONG64 ControlPc;
    ULONG64 ImageBase;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry;
    ULONG64 EstablisherFrame;
    ULONG64 TargetIp;
    struct _CONTEXT *ContextRecord;
    enum _EXCEPTION_DISPOSITION *LanguageHandler;
    PVOID HandlerData;
    struct _UNWIND_HISTORY_TABLE *HistoryTable;
    ULONG ScopeIndex;
    ULONG Fill0;
};

typedef struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG advancedColorSupported : 1;
    ULONG advancedColorEnabled : 1;
    ULONG wideColorEnforced : 1;
    ULONG advancedColorForceDisabled : 1;
    ULONG reserved : 28;
    ULONG value;
    enum _DISPLAYCONFIG_COLOR_ENCODING colorEncoding;
    ULONG bitsPerColorChannel;
};

typedef struct _DISPLAYCONFIG_SDR_WHITE_LEVEL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG SDRWhiteLevel;
};

typedef struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG enableAdvancedColor : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct _DISPLAY_DEVICEA {
    ULONG cb;
    CHAR DeviceName[32];
    CHAR DeviceString[128];
    ULONG StateFlags;
    CHAR DeviceID[128];
    CHAR DeviceKey[128];
};

typedef struct _DISPLAY_DEVICEW {
    ULONG cb;
    WCHAR DeviceName[32];
    WCHAR DeviceString[128];
    ULONG StateFlags;
    WCHAR DeviceID[128];
    WCHAR DeviceKey[128];
};

typedef struct _DLLVERSIONINFO {
    ULONG cbSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformID;
};

typedef struct _DLLVERSIONINFO2 {
    struct _DLLVERSIONINFO info1;
    ULONG dwFlags;
    ULONG64 ullVersion;
};

typedef struct _DMA_CONFIGURATION_BYTE0 {
    UCHAR Channel : 3;
    UCHAR Reserved : 3;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _DMA_CONFIGURATION_BYTE1 {
    UCHAR Reserved0 : 2;
    UCHAR TransferSize : 2;
    UCHAR Timing : 2;
    UCHAR Reserved1 : 2;
};

typedef struct _DOCINFOA {
    LONG cbSize;
    PCHAR lpszDocName;
    PCHAR lpszOutput;
    PCHAR lpszDatatype;
    ULONG fwType;
};

typedef struct _DOCINFOW {
    LONG cbSize;
    PWCHAR lpszDocName;
    PWCHAR lpszOutput;
    PWCHAR lpszDatatype;
    ULONG fwType;
};

typedef struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK {
    ULONG Signature;
    USHORT Revision;
    USHORT Size;
    USHORT DpcWatchdogProfileOffset;
    ULONG DpcWatchdogProfileLength;
};

typedef struct _DRAWPATRECT {
    struct tagPOINT ptPosition;
    struct tagPOINT ptSize;
    USHORT wStyle;
    USHORT wPattern;
};

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS {
    PULONG64 PristineRoutine;
    PULONG64 NewRoutine;
};

typedef struct _DSSSEED {
    ULONG counter;
    UCHAR seed[20];
};

typedef struct _DUPLICATE_EXTENTS_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _DUPLICATE_EXTENTS_DATA32 {
    ULONG FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _DUPLICATE_EXTENTS_DATA_EX {
    ULONG64 Size;
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
    ULONG Flags;
};

typedef struct _DUPLICATE_EXTENTS_DATA_EX32 {
    ULONG Size;
    ULONG FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
    ULONG Flags;
};

typedef struct _DWORD_BLOB {
    ULONG clSize;
    ULONG alData[1];
};

typedef struct _DYNAMIC_FUNCTION_TABLE {
    struct _LIST_ENTRY ListEntry;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionTable;
    union _LARGE_INTEGER TimeStamp;
    ULONG64 MinimumAddress;
    ULONG64 MaximumAddress;
    ULONG64 BaseAddress;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY **Callback;
    PVOID Context;
    PWCHAR OutOfProcessCallbackDll;
    enum _FUNCTION_TABLE_TYPE Type;
    ULONG EntryCount;
    struct _RTL_BALANCED_NODE TreeNode;
};

typedef struct _DesiredStorageClass {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _EFI_DRIVER_ENTRY {
    ULONG Version;
    ULONG Length;
    ULONG Id;
    ULONG FriendlyNameOffset;
    ULONG DriverFilePathOffset;
};

typedef struct _EFI_DRIVER_ENTRY_LIST {
    ULONG NextEntryOffset;
    struct _EFI_DRIVER_ENTRY DriverEntry;
};

typedef struct _EISA_DMA_CONFIGURATION {
    struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
    struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
};

typedef struct _EISA_IRQ_CONFIGURATION {
    struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
    UCHAR Reserved;
};

typedef struct _EISA_IRQ_DESCRIPTOR {
    UCHAR Interrupt : 4;
    UCHAR Reserved : 1;
    UCHAR LevelTriggered : 1;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _EISA_MEMORY_CONFIGURATION {
    struct _EISA_MEMORY_TYPE ConfigurationByte;
    UCHAR DataSize;
    USHORT AddressLowWord;
    UCHAR AddressHighByte;
    USHORT MemorySize;
};

typedef struct _EISA_MEMORY_TYPE {
    UCHAR ReadWrite : 1;
    UCHAR Cached : 1;
    UCHAR Reserved0 : 1;
    UCHAR Type : 2;
    UCHAR Shared : 1;
    UCHAR Reserved1 : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _EISA_PORT_CONFIGURATION {
    struct _EISA_PORT_DESCRIPTOR Configuration;
    USHORT PortAddress;
};

typedef struct _EISA_PORT_DESCRIPTOR {
    UCHAR NumberPorts : 5;
    UCHAR Reserved : 1;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _ENCLAVE_CREATE_INFO_SGX {
    UCHAR Secs[4096];
};

typedef struct _ENCLAVE_CREATE_INFO_VBS {
    ULONG Flags;
    UCHAR OwnerID[32];
};

typedef struct _ENCLAVE_INIT_INFO_SGX {
    UCHAR SigStruct[1808];
    UCHAR Reserved1[240];
    UCHAR EInitToken[304];
    UCHAR Reserved2[1744];
};

typedef struct _ENCLAVE_INIT_INFO_VBS {
    ULONG Length;
    ULONG ThreadCount;
};

typedef struct _ENCLAVE_LOAD_INFO_VBS {
    PVOID ImageHandle;
    ULONG64 Unused;
    USHORT NameLength;
    WCHAR Name[1];
};

typedef struct _ENCRYPTED_DATA_INFO {
    ULONG64 StartingFileOffset;
    ULONG OutputBufferOffset;
    ULONG BytesWithinFileSize;
    ULONG BytesWithinValidDataLength;
    USHORT CompressionFormat;
    UCHAR DataUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR EncryptionFormat;
    USHORT NumberOfDataBlocks;
    ULONG DataBlockSize[1];
};

typedef struct _ENCRYPTION_BUFFER {
    ULONG EncryptionOperation;
    UCHAR Private[1];
};

typedef struct _ENCRYPTION_KEY_CTRL_INPUT {
    ULONG HeaderSize;
    ULONG StructureSize;
    USHORT KeyOffset;
    USHORT KeySize;
    ULONG DplLock;
    ULONG64 DplUserId;
    ULONG64 DplCredentialId;
};

typedef struct _ENLISTMENT_BASIC_INFORMATION {
    struct _GUID EnlistmentId;
    struct _GUID TransactionId;
    struct _GUID ResourceManagerId;
};

typedef struct _ENLISTMENT_CRM_INFORMATION {
    struct _GUID CrmTransactionManagerId;
    struct _GUID CrmResourceManagerId;
    struct _GUID CrmEnlistmentId;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<1> {
    CHAR type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<2> {
    SHORT type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<4> {
    LONG type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<8> {
    LONG64 type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FEATURE_CHANGE_TIME> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FEATURE_ENABLED_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FILETYPEATTRIBUTEFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum RO_ERROR_REPORTING_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::ErrorOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::RoErrorReportingFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::AccessCache::AccessCacheOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileAttributes> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileProperties::PropertyPrefetchOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::FileProperties::ThumbnailOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::Provider::CachedFileOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::StorageItemTypes> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::StorageOpenOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Storage::Streams::InputStreamOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum __MIDL___MIDL_itf_urlmonp_0000_0026_0002> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::EventOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::FeaturePropertyGroupFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::StagingControlActions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::ReportFailureOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::StagingConfigurationFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details_abi::UsageIndexesLoadOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil_FeatureEnabledStateOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil_details_ServiceReportingOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil_details_StagingConfigFeatureFields> {
    LONG type;
};

typedef struct _ENUM_SERVICE_STATUSA {
    PCHAR lpServiceName;
    PCHAR lpDisplayName;
    struct _SERVICE_STATUS ServiceStatus;
};

typedef struct _ENUM_SERVICE_STATUSW {
    PWCHAR lpServiceName;
    PWCHAR lpDisplayName;
    struct _SERVICE_STATUS ServiceStatus;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSA {
    PCHAR lpServiceName;
    PCHAR lpDisplayName;
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSW {
    PWCHAR lpServiceName;
    PWCHAR lpDisplayName;
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _EVENTLOGRECORD {
    ULONG Length;
    ULONG Reserved;
    ULONG RecordNumber;
    ULONG TimeGenerated;
    ULONG TimeWritten;
    ULONG EventID;
    USHORT EventType;
    USHORT NumStrings;
    USHORT EventCategory;
    USHORT ReservedFlags;
    ULONG ClosingRecordNumber;
    ULONG StringOffset;
    ULONG UserSidLength;
    ULONG UserSidOffset;
    ULONG DataLength;
    ULONG DataOffset;
};

typedef struct _EVENTLOG_FULL_INFORMATION {
    ULONG dwFull;
};

typedef struct _EVENTSFORLOGFILE {
    ULONG ulSize;
    WCHAR szLogicalLogFile[256];
    ULONG ulNumRecords;
    struct _EVENTLOGRECORD pEventLogRecords[0];
};

typedef struct _EVENT_BASIC_INFORMATION {
    enum _EVENT_TYPE EventType;
    LONG EventState;
};

typedef struct _EVENT_FILTER_DESCRIPTOR {
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRootProgramQualifierFlags;
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwQualifiers;
    ULONG dwIssuanceUsageIndex;
};

typedef struct _EXCEPTION_DEBUG_INFO {
    struct _EXCEPTION_RECORD ExceptionRecord;
    ULONG dwFirstChance;
};

typedef struct _EXCEPTION_LOG {
    struct _EXCEPTION_RECORD ExceptionRecord;
    struct _CONTEXT ContextRecord;
    enum _EXCEPTION_LOG_TYPE Type;
    LONG Disposition;
    ULONG64 Thread;
    ULONG64 ControlPc;
    PVOID Handler;
};

typedef struct _EXCEPTION_POINTERS {
    struct _EXCEPTION_RECORD *ExceptionRecord;
    struct _CONTEXT *ContextRecord;
};

typedef struct _EXCEPTION_RECORD {
    ULONG ExceptionCode;
    ULONG ExceptionFlags;
    struct _EXCEPTION_RECORD *ExceptionRecord;
    PVOID ExceptionAddress;
    ULONG NumberParameters;
    ULONG64 ExceptionInformation[15];
};

typedef struct _EXCEPTION_RECORD32 {
    LONG ExceptionCode;
    ULONG ExceptionFlags;
    ULONG ExceptionRecord;
    ULONG ExceptionAddress;
    ULONG NumberParameters;
    ULONG ExceptionInformation[15];
};

typedef struct _EXCEPTION_RECORD64 {
    LONG ExceptionCode;
    ULONG ExceptionFlags;
    ULONG64 ExceptionRecord;
    ULONG64 ExceptionAddress;
    ULONG NumberParameters;
    ULONG __unusedAlignment;
    ULONG64 ExceptionInformation[15];
};

typedef struct _EXCEPTION_REGISTRATION_RECORD {
    struct _EXCEPTION_REGISTRATION_RECORD *Next;
    enum _EXCEPTION_DISPOSITION *Handler;
};

typedef struct _EXFAT_STATISTICS {
    ULONG CreateHits;
    ULONG SuccessfulCreates;
    ULONG FailedCreates;
    ULONG NonCachedReads;
    ULONG NonCachedReadBytes;
    ULONG NonCachedWrites;
    ULONG NonCachedWriteBytes;
    ULONG NonCachedDiskReads;
    ULONG NonCachedDiskWrites;
};

typedef struct _EXIT_PROCESS_DEBUG_INFO {
    ULONG dwExitCode;
};

typedef struct _EXIT_THREAD_DEBUG_INFO {
    ULONG dwExitCode;
};

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO {
    ULONG ExtendedCode;
    ULONG Length;
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _EXTENT_READ_CACHE_INFO_BUFFER {
    union _LARGE_INTEGER AllocatedCache;
    union _LARGE_INTEGER PopulatedCache;
    union _LARGE_INTEGER InErrorCache;
};

typedef struct _EX_WNF_SUBSCRIPTION {
};

typedef struct _FAT_STATISTICS {
    ULONG CreateHits;
    ULONG SuccessfulCreates;
    ULONG FailedCreates;
    ULONG NonCachedReads;
    ULONG NonCachedReadBytes;
    ULONG NonCachedWrites;
    ULONG NonCachedWriteBytes;
    ULONG NonCachedDiskReads;
    ULONG NonCachedDiskWrites;
};

typedef struct _FIBER {
    PVOID FiberData;
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID DeallocationStack;
    struct _CONTEXT FiberContext;
    struct _Wx86TIB *Wx86Tib;
    struct _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
    PVOID FlsData;
    ULONG GuaranteedStackBytes;
    USHORT TebFlags;
    USHORT ReservedPad;
    ULONG64 FiberCookie;
};

typedef struct _FILEMUIINFO {
    ULONG dwSize;
    ULONG dwVersion;
    ULONG dwFileType;
    UCHAR pChecksum[16];
    UCHAR pServiceChecksum[16];
    ULONG dwLanguageNameOffset;
    ULONG dwTypeIDMainSize;
    ULONG dwTypeIDMainOffset;
    ULONG dwTypeNameMainOffset;
    ULONG dwTypeIDMUISize;
    ULONG dwTypeIDMUIOffset;
    ULONG dwTypeNameMUIOffset;
    UCHAR abBuffer[8];
};

typedef struct _FILEOFFSET_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 Offset : 48;
    ULONG64 Reserved : 7;
};

typedef struct _FILESYSTEM_STATISTICS {
    USHORT FileSystemType;
    USHORT Version;
    ULONG SizeOfCompleteStructure;
    ULONG UserFileReads;
    ULONG UserFileReadBytes;
    ULONG UserDiskReads;
    ULONG UserFileWrites;
    ULONG UserFileWriteBytes;
    ULONG UserDiskWrites;
    ULONG MetaDataReads;
    ULONG MetaDataReadBytes;
    ULONG MetaDataDiskReads;
    ULONG MetaDataWrites;
    ULONG MetaDataWriteBytes;
    ULONG MetaDataDiskWrites;
};

typedef struct _FILESYSTEM_STATISTICS_EX {
    USHORT FileSystemType;
    USHORT Version;
    ULONG SizeOfCompleteStructure;
    ULONG64 UserFileReads;
    ULONG64 UserFileReadBytes;
    ULONG64 UserDiskReads;
    ULONG64 UserFileWrites;
    ULONG64 UserFileWriteBytes;
    ULONG64 UserDiskWrites;
    ULONG64 MetaDataReads;
    ULONG64 MetaDataReadBytes;
    ULONG64 MetaDataDiskReads;
    ULONG64 MetaDataWrites;
    ULONG64 MetaDataWriteBytes;
    ULONG64 MetaDataDiskWrites;
};

typedef struct _FILETIME {
    ULONG dwLowDateTime;
    ULONG dwHighDateTime;
};

typedef struct _FILE_ACCESS_INFORMATION {
    ULONG AccessFlags;
};

typedef struct _FILE_ALIGNMENT_INFO {
    ULONG AlignmentRequirement;
};

typedef struct _FILE_ALIGNMENT_INFORMATION {
    ULONG AlignmentRequirement;
};

typedef struct _FILE_ALLOCATED_RANGE_BUFFER {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER Length;
};

typedef struct _FILE_ALLOCATION_INFO {
    union _LARGE_INTEGER AllocationSize;
};

typedef struct _FILE_ALLOCATION_INFORMATION {
    union _LARGE_INTEGER AllocationSize;
};

typedef struct _FILE_ALL_INFORMATION {
    struct _FILE_BASIC_INFORMATION BasicInformation;
    struct _FILE_STANDARD_INFORMATION StandardInformation;
    struct _FILE_INTERNAL_INFORMATION InternalInformation;
    struct _FILE_EA_INFORMATION EaInformation;
    struct _FILE_ACCESS_INFORMATION AccessInformation;
    struct _FILE_POSITION_INFORMATION PositionInformation;
    struct _FILE_MODE_INFORMATION ModeInformation;
    struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
    struct _FILE_NAME_INFORMATION NameInformation;
};

typedef struct _FILE_ATTRIBUTE_TAG_INFO {
    ULONG FileAttributes;
    ULONG ReparseTag;
};

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION {
    ULONG FileAttributes;
    ULONG ReparseTag;
};

typedef struct _FILE_BASIC_INFO {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    ULONG FileAttributes;
};

typedef struct _FILE_BASIC_INFORMATION {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    ULONG FileAttributes;
};

typedef struct _FILE_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    WCHAR FileName[1];
};

typedef struct _FILE_CASE_SENSITIVE_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_COMPLETION_INFORMATION {
    PVOID Port;
    PVOID Key;
};

typedef struct _FILE_COMPRESSION_INFO {
    union _LARGE_INTEGER CompressedFileSize;
    USHORT CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
};

typedef struct _FILE_COMPRESSION_INFORMATION {
    union _LARGE_INTEGER CompressedFileSize;
    USHORT CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
};

typedef struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _FILE_DIRECTORY_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_DISPOSITION_INFO {
    UCHAR DeleteFileW;
};

typedef struct _FILE_DISPOSITION_INFORMATION {
    UCHAR DeleteFile;
};

typedef struct _FILE_DISPOSITION_INFORMATION_EX {
    ULONG Flags;
};

typedef struct _FILE_DISPOSITION_INFO_EX {
    ULONG Flags;
};

typedef struct _FILE_EA_INFORMATION {
    ULONG EaSize;
};

typedef struct _FILE_END_OF_FILE_INFO {
    union _LARGE_INTEGER EndOfFile;
};

typedef struct _FILE_END_OF_FILE_INFORMATION {
    union _LARGE_INTEGER EndOfFile;
};

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION {
    ULONG FileSystemAttributes;
    LONG MaximumComponentNameLength;
    ULONG FileSystemNameLength;
    WCHAR FileSystemName[1];
};

typedef struct _FILE_FS_CONTROL_INFORMATION {
    union _LARGE_INTEGER FreeSpaceStartFiltering;
    union _LARGE_INTEGER FreeSpaceThreshold;
    union _LARGE_INTEGER FreeSpaceStopFiltering;
    union _LARGE_INTEGER DefaultQuotaThreshold;
    union _LARGE_INTEGER DefaultQuotaLimit;
    ULONG FileSystemControlFlags;
};

typedef struct _FILE_FS_DATA_COPY_INFORMATION {
    ULONG NumberOfCopies;
};

typedef struct _FILE_FS_DEVICE_INFORMATION {
    ULONG DeviceType;
    ULONG Characteristics;
};

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION {
    UCHAR DriverInPath;
    ULONG DriverNameLength;
    WCHAR DriverName[1];
};

typedef struct _FILE_FS_FULL_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalAllocationUnits;
    union _LARGE_INTEGER CallerAvailableAllocationUnits;
    union _LARGE_INTEGER ActualAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_FULL_SIZE_INFORMATION_EX {
    ULONG64 ActualTotalAllocationUnits;
    ULONG64 ActualAvailableAllocationUnits;
    ULONG64 ActualPoolUnavailableAllocationUnits;
    ULONG64 CallerTotalAllocationUnits;
    ULONG64 CallerAvailableAllocationUnits;
    ULONG64 CallerPoolUnavailableAllocationUnits;
    ULONG64 UsedAllocationUnits;
    ULONG64 TotalReservedAllocationUnits;
    ULONG64 VolumeStorageReserveAllocationUnits;
    ULONG64 AvailableCommittedAllocationUnits;
    ULONG64 PoolAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_LABEL_INFORMATION {
    ULONG VolumeLabelLength;
    WCHAR VolumeLabel[1];
};

typedef struct _FILE_FS_METADATA_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalMetadataAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_OBJECTID_INFORMATION {
    UCHAR ObjectId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION {
    ULONG VolumeFlags;
    ULONG FlagMask;
    ULONG Version;
    ULONG Reserved;
};

typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION {
    ULONG LogicalBytesPerSector;
    ULONG PhysicalBytesPerSectorForAtomicity;
    ULONG PhysicalBytesPerSectorForPerformance;
    ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
    ULONG Flags;
    ULONG ByteOffsetForSectorAlignment;
    ULONG ByteOffsetForPartitionAlignment;
};

typedef struct _FILE_FS_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalAllocationUnits;
    union _LARGE_INTEGER AvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_FS_VOLUME_INFORMATION {
    union _LARGE_INTEGER VolumeCreationTime;
    ULONG VolumeSerialNumber;
    ULONG VolumeLabelLength;
    UCHAR SupportsObjects;
    WCHAR VolumeLabel[1];
};

typedef struct _FILE_FULL_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    WCHAR FileName[1];
};

typedef struct _FILE_FULL_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    WCHAR FileName[1];
};

typedef struct _FILE_FULL_EA_INFORMATION {
    ULONG NextEntryOffset;
    UCHAR Flags;
    UCHAR EaNameLength;
    USHORT EaValueLength;
    CHAR EaName[1];
};

typedef struct _FILE_GET_EA_INFORMATION {
    ULONG NextEntryOffset;
    UCHAR EaNameLength;
    CHAR EaName[1];
};

typedef struct _FILE_GET_QUOTA_INFORMATION {
    ULONG NextEntryOffset;
    ULONG SidLength;
    struct _SID Sid;
};

typedef struct _FILE_ID_128 {
    UCHAR Identifier[16];
};

typedef struct _FILE_ID_BOTH_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_FULL_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    union _LARGE_INTEGER FileId;
    struct _GUID LockingTransactionId;
    ULONG TxInfoFlags;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_INFO {
    ULONG64 VolumeSerialNumber;
    struct _FILE_ID_128 FileId;
};

typedef struct _FILE_ID_INFORMATION {
    ULONG64 VolumeSerialNumber;
    struct _FILE_ID_128 FileId;
};

typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER {
    ULONG64 Hint1;
    ULONG64 Hint2;
    ULONG64 Clsn;
    LONG Status;
};

typedef struct _FILE_INTERNAL_INFORMATION {
    union _LARGE_INTEGER IndexNumber;
};

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION {
    PUCHAR IoStatusBlockRange;
    ULONG Length;
};

typedef struct _FILE_IO_COMPLETION_INFORMATION {
    PVOID KeyContext;
    PVOID ApcContext;
    struct _IO_STATUS_BLOCK IoStatusBlock;
};

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFO {
    enum _PRIORITY_HINT PriorityHint;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION {
    enum _IO_PRIORITY_HINT PriorityHint;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX {
    enum _IO_PRIORITY_HINT PriorityHint;
    UCHAR BoostOutstanding;
};

typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION {
    UCHAR IsRemote;
};

typedef struct _FILE_LAYOUT_ENTRY {
    ULONG Version;
    ULONG NextFileOffset;
    ULONG Flags;
    ULONG FileAttributes;
    ULONG64 FileReferenceNumber;
    ULONG FirstNameOffset;
    ULONG FirstStreamOffset;
    ULONG ExtraInfoOffset;
    ULONG ExtraInfoLength;
};

typedef struct _FILE_LAYOUT_INFO_ENTRY {
     <unnamed-type-BasicInformation>;
    struct {
        union _LARGE_INTEGER CreationTime;
        union _LARGE_INTEGER LastAccessTime;
        union _LARGE_INTEGER LastWriteTime;
        union _LARGE_INTEGER ChangeTime;
        ULONG FileAttributes;
    } BasicInformation;
    ULONG OwnerId;
    ULONG SecurityId;
    LONG64 Usn;
    enum _STORAGE_RESERVE_ID StorageReserveId;
};

typedef struct _FILE_LAYOUT_NAME_ENTRY {
    ULONG NextNameOffset;
    ULONG Flags;
    ULONG64 ParentFileReferenceNumber;
    ULONG FileNameLength;
    ULONG Reserved;
    WCHAR FileName[1];
};

typedef struct _FILE_LEVEL_TRIM {
    ULONG Key;
    ULONG NumRanges;
    struct _FILE_LEVEL_TRIM_RANGE Ranges[1];
};

typedef struct _FILE_LEVEL_TRIM_OUTPUT {
    ULONG NumRangesProcessed;
};

typedef struct _FILE_LEVEL_TRIM_RANGE {
    ULONG64 Offset;
    ULONG64 Length;
};

typedef struct _FILE_LINKS_FULL_ID_INFORMATION {
    ULONG BytesNeeded;
    ULONG EntriesReturned;
    struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION Entry;
};

typedef struct _FILE_LINKS_INFORMATION {
    ULONG BytesNeeded;
    ULONG EntriesReturned;
    struct _FILE_LINK_ENTRY_INFORMATION Entry;
};

typedef struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION {
    ULONG NextEntryOffset;
    struct _FILE_ID_128 ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_LINK_ENTRY_INFORMATION {
    ULONG NextEntryOffset;
    LONG64 ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_LINK_INFORMATION {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_MAILSLOT_PEEK_BUFFER {
    ULONG ReadDataAvailable;
    ULONG NumberOfMessages;
    ULONG MessageLength;
};

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION {
    ULONG MaximumMessageSize;
    ULONG MailslotQuota;
    ULONG NextMessageSize;
    ULONG MessagesAvailable;
    union _LARGE_INTEGER ReadTimeout;
};

typedef struct _FILE_MAILSLOT_SET_INFORMATION {
    union _LARGE_INTEGER *ReadTimeout;
};

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER {
    UCHAR CloseDisc;
};

typedef struct _FILE_MEMORY_PARTITION_INFORMATION {
    ULONG64 OwnerPartitionHandle;
     <unnamed-type-Flags>;
    union {
        UCHAR NoCrossPartitionAccess;
        UCHAR Spare[3];
        ULONG AllFlags;
    } Flags;
};

typedef struct _FILE_MODE_INFORMATION {
    ULONG Mode;
};

typedef struct _FILE_MOVE_CLUSTER_INFORMATION {
    ULONG ClusterCount;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAMES_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAME_INFO {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAME_INFORMATION {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NETWORK_OPEN_INFORMATION {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
};

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NOTIFY_EXTENDED_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Action;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastModificationTime;
    union _LARGE_INTEGER LastChangeTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER AllocatedLength;
    union _LARGE_INTEGER FileSize;
    ULONG FileAttributes;
    ULONG ReparsePointTag;
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NOTIFY_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Action;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NUMA_NODE_INFORMATION {
    USHORT NodeNumber;
};

typedef struct _FILE_OBJECTID_BUFFER {
    UCHAR ObjectId[16];
    UCHAR BirthVolumeId[16];
    UCHAR BirthObjectId[16];
    UCHAR DomainId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_OBJECTID_INFORMATION {
    LONG64 FileReference;
    UCHAR ObjectId[16];
    UCHAR BirthVolumeId[16];
    UCHAR BirthObjectId[16];
    UCHAR DomainId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_PATH {
    ULONG Version;
    ULONG Length;
    ULONG Type;
    UCHAR FilePath[1];
};

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER {
    PVOID EventHandle;
    ULONG KeyValue;
};

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER {
    PVOID ClientSession;
    PVOID ClientProcess;
};

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX {
    PVOID ClientSession;
    PVOID ClientProcess;
    USHORT ClientComputerNameLength;
    WCHAR ClientComputerBuffer[16];
};

typedef struct _FILE_PIPE_CREATE_SYMLINK_INPUT {
    USHORT NameOffset;
    USHORT NameLength;
    USHORT SubstituteNameOffset;
    USHORT SubstituteNameLength;
    ULONG Flags;
};

typedef struct _FILE_PIPE_DELETE_SYMLINK_INPUT {
    USHORT NameOffset;
    USHORT NameLength;
};

typedef struct _FILE_PIPE_EVENT_BUFFER {
    ULONG NamedPipeState;
    ULONG EntryType;
    ULONG ByteCount;
    ULONG KeyValue;
    ULONG NumberRequests;
};

typedef struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER {
    ULONG64 EventHandle;
};

typedef struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER {
    ULONG EventTypes;
};

typedef struct _FILE_PIPE_EVENT_SELECT_BUFFER {
    ULONG EventTypes;
    ULONG64 EventHandle;
};

typedef struct _FILE_PIPE_INFORMATION {
    ULONG ReadMode;
    ULONG CompletionMode;
};

typedef struct _FILE_PIPE_LOCAL_INFORMATION {
    ULONG NamedPipeType;
    ULONG NamedPipeConfiguration;
    ULONG MaximumInstances;
    ULONG CurrentInstances;
    ULONG InboundQuota;
    ULONG ReadDataAvailable;
    ULONG OutboundQuota;
    ULONG WriteQuotaAvailable;
    ULONG NamedPipeState;
    ULONG NamedPipeEnd;
};

typedef struct _FILE_PIPE_PEEK_BUFFER {
    ULONG NamedPipeState;
    ULONG ReadDataAvailable;
    ULONG NumberOfMessages;
    ULONG MessageLength;
    CHAR Data[1];
};

typedef struct _FILE_PIPE_REMOTE_INFORMATION {
    union _LARGE_INTEGER CollectDataTime;
    ULONG MaximumCollectionCount;
};

typedef struct _FILE_PIPE_SILO_ARRIVAL_INPUT {
    PVOID JobHandle;
};

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER {
    union _LARGE_INTEGER Timeout;
    ULONG NameLength;
    UCHAR TimeoutSpecified;
    WCHAR Name[1];
};

typedef struct _FILE_POSITION_INFORMATION {
    union _LARGE_INTEGER CurrentByteOffset;
};

typedef struct _FILE_PREFETCH {
    ULONG Type;
    ULONG Count;
    ULONG64 Prefetch[1];
};

typedef struct _FILE_PREFETCH_EX {
    ULONG Type;
    ULONG Count;
    PVOID Context;
    ULONG64 Prefetch[1];
};

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION {
    ULONG NumberOfProcessIdsInList;
    ULONG64 ProcessIdList[1];
};

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V0 {
    ULONG Version;
    ULONG Algorithm;
};

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V1 {
    ULONG Version;
    ULONG Algorithm;
    ULONG Flags;
};

typedef struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT {
    enum _FILE_METADATA_OPTIMIZATION_STATE State;
    ULONG AttributeListSize;
    ULONG MetadataSpaceUsed;
    ULONG MetadataSpaceAllocated;
    ULONG NumberOfFileRecords;
    ULONG NumberOfResidentAttributes;
    ULONG NumberOfNonresidentAttributes;
    ULONG TotalInProgress;
    ULONG TotalPending;
};

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER {
    union _LARGE_INTEGER DirectoryCount;
    union _LARGE_INTEGER FileCount;
    USHORT FsFormatMajVersion;
    USHORT FsFormatMinVersion;
    WCHAR FsFormatName[12];
    union _LARGE_INTEGER FormatTime;
    union _LARGE_INTEGER LastUpdateTime;
    WCHAR CopyrightInfo[34];
    WCHAR AbstractInfo[34];
    WCHAR FormattingImplementationInfo[34];
    WCHAR LastModifyingImplementationInfo[34];
};

typedef struct _FILE_QUERY_SPARING_BUFFER {
    ULONG SparingUnitBytes;
    UCHAR SoftwareSparing;
    ULONG TotalSpareBlocks;
    ULONG FreeSpareBlocks;
};

typedef struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX {
    enum _STORAGE_RESERVE_ID StorageReserveId;
    LONG64 SpaceUsed;
};

typedef struct _FILE_QUOTA_INFORMATION {
    ULONG NextEntryOffset;
    ULONG SidLength;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER QuotaUsed;
    union _LARGE_INTEGER QuotaThreshold;
    union _LARGE_INTEGER QuotaLimit;
    struct _SID Sid;
};

typedef struct _FILE_REFERENCE_RANGE {
    ULONG64 StartingFileReferenceNumber;
    ULONG64 EndingFileReferenceNumber;
};

typedef struct _FILE_REGION_INFO {
    LONG64 FileOffset;
    LONG64 Length;
    ULONG Usage;
    ULONG Reserved;
};

typedef struct _FILE_REGION_INPUT {
    LONG64 FileOffset;
    LONG64 Length;
    ULONG DesiredUsage;
};

typedef struct _FILE_REGION_OUTPUT {
    ULONG Flags;
    ULONG TotalRegionEntryCount;
    ULONG RegionEntryCount;
    ULONG Reserved;
    struct _FILE_REGION_INFO Region[1];
};

typedef struct _FILE_REMOTE_PROTOCOL_INFO {
    USHORT StructureVersion;
    USHORT StructureSize;
    ULONG Protocol;
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    USHORT Reserved;
    ULONG Flags;
     <unnamed-type-GenericReserved>;
    struct {
        ULONG Reserved[8];
    } GenericReserved;
     <unnamed-type-ProtocolSpecific>;
    union {
         <unnamed-type-Smb2>;
        struct {
             <unnamed-type-Server>;
            struct {
                ULONG Capabilities;
            } Server;
             <unnamed-type-Share>;
            struct {
                ULONG Capabilities;
                ULONG CachingFlags;
            } Share;
        } Smb2;
        ULONG Reserved[16];
    } ProtocolSpecific;
};

typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION {
    USHORT StructureVersion;
    USHORT StructureSize;
    ULONG Protocol;
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    USHORT Reserved;
    ULONG Flags;
     <unnamed-type-GenericReserved>;
    struct {
        ULONG Reserved[8];
    } GenericReserved;
     <unnamed-type-ProtocolSpecific>;
    union {
         <unnamed-type-Smb2>;
        struct {
             <unnamed-type-Server>;
            struct {
                ULONG Capabilities;
            } Server;
             <unnamed-type-Share>;
            struct {
                ULONG Capabilities;
                ULONG CachingFlags;
                UCHAR ShareType;
                UCHAR Reserved0[3];
                ULONG Reserved1;
            } Share;
        } Smb2;
        ULONG Reserved[16];
    } ProtocolSpecific;
};

typedef struct _FILE_RENAME_INFO {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_RENAME_INFORMATION {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_REPARSE_POINT_INFORMATION {
    LONG64 FileReference;
    ULONG Tag;
};

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER {
    UCHAR Disable;
};

typedef struct _FILE_SET_SPARSE_BUFFER {
    UCHAR SetSparse;
};

typedef struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX {
    enum _STORAGE_RESERVE_ID StorageReserveId;
    ULONG Flags;
};

typedef struct _FILE_SFIO_RESERVE_INFORMATION {
    ULONG RequestsPerPeriod;
    ULONG Period;
    UCHAR RetryFailures;
    UCHAR Discardable;
    ULONG RequestSize;
    ULONG NumOutstandingRequests;
};

typedef struct _FILE_SFIO_VOLUME_INFORMATION {
    ULONG MaximumRequestsPerPeriod;
    ULONG MinimumPeriod;
    ULONG MinimumTransferSize;
};

typedef struct _FILE_STANDARD_INFO {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STANDARD_INFORMATION {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STANDARD_INFORMATION_EX {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
    UCHAR AlternateStream;
    UCHAR MetadataAttribute;
};

typedef struct _FILE_STANDARD_LINK_INFORMATION {
    ULONG NumberOfAccessibleLinks;
    ULONG TotalNumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STAT_INFORMATION {
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
    ULONG ReparseTag;
    ULONG NumberOfLinks;
    ULONG EffectiveAccess;
};

typedef struct _FILE_STAT_LX_INFORMATION {
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
    ULONG ReparseTag;
    ULONG NumberOfLinks;
    ULONG EffectiveAccess;
    ULONG LxFlags;
    ULONG LxUid;
    ULONG LxGid;
    ULONG LxMode;
    ULONG LxDeviceIdMajor;
    ULONG LxDeviceIdMinor;
};

typedef struct _FILE_STORAGE_INFO {
    ULONG LogicalBytesPerSector;
    ULONG PhysicalBytesPerSectorForAtomicity;
    ULONG PhysicalBytesPerSectorForPerformance;
    ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
    ULONG Flags;
    ULONG ByteOffsetForSectorAlignment;
    ULONG ByteOffsetForPartitionAlignment;
};

typedef struct _FILE_STORAGE_RESERVE_ID_INFORMATION {
    enum _STORAGE_RESERVE_ID StorageReserveId;
};

typedef struct _FILE_STORAGE_TIER {
    struct _GUID Id;
    WCHAR Name[256];
    WCHAR Description[256];
    ULONG64 Flags;
    ULONG64 ProvisionedCapacity;
    enum _FILE_STORAGE_TIER_MEDIA_TYPE MediaType;
    enum _FILE_STORAGE_TIER_CLASS Class;
};

typedef struct _FILE_STORAGE_TIER_REGION {
    struct _GUID TierId;
    ULONG64 Offset;
    ULONG64 Length;
};

typedef struct _FILE_STREAM_INFO {
    ULONG NextEntryOffset;
    ULONG StreamNameLength;
    union _LARGE_INTEGER StreamSize;
    union _LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
};

typedef struct _FILE_STREAM_INFORMATION {
    ULONG NextEntryOffset;
    ULONG StreamNameLength;
    union _LARGE_INTEGER StreamSize;
    union _LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
};

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION {
    CHAR FileSystem[9];
};

typedef struct _FILE_TRACKING_INFORMATION {
    PVOID DestinationFile;
    ULONG ObjectInformationLength;
    CHAR ObjectInformation[1];
};

typedef struct _FILE_TYPE_NOTIFICATION_INPUT {
    ULONG Flags;
    ULONG NumFileTypeIDs;
    struct _GUID FileTypeID[1];
};

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION {
    union _LARGE_INTEGER ValidDataLength;
};

typedef struct _FILE_VOLUME_NAME_INFORMATION {
    ULONG DeviceNameLength;
    WCHAR DeviceName[1];
};

typedef struct _FILE_ZERO_DATA_INFORMATION {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER BeyondFinalZero;
};

typedef struct _FILE_ZERO_DATA_INFORMATION_EX {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER BeyondFinalZero;
    ULONG Flags;
};

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION {
    ULONG Size;
    ULONG Flags;
    struct _GUID *ExtensionGuid;
    ULONG Id;
    ULONG Depth;
    ULONG OutFlags;
};

typedef struct _FIXED {
    USHORT fract;
    SHORT value;
};

typedef struct _FLAGGED_BYTE_BLOB {
    ULONG fFlags;
    ULONG clSize;
    UCHAR abData[1];
};

typedef struct _FLAGGED_WORD_BLOB {
    ULONG fFlags;
    ULONG clSize;
    USHORT asData[1];
};

typedef struct _FLAG_STGMEDIUM {
    LONG ContextFlags;
    LONG fPassOwnership;
    struct tagSTGMEDIUM Stgmed;
};

typedef struct _FLOAT128 {
    LONG64 LowPart;
    LONG64 HighPart;
};

typedef struct _FLS_CALLBACK_INFO {
};

typedef struct _FLS_DATA {
    struct _LIST_ENTRY Entry;
    PVOID Slots[128];
};

typedef struct _FNSAVE_FORMAT {
    ULONG ControlWord;
    ULONG StatusWord;
    ULONG TagWord;
    ULONG ErrorOffset;
    ULONG ErrorSelector;
    ULONG DataOffset;
    ULONG DataSelector;
    UCHAR RegisterArea[80];
};

typedef struct _FOCUS_EVENT_RECORD {
    LONG bSetFocus;
};

typedef struct _FPO_DATA {
    ULONG ulOffStart;
    ULONG cbProcSize;
    ULONG cdwLocals;
    USHORT cdwParams;
    USHORT cbProlog : 8;
    USHORT cbRegs : 3;
    USHORT fHasSEH : 1;
    USHORT fUseBP : 1;
    USHORT reserved : 1;
    USHORT cbFrame : 2;
};

typedef struct _FP_128 {
    ULONG W[4];
};

typedef struct _FP_32 {
    ULONG W[1];
};

typedef struct _FP_64 {
    ULONG W[2];
};

typedef struct _FP_80 {
    ULONG W[3];
};

typedef struct _FP_IEEE_RECORD {
    struct _FP_IEEE_VALUE Operand1;
    struct _FP_IEEE_VALUE Operand2;
    struct _FP_IEEE_VALUE Result;
};

typedef struct _FP_IEEE_VALUE {
     <unnamed-type-Value>;
    union {
        SHORT I16Value;
        USHORT U16Value;
        LONG I32Value;
        ULONG U32Value;
        PVOID StringValue;
        ULONG CompareValue;
        struct _FP_32 Fp32Value;
        union _LARGE_INTEGER I64Value;
        union _ULARGE_INTEGER U64Value;
        struct _FP_64 Fp64Value;
        struct _FP_80 Fp80Value;
        struct _FP_128 Fp128Value;
    } Value;
     <unnamed-type-Control>;
    struct {
        ULONG RoundingMode : 2;
        ULONG Inexact : 1;
        ULONG Underflow : 1;
        ULONG Overflow : 1;
        ULONG ZeroDivide : 1;
        ULONG InvalidOperation : 1;
        ULONG OperandValid : 1;
        ULONG Format : 4;
        ULONG Precision : 4;
        ULONG Operation : 12;
        ULONG Spare : 3;
        ULONG HardwareException : 1;
    } Control;
};

typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER {
    USHORT ChecksumAlgorithm;
    USHORT Reserved;
    ULONG Flags;
    ULONG ChecksumChunkSizeInBytes;
    ULONG ClusterSizeInBytes;
};

typedef struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
    struct _GUID RecallOwnerGuid;
    ULONG RecallMetadataBufferSize;
    UCHAR RecallMetadataBuffer[1];
};

typedef struct _FSCTL_OFFLOAD_READ_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG TokenTimeToLive;
    ULONG Reserved;
    ULONG64 FileOffset;
    ULONG64 CopyLength;
};

typedef struct _FSCTL_OFFLOAD_READ_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 TransferLength;
    UCHAR Token[512];
};

typedef struct _FSCTL_OFFLOAD_WRITE_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 FileOffset;
    ULONG64 CopyLength;
    ULONG64 TransferOffset;
    UCHAR Token[512];
};

typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 LengthWritten;
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER {
    UCHAR First0x24BytesOfBootSector[36];
};

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT {
    ULONG ExtentCount;
    ULONG TotalExtentCount;
    UCHAR Extents[1];
};

typedef struct _FSCTL_QUERY_REGION_INFO_INPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG NumberOfTierIds;
    struct _GUID TierIds[1];
};

typedef struct _FSCTL_QUERY_REGION_INFO_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG Reserved;
    ULONG64 Alignment;
    ULONG TotalNumberOfRegions;
    ULONG NumberOfRegionsReturned;
    struct _FILE_STORAGE_TIER_REGION Regions[1];
};

typedef struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG TotalNumberOfTiers;
    ULONG NumberOfTiersReturned;
    struct _FILE_STORAGE_TIER Tiers[1];
};

typedef struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT {
    ULONG NumaNode;
};

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER {
    USHORT ChecksumAlgorithm;
    USHORT Reserved;
    ULONG Flags;
};

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX {
    UCHAR EnableIntegrity;
    UCHAR KeepIntegrityStateUnchanged;
    USHORT Reserved;
    ULONG Flags;
    UCHAR Version;
    UCHAR Reserved2[7];
};

typedef struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER {
    union _LARGE_INTEGER BytesToUnmap;
};

typedef struct _FSCTL_UNMAP_SPACE_OUTPUT {
    union _LARGE_INTEGER BytesUnmapped;
};

typedef struct _FULL_PTR_XLAT_TABLES {
    PVOID RefIdToPointer;
    PVOID PointerToRefId;
    ULONG NextRefId;
    enum XLAT_SIDE XlatSide;
};

typedef struct _GDI_NONREMOTE {
    LONG fContext;
     __MIDL_IWinTypes_0002;
    union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
};

typedef struct _GDI_OBJECT {
    ULONG ObjectType;
     __MIDL_IAdviseSink_0002;
    union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
};

typedef struct _GDI_TEB_BATCH {
    ULONG Offset : 31;
    ULONG HasRenderingCommand : 1;
    ULONG64 HDC;
    ULONG Buffer[310];
};

typedef struct _GENERATE_NAME_CONTEXT {
    USHORT Checksum;
    UCHAR ChecksumInserted;
    UCHAR NameLength;
    WCHAR NameBuffer[8];
    ULONG ExtensionLength;
    WCHAR ExtensionBuffer[4];
    ULONG LastIndexValue;
};

typedef struct _GENERIC_BINDING_ROUTINE_PAIR {
    PVOID *pfnBind;
    PVOID pfnUnbind;
};

typedef struct _GENERIC_MAPPING {
    ULONG GenericRead;
    ULONG GenericWrite;
    ULONG GenericExecute;
    ULONG GenericAll;
};

typedef struct _GET_FILTER_FILE_IDENTIFIER_INPUT {
    USHORT AltitudeLength;
    WCHAR Altitude[1];
};

typedef struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT {
    USHORT FilterFileIdentifierLength;
    UCHAR FilterFileIdentifier[1];
};

typedef struct _GHOSTED_FILE_EXTENT {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
    struct _GUID RecallOwnerGuid;
    ULONG NextEntryOffset;
    ULONG RecallMetadataBufferSize;
    UCHAR RecallMetadataBuffer[1];
};

typedef struct _GLYPHMETRICS {
    ULONG gmBlackBoxX;
    ULONG gmBlackBoxY;
    struct tagPOINT gmptGlyphOrigin;
    SHORT gmCellIncX;
    SHORT gmCellIncY;
};

typedef struct _GLYPHMETRICSFLOAT {
    FLOAT gmfBlackBoxX;
    FLOAT gmfBlackBoxY;
    struct _POINTFLOAT gmfptGlyphOrigin;
    FLOAT gmfCellIncX;
    FLOAT gmfCellIncY;
};

typedef struct _GRADIENT_RECT {
    ULONG UpperLeft;
    ULONG LowerRight;
};

typedef struct _GRADIENT_TRIANGLE {
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
};

typedef struct _GROUP_AFFINITY {
    ULONG64 Mask;
    USHORT Group;
    USHORT Reserved[3];
};

typedef struct _GROUP_RELATIONSHIP {
    USHORT MaximumGroupCount;
    USHORT ActiveGroupCount;
    UCHAR Reserved[20];
    struct _PROCESSOR_GROUP_INFO GroupInfo[1];
};

typedef struct _GS_HANDLER_DATA {
    union {
        struct {
            ULONG EHandler : 1;
            ULONG UHandler : 1;
            ULONG HasAlignment : 1;
        } Bits;
        LONG CookieOffset;
    } u;
    LONG AlignedBaseOffset;
    LONG Alignment;
};

typedef struct _GUID {
    ULONG Data1;
    USHORT Data2;
    USHORT Data3;
    UCHAR Data4[8];
};

typedef struct _HARDERROR_MSG {
    struct _PORT_MESSAGE h;
    LONG Status;
    union _LARGE_INTEGER ErrorTime;
    ULONG ValidResponseOptions;
    ULONG Response;
    ULONG NumberOfParameters;
    ULONG UnicodeStringParameterMask;
    ULONG64 Parameters[5];
};

typedef struct _HARDWARE_COUNTER {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Reserved;
    ULONG64 Index;
};

typedef struct _HARDWARE_COUNTER_DATA {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Reserved;
    ULONG64 Value;
};

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION {
    UCHAR Next;
    ULONG Type;
    ULONG64 Size;
};

typedef struct _HEAP_BLOCK_INFORMATION {
    ULONG64 Address;
    ULONG Flags;
    ULONG64 DataSize;
    ULONG64 OverheadSize;
    ULONG64 NextBlockInformationOffset;
};

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION {
    ULONG64 Settable;
    USHORT TagIndex;
    USHORT AllocatorBackTraceIndex;
};

typedef struct _HEAP_EXTENDED_INFORMATION {
    PVOID Process;
    ULONG64 Heap;
    ULONG Level;
    PLONG CallbackRoutine;
    PVOID CallbackContext;
    struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    struct _HEAP_INFORMATION HeapInformation;
};

typedef struct _HEAP_INFORMATION {
    ULONG64 Address;
    ULONG Mode;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG64 FirstRegionInformationOffset;
    ULONG64 NextHeapInformationOffset;
};

typedef struct _HEAP_INFORMATION_ITEM {
    ULONG Level;
    ULONG64 Size;
    struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    struct _HEAP_INFORMATION HeapInformation;
    struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    ULONG64 DynamicStart;
};

typedef struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION {
    ULONG Version;
    ULONG Flags;
};

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION {
    ULONG Size;
    ULONG Version;
    ULONG HeapIndex;
    ULONG LastHeapIndex;
    ULONG64 BaseAddress;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG SegmentCount;
    ULONG64 LargeUCRMemory;
    ULONG UCRLength;
    ULONG64 AllocatedSpace;
    ULONG64 FreeSpace;
    ULONG FreeListLength;
    ULONG Contention;
    ULONG VirtualBlocks;
    ULONG CommitRate;
    ULONG DecommitRate;
    struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION SegmentHeapPerfInformation;
};

typedef struct _HEAP_RANGE_INFORMATION {
    ULONG64 Address;
    ULONG64 Size;
    ULONG Type;
    ULONG Protection;
    ULONG64 FirstBlockInformationOffset;
    ULONG64 NextRangeInformationOffset;
};

typedef struct _HEAP_REGION_INFORMATION {
    ULONG64 Address;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG64 FirstRangeInformationOffset;
    ULONG64 NextRegionInformationOffset;
};

typedef struct _HEAP_SUMMARY {
    ULONG cb;
    ULONG64 cbAllocated;
    ULONG64 cbCommitted;
    ULONG64 cbReserved;
    ULONG64 cbMaxReserve;
};

typedef struct _HIBERFILE_BUCKET {
    ULONG64 MaxPhysicalMemory;
    ULONG PhysicalMemoryPercent[3];
};

typedef struct _HMAC_Info {
    ULONG HashAlgid;
    PUCHAR pbInnerString;
    ULONG cbInnerString;
    PUCHAR pbOuterString;
    ULONG cbOuterString;
};

typedef struct _HOT_PATCH_IMAGE_INFO {
    ULONG CheckSum;
    ULONG TimeDateStamp;
};

typedef struct _HSM_OPCODE {
    ULONG Tag;
    ULONG Code;
};

typedef struct _HTML_PAINTER_INFO {
    LONG lFlags;
    LONG lZOrder;
    struct _GUID iidDrawObject;
    struct tagRECT rcExpand;
};

typedef struct _HTML_PAINT_DRAW_INFO {
    struct tagRECT rcViewport;
    struct HRGN__ *hrgnUpdate;
    struct _HTML_PAINT_XFORM xform;
};

typedef struct _HTML_PAINT_XFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

typedef struct _HTTPSPolicyCallbackData {
    ULONG cbStruct;
    ULONG cbSize;
    ULONG dwAuthType;
    ULONG fdwChecks;
    PWCHAR pwszServerName;
};

typedef struct _HV_DETAILS {
    ULONG Data[4];
};

typedef struct _HYPER_SIZEDARR {
    ULONG clSize;
    PLONG64 pData;
};

typedef struct _ICONINFO {
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
};

typedef struct _ICONINFOEXA {
    ULONG cbSize;
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
    USHORT wResID;
    CHAR szModName[260];
    CHAR szResName[260];
};

typedef struct _ICONINFOEXW {
    ULONG cbSize;
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
    USHORT wResID;
    WCHAR szModName[260];
    WCHAR szResName[260];
};

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONG64 BeginAddress;
    ULONG64 EndAddress;
    ULONG64 ExceptionHandler;
    ULONG64 HandlerData;
    ULONG64 PrologEndAddress;
};

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG EndAddress;
    ULONG ExceptionHandler;
    ULONG HandlerData;
    ULONG PrologEndAddress;
};

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    UCHAR Name[16];
    UCHAR Date[12];
    UCHAR UserID[6];
    UCHAR GroupID[6];
    UCHAR Mode[8];
    UCHAR Size[10];
    UCHAR EndHeader[2];
};

typedef struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG UnwindData;
    ULONG Flag : 2;
    ULONG FunctionLength : 11;
    ULONG RegF : 3;
    ULONG RegI : 4;
    ULONG H : 1;
    ULONG CR : 2;
    ULONG FrameSize : 9;
};

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG UnwindData;
    ULONG Flag : 2;
    ULONG FunctionLength : 11;
    ULONG Ret : 2;
    ULONG H : 1;
    ULONG Reg : 3;
    ULONG R : 1;
    ULONG L : 1;
    ULONG C : 1;
    ULONG StackAdjust : 10;
};

typedef struct _IMAGE_BASE_RELOCATION {
    ULONG VirtualAddress;
    ULONG SizeOfBlock;
};

typedef struct _IMAGE_BOUND_FORWARDER_REF {
    ULONG TimeDateStamp;
    USHORT OffsetModuleName;
    USHORT Reserved;
};

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    ULONG TimeDateStamp;
    USHORT OffsetModuleName;
    USHORT NumberOfModuleForwarderRefs;
};

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    ULONG FuncStart;
    ULONG PrologLen : 8;
    ULONG FuncLen : 22;
    ULONG ThirtyTwoBit : 1;
    ULONG ExceptionFlag : 1;
};

typedef struct _IMAGE_CHPE_METADATA_X86 {
    ULONG Version;
    ULONG CHPECodeAddressRangeOffset;
    ULONG CHPECodeAddressRangeCount;
    ULONG WowA64ExceptionHandlerFunctionPointer;
    ULONG WowA64DispatchCallFunctionPointer;
    ULONG WowA64DispatchIndirectCallFunctionPointer;
    ULONG WowA64DispatchIndirectCallCfgFunctionPointer;
    ULONG WowA64DispatchRetFunctionPointer;
    ULONG WowA64DispatchRetLeafFunctionPointer;
    ULONG WowA64DispatchJumpFunctionPointer;
    ULONG CompilerIATPointer;
    ULONG WowA64RdtscFunctionPointer;
};

typedef struct _IMAGE_CHPE_RANGE_ENTRY {
    ULONG StartOffset;
    ULONG NativeCode : 1;
    ULONG AddressBits : 31;
    ULONG Length;
};

typedef struct _IMAGE_COFF_SYMBOLS_HEADER {
    ULONG NumberOfSymbols;
    ULONG LvaToFirstSymbol;
    ULONG NumberOfLinenumbers;
    ULONG LvaToFirstLinenumber;
    ULONG RvaToFirstByteOfCode;
    ULONG RvaToLastByteOfCode;
    ULONG RvaToFirstByteOfData;
    ULONG RvaToLastByteOfData;
};

typedef struct _IMAGE_DATA_DIRECTORY {
    ULONG VirtualAddress;
    ULONG Size;
};

typedef struct _IMAGE_DEBUG_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG Type;
    ULONG SizeOfData;
    ULONG AddressOfRawData;
    ULONG PointerToRawData;
};

typedef struct _IMAGE_DEBUG_MISC {
    ULONG DataType;
    ULONG Length;
    UCHAR Unicode;
    UCHAR Reserved[3];
    UCHAR Data[1];
};

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR {
     <unnamed-type-Attributes>;
    union {
        ULONG AllAttributes;
        ULONG RvaBased : 1;
        ULONG ReservedAttributes : 31;
    } Attributes;
    ULONG DllNameRVA;
    ULONG ModuleHandleRVA;
    ULONG ImportAddressTableRVA;
    ULONG ImportNameTableRVA;
    ULONG BoundImportAddressTableRVA;
    ULONG UnloadInformationTableRVA;
    ULONG TimeDateStamp;
};

typedef struct _IMAGE_DOS_HEADER {
    USHORT e_magic;
    USHORT e_cblp;
    USHORT e_cp;
    USHORT e_crlc;
    USHORT e_cparhdr;
    USHORT e_minalloc;
    USHORT e_maxalloc;
    USHORT e_ss;
    USHORT e_sp;
    USHORT e_csum;
    USHORT e_ip;
    USHORT e_cs;
    USHORT e_lfarlc;
    USHORT e_ovno;
    USHORT e_res[4];
    USHORT e_oemid;
    USHORT e_oeminfo;
    USHORT e_res2[10];
    LONG e_lfanew;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION32 {
    ULONG Symbol;
    ULONG BaseRelocSize;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION32_V2 {
    ULONG HeaderSize;
    ULONG FixupInfoSize;
    ULONG Symbol;
    ULONG SymbolGroup;
    ULONG Flags;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION64 {
    ULONG64 Symbol;
    ULONG BaseRelocSize;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION64_V2 {
    ULONG HeaderSize;
    ULONG FixupInfoSize;
    ULONG64 Symbol;
    ULONG SymbolGroup;
    ULONG Flags;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION_TABLE {
    ULONG Version;
    ULONG Size;
};

typedef struct _IMAGE_ENCLAVE_CONFIG32 {
    ULONG Size;
    ULONG MinimumRequiredConfigSize;
    ULONG PolicyFlags;
    ULONG NumberOfImports;
    ULONG ImportList;
    ULONG ImportEntrySize;
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImageVersion;
    ULONG SecurityVersion;
    ULONG EnclaveSize;
    ULONG NumberOfThreads;
    ULONG EnclaveFlags;
};

typedef struct _IMAGE_ENCLAVE_CONFIG64 {
    ULONG Size;
    ULONG MinimumRequiredConfigSize;
    ULONG PolicyFlags;
    ULONG NumberOfImports;
    ULONG ImportList;
    ULONG ImportEntrySize;
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImageVersion;
    ULONG SecurityVersion;
    ULONG64 EnclaveSize;
    ULONG NumberOfThreads;
    ULONG EnclaveFlags;
};

typedef struct _IMAGE_ENCLAVE_IMPORT {
    ULONG MatchType;
    ULONG MinimumSecurityVersion;
    UCHAR UniqueOrAuthorID[32];
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImportName;
    ULONG Reserved;
};

typedef struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER {
    ULONG EpilogueCount;
    UCHAR EpilogueByteCount;
    UCHAR BranchDescriptorElementSize;
    USHORT BranchDescriptorCount;
};

typedef struct _IMAGE_EXPORT_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG Name;
    ULONG Base;
    ULONG NumberOfFunctions;
    ULONG NumberOfNames;
    ULONG AddressOfFunctions;
    ULONG AddressOfNames;
    ULONG AddressOfNameOrdinals;
};

typedef struct _IMAGE_FILE_HEADER {
    USHORT Machine;
    USHORT NumberOfSections;
    ULONG TimeDateStamp;
    ULONG PointerToSymbolTable;
    ULONG NumberOfSymbols;
    USHORT SizeOfOptionalHeader;
    USHORT Characteristics;
};

typedef struct _IMAGE_FUNCTION_ENTRY {
    ULONG StartingAddress;
    ULONG EndingAddress;
    ULONG EndOfPrologue;
};

typedef struct _IMAGE_FUNCTION_ENTRY64 {
    ULONG64 StartingAddress;
    ULONG64 EndingAddress;
    ULONG64 EndOfPrologue;
    ULONG64 UnwindInfoAddress;
};

typedef struct _IMAGE_HOT_PATCH_BASE {
    ULONG SequenceNumber;
    ULONG Flags;
    ULONG OriginalTimeDateStamp;
    ULONG OriginalCheckSum;
    ULONG CodeIntegrityInfo;
    ULONG CodeIntegritySize;
    ULONG PatchTable;
    ULONG BufferOffset;
};

typedef struct _IMAGE_HOT_PATCH_HASHES {
    UCHAR SHA256[32];
    UCHAR SHA1[20];
};

typedef struct _IMAGE_HOT_PATCH_INFO {
    ULONG Version;
    ULONG Size;
    ULONG SequenceNumber;
    ULONG BaseImageList;
    ULONG BaseImageCount;
    ULONG BufferOffset;
    ULONG ExtraPatchSize;
};

typedef struct _IMAGE_IMPORT_BY_NAME {
    USHORT Hint;
    CHAR Name[1];
};

typedef struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
    ULONG PageRelativeOffset : 12;
    ULONG IndirectCall : 1;
    ULONG IATIndex : 19;
};

typedef struct _IMAGE_IMPORT_DESCRIPTOR {
    ULONG Characteristics;
    ULONG OriginalFirstThunk;
    ULONG TimeDateStamp;
    ULONG ForwarderChain;
    ULONG Name;
    ULONG FirstThunk;
};

typedef struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
    USHORT PageRelativeOffset : 12;
    USHORT IndirectCall : 1;
    USHORT RexWPrefix : 1;
    USHORT CfgCheck : 1;
    USHORT Reserved : 1;
};

typedef struct _IMAGE_LINENUMBER {
     <unnamed-type-Type>;
    union {
        ULONG SymbolTableIndex;
        ULONG VirtualAddress;
    } Type;
    USHORT Linenumber;
};

typedef struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY {
    USHORT Flags;
    USHORT Catalog;
    ULONG CatalogOffset;
    ULONG Reserved;
};

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32 {
    ULONG Size;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG GlobalFlagsClear;
    ULONG GlobalFlagsSet;
    ULONG CriticalSectionDefaultTimeout;
    ULONG DeCommitFreeBlockThreshold;
    ULONG DeCommitTotalFreeThreshold;
    ULONG LockPrefixTable;
    ULONG MaximumAllocationSize;
    ULONG VirtualMemoryThreshold;
    ULONG ProcessHeapFlags;
    ULONG ProcessAffinityMask;
    USHORT CSDVersion;
    USHORT DependentLoadFlags;
    ULONG EditList;
    ULONG SecurityCookie;
    ULONG SEHandlerTable;
    ULONG SEHandlerCount;
    ULONG GuardCFCheckFunctionPointer;
    ULONG GuardCFDispatchFunctionPointer;
    ULONG GuardCFFunctionTable;
    ULONG GuardCFFunctionCount;
    ULONG GuardFlags;
    struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
    ULONG GuardAddressTakenIatEntryTable;
    ULONG GuardAddressTakenIatEntryCount;
    ULONG GuardLongJumpTargetTable;
    ULONG GuardLongJumpTargetCount;
    ULONG DynamicValueRelocTable;
    ULONG CHPEMetadataPointer;
    ULONG GuardRFFailureRoutine;
    ULONG GuardRFFailureRoutineFunctionPointer;
    ULONG DynamicValueRelocTableOffset;
    USHORT DynamicValueRelocTableSection;
    USHORT Reserved2;
    ULONG GuardRFVerifyStackPointerFunctionPointer;
    ULONG HotPatchTableOffset;
    ULONG Reserved3;
    ULONG EnclaveConfigurationPointer;
    ULONG VolatileMetadataPointer;
};

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64 {
    ULONG Size;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG GlobalFlagsClear;
    ULONG GlobalFlagsSet;
    ULONG CriticalSectionDefaultTimeout;
    ULONG64 DeCommitFreeBlockThreshold;
    ULONG64 DeCommitTotalFreeThreshold;
    ULONG64 LockPrefixTable;
    ULONG64 MaximumAllocationSize;
    ULONG64 VirtualMemoryThreshold;
    ULONG64 ProcessAffinityMask;
    ULONG ProcessHeapFlags;
    USHORT CSDVersion;
    USHORT DependentLoadFlags;
    ULONG64 EditList;
    ULONG64 SecurityCookie;
    ULONG64 SEHandlerTable;
    ULONG64 SEHandlerCount;
    ULONG64 GuardCFCheckFunctionPointer;
    ULONG64 GuardCFDispatchFunctionPointer;
    ULONG64 GuardCFFunctionTable;
    ULONG64 GuardCFFunctionCount;
    ULONG GuardFlags;
    struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
    ULONG64 GuardAddressTakenIatEntryTable;
    ULONG64 GuardAddressTakenIatEntryCount;
    ULONG64 GuardLongJumpTargetTable;
    ULONG64 GuardLongJumpTargetCount;
    ULONG64 DynamicValueRelocTable;
    ULONG64 CHPEMetadataPointer;
    ULONG64 GuardRFFailureRoutine;
    ULONG64 GuardRFFailureRoutineFunctionPointer;
    ULONG DynamicValueRelocTableOffset;
    USHORT DynamicValueRelocTableSection;
    USHORT Reserved2;
    ULONG64 GuardRFVerifyStackPointerFunctionPointer;
    ULONG HotPatchTableOffset;
    ULONG Reserved3;
    ULONG64 EnclaveConfigurationPointer;
    ULONG64 VolatileMetadataPointer;
};

typedef struct _IMAGE_NT_HEADERS {
    ULONG Signature;
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_NT_HEADERS64 {
    ULONG Signature;
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

typedef struct _IMAGE_OPTIONAL_HEADER {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG BaseOfData;
    ULONG ImageBase;
    ULONG SectionAlignment;
    ULONG FileAlignment;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    USHORT MajorImageVersion;
    USHORT MinorImageVersion;
    USHORT MajorSubsystemVersion;
    USHORT MinorSubsystemVersion;
    ULONG Win32VersionValue;
    ULONG SizeOfImage;
    ULONG SizeOfHeaders;
    ULONG CheckSum;
    USHORT Subsystem;
    USHORT DllCharacteristics;
    ULONG SizeOfStackReserve;
    ULONG SizeOfStackCommit;
    ULONG SizeOfHeapReserve;
    ULONG SizeOfHeapCommit;
    ULONG LoaderFlags;
    ULONG NumberOfRvaAndSizes;
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _IMAGE_OPTIONAL_HEADER64 {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG64 ImageBase;
    ULONG SectionAlignment;
    ULONG FileAlignment;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    USHORT MajorImageVersion;
    USHORT MinorImageVersion;
    USHORT MajorSubsystemVersion;
    USHORT MinorSubsystemVersion;
    ULONG Win32VersionValue;
    ULONG SizeOfImage;
    ULONG SizeOfHeaders;
    ULONG CheckSum;
    USHORT Subsystem;
    USHORT DllCharacteristics;
    ULONG64 SizeOfStackReserve;
    ULONG64 SizeOfStackCommit;
    ULONG64 SizeOfHeapReserve;
    ULONG64 SizeOfHeapCommit;
    ULONG LoaderFlags;
    ULONG NumberOfRvaAndSizes;
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _IMAGE_OS2_HEADER {
    USHORT ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    USHORT ne_enttab;
    USHORT ne_cbenttab;
    LONG ne_crc;
    USHORT ne_flags;
    USHORT ne_autodata;
    USHORT ne_heap;
    USHORT ne_stack;
    LONG ne_csip;
    LONG ne_sssp;
    USHORT ne_cseg;
    USHORT ne_cmod;
    USHORT ne_cbnrestab;
    USHORT ne_segtab;
    USHORT ne_rsrctab;
    USHORT ne_restab;
    USHORT ne_modtab;
    USHORT ne_imptab;
    LONG ne_nrestab;
    USHORT ne_cmovent;
    USHORT ne_align;
    USHORT ne_cres;
    UCHAR ne_exetyp;
    UCHAR ne_flagsothers;
    USHORT ne_pretthunks;
    USHORT ne_psegrefbytes;
    USHORT ne_swaparea;
    USHORT ne_expver;
};

typedef struct _IMAGE_POLICY_ENTRY {
    enum _IMAGE_POLICY_ENTRY_TYPE Type;
    enum _IMAGE_POLICY_ID PolicyId;
     <unnamed-type-u>;
    union {
        PVOID None;
        UCHAR BoolValue;
        CHAR Int8Value;
        UCHAR UInt8Value;
        SHORT Int16Value;
        USHORT UInt16Value;
        LONG Int32Value;
        ULONG UInt32Value;
        LONG64 Int64Value;
        ULONG64 UInt64Value;
        PCHAR AnsiStringValue;
        PWCHAR UnicodeStringValue;
    } u;
};

typedef struct _IMAGE_POLICY_METADATA {
    UCHAR Version;
    UCHAR Reserved0[7];
    ULONG64 ApplicationId;
    struct _IMAGE_POLICY_ENTRY Policies[0];
};

typedef struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER {
    UCHAR PrologueByteCount;
};

typedef struct _IMAGE_RELOCATION {
    ULONG VirtualAddress;
    ULONG RelocCount;
    ULONG SymbolTableIndex;
    USHORT Type;
};

typedef struct _IMAGE_RESOURCE_DATA_ENTRY {
    ULONG OffsetToData;
    ULONG Size;
    ULONG CodePage;
    ULONG Reserved;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    USHORT NumberOfNamedEntries;
    USHORT NumberOfIdEntries;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    ULONG NameOffset : 31;
    ULONG NameIsString : 1;
    ULONG Name;
    USHORT Id;
    ULONG OffsetToData;
    ULONG OffsetToDirectory : 31;
    ULONG DataIsDirectory : 1;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    USHORT Length;
    CHAR NameString[1];
};

typedef struct _IMAGE_RESOURCE_DIR_STRING_U {
    USHORT Length;
    WCHAR NameString[1];
};

typedef struct _IMAGE_ROM_HEADERS {
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG BaseOfData;
    ULONG BaseOfBss;
    ULONG GprMask;
    ULONG CprMask[4];
    ULONG GpValue;
};

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG EndAddress;
    ULONG UnwindInfoAddress;
    ULONG UnwindData;
};

typedef struct _IMAGE_SECTION_HEADER {
    UCHAR Name[8];
     <unnamed-type-Misc>;
    union {
        ULONG PhysicalAddress;
        ULONG VirtualSize;
    } Misc;
    ULONG VirtualAddress;
    ULONG SizeOfRawData;
    ULONG PointerToRawData;
    ULONG PointerToRelocations;
    ULONG PointerToLinenumbers;
    USHORT NumberOfRelocations;
    USHORT NumberOfLinenumbers;
    ULONG Characteristics;
};

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {
    USHORT Signature;
    USHORT Flags;
    USHORT Machine;
    USHORT Characteristics;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    ULONG ImageBase;
    ULONG SizeOfImage;
    ULONG NumberOfSections;
    ULONG ExportedNamesSize;
    ULONG DebugDirectorySize;
    ULONG SectionAlignment;
    ULONG Reserved[2];
};

typedef struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION {
    USHORT PageRelativeOffset : 12;
    USHORT RegisterNumber : 4;
};

typedef struct _IMAGE_SYMBOL {
     <unnamed-type-N>;
    union {
        UCHAR ShortName[8];
         <unnamed-type-Name>;
        struct {
            ULONG Short;
            ULONG Long;
        } Name;
        ULONG LongName[2];
    } N;
    ULONG Value;
    SHORT SectionNumber;
    USHORT Type;
    UCHAR StorageClass;
    UCHAR NumberOfAuxSymbols;
};

typedef struct _IMAGE_SYMBOL_EX {
     <unnamed-type-N>;
    union {
        UCHAR ShortName[8];
         <unnamed-type-Name>;
        struct {
            ULONG Short;
            ULONG Long;
        } Name;
        ULONG LongName[2];
    } N;
    ULONG Value;
    LONG SectionNumber;
    USHORT Type;
    UCHAR StorageClass;
    UCHAR NumberOfAuxSymbols;
};

typedef struct _IMAGE_THUNK_DATA32 {
     <unnamed-type-u1>;
    union {
        ULONG ForwarderString;
        ULONG Function;
        ULONG Ordinal;
        ULONG AddressOfData;
    } u1;
};

typedef struct _IMAGE_THUNK_DATA64 {
     <unnamed-type-u1>;
    union {
        ULONG64 ForwarderString;
        ULONG64 Function;
        ULONG64 Ordinal;
        ULONG64 AddressOfData;
    } u1;
};

typedef struct _IMAGE_TLS_DIRECTORY32 {
    ULONG StartAddressOfRawData;
    ULONG EndAddressOfRawData;
    ULONG AddressOfIndex;
    ULONG AddressOfCallBacks;
    ULONG SizeOfZeroFill;
    ULONG Characteristics;
    ULONG Reserved0 : 20;
    ULONG Alignment : 4;
    ULONG Reserved1 : 8;
};

typedef struct _IMAGE_TLS_DIRECTORY64 {
    ULONG64 StartAddressOfRawData;
    ULONG64 EndAddressOfRawData;
    ULONG64 AddressOfIndex;
    ULONG64 AddressOfCallBacks;
    ULONG SizeOfZeroFill;
    ULONG Characteristics;
    ULONG Reserved0 : 20;
    ULONG Alignment : 4;
    ULONG Reserved1 : 8;
};

typedef struct _IMAGE_VXD_HEADER {
    USHORT e32_magic;
    UCHAR e32_border;
    UCHAR e32_worder;
    ULONG e32_level;
    USHORT e32_cpu;
    USHORT e32_os;
    ULONG e32_ver;
    ULONG e32_mflags;
    ULONG e32_mpages;
    ULONG e32_startobj;
    ULONG e32_eip;
    ULONG e32_stackobj;
    ULONG e32_esp;
    ULONG e32_pagesize;
    ULONG e32_lastpagesize;
    ULONG e32_fixupsize;
    ULONG e32_fixupsum;
    ULONG e32_ldrsize;
    ULONG e32_ldrsum;
    ULONG e32_objtab;
    ULONG e32_objcnt;
    ULONG e32_objmap;
    ULONG e32_itermap;
    ULONG e32_rsrctab;
    ULONG e32_rsrccnt;
    ULONG e32_restab;
    ULONG e32_enttab;
    ULONG e32_dirtab;
    ULONG e32_dircnt;
    ULONG e32_fpagetab;
    ULONG e32_frectab;
    ULONG e32_impmod;
    ULONG e32_impmodcnt;
    ULONG e32_impproc;
    ULONG e32_pagesum;
    ULONG e32_datapage;
    ULONG e32_preload;
    ULONG e32_nrestab;
    ULONG e32_cbnrestab;
    ULONG e32_nressum;
    ULONG e32_autodata;
    ULONG e32_debuginfo;
    ULONG e32_debuglen;
    ULONG e32_instpreload;
    ULONG e32_instdemand;
    ULONG e32_heapsize;
    UCHAR e32_res3[12];
    ULONG e32_winresoff;
    ULONG e32_winreslen;
    USHORT e32_devid;
    USHORT e32_ddkver;
};

typedef struct _INITIAL_TEB {
     <unnamed-type-OldInitialTeb>;
    struct {
        PVOID OldStackBase;
        PVOID OldStackLimit;
    } OldInitialTeb;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID StackAllocationBase;
};

typedef struct _INPUT_RECORD {
    USHORT EventType;
     <unnamed-type-Event>;
    union {
        struct _KEY_EVENT_RECORD KeyEvent;
        struct _MOUSE_EVENT_RECORD MouseEvent;
        struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
        struct _MENU_EVENT_RECORD MenuEvent;
        struct _FOCUS_EVENT_RECORD FocusEvent;
    } Event;
};

typedef struct _INTERNET_BUFFERSA {
    ULONG dwStructSize;
    struct _INTERNET_BUFFERSA *Next;
    PCHAR lpcszHeader;
    ULONG dwHeadersLength;
    ULONG dwHeadersTotal;
    PVOID lpvBuffer;
    ULONG dwBufferLength;
    ULONG dwBufferTotal;
    ULONG dwOffsetLow;
    ULONG dwOffsetHigh;
};

typedef struct _INTERNET_BUFFERSW {
    ULONG dwStructSize;
    struct _INTERNET_BUFFERSW *Next;
    PWCHAR lpcszHeader;
    ULONG dwHeadersLength;
    ULONG dwHeadersTotal;
    PVOID lpvBuffer;
    ULONG dwBufferLength;
    ULONG dwBufferTotal;
    ULONG dwOffsetLow;
    ULONG dwOffsetHigh;
};

typedef struct _INTERNET_CACHE_ENTRY_INFOA {
    ULONG dwStructSize;
    PCHAR lpszSourceUrlName;
    PCHAR lpszLocalFileName;
    ULONG CacheEntryType;
    ULONG dwUseCount;
    ULONG dwHitRate;
    ULONG dwSizeLow;
    ULONG dwSizeHigh;
    struct _FILETIME LastModifiedTime;
    struct _FILETIME ExpireTime;
    struct _FILETIME LastAccessTime;
    struct _FILETIME LastSyncTime;
    PCHAR lpHeaderInfo;
    ULONG dwHeaderInfoSize;
    PCHAR lpszFileExtension;
    ULONG dwReserved;
    ULONG dwExemptDelta;
};

typedef struct _INTERNET_CACHE_ENTRY_INFOW {
    ULONG dwStructSize;
    PWCHAR lpszSourceUrlName;
    PWCHAR lpszLocalFileName;
    ULONG CacheEntryType;
    ULONG dwUseCount;
    ULONG dwHitRate;
    ULONG dwSizeLow;
    ULONG dwSizeHigh;
    struct _FILETIME LastModifiedTime;
    struct _FILETIME ExpireTime;
    struct _FILETIME LastAccessTime;
    struct _FILETIME LastSyncTime;
    PWCHAR lpHeaderInfo;
    ULONG dwHeaderInfoSize;
    PWCHAR lpszFileExtension;
    ULONG dwReserved;
    ULONG dwExemptDelta;
};

typedef struct _INTERNET_CACHE_GROUP_INFOA {
    ULONG dwGroupSize;
    ULONG dwGroupFlags;
    ULONG dwGroupType;
    ULONG dwDiskUsage;
    ULONG dwDiskQuota;
    ULONG dwOwnerStorage[4];
    CHAR szGroupName[120];
};

typedef struct _INTERNET_CACHE_GROUP_INFOW {
    ULONG dwGroupSize;
    ULONG dwGroupFlags;
    ULONG dwGroupType;
    ULONG dwDiskUsage;
    ULONG dwDiskQuota;
    ULONG dwOwnerStorage[4];
    WCHAR szGroupName[120];
};

typedef struct _INTERNET_CACHE_TIMESTAMPS {
    struct _FILETIME ftExpires;
    struct _FILETIME ftLastModified;
};

typedef struct _INVERTED_FUNCTION_TABLE {
    ULONG CurrentSize;
    ULONG MaximumSize;
    ULONG Epoch;
    UCHAR Overflow;
    struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
    VOID _INVERTED_FUNCTION_TABLE;
    VOID _INVERTED_FUNCTION_TABLE;
    struct _INVERTED_FUNCTION_TABLE *operator=;
    struct _INVERTED_FUNCTION_TABLE *operator=;
};

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY {
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionTable;
    struct _DYNAMIC_FUNCTION_TABLE *DynamicTable;
    PVOID ImageBase;
    ULONG SizeOfImage;
    ULONG SizeOfTable;
};

typedef struct _IO_COMPLETION_BASIC_INFORMATION {
    LONG Depth;
};

typedef struct _IO_COUNTERS {
    ULONG64 ReadOperationCount;
    ULONG64 WriteOperationCount;
    ULONG64 OtherOperationCount;
    ULONG64 ReadTransferCount;
    ULONG64 WriteTransferCount;
    ULONG64 OtherTransferCount;
};

typedef struct _IO_ERROR_LOG_MESSAGE {
    USHORT Type;
    USHORT Size;
    USHORT DriverNameLength;
    union _LARGE_INTEGER TimeStamp;
    ULONG DriverNameOffset;
    struct _IO_ERROR_LOG_PACKET EntryData;
};

typedef struct _IO_ERROR_LOG_PACKET {
    UCHAR MajorFunctionCode;
    UCHAR RetryCount;
    USHORT DumpDataSize;
    USHORT NumberOfStrings;
    USHORT StringOffset;
    USHORT EventCategory;
    LONG ErrorCode;
    ULONG UniqueErrorValue;
    LONG FinalStatus;
    ULONG SequenceNumber;
    ULONG IoControlCode;
    union _LARGE_INTEGER DeviceOffset;
    ULONG DumpData[1];
};

typedef struct _IO_RESOURCE_DESCRIPTOR {
    UCHAR Option;
    UCHAR Type;
    UCHAR ShareDisposition;
    UCHAR Spare1;
    USHORT Flags;
    USHORT Spare2;
     <unnamed-type-u>;
    union {
         <unnamed-type-Port>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Port;
         <unnamed-type-Memory>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory;
         <unnamed-type-Interrupt>;
        struct {
            ULONG MinimumVector;
            ULONG MaximumVector;
            enum _IRQ_DEVICE_POLICY AffinityPolicy;
            enum _IRQ_PRIORITY PriorityPolicy;
            ULONG64 TargetedProcessors;
        } Interrupt;
         <unnamed-type-Dma>;
        struct {
            ULONG MinimumChannel;
            ULONG MaximumChannel;
        } Dma;
         <unnamed-type-DmaV3>;
        struct {
            ULONG RequestLine;
            ULONG Reserved;
            ULONG Channel;
            ULONG TransferWidth;
        } DmaV3;
         <unnamed-type-Generic>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Generic;
         <unnamed-type-DevicePrivate>;
        struct {
            ULONG Data[3];
        } DevicePrivate;
         <unnamed-type-BusNumber>;
        struct {
            ULONG Length;
            ULONG MinBusNumber;
            ULONG MaxBusNumber;
            ULONG Reserved;
        } BusNumber;
         <unnamed-type-ConfigData>;
        struct {
            ULONG Priority;
            ULONG Reserved1;
            ULONG Reserved2;
        } ConfigData;
         <unnamed-type-Memory40>;
        struct {
            ULONG Length40;
            ULONG Alignment40;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory40;
         <unnamed-type-Memory48>;
        struct {
            ULONG Length48;
            ULONG Alignment48;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory48;
         <unnamed-type-Memory64>;
        struct {
            ULONG Length64;
            ULONG Alignment64;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory64;
         <unnamed-type-Connection>;
        struct {
            UCHAR Class;
            UCHAR Type;
            UCHAR Reserved1;
            UCHAR Reserved2;
            ULONG IdLowPart;
            ULONG IdHighPart;
        } Connection;
    } u;
};

typedef struct _IO_RESOURCE_LIST {
    USHORT Version;
    USHORT Revision;
    ULONG Count;
    struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST {
    ULONG ListSize;
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    ULONG SlotNumber;
    ULONG Reserved[3];
    ULONG AlternativeLists;
    struct _IO_RESOURCE_LIST List[1];
};

typedef struct _IO_SESSION_CONNECT_INFO {
    ULONG SessionId;
    UCHAR LocalSession;
};

typedef struct _IO_STATUS_BLOCK {
    LONG Status;
    PVOID Pointer;
    ULONG64 Information;
};

typedef struct _IO_STATUS_BLOCK32 {
    LONG Status;
    ULONG Information;
};

typedef struct _IR_TIMER_EXTRA_CREATE_PARAMETER {
    USHORT ComponentId;
    USHORT RelativeId;
};

typedef struct _ITEMIDLIST {
    struct _SHITEMID mkid;
};

typedef struct _ImageArchitectureEntry {
    ULONG FixupInstRVA;
    ULONG NewInst;
};

typedef struct _ImageArchitectureHeader {
    ULONG AmaskValue : 1;
    ULONG AmaskShift : 8;
    ULONG FirstEntryRVA;
};

typedef struct _JIT_DEBUG_INFO {
    ULONG dwSize;
    ULONG dwProcessorArchitecture;
    ULONG dwThreadID;
    ULONG dwReserved0;
    ULONG64 lpExceptionAddress;
    ULONG64 lpExceptionRecord;
    ULONG64 lpContextRecord;
};

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    PVOID CompletionPort;
};

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    union _LARGE_INTEGER TotalUserTime;
    union _LARGE_INTEGER TotalKernelTime;
    union _LARGE_INTEGER ThisPeriodTotalUserTime;
    union _LARGE_INTEGER ThisPeriodTotalKernelTime;
    ULONG TotalPageFaultCount;
    ULONG TotalProcesses;
    ULONG ActiveProcesses;
    ULONG TotalTerminatedProcesses;
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    struct _IO_COUNTERS IoInfo;
};

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    union _LARGE_INTEGER PerProcessUserTimeLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG LimitFlags;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG ActiveProcessLimit;
    ULONG64 Affinity;
    ULONG PriorityClass;
    ULONG SchedulingClass;
};

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    ULONG NumberOfAssignedProcesses;
    ULONG NumberOfProcessIdsInList;
    ULONG64 ProcessIdList[1];
};

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    ULONG UIRestrictionsClass;
};

typedef struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2 {
    struct _GUID ContainerId;
    struct _GUID ContainerTelemetryId;
    ULONG JobId;
};

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {
    ULONG ControlFlags;
    ULONG CpuRate;
    ULONG Weight;
    USHORT MinRate;
    USHORT MaxRate;
};

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    ULONG EndOfJobTimeAction;
};

typedef struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION {
    struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    struct _IO_COUNTERS IoInfo;
    struct _PROCESS_DISK_COUNTERS DiskIoInfo;
    ULONG64 ContextSwitches;
    union _LARGE_INTEGER TotalCycleTime;
    ULONG64 ReadyTime;
    struct _PROCESS_ENERGY_VALUES EnergyValues;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    struct _IO_COUNTERS IoInfo;
    ULONG64 ProcessMemoryLimit;
    ULONG64 JobMemoryLimit;
    ULONG64 PeakProcessMemoryUsed;
    ULONG64 PeakJobMemoryUsed;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2 {
    struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    struct _IO_COUNTERS IoInfo;
    ULONG64 ProcessMemoryLimit;
    ULONG64 JobMemoryLimit;
    ULONG64 PeakProcessMemoryUsed;
    ULONG64 PeakJobMemoryUsed;
    ULONG64 JobTotalMemoryLimit;
};

typedef struct _JOBOBJECT_FREEZE_INFORMATION {
    ULONG Flags;
    ULONG FreezeOperation : 1;
    ULONG FilterOperation : 1;
    ULONG SwapOperation : 1;
    ULONG Reserved : 29;
    UCHAR Freeze;
    UCHAR Swap;
    UCHAR Reserved0[2];
    struct _JOBOBJECT_WAKE_FILTER WakeFilter;
};

typedef struct _JOBOBJECT_INTERFERENCE_INFORMATION {
    ULONG64 Count;
};

typedef struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION {
    ULONG ControlFlags;
    struct _JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats;
    struct _JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats;
};

typedef struct _JOBOBJECT_IO_ATTRIBUTION_STATS {
    ULONG64 IoCount;
    ULONG64 TotalNonOverlappedQueueTime;
    ULONG64 TotalNonOverlappedServiceTime;
    ULONG64 TotalSize;
};

typedef struct _JOBOBJECT_JOBSET_INFORMATION {
    ULONG MemberLevel;
};

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
};

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2 {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobLowMemoryLimit;
    ULONG64 JobHighMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
};

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION {
    ULONG64 JobMemory;
    ULONG64 PeakJobMemoryUsed;
};

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2 {
    struct _JOBOBJECT_MEMORY_USAGE_INFORMATION BasicInfo;
    ULONG64 JobSharedMemory;
    ULONG64 Reserved[2];
};

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    ULONG LimitFlags;
};

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2 {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobLowMemoryLimit;
    ULONG64 JobHighMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    ULONG LimitFlags;
};

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    ULONG SecurityLimitFlags;
    PVOID JobToken;
    struct _TOKEN_GROUPS *SidsToDisable;
    struct _TOKEN_PRIVILEGES *PrivilegesToDelete;
    struct _TOKEN_GROUPS *RestrictedSids;
};

typedef struct _JOBOBJECT_WAKE_FILTER {
    ULONG HighEdgeFilter;
    ULONG LowEdgeFilter;
};

typedef struct _JOBOBJECT_WAKE_INFORMATION {
    ULONG64 NotificationChannel;
    ULONG64 WakeCounters[7];
};

typedef struct _JOBOBJECT_WAKE_INFORMATION_V1 {
    ULONG64 NotificationChannel;
    ULONG64 WakeCounters[4];
};

typedef struct _JOB_SET_ARRAY {
    PVOID JobHandle;
    ULONG MemberLevel;
    ULONG Flags;
};

typedef struct _JOURNAL_ABSOLUTE_INFORMATION {
    union _LARGE_INTEGER StartTimeStamp;
    union _LARGE_INTEGER EndTimeStamp;
    ULONG64 NumberOfRecords;
    ULONG FillLevel;
};

typedef struct _JOURNAL_CLIENT_INFORMATION {
    union _LARGE_INTEGER StartTimeStamp;
    union _LARGE_INTEGER CurrentTimeStamp;
    ULONG64 RecordsToProcess;
    ULONG RelativeFillLevel;
};

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG SecurityDescriptorLength;
    PVOID SecurityDescriptor;
    USHORT ClassLength;
    PVOID ClassData;
    UCHAR SymbolicLink;
};

typedef struct _JOURNAL_RENAME_KEY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    struct _UNICODE_STRING KeyKeyName;
};

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    struct _UNICODE_STRING ValueName;
    ULONG OldValueType;
    ULONG OldDataLength;
    PVOID OldData;
    ULONG NewValueType;
    ULONG NewDataLength;
    PVOID NewData;
};

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    union _LARGE_INTEGER OldLastWriteTime;
    union _LARGE_INTEGER NewLastWriteTime;
};

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG OldSecurityDescriptorLength;
    PVOID OldSecurityDescriptor;
    ULONG NewSecurityDescriptorLength;
    PVOID NewSecurityDescriptor;
};

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG OldFlags;
    ULONG NewFlags;
};

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _GUID TransactionID;
};

typedef struct _JUMP_BUFFER {
    ULONG64 Frame;
    ULONG64 Rbx;
    ULONG64 Rsp;
    ULONG64 Rbp;
    ULONG64 Rsi;
    ULONG64 Rdi;
    ULONG64 R12;
    ULONG64 R13;
    ULONG64 R14;
    ULONG64 R15;
    ULONG64 Rip;
    ULONG MxCsr;
    USHORT FpCsr;
    USHORT Spare;
    struct _SETJMP_FLOAT128 Xmm6;
    struct _SETJMP_FLOAT128 Xmm7;
    struct _SETJMP_FLOAT128 Xmm8;
    struct _SETJMP_FLOAT128 Xmm9;
    struct _SETJMP_FLOAT128 Xmm10;
    struct _SETJMP_FLOAT128 Xmm11;
    struct _SETJMP_FLOAT128 Xmm12;
    struct _SETJMP_FLOAT128 Xmm13;
    struct _SETJMP_FLOAT128 Xmm14;
    struct _SETJMP_FLOAT128 Xmm15;
};

typedef struct _KAFFINITY_ENUMERATION_CONTEXT {
    struct _KAFFINITY_EX *Affinity;
    ULONG64 CurrentMask;
    USHORT CurrentIndex;
};

typedef struct _KAFFINITY_EX {
    USHORT Count;
    USHORT Size;
    ULONG Reserved;
    ULONG64 Bitmap[20];
};

typedef struct _KCRM_MARSHAL_HEADER {
    ULONG VersionMajor;
    ULONG VersionMinor;
    ULONG NumProtocols;
    ULONG Unused;
};

typedef struct _KCRM_PROTOCOL_BLOB {
    struct _GUID ProtocolId;
    ULONG StaticInfoLength;
    ULONG TransactionIdInfoLength;
    ULONG Unused1;
    ULONG Unused2;
};

typedef struct _KCRM_TRANSACTION_BLOB {
    struct _GUID UOW;
    struct _GUID TmIdentity;
    ULONG IsolationLevel;
    ULONG IsolationFlags;
    ULONG Timeout;
    WCHAR Description[64];
};

typedef struct _KERNEL_USER_TIMES {
    union _LARGE_INTEGER CreateTime;
    union _LARGE_INTEGER ExitTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
};

typedef struct _KEY_BASIC_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_CACHED_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG SubKeys;
    ULONG MaxNameLen;
    ULONG Values;
    ULONG MaxValueNameLen;
    ULONG MaxValueDataLen;
    ULONG NameLength;
};

typedef struct _KEY_CONTROL_FLAGS_INFORMATION {
    ULONG ControlFlags;
};

typedef struct _KEY_EVENT_RECORD {
    LONG bKeyDown;
    USHORT wRepeatCount;
    USHORT wVirtualKeyCode;
    USHORT wVirtualScanCode;
     <unnamed-type-uChar>;
    union {
        WCHAR UnicodeChar;
        CHAR AsciiChar;
    } uChar;
    ULONG dwControlKeyState;
};

typedef struct _KEY_FLAGS_INFORMATION {
    ULONG Wow64Flags;
    ULONG KeyFlags;
    ULONG ControlFlags;
};

typedef struct _KEY_FULL_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG ClassOffset;
    ULONG ClassLength;
    ULONG SubKeys;
    ULONG MaxNameLen;
    ULONG MaxClassLen;
    ULONG Values;
    ULONG MaxValueNameLen;
    ULONG MaxValueDataLen;
    WCHAR Class[1];
};

typedef struct _KEY_HANDLE_TAGS_INFORMATION {
    ULONG HandleTags;
};

typedef struct _KEY_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG IsSupersedeLocal : 1;
    ULONG IsSupersedeTree : 1;
    ULONG ClassIsInherited : 1;
    ULONG Reserved : 28;
};

typedef struct _KEY_NAME_INFORMATION {
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_NODE_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG ClassOffset;
    ULONG ClassLength;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION {
    ULONG Count;
    struct KEY_PID_ARRAY KeyArray[1];
};

typedef struct _KEY_SET_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG IsSupersedeLocal : 1;
    ULONG IsSupersedeTree : 1;
    ULONG ClassIsInherited : 1;
    ULONG Reserved : 28;
};

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION {
    ULONG VirtualTarget : 1;
    ULONG VirtualStore : 1;
    ULONG VirtualSource : 1;
    ULONG Reserved : 29;
};

typedef struct _KEY_TRUST_INFORMATION {
    ULONG TrustedKey : 1;
    ULONG Reserved : 31;
};

typedef struct _KEY_TYPE_SUBTYPE {
    ULONG dwKeySpec;
    struct _GUID Type;
    struct _GUID Subtype;
};

typedef struct _KEY_VALUE_BASIC_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_VALUE_ENTRY {
    struct _UNICODE_STRING *ValueName;
    ULONG DataLength;
    ULONG DataOffset;
    ULONG Type;
};

typedef struct _KEY_VALUE_FULL_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG DataOffset;
    ULONG DataLength;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_VALUE_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG Reserved : 31;
};

typedef struct _KEY_VALUE_PARTIAL_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {
    ULONG Type;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct _KEY_VIRTUALIZATION_INFORMATION {
    ULONG VirtualizationCandidate : 1;
    ULONG VirtualizationEnabled : 1;
    ULONG VirtualTarget : 1;
    ULONG VirtualStore : 1;
    ULONG VirtualSource : 1;
    ULONG Reserved : 27;
};

typedef struct _KEY_WOW64_FLAGS_INFORMATION {
    ULONG UserFlags;
};

typedef struct _KEY_WRITE_TIME_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
};

typedef struct _KLDR_DATA_TABLE_ENTRY {
    struct _LIST_ENTRY InLoadOrderLinks;
    PVOID ExceptionTable;
    ULONG ExceptionTableSize;
    PVOID GpValue;
    struct _NON_PAGED_DEBUG_INFO *NonPagedDebugInfo;
    PVOID DllBase;
    PVOID EntryPoint;
    ULONG SizeOfImage;
    struct _UNICODE_STRING FullDllName;
    struct _UNICODE_STRING BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
     <unnamed-type-u1>;
    union {
        USHORT SignatureLevel : 4;
        USHORT SignatureType : 3;
        USHORT Unused : 9;
        USHORT EntireField;
    } u1;
    PVOID SectionPointer;
    ULONG CheckSum;
    ULONG CoverageSectionSize;
    PVOID CoverageSection;
    PVOID LoadedImports;
    PVOID Spare;
    ULONG SizeOfImageNotRounded;
    ULONG TimeDateStamp;
};

typedef struct _KLDR_DATA_TABLE_ENTRY32 {
    struct LIST_ENTRY32 InLoadOrderLinks;
    ULONG __Undefined1;
    ULONG __Undefined2;
    ULONG __Undefined3;
    ULONG NonPagedDebugInfo;
    ULONG DllBase;
    ULONG EntryPoint;
    ULONG SizeOfImage;
    struct _STRING32 FullDllName;
    struct _STRING32 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT __Undefined5;
    ULONG __Undefined6;
    ULONG CheckSum;
    ULONG TimeDateStamp;
};

typedef struct _KLDR_DATA_TABLE_ENTRY64 {
    struct LIST_ENTRY64 InLoadOrderLinks;
    ULONG64 __Undefined1;
    ULONG64 __Undefined2;
    ULONG64 __Undefined3;
    ULONG64 NonPagedDebugInfo;
    ULONG64 DllBase;
    ULONG64 EntryPoint;
    ULONG SizeOfImage;
    struct _STRING64 FullDllName;
    struct _STRING64 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT __Undefined5;
    ULONG64 __Undefined6;
    ULONG CheckSum;
    ULONG __padding1;
    ULONG TimeDateStamp;
    ULONG __padding2;
};

typedef struct _KLOCK_QUEUE_HANDLE {
    struct _KSPIN_LOCK_QUEUE LockQueue;
    UCHAR OldIrql;
    VOID _KLOCK_QUEUE_HANDLE;
    VOID _KLOCK_QUEUE_HANDLE;
    struct _KLOCK_QUEUE_HANDLE *operator=;
    struct _KLOCK_QUEUE_HANDLE *operator=;
};

typedef struct _KNONVOLATILE_CONTEXT_POINTERS {
    struct _M128A *FloatingContext[16];
    struct _M128A *Xmm0;
    struct _M128A *Xmm1;
    struct _M128A *Xmm2;
    struct _M128A *Xmm3;
    struct _M128A *Xmm4;
    struct _M128A *Xmm5;
    struct _M128A *Xmm6;
    struct _M128A *Xmm7;
    struct _M128A *Xmm8;
    struct _M128A *Xmm9;
    struct _M128A *Xmm10;
    struct _M128A *Xmm11;
    struct _M128A *Xmm12;
    struct _M128A *Xmm13;
    struct _M128A *Xmm14;
    struct _M128A *Xmm15;
    PULONG64 IntegerContext[16];
    PULONG64 Rax;
    PULONG64 Rcx;
    PULONG64 Rdx;
    PULONG64 Rbx;
    PULONG64 Rsp;
    PULONG64 Rbp;
    PULONG64 Rsi;
    PULONG64 Rdi;
    PULONG64 R8;
    PULONG64 R9;
    PULONG64 R10;
    PULONG64 R11;
    PULONG64 R12;
    PULONG64 R13;
    PULONG64 R14;
    PULONG64 R15;
};

typedef struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64 {
    PULONG64 X19;
    PULONG64 X20;
    PULONG64 X21;
    PULONG64 X22;
    PULONG64 X23;
    PULONG64 X24;
    PULONG64 X25;
    PULONG64 X26;
    PULONG64 X27;
    PULONG64 X28;
    PULONG64 Fp;
    PULONG64 Lr;
    PULONG64 D8;
    PULONG64 D9;
    PULONG64 D10;
    PULONG64 D11;
    PULONG64 D12;
    PULONG64 D13;
    PULONG64 D14;
    PULONG64 D15;
};

typedef struct _KSPIN_LOCK_QUEUE {
    struct _KSPIN_LOCK_QUEUE *Next;
    PULONG64 Lock;
    VOID _KSPIN_LOCK_QUEUE;
    VOID _KSPIN_LOCK_QUEUE;
    struct _KSPIN_LOCK_QUEUE *operator=;
    struct _KSPIN_LOCK_QUEUE *operator=;
};

typedef struct _KSYSTEM_TIME {
    ULONG LowPart;
    LONG High1Time;
    LONG High2Time;
};

typedef struct _KTMOBJECT_CURSOR {
    struct _GUID LastQuery;
    ULONG ObjectIdCount;
    struct _GUID ObjectIds[1];
};

typedef struct _KUSER_SHARED_DATA {
    ULONG TickCountLowDeprecated;
    ULONG TickCountMultiplier;
    struct _KSYSTEM_TIME InterruptTime;
    struct _KSYSTEM_TIME SystemTime;
    struct _KSYSTEM_TIME TimeZoneBias;
    USHORT ImageNumberLow;
    USHORT ImageNumberHigh;
    WCHAR NtSystemRoot[260];
    ULONG MaxStackTraceDepth;
    ULONG CryptoExponent;
    ULONG TimeZoneId;
    ULONG LargePageMinimum;
    ULONG AitSamplingValue;
    ULONG AppCompatFlag;
    ULONG64 RNGSeedVersion;
    ULONG GlobalValidationRunlevel;
    LONG TimeZoneBiasStamp;
    ULONG NtBuildNumber;
    enum _NT_PRODUCT_TYPE NtProductType;
    UCHAR ProductTypeIsValid;
    UCHAR Reserved0[1];
    USHORT NativeProcessorArchitecture;
    ULONG NtMajorVersion;
    ULONG NtMinorVersion;
    UCHAR ProcessorFeatures[64];
    ULONG Reserved1;
    ULONG Reserved3;
    ULONG TimeSlip;
    enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
    ULONG BootId;
    union _LARGE_INTEGER SystemExpirationDate;
    ULONG SuiteMask;
    UCHAR KdDebuggerEnabled;
    UCHAR MitigationPolicies;
    UCHAR NXSupportPolicy : 2;
    UCHAR SEHValidationPolicy : 2;
    UCHAR CurDirDevicesSkippedForDlls : 2;
    UCHAR Reserved : 2;
    UCHAR Reserved6[2];
    ULONG ActiveConsoleId;
    ULONG DismountCount;
    ULONG ComPlusPackage;
    ULONG LastSystemRITEventTickCount;
    ULONG NumberOfPhysicalPages;
    UCHAR SafeBootMode;
    UCHAR VirtualizationFlags;
    UCHAR Reserved12[2];
    ULONG SharedDataFlags;
    ULONG DbgErrorPortPresent : 1;
    ULONG DbgElevationEnabled : 1;
    ULONG DbgVirtEnabled : 1;
    ULONG DbgInstallerDetectEnabled : 1;
    ULONG DbgLkgEnabled : 1;
    ULONG DbgDynProcessorEnabled : 1;
    ULONG DbgConsoleBrokerEnabled : 1;
    ULONG DbgSecureBootEnabled : 1;
    ULONG DbgMultiSessionSku : 1;
    ULONG DbgMultiUsersInSessionSku : 1;
    ULONG DbgStateSeparationEnabled : 1;
    ULONG SpareBits : 21;
    ULONG DataFlagsPad[1];
    ULONG64 TestRetInstruction;
    LONG64 QpcFrequency;
    ULONG SystemCall;
    ULONG SystemCallPad0;
    ULONG64 SystemCallPad[2];
    struct _KSYSTEM_TIME TickCount;
    ULONG64 TickCountQuad;
    ULONG ReservedTickCountOverlay[3];
    ULONG TickCountPad[1];
    ULONG Cookie;
    ULONG CookiePad[1];
    LONG64 ConsoleSessionForegroundProcessId;
    ULONG64 TimeUpdateLock;
    ULONG64 BaselineSystemTimeQpc;
    ULONG64 BaselineInterruptTimeQpc;
    ULONG64 QpcSystemTimeIncrement;
    ULONG64 QpcInterruptTimeIncrement;
    UCHAR QpcSystemTimeIncrementShift;
    UCHAR QpcInterruptTimeIncrementShift;
    USHORT UnparkedProcessorCount;
    ULONG EnclaveFeatureMask[4];
    ULONG TelemetryCoverageRound;
    USHORT UserModeGlobalLogger[16];
    ULONG ImageFileExecutionOptions;
    ULONG LangGenerationCount;
    ULONG64 Reserved4;
    ULONG64 InterruptTimeBias;
    ULONG64 QpcBias;
    ULONG ActiveProcessorCount;
    UCHAR ActiveGroupCount;
    UCHAR Reserved9;
    USHORT QpcData;
    UCHAR QpcBypassEnabled;
    UCHAR QpcShift;
    union _LARGE_INTEGER TimeZoneBiasEffectiveStart;
    union _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
    struct _XSTATE_CONFIGURATION XState;
};

typedef struct _LAB {
    USHORT lid;
    LONG msofnfc;
    WCHAR wchFirstChar;
    LONG iTotalChars;
    LONG iMainChars;
    LONG iExtraChars;
    PWCHAR wzExtra;
    PWCHAR *pFormatLetter;
};

typedef struct _LAST_EXCEPTION_LOG {
    struct _EXCEPTION_RECORD ExceptionRecord;
    struct _CONTEXT ContextRecord;
    ULONG ControlPc;
    enum _EXCEPTION_DISPOSITION Disposition;
    ULONG HandlerData[5];
};

typedef struct _LBLOB {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PUCHAR Buffer;
};

typedef struct _LDBL12 {
    UCHAR ld12[12];
};

typedef struct _LDOUBLE {
    UCHAR ld[10];
};

typedef struct _LDRP_CSLIST {
    struct _SINGLE_LIST_ENTRY *Tail;
};

typedef struct _LDRP_LOAD_CONTEXT {
};

typedef struct _LDR_DATA_TABLE_ENTRY {
    struct _LIST_ENTRY InLoadOrderLinks;
    struct _LIST_ENTRY InMemoryOrderLinks;
    struct _LIST_ENTRY InInitializationOrderLinks;
    PVOID DllBase;
    PVOID EntryPoint;
    ULONG SizeOfImage;
    struct _UNICODE_STRING FullDllName;
    struct _UNICODE_STRING BaseDllName;
    UCHAR FlagGroup[4];
    ULONG Flags;
    ULONG PackagedBinary : 1;
    ULONG MarkedForRemoval : 1;
    ULONG ImageDll : 1;
    ULONG LoadNotificationsSent : 1;
    ULONG TelemetryEntryProcessed : 1;
    ULONG ProcessStaticImport : 1;
    ULONG InLegacyLists : 1;
    ULONG InIndexes : 1;
    ULONG ShimDll : 1;
    ULONG InExceptionTable : 1;
    ULONG ReservedFlags1 : 2;
    ULONG LoadInProgress : 1;
    ULONG LoadConfigProcessed : 1;
    ULONG EntryProcessed : 1;
    ULONG ProtectDelayLoad : 1;
    ULONG ReservedFlags3 : 2;
    ULONG DontCallForThreads : 1;
    ULONG ProcessAttachCalled : 1;
    ULONG ProcessAttachFailed : 1;
    ULONG CorDeferredValidate : 1;
    ULONG CorImage : 1;
    ULONG DontRelocate : 1;
    ULONG CorILOnly : 1;
    ULONG ChpeImage : 1;
    ULONG ReservedFlags5 : 2;
    ULONG Redirected : 1;
    ULONG ReservedFlags6 : 2;
    ULONG CompatDatabaseProcessed : 1;
    USHORT ObsoleteLoadCount;
    USHORT TlsIndex;
    struct _LIST_ENTRY HashLinks;
    ULONG TimeDateStamp;
    struct _ACTIVATION_CONTEXT *EntryPointActivationContext;
    PVOID Lock;
    struct _LDR_DDAG_NODE *DdagNode;
    struct _LIST_ENTRY NodeModuleLink;
    struct _LDRP_LOAD_CONTEXT *LoadContext;
    PVOID ParentDllBase;
    PVOID SwitchBackContext;
    struct _RTL_BALANCED_NODE BaseAddressIndexNode;
    struct _RTL_BALANCED_NODE MappingInfoIndexNode;
    ULONG64 OriginalBase;
    union _LARGE_INTEGER LoadTime;
    ULONG BaseNameHashValue;
    enum _LDR_DLL_LOAD_REASON LoadReason;
    ULONG ImplicitPathOptions;
    ULONG ReferenceCount;
    ULONG DependentLoadFlags;
    UCHAR SigningLevel;
};

typedef struct _LDR_DATA_TABLE_ENTRY32 {
    struct LIST_ENTRY32 InLoadOrderLinks;
    struct LIST_ENTRY32 InMemoryOrderLinks;
    struct LIST_ENTRY32 InInitializationOrderLinks;
    ULONG DllBase;
    ULONG EntryPoint;
    ULONG SizeOfImage;
    struct _STRING32 FullDllName;
    struct _STRING32 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT TlsIndex;
    struct LIST_ENTRY32 HashLinks;
    ULONG SectionPointer;
    ULONG CheckSum;
    ULONG TimeDateStamp;
    ULONG LoadedImports;
};

typedef struct _LDR_DATA_TABLE_ENTRY64 {
    struct LIST_ENTRY64 InLoadOrderLinks;
    struct LIST_ENTRY64 InMemoryOrderLinks;
    struct LIST_ENTRY64 InInitializationOrderLinks;
    ULONG64 DllBase;
    ULONG64 EntryPoint;
    ULONG SizeOfImage;
    struct _STRING64 FullDllName;
    struct _STRING64 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT TlsIndex;
    struct LIST_ENTRY64 HashLinks;
    ULONG64 SectionPointer;
    ULONG CheckSum;
    ULONG TimeDateStamp;
    ULONG64 LoadedImports;
};

typedef struct _LDR_DDAG_NODE {
    struct _LIST_ENTRY Modules;
    struct _LDR_SERVICE_TAG_RECORD *ServiceTagList;
    ULONG LoadCount;
    ULONG LoadWhileUnloadingCount;
    ULONG LowestLink;
    struct _LDRP_CSLIST Dependencies;
    struct _LDRP_CSLIST IncomingDependencies;
    enum _LDR_DDAG_STATE State;
    struct _SINGLE_LIST_ENTRY CondenseLink;
    ULONG PreorderNumber;
};

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA {
    ULONG Flags;
    struct _UNICODE_STRING *FullDllName;
    struct _UNICODE_STRING *BaseDllName;
    PVOID DllBase;
    ULONG SizeOfImage;
};

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA {
    ULONG Flags;
    struct _UNICODE_STRING *FullDllName;
    struct _UNICODE_STRING *BaseDllName;
    PVOID DllBase;
    ULONG SizeOfImage;
};

typedef struct _LDR_ENUM_RESOURCE_ENTRY {
     <unnamed-type-Path>;
    union {
        ULONG64 NameOrId;
        struct _IMAGE_RESOURCE_DIRECTORY_STRING *Name;
        USHORT Id;
        USHORT NameIsPresent;
    } Path[3];
    PVOID Data;
    ULONG Size;
    ULONG Reserved;
};

typedef struct _LDR_FAILURE_DATA {
    LONG Status;
    WCHAR ImageName[32];
    WCHAR AdditionalInfo[32];
};

typedef struct _LDR_IMPORT_CALLBACK_INFO {
    PVOID ImportCallbackRoutine;
    PVOID ImportCallbackParameter;
};

typedef struct _LDR_RESLOADER_RET {
    PVOID Module;
    PVOID DataEntry;
    PVOID TargetModule;
};

typedef struct _LDR_SECTION_INFO {
    PVOID SectionHandle;
    ULONG DesiredAccess;
    struct _OBJECT_ATTRIBUTES *ObjA;
    ULONG SectionPageProtection;
    ULONG AllocationAttributes;
};

typedef struct _LDR_SERVICE_TAG_RECORD {
    struct _LDR_SERVICE_TAG_RECORD *Next;
    ULONG ServiceTag;
};

typedef struct _LDR_VERIFY_IMAGE_INFO {
    ULONG Size;
    ULONG Flags;
    struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
    struct _LDR_SECTION_INFO SectionInfo;
    USHORT ImageCharacteristics;
};

typedef struct _LDT_ENTRY {
    USHORT LimitLow;
    USHORT BaseLow;
     <unnamed-type-HighWord>;
    union {
         <unnamed-type-Bytes>;
        struct {
            UCHAR BaseMid;
            UCHAR Flags1;
            UCHAR Flags2;
            UCHAR BaseHi;
        } Bytes;
         <unnamed-type-Bits>;
        struct {
            ULONG BaseMid : 8;
            ULONG Type : 5;
            ULONG Dpl : 2;
            ULONG Pres : 1;
            ULONG LimitHi : 4;
            ULONG Sys : 1;
            ULONG Reserved_0 : 1;
            ULONG Default_Big : 1;
            ULONG Granularity : 1;
            ULONG BaseHi : 8;
        } Bits;
    } HighWord;
};

typedef struct _LEAP_SECOND_DATA {
};

typedef struct _LEAP_SECOND_DATA_REGISTRY_ENTRY {
    SHORT Year;
    SHORT Month;
    SHORT Day;
    SHORT Hour;
    SHORT Flags;
    SHORT Reserved;
};

typedef struct _LEARNING_MODE_OBJECT_INFORMATION {
    struct _SINGLE_LIST_ENTRY ListEntry;
    enum _LEARNING_MODE_LOG_LEVEL LogLevel;
    struct _UNICODE_STRING *ObjectType;
    struct _UNICODE_STRING *ObjectName;
    PVOID RootDirectory;
    struct _UNICODE_STRING FullObjectName;
};

typedef struct _LINK_TRACKING_INFORMATION {
    enum _LINK_TRACKING_INFORMATION_TYPE Type;
    UCHAR VolumeId[16];
};

typedef struct _LIST_ENTRY {
    struct _LIST_ENTRY *Flink;
    struct _LIST_ENTRY *Blink;
};

typedef struct _LOAD_ASDATA_TABLE {
    PVOID Module;
    PWCHAR FilePath;
    ULONG64 Size;
    PVOID Handle;
    LONG RefCount;
    struct _ACTIVATION_CONTEXT *EntryPointActivationContext;
};

typedef struct _LOAD_DLL_DEBUG_INFO {
    PVOID hFile;
    PVOID lpBaseOfDll;
    ULONG dwDebugInfoFileOffset;
    ULONG nDebugInfoSize;
    PVOID lpImageName;
    USHORT fUnicode;
};

typedef struct _LONGDOUBLE {
    DOUBLE x;
};

typedef struct _LONG_SIZEDARR {
    ULONG clSize;
    PULONG pData;
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY {
    ULONG OffsetToNext;
    ULONG Flags;
    union _LARGE_INTEGER Reserved;
    union _LARGE_INTEGER Cluster;
    WCHAR FileName[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT {
    ULONG Flags;
    ULONG NumberOfClusters;
    union _LARGE_INTEGER Cluster[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT {
    ULONG Offset;
    ULONG NumberOfMatches;
    ULONG BufferSizeRequired;
};

typedef struct _LPC_CLIENT_DIED_MSG {
    struct _PORT_MESSAGE PortMsg;
    union _LARGE_INTEGER CreateTime;
};

typedef struct _LPC_UNREGISTER_PROCESS_MSG {
    struct _PORT_MESSAGE PortMsg;
    PVOID UniqueProcessId;
};

typedef struct _LUID {
    ULONG LowPart;
    LONG HighPart;
};

typedef struct _LUID_AND_ATTRIBUTES {
    struct _LUID Luid;
    ULONG Attributes;
};

typedef struct _LUNICODE_STRING {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PWCHAR Buffer;
};

typedef struct _LUTF8_STRING {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PUCHAR Buffer;
};

typedef struct _M128A {
    ULONG64 Low;
    LONG64 High;
};

typedef struct _MALLOC_FREE_STRUCT {
    PVOID *pfnAllocate;
    PVOID pfnFree;
};

typedef struct _MANAGE_HOT_PATCH_LOAD_PATCH {
    ULONG Version;
    struct _UNICODE_STRING PatchPath;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
    struct _HOT_PATCH_IMAGE_INFO BaseInfo;
};

typedef struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES {
    ULONG Version;
    PVOID ProcessHandle;
    ULONG PatchCount;
    struct _UNICODE_STRING *PatchPathStrings;
    struct _HOT_PATCH_IMAGE_INFO *BaseInfos;
};

typedef struct _MANAGE_HOT_PATCH_QUERY_PATCHES {
    ULONG Version;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
    ULONG PatchCount;
    struct _UNICODE_STRING *PatchPathStrings;
    struct _HOT_PATCH_IMAGE_INFO *BaseInfos;
};

typedef struct _MANAGE_HOT_PATCH_UNLOAD_PATCH {
    ULONG Version;
    struct _HOT_PATCH_IMAGE_INFO BaseInfo;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
};

typedef struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY {
    ULONG Version : 8;
    ULONG ProcessEnableWriteExceptions : 1;
    ULONG ThreadAllowWrites : 1;
    ULONG Spare : 22;
};

typedef struct _MAT2 {
    struct _FIXED eM11;
    struct _FIXED eM12;
    struct _FIXED eM21;
    struct _FIXED eM22;
};

typedef struct _MCA_EXCEPTION {
    ULONG VersionNumber;
    enum MCA_EXCEPTION_TYPE ExceptionType;
    union _LARGE_INTEGER TimeStamp;
    ULONG ProcessorNumber;
    ULONG Reserved1;
     <unnamed-type-u>;
    union {
         <unnamed-type-Mca>;
        struct {
            UCHAR BankNumber;
            UCHAR Reserved2[7];
            union _MCI_STATS Status;
            union _MCI_ADDR Address;
            ULONG64 Misc;
        } Mca;
         <unnamed-type-Mce>;
        struct {
            ULONG64 Address;
            ULONG64 Type;
        } Mce;
    } u;
    ULONG ExtCnt;
    ULONG Reserved3;
    ULONG64 ExtReg[24];
};

typedef struct _MEMORYSTATUS {
    ULONG dwLength;
    ULONG dwMemoryLoad;
    ULONG64 dwTotalPhys;
    ULONG64 dwAvailPhys;
    ULONG64 dwTotalPageFile;
    ULONG64 dwAvailPageFile;
    ULONG64 dwTotalVirtual;
    ULONG64 dwAvailVirtual;
};

typedef struct _MEMORYSTATUSEX {
    ULONG dwLength;
    ULONG dwMemoryLoad;
    ULONG64 ullTotalPhys;
    ULONG64 ullAvailPhys;
    ULONG64 ullTotalPageFile;
    ULONG64 ullAvailPageFile;
    ULONG64 ullTotalVirtual;
    ULONG64 ullAvailVirtual;
    ULONG64 ullAvailExtendedVirtual;
};

typedef struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG64 RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
};

typedef struct _MEMORY_BASIC_INFORMATION32 {
    ULONG BaseAddress;
    ULONG AllocationBase;
    ULONG AllocationProtect;
    ULONG RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
};

typedef struct _MEMORY_BASIC_INFORMATION64 {
    ULONG64 BaseAddress;
    ULONG64 AllocationBase;
    ULONG AllocationProtect;
    ULONG __alignment1;
    ULONG64 RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
    ULONG __alignment2;
};

typedef struct _MEMORY_COMBINE_INFORMATION {
    PVOID Handle;
    ULONG64 PagesCombined;
};

typedef struct _MEMORY_COMBINE_INFORMATION_EX {
    PVOID Handle;
    ULONG64 PagesCombined;
    ULONG Flags;
};

typedef struct _MEMORY_COMBINE_INFORMATION_EX2 {
    PVOID Handle;
    ULONG64 PagesCombined;
    ULONG Flags;
    PVOID ProcessHandle;
};

typedef struct _MEMORY_ENCLAVE_IMAGE_INFORMATION {
    struct _MEMORY_IMAGE_INFORMATION ImageInfo;
    UCHAR UniqueID[32];
    UCHAR AuthorID[32];
};

typedef struct _MEMORY_EXHAUSTION_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    enum _MEMORY_EXHAUSTION_TYPE Type;
    ULONG64 Value;
};

typedef struct _MEMORY_FRAME_INFORMATION {
    ULONG64 UseDescription : 4;
    ULONG64 ListDescription : 3;
    ULONG64 Cold : 1;
    ULONG64 Pinned : 1;
    ULONG64 DontUse : 48;
    ULONG64 Priority : 3;
    ULONG64 Reserved : 4;
};

typedef struct _MEMORY_IMAGE_INFORMATION {
    PVOID ImageBase;
    ULONG64 SizeOfImage;
    ULONG ImageFlags;
    ULONG ImagePartialMap : 1;
    ULONG ImageNotExecutable : 1;
    ULONG ImageSigningLevel : 4;
    ULONG Reserved : 26;
};

typedef struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION {
    ULONG Flags;
    ULONG NumaNode;
    ULONG Channel;
    ULONG NumberOfNumaNodes;
    ULONG64 ResidentAvailablePages;
    ULONG64 CommittedPages;
    ULONG64 CommitLimit;
    ULONG64 PeakCommitment;
    ULONG64 TotalNumberOfPages;
    ULONG64 AvailablePages;
    ULONG64 ZeroPages;
    ULONG64 FreePages;
    ULONG64 StandbyPages;
    ULONG64 StandbyPageCountByPriority[8];
    ULONG64 RepurposedPagesByPriority[8];
    ULONG64 MaximumCommitLimit;
    ULONG64 DonatedPagesToPartitions;
    ULONG PartitionId;
};

typedef struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION {
    ULONG Flags;
    ULONG NumberOfRanges;
    ULONG64 NumberOfPagesAdded;
    struct _MEMORY_PARTITION_PAGE_RANGE PartitionRanges[1];
};

typedef struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION {
     <unnamed-type-Flags>;
    union {
        ULONG CommitEvents : 1;
        ULONG Spare : 31;
        ULONG AllFlags;
    } Flags;
    ULONG HandleAttributes;
    ULONG DesiredAccess;
    PVOID LowCommitCondition;
    PVOID HighCommitCondition;
    PVOID MaximumCommitCondition;
};

typedef struct _MEMORY_PARTITION_PAGEFILE_INFORMATION {
    struct _UNICODE_STRING PageFileName;
    union _LARGE_INTEGER MinimumSize;
    union _LARGE_INTEGER MaximumSize;
    ULONG Flags;
};

typedef struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION {
    PVOID StopHandle;
    ULONG Flags;
    ULONG64 TotalNumberOfPages;
};

typedef struct _MEMORY_PARTITION_PAGE_RANGE {
    ULONG64 StartPage;
    ULONG64 NumberOfPages;
};

typedef struct _MEMORY_PARTITION_TRANSFER_INFORMATION {
    ULONG64 NumberOfPages;
    ULONG NumaNode;
    ULONG Flags;
};

typedef struct _MEMORY_PRIORITY_INFORMATION {
    ULONG MemoryPriority;
};

typedef struct _MEMORY_RANGE_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NumberOfBytes;
};

typedef struct _MEMORY_REGION_INFORMATION {
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG RegionType;
    ULONG Private : 1;
    ULONG MappedDataFile : 1;
    ULONG MappedImage : 1;
    ULONG MappedPageFile : 1;
    ULONG MappedPhysical : 1;
    ULONG DirectMapped : 1;
    ULONG SoftwareEnclave : 1;
    ULONG PageSize64K : 1;
    ULONG PlaceholderReservation : 1;
    ULONG Reserved : 23;
    ULONG64 RegionSize;
    ULONG64 CommitSize;
};

typedef struct _MEMORY_SCRUB_INFORMATION {
    PVOID Handle;
    ULONG64 PagesScrubbed;
};

typedef struct _MEMORY_SHARED_COMMIT_INFORMATION {
    ULONG64 CommitSize;
};

typedef struct _MEMORY_WORKING_SET_BLOCK {
    ULONG64 Protection : 5;
    ULONG64 ShareCount : 3;
    ULONG64 Shared : 1;
    ULONG64 Node : 3;
    ULONG64 VirtualPage : 52;
};

typedef struct _MEMORY_WORKING_SET_EX_BLOCK {
    ULONG64 Valid : 1;
    ULONG64 ShareCount : 3;
    ULONG64 Win32Protection : 11;
    ULONG64 Shared : 1;
    ULONG64 Node : 6;
    ULONG64 Locked : 1;
    ULONG64 LargePage : 1;
    ULONG64 Priority : 3;
    ULONG64 Reserved : 3;
    ULONG64 SharedOriginal : 1;
    ULONG64 Bad : 1;
    ULONG64 ReservedUlong : 32;
    struct {
        ULONG64 Valid : 1;
        ULONG64 Reserved0 : 14;
        ULONG64 Shared : 1;
        ULONG64 Reserved1 : 5;
        ULONG64 PageTable : 1;
        ULONG64 Location : 2;
        ULONG64 Priority : 3;
        ULONG64 ModifiedList : 1;
        ULONG64 Reserved2 : 2;
        ULONG64 SharedOriginal : 1;
        ULONG64 Bad : 1;
        ULONG64 ReservedUlong : 32;
    } Invalid;
};

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION {
    PVOID VirtualAddress;
     <unnamed-type-u1>;
    union {
        struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
        ULONG64 Long;
    } u1;
};

typedef struct _MEMORY_WORKING_SET_INFORMATION {
    ULONG64 NumberOfEntries;
    struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
};

typedef struct _MEM_ADDRESS_REQUIREMENTS {
    PVOID LowestStartingAddress;
    PVOID HighestEndingAddress;
    ULONG64 Alignment;
};

typedef struct _MENU_EVENT_RECORD {
    ULONG dwCommandId;
};

typedef struct _MESSAGE_RESOURCE_BLOCK {
    ULONG LowId;
    ULONG HighId;
    ULONG OffsetToEntries;
};

typedef struct _MESSAGE_RESOURCE_DATA {
    ULONG NumberOfBlocks;
    struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

typedef struct _MESSAGE_RESOURCE_ENTRY {
    USHORT Length;
    USHORT Flags;
    UCHAR Text[1];
};

typedef struct _MIDL_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[0];
};

typedef struct _MIDL_INTERCEPTION_INFO {
    ULONG Version;
    PUCHAR ProcString;
    PUSHORT ProcFormatOffsetTable;
    ULONG ProcCount;
    PUCHAR TypeString;
};

typedef struct _MIDL_INTERFACE_METHOD_PROPERTIES {
    USHORT MethodCount;
    struct _MIDL_METHOD_PROPERTY_MAP **MethodProperties;
};

typedef struct _MIDL_METHOD_PROPERTY {
    ULONG Id;
    ULONG64 Value;
};

typedef struct _MIDL_METHOD_PROPERTY_MAP {
    ULONG Count;
    struct _MIDL_METHOD_PROPERTY *Properties;
};

typedef struct _MIDL_SERVER_INFO_ {
    struct _MIDL_STUB_DESC *pStubDesc;
    PLONG *DispatchTable;
    PUCHAR ProcString;
    PUSHORT FmtStringOffset;
    PVOID *ThunkTable;
    struct _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
    ULONG64 nCount;
    struct _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

typedef struct _MIDL_STUBLESS_PROXY_INFO {
    struct _MIDL_STUB_DESC *pStubDesc;
    PUCHAR ProcFormatString;
    PUSHORT FormatStringOffset;
    struct _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
    ULONG64 nCount;
    struct _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

typedef struct _MIDL_STUB_DESC {
    PVOID RpcInterfaceInformation;
    PVOID *pfnAllocate;
    PVOID pfnFree;
    union {
        PVOID *pAutoHandle;
        PVOID *pPrimitiveHandle;
        struct __GENERIC_BINDING_INFO *pGenericBindingInfo;
    } IMPLICIT_HANDLE_INFO;
    PVOID *apfnNdrRundownRoutines;
    struct _GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
    PVOID *apfnExprEval;
    struct _XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
    PUCHAR pFormatTypes;
    LONG fCheckBounds;
    ULONG Version;
    struct _MALLOC_FREE_STRUCT *pMallocFreeStruct;
    LONG MIDLVersion;
    struct _COMM_FAULT_OFFSETS *CommFaultOffsets;
    struct _USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
    PVOID *NotifyRoutineTable;
    ULONG64 mFlags;
    struct _NDR_CS_ROUTINES *CsRoutineTables;
    PVOID ProxyServerInfo;
    struct _NDR_EXPR_DESC *pExprInfo;
};

typedef struct _MIDL_STUB_MESSAGE {
    struct _RPC_MESSAGE *RpcMsg;
    PUCHAR Buffer;
    PUCHAR BufferStart;
    PUCHAR BufferEnd;
    PUCHAR BufferMark;
    ULONG BufferLength;
    ULONG MemorySize;
    PUCHAR Memory;
    UCHAR IsClient;
    UCHAR Pad;
    USHORT uFlags2;
    LONG ReuseBuffer;
    struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
    LONG IgnoreEmbeddedPointers;
    PUCHAR PointerBufferMark;
    UCHAR CorrDespIncrement;
    UCHAR uFlags;
    USHORT UniquePtrCount;
    ULONG64 MaxCount;
    ULONG Offset;
    ULONG ActualCount;
    PVOID *pfnAllocate;
    PVOID pfnFree;
    PUCHAR StackTop;
    PUCHAR pPresentedType;
    PUCHAR pTransmitType;
    PVOID SavedHandle;
    struct _MIDL_STUB_DESC *StubDesc;
    struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
    ULONG FullPtrRefId;
    ULONG PointerLength;
    LONG fInDontFree : 1;
    LONG fDontCallFreeInst : 1;
    LONG fUnused1 : 1;
    LONG fHasReturn : 1;
    LONG fHasExtensions : 1;
    LONG fHasNewCorrDesc : 1;
    LONG fIsIn : 1;
    LONG fIsOut : 1;
    LONG fIsOicf : 1;
    LONG fBufferValid : 1;
    LONG fHasMemoryValidateCallback : 1;
    LONG fInFree : 1;
    LONG fNeedMCCP : 1;
    LONG fUnused2 : 3;
    LONG fUnused3 : 16;
    ULONG dwDestContext;
    PVOID pvDestContext;
    struct {
        PVOID pad[2];
        PVOID userContext;
    } **SavedContextHandles;
    LONG ParamNumber;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    struct ARRAY_INFO *pArrayInfo;
    PULONG SizePtrCountArray;
    PULONG SizePtrOffsetArray;
    PULONG SizePtrLengthArray;
    PVOID pArgQueue;
    ULONG dwStubPhase;
    PVOID LowStackMark;
    struct _NDR_ASYNC_MESSAGE *pAsyncMsg;
    struct _NDR_CORRELATION_INFO *pCorrInfo;
    PUCHAR pCorrMemory;
    PVOID pMemoryList;
    LONG64 pCSInfo;
    PUCHAR ConformanceMark;
    PUCHAR VarianceMark;
    LONG64 Unused;
    struct _NDR_PROC_CONTEXT *pContext;
    PVOID ContextHandleHash;
    PVOID pUserMarshalList;
    LONG64 Reserved51_3;
    LONG64 Reserved51_4;
    LONG64 Reserved51_5;
};

typedef struct _MIDL_SYNTAX_INFO {
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    PUCHAR ProcString;
    PUSHORT FmtStringOffset;
    PUCHAR TypeString;
    PVOID aUserMarshalQuadruple;
    struct _MIDL_INTERFACE_METHOD_PROPERTIES *pMethodProperties;
    ULONG64 pReserved2;
};

typedef struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO {
    ULONG Version;
    PUCHAR TypeFormatString;
    USHORT FormatStringSize;
    USHORT TypeOffset;
    struct _MIDL_STUB_DESC *StubDesc;
};

typedef struct _MMPFN_IDENTITY {
     <unnamed-type-u1>;
    union {
        struct _MEMORY_FRAME_INFORMATION e1;
        struct _FILEOFFSET_INFORMATION e2;
        struct _PAGEDIR_INFORMATION e3;
        struct _UNIQUE_PROCESS_INFORMATION e4;
    } u1;
    ULONG64 PageFrameIndex;
     <unnamed-type-u2>;
    union {
         <unnamed-type-e1>;
        struct {
            ULONG64 Image : 1;
            ULONG64 Mismatch : 1;
        } e1;
         <unnamed-type-e2>;
        struct {
            ULONG64 CombinedPage : 1;
        } e2;
        PVOID FileObject;
        PVOID UniqueFileObjectKey;
        PVOID ProtoPteAddress;
        PVOID VirtualAddress;
    } u2;
};

typedef struct _MM_ETW_PAGE_INFO {
    struct _MMPFN_IDENTITY PfnIdentity;
};

typedef struct _MM_ETW_PAGE_INFO_EX {
    struct _MM_ETW_PAGE_INFO PageInfo;
    union _MM_ETW_PAGE_EXTRA_INFO Info;
};

typedef struct _MM_ETW_WORKING_SET_PFN_RUNDOWN {
    ULONG64 ProcessId;
    ULONG64 EntryCount;
    struct _MM_ETW_PAGE_INFO_EX WorkingSetInfo[1];
};

typedef struct _MODEMDEVCAPS {
    ULONG dwActualSize;
    ULONG dwRequiredSize;
    ULONG dwDevSpecificOffset;
    ULONG dwDevSpecificSize;
    ULONG dwModemProviderVersion;
    ULONG dwModemManufacturerOffset;
    ULONG dwModemManufacturerSize;
    ULONG dwModemModelOffset;
    ULONG dwModemModelSize;
    ULONG dwModemVersionOffset;
    ULONG dwModemVersionSize;
    ULONG dwDialOptions;
    ULONG dwCallSetupFailTimer;
    ULONG dwInactivityTimeout;
    ULONG dwSpeakerVolume;
    ULONG dwSpeakerMode;
    ULONG dwModemOptions;
    ULONG dwMaxDTERate;
    ULONG dwMaxDCERate;
    UCHAR abVariablePortion[1];
};

typedef struct _MODEMSETTINGS {
    ULONG dwActualSize;
    ULONG dwRequiredSize;
    ULONG dwDevSpecificOffset;
    ULONG dwDevSpecificSize;
    ULONG dwCallSetupFailTimer;
    ULONG dwInactivityTimeout;
    ULONG dwSpeakerVolume;
    ULONG dwSpeakerMode;
    ULONG dwPreferredModemOptions;
    ULONG dwNegotiatedModemOptions;
    ULONG dwNegotiatedDCERate;
    UCHAR abVariablePortion[1];
};

typedef struct _MOUSE_EVENT_RECORD {
    struct _COORD dwMousePosition;
    ULONG dwButtonState;
    ULONG dwControlKeyState;
    ULONG dwEventFlags;
};

typedef struct _MOVE_FILE_DATA32 {
    ULONG FileHandle;
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER StartingLcn;
    ULONG ClusterCount;
};

typedef struct _MUICCENTRY {
    ULONG lCultureNameOffset;
    ULONG ulCultureID;
    ULONG ulLanguageType;
    struct _MUICCENTRY *pNeutralCulture;
    struct _MUICCENTRY *lBaseLanguageIndices[4];
    LONG lParentLanguageIndices[4];
};

typedef struct _MUICCHEADER {
    ULONG ulMaxStringsSize;
    ULONG ulSizeStrings;
    ULONG ulMaxNumInstalledCultures;
    ULONG ulNumInstalledCultures;
    ULONG ulMaxNumUnverifiedCultures;
    ULONG ulNumUnverifiedCultures;
};

typedef struct _MUILANGCFGLIST {
    ULONG TotalSize;
    USHORT NumLanguages;
    USHORT MaxNumLanguages;
    struct _MUILANGCFGNODE *LanguageConfigs;
};

typedef struct _MUILANGCFGNODE {
    SHORT LangSpec;
    USHORT FallbackTypes;
    USHORT Reserved;
    SHORT FallbackSpecs[3];
};

typedef struct _MUILANGINFO {
    USHORT Flags;
    USHORT Reserved;
    USHORT LangId;
    SHORT LangNameIndex;
    USHORT FallbackTypes;
    SHORT NeutralLangSpec;
    SHORT FallbackSpecs[4];
    SHORT AlternateCodePage[4];
};

typedef struct _MUILANGLIST {
    ULONG TotalSize;
    USHORT NumLanguages;
    USHORT MaxNumLanguages;
    UCHAR bUseUseMachineConfigList;
    struct _MUIREGISTRYINFO *RegInfo;
    struct _MUILANGLISTNODE *Languages;
    ULONG64 ullMask;
    ULONG uConsoleFlag;
    WCHAR Checksum[10];
};

typedef struct _MUILANGLISTNODE {
    USHORT LanguageType;
    USHORT Reserved;
    SHORT LanguageSpec;
};

typedef struct _MUILANGUAGES {
    ULONG TotalSize;
    USHORT MaxNumLanguages;
    USHORT NumLanguages;
    USHORT NumInstalledLanguages;
    struct _MUILANGINFO *LangInfos;
};

typedef struct _MUIREGISTRYINFO {
    ULONG Owned;
    USHORT InstallLanguageFallback[4];
    ULONG Generation;
    ULONG ProcessGeneration;
    struct _MUILANGUAGES *Installed;
    struct _MUISTRINGPOOL *Strings;
    struct _MUILANGCFGLIST *MachineConfig;
    struct _MUILANGCFGLIST *UserConfig;
    struct _MUILANGLIST *MachinePreferred;
    struct _MUILANGLIST *UserPreferred;
    struct _MUILANGLIST *ProcessPreferred;
    struct _MUILANGLIST *MergedUser;
    struct _MUILANGLIST *MergedMachine;
    struct _MUILANGLIST *MergedFallback;
    struct _MUIREGISTRYINFO *PrevRegInfo;
    ULONG MUI_Locked;
    ULONG MUI_SE;
    ULONG MUI_NumberAllowed;
    PWCHAR MUI_AllowedLanguage;
    PWCHAR MUI_InstalledSKU;
    ULONG cbInstalledSKU;
    ULONG cbAllowedLanguage;
    PWCHAR MUI_DisallowedLanguage;
    ULONG cbDisallowedLanguage;
};

typedef struct _MUISTRINGPOOL {
    ULONG TotalSize;
    USHORT MaxNumStrings;
    USHORT NumStrings;
    USHORT MaxNumCharsInPool;
    USHORT NumCharsInPool;
    PSHORT Strings;
    PWCHAR Pool;
};

typedef struct _MULTI_TIME {
    union _LARGE_INTEGER Qpc;
    union _LARGE_INTEGER HostQpc;
    LONG64 SystemTime;
};

typedef struct _MUTANT_BASIC_INFORMATION {
    LONG CurrentCount;
    UCHAR OwnedByCaller;
    UCHAR AbandonedState;
};

typedef struct _MUTANT_OWNER_INFORMATION {
    struct _CLIENT_ID ClientId;
};

typedef struct _MY_XML_NODE_INFO {
    struct _XML_NODE_INFO _XML_NODE_INFO;
    PWCHAR _pwcTagName;
    ULONG _ulBufLen;
};

typedef struct _NCRYPT_CIPHER_PADDING_INFO {
    ULONG cbSize;
    ULONG dwFlags;
    PUCHAR pbIV;
    ULONG cbIV;
    PUCHAR pbOtherInfo;
    ULONG cbOtherInfo;
};

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE {
    struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER Header;
};

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER {
    ULONG Version;
    ULONG KeyUsage;
    ULONG PerBootKey : 1;
    ULONG Reserved : 31;
    ULONG cbAlgName;
    ULONG cbNonce;
    ULONG cbAuthTag;
    ULONG cbWrappingKey;
    ULONG cbIsolatedKey;
};

typedef struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES {
    ULONG Version;
    ULONG Flags;
    ULONG cbPublicKeyBlob;
};

typedef struct _NCRYPT_KEY_ATTEST_PADDING_INFO {
    ULONG magic;
    PUCHAR pbKeyBlob;
    ULONG cbKeyBlob;
    PUCHAR pbKeyAuth;
    ULONG cbKeyAuth;
};

typedef struct _NCRYPT_KEY_BLOB_HEADER {
    ULONG cbSize;
    ULONG dwMagic;
    ULONG cbAlgName;
    ULONG cbKeyData;
};

typedef struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO {
    ULONG magic;
    ULONG pcrMask;
};

typedef struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG pcrAlg;
    ULONG cbSignature;
    ULONG cbQuote;
    ULONG cbPcrs;
};

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS {
    ULONG Version;
    ULONG64 TrustletId;
    ULONG MinSvn;
    ULONG FlagsMask;
    ULONG FlagsExpected;
    ULONG AllowDebugging : 1;
    ULONG Reserved : 31;
};

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG cbSignature;
    ULONG cbReport;
    ULONG cbAttributes;
};

typedef struct _NCryptAlgorithmName {
    PWCHAR pszName;
    ULONG dwClass;
    ULONG dwAlgOperations;
    ULONG dwFlags;
};

typedef struct _NDR64_ARRAY_ELEMENT_INFO {
    ULONG ElementMemSize;
    PVOID Element;
};

typedef struct _NDR64_ARRAY_FLAGS {
    UCHAR HasPointerInfo : 1;
    UCHAR HasElementInfo : 1;
    UCHAR IsMultiDimensional : 1;
    UCHAR IsArrayofStrings : 1;
    UCHAR Reserved1 : 1;
    UCHAR Reserved2 : 1;
    UCHAR Reserved3 : 1;
    UCHAR Reserved4 : 1;
};

typedef struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_ARRAY_FLAGS Flags;
    UCHAR NumberDims;
    ULONG NumberElements;
    PVOID Element;
};

typedef struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_STRUCTURE_FLAGS Flags;
    UCHAR Reserve;
    ULONG MemorySize;
    PVOID OriginalMemberLayout;
    PVOID OriginalPointerLayout;
    PVOID PointerLayout;
};

typedef struct _NDR64_CONFORMANT_STRING_FORMAT {
    struct NDR64_STRING_HEADER_FORMAT Header;
};

typedef struct _NDR64_CONF_ARRAY_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_ARRAY_FLAGS Flags;
    UCHAR Reserved;
    ULONG ElementSize;
    PVOID ConfDescriptor;
};

typedef struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_STRUCTURE_FLAGS Flags;
    UCHAR Dimensions;
    ULONG MemorySize;
    PVOID OriginalMemberLayout;
    PVOID OriginalPointerLayout;
    PVOID PointerLayout;
    PVOID ConfArrayDescription;
};

typedef struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_STRUCTURE_FLAGS Flags;
    UCHAR Reserve;
    ULONG MemorySize;
    PVOID ArrayDescription;
};

typedef struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_ARRAY_FLAGS Flags;
    UCHAR Reserved;
    ULONG ElementSize;
    PVOID ConfDescriptor;
    PVOID VarDescriptor;
};

typedef struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT {
    struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT FixedArrayFormat;
    PVOID ConfDescription;
    PVOID VarDescription;
    PVOID OffsetDescription;
};

typedef struct _NDR64_CONSTANT_IID_FORMAT {
    UCHAR FormatCode;
    UCHAR Flags;
    USHORT Reserved;
    struct _GUID Guid;
};

typedef struct _NDR64_EMBEDDED_COMPLEX_FORMAT {
    UCHAR FormatCode;
    UCHAR Reserve1;
    USHORT Reserve2;
    PVOID Type;
};

typedef struct _NDR64_ENCAPSULATED_UNION {
    UCHAR FormatCode;
    UCHAR Alignment;
    UCHAR Flags;
    UCHAR SwitchType;
    ULONG MemoryOffset;
    ULONG MemorySize;
    ULONG Reserved;
};

typedef struct _NDR64_EXPR_CONST64 {
    UCHAR ExprType;
    UCHAR Reserved;
    USHORT Reserved1;
    LONG64 ConstValue;
};

typedef struct _NDR64_EXPR_NOOP {
    UCHAR ExprType;
    UCHAR Size;
    USHORT Reserved;
};

typedef struct _NDR64_EXPR_OPERATOR {
    UCHAR ExprType;
    UCHAR Operator;
    UCHAR CastType;
    UCHAR Reserved;
};

typedef struct _NDR64_EXPR_VAR {
    UCHAR ExprType;
    UCHAR VarType;
    USHORT Reserved;
    ULONG Offset;
};

typedef struct _NDR64_FIX_ARRAY_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_ARRAY_FLAGS Flags;
    UCHAR Reserved;
    ULONG TotalSize;
};

typedef struct _NDR64_MEMPAD_FORMAT {
    UCHAR FormatCode;
    UCHAR Reserve1;
    USHORT MemPad;
    ULONG Reserved2;
};

typedef struct _NDR64_NON_ENCAPSULATED_UNION {
    UCHAR FormatCode;
    UCHAR Alignment;
    UCHAR Flags;
    UCHAR SwitchType;
    ULONG MemorySize;
    PVOID Switch;
    ULONG Reserved;
};

typedef struct _NDR64_NO_REPEAT_FORMAT {
    UCHAR FormatCode;
    UCHAR Flags;
    USHORT Reserved1;
    ULONG Reserved2;
};

typedef struct _NDR64_PARAM_FLAGS {
    USHORT MustSize : 1;
    USHORT MustFree : 1;
    USHORT IsPipe : 1;
    USHORT IsIn : 1;
    USHORT IsOut : 1;
    USHORT IsReturn : 1;
    USHORT IsBasetype : 1;
    USHORT IsByValue : 1;
    USHORT IsSimpleRef : 1;
    USHORT IsDontCallFreeInst : 1;
    USHORT SaveForAsyncFinish : 1;
    USHORT IsPartialIgnore : 1;
    USHORT IsForceAllocate : 1;
    USHORT Reserved : 2;
    USHORT UseCache : 1;
};

typedef struct _NDR64_PARAM_FORMAT {
    PVOID Type;
    struct _NDR64_PARAM_FLAGS Attributes;
    USHORT Reserved;
    ULONG StackOffset;
};

typedef struct _NDR64_POINTER_FORMAT {
    UCHAR FormatCode;
    UCHAR Flags;
    USHORT Reserved;
    PVOID Pointee;
};

typedef struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT {
    ULONG Offset;
    ULONG Reserved;
};

typedef struct _NDR64_POINTER_REPEAT_FLAGS {
    UCHAR SetCorrMark : 1;
    UCHAR Reserved : 7;
};

typedef struct _NDR64_PROC_FORMAT {
    ULONG Flags;
    ULONG StackSize;
    ULONG ConstantClientBufferSize;
    ULONG ConstantServerBufferSize;
    USHORT RpcFlags;
    USHORT FloatDoubleMask;
    USHORT NumberOfParams;
    USHORT ExtensionSize;
};

typedef struct _NDR64_REPEAT_FORMAT {
    UCHAR FormatCode;
    struct _NDR64_POINTER_REPEAT_FLAGS Flags;
    USHORT Reserved;
    ULONG Increment;
    ULONG OffsetToArray;
    ULONG NumberOfPointers;
};

typedef struct _NDR64_SIMPLE_MEMBER_FORMAT {
    UCHAR FormatCode;
    UCHAR Reserved1;
    USHORT Reserved2;
    ULONG Reserved3;
};

typedef struct _NDR64_SIMPLE_REGION_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    USHORT RegionSize;
    ULONG Reserved;
};

typedef struct _NDR64_STRING_FLAGS {
    UCHAR IsSized : 1;
    UCHAR IsRanged : 1;
    UCHAR Reserved3 : 1;
    UCHAR Reserved4 : 1;
    UCHAR Reserved5 : 1;
    UCHAR Reserved6 : 1;
    UCHAR Reserved7 : 1;
    UCHAR Reserved8 : 1;
};

typedef struct _NDR64_STRUCTURE_FLAGS {
    UCHAR HasPointerInfo : 1;
    UCHAR HasMemberInfo : 1;
    UCHAR HasConfArray : 1;
    UCHAR HasOrigPointerInfo : 1;
    UCHAR HasOrigMemberInfo : 1;
    UCHAR Reserved1 : 1;
    UCHAR Reserved2 : 1;
    UCHAR Reserved3 : 1;
};

typedef struct _NDR64_STRUCTURE_HEADER_FORMAT {
    UCHAR FormatCode;
    UCHAR Alignment;
    struct _NDR64_STRUCTURE_FLAGS Flags;
    UCHAR Reserve;
    ULONG MemorySize;
};

typedef struct _NDR64_UNION_ARM {
    LONG64 CaseValue;
    PVOID Type;
    ULONG Reserved;
};

typedef struct _NDR64_UNION_ARM_SELECTOR {
    UCHAR Reserved1;
    UCHAR Alignment;
    USHORT Reserved2;
    ULONG Arms;
};

typedef struct _NDR64_USER_MARSHAL_FORMAT {
    UCHAR FormatCode;
    UCHAR Flags;
    USHORT RoutineIndex;
    USHORT TransmittedTypeWireAlignment;
    USHORT MemoryAlignment;
    ULONG UserTypeMemorySize;
    ULONG TransmittedTypeBufferSize;
    PVOID TransmittedType;
};

typedef struct _NDR_ASYNC_MESSAGE {
};

typedef struct _NDR_CORRELATION_INFO {
};

typedef struct _NDR_CS_ROUTINES {
    struct _NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
    PVOID *pTagGettingRoutines;
};

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES {
    PVOID pfnNetSize;
    PVOID pfnToNetCs;
    PVOID pfnLocalSize;
    PVOID pfnFromNetCs;
};

typedef struct _NDR_EXPR_DESC {
    PUSHORT pOffset;
    PUCHAR pFormatExpr;
};

typedef struct _NDR_PROC_CONTEXT {
};

typedef struct _NDR_USER_MARSHAL_INFO {
    ULONG InformationLevel;
    struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 {
    PVOID Buffer;
    ULONG BufferSize;
    PVOID *pfnAllocate;
    PVOID pfnFree;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    ULONG64 Reserved[5];
};

typedef struct _NETCONNECTINFOSTRUCT {
    ULONG cbStructure;
    ULONG dwFlags;
    ULONG dwSpeed;
    ULONG dwDelay;
    ULONG dwOptDataSize;
};

typedef struct _NETINFOSTRUCT {
    ULONG cbStructure;
    ULONG dwProviderVersion;
    ULONG dwStatus;
    ULONG dwCharacteristics;
    ULONG64 dwHandle;
    USHORT wNetType;
    ULONG dwPrinters;
    ULONG dwDrives;
};

typedef struct _NETRESOURCEA {
    ULONG dwScope;
    ULONG dwType;
    ULONG dwDisplayType;
    ULONG dwUsage;
    PCHAR lpLocalName;
    PCHAR lpRemoteName;
    PCHAR lpComment;
    PCHAR lpProvider;
};

typedef struct _NETRESOURCEW {
    ULONG dwScope;
    ULONG dwType;
    ULONG dwDisplayType;
    ULONG dwUsage;
    PWCHAR lpLocalName;
    PWCHAR lpRemoteName;
    PWCHAR lpComment;
    PWCHAR lpProvider;
};

typedef struct _NETWORK_APP_INSTANCE_EA {
    struct _GUID AppInstanceID;
    ULONG CsvFlags;
};

typedef struct _NLSTABLEINFO {
    struct _CPTABLEINFO OemTableInfo;
    struct _CPTABLEINFO AnsiTableInfo;
    PWCHAR UpperCaseTable;
    PWCHAR LowerCaseTable;
};

typedef struct _NON_PAGED_DEBUG_INFO {
    USHORT Signature;
    USHORT Flags;
    ULONG Size;
    USHORT Machine;
    USHORT Characteristics;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    ULONG SizeOfImage;
    ULONG64 ImageBase;
};

typedef struct _NTFS_STATISTICS {
    ULONG LogFileFullExceptions;
    ULONG OtherExceptions;
    ULONG MftReads;
    ULONG MftReadBytes;
    ULONG MftWrites;
    ULONG MftWriteBytes;
     <unnamed-type-MftWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } MftWritesUserLevel;
    USHORT MftWritesFlushForLogFileFull;
    USHORT MftWritesLazyWriter;
    USHORT MftWritesUserRequest;
    ULONG Mft2Writes;
    ULONG Mft2WriteBytes;
     <unnamed-type-Mft2WritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } Mft2WritesUserLevel;
    USHORT Mft2WritesFlushForLogFileFull;
    USHORT Mft2WritesLazyWriter;
    USHORT Mft2WritesUserRequest;
    ULONG RootIndexReads;
    ULONG RootIndexReadBytes;
    ULONG RootIndexWrites;
    ULONG RootIndexWriteBytes;
    ULONG BitmapReads;
    ULONG BitmapReadBytes;
    ULONG BitmapWrites;
    ULONG BitmapWriteBytes;
    USHORT BitmapWritesFlushForLogFileFull;
    USHORT BitmapWritesLazyWriter;
    USHORT BitmapWritesUserRequest;
     <unnamed-type-BitmapWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
    } BitmapWritesUserLevel;
    ULONG MftBitmapReads;
    ULONG MftBitmapReadBytes;
    ULONG MftBitmapWrites;
    ULONG MftBitmapWriteBytes;
    USHORT MftBitmapWritesFlushForLogFileFull;
    USHORT MftBitmapWritesLazyWriter;
    USHORT MftBitmapWritesUserRequest;
     <unnamed-type-MftBitmapWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } MftBitmapWritesUserLevel;
    ULONG UserIndexReads;
    ULONG UserIndexReadBytes;
    ULONG UserIndexWrites;
    ULONG UserIndexWriteBytes;
    ULONG LogFileReads;
    ULONG LogFileReadBytes;
    ULONG LogFileWrites;
    ULONG LogFileWriteBytes;
     <unnamed-type-Allocate>;
    struct {
        ULONG Calls;
        ULONG Clusters;
        ULONG Hints;
        ULONG RunsReturned;
        ULONG HintsHonored;
        ULONG HintsClusters;
        ULONG Cache;
        ULONG CacheClusters;
        ULONG CacheMiss;
        ULONG CacheMissClusters;
    } Allocate;
    ULONG DiskResourcesExhausted;
};

typedef struct _NTFS_STATISTICS_EX {
    ULONG LogFileFullExceptions;
    ULONG OtherExceptions;
    ULONG64 MftReads;
    ULONG64 MftReadBytes;
    ULONG64 MftWrites;
    ULONG64 MftWriteBytes;
     <unnamed-type-MftWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } MftWritesUserLevel;
    ULONG MftWritesFlushForLogFileFull;
    ULONG MftWritesLazyWriter;
    ULONG MftWritesUserRequest;
    ULONG64 Mft2Writes;
    ULONG64 Mft2WriteBytes;
     <unnamed-type-Mft2WritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } Mft2WritesUserLevel;
    ULONG Mft2WritesFlushForLogFileFull;
    ULONG Mft2WritesLazyWriter;
    ULONG Mft2WritesUserRequest;
    ULONG64 RootIndexReads;
    ULONG64 RootIndexReadBytes;
    ULONG64 RootIndexWrites;
    ULONG64 RootIndexWriteBytes;
    ULONG64 BitmapReads;
    ULONG64 BitmapReadBytes;
    ULONG64 BitmapWrites;
    ULONG64 BitmapWriteBytes;
    ULONG BitmapWritesFlushForLogFileFull;
    ULONG BitmapWritesLazyWriter;
    ULONG BitmapWritesUserRequest;
     <unnamed-type-BitmapWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } BitmapWritesUserLevel;
    ULONG64 MftBitmapReads;
    ULONG64 MftBitmapReadBytes;
    ULONG64 MftBitmapWrites;
    ULONG64 MftBitmapWriteBytes;
    ULONG MftBitmapWritesFlushForLogFileFull;
    ULONG MftBitmapWritesLazyWriter;
    ULONG MftBitmapWritesUserRequest;
     <unnamed-type-MftBitmapWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } MftBitmapWritesUserLevel;
    ULONG64 UserIndexReads;
    ULONG64 UserIndexReadBytes;
    ULONG64 UserIndexWrites;
    ULONG64 UserIndexWriteBytes;
    ULONG64 LogFileReads;
    ULONG64 LogFileReadBytes;
    ULONG64 LogFileWrites;
    ULONG64 LogFileWriteBytes;
     <unnamed-type-Allocate>;
    struct {
        ULONG Calls;
        ULONG RunsReturned;
        ULONG Hints;
        ULONG HintsHonored;
        ULONG Cache;
        ULONG CacheMiss;
        ULONG64 Clusters;
        ULONG64 HintsClusters;
        ULONG64 CacheClusters;
        ULONG64 CacheMissClusters;
    } Allocate;
    ULONG DiskResourcesExhausted;
    ULONG64 VolumeTrimCount;
    ULONG64 VolumeTrimTime;
    ULONG64 VolumeTrimByteCount;
    ULONG64 FileLevelTrimCount;
    ULONG64 FileLevelTrimTime;
    ULONG64 FileLevelTrimByteCount;
    ULONG64 VolumeTrimSkippedCount;
    ULONG64 VolumeTrimSkippedByteCount;
    ULONG64 NtfsFillStatInfoFromMftRecordCalledCount;
    ULONG64 NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
    ULONG64 NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
};

typedef struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;
    PVOID FiberData;
    ULONG Version;
    PVOID ArbitraryUserPointer;
    struct _NT_TIB *Self;
};

typedef struct _NT_TIB32 {
    ULONG ExceptionList;
    ULONG StackBase;
    ULONG StackLimit;
    ULONG SubSystemTib;
    ULONG FiberData;
    ULONG Version;
    ULONG ArbitraryUserPointer;
    ULONG Self;
};

typedef struct _NT_TIB64 {
    ULONG64 ExceptionList;
    ULONG64 StackBase;
    ULONG64 StackLimit;
    ULONG64 SubSystemTib;
    ULONG64 FiberData;
    ULONG Version;
    ULONG64 ArbitraryUserPointer;
    ULONG64 Self;
};

typedef struct _NUMA_NODE_RELATIONSHIP {
    ULONG NodeNumber;
    UCHAR Reserved[20];
    struct _GROUP_AFFINITY GroupMask;
};

typedef struct _NV_MEMORY_RANGE {
    PVOID BaseAddress;
    ULONG64 Length;
};

typedef struct _OBJECTID {
    struct _GUID Lineage;
    ULONG Uniquifier;
};

typedef struct _OBJECT_ATTRIBUTES {
    ULONG Length;
    PVOID RootDirectory;
    struct _UNICODE_STRING *ObjectName;
    ULONG Attributes;
    PVOID SecurityDescriptor;
    PVOID SecurityQualityOfService;
};

typedef struct _OBJECT_ATTRIBUTES32 {
    ULONG Length;
    ULONG RootDirectory;
    ULONG ObjectName;
    ULONG Attributes;
    ULONG SecurityDescriptor;
    ULONG SecurityQualityOfService;
};

typedef struct _OBJECT_ATTRIBUTES64 {
    ULONG Length;
    ULONG64 RootDirectory;
    ULONG64 ObjectName;
    ULONG Attributes;
    ULONG64 SecurityDescriptor;
    ULONG64 SecurityQualityOfService;
};

typedef struct _OBJECT_BASIC_INFORMATION {
    ULONG Attributes;
    ULONG GrantedAccess;
    ULONG HandleCount;
    ULONG PointerCount;
    ULONG PagedPoolCharge;
    ULONG NonPagedPoolCharge;
    ULONG Reserved[3];
    ULONG NameInfoSize;
    ULONG TypeInfoSize;
    ULONG SecurityDescriptorSize;
    union _LARGE_INTEGER CreationTime;
};

typedef struct _OBJECT_DIRECTORY_INFORMATION {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING TypeName;
};

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION {
    UCHAR Inherit;
    UCHAR ProtectFromClose;
};

typedef struct _OBJECT_NAME_INFORMATION {
    struct _UNICODE_STRING Name;
};

typedef struct _OBJECT_TYPES_INFORMATION {
    ULONG NumberOfTypes;
};

typedef struct _OBJECT_TYPE_INFORMATION {
    struct _UNICODE_STRING TypeName;
    ULONG TotalNumberOfObjects;
    ULONG TotalNumberOfHandles;
    ULONG TotalPagedPoolUsage;
    ULONG TotalNonPagedPoolUsage;
    ULONG TotalNamePoolUsage;
    ULONG TotalHandleTableUsage;
    ULONG HighWaterNumberOfObjects;
    ULONG HighWaterNumberOfHandles;
    ULONG HighWaterPagedPoolUsage;
    ULONG HighWaterNonPagedPoolUsage;
    ULONG HighWaterNamePoolUsage;
    ULONG HighWaterHandleTableUsage;
    ULONG InvalidAttributes;
    struct _GENERIC_MAPPING GenericMapping;
    ULONG ValidAccessMask;
    UCHAR SecurityRequired;
    UCHAR MaintainHandleCount;
    UCHAR TypeIndex;
    CHAR ReservedByte;
    ULONG PoolType;
    ULONG DefaultPagedPoolCharge;
    ULONG DefaultNonPagedPoolCharge;
};

typedef struct _OBJECT_TYPE_LIST {
    USHORT Level;
    USHORT Sbz;
    struct _GUID *ObjectType;
};

typedef struct _OCSP_BASIC_RESPONSE_ENTRY {
    struct _OCSP_CERT_ID CertId;
    ULONG dwCertStatus;
    struct _OCSP_BASIC_REVOKED_INFO *pRevokedInfo;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_BASIC_RESPONSE_INFO {
    ULONG dwVersion;
    ULONG dwResponderIdChoice;
    struct _CRYPTOAPI_BLOB ByNameResponderId;
    struct _CRYPTOAPI_BLOB ByKeyResponderId;
    struct _FILETIME ProducedAt;
    ULONG cResponseEntry;
    struct _OCSP_BASIC_RESPONSE_ENTRY *rgResponseEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_BASIC_REVOKED_INFO {
    struct _FILETIME RevocationDate;
    ULONG dwCrlReasonCode;
};

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _OCSP_SIGNATURE_INFO SignatureInfo;
};

typedef struct _OCSP_CERT_ID {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB IssuerNameHash;
    struct _CRYPTOAPI_BLOB IssuerKeyHash;
    struct _CRYPTOAPI_BLOB SerialNumber;
};

typedef struct _OCSP_REQUEST_ENTRY {
    struct _OCSP_CERT_ID CertId;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_REQUEST_INFO {
    ULONG dwVersion;
    struct _CERT_ALT_NAME_ENTRY *pRequestorName;
    ULONG cRequestEntry;
    struct _OCSP_REQUEST_ENTRY *rgRequestEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_RESPONSE_INFO {
    ULONG dwStatus;
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _OCSP_SIGNATURE_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPT_BIT_BLOB Signature;
    ULONG cCertEncoded;
    struct _CRYPTOAPI_BLOB *rgCertEncoded;
};

typedef struct _OCSP_SIGNED_REQUEST_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _OCSP_SIGNATURE_INFO *pOptionalSignatureInfo;
};

typedef struct _OFSTRUCT {
    UCHAR cBytes;
    UCHAR fFixedDisk;
    USHORT nErrCode;
    USHORT Reserved1;
    USHORT Reserved2;
    CHAR szPathName[128];
};

typedef struct _OLESTREAM {
    struct _OLESTREAMVTBL *lpstbl;
};

typedef struct _OLESTREAMVTBL {
    PULONG Get;
    PULONG Put;
};

typedef struct _OPERATION_END_PARAMETERS {
    ULONG Version;
    ULONG OperationId;
    ULONG Flags;
};

typedef struct _OPERATION_START_PARAMETERS {
    ULONG Version;
    ULONG OperationId;
    ULONG Flags;
};

typedef struct _OSVERSIONINFOA {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef struct _OSVERSIONINFOEX2A {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
    ULONG wSuiteMaskEx;
    ULONG wReserved2;
};

typedef struct _OSVERSIONINFOEX2W {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
    ULONG wSuiteMaskEx;
    ULONG wReserved2;
};

typedef struct _OSVERSIONINFOEXA {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
};

typedef struct _OSVERSIONINFOEXW {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
};

typedef struct _OSVERSIONINFOW {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
};

typedef struct _OUTLINETEXTMETRICA {
    ULONG otmSize;
    struct tagTEXTMETRICA otmTextMetrics;
    UCHAR otmFiller;
    struct tagPANOSE otmPanoseNumber;
    ULONG otmfsSelection;
    ULONG otmfsType;
    LONG otmsCharSlopeRise;
    LONG otmsCharSlopeRun;
    LONG otmItalicAngle;
    ULONG otmEMSquare;
    LONG otmAscent;
    LONG otmDescent;
    ULONG otmLineGap;
    ULONG otmsCapEmHeight;
    ULONG otmsXHeight;
    struct tagRECT otmrcFontBox;
    LONG otmMacAscent;
    LONG otmMacDescent;
    ULONG otmMacLineGap;
    ULONG otmusMinimumPPEM;
    struct tagPOINT otmptSubscriptSize;
    struct tagPOINT otmptSubscriptOffset;
    struct tagPOINT otmptSuperscriptSize;
    struct tagPOINT otmptSuperscriptOffset;
    ULONG otmsStrikeoutSize;
    LONG otmsStrikeoutPosition;
    LONG otmsUnderscoreSize;
    LONG otmsUnderscorePosition;
    PCHAR otmpFamilyName;
    PCHAR otmpFaceName;
    PCHAR otmpStyleName;
    PCHAR otmpFullName;
};

typedef struct _OUTLINETEXTMETRICW {
    ULONG otmSize;
    struct tagTEXTMETRICW otmTextMetrics;
    UCHAR otmFiller;
    struct tagPANOSE otmPanoseNumber;
    ULONG otmfsSelection;
    ULONG otmfsType;
    LONG otmsCharSlopeRise;
    LONG otmsCharSlopeRun;
    LONG otmItalicAngle;
    ULONG otmEMSquare;
    LONG otmAscent;
    LONG otmDescent;
    ULONG otmLineGap;
    ULONG otmsCapEmHeight;
    ULONG otmsXHeight;
    struct tagRECT otmrcFontBox;
    LONG otmMacAscent;
    LONG otmMacDescent;
    ULONG otmMacLineGap;
    ULONG otmusMinimumPPEM;
    struct tagPOINT otmptSubscriptSize;
    struct tagPOINT otmptSubscriptOffset;
    struct tagPOINT otmptSuperscriptSize;
    struct tagPOINT otmptSuperscriptOffset;
    ULONG otmsStrikeoutSize;
    LONG otmsStrikeoutPosition;
    LONG otmsUnderscoreSize;
    LONG otmsUnderscorePosition;
    PCHAR otmpFamilyName;
    PCHAR otmpFaceName;
    PCHAR otmpStyleName;
    PCHAR otmpFullName;
};

typedef struct _OUTPUT_DEBUG_STRING_INFO {
    PCHAR lpDebugStringData;
    USHORT fUnicode;
    USHORT nDebugStringLength;
};

typedef struct _OVERLAPPED {
    ULONG64 Internal;
    ULONG64 InternalHigh;
    ULONG Offset;
    ULONG OffsetHigh;
    PVOID Pointer;
    PVOID hEvent;
};

typedef struct _OVERLAPPED_ENTRY {
    ULONG64 lpCompletionKey;
    struct _OVERLAPPED *lpOverlapped;
    ULONG64 Internal;
    ULONG dwNumberOfBytesTransferred;
};

typedef struct _PACKEDEVENTINFO {
    ULONG ulSize;
    ULONG ulNumEventsForLogFile;
    ULONG ulOffsets[0];
};

typedef struct _PAGEDIR_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 PageDirectoryBase : 48;
    ULONG64 Reserved : 7;
};

typedef struct _PAGE_PRIORITY_INFORMATION {
    ULONG PagePriority;
};

typedef struct _PARSE_MESSAGE_CONTEXT {
    ULONG fFlags;
    ULONG cwSavColumn;
    ULONG64 iwSrc;
    ULONG64 iwDst;
    ULONG64 iwDstSpace;
    PCHAR lpvArgStart;
};

typedef struct _PATHNAME_BUFFER {
    ULONG PathNameLength;
    WCHAR Name[1];
};

typedef struct _PEB {
    UCHAR InheritedAddressSpace;
    UCHAR ReadImageFileExecOptions;
    UCHAR BeingDebugged;
    UCHAR BitField;
    UCHAR ImageUsesLargePages : 1;
    UCHAR IsProtectedProcess : 1;
    UCHAR IsImageDynamicallyRelocated : 1;
    UCHAR SkipPatchingUser32Forwarders : 1;
    UCHAR IsPackagedProcess : 1;
    UCHAR IsAppContainer : 1;
    UCHAR IsProtectedProcessLight : 1;
    UCHAR IsLongPathAwareProcess : 1;
    UCHAR Padding0[4];
    PVOID Mutant;
    PVOID ImageBaseAddress;
    struct _PEB_LDR_DATA *Ldr;
    struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
    PVOID SubSystemData;
    PVOID ProcessHeap;
    struct _RTL_CRITICAL_SECTION *FastPebLock;
    union _SLIST_HEADER *AtlThunkSListPtr;
    PVOID IFEOKey;
    ULONG CrossProcessFlags;
    ULONG ProcessInJob : 1;
    ULONG ProcessInitializing : 1;
    ULONG ProcessUsingVEH : 1;
    ULONG ProcessUsingVCH : 1;
    ULONG ProcessUsingFTH : 1;
    ULONG ProcessPreviouslyThrottled : 1;
    ULONG ProcessCurrentlyThrottled : 1;
    ULONG ProcessImagesHotPatched : 1;
    ULONG ReservedBits0 : 24;
    UCHAR Padding1[4];
    PVOID KernelCallbackTable;
    PVOID UserSharedInfoPtr;
    ULONG SystemReserved;
    ULONG AtlThunkSListPtr32;
    PVOID ApiSetMap;
    ULONG TlsExpansionCounter;
    UCHAR Padding2[4];
    PVOID TlsBitmap;
    ULONG TlsBitmapBits[2];
    PVOID ReadOnlySharedMemoryBase;
    PVOID SharedData;
    PVOID *ReadOnlyStaticServerData;
    PVOID AnsiCodePageData;
    PVOID OemCodePageData;
    PVOID UnicodeCaseTableData;
    ULONG NumberOfProcessors;
    ULONG NtGlobalFlag;
    union _LARGE_INTEGER CriticalSectionTimeout;
    ULONG64 HeapSegmentReserve;
    ULONG64 HeapSegmentCommit;
    ULONG64 HeapDeCommitTotalFreeThreshold;
    ULONG64 HeapDeCommitFreeBlockThreshold;
    ULONG NumberOfHeaps;
    ULONG MaximumNumberOfHeaps;
    PVOID *ProcessHeaps;
    PVOID GdiSharedHandleTable;
    PVOID ProcessStarterHelper;
    ULONG GdiDCAttributeList;
    UCHAR Padding3[4];
    struct _RTL_CRITICAL_SECTION *LoaderLock;
    ULONG OSMajorVersion;
    ULONG OSMinorVersion;
    USHORT OSBuildNumber;
    USHORT OSCSDVersion;
    ULONG OSPlatformId;
    ULONG ImageSubsystem;
    ULONG ImageSubsystemMajorVersion;
    ULONG ImageSubsystemMinorVersion;
    UCHAR Padding4[4];
    ULONG64 ActiveProcessAffinityMask;
    ULONG GdiHandleBuffer[60];
    PVOID PostProcessInitRoutine;
    PVOID TlsExpansionBitmap;
    ULONG TlsExpansionBitmapBits[32];
    ULONG SessionId;
    UCHAR Padding5[4];
    union _ULARGE_INTEGER AppCompatFlags;
    union _ULARGE_INTEGER AppCompatFlagsUser;
    PVOID pShimData;
    PVOID AppCompatInfo;
    struct _UNICODE_STRING CSDVersion;
    struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
    struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
    struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
    struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
    ULONG64 MinimumStackCommit;
    struct _FLS_CALLBACK_INFO *FlsCallback;
    struct _LIST_ENTRY FlsListHead;
    PVOID FlsBitmap;
    ULONG FlsBitmapBits[4];
    ULONG FlsHighIndex;
    PVOID WerRegistrationData;
    PVOID WerShipAssertPtr;
    PVOID pUnused;
    PVOID pImageHeaderHash;
    ULONG TracingFlags;
    ULONG HeapTracingEnabled : 1;
    ULONG CritSecTracingEnabled : 1;
    ULONG LibLoaderTracingEnabled : 1;
    ULONG SpareTracingBits : 29;
    UCHAR Padding6[4];
    ULONG64 CsrServerReadOnlySharedMemoryBase;
    ULONG64 TppWorkerpListLock;
    struct _LIST_ENTRY TppWorkerpList;
    PVOID WaitOnAddressHashTable[128];
    PVOID TelemetryCoverageHeader;
    ULONG CloudFileFlags;
    ULONG CloudFileDiagFlags;
    CHAR PlaceholderCompatibilityMode;
    CHAR PlaceholderCompatibilityModeReserved[7];
    struct _LEAP_SECOND_DATA *LeapSecondData;
    ULONG LeapSecondFlags;
    ULONG SixtySecondEnabled : 1;
    ULONG Reserved : 31;
    ULONG NtGlobalFlag2;
    VOID _PEB;
    VOID _PEB;
    struct _PEB *operator=;
    struct _PEB *operator=;
};

typedef struct _PEBS_DS_SAVE_AREA {
    ULONG64 BtsBufferBase;
    ULONG64 BtsIndex;
    ULONG64 BtsAbsoluteMaximum;
    ULONG64 BtsInterruptThreshold;
    ULONG64 PebsBufferBase;
    ULONG64 PebsIndex;
    ULONG64 PebsAbsoluteMaximum;
    ULONG64 PebsInterruptThreshold;
    ULONG64 PebsCounterReset0;
    ULONG64 PebsCounterReset1;
    ULONG64 PebsCounterReset2;
    ULONG64 PebsCounterReset3;
};

typedef struct _PEB_LDR_DATA {
    ULONG Length;
    UCHAR Initialized;
    PVOID SsHandle;
    struct _LIST_ENTRY InLoadOrderModuleList;
    struct _LIST_ENTRY InMemoryOrderModuleList;
    struct _LIST_ENTRY InInitializationOrderModuleList;
    PVOID EntryInProgress;
    UCHAR ShutdownInProgress;
    PVOID ShutdownThreadId;
};

typedef struct _PERFORMANCE_DATA {
    USHORT Size;
    UCHAR Version;
    UCHAR HwCountersCount;
    ULONG ContextSwitchCount;
    ULONG64 WaitReasonBitMap;
    ULONG64 CycleTime;
    ULONG RetryCount;
    ULONG Reserved;
    struct _HARDWARE_COUNTER_DATA HwCounters[16];
};

typedef struct _PHYSICAL_CHANNEL_RUN {
    ULONG NodeNumber;
    ULONG ChannelNumber;
    ULONG64 BasePage;
    ULONG64 PageCount;
    ULONG64 Flags;
};

typedef struct _PKCS12_PBES2_EXPORT_PARAMS {
    ULONG dwSize;
    PVOID hNcryptDescriptor;
    PWCHAR pwszPbes2Alg;
};

typedef struct _PLEX_READ_DATA_REQUEST {
    union _LARGE_INTEGER ByteOffset;
    ULONG ByteLength;
    ULONG PlexNumber;
};

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA {
    ULONG Flags;
    ULONG BufferLength;
    PVOID Buffer;
};

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _GUID *InterfaceGuid;
    struct _UNICODE_STRING Reference;
    UCHAR Register;
    PWCHAR SymLink;
    ULONG SymLinkLength;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _CM_RESOURCE_LIST *ResourceList;
    ULONG ResourceListSize;
    struct _PLUGPLAY_CONTROL_CONFLICT_LIST *ConflictBuffer;
    ULONG ConflictBufferSize;
    ULONG Flags;
    LONG Status;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY {
    ULONG DeviceInstance;
    ULONG DeviceFlags;
    ULONG ResourceType;
    ULONG64 ResourceStart;
    ULONG64 ResourceEnd;
    ULONG ResourceFlags;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST {
    ULONG Reserved1;
    ULONG Reserved2;
    ULONG ConflictsCounted;
    ULONG ConflictsListed;
    ULONG RequiredBufferSize;
    struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS {
    ULONG NullDeviceInstance;
    WCHAR DeviceInstanceStrings[1];
};

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG DeviceDepth;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Flags;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED {
    struct _UNICODE_STRING DeviceInterface;
    ULONG Flags;
    UCHAR Enabled;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA {
    struct _UNICODE_STRING DeviceInstance;
    enum _PNP_QUERY_RELATION Operation;
    ULONG BufferLength;
    PWCHAR Buffer;
};

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA {
    ULONG BufferLength;
    PWCHAR Buffer;
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA {
    struct _UNICODE_STRING SymbolicLinkName;
    struct _GUID *AliasClassGuid;
    PWCHAR AliasSymbolicLinkName;
    ULONG AliasSymbolicLinkNameLength;
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _GUID *InterfaceGuid;
    PWCHAR InterfaceList;
    ULONG InterfaceListSize;
    ULONG Flags;
};

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA {
    struct _UNICODE_STRING ServiceName;
    PWCHAR DeviceInstance;
    ULONG DeviceInstanceLength;
};

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG PropertyType;
    PVOID Buffer;
    ULONG BufferSize;
};

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Flags;
    enum _PNP_VETO_TYPE VetoType;
    PWCHAR VetoName;
    ULONG VetoNameLength;
};

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA {
    struct _UNICODE_STRING TargetDeviceInstance;
    ULONG Relation;
    PWCHAR RelatedDeviceInstance;
    ULONG RelatedDeviceInstanceLength;
};

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA {
    ULONG DeviceInstanceLength;
    PWCHAR DeviceInstance;
};

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Operation;
    ULONG DeviceStatus;
    ULONG DeviceProblem;
    ULONG Flags;
    LONG ProblemStatus;
};

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA {
    PVOID UserFileHandle;
    LONG Status;
    ULONG DeviceInstanceLen;
    PWCHAR DeviceInstance;
};

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA {
    ULONG Response;
    enum _PNP_VETO_TYPE VetoType;
    PWCHAR VetoName;
    ULONG VetoNameLength;
};

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION {
    struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
    PVOID FileObject;
    LONG NameBufferOffset;
    UCHAR CustomDataBuffer[1];
};

typedef struct _PLUGPLAY_EVENT_BLOCK {
    struct _GUID EventGuid;
    enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
    PULONG Result;
    ULONG Flags;
    ULONG TotalSize;
    PVOID DeviceObject;
     <unnamed-type-u>;
    union {
         <unnamed-type-DeviceClass>;
        struct {
            struct _GUID ClassGuid;
            WCHAR SymbolicLinkName[1];
        } DeviceClass;
         <unnamed-type-TargetDevice>;
        struct {
            WCHAR DeviceId[1];
        } TargetDevice;
         <unnamed-type-InstallDevice>;
        struct {
            WCHAR DeviceId[1];
        } InstallDevice;
         <unnamed-type-CustomNotification>;
        struct {
            PVOID NotificationStructure;
            WCHAR DeviceId[1];
        } CustomNotification;
         <unnamed-type-ProfileNotification>;
        struct {
            PVOID Notification;
        } ProfileNotification;
         <unnamed-type-PowerNotification>;
        struct {
            ULONG NotificationCode;
            ULONG NotificationData;
        } PowerNotification;
         <unnamed-type-VetoNotification>;
        struct {
            enum _PNP_VETO_TYPE VetoType;
            WCHAR DeviceIdVetoNameBuffer[1];
        } VetoNotification;
         <unnamed-type-BlockedDriverNotification>;
        struct {
            struct _GUID BlockedDriverGuid;
        } BlockedDriverNotification;
         <unnamed-type-InvalidIDNotification>;
        struct {
            WCHAR ParentId[1];
        } InvalidIDNotification;
         <unnamed-type-PowerSettingNotification>;
        struct {
            struct _GUID PowerSettingGuid;
            ULONG Flags;
            ULONG SessionId;
            ULONG DataLength;
            UCHAR Data[1];
        } PowerSettingNotification;
         <unnamed-type-PropertyChangeNotification>;
        struct {
            WCHAR DeviceId[1];
        } PropertyChangeNotification;
         <unnamed-type-DeviceInstanceNotification>;
        struct {
            WCHAR DeviceId[1];
        } DeviceInstanceNotification;
    } u;
};

typedef struct _PLUGPLAY_NOTIFY_HDR {
    USHORT Version;
    USHORT Size;
    struct _GUID Event;
};

typedef struct _PMD {
    LONG mdisp;
    LONG pdisp;
    LONG vdisp;
};

typedef struct _POINTFLOAT {
    FLOAT x;
    FLOAT y;
};

typedef struct _POINTL {
    LONG x;
    LONG y;
};

typedef struct _POOLED_USAGE_AND_LIMITS {
    ULONG64 PeakPagedPoolUsage;
    ULONG64 PagedPoolUsage;
    ULONG64 PagedPoolLimit;
    ULONG64 PeakNonPagedPoolUsage;
    ULONG64 NonPagedPoolUsage;
    ULONG64 NonPagedPoolLimit;
    ULONG64 PeakPagefileUsage;
    ULONG64 PagefileUsage;
    ULONG64 PagefileLimit;
};

typedef struct _PORT_DATA_ENTRY {
    PVOID Base;
    ULONG Size;
};

typedef struct _PORT_DATA_INFORMATION {
    ULONG CountDataEntries;
    struct _PORT_DATA_ENTRY DataEntries[1];
};

typedef struct _PORT_MESSAGE {
     <unnamed-type-u1>;
    union {
         <unnamed-type-s1>;
        struct {
            SHORT DataLength;
            SHORT TotalLength;
        } s1;
        ULONG Length;
    } u1;
     <unnamed-type-u2>;
    union {
         <unnamed-type-s2>;
        struct {
            SHORT Type;
            SHORT DataInfoOffset;
        } s2;
        ULONG ZeroInit;
    } u2;
    struct _CLIENT_ID ClientId;
    DOUBLE DoNotUseThisField;
    ULONG MessageId;
    ULONG64 ClientViewSize;
    ULONG CallbackId;
};

typedef struct _PORT_VIEW {
    ULONG Length;
    PVOID SectionHandle;
    ULONG SectionOffset;
    ULONG64 ViewSize;
    PVOID ViewBase;
    PVOID ViewRemoteBase;
};

typedef struct _POWER_IDLE_RESILIENCY {
    ULONG CoalescingTimeout;
    ULONG IdleResiliencyPeriod;
};

typedef struct _POWER_MONITOR_INVOCATION {
    UCHAR Console;
    enum POWER_MONITOR_REQUEST_REASON RequestReason;
};

typedef struct _POWER_PLATFORM_INFORMATION {
    UCHAR AoAc;
};

typedef struct _POWER_SESSION_CONNECT {
    UCHAR Connected;
    UCHAR Console;
};

typedef struct _POWER_SESSION_RIT_STATE {
    UCHAR Active;
    ULONG LastInputTime;
};

typedef struct _POWER_SESSION_TIMEOUTS {
    ULONG InputTimeout;
    ULONG DisplayTimeout;
};

typedef struct _POWER_SESSION_WINLOGON {
    ULONG SessionId;
    UCHAR Console;
    UCHAR Locked;
};

typedef struct _POWER_THROTTLING_PROCESS_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _POWER_THROTTLING_THREAD_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _POWER_USER_PRESENCE {
    enum POWER_USER_PRESENCE_TYPE UserPresence;
};

typedef struct _PO_SPR_ACTIVE_SESSION_DATA {
    UCHAR Start;
    struct _GUID ActiveSessionGuid;
};

typedef struct _PO_WAKE_SOURCE_DEVICE {
    struct _PO_WAKE_SOURCE_HEADER Header;
    WCHAR InstancePath[1];
};

typedef struct _PO_WAKE_SOURCE_FIXED {
    struct _PO_WAKE_SOURCE_HEADER Header;
    enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
};

typedef struct _PO_WAKE_SOURCE_HEADER {
    enum PO_WAKE_SOURCE_TYPE Type;
    ULONG Size;
};

typedef struct _PO_WAKE_SOURCE_HISTORY {
    ULONG Count;
    ULONG Offsets[1];
};

typedef struct _PO_WAKE_SOURCE_INFO {
    ULONG Count;
    ULONG Offsets[1];
};

typedef struct _PO_WAKE_SOURCE_INTERNAL {
    struct _PO_WAKE_SOURCE_HEADER Header;
    enum PO_INTERNAL_WAKE_SOURCE_TYPE InternalWakeSourceType;
};

typedef struct _PO_WAKE_SOURCE_TIMER {
    struct _PO_WAKE_SOURCE_HEADER Header;
    struct _DIAGNOSTIC_BUFFER Reason;
};

typedef struct _PREFIX_TABLE {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _PREFIX_TABLE_ENTRY *NextPrefixTree;
};

typedef struct _PREFIX_TABLE_ENTRY {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _RTL_SPLAY_LINKS Links;
    struct _STRING *Prefix;
};

typedef struct _PRIVILEGE_SET {
    ULONG PrivilegeCount;
    ULONG Control;
    struct _LUID_AND_ATTRIBUTES Privilege[1];
};

typedef struct _PRIVKEYVER3 {
    ULONG magic;
    ULONG bitlenP;
    ULONG bitlenQ;
    ULONG bitlenJ;
    ULONG bitlenX;
    struct _DSSSEED DSSSeed;
};

typedef struct _PROCESSOR_GROUP_INFO {
    UCHAR MaximumProcessorCount;
    UCHAR ActiveProcessorCount;
    UCHAR Reserved[38];
    ULONG64 ActiveProcessorMask;
};

typedef struct _PROCESSOR_IDLE_STATE {
    UCHAR StateType;
    ULONG StateFlags;
    ULONG HardwareLatency;
    ULONG Power;
    ULONG64 Context;
    PLONG Handler;
};

typedef struct _PROCESSOR_IDLE_STATES {
    ULONG Size;
    ULONG Revision;
    ULONG Count;
    ULONG Type;
    ULONG64 TargetProcessors;
    struct _PROCESSOR_IDLE_STATE State[1];
};

typedef struct _PROCESSOR_NUMBER {
    USHORT Group;
    UCHAR Number;
    UCHAR Reserved;
};

typedef struct _PROCESSOR_POWER_INFORMATION {
    ULONG Number;
    ULONG MaxMhz;
    ULONG CurrentMhz;
    ULONG MhzLimit;
    ULONG MaxIdleState;
    ULONG CurrentIdleState;
};

typedef struct _PROCESSOR_POWER_POLICY {
    ULONG Revision;
    UCHAR DynamicThrottle;
    UCHAR Spare[3];
    ULONG DisableCStates : 1;
    ULONG Reserved : 31;
    ULONG PolicyCount;
    struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
};

typedef struct _PROCESSOR_POWER_POLICY_INFO {
    ULONG TimeCheck;
    ULONG DemoteLimit;
    ULONG PromoteLimit;
    UCHAR DemotePercent;
    UCHAR PromotePercent;
    UCHAR Spare[2];
    ULONG AllowDemotion : 1;
    ULONG AllowPromotion : 1;
    ULONG Reserved : 30;
};

typedef struct _PROCESSOR_PROFILE_CONTROL_AREA {
    struct _PEBS_DS_SAVE_AREA PebsDsSaveArea;
};

typedef struct _PROCESSOR_RELATIONSHIP {
    UCHAR Flags;
    UCHAR EfficiencyClass;
    UCHAR Reserved[20];
    USHORT GroupCount;
    struct _GROUP_AFFINITY GroupMask[1];
};

typedef struct _PROCESS_ACCESS_TOKEN {
    PVOID Token;
    PVOID Thread;
};

typedef struct _PROCESS_BASIC_INFORMATION {
    LONG ExitStatus;
    struct _PEB *PebBaseAddress;
    ULONG64 AffinityMask;
    LONG BasePriority;
    ULONG64 UniqueProcessId;
    ULONG64 InheritedFromUniqueProcessId;
};

typedef struct _PROCESS_BASIC_INFORMATION64 {
    LONG ExitStatus;
    ULONG Pad1;
    ULONG64 PebBaseAddress;
    ULONG64 AffinityMask;
    LONG BasePriority;
    ULONG Pad2;
    ULONG64 UniqueProcessId;
    ULONG64 InheritedFromUniqueProcessId;
};

typedef struct _PROCESS_CHILD_PROCESS_INFORMATION {
    UCHAR ProhibitChildProcesses;
    UCHAR AlwaysAllowSecureChildProcess;
    UCHAR AuditProhibitChildProcesses;
};

typedef struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION {
    PVOID ProcessHandle;
};

typedef struct _PROCESS_COMMIT_RELEASE_INFORMATION {
    ULONG Version;
    ULONG Eligible : 1;
    ULONG ReleaseRepurposedMemResetCommit : 1;
    ULONG ForceReleaseMemResetCommit : 1;
    ULONG Spare : 29;
    ULONG64 CommitDebt;
    ULONG64 CommittedMemResetSize;
    ULONG64 RepurposedMemResetSize;
};

typedef struct _PROCESS_CYCLE_TIME_INFORMATION {
    ULONG64 AccumulatedCycles;
    ULONG64 CurrentCycleCount;
};

typedef struct _PROCESS_DEVICEMAP_INFORMATION {
    struct {
        PVOID DirectoryHandle;
    } Set;
    struct {
        ULONG DriveMap;
        UCHAR DriveType[32];
    } Query;
};

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX {
    struct {
        PVOID DirectoryHandle;
    } Set;
    struct {
        ULONG DriveMap;
        UCHAR DriveType[32];
    } Query;
    ULONG Flags;
};

typedef struct _PROCESS_DISK_COUNTERS {
    ULONG64 BytesRead;
    ULONG64 BytesWritten;
    ULONG64 ReadOperationCount;
    ULONG64 WriteOperationCount;
    ULONG64 FlushOperationCount;
};

typedef struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION {
    struct _DYNAMIC_FUNCTION_TABLE *DynamicFunctionTable;
    UCHAR Remove;
};

typedef struct _PROCESS_ENERGY_TRACKING_STATE {
    ULONG StateUpdateMask;
    ULONG StateDesiredValue;
    ULONG StateSequence;
    ULONG UpdateTag : 1;
    WCHAR Tag[64];
};

typedef struct _PROCESS_ENERGY_VALUES {
    ULONG64 Cycles[4][2];
    ULONG64 DiskEnergy;
    ULONG64 NetworkTailEnergy;
    ULONG64 MBBTailEnergy;
    ULONG64 NetworkTxRxBytes;
    ULONG64 MBBTxRxBytes;
    union _ENERGY_STATE_DURATION Durations[3];
    union _ENERGY_STATE_DURATION ForegroundDuration;
    union _ENERGY_STATE_DURATION DesktopVisibleDuration;
    union _ENERGY_STATE_DURATION PSMForegroundDuration;
    ULONG CompositionRendered;
    ULONG CompositionDirtyGenerated;
    ULONG CompositionDirtyPropagated;
    ULONG Reserved1;
    ULONG64 AttributedCycles[4][2];
    ULONG64 WorkOnBehalfCycles[4][2];
};

typedef struct _PROCESS_ENERGY_VALUES_EXTENSION {
    union _TIMELINE_BITMAP Timelines[14];
    union _TIMELINE_BITMAP CpuTimeline;
    union _TIMELINE_BITMAP DiskTimeline;
    union _TIMELINE_BITMAP NetworkTimeline;
    union _TIMELINE_BITMAP MBBTimeline;
    union _TIMELINE_BITMAP ForegroundTimeline;
    union _TIMELINE_BITMAP DesktopVisibleTimeline;
    union _TIMELINE_BITMAP CompositionRenderedTimeline;
    union _TIMELINE_BITMAP CompositionDirtyGeneratedTimeline;
    union _TIMELINE_BITMAP CompositionDirtyPropagatedTimeline;
    union _TIMELINE_BITMAP InputTimeline;
    union _TIMELINE_BITMAP AudioInTimeline;
    union _TIMELINE_BITMAP AudioOutTimeline;
    union _TIMELINE_BITMAP DisplayRequiredTimeline;
    union _TIMELINE_BITMAP KeyboardInputTimeline;
    union _ENERGY_STATE_DURATION Durations[5];
    union _ENERGY_STATE_DURATION InputDuration;
    union _ENERGY_STATE_DURATION AudioInDuration;
    union _ENERGY_STATE_DURATION AudioOutDuration;
    union _ENERGY_STATE_DURATION DisplayRequiredDuration;
    union _ENERGY_STATE_DURATION PSMBackgroundDuration;
    ULONG KeyboardInput;
    ULONG MouseInput;
};

typedef struct _PROCESS_EXCEPTION_PORT {
    PVOID ExceptionPortHandle;
    ULONG StateFlags;
};

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION {
    ULONG64 Size;
    struct _PROCESS_BASIC_INFORMATION BasicInfo;
    ULONG Flags;
    ULONG IsProtectedProcess : 1;
    ULONG IsWow64Process : 1;
    ULONG IsProcessDeleting : 1;
    ULONG IsCrossSessionCreate : 1;
    ULONG IsFrozen : 1;
    ULONG IsBackground : 1;
    ULONG IsStronglyNamed : 1;
    ULONG IsSecureProcess : 1;
    ULONG IsSubsystemProcess : 1;
    ULONG SpareBits : 23;
};

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64 {
    ULONG64 Size;
    struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
    ULONG Flags;
    ULONG IsProtectedProcess : 1;
    ULONG IsWow64Process : 1;
    ULONG IsProcessDeleting : 1;
    ULONG IsCrossSessionCreate : 1;
    ULONG IsFrozen : 1;
    ULONG IsBackground : 1;
    ULONG IsStronglyNamed : 1;
    ULONG IsSecureProcess : 1;
    ULONG IsPicoProcess : 1;
    ULONG SpareBits : 23;
};

typedef struct _PROCESS_EXTENDED_ENERGY_VALUES {
    struct _PROCESS_ENERGY_VALUES Base;
    struct _PROCESS_ENERGY_VALUES_EXTENSION Extension;
};

typedef struct _PROCESS_FAULT_INFORMATION {
    ULONG FaultFlags;
    ULONG AdditionalInfo;
};

typedef struct _PROCESS_FOREGROUND_BACKGROUND {
    UCHAR Foreground;
};

typedef struct _PROCESS_HANDLE_INFORMATION {
    ULONG HandleCount;
    ULONG HandleCountHighWatermark;
};

typedef struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION {
    ULONG64 NumberOfHandles;
    ULONG64 Reserved;
    struct _PROCESS_HANDLE_TABLE_ENTRY_INFO Handles[1];
};

typedef struct _PROCESS_HANDLE_TABLE_ENTRY_INFO {
    PVOID HandleValue;
    ULONG64 HandleCount;
    ULONG64 PointerCount;
    ULONG GrantedAccess;
    ULONG ObjectTypeIndex;
    ULONG HandleAttributes;
    ULONG Reserved;
};

typedef struct _PROCESS_HANDLE_TRACING_ENABLE {
    ULONG Flags;
};

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX {
    ULONG Flags;
    ULONG TotalSlots;
};

typedef struct _PROCESS_HANDLE_TRACING_ENTRY {
    PVOID Handle;
    struct _CLIENT_ID ClientId;
    ULONG Type;
    PVOID Stacks[16];
};

typedef struct _PROCESS_HANDLE_TRACING_QUERY {
    PVOID Handle;
    ULONG TotalTraces;
    struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
};

typedef struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    ULONG cbData;
    UCHAR cbOverhead;
    UCHAR iRegionIndex;
    USHORT wFlags;
    struct {
        PVOID hMem;
        ULONG dwReserved[3];
    } Block;
    struct {
        ULONG dwCommittedSize;
        ULONG dwUnCommittedSize;
        PVOID lpFirstBlock;
        PVOID lpLastBlock;
    } Region;
};

typedef struct _PROCESS_HEAP_INFORMATION {
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG NumberOfHeaps;
    ULONG64 FirstHeapInformationOffset;
};

typedef struct _PROCESS_INFORMATION {
    PVOID hProcess;
    PVOID hThread;
    ULONG dwProcessId;
    ULONG dwThreadId;
};

typedef struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION {
    ULONG Version;
    ULONG Reserved;
    ULONG64 Callback;
};

typedef struct _PROCESS_JOB_MEMORY_INFO {
    ULONG64 SharedCommitUsage;
    ULONG64 PrivateCommitUsage;
    ULONG64 PeakPrivateCommitUsage;
    ULONG64 PrivateCommitLimit;
    ULONG64 TotalCommitLimit;
};

typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION {
    ULONG WakeCount;
    ULONG NoWakeCount;
};

typedef struct _PROCESS_LEAP_SECOND_INFO {
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _PROCESS_LEAP_SECOND_INFORMATION {
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _PROCESS_MEMORY_EXHAUSTION_INFO {
    USHORT Version;
    USHORT Reserved;
    enum _PROCESS_MEMORY_EXHAUSTION_TYPE Type;
    ULONG64 Value;
};

typedef struct _PROCESS_MITIGATION_ASLR_POLICY {
    ULONG Flags;
    ULONG EnableBottomUpRandomization : 1;
    ULONG EnableForceRelocateImages : 1;
    ULONG EnableHighEntropy : 1;
    ULONG DisallowStrippedImages : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY {
    ULONG Flags;
    ULONG MicrosoftSignedOnly : 1;
    ULONG StoreSignedOnly : 1;
    ULONG MitigationOptIn : 1;
    ULONG AuditMicrosoftSignedOnly : 1;
    ULONG AuditStoreSignedOnly : 1;
    ULONG ReservedFlags : 27;
};

typedef struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY {
    ULONG Flags;
    ULONG NoChildProcessCreation : 1;
    ULONG AuditNoChildProcessCreation : 1;
    ULONG AllowSecureProcessCreation : 1;
    ULONG ReservedFlags : 29;
};

typedef struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
    ULONG Flags;
    ULONG EnableControlFlowGuard : 1;
    ULONG EnableExportSuppression : 1;
    ULONG StrictMode : 1;
    ULONG ReservedFlags : 29;
};

typedef struct _PROCESS_MITIGATION_DEP_POLICY {
    ULONG Flags;
    ULONG Enable : 1;
    ULONG DisableAtlThunkEmulation : 1;
    ULONG ReservedFlags : 30;
    UCHAR Permanent;
};

typedef struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY {
    ULONG Flags;
    ULONG ProhibitDynamicCode : 1;
    ULONG AllowThreadOptOut : 1;
    ULONG AllowRemoteDowngrade : 1;
    ULONG AuditProhibitDynamicCode : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisableExtensionPoints : 1;
    ULONG ReservedFlags : 31;
};

typedef struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisableNonSystemFonts : 1;
    ULONG AuditNonSystemFontLoading : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY {
    ULONG Flags;
    ULONG NoRemoteImages : 1;
    ULONG NoLowMandatoryLabelImages : 1;
    ULONG PreferSystem32Images : 1;
    ULONG AuditNoRemoteImages : 1;
    ULONG AuditNoLowMandatoryLabelImages : 1;
    ULONG ReservedFlags : 27;
};

typedef struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
    ULONG Flags;
    ULONG EnableExportAddressFilter : 1;
    ULONG AuditExportAddressFilter : 1;
    ULONG EnableExportAddressFilterPlus : 1;
    ULONG AuditExportAddressFilterPlus : 1;
    ULONG EnableImportAddressFilter : 1;
    ULONG AuditImportAddressFilter : 1;
    ULONG EnableRopStackPivot : 1;
    ULONG AuditRopStackPivot : 1;
    ULONG EnableRopCallerCheck : 1;
    ULONG AuditRopCallerCheck : 1;
    ULONG EnableRopSimExec : 1;
    ULONG AuditRopSimExec : 1;
    ULONG ReservedFlags : 20;
};

typedef struct _PROCESS_MITIGATION_POLICY_INFORMATION {
    enum _PROCESS_MITIGATION_POLICY Policy;
    struct _PROCESS_MITIGATION_ASLR_POLICY ASLRPolicy;
    struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY StrictHandleCheckPolicy;
    struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY SystemCallDisablePolicy;
    struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ExtensionPointDisablePolicy;
    struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY DynamicCodePolicy;
    struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY ControlFlowGuardPolicy;
    struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY SignaturePolicy;
    struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY FontDisablePolicy;
    struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY ImageLoadPolicy;
    struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY SystemCallFilterPolicy;
    struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY PayloadRestrictionPolicy;
    struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY ChildProcessPolicy;
    struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY SideChannelIsolationPolicy;
};

typedef struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY {
    ULONG Flags;
    ULONG SmtBranchTargetIsolation : 1;
    ULONG IsolateSecurityDomain : 1;
    ULONG DisablePageCombine : 1;
    ULONG SpeculativeStoreBypassDisable : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
    ULONG Flags;
    ULONG RaiseExceptionOnInvalidHandleReference : 1;
    ULONG HandleExceptionsPermanentlyEnabled : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisallowWin32kSystemCalls : 1;
    ULONG AuditDisallowWin32kSystemCalls : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY {
    ULONG Flags;
    ULONG FilterId : 4;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_POWER_THROTTLING_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _PROCESS_PRIORITY_CLASS {
    UCHAR Foreground;
    UCHAR PriorityClass;
};

typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION {
    struct _UNICODE_STRING TargetDevicePath;
};

typedef struct _PROCESS_SECURITY_DOMAIN_INFORMATION {
    ULONG64 SecurityDomain;
};

typedef struct _PROCESS_SESSION_INFORMATION {
    ULONG SessionId;
};

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION {
    ULONG64 ReserveSize;
    ULONG64 ZeroBits;
    PVOID StackBase;
};

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX {
    ULONG PreferredNode;
    ULONG Reserved0;
    ULONG Reserved1;
    ULONG Reserved2;
    struct _PROCESS_STACK_ALLOCATION_INFORMATION AllocInfo;
};

typedef struct _PROCESS_TELEMETRY_ID_INFORMATION {
    ULONG HeaderSize;
    ULONG ProcessId;
    ULONG64 ProcessStartKey;
    ULONG64 CreateTime;
    ULONG64 CreateInterruptTime;
    ULONG64 CreateUnbiasedInterruptTime;
    ULONG64 ProcessSequenceNumber;
    ULONG64 SessionCreateTime;
    ULONG SessionId;
    ULONG BootId;
    ULONG ImageChecksum;
    ULONG ImageTimeDateStamp;
    ULONG UserSidOffset;
    ULONG ImagePathOffset;
    ULONG PackageNameOffset;
    ULONG RelativeAppNameOffset;
    ULONG CommandLineOffset;
};

typedef struct _PROCESS_TLS_INFORMATION {
    ULONG Flags;
    ULONG OperationType;
    ULONG ThreadDataCount;
    ULONG TlsIndex;
    ULONG PreviousCount;
    struct _THREAD_TLS_INFORMATION ThreadData[1];
};

typedef struct _PROCESS_UPTIME_INFORMATION {
    ULONG64 QueryInterruptTime;
    ULONG64 QueryUnbiasedTime;
    ULONG64 EndInterruptTime;
    ULONG64 TimeSinceCreation;
    ULONG64 Uptime;
    ULONG64 SuspendedTime;
    ULONG HangCount : 4;
    ULONG GhostCount : 4;
    ULONG Crashed : 1;
    ULONG Terminated : 1;
};

typedef struct _PROCESS_WAKE_INFORMATION {
    ULONG64 NotificationChannel;
    ULONG WakeCounters[7];
    struct _JOBOBJECT_WAKE_FILTER WakeFilter;
};

typedef struct _PROCESS_WINDOW_INFORMATION {
    ULONG WindowFlags;
    USHORT WindowTitleLength;
    WCHAR WindowTitle[1];
};

typedef struct _PROCESS_WORKING_SET_CONTROL {
    ULONG Version;
    enum _PROCESS_WORKING_SET_OPERATION Operation;
    ULONG Flags;
};

typedef struct _PROCESS_WS_WATCH_INFORMATION {
    PVOID FaultingPc;
    PVOID FaultingVa;
};

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX {
    struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
    ULONG64 FaultingThreadId;
    ULONG64 Flags;
};

typedef struct _PROC_THREAD_ATTRIBUTE_LIST {
};

typedef struct _PROV_ENUMALGS {
    ULONG aiAlgid;
    ULONG dwBitLen;
    ULONG dwNameLen;
    CHAR szName[20];
};

typedef struct _PROV_ENUMALGS_EX {
    ULONG aiAlgid;
    ULONG dwDefaultLen;
    ULONG dwMinLen;
    ULONG dwMaxLen;
    ULONG dwProtocols;
    ULONG dwNameLen;
    CHAR szName[20];
    ULONG dwLongNameLen;
    CHAR szLongName[40];
};

typedef struct _PSFEATURE_CUSTPAPER {
    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;
};

typedef struct _PSFEATURE_OUTPUT {
    LONG bPageIndependent;
    LONG bSetPageDevice;
};

typedef struct _PSINJECTDATA {
    ULONG DataBytes;
    USHORT InjectionPoint;
    USHORT PageNumber;
};

typedef struct _PS_ATTRIBUTE {
    ULONG64 Attribute;
    ULONG64 Size;
    ULONG64 Value;
    PVOID ValuePtr;
    PULONG64 ReturnLength;
};

typedef struct _PS_ATTRIBUTE_LIST {
    ULONG64 TotalLength;
    struct _PS_ATTRIBUTE Attributes[1];
};

typedef struct _PS_BNO_ISOLATION_PARAMETERS {
    struct _UNICODE_STRING IsolationPrefix;
    ULONG HandleCount;
    PVOID *Handles;
    UCHAR IsolationEnabled;
};

typedef struct _PS_CPU_QUOTA_QUERY_ENTRY {
    ULONG SessionId;
    ULONG Weight;
};

typedef struct _PS_CPU_QUOTA_QUERY_INFORMATION {
    ULONG SessionCount;
    struct _PS_CPU_QUOTA_QUERY_ENTRY SessionInformation[1];
};

typedef struct _PS_CPU_QUOTA_SET_INFORMATION {
    LONG64 SessionHandle;
    ULONG Weight;
};

typedef struct _PS_CREATE_INFO {
    ULONG64 Size;
    enum PS_CREATE_STATE State;
    struct {
        ULONG InitFlags;
        UCHAR WriteOutputOnExit : 1;
        UCHAR DetectManifest : 1;
        UCHAR IFEOSkipDebugger : 1;
        UCHAR IFEODoNotPropagateKeyState : 1;
        UCHAR SpareBits1 : 4;
        UCHAR SpareBits2 : 8;
        USHORT ProhibitedImageCharacteristics : 16;
        ULONG AdditionalFileAccess;
    } InitState;
    struct {
        PVOID FileHandle;
    } FailSection;
    struct {
        USHORT DllCharacteristics;
    } ExeFormat;
    struct {
        PVOID IFEOKey;
    } ExeName;
    struct {
        ULONG OutputFlags;
        UCHAR ProtectedProcess : 1;
        UCHAR AddressSpaceOverride : 1;
        UCHAR DevOverrideEnabled : 1;
        UCHAR ManifestDetected : 1;
        UCHAR ProtectedProcessLight : 1;
        UCHAR SpareBits1 : 3;
        UCHAR SpareBits2 : 8;
        USHORT SpareBits3 : 16;
        PVOID FileHandle;
        PVOID SectionHandle;
        ULONG64 UserProcessParametersNative;
        ULONG UserProcessParametersWow64;
        ULONG CurrentParameterFlags;
        ULONG64 PebAddressNative;
        ULONG PebAddressWow64;
        ULONG64 ManifestAddress;
        ULONG ManifestSize;
    } SuccessState;
};

typedef struct _PS_MEMORY_RESERVE {
    PVOID ReserveAddress;
    ULONG64 ReserveSize;
};

typedef struct _PS_MITIGATION_AUDIT_OPTIONS_MAP {
    ULONG64 Map[2];
};

typedef struct _PS_MITIGATION_OPTIONS_MAP {
    ULONG64 Map[2];
};

typedef struct _PS_PKG_CLAIM {
    ULONG64 Flags : 16;
    ULONG64 Origin : 8;
};

typedef struct _PS_PROTECTION {
    UCHAR Level;
    UCHAR Type : 3;
    UCHAR Audit : 1;
    UCHAR Signer : 4;
};

typedef struct _PS_STD_HANDLE_INFO {
    ULONG Flags;
    ULONG StdHandleState : 2;
    ULONG PseudoHandleMask : 3;
    ULONG StdHandleSubsystemType;
};

typedef struct _PS_SYSTEM_DLL_INIT_BLOCK {
    ULONG Size;
    ULONG64 SystemDllWowRelocation;
    ULONG64 SystemDllNativeRelocation;
    ULONG64 Wow64SharedInformation[16];
    ULONG RngData;
    ULONG Flags;
    ULONG CfgOverride : 1;
    ULONG Reserved : 31;
    struct _PS_MITIGATION_OPTIONS_MAP MitigationOptionsMap;
    ULONG64 CfgBitMap;
    ULONG64 CfgBitMapSize;
    ULONG64 Wow64CfgBitMap;
    ULONG64 Wow64CfgBitMapSize;
    struct _PS_MITIGATION_AUDIT_OPTIONS_MAP MitigationAuditOptionsMap;
};

typedef struct _PUBKEY {
    ULONG magic;
    ULONG bitlen;
};

typedef struct _PUBKEYVER3 {
    ULONG magic;
    ULONG bitlenP;
    ULONG bitlenQ;
    ULONG bitlenJ;
    struct _DSSSEED DSSSeed;
};

typedef struct _PUBLICKEYSTRUC {
    UCHAR bType;
    UCHAR bVersion;
    USHORT reserved;
    ULONG aiKeyAlg;
};

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION {
    ULONG Attributes;
    ULONG GrantedAccess;
    ULONG HandleCount;
    ULONG PointerCount;
    ULONG Reserved[10];
};

typedef struct _QUAD {
    LONG64 UseThisFieldToCopy;
    DOUBLE DoNotUseThisField;
};

typedef struct _QUERY_BAD_RANGES_INPUT {
    ULONG Flags;
    ULONG NumRanges;
    struct _QUERY_BAD_RANGES_INPUT_RANGE Ranges[1];
};

typedef struct _QUERY_BAD_RANGES_INPUT_RANGE {
    ULONG64 StartOffset;
    ULONG64 LengthInBytes;
};

typedef struct _QUERY_BAD_RANGES_OUTPUT {
    ULONG Flags;
    ULONG NumBadRanges;
    ULONG64 NextOffsetToLookUp;
    struct _QUERY_BAD_RANGES_OUTPUT_RANGE BadRanges[1];
};

typedef struct _QUERY_BAD_RANGES_OUTPUT_RANGE {
    ULONG Flags;
    ULONG Reserved;
    ULONG64 StartOffset;
    ULONG64 LengthInBytes;
};

typedef struct _QUERY_FILE_LAYOUT_INPUT {
    ULONG FilterEntryCount;
    ULONG NumberOfPairs;
    ULONG Flags;
    enum _QUERY_FILE_LAYOUT_FILTER_TYPE FilterType;
    ULONG Reserved;
     <unnamed-type-Filter>;
    union {
        struct _CLUSTER_RANGE ClusterRanges[1];
        struct _FILE_REFERENCE_RANGE FileReferenceRanges[1];
        enum _STORAGE_RESERVE_ID StorageReserveIds[1];
    } Filter;
};

typedef struct _QUERY_FILE_LAYOUT_OUTPUT {
    ULONG FileEntryCount;
    ULONG FirstFileOffset;
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _QUERY_PERFORMANCE_COUNTER_FLAGS {
    ULONG KernelTransition : 1;
    ULONG Reserved : 31;
    ULONG ul;
};

typedef struct _QUERY_SERVICE_CONFIGA {
    ULONG dwServiceType;
    ULONG dwStartType;
    ULONG dwErrorControl;
    PCHAR lpBinaryPathName;
    PCHAR lpLoadOrderGroup;
    ULONG dwTagId;
    PCHAR lpDependencies;
    PCHAR lpServiceStartName;
    PCHAR lpDisplayName;
};

typedef struct _QUERY_SERVICE_CONFIGW {
    ULONG dwServiceType;
    ULONG dwStartType;
    ULONG dwErrorControl;
    PWCHAR lpBinaryPathName;
    PWCHAR lpLoadOrderGroup;
    ULONG dwTagId;
    PWCHAR lpDependencies;
    PWCHAR lpServiceStartName;
    PWCHAR lpDisplayName;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA {
    ULONG fIsLocked;
    PCHAR lpLockOwner;
    ULONG dwLockDuration;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSW {
    ULONG fIsLocked;
    PWCHAR lpLockOwner;
    ULONG dwLockDuration;
};

typedef struct _QUERY_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _QUERY_STORAGE_RESERVE_OUTPUT {
    ULONG Version;
    ULONG AreaInfoCount;
    struct _STORAGE_RESERVE_AREA_INFO AreaInfo[1];
};

typedef struct _QUOTA_LIMITS {
    ULONG64 PagedPoolLimit;
    ULONG64 NonPagedPoolLimit;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG64 PagefileLimit;
    union _LARGE_INTEGER TimeLimit;
};

typedef struct _QUOTA_LIMITS_EX {
    ULONG64 PagedPoolLimit;
    ULONG64 NonPagedPoolLimit;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG64 PagefileLimit;
    union _LARGE_INTEGER TimeLimit;
    ULONG64 WorkingSetLimit;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
    ULONG64 Reserved4;
    ULONG Flags;
    union _RATE_QUOTA_LIMIT CpuRateLimit;
};

typedef struct _RASTERIZER_STATUS {
    SHORT nSize;
    SHORT wFlags;
    SHORT nLanguageID;
};

typedef struct _RC_CONFIG {
    ULONG dwSignature;
    ULONG dwLength;
    ULONG dwRCConfigVersion;
    ULONG dwFilePathType;
    ULONG dwFileType;
    ULONG dwSystemAttributes;
    ULONG dwUltimateFallbackLocation;
    ULONG dwServiceCheckSum[4];
    ULONG dwChecksum[4];
    ULONG dwReserved1;
    ULONG dwReserved2;
    ULONG dwMUIFileNameOffset;
    ULONG dwMUIFileNameLength;
    ULONG dwMUIFilePathOffset;
    ULONG dwMUIFilePathLength;
    ULONG dwMainResNameTypesOffset;
    ULONG dwMainResNameTypesLength;
    ULONG dwMainResIDTypesOffset;
    ULONG dwMainResIDTypesLength;
    ULONG dwMUIResNameTypesOffset;
    ULONG dwMUIResNameTypesLength;
    ULONG dwMUIResIDTypesOffset;
    ULONG dwMUIResIDTypesLength;
    ULONG dwLanguageOffset;
    ULONG dwLanguageLength;
    ULONG dwUltimateFallbackLanguageOffset;
    ULONG dwUltimateFallbackLanguageLength;
};

typedef struct _RDR_CALLOUT_STATE {
    LONG LastError;
    PVOID LastEEInfo;
    enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
    PWCHAR ServerName;
    PWCHAR ServerPort;
    PWCHAR RemoteUser;
    PWCHAR AuthType;
    UCHAR ResourceTypePresent;
    UCHAR SessionIdPresent;
    UCHAR InterfacePresent;
    struct _GUID ResourceType;
    struct _GUID SessionId;
    struct _RPC_SYNTAX_IDENTIFIER Interface;
    PVOID CertContext;
};

typedef struct _REARRANGE_FILE_DATA {
    ULONG64 SourceStartingOffset;
    ULONG64 TargetOffset;
    PVOID SourceFileHandle;
    ULONG Length;
    ULONG Flags;
};

typedef struct _REARRANGE_FILE_DATA32 {
    ULONG64 SourceStartingOffset;
    ULONG64 TargetOffset;
    ULONG SourceFileHandle;
    ULONG Length;
    ULONG Flags;
};

typedef struct _REASON_BUFFER {
    ULONG Flags;
    ULONG64 ResourceFileNameOffset;
    USHORT ResourceReasonId;
    ULONG StringCount;
    ULONG64 SubstitutionStringsOffset;
    ULONG64 SimpleStringOffset;
};

typedef struct _REASON_CONTEXT {
    ULONG Version;
    ULONG Flags;
     <unnamed-type-Reason>;
    union {
         <unnamed-type-Detailed>;
        struct {
            struct HINSTANCE__ *LocalizedReasonModule;
            ULONG LocalizedReasonId;
            ULONG ReasonStringCount;
            PWCHAR *ReasonStrings;
        } Detailed;
        PWCHAR SimpleReasonString;
    } Reason;
};

typedef struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef struct _REDIRECTION_DESCRIPTOR {
    ULONG Version;
    ULONG FunctionCount;
    struct _REDIRECTION_FUNCTION_DESCRIPTOR *Redirections;
};

typedef struct _REDIRECTION_FUNCTION_DESCRIPTOR {
    PCHAR DllName;
    PCHAR FunctionName;
    PVOID RedirectionTarget;
};

typedef struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER {
    ULONG RangeCount;
    struct _REFS_DEALLOCATE_RANGES_RANGE Ranges[1];
};

typedef struct _REFS_DEALLOCATE_RANGES_RANGE {
    ULONG64 StartOfRange;
    ULONG64 CountOfRange;
};

typedef struct _REFS_SMR_VOLUME_GC_PARAMETERS {
    ULONG Version;
    ULONG Flags;
    enum _REFS_SMR_VOLUME_GC_ACTION Action;
    enum _REFS_SMR_VOLUME_GC_METHOD Method;
    ULONG IoGranularity;
    ULONG CompressionFormat;
    ULONG64 Unused[8];
};

typedef struct _REFS_SMR_VOLUME_INFO_OUTPUT {
    ULONG Version;
    ULONG Flags;
    union _LARGE_INTEGER SizeOfRandomlyWritableTier;
    union _LARGE_INTEGER FreeSpaceInRandomlyWritableTier;
    union _LARGE_INTEGER SizeofSMRTier;
    union _LARGE_INTEGER FreeSpaceInSMRTier;
    union _LARGE_INTEGER UsableFreeSpaceInSMRTier;
    enum _REFS_SMR_VOLUME_GC_STATE VolumeGcState;
    LONG VolumeGcLastStatus;
    ULONG64 Unused[7];
};

typedef struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER {
    UCHAR ResetCounters;
};

typedef struct _REG_NOTIFY_INFORMATION {
    ULONG NextEntryOffset;
    enum _REG_ACTION Action;
    ULONG KeyLength;
    WCHAR Key[1];
};

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_ {
    PVOID TargetFileObject;
    ULONG TargetLinkTrackingInformationLength;
    UCHAR TargetLinkTrackingInformationBuffer[1];
};

typedef struct _REMOTE_NAME_INFOA {
    PCHAR lpUniversalName;
    PCHAR lpConnectionName;
    PCHAR lpRemainingPath;
};

typedef struct _REMOTE_NAME_INFOW {
    PWCHAR lpUniversalName;
    PWCHAR lpConnectionName;
    PWCHAR lpRemainingPath;
};

typedef struct _REMOTE_PORT_VIEW {
    ULONG Length;
    ULONG64 ViewSize;
    PVOID ViewBase;
};

typedef struct _REMSECURITY_ATTRIBUTES {
    ULONG nLength;
    ULONG lpSecurityDescriptor;
    LONG bInheritHandle;
};

typedef struct _REPAIR_COPIES_INPUT {
    ULONG Size;
    ULONG Flags;
    union _LARGE_INTEGER FileOffset;
    ULONG Length;
    ULONG SourceCopy;
    ULONG NumberOfRepairCopies;
    ULONG RepairCopies[1];
};

typedef struct _REPAIR_COPIES_OUTPUT {
    ULONG Size;
    LONG Status;
    union _LARGE_INTEGER ResumeFileOffset;
};

typedef struct _REPAIR_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _REPARSE_DATA_BUFFER {
    ULONG ReparseTag;
    USHORT ReparseDataLength;
    USHORT Reserved;
    struct {
        USHORT SubstituteNameOffset;
        USHORT SubstituteNameLength;
        USHORT PrintNameOffset;
        USHORT PrintNameLength;
        ULONG Flags;
        WCHAR PathBuffer[1];
    } SymbolicLinkReparseBuffer;
    struct {
        USHORT SubstituteNameOffset;
        USHORT SubstituteNameLength;
        USHORT PrintNameOffset;
        USHORT PrintNameLength;
        WCHAR PathBuffer[1];
    } MountPointReparseBuffer;
    struct {
        UCHAR DataBuffer[1];
    } GenericReparseBuffer;
};

typedef struct _REPARSE_DATA_BUFFER_EX {
    ULONG Flags;
    ULONG ExistingReparseTag;
    struct _GUID ExistingReparseGuid;
    ULONG64 Reserved;
    struct _REPARSE_DATA_BUFFER ReparseDataBuffer;
    struct _REPARSE_GUID_DATA_BUFFER ReparseGuidDataBuffer;
};

typedef struct _REPARSE_GUID_DATA_BUFFER {
    ULONG ReparseTag;
    USHORT ReparseDataLength;
    USHORT Reserved;
    struct _GUID ReparseGuid;
     <unnamed-type-GenericReparseBuffer>;
    struct {
        UCHAR DataBuffer[1];
    } GenericReparseBuffer;
};

typedef struct _REPARSE_INDEX_KEY {
    ULONG FileReparseTag;
    union _LARGE_INTEGER FileId;
};

typedef struct _REPARSE_POINT_INFORMATION {
    USHORT ReparseDataLength;
    USHORT UnparsedNameLength;
};

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG RequestedOplockLevel;
    ULONG Flags;
};

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG OriginalOplockLevel;
    ULONG NewOplockLevel;
    ULONG Flags;
    ULONG AccessMode;
    USHORT ShareMode;
};

typedef struct _REQUEST_RAW_ENCRYPTED_DATA {
    LONG64 FileOffset;
    ULONG Length;
};

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION {
    struct _GUID ResourceManagerId;
    ULONG DescriptionLength;
    WCHAR Description[1];
};

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION {
    PVOID IoCompletionPortHandle;
    ULONG64 CompletionKey;
};

typedef struct _RESUME_PERFORMANCE {
    ULONG PostTimeMs;
    ULONG64 TotalResumeTimeMs;
    ULONG64 ResumeCompleteTimestamp;
};

typedef struct _RETRIEVAL_POINTER_BASE {
    union _LARGE_INTEGER FileAreaOffset;
};

typedef struct _RGNDATA {
    struct _RGNDATAHEADER rdh;
    CHAR Buffer[1];
};

typedef struct _RGNDATAHEADER {
    ULONG dwSize;
    ULONG iType;
    ULONG nCount;
    ULONG nRgnSize;
    struct tagRECT rcBound;
};

typedef struct _RIP_INFO {
    ULONG dwError;
    ULONG dwType;
};

typedef struct _ROOT_INFO_LUID {
    ULONG LowPart;
    LONG HighPart;
};

typedef struct _RPC_ASYNC_STATE {
    ULONG Size;
    ULONG Signature;
    LONG Lock;
    ULONG Flags;
    PVOID StubInfo;
    PVOID UserInfo;
    PVOID RuntimeInfo;
    enum _RPC_ASYNC_EVENT Event;
    enum _RPC_NOTIFICATION_TYPES NotificationType;
    union _RPC_ASYNC_NOTIFICATION_INFO u;
    LONG64 Reserved[4];
};

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1 {
    ULONG Version;
    ULONG Flags;
    ULONG ComTimeout;
    ULONG CallTimeout;
};

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A {
    ULONG Version;
    PUCHAR ServerPrincName;
    ULONG AuthnLevel;
    ULONG AuthnSvc;
    struct _SEC_WINNT_AUTH_IDENTITY_A *AuthIdentity;
    struct _RPC_SECURITY_QOS *SecurityQos;
};

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W {
    ULONG Version;
    PWCHAR ServerPrincName;
    ULONG AuthnLevel;
    ULONG AuthnSvc;
    struct _SEC_WINNT_AUTH_IDENTITY_W *AuthIdentity;
    struct _RPC_SECURITY_QOS *SecurityQos;
};

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A {
    ULONG Version;
    ULONG Flags;
    ULONG ProtocolSequence;
    PUCHAR NetworkAddress;
    PUCHAR StringEndpoint;
     <unnamed-type-u1>;
    union {
        PUCHAR Reserved;
    } u1;
    struct _GUID ObjectUuid;
};

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W {
    ULONG Version;
    ULONG Flags;
    ULONG ProtocolSequence;
    PWCHAR NetworkAddress;
    PWCHAR StringEndpoint;
     <unnamed-type-u1>;
    union {
        PWCHAR Reserved;
    } u1;
    struct _GUID ObjectUuid;
};

typedef struct _RPC_BINDING_VECTOR {
    ULONG Count;
    PVOID BindingH[1];
};

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1 {
    ULONG Version;
    PVOID Buffer;
    ULONG BufferSize;
    enum tagRpcLocalAddressFormat AddressFormat;
};

typedef struct _RPC_CLIENT_INTERFACE {
    ULONG Length;
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    ULONG RpcProtseqEndpointCount;
    struct _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
    ULONG64 Reserved;
    PVOID InterpreterInfo;
    ULONG Flags;
};

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR {
    ULONG BufferSize;
    PCHAR Buffer;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A {
    struct _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A {
    struct _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
    struct _SEC_WINNT_AUTH_IDENTITY_A *ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W {
    struct _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
    struct _SEC_WINNT_AUTH_IDENTITY_W *ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A {
    PVOID TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
    PVOID ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W {
    PVOID TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
    PVOID ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W {
    struct _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
};

typedef struct _RPC_IF_ID {
    struct _GUID Uuid;
    USHORT VersMajor;
    USHORT VersMinor;
};

typedef struct _RPC_MESSAGE {
    PVOID Handle;
    ULONG DataRepresentation;
    PVOID Buffer;
    ULONG BufferLength;
    ULONG ProcNum;
    struct _RPC_SYNTAX_IDENTIFIER *TransferSyntax;
    PVOID RpcInterfaceInformation;
    PVOID ReservedForRuntime;
    PVOID ManagerEpv;
    PVOID ImportContext;
    ULONG RpcFlags;
};

typedef struct _RPC_POLICY {
    ULONG Length;
    ULONG EndpointFlags;
    ULONG NICFlags;
};

typedef struct _RPC_PROTSEQ_ENDPOINT {
    PUCHAR RpcProtocolSequence;
    PUCHAR Endpoint;
};

typedef struct _RPC_PROTSEQ_VECTORA {
    ULONG Count;
    PUCHAR Protseq[1];
};

typedef struct _RPC_PROTSEQ_VECTORW {
    ULONG Count;
    PWCHAR Protseq[1];
};

typedef struct _RPC_SECURITY_QOS {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
};

typedef struct _RPC_SECURITY_QOS_V2_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
};

typedef struct _RPC_SECURITY_QOS_V2_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
};

typedef struct _RPC_SECURITY_QOS_V3_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
};

typedef struct _RPC_SECURITY_QOS_V3_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
};

typedef struct _RPC_SECURITY_QOS_V4_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
};

typedef struct _RPC_SECURITY_QOS_V4_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
};

typedef struct _RPC_SECURITY_QOS_V5_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
    PVOID ServerSecurityDescriptor;
};

typedef struct _RPC_SECURITY_QOS_V5_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
    PVOID ServerSecurityDescriptor;
};

typedef struct _RPC_SEC_CONTEXT_KEY_INFO {
    ULONG EncryptAlgorithm;
    ULONG KeySize;
    ULONG SignatureAlgorithm;
};

typedef struct _RPC_SERVER_INTERFACE {
    ULONG Length;
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    ULONG RpcProtseqEndpointCount;
    struct _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
    PVOID DefaultManagerEpv;
    PVOID InterpreterInfo;
    ULONG Flags;
};

typedef struct _RPC_SYNTAX_IDENTIFIER {
    struct _GUID SyntaxGUID;
    struct _RPC_VERSION SyntaxVersion;
};

typedef struct _RPC_TRANSFER_SYNTAX {
    struct _GUID Uuid;
    USHORT VersMajor;
    USHORT VersMinor;
};

typedef struct _RPC_VERSION {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _RSAPUBKEY {
    ULONG magic;
    ULONG bitlen;
    ULONG pubexp;
};

typedef struct _RTLP_CURDIR_REF {
};

typedef struct _RTLP_HEAP_SERIALIZED_MAPPING {
    ULONG64 Allocation;
    PVOID StackReference;
    ULONG64 Size;
};

typedef struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER {
    USHORT Version;
    USHORT PointerSize;
    ULONG64 Heap;
    ULONG64 TotalCommit;
    ULONG64 TotalReserve;
};

typedef struct _RTLP_HEAP_TAGGING_INFO {
    USHORT Version;
    USHORT Flags;
    PVOID Process;
    ULONG64 EntriesCount;
    struct _RTLP_TAG_INFO Entries[1];
};

typedef struct _RTLP_PROCESS_REFLECTION_CONTEXT {
    ULONG64 ReflectionContextSize;
    ULONG ReflectionFlags;
    PLONG ReflectionRoutine;
    PVOID ReflectionParameter;
    PVOID ReflectedProcessCreatedEvent;
    PVOID ReflectedProcessHandlesDuplicatedEvent;
    PVOID ReflectionStartEvent;
    struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION ReflectionInformation;
};

typedef struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION {
    PVOID ReflectionProcessHandle;
    PVOID ReflectionThreadHandle;
    struct _CLIENT_ID ReflectionClientId;
};

typedef struct _RTLP_TAG_INFO {
    struct _GUID Id;
    ULONG64 CurrentAllocatedBytes;
};

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME {
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *Previous;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG Flags;
};

typedef struct _RTL_AVL_TABLE {
    struct _RTL_BALANCED_LINKS BalancedRoot;
    PVOID OrderedPointer;
    ULONG WhichOrderedElement;
    ULONG NumberGenericTableElements;
    ULONG DepthOfTree;
    struct _RTL_BALANCED_LINKS *RestartKey;
    ULONG DeleteCount;
    enum _RTL_GENERIC_COMPARE_RESULTS *CompareRoutine;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    PVOID TableContext;
};

typedef struct _RTL_AVL_TREE {
    struct _RTL_BALANCED_NODE *Root;
};

typedef struct _RTL_BACKOFF {
    ULONG Delay;
};

typedef struct _RTL_BALANCED_LINKS {
    struct _RTL_BALANCED_LINKS *Parent;
    struct _RTL_BALANCED_LINKS *LeftChild;
    struct _RTL_BALANCED_LINKS *RightChild;
    CHAR Balance;
    UCHAR Reserved[3];
};

typedef struct _RTL_BALANCED_NODE {
    struct _RTL_BALANCED_NODE *Children[2];
    struct _RTL_BALANCED_NODE *Left;
    struct _RTL_BALANCED_NODE *Right;
    UCHAR Red : 1;
    UCHAR Balance : 2;
    ULONG64 ParentValue;
};

typedef struct _RTL_BARRIER {
    LONG Barrier;
    LONG LeftBarrier;
    PVOID WaitEvent[2];
    LONG TotalProcessors;
    ULONG Spins;
    struct {
        ULONG Reserved1;
        ULONG Reserved2;
        ULONG64 Reserved3[2];
        ULONG Reserved4;
        ULONG Reserved5;
    } DUMMYRESERVEDSTRUCTNAME;
    VOID _RTL_BARRIER;
    VOID _RTL_BARRIER;
    struct _RTL_BARRIER *operator=;
    struct _RTL_BARRIER *operator=;
};

typedef struct _RTL_BITMAP {
    ULONG SizeOfBitMap;
    PULONG Buffer;
};

typedef struct _RTL_BITMAP_EX {
    ULONG64 SizeOfBitMap;
    PULONG64 Buffer;
};

typedef struct _RTL_BITMAP_RUN {
    ULONG StartingIndex;
    ULONG NumberOfBits;
};

typedef struct _RTL_BSD_ITEM {
    enum RTL_BSD_ITEM_TYPE Type;
    PVOID DataBuffer;
    ULONG DataLength;
};

typedef struct _RTL_BUFFER {
    PUCHAR Buffer;
    PUCHAR StaticBuffer;
    ULONG64 Size;
    ULONG64 StaticSize;
};

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC {
    ULONG64 Size;
    ULONG Format;
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
};

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED {
    ULONG64 Size;
    ULONG Format;
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
    PVOID Extra1;
    PVOID Extra2;
    PVOID Extra3;
    PVOID Extra4;
};

typedef struct _RTL_CIRCULAR_LIST_HEAD {
    struct _LIST_ENTRY *HeadEntry;
};

typedef struct _RTL_CONDITION_VARIABLE {
    PVOID Ptr;
};

typedef struct _RTL_CRITICAL_SECTION {
    struct _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    PVOID OwningThread;
    PVOID LockSemaphore;
    ULONG64 SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION32 {
    ULONG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    ULONG OwningThread;
    ULONG LockSemaphore;
    ULONG SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION64 {
    ULONG64 DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    ULONG64 OwningThread;
    ULONG64 LockSemaphore;
    ULONG64 SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    struct _LIST_ENTRY ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Flags;
    USHORT CreatorBackTraceIndexHigh;
    USHORT SpareUSHORT;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG32 {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    ULONG CriticalSection;
    struct LIST_ENTRY32 ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Spare[2];
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG64 {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    ULONG64 CriticalSection;
    struct LIST_ENTRY64 ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Spare[2];
};

typedef struct _RTL_DEBUG_INFORMATION {
    PVOID SectionHandleClient;
    PVOID ViewBaseClient;
    PVOID ViewBaseTarget;
    ULONG64 ViewBaseDelta;
    PVOID EventPairClient;
    PVOID EventPairTarget;
    PVOID TargetProcessId;
    PVOID TargetThreadHandle;
    ULONG Flags;
    ULONG64 OffsetFree;
    ULONG64 CommitSize;
    ULONG64 ViewSize;
    struct _RTL_PROCESS_MODULES *Modules;
    struct _RTL_PROCESS_MODULE_INFORMATION_EX *ModulesEx;
    struct _RTL_PROCESS_BACKTRACES *BackTraces;
    struct _RTL_PROCESS_HEAPS *Heaps;
    struct _RTL_PROCESS_LOCKS *Locks;
    PVOID SpecificHeap;
    PVOID TargetProcessHandle;
    struct _RTL_PROCESS_VERIFIER_OPTIONS *VerifierOptions;
    PVOID ProcessHeap;
    PVOID CriticalSectionHandle;
    PVOID CriticalSectionOwnerThread;
    PVOID Reserved[4];
};

typedef struct _RTL_DEBUG_INFORMATION32 {
    ULONG SectionHandleClient;
    ULONG ViewBaseClient;
    ULONG ViewBaseTarget;
    ULONG ViewBaseDelta;
    ULONG EventPairClient;
    ULONG EventPairTarget;
    ULONG TargetProcessId;
    ULONG TargetThreadHandle;
    ULONG Flags;
    ULONG OffsetFree;
    ULONG CommitSize;
    ULONG ViewSize;
    ULONG Modules;
    ULONG ModulesEx;
    ULONG BackTraces;
    ULONG Heaps;
    ULONG Locks;
    ULONG SpecificHeap;
    ULONG TargetProcessHandle;
    ULONG VerifierOptions;
    ULONG ProcessHeap;
    ULONG CriticalSectionHandle;
    ULONG CriticalSectionOwnerThread;
    ULONG Reserved[4];
};

typedef struct _RTL_DISK_SPACE_INFO {
    enum RTL_DISK_SPACE_POLICY Policy;
};

typedef struct _RTL_DISK_SPEED_INFO {
    enum RTL_DISK_SPEED_POLICY Policy;
};

typedef struct _RTL_DISK_WRITE_CONSTRAINT_INFO {
    enum RTL_DISK_WRITE_CONSTRAINT_POLICY Policy;
};

typedef struct _RTL_DRIVE_LETTER_CURDIR {
    USHORT Flags;
    USHORT Length;
    ULONG TimeStamp;
    struct _STRING DosPath;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE {
    ULONG Flags;
    ULONG Shift;
    ULONG TableSize;
    ULONG Pivot;
    ULONG DivisorMask;
    ULONG NumEntries;
    ULONG NonEmptyBuckets;
    ULONG NumEnumerators;
    PVOID Directory;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT {
    struct _LIST_ENTRY *ChainHead;
    struct _LIST_ENTRY *PrevLinkage;
    ULONG64 Signature;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY {
    struct _LIST_ENTRY Linkage;
    ULONG64 Signature;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR {
    struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
    struct _LIST_ENTRY *CurEntry;
    struct _LIST_ENTRY *ChainHead;
    ULONG BucketIndex;
};

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION {
    struct _RTL_TIME_ZONE_INFORMATION tzi;
    WCHAR TimeZoneKeyName[128];
    UCHAR DynamicDaylightTimeDisabled;
};

typedef struct _RTL_GENERIC_TABLE {
    struct _RTL_SPLAY_LINKS *TableRoot;
    struct _LIST_ENTRY InsertOrderList;
    struct _LIST_ENTRY *OrderedPointer;
    ULONG WhichOrderedElement;
    ULONG NumberGenericTableElements;
    enum _RTL_GENERIC_COMPARE_RESULTS *CompareRoutine;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    PVOID TableContext;
};

typedef struct _RTL_HANDLE_TABLE {
    ULONG MaximumNumberOfHandles;
    ULONG SizeOfHandleTableEntry;
    ULONG UseHeap;
    ULONG TableSize;
    struct _RTL_HANDLE_TABLE_ENTRY *FreeHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *CommittedHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *UnCommittedHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *MaxReservedHandles;
};

typedef struct _RTL_HANDLE_TABLE_ENTRY {
    ULONG Flags;
    struct _RTL_HANDLE_TABLE_ENTRY *NextFree;
};

typedef struct _RTL_HEAP_ENTRY {
    ULONG64 Size;
    USHORT Flags;
    USHORT AllocatorBackTraceIndex;
     <unnamed-type-u>;
    union {
         <unnamed-type-s1>;
        struct {
            ULONG64 Settable;
            ULONG Tag;
        } s1;
         <unnamed-type-s2>;
        struct {
            ULONG64 CommittedSize;
            PVOID FirstBlock;
        } s2;
    } u;
};

typedef struct _RTL_HEAP_INFORMATION {
    PVOID BaseAddress;
    ULONG Flags;
    USHORT EntryOverhead;
    USHORT CreatorBackTraceIndex;
    ULONG64 BytesAllocated;
    ULONG64 BytesCommitted;
    ULONG NumberOfTags;
    ULONG NumberOfEntries;
    ULONG NumberOfPseudoTags;
    ULONG PseudoTagGranularity;
    ULONG Reserved[5];
    struct _RTL_HEAP_TAG *Tags;
    struct _RTL_HEAP_ENTRY *Entries;
};

typedef struct _RTL_HEAP_MEMORY_LIMIT_DATA {
    ULONG64 CommitLimitBytes;
    ULONG64 CommitLimitFailureCode;
    ULONG64 MaxAllocationSizeBytes;
    ULONG64 AllocationLimitFailureCode;
};

typedef struct _RTL_HEAP_MEMORY_LIMIT_INFO {
    ULONG Version;
    struct _RTL_HEAP_MEMORY_LIMIT_DATA Data;
};

typedef struct _RTL_HEAP_PARAMETERS {
    ULONG Length;
    ULONG64 SegmentReserve;
    ULONG64 SegmentCommit;
    ULONG64 DeCommitFreeBlockThreshold;
    ULONG64 DeCommitTotalFreeThreshold;
    ULONG64 MaximumAllocationSize;
    ULONG64 VirtualMemoryThreshold;
    ULONG64 InitialCommit;
    ULONG64 InitialReserve;
    PLONG CommitRoutine;
    ULONG64 Reserved[2];
};

typedef struct _RTL_HEAP_STACK_CONTROL {
    USHORT Version;
    USHORT Flags;
    PVOID Process;
};

typedef struct _RTL_HEAP_STACK_QUERY {
    ULONG Version;
    PVOID Process;
    PLONG WriteRoutine;
    PVOID SerializationContext;
    UCHAR QueryLevel;
    UCHAR Flags;
};

typedef struct _RTL_HEAP_TAG {
    ULONG NumberOfAllocations;
    ULONG NumberOfFrees;
    ULONG64 BytesAllocated;
    USHORT TagIndex;
    USHORT CreatorBackTraceIndex;
    WCHAR TagName[24];
};

typedef struct _RTL_HEAP_TAG_INFO {
    ULONG NumberOfAllocations;
    ULONG NumberOfFrees;
    ULONG64 BytesAllocated;
};

typedef struct _RTL_HEAP_WALK_ENTRY {
    PVOID DataAddress;
    ULONG64 DataSize;
    UCHAR OverheadBytes;
    UCHAR SegmentIndex;
    USHORT Flags;
    struct {
        ULONG64 Settable;
        USHORT TagIndex;
        USHORT AllocatorBackTraceIndex;
        ULONG Reserved[2];
    } Block;
    struct {
        ULONG CommittedSize;
        ULONG UnCommittedSize;
        PVOID FirstEntry;
        PVOID LastEntry;
    } Segment;
};

typedef struct _RTL_IMAGE_MITIGATION_ASLR_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY ForceRelocateImages;
    union _RTL_IMAGE_MITIGATION_POLICY BottomUpRandomization;
    union _RTL_IMAGE_MITIGATION_POLICY HighEntropyRandomization;
};

typedef struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockNonMicrosoftSignedBinaries;
    union _RTL_IMAGE_MITIGATION_POLICY EnforceSigningOnModuleDependencies;
};

typedef struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisallowChildProcessCreation;
};

typedef struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY ControlFlowGuard;
    union _RTL_IMAGE_MITIGATION_POLICY StrictControlFlowGuard;
};

typedef struct _RTL_IMAGE_MITIGATION_DEP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY Dep;
};

typedef struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockDynamicCode;
};

typedef struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisableExtensionPoints;
};

typedef struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisableNonSystemFonts;
};

typedef struct _RTL_IMAGE_MITIGATION_HEAP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY TerminateOnHeapErrors;
};

typedef struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockRemoteImageLoads;
    union _RTL_IMAGE_MITIGATION_POLICY BlockLowLabelImageLoads;
    union _RTL_IMAGE_MITIGATION_POLICY PreferSystem32;
};

typedef struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilter;
    union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilterPlus;
    union _RTL_IMAGE_MITIGATION_POLICY EnableImportAddressFilter;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopStackPivot;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopCallerCheck;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopSimExec;
    WCHAR EafPlusModuleList[512];
};

typedef struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY Sehop;
};

typedef struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY StrictHandleChecks;
};

typedef struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockWin32kSystemCalls;
};

typedef struct _RTL_IMAGE_POLICY_METADATA {
    struct _IMAGE_POLICY_METADATA *PolicyMetadata;
    ULONG64 LBound;
    ULONG64 UBound;
};

typedef struct _RTL_LFG_RNG_STATE {
    ULONG SeedArray[55];
    ULONG Next;
    ULONG NextP;
};

typedef struct _RTL_MODULE_BASIC_INFO {
    PVOID ImageBase;
};

typedef struct _RTL_MODULE_EXTENDED_INFO {
    struct _RTL_MODULE_BASIC_INFO BasicInfo;
    ULONG ImageSize;
    USHORT FileNameOffset;
    UCHAR FullPathName[256];
};

typedef struct _RTL_PERTHREAD_CURDIR {
    struct _RTL_DRIVE_LETTER_CURDIR *CurrentDirectories;
    struct _UNICODE_STRING *ImageName;
    PVOID Environment;
};

typedef struct _RTL_PHYSICAL_MEMORY_INFO {
    enum RTL_PHYSICAL_MEMORY_POLICY Policy;
};

typedef struct _RTL_PROCESS_BACKTRACES {
    ULONG64 CommittedMemory;
    ULONG64 ReservedMemory;
    ULONG NumberOfBackTraceLookups;
    ULONG NumberOfBackTraces;
    struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
};

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL {
    ULONG ControlCode;
    ULONG ControlSize;
    UCHAR ControlData[1];
    struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
};

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION {
    PCHAR SymbolicBackTrace;
    ULONG TraceCount;
    USHORT Index;
    USHORT Depth;
    PVOID BackTrace[32];
};

typedef struct _RTL_PROCESS_HEAPS {
    ULONG NumberOfHeaps;
    struct _RTL_HEAP_INFORMATION Heaps[1];
};

typedef struct _RTL_PROCESS_LOCKS {
    ULONG NumberOfLocks;
    struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
};

typedef struct _RTL_PROCESS_LOCK_INFORMATION {
    PVOID Address;
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    PVOID OwningThread;
    LONG LockCount;
    ULONG ContentionCount;
    ULONG EntryCount;
    LONG RecursionCount;
    ULONG NumberOfWaitingShared;
    ULONG NumberOfWaitingExclusive;
};

typedef struct _RTL_PROCESS_MODULES {
    ULONG NumberOfModules;
    struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
};

typedef struct _RTL_PROCESS_MODULE_INFORMATION {
    PVOID Section;
    PVOID MappedBase;
    PVOID ImageBase;
    ULONG ImageSize;
    ULONG Flags;
    USHORT LoadOrderIndex;
    USHORT InitOrderIndex;
    USHORT LoadCount;
    USHORT OffsetToFileName;
    UCHAR FullPathName[256];
};

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX {
    USHORT NextOffset;
    struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
    ULONG ImageChecksum;
    ULONG TimeDateStamp;
    PVOID DefaultBase;
};

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS {
    ULONG SizeStruct;
    ULONG Option;
    UCHAR OptionData[1];
};

typedef struct _RTL_PROTECTED_ACCESS {
    ULONG DominateMask;
    ULONG DeniedProcessAccess;
    ULONG DeniedThreadAccess;
};

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO {
    ULONG UniqueProcessId;
    ULONG Flags;
    ULONG64 Buffer;
};

typedef struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS {
    PVOID Context;
    PLONG ReadMemoryRoutine;
    PLONG QueryInformationRoutine;
};

typedef struct _RTL_QUERY_REGISTRY_TABLE {
    PLONG QueryRoutine;
    ULONG Flags;
    PWCHAR Name;
    PVOID EntryContext;
    ULONG DefaultType;
    PVOID DefaultData;
    ULONG DefaultLength;
};

typedef struct _RTL_RB_TREE {
    struct _RTL_BALANCED_NODE *Root;
    UCHAR Encoded : 1;
    struct _RTL_BALANCED_NODE *Min;
};

typedef struct _RTL_RELATIVE_NAME_U {
    struct _UNICODE_STRING RelativeName;
    PVOID ContainingDirectory;
    struct _RTLP_CURDIR_REF *CurDirRef;
};

typedef struct _RTL_RESOURCE {
    struct _RTL_CRITICAL_SECTION CriticalSection;
    PVOID SharedSemaphore;
    ULONG NumberOfWaitingShared;
    PVOID ExclusiveSemaphore;
    ULONG NumberOfWaitingExclusive;
    LONG NumberOfActive;
    PVOID ExclusiveOwnerThread;
    ULONG Flags;
    struct _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
    VOID _RTL_RESOURCE;
    VOID _RTL_RESOURCE;
    struct _RTL_RESOURCE *operator=;
    struct _RTL_RESOURCE *operator=;
};

typedef struct _RTL_RETPOLINE_BINARY_INFO {
    LONG RetpolineStubsStartRva;
    ULONG CfgDispatchFunctionPtrRva;
    ULONG IATRva;
    PLONG ImportRvas;
    PULONG64 IAT;
    PVOID ImageBase;
    PULONG CheckFunction;
};

typedef struct _RTL_RETPOLINE_RELOCATION_INDEX {
    USHORT ImportRelocationSize;
    USHORT IndirectRelocationSize;
    USHORT SwitchJumpRelocationSize;
    USHORT StraddleType;
     <unnamed-type-StraddleReloc>;
    union {
        struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION Import;
        struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION Indir;
        struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION SwitchJump;
    } StraddleReloc;
};

typedef struct _RTL_RETPOLINE_ROUTINES {
    ULONG UnwindDataOffset;
    ULONG SwitchtableJump[16];
    ULONG CfgIndirectRax;
    ULONG NonCfgIndirectRax;
    ULONG ImportR10;
};

typedef struct _RTL_RVA_LIST {
    ULONG64 RvaCount;
    ULONG StateBitsPerRva;
    PUCHAR CompressedBuffer;
    ULONG64 CompressedBufferSize;
    struct _RTL_BITMAP_EX RvaStateBitMap;
    PULONG StateBitValueMap;
    PVOID ExtensionBuffer;
};

typedef struct _RTL_RVA_LIST_ITERATOR {
    ULONG CurrentRva;
    ULONG CurrentRvaIndex;
    ULONG CompressedRvaDataOffset;
};

typedef struct _RTL_RXACT_CONTEXT {
    PVOID RootRegistryKey;
    PVOID RXactKey;
    UCHAR HandlesValid;
    struct _RTL_RXACT_LOG *RXactLog;
};

typedef struct _RTL_RXACT_LOG {
    ULONG OperationCount;
    ULONG LogSize;
    ULONG LogSizeInUse;
    ULONG Alignment;
};

typedef struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE {
    ULONG Flags;
    ULONG MemoryTypeMask;
    ULONG NumaNode;
    PVOID PartitionHandle;
    ULONG64 Reserved[2];
};

typedef struct _RTL_SEGMENT_HEAP_PARAMETERS {
    USHORT Version;
    USHORT Size;
    ULONG Flags;
    struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE MemorySource;
    ULONG64 Reserved[4];
};

typedef struct _RTL_SPARSE_BITMAP_CTX {
    ULONG64 Lock;
    struct _RTL_SPARSE_BITMAP_RANGE **BitmapRanges;
    struct _RTL_BITMAP RangeArrayCommitStatus;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    ULONG RangeCount;
    ULONG RangeIndexLimit;
    ULONG BitsPerRange;
    ULONG RangeCountMax;
    ULONG RangeMetadataOffset;
    ULONG MetadataSizePerBit;
    ULONG DefaultBitsSet : 1;
    ULONG SparseRangeArray : 1;
    ULONG NoInternalLocking : 1;
    ULONG SpareFlags : 29;
};

typedef struct _RTL_SPARSE_BITMAP_PARAMETER {
    ULONG64 BitCountMax;
    ULONG MetadataSizePerBit;
    ULONG BitsPerRange;
    ULONG RangeCountMax;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    ULONG DefaultBitsSet : 1;
    ULONG SparseRangeArray : 1;
    ULONG NoInternalLocking : 1;
    ULONG SpareFlags : 29;
};

typedef struct _RTL_SPARSE_BITMAP_RANGE {
    ULONG64 Lock;
    struct _RTL_BITMAP RangeBitmap;
    struct _SINGLE_LIST_ENTRY Next;
};

typedef struct _RTL_SPARSE_BITMAP_RUN {
    ULONG StartingIndexLow;
    ULONG StartingIndexHigh;
    ULONG Length;
    PVOID Metadata;
};

typedef struct _RTL_SPLAY_LINKS {
    struct _RTL_SPLAY_LINKS *Parent;
    struct _RTL_SPLAY_LINKS *LeftChild;
    struct _RTL_SPLAY_LINKS *RightChild;
};

typedef struct _RTL_SRWLOCK {
    ULONG64 Locked : 1;
    ULONG64 Waiting : 1;
    ULONG64 Waking : 1;
    ULONG64 MultipleShared : 1;
    ULONG64 Shared : 60;
    ULONG64 Value;
    PVOID Ptr;
};

typedef struct _RTL_STACK_CONTEXT {
    ULONG NumberOfEntries;
    struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
};

typedef struct _RTL_STACK_CONTEXT_ENTRY {
    ULONG64 Address;
    ULONG64 Data;
};

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE {
    PVOID CommitBase;
    ULONG64 CommitSize;
    ULONG64 ReserveSize;
};

typedef struct _RTL_TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _TIME_FIELDS StandardStart;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _TIME_FIELDS DaylightStart;
    LONG DaylightBias;
};

typedef struct _RTL_TRACE_BLOCK {
    ULONG Magic;
    ULONG Count;
    ULONG Size;
    ULONG64 UserCount;
    ULONG64 UserSize;
    PVOID UserContext;
    struct _RTL_TRACE_BLOCK *Next;
    PVOID *Trace;
};

typedef struct _RTL_TRACE_DATABASE {
};

typedef struct _RTL_TRACE_ENUMERATE {
    struct _RTL_TRACE_DATABASE *Database;
    ULONG Index;
    struct _RTL_TRACE_BLOCK *Block;
};

typedef struct _RTL_UMS_COMPLETION_LIST {
    struct _SINGLE_LIST_ENTRY *ThreadListHead;
    PVOID CompletionEvent;
    ULONG CompletionFlags;
    struct _SINGLE_LIST_ENTRY InternalListHead;
};

typedef struct _RTL_UMS_CONTEXT {
    struct _SINGLE_LIST_ENTRY Link;
    struct _CONTEXT Context;
    PVOID Teb;
    PVOID UserContext;
    ULONG ScheduledThread : 1;
    ULONG Suspended : 1;
    ULONG VolatileContext : 1;
    ULONG Terminated : 1;
    ULONG DebugActive : 1;
    ULONG RunningOnSelfThread : 1;
    ULONG DenyRunningOnSelfThread : 1;
    LONG Flags;
    ULONG64 KernelUpdateLock : 2;
    ULONG64 PrimaryClientID : 62;
    ULONG64 ContextLock;
    struct _RTL_UMS_CONTEXT *PrimaryUmsContext;
    ULONG SwitchCount;
    ULONG KernelYieldCount;
    ULONG MixedYieldCount;
    ULONG YieldCount;
    VOID _RTL_UMS_CONTEXT;
    VOID _RTL_UMS_CONTEXT;
    struct _RTL_UMS_CONTEXT *operator=;
    struct _RTL_UMS_CONTEXT *operator=;
};

typedef struct _RTL_UMS_SCHEDULER_STARTUP_INFO {
    ULONG UmsVersion;
    struct _RTL_UMS_COMPLETION_LIST *CompletionList;
    PVOID SchedulerProc;
    PVOID SchedulerParam;
};

typedef struct _RTL_UNICODE_STRING_BUFFER {
    struct _UNICODE_STRING String;
    struct _RTL_BUFFER ByteBuffer;
    UCHAR MinimumStaticBufferForTerminalNul[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE {
    PVOID BaseAddress;
    ULONG64 SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE32 {
    ULONG BaseAddress;
    ULONG SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE64 {
    ULONG64 BaseAddress;
    ULONG64 SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS {
    USHORT Version;
    USHORT NodeNumber;
    PVOID ProcessSecurityDescriptor;
    PVOID ThreadSecurityDescriptor;
    PVOID ParentProcess;
    PVOID DebugPort;
    PVOID TokenHandle;
    PVOID JobHandle;
};

typedef struct _RTL_USER_PROCESS_INFORMATION {
    ULONG Length;
    PVOID Process;
    PVOID Thread;
    struct _CLIENT_ID ClientId;
    struct _SECTION_IMAGE_INFORMATION ImageInformation;
};

typedef struct _RTL_USER_PROCESS_INFORMATION64 {
    ULONG Length;
    LONG64 Process;
    LONG64 Thread;
    struct _CLIENT_ID64 ClientId;
    struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
};

typedef struct _RTL_USER_PROCESS_PARAMETERS {
    ULONG MaximumLength;
    ULONG Length;
    ULONG Flags;
    ULONG DebugFlags;
    PVOID ConsoleHandle;
    ULONG ConsoleFlags;
    PVOID StandardInput;
    PVOID StandardOutput;
    PVOID StandardError;
    struct _CURDIR CurrentDirectory;
    struct _UNICODE_STRING DllPath;
    struct _UNICODE_STRING ImagePathName;
    struct _UNICODE_STRING CommandLine;
    PVOID Environment;
    ULONG StartingX;
    ULONG StartingY;
    ULONG CountX;
    ULONG CountY;
    ULONG CountCharsX;
    ULONG CountCharsY;
    ULONG FillAttribute;
    ULONG WindowFlags;
    ULONG ShowWindowFlags;
    struct _UNICODE_STRING WindowTitle;
    struct _UNICODE_STRING DesktopInfo;
    struct _UNICODE_STRING ShellInfo;
    struct _UNICODE_STRING RuntimeData;
    struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
    ULONG64 EnvironmentSize;
    ULONG64 EnvironmentVersion;
    PVOID PackageDependencyData;
    ULONG ProcessGroupId;
    ULONG LoaderThreads;
    struct _UNICODE_STRING RedirectionDllName;
};

typedef struct _RTL_WORK_ON_BEHALF_TICKET_EX {
    struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
    ULONG Flags;
    ULONG CurrentThread : 1;
    ULONG Reserved1 : 31;
    ULONG Reserved2;
};

typedef struct _RemotableHandle {
    LONG fContext;
     __MIDL_IWinTypes_0009;
    union _RemotableHandle::__MIDL_IWinTypes_0009 u;
};

typedef struct _SCHANNEL_ALG {
    ULONG dwUse;
    ULONG Algid;
    ULONG cBits;
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _SCONTEXT_QUEUE {
    ULONG NumberOfObjects;
    struct {
        PVOID pad[2];
        PVOID userContext;
    } **ArrayOfObjects;
};

typedef struct _SCOPE_TABLE_AMD64 {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCOPE_TABLE_ARM {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCOPE_TABLE_ARM64 {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCRUB_DATA_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG MaximumIos;
    ULONG ObjectId[4];
    ULONG Reserved[25];
    UCHAR ResumeContext[816];
};

typedef struct _SCRUB_DATA_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG Status;
    ULONG64 ErrorFileOffset;
    ULONG64 ErrorLength;
    ULONG64 NumberOfBytesRepaired;
    ULONG64 NumberOfBytesFailed;
    ULONG64 InternalFileReference;
    USHORT ResumeContextLength;
    USHORT ParityExtentDataOffset;
    ULONG Reserved[9];
    ULONG64 NumberOfMetadataBytesProcessed;
    ULONG64 NumberOfDataBytesProcessed;
    ULONG64 TotalNumberOfMetadataBytesInUse;
    ULONG64 TotalNumberOfDataBytesInUse;
    UCHAR ResumeContext[816];
};

typedef struct _SCRUB_PARITY_EXTENT {
    LONG64 Offset;
    ULONG64 Length;
};

typedef struct _SCRUB_PARITY_EXTENT_DATA {
    USHORT Size;
    USHORT Flags;
    USHORT NumberOfParityExtents;
    USHORT MaximumNumberOfParityExtents;
    struct _SCRUB_PARITY_EXTENT ParityExtents[1];
};

typedef struct _SC_ACTION {
    enum _SC_ACTION_TYPE Type;
    ULONG Delay;
};

typedef struct _SC_NOTIFICATION_REGISTRATION {
};

typedef struct _SD_CHANGE_MACHINE_SID_INPUT {
    USHORT CurrentMachineSIDOffset;
    USHORT CurrentMachineSIDLength;
    USHORT NewMachineSIDOffset;
    USHORT NewMachineSIDLength;
};

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT {
    ULONG64 NumSDChangedSuccess;
    ULONG64 NumSDChangedFail;
    ULONG64 NumSDUnused;
    ULONG64 NumSDTotal;
    ULONG64 NumMftSDChangedSuccess;
    ULONG64 NumMftSDChangedFail;
    ULONG64 NumMftSDTotal;
};

typedef struct _SD_ENUM_SDS_ENTRY {
    ULONG Hash;
    ULONG SecurityId;
    ULONG64 Offset;
    ULONG Length;
    UCHAR Descriptor[1];
};

typedef struct _SD_ENUM_SDS_INPUT {
    ULONG64 StartingOffset;
    ULONG64 MaxSDEntriesToReturn;
};

typedef struct _SD_ENUM_SDS_OUTPUT {
    ULONG64 NextOffset;
    ULONG64 NumSDEntriesReturned;
    ULONG64 NumSDBytesReturned;
    struct _SD_ENUM_SDS_ENTRY SDEntry[1];
};

typedef struct _SD_GLOBAL_CHANGE_INPUT {
    ULONG Flags;
    ULONG ChangeType;
    struct _SD_CHANGE_MACHINE_SID_INPUT SdChange;
    struct _SD_QUERY_STATS_INPUT SdQueryStats;
    struct _SD_ENUM_SDS_INPUT SdEnumSds;
};

typedef struct _SD_GLOBAL_CHANGE_OUTPUT {
    ULONG Flags;
    ULONG ChangeType;
    struct _SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
    struct _SD_QUERY_STATS_OUTPUT SdQueryStats;
    struct _SD_ENUM_SDS_OUTPUT SdEnumSds;
};

typedef struct _SD_QUERY_STATS_INPUT {
    ULONG Reserved;
};

typedef struct _SD_QUERY_STATS_OUTPUT {
    ULONG64 SdsStreamSize;
    ULONG64 SdsAllocationSize;
    ULONG64 SiiStreamSize;
    ULONG64 SiiAllocationSize;
    ULONG64 SdhStreamSize;
    ULONG64 SdhAllocationSize;
    ULONG64 NumSDTotal;
    ULONG64 NumSDUnused;
};

typedef struct _SECTIONBASICINFO {
    PVOID BaseAddress;
    ULONG AllocationAttributes;
    union _LARGE_INTEGER MaximumSize;
};

typedef struct _SECTION_IMAGE_INFORMATION {
    PVOID TransferAddress;
    ULONG ZeroBits;
    ULONG64 MaximumStackSize;
    ULONG64 CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlusNativeReady : 1;
    UCHAR ComPlusILOnly : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR ImageMappedFlat : 1;
    UCHAR BaseBelow4gb : 1;
    UCHAR ComPlusPrefer32bit : 1;
    UCHAR Reserved : 2;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_IMAGE_INFORMATION32 {
    ULONG TransferAddress;
    ULONG ZeroBits;
    ULONG MaximumStackSize;
    ULONG CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlus : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR Reserved : 6;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_IMAGE_INFORMATION64 {
    ULONG64 TransferAddress;
    ULONG ZeroBits;
    ULONG64 MaximumStackSize;
    ULONG64 CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlus : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR Reserved : 6;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_INTERNAL_IMAGE_INFORMATION {
    struct _SECTION_IMAGE_INFORMATION SectionInformation;
    ULONG ExtendedFlags;
    ULONG ImageExportSuppressionEnabled : 1;
    ULONG Reserved : 31;
};

typedef struct _SECURITY_ATTRIBUTES {
    ULONG nLength;
    PVOID lpSecurityDescriptor;
    LONG bInheritHandle;
};

typedef struct _SECURITY_CAPABILITIES {
    PVOID AppContainerSid;
    struct _SID_AND_ATTRIBUTES *Capabilities;
    ULONG CapabilityCount;
    ULONG Reserved;
};

typedef struct _SECURITY_DESCRIPTOR {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    PVOID Owner;
    PVOID Group;
    struct _ACL *Sacl;
    struct _ACL *Dacl;
};

typedef struct _SECURITY_DESCRIPTOR_RELATIVE {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    ULONG Owner;
    ULONG Group;
    ULONG Sacl;
    ULONG Dacl;
};

typedef struct _SECURITY_OBJECT_AI_PARAMS {
    ULONG Size;
    ULONG ConstraintMask;
};

typedef struct _SECURITY_QUALITY_OF_SERVICE {
    ULONG Length;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    UCHAR ContextTrackingMode;
    UCHAR EffectiveOnly;
};

typedef struct _SECURITY_SEED_AND_LENGTH {
    UCHAR Length;
    UCHAR Seed;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A {
    PUCHAR User;
    ULONG UserLength;
    PUCHAR Domain;
    ULONG DomainLength;
    PUCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_W {
    PWCHAR User;
    ULONG UserLength;
    PWCHAR Domain;
    ULONG DomainLength;
    PWCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION {
    ULONG64 SegmentReserveSize;
    ULONG64 SegmentCommitSize;
    ULONG64 SegmentCount;
    ULONG64 AllocatedSize;
    ULONG64 LargeAllocReserveSize;
    ULONG64 LargeAllocCommitSize;
};

typedef struct _SEMAPHORE_BASIC_INFORMATION {
    LONG CurrentCount;
    LONG MaximumCount;
};

typedef struct _SERVERSILO_BASIC_INFORMATION {
    ULONG ServiceSessionId;
    enum _SERVERSILO_STATE State;
    LONG ExitStatus;
};

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA {
    ULONG dwReason;
    PCHAR pszComment;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW {
    ULONG dwReason;
    PWCHAR pszComment;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM {
     <unnamed-type-u>;
    union {
        struct SERVICE_TRIGGER_CUSTOM_STATE_ID CustomStateId;
         <unnamed-type-s>;
        struct {
            ULONG DataOffset;
            UCHAR Data[1];
        } s;
    } u;
};

typedef struct _SERVICE_DELAYED_AUTO_START_INFO {
    LONG fDelayedAutostart;
};

typedef struct _SERVICE_DESCRIPTIONA {
    PCHAR lpDescription;
};

typedef struct _SERVICE_DESCRIPTIONW {
    PWCHAR lpDescription;
};

typedef struct _SERVICE_FAILURE_ACTIONSA {
    ULONG dwResetPeriod;
    PCHAR lpRebootMsg;
    PCHAR lpCommand;
    ULONG cActions;
    struct _SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_FAILURE_ACTIONSW {
    ULONG dwResetPeriod;
    PWCHAR lpRebootMsg;
    PWCHAR lpCommand;
    ULONG cActions;
    struct _SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG {
    LONG fFailureActionsOnNonCrashFailures;
};

typedef struct _SERVICE_LAUNCH_PROTECTED_INFO {
    ULONG dwLaunchProtected;
};

typedef struct _SERVICE_NOTIFY_1 {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_NOTIFY_2A {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
    ULONG dwNotificationTriggered;
    PCHAR pszServiceNames;
};

typedef struct _SERVICE_NOTIFY_2W {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
    ULONG dwNotificationTriggered;
    PWCHAR pszServiceNames;
};

typedef struct _SERVICE_PREFERRED_NODE_INFO {
    USHORT usPreferredNode;
    UCHAR fDelete;
};

typedef struct _SERVICE_PRESHUTDOWN_INFO {
    ULONG dwPreshutdownTimeout;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA {
    PCHAR pmszRequiredPrivileges;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW {
    PWCHAR pmszRequiredPrivileges;
};

typedef struct _SERVICE_SID_INFO {
    ULONG dwServiceSidType;
};

typedef struct _SERVICE_START_REASON {
    ULONG dwReason;
};

typedef struct _SERVICE_STATUS {
    ULONG dwServiceType;
    ULONG dwCurrentState;
    ULONG dwControlsAccepted;
    ULONG dwWin32ExitCode;
    ULONG dwServiceSpecificExitCode;
    ULONG dwCheckPoint;
    ULONG dwWaitHint;
};

typedef struct _SERVICE_STATUS_PROCESS {
    ULONG dwServiceType;
    ULONG dwCurrentState;
    ULONG dwControlsAccepted;
    ULONG dwWin32ExitCode;
    ULONG dwServiceSpecificExitCode;
    ULONG dwCheckPoint;
    ULONG dwWaitHint;
    ULONG dwProcessId;
    ULONG dwServiceFlags;
};

typedef struct _SERVICE_TABLE_ENTRYA {
    PCHAR lpServiceName;
    PVOID lpServiceProc;
};

typedef struct _SERVICE_TABLE_ENTRYW {
    PWCHAR lpServiceName;
    PVOID lpServiceProc;
};

typedef struct _SERVICE_TIMECHANGE_INFO {
    union _LARGE_INTEGER liNewTime;
    union _LARGE_INTEGER liOldTime;
};

typedef struct _SERVICE_TRIGGER {
    ULONG dwTriggerType;
    ULONG dwAction;
    struct _GUID *pTriggerSubtype;
    ULONG cDataItems;
    struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM *pDataItems;
};

typedef struct _SERVICE_TRIGGER_INFO {
    ULONG cTriggers;
    struct _SERVICE_TRIGGER *pTriggers;
    PUCHAR pReserved;
};

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM {
    ULONG dwDataType;
    ULONG cbData;
    PUCHAR pData;
};

typedef struct _SETJMP_FLOAT128 {
    ULONG64 Part[2];
};

typedef struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT {
    ULONG Flags;
    ULONG AlignmentShift;
    ULONG64 FileOffsetToAlign;
    ULONG FallbackAlignmentShift;
};

typedef struct _SET_PURGE_FAILURE_MODE_INPUT {
    ULONG Flags;
};

typedef struct _SE_ACCESS_REPLY {
    ULONG Size;
    ULONG ResultListCount;
    PULONG GrantedAccess;
    PLONG AccessStatus;
    struct _ACCESS_REASONS *AccessReason;
    struct _PRIVILEGE_SET **Privileges;
};

typedef struct _SE_ACCESS_REQUEST {
    ULONG Size;
    struct _SE_SECURITY_DESCRIPTOR *SeSecurityDescriptor;
    ULONG DesiredAccess;
    ULONG PreviouslyGrantedAccess;
    PVOID PrincipalSelfSid;
    struct _GENERIC_MAPPING *GenericMapping;
    ULONG ObjectTypeListCount;
    struct _OBJECT_TYPE_LIST *ObjectTypeList;
};

typedef struct _SE_AUDIT_INFO {
    ULONG Size;
    enum _AUDIT_EVENT_TYPE AuditType;
    enum _SE_AUDIT_OPERATION AuditOperation;
    ULONG AuditFlags;
    struct _UNICODE_STRING SubsystemName;
    struct _UNICODE_STRING ObjectTypeName;
    struct _UNICODE_STRING ObjectName;
    PVOID HandleId;
    struct _GUID *TransactionId;
    struct _LUID *OperationId;
    UCHAR ObjectCreation;
    UCHAR GenerateOnClose;
};

typedef struct _SE_IMPERSONATION_STATE {
    PVOID Token;
    UCHAR CopyOnOpen;
    UCHAR EffectiveOnly;
    enum _SECURITY_IMPERSONATION_LEVEL Level;
};

typedef struct _SE_LEARNING_MODE_USER_OBJECT_DATA {
    ULONG Cookie;
    struct _UNICODE_STRING *ObjectType;
    struct _UNICODE_STRING *ObjectName;
};

typedef struct _SE_PACKAGE_CAPABILITY_INFO {
    ULONG Remaining;
    ULONG PackageGrantedAccess;
    ULONG CapabilityGrantedAccess;
    ULONG UserGroupsRemaining;
    ULONG AllAppPackagesSkippedAccess;
    UCHAR PackagesPresent;
    UCHAR PackageMatch;
    UCHAR CapabilityMatch;
    UCHAR LogPermissiveFailure;
    UCHAR AllAppPackagesSkipped;
};

typedef struct _SE_SECURITY_DESCRIPTOR {
    ULONG Size;
    ULONG Flags;
    PVOID SecurityDescriptor;
};

typedef struct _SE_SET_FILE_CACHE_INFORMATION {
    ULONG Size;
    struct _UNICODE_STRING CatalogDirectoryPath;
};

typedef struct _SE_TOKEN_USER {
    struct _TOKEN_USER TokenUser;
    struct _SID_AND_ATTRIBUTES User;
    struct _SID Sid;
    UCHAR Buffer[68];
};

typedef struct _SHARED_VIRTUAL_DISK_SUPPORT {
    enum _SharedVirtualDiskSupportType SharedVirtualDiskSupport;
    enum _SharedVirtualDiskHandleState HandleState;
};

typedef struct _SHELLDETAILS {
    LONG fmt;
    LONG cxChar;
    struct _STRRET str;
};

typedef struct _SHITEMID {
    USHORT cb;
    UCHAR abID[1];
};

typedef struct _SHORT_SIZEDARR {
    ULONG clSize;
    PWCHAR pData;
};

typedef struct _SHRINK_VOLUME_INFORMATION {
    enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
    ULONG64 Flags;
    LONG64 NewNumberOfSectors;
};

typedef struct _SHUFFLE_FILE_DATA {
    LONG64 StartingOffset;
    LONG64 Length;
    ULONG Flags;
};

typedef struct _SID {
    UCHAR Revision;
    UCHAR SubAuthorityCount;
    struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    ULONG SubAuthority[1];
};

typedef struct _SID_AND_ATTRIBUTES {
    PVOID Sid;
    ULONG Attributes;
};

typedef struct _SID_AND_ATTRIBUTES_HASH {
    ULONG SidCount;
    struct _SID_AND_ATTRIBUTES *SidAttr;
    ULONG64 Hash[32];
};

typedef struct _SID_IDENTIFIER_AUTHORITY {
    UCHAR Value[6];
};

typedef struct _SILOOBJECT_BASIC_INFORMATION {
    ULONG SiloId;
    ULONG SiloParentId;
    ULONG NumberOfProcesses;
    UCHAR IsInServerSilo;
    UCHAR Reserved[3];
};

typedef struct _SILOOBJECT_ROOT_DIRECTORY {
    ULONG ControlFlags;
    struct _UNICODE_STRING Path;
};

typedef struct _SILO_USER_SHARED_DATA {
    ULONG ServiceSessionId;
    ULONG ActiveConsoleId;
    LONG64 ConsoleSessionForegroundProcessId;
    enum _NT_PRODUCT_TYPE NtProductType;
    ULONG SuiteMask;
    ULONG SharedUserSessionId;
    UCHAR IsMultiSessionSku;
    WCHAR NtSystemRoot[260];
    USHORT UserModeGlobalLogger[16];
};

typedef struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY *Next;
};

typedef struct _SINGLE_LIST_ENTRY32 {
    ULONG Next;
};

typedef struct _SI_COPYFILE {
    ULONG SourceFileNameLength;
    ULONG DestinationFileNameLength;
    ULONG Flags;
    WCHAR FileNameBuffer[1];
};

typedef struct _SLIST_ENTRY {
    struct _SLIST_ENTRY *Next;
};

typedef struct _SL_APPX_CACHE {
    ULONG Version;
    ULONG Flags;
    ULONG DataSize;
    ULONG64 DataCheckSum;
    struct _SL_APPX_CACHE_VALUE_DESCRIPTOR Descriptors[1];
};

typedef struct _SL_APPX_CACHE_VALUE_DESCRIPTOR {
    UCHAR HashedName[32];
    ULONG64 Expiration;
    ULONG DataSize;
    UCHAR Data[1];
};

typedef struct _SL_HWID_DEVICE_INFO {
    ULONG SizeBytes;
    UCHAR Type;
    UCHAR DeviceRemovalPolicy;
    UCHAR AuthenticationStatus;
    UCHAR Disposition;
    ULONG DeviceNodeLevel;
    struct _GUID Guid;
    UCHAR Data[1];
};

typedef struct _SL_KMEM_CACHE {
    ULONG TotalSize;
    ULONG SizeOfData;
    ULONG SignatureSize;
    ULONG Flags;
    ULONG Version;
    struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
};

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR {
    USHORT Size;
    USHORT NameLength;
    USHORT Type;
    USHORT DataLength;
    ULONG Attributes;
    ULONG Reserved;
    WCHAR Name[1];
};

typedef struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
};

typedef struct _SPARSE_OVERALLOCATE_DATA {
    ULONG SparseOverAllocateSize;
};

typedef struct _SRP_ENTERPRISE_CONTEXT {
    USHORT Version;
    USHORT Reserved;
    ULONG AllowedEnterpriseIdCount;
    ULONG64 PolicyFlags;
    struct _UNICODE_STRING AllowedEnterpriseIds[1];
};

typedef struct _SSL_ECCKEY_BLOB {
    ULONG dwCurveType;
    ULONG cbKey;
};

typedef struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwErrorLevel;
    ULONG dwErrorCategory;
    ULONG dwReserved;
    WCHAR wszErrorText[256];
};

typedef struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwReserved;
    PWCHAR pwszServerName;
    PCHAR rgpszHpkpValue[2];
};

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwReserved;
    PWCHAR pwszServerName;
};

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    LONG lError;
    WCHAR wszErrorText[512];
};

typedef struct _STARTUPINFOA {
    ULONG cb;
    PCHAR lpReserved;
    PCHAR lpDesktop;
    PCHAR lpTitle;
    ULONG dwX;
    ULONG dwY;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwXCountChars;
    ULONG dwYCountChars;
    ULONG dwFillAttribute;
    ULONG dwFlags;
    USHORT wShowWindow;
    USHORT cbReserved2;
    PUCHAR lpReserved2;
    PVOID hStdInput;
    PVOID hStdOutput;
    PVOID hStdError;
};

typedef struct _STARTUPINFOEXA {
    struct _STARTUPINFOA StartupInfo;
    struct _PROC_THREAD_ATTRIBUTE_LIST *lpAttributeList;
};

typedef struct _STARTUPINFOEXW {
    struct _STARTUPINFOW StartupInfo;
    struct _PROC_THREAD_ATTRIBUTE_LIST *lpAttributeList;
};

typedef struct _STARTUPINFOW {
    ULONG cb;
    PWCHAR lpReserved;
    PWCHAR lpDesktop;
    PWCHAR lpTitle;
    ULONG dwX;
    ULONG dwY;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwXCountChars;
    ULONG dwYCountChars;
    ULONG dwFillAttribute;
    ULONG dwFlags;
    USHORT wShowWindow;
    USHORT cbReserved2;
    PUCHAR lpReserved2;
    PVOID hStdInput;
    PVOID hStdOutput;
    PVOID hStdError;
};

typedef struct _STGMEDIUM_UNION {
    ULONG tymed;
     __MIDL_IAdviseSink_0003;
    union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY {
    ULONG EntryLength;
    ULONG DependencyTypeFlags;
    ULONG ProviderSpecificFlags;
    struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY {
    ULONG EntryLength;
    ULONG DependencyTypeFlags;
    ULONG ProviderSpecificFlags;
    struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
    ULONG AncestorLevel;
    ULONG HostVolumeNameOffset;
    ULONG HostVolumeNameSize;
    ULONG DependentVolumeNameOffset;
    ULONG DependentVolumeNameSize;
    ULONG RelativePathOffset;
    ULONG RelativePathSize;
    ULONG DependentDeviceNameOffset;
    ULONG DependentDeviceNameSize;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST {
    ULONG RequestLevel;
    ULONG RequestFlags;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE {
    ULONG ResponseLevel;
    ULONG NumberEntries;
    struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY Lev1Depends[0];
    struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY Lev2Depends[0];
};

typedef struct _STORAGE_RESERVE_AREA_DEFINITION {
    enum _STORAGE_RESERVE_ID Id;
    ULONG Flags;
    LONG64 SpaceGuarantee;
};

typedef struct _STORAGE_RESERVE_AREA_INFO {
    enum _STORAGE_RESERVE_ID Id;
    ULONG Flags;
    LONG64 SpaceGuarantee;
    LONG64 SpaceUsed;
};

typedef struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER {
    ULONG Flags;
    ULONG StreamId;
};

typedef struct _STREAMS_QUERY_ID_OUTPUT_BUFFER {
    ULONG StreamId;
};

typedef struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER {
    ULONG OptimalWriteSize;
    ULONG StreamGranularitySize;
    ULONG StreamIdMin;
    ULONG StreamIdMax;
};

typedef struct _STREAM_EXTENT_ENTRY {
    ULONG Flags;
     <unnamed-type-ExtentInformation>;
    union {
        struct RETRIEVAL_POINTERS_BUFFER RetrievalPointers;
    } ExtentInformation;
};

typedef struct _STREAM_INFORMATION_ENTRY {
    ULONG Version;
    ULONG Flags;
     _StreamInformation;
    union _STREAM_INFORMATION_ENTRY::_StreamInformation StreamInformation;
};

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _STREAM_LAYOUT_ENTRY {
    ULONG Version;
    ULONG NextStreamOffset;
    ULONG Flags;
    ULONG ExtentInformationOffset;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG StreamInformationOffset;
    ULONG AttributeTypeCode;
    ULONG AttributeFlags;
    ULONG StreamIdentifierLength;
    WCHAR StreamIdentifier[1];
};

typedef struct _STRING {
    USHORT Length;
    USHORT MaximumLength;
    PCHAR Buffer;
};

typedef struct _STRING32 {
    USHORT Length;
    USHORT MaximumLength;
    ULONG Buffer;
};

typedef struct _STRING64 {
    USHORT Length;
    USHORT MaximumLength;
    ULONG64 Buffer;
};

typedef struct _STRRET {
    ULONG uType;
    PWCHAR pOleStr;
    ULONG uOffset;
    CHAR cStr[260];
};

typedef struct _SUBJECT {
    PVOID TokenHandle;
};

typedef struct _SUPPORTED_OS_INFO {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _SYSDBG_BUS_DATA {
    ULONG Address;
    PVOID Buffer;
    ULONG Request;
    enum _BUS_DATA_TYPE BusDataType;
    ULONG BusNumber;
    ULONG SlotNumber;
};

typedef struct _SYSDBG_CONTROL_SPACE {
    ULONG64 Address;
    PVOID Buffer;
    ULONG Request;
    ULONG Processor;
};

typedef struct _SYSDBG_IO_SPACE {
    ULONG64 Address;
    PVOID Buffer;
    ULONG Request;
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    ULONG AddressSpace;
};

typedef struct _SYSDBG_LIVEDUMP_CONTROL {
    ULONG Version;
    ULONG BugCheckCode;
    ULONG64 BugCheckParam1;
    ULONG64 BugCheckParam2;
    ULONG64 BugCheckParam3;
    ULONG64 BugCheckParam4;
    PVOID DumpFileHandle;
    PVOID CancelEventHandle;
    union _SYSDBG_LIVEDUMP_CONTROL_FLAGS Flags;
    union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES AddPagesControl;
};

typedef struct _SYSDBG_MSR {
    ULONG Msr;
    ULONG64 Data;
};

typedef struct _SYSDBG_PHYSICAL {
    union _LARGE_INTEGER Address;
    PVOID Buffer;
    ULONG Request;
};

typedef struct _SYSDBG_TRIAGE_DUMP {
    ULONG Flags;
    ULONG BugCheckCode;
    ULONG64 BugCheckParam1;
    ULONG64 BugCheckParam2;
    ULONG64 BugCheckParam3;
    ULONG64 BugCheckParam4;
    ULONG ProcessHandles;
    ULONG ThreadHandles;
    PVOID *Handles;
};

typedef struct _SYSDBG_VIRTUAL {
    PVOID Address;
    PVOID Buffer;
    ULONG Request;
};

typedef struct _SYSTEMTIME {
    USHORT wYear;
    USHORT wMonth;
    USHORT wDayOfWeek;
    USHORT wDay;
    USHORT wHour;
    USHORT wMinute;
    USHORT wSecond;
    USHORT wMilliseconds;
};

typedef struct _SYSTEM_ACCESS_FILTER_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ACPI_AUDIT_INFORMATION {
    ULONG RsdpCount;
    ULONG SameRsdt : 1;
    ULONG SlicPresent : 1;
    ULONG SlicDifferent : 1;
};

typedef struct _SYSTEM_ACTIVITY_MODERATION_INFO {
    struct _UNICODE_STRING Identifier;
    enum _SYSTEM_ACTIVITY_MODERATION_STATE ModerationState;
    enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE AppType;
};

typedef struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS {
    PVOID UserKeyHandle;
};

typedef struct _SYSTEM_ALARM_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_BASIC_INFORMATION {
    ULONG Reserved;
    ULONG TimerResolution;
    ULONG PageSize;
    ULONG NumberOfPhysicalPages;
    ULONG LowestPhysicalPageNumber;
    ULONG HighestPhysicalPageNumber;
    ULONG AllocationGranularity;
    ULONG64 MinimumUserModeAddress;
    ULONG64 MaximumUserModeAddress;
    ULONG64 ActiveProcessorsAffinityMask;
    CHAR NumberOfProcessors;
};

typedef struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION {
    ULONG64 AvailablePages;
    ULONG64 CommittedPages;
    ULONG64 CommitLimit;
    ULONG64 PeakCommitment;
};

typedef struct _SYSTEM_BIGPOOL_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NonPaged : 1;
    ULONG64 SizeInBytes;
    UCHAR Tag[4];
    ULONG TagUlong;
};

typedef struct _SYSTEM_BIGPOOL_INFORMATION {
    ULONG Count;
    struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
};

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION {
    struct _GUID BootIdentifier;
    enum _FIRMWARE_TYPE FirmwareType;
    ULONG64 BootFlags;
    ULONG64 DbgMenuOsSelection : 1;
    ULONG64 DbgHiberBoot : 1;
    ULONG64 DbgSoftBoot : 1;
    ULONG64 DbgMeasuredLaunch : 1;
    ULONG64 DbgMeasuredLaunchCapable : 1;
};

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1 {
    struct _GUID BootIdentifier;
    enum _FIRMWARE_TYPE FirmwareType;
};

typedef struct _SYSTEM_BOOT_GRAPHICS_INFORMATION {
    union _LARGE_INTEGER FrameBuffer;
    ULONG Width;
    ULONG Height;
    ULONG PixelStride;
    ULONG Flags;
    enum _SYSTEM_PIXEL_FORMAT Format;
    ULONG DisplayRotation;
};

typedef struct _SYSTEM_BOOT_LOGO_INFORMATION {
    ULONG Flags;
    ULONG BitmapOffset;
};

typedef struct _SYSTEM_CALL_COUNT_INFORMATION {
    ULONG Length;
    ULONG NumberOfTables;
};

typedef struct _SYSTEM_CALL_TIME_INFORMATION {
    ULONG Length;
    ULONG TotalCalls;
    union _LARGE_INTEGER TimeOfCalls[1];
};

typedef struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION {
    ULONG Options;
    ULONG HVCIOptions;
    ULONG64 Version;
    struct _GUID PolicyGuid;
};

typedef struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION {
    PVOID FileHandle;
    ULONG ImageSize;
    PVOID Image;
};

typedef struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION {
    PVOID ImageFile;
    ULONG Type;
};

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION {
    ULONG Length;
    ULONG CodeIntegrityOptions;
};

typedef struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION {
    ULONG Flags;
    ULONG Locked : 1;
    ULONG UnlockApplied : 1;
    ULONG UnlockIdValid : 1;
    ULONG Reserved : 29;
    UCHAR UnlockId[32];
};

typedef struct _SYSTEM_CONSOLE_INFORMATION {
    ULONG DriverLoaded : 1;
    ULONG Spare : 31;
};

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION {
    ULONG ContextSwitches;
    ULONG FindAny;
    ULONG FindLast;
    ULONG FindIdeal;
    ULONG IdleAny;
    ULONG IdleCurrent;
    ULONG IdleLast;
    ULONG IdleIdeal;
    ULONG PreemptAny;
    ULONG PreemptCurrent;
    ULONG PreemptLast;
    ULONG SwitchToIdle;
};

typedef struct _SYSTEM_CPU_SET_INFORMATION {
    ULONG Size;
    enum _CPU_SET_INFORMATION_TYPE Type;
    struct {
        ULONG Id;
        USHORT Group;
        UCHAR LogicalProcessorIndex;
        UCHAR CoreIndex;
        UCHAR LastLevelCacheIndex;
        UCHAR NumaNodeIndex;
        UCHAR EfficiencyClass;
        UCHAR AllFlags;
        UCHAR Parked : 1;
        UCHAR Allocated : 1;
        UCHAR AllocatedToTargetProcess : 1;
        UCHAR RealTime : 1;
        UCHAR ReservedFlags : 4;
        ULONG Reserved;
        UCHAR SchedulingClass;
        ULONG64 AllocationTag;
    } CpuSet;
};

typedef struct _SYSTEM_CPU_SET_TAG_INFORMATION {
    ULONG64 Tag;
    ULONG64 CpuSets[1];
};

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION {
    enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
};

typedef struct _SYSTEM_DEVICE_DATA_INFORMATION {
    struct _UNICODE_STRING DeviceId;
    struct _UNICODE_STRING DataName;
    ULONG DataType;
    ULONG DataBufferLength;
    PVOID DataBuffer;
};

typedef struct _SYSTEM_DEVICE_INFORMATION {
    ULONG NumberOfDisks;
    ULONG NumberOfFloppies;
    ULONG NumberOfCdRoms;
    ULONG NumberOfTapes;
    ULONG NumberOfSerialPorts;
    ULONG NumberOfParallelPorts;
};

typedef struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION {
    UCHAR DmaGuardPolicyEnabled;
};

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION {
    ULONG Spare;
    ULONG DpcQueueDepth;
    ULONG MinimumDpcRate;
    ULONG AdjustDpcThreshold;
    ULONG IdealDpcRate;
};

typedef struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION {
    PVOID ElamDriverFile;
};

typedef struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION {
    UCHAR EnclaveLaunchSigner[32];
};

typedef struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION {
    UCHAR Enabled;
};

typedef struct _SYSTEM_ENTROPY_TIMING_INFORMATION {
    PVOID EntropyRoutine;
    PVOID InitializationRoutine;
    PVOID InitializationContext;
};

typedef struct _SYSTEM_ERROR_PORT_TIMEOUTS {
    ULONG StartTimeout;
    ULONG CommTimeout;
};

typedef struct _SYSTEM_EXCEPTION_INFORMATION {
    ULONG AlignmentFixupCount;
    ULONG ExceptionDispatchCount;
    ULONG FloatingEmulationCount;
    ULONG ByteWordEmulationCount;
};

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION {
    struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID Win32StartAddress;
    PVOID TebBase;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
    ULONG64 Reserved4;
};

typedef struct _SYSTEM_FILECACHE_INFORMATION {
    ULONG64 CurrentSize;
    ULONG64 PeakSize;
    ULONG PageFaultCount;
    ULONG64 MinimumWorkingSet;
    ULONG64 MaximumWorkingSet;
    ULONG64 CurrentSizeIncludingTransitionInPages;
    ULONG64 PeakSizeIncludingTransitionInPages;
    ULONG TransitionRePurposeCount;
    ULONG Flags;
};

typedef struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION {
    struct _UNICODE_STRING FirmwarePartition;
};

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER {
    ULONG ProviderSignature;
    UCHAR Register;
    PLONG FirmwareTableHandler;
    PVOID DriverObject;
};

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION {
    ULONG ProviderSignature;
    enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
    ULONG TableID;
    ULONG TableBufferLength;
    UCHAR TableBuffer[1];
};

typedef struct _SYSTEM_FLAGS_INFORMATION {
    ULONG Flags;
};

typedef struct _SYSTEM_FLUSH_INFORMATION {
    ULONG SupportedFlushMethods;
    ULONG ProcessorCacheFlushSize;
    ULONG64 SystemFlushCapabilities;
    ULONG64 Reserved[2];
};

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION {
    struct _UNICODE_STRING DriverName;
    PVOID ImageAddress;
    PVOID SectionPointer;
    PVOID EntryPoint;
    struct _IMAGE_EXPORT_DIRECTORY *ExportSectionPointer;
    ULONG ImageLength;
};

typedef struct _SYSTEM_HANDLE_INFORMATION {
    ULONG NumberOfHandles;
    struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
};

typedef struct _SYSTEM_HANDLE_INFORMATION_EX {
    ULONG64 NumberOfHandles;
    ULONG64 Reserved;
    struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
};

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO {
    USHORT UniqueProcessId;
    USHORT CreatorBackTraceIndex;
    UCHAR ObjectTypeIndex;
    UCHAR HandleAttributes;
    USHORT HandleValue;
    PVOID Object;
    ULONG GrantedAccess;
};

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX {
    PVOID Object;
    ULONG64 UniqueProcessId;
    ULONG64 HandleValue;
    ULONG GrantedAccess;
    USHORT CreatorBackTraceIndex;
    USHORT ObjectTypeIndex;
    ULONG HandleAttributes;
    ULONG Reserved;
};

typedef struct _SYSTEM_HIBERFILE_INFORMATION {
    ULONG NumberOfMcbPairs;
    union _LARGE_INTEGER Mcb[1];
};

typedef struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE {
    USHORT ImageNameLength;
    WCHAR ImageName[1];
};

typedef struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION {
    struct _HV_DETAILS HvVendorAndMaxFunction;
    struct _HV_DETAILS HypervisorInterface;
    struct _HV_DETAILS HypervisorVersion;
    struct _HV_DETAILS HvFeatures;
    struct _HV_DETAILS HwFeatures;
    struct _HV_DETAILS EnlightenmentInfo;
    struct _HV_DETAILS ImplementationLimits;
};

typedef struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION {
    ULONG NumberOfLogicalProcessors;
    ULONG NumberOfCores;
};

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION {
    UCHAR HypervisorConnected;
    UCHAR HypervisorDebuggingEnabled;
    UCHAR HypervisorPresent;
    UCHAR Spare0[5];
    ULONG64 EnabledEnlightenments;
};

typedef struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION {
    PVOID HypervisorSharedUserVa;
};

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION {
    ULONG FlagsToEnable;
    ULONG FlagsToDisable;
};

typedef struct _SYSTEM_INFO {
    ULONG dwOemId;
    USHORT wProcessorArchitecture;
    USHORT wReserved;
    ULONG dwPageSize;
    PVOID lpMinimumApplicationAddress;
    PVOID lpMaximumApplicationAddress;
    ULONG64 dwActiveProcessorMask;
    ULONG dwNumberOfProcessors;
    ULONG dwProcessorType;
    ULONG dwAllocationGranularity;
    USHORT wProcessorLevel;
    USHORT wProcessorRevision;
};

typedef struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION {
    ULONG Gsiv;
    USHORT Group;
    ULONG64 CpuSets;
};

typedef struct _SYSTEM_INTERRUPT_INFORMATION {
    ULONG ContextSwitches;
    ULONG DpcCount;
    ULONG DpcRate;
    ULONG TimeIncrement;
    ULONG DpcBypassCount;
    ULONG ApcBypassCount;
};

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT {
    ULONG Gsiv;
    UCHAR ControllerInterrupt;
    UCHAR EdgeInterrupt;
    UCHAR IsPrimaryInterrupt;
    struct _GROUP_AFFINITY TargetAffinity;
};

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT {
    ULONG Enabled : 1;
    ULONG Reserved : 31;
    ULONG AsULONG;
};

typedef struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION {
    UCHAR SecureKernelRunning : 1;
    UCHAR HvciEnabled : 1;
    UCHAR HvciStrictMode : 1;
    UCHAR DebugEnabled : 1;
    UCHAR FirmwarePageProtection : 1;
    UCHAR EncryptionKeyAvailable : 1;
    UCHAR SpareFlags : 2;
    UCHAR TrustletRunning : 1;
    UCHAR HvciDisableAllowed : 1;
    UCHAR SpareFlags2 : 6;
    UCHAR Spare0[6];
    ULONG64 Spare1;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_FLAGS {
    UCHAR KernelDebuggerIgnoreUmExceptions;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION {
    UCHAR KernelDebuggerEnabled;
    UCHAR KernelDebuggerNotPresent;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX {
    UCHAR DebuggerAllowed;
    UCHAR DebuggerEnabled;
    UCHAR DebuggerPresent;
};

typedef struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION {
     <unnamed-type-KvaShadowFlags>;
    struct {
        ULONG KvaShadowEnabled : 1;
        ULONG KvaShadowUserGlobal : 1;
        ULONG KvaShadowPcid : 1;
        ULONG KvaShadowInvpcid : 1;
        ULONG KvaShadowRequired : 1;
        ULONG KvaShadowRequiredAvailable : 1;
        ULONG Reserved : 26;
    } KvaShadowFlags;
};

typedef struct _SYSTEM_LEAP_SECOND_INFORMATION {
    UCHAR Enabled;
    ULONG Flags;
};

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION {
    ULONG VetoType;
    struct _UNICODE_STRING VetoList;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
    ULONG64 ProcessorMask;
    enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    struct {
        UCHAR Flags;
    } ProcessorCore;
    struct {
        ULONG NodeNumber;
    } NumaNode;
    struct _CACHE_DESCRIPTOR Cache;
    ULONG64 Reserved[2];
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {
    enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    ULONG Size;
    struct _PROCESSOR_RELATIONSHIP Processor;
    struct _NUMA_NODE_RELATIONSHIP NumaNode;
    struct _CACHE_RELATIONSHIP Cache;
    struct _GROUP_RELATIONSHIP Group;
};

typedef struct _SYSTEM_LOOKASIDE_INFORMATION {
    USHORT CurrentDepth;
    USHORT MaximumDepth;
    ULONG TotalAllocates;
    ULONG AllocateMisses;
    ULONG TotalFrees;
    ULONG FreeMisses;
    ULONG Type;
    ULONG Tag;
    ULONG Size;
};

typedef struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION {
    ULONG LowPriReadOperations;
    ULONG LowPriWriteOperations;
    ULONG KernelBumpedToNormalOperations;
    ULONG LowPriPagingReadOperations;
    ULONG KernelPagingReadsBumpedToNormal;
    ULONG LowPriPagingWriteOperations;
    ULONG KernelPagingWritesBumpedToNormal;
    ULONG BoostedIrpCount;
    ULONG BoostedPagingIrpCount;
    ULONG BlanketBoostCount;
};

typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_MANUFACTURING_INFORMATION {
    ULONG Options;
    struct _UNICODE_STRING ProfileName;
};

typedef struct _SYSTEM_MEMORY_CHANNEL_INFORMATION {
    ULONG ChannelNumber;
    ULONG ChannelHeatIndex;
    ULONG64 TotalPageCount;
    ULONG64 ZeroPageCount;
    ULONG64 FreePageCount;
    ULONG64 StandbyPageCount;
};

typedef struct _SYSTEM_MEMORY_INFORMATION {
    ULONG64 PagedPoolCommitPageCount;
    ULONG64 NonPagedPoolPageCount;
    ULONG64 MdlPageCount;
    ULONG64 CommitPageCount;
};

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION {
    ULONG64 ZeroPageCount;
    ULONG64 FreePageCount;
    ULONG64 ModifiedPageCount;
    ULONG64 ModifiedNoWritePageCount;
    ULONG64 BadPageCount;
    ULONG64 PageCountByPriority[8];
    ULONG64 RepurposedPagesByPriority[8];
    ULONG64 ModifiedPageCountPageFile;
};

typedef struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION {
    ULONG64 NumberOfRuns;
    ULONG NumberOfNodes;
    ULONG NumberOfChannels;
    struct _PHYSICAL_CHANNEL_RUN Run[1];
};

typedef struct _SYSTEM_MEMORY_USAGE_INFORMATION {
    ULONG64 TotalPhysicalBytes;
    ULONG64 AvailableBytes;
    LONG64 ResidentAvailableBytes;
    ULONG64 CommittedBytes;
    ULONG64 SharedCommittedBytes;
    ULONG64 CommitLimitBytes;
    ULONG64 PeakCommitmentBytes;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE {
    PLONG NetRateControlDispatch;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER {
    ULONG64 PolicyCookie;
    enum _SYSTEM_NET_RATE_CONTROL_TYPE Type;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT {
    struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
    ULONG64 OverQuotaHistory;
    ULONG IntervalLength;
    ULONG NumberOfIntervals;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT {
    struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
    ULONG64 MaxBandwidth;
    struct _GUID *ContainerId;
    ULONG Flags;
    ULONG Set : 1;
    ULONG Update : 1;
    ULONG Clear : 1;
    ULONG DscpTagEnabled : 1;
    ULONG MaxBandwidthEnabled : 1;
    ULONG Reserved : 27;
    UCHAR DscpTag;
};

typedef struct _SYSTEM_NUMA_INFORMATION {
    ULONG HighestNodeNumber;
    ULONG Reserved;
    struct _GROUP_AFFINITY ActiveProcessorsGroupAffinity[64];
    ULONG64 AvailableMemory[64];
    ULONG64 Pad[128];
};

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP {
    ULONG NodeProximityId;
    USHORT NodeNumber;
};

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION {
    ULONG NextEntryOffset;
    ULONG NumberOfObjects;
    ULONG NumberOfHandles;
    ULONG TypeIndex;
    ULONG InvalidAttributes;
    struct _GENERIC_MAPPING GenericMapping;
    ULONG ValidAccessMask;
    ULONG PoolType;
    UCHAR SecurityRequired;
    UCHAR WaitableObject;
    struct _UNICODE_STRING TypeName;
};

typedef struct _SYSTEM_OBJECT_INFORMATION {
    ULONG NextEntryOffset;
    PVOID Object;
    PVOID CreatorUniqueProcess;
    USHORT CreatorBackTraceIndex;
    USHORT Flags;
    LONG PointerCount;
    LONG HandleCount;
    ULONG PagedPoolCharge;
    ULONG NonPagedPoolCharge;
    PVOID ExclusiveProcessId;
    PVOID SecurityDescriptor;
    struct _OBJECT_NAME_INFORMATION NameInfo;
};

typedef struct _SYSTEM_PAGEFILE_INFORMATION {
    ULONG NextEntryOffset;
    ULONG TotalSize;
    ULONG TotalInUse;
    ULONG PeakUsage;
    struct _UNICODE_STRING PageFileName;
};

typedef struct _SYSTEM_PAGEFILE_INFORMATION_EX {
    struct _SYSTEM_PAGEFILE_INFORMATION Info;
    ULONG MinimumSize;
    ULONG MaximumSize;
};

typedef struct _SYSTEM_PERFORMANCE_INFORMATION {
    union _LARGE_INTEGER IdleProcessTime;
    union _LARGE_INTEGER IoReadTransferCount;
    union _LARGE_INTEGER IoWriteTransferCount;
    union _LARGE_INTEGER IoOtherTransferCount;
    ULONG IoReadOperationCount;
    ULONG IoWriteOperationCount;
    ULONG IoOtherOperationCount;
    ULONG AvailablePages;
    ULONG CommittedPages;
    ULONG CommitLimit;
    ULONG PeakCommitment;
    ULONG PageFaultCount;
    ULONG CopyOnWriteCount;
    ULONG TransitionCount;
    ULONG CacheTransitionCount;
    ULONG DemandZeroCount;
    ULONG PageReadCount;
    ULONG PageReadIoCount;
    ULONG CacheReadCount;
    ULONG CacheIoCount;
    ULONG DirtyPagesWriteCount;
    ULONG DirtyWriteIoCount;
    ULONG MappedPagesWriteCount;
    ULONG MappedWriteIoCount;
    ULONG PagedPoolPages;
    ULONG NonPagedPoolPages;
    ULONG PagedPoolAllocs;
    ULONG PagedPoolFrees;
    ULONG NonPagedPoolAllocs;
    ULONG NonPagedPoolFrees;
    ULONG FreeSystemPtes;
    ULONG ResidentSystemCodePage;
    ULONG TotalSystemDriverPages;
    ULONG TotalSystemCodePages;
    ULONG NonPagedPoolLookasideHits;
    ULONG PagedPoolLookasideHits;
    ULONG AvailablePagedPoolPages;
    ULONG ResidentSystemCachePage;
    ULONG ResidentPagedPoolPage;
    ULONG ResidentSystemDriverPage;
    ULONG CcFastReadNoWait;
    ULONG CcFastReadWait;
    ULONG CcFastReadResourceMiss;
    ULONG CcFastReadNotPossible;
    ULONG CcFastMdlReadNoWait;
    ULONG CcFastMdlReadWait;
    ULONG CcFastMdlReadResourceMiss;
    ULONG CcFastMdlReadNotPossible;
    ULONG CcMapDataNoWait;
    ULONG CcMapDataWait;
    ULONG CcMapDataNoWaitMiss;
    ULONG CcMapDataWaitMiss;
    ULONG CcPinMappedDataCount;
    ULONG CcPinReadNoWait;
    ULONG CcPinReadWait;
    ULONG CcPinReadNoWaitMiss;
    ULONG CcPinReadWaitMiss;
    ULONG CcCopyReadNoWait;
    ULONG CcCopyReadWait;
    ULONG CcCopyReadNoWaitMiss;
    ULONG CcCopyReadWaitMiss;
    ULONG CcMdlReadNoWait;
    ULONG CcMdlReadWait;
    ULONG CcMdlReadNoWaitMiss;
    ULONG CcMdlReadWaitMiss;
    ULONG CcReadAheadIos;
    ULONG CcLazyWriteIos;
    ULONG CcLazyWritePages;
    ULONG CcDataFlushes;
    ULONG CcDataPages;
    ULONG ContextSwitches;
    ULONG FirstLevelTbFills;
    ULONG SecondLevelTbFills;
    ULONG SystemCalls;
    ULONG64 CcTotalDirtyPages;
    ULONG64 CcDirtyPageThreshold;
    LONG64 ResidentAvailablePages;
    ULONG64 SharedCommittedPages;
};

typedef struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION {
    ULONG64 TotalPhysicalBytes;
    ULONG64 LowestPhysicalAddress;
    ULONG64 HighestPhysicalAddress;
};

typedef struct _SYSTEM_PLATFORM_BINARY_INFORMATION {
    ULONG64 PhysicalAddress;
    PVOID HandoffBuffer;
    PVOID CommandLineBuffer;
    ULONG HandoffBufferSize;
    ULONG CommandLineBufferSize;
};

typedef struct _SYSTEM_POLICY_INFORMATION {
    PVOID InputData;
    PVOID OutputData;
    ULONG InputDataSize;
    ULONG OutputDataSize;
    ULONG Version;
};

typedef struct _SYSTEM_POOLTAG {
    UCHAR Tag[4];
    ULONG TagUlong;
    ULONG PagedAllocs;
    ULONG PagedFrees;
    ULONG64 PagedUsed;
    ULONG NonPagedAllocs;
    ULONG NonPagedFrees;
    ULONG64 NonPagedUsed;
};

typedef struct _SYSTEM_POOLTAG_INFORMATION {
    ULONG Count;
    struct _SYSTEM_POOLTAG TagInfo[1];
};

typedef struct _SYSTEM_POOL_ENTRY {
    UCHAR Allocated;
    UCHAR Spare0;
    USHORT AllocatorBackTraceIndex;
    ULONG Size;
    UCHAR Tag[4];
    ULONG TagUlong;
    PVOID ProcessChargedQuota;
};

typedef struct _SYSTEM_POOL_INFORMATION {
    ULONG64 TotalSize;
    PVOID FirstEntry;
    USHORT EntryOverhead;
    UCHAR PoolTagPresent;
    UCHAR Spare0;
    ULONG NumberOfEntries;
    struct _SYSTEM_POOL_ENTRY Entries[1];
};

typedef struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION {
    UCHAR EfiLauncherEnabled;
};

typedef struct _SYSTEM_POWER_INFORMATION {
    ULONG MaxIdlenessAllowed;
    ULONG Idleness;
    ULONG TimeRemaining;
    UCHAR CoolingMode;
};

typedef struct _SYSTEM_POWER_LOGGING_ENTRY {
    ULONG Reason;
    ULONG States;
};

typedef struct _SYSTEM_POWER_POLICY {
    ULONG Revision;
    struct POWER_ACTION_POLICY PowerButton;
    struct POWER_ACTION_POLICY SleepButton;
    struct POWER_ACTION_POLICY LidClose;
    enum _SYSTEM_POWER_STATE LidOpenWake;
    ULONG Reserved;
    struct POWER_ACTION_POLICY Idle;
    ULONG IdleTimeout;
    UCHAR IdleSensitivity;
    UCHAR DynamicThrottle;
    UCHAR Spare2[2];
    enum _SYSTEM_POWER_STATE MinSleep;
    enum _SYSTEM_POWER_STATE MaxSleep;
    enum _SYSTEM_POWER_STATE ReducedLatencySleep;
    ULONG WinLogonFlags;
    ULONG Spare3;
    ULONG DozeS4Timeout;
    ULONG BroadcastCapacityResolution;
    struct SYSTEM_POWER_LEVEL DischargePolicy[4];
    ULONG VideoTimeout;
    UCHAR VideoDimDisplay;
    ULONG VideoReserved[3];
    ULONG SpindownTimeout;
    UCHAR OptimizeForPower;
    UCHAR FanThrottleTolerance;
    UCHAR ForcedThrottle;
    UCHAR MinThrottle;
    struct POWER_ACTION_POLICY OverThrottled;
};

typedef struct _SYSTEM_POWER_STATE_CONTEXT {
    ULONG Reserved1 : 8;
    ULONG TargetSystemState : 4;
    ULONG EffectiveSystemState : 4;
    ULONG CurrentSystemState : 4;
    ULONG IgnoreHibernationPath : 1;
    ULONG PseudoTransition : 1;
    ULONG KernelSoftReboot : 1;
    ULONG DirectedDripsTransition : 1;
    ULONG Reserved2 : 8;
    ULONG ContextAsUlong;
};

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON {
    UCHAR AffectedState[8];
    ULONG PowerReasonCode;
    ULONG PowerReasonLength;
};

typedef struct _SYSTEM_POWER_STATUS {
    UCHAR ACLineStatus;
    UCHAR BatteryFlag;
    UCHAR BatteryLifePercent;
    UCHAR SystemStatusFlag;
    ULONG BatteryLifeTime;
    ULONG BatteryFullLifeTime;
};

typedef struct _SYSTEM_PREFETCH_OPTIONS {
    ULONG LowerPriority : 1;
    ULONG VirtualOffsets : 1;
    ULONG TrickleIOs : 1;
    ULONG SkipInStorePages : 1;
    ULONG PrefetchFilesByVa : 1;
    ULONG SkipMemoryStorePages : 1;
    ULONG Spare : 2;
    ULONG ScenarioType : 8;
};

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION {
    ULONG PrefetchPatchCount;
};

typedef struct _SYSTEM_PREFETCH_STATS {
    ULONG DemandFilePageCount;
    ULONG DemandFileIOCount;
    ULONG TrickleFilePageCount;
    ULONG TrickleFileIOCount;
    ULONG DemandPrivatePageCount;
    ULONG DemandPrivateIOCount;
    ULONG TricklePrivatePageCount;
    ULONG TricklePrivateIOCount;
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION {
    ULONG64 Cycles[4][2];
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {
    ULONG64 CycleTime;
};

typedef struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION {
    ULONG64 ProcessorFeatureBits;
    ULONG64 Reserved[3];
};

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION {
    ULONG64 CycleTime;
};

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION {
    ULONG64 IdleTime;
    ULONG64 C1Time;
    ULONG64 C2Time;
    ULONG64 C3Time;
    ULONG C1Transitions;
    ULONG C2Transitions;
    ULONG C3Transitions;
    ULONG Padding;
};

typedef struct _SYSTEM_PROCESSOR_INFORMATION {
    USHORT ProcessorArchitecture;
    USHORT ProcessorLevel;
    USHORT ProcessorRevision;
    USHORT MaximumProcessors;
    ULONG ProcessorFeatureBits;
};

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION {
    ULONG Operation;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION {
    ULONG ProcessorCount;
    ULONG Offsets[1];
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT {
    ULONG64 Hits;
    UCHAR PercentFrequency;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION {
    union _LARGE_INTEGER IdleTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER DpcTime;
    union _LARGE_INTEGER InterruptTime;
    ULONG InterruptCount;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX {
    union _LARGE_INTEGER IdleTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER DpcTime;
    union _LARGE_INTEGER InterruptTime;
    ULONG InterruptCount;
    ULONG Spare0;
    union _LARGE_INTEGER AvailableTime;
    union _LARGE_INTEGER Spare1;
    union _LARGE_INTEGER Spare2;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION {
    ULONG ProcessorNumber;
    ULONG StateCount;
    struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
};

typedef struct _SYSTEM_PROCESSOR_POLICY_INFORMATION {
    ULONG Length;
    ULONG PolicyId;
    struct _XSAVE_POLICY Policy;
};

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION {
    UCHAR CurrentFrequency;
    UCHAR ThermalLimitFrequency;
    UCHAR ConstantThrottleFrequency;
    UCHAR DegradedThrottleFrequency;
    UCHAR LastBusyFrequency;
    UCHAR LastC3Frequency;
    UCHAR LastAdjustedBusyFrequency;
    UCHAR ProcessorMinThrottle;
    UCHAR ProcessorMaxThrottle;
    ULONG NumberOfFrequencies;
    ULONG PromotionCount;
    ULONG DemotionCount;
    ULONG ErrorCount;
    ULONG RetryCount;
    ULONG64 CurrentFrequencyTime;
    ULONG64 CurrentProcessorTime;
    ULONG64 CurrentProcessorIdleTime;
    ULONG64 LastProcessorTime;
    ULONG64 LastProcessorIdleTime;
    ULONG64 Energy;
};

typedef struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA {
    struct _PROCESSOR_PROFILE_CONTROL_AREA *ProcessorProfileControlArea;
    UCHAR Allocate;
};

typedef struct _SYSTEM_PROCESS_ID_INFORMATION {
    PVOID ProcessId;
    struct _UNICODE_STRING ImageName;
};

typedef struct _SYSTEM_PROCESS_INFORMATION {
    ULONG NextEntryOffset;
    ULONG NumberOfThreads;
    union _LARGE_INTEGER WorkingSetPrivateSize;
    ULONG HardFaultCount;
    ULONG NumberOfThreadsHighWatermark;
    ULONG64 CycleTime;
    union _LARGE_INTEGER CreateTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER KernelTime;
    struct _UNICODE_STRING ImageName;
    LONG BasePriority;
    PVOID UniqueProcessId;
    PVOID InheritedFromUniqueProcessId;
    ULONG HandleCount;
    ULONG SessionId;
    ULONG64 UniqueProcessKey;
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
    ULONG64 PrivatePageCount;
    union _LARGE_INTEGER ReadOperationCount;
    union _LARGE_INTEGER WriteOperationCount;
    union _LARGE_INTEGER OtherOperationCount;
    union _LARGE_INTEGER ReadTransferCount;
    union _LARGE_INTEGER WriteTransferCount;
    union _LARGE_INTEGER OtherTransferCount;
};

typedef struct _SYSTEM_PROCESS_INFORMATION_EXTENSION {
    struct _PROCESS_DISK_COUNTERS DiskCounters;
    ULONG64 ContextSwitches;
    ULONG Flags;
    ULONG HasStrongId : 1;
    ULONG Classification : 4;
    ULONG BackgroundActivityModerated : 1;
    ULONG Spare : 26;
    ULONG UserSidOffset;
    ULONG PackageFullNameOffset;
    struct _PROCESS_ENERGY_VALUES EnergyValues;
    ULONG AppIdOffset;
    ULONG64 SharedCommitCharge;
    ULONG JobObjectId;
    ULONG SpareUlong;
    ULONG64 ProcessSequenceNumber;
};

typedef struct _SYSTEM_PROCESS_TRUST_LABEL_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION {
    ULONG Version;
    struct _QUERY_PERFORMANCE_COUNTER_FLAGS Flags;
    struct _QUERY_PERFORMANCE_COUNTER_FLAGS ValidFlags;
};

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION {
    ULONG TimeAdjustment;
    ULONG TimeIncrement;
    UCHAR Enable;
};

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE {
    ULONG64 TimeAdjustment;
    ULONG64 TimeIncrement;
    UCHAR Enable;
};

typedef struct _SYSTEM_REF_TRACE_INFORMATION {
    UCHAR TraceEnable;
    UCHAR TracePermanent;
    struct _UNICODE_STRING TraceProcessName;
    struct _UNICODE_STRING TracePoolTags;
};

typedef struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS {
    PVOID KeyHandle;
    struct _UNICODE_STRING *ValueNamePointer;
    PULONG RequiredLengthPointer;
    PUCHAR Buffer;
    ULONG BufferLength;
    ULONG Type;
    PUCHAR AppendBuffer;
    ULONG AppendBufferLength;
    UCHAR CreateIfDoesntExist;
    UCHAR TruncateExistingValue;
};

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION {
    ULONG RegistryQuotaAllowed;
    ULONG RegistryQuotaUsed;
    ULONG64 PagedPoolSize;
};

typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ROOT_SILO_INFORMATION {
    ULONG NumberOfSilos;
    ULONG SiloIdList[1];
};

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_SECUREBOOT_INFORMATION {
    UCHAR SecureBootEnabled;
    UCHAR SecureBootCapable;
};

typedef struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION {
    ULONG PlatformManifestSize;
    UCHAR PlatformManifest[1];
};

typedef struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION {
    struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION PolicyInformation;
    ULONG PolicySize;
    UCHAR Policy[1];
};

typedef struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION {
    struct _GUID PolicyPublisher;
    ULONG PolicyVersion;
    ULONG PolicyOptions;
};

typedef struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION {
    ULONG ExtentCount;
    ULONG ValidStructureSize;
    ULONG NextExtentIndex;
    ULONG ExtentRestart;
    ULONG CycleCount;
    ULONG TimeoutCount;
    ULONG64 CycleTime;
    ULONG64 CycleTimeMax;
    ULONG64 ExtentTime;
    ULONG ExtentTimeIndex;
    ULONG ExtentTimeMaxIndex;
    ULONG64 ExtentTimeMax;
    ULONG64 HyperFlushTimeMax;
    ULONG64 TranslateVaTimeMax;
    ULONG64 DebugExemptionCount;
    ULONG64 TbHitCount;
    ULONG64 TbMissCount;
    ULONG64 VinaPendingYield;
    ULONG64 HashCycles;
    ULONG HistogramOffset;
    ULONG HistogramBuckets;
    ULONG HistogramShift;
    ULONG Reserved1;
    ULONG64 PageNotPresentCount;
};

typedef struct _SYSTEM_SESSION_BIGPOOL_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG Count;
    struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
};

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG ViewFailures;
    ULONG64 NumberOfBytesAvailable;
    ULONG64 NumberOfBytesAvailableContiguous;
};

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG Count;
    struct _SYSTEM_POOLTAG TagInfo[1];
};

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION {
    ULONG SessionId;
    ULONG SizeOfBuf;
    PVOID Buffer;
};

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION {
    ULONG TimeAdjustment;
    UCHAR Enable;
};

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE {
    ULONG64 TimeAdjustment;
    UCHAR Enable;
};

typedef struct _SYSTEM_SINGLE_MODULE_INFORMATION {
    PVOID TargetModuleAddress;
    struct _RTL_PROCESS_MODULE_INFORMATION_EX ExInfo;
};

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION {
    ULONG PoolTag;
    ULONG Flags;
};

typedef struct _SYSTEM_SPECULATION_CONTROL_INFORMATION {
     <unnamed-type-SpeculationControlFlags>;
    struct {
        ULONG BpbEnabled : 1;
        ULONG BpbDisabledSystemPolicy : 1;
        ULONG BpbDisabledNoHardwareSupport : 1;
        ULONG SpecCtrlEnumerated : 1;
        ULONG SpecCmdEnumerated : 1;
        ULONG IbrsPresent : 1;
        ULONG StibpPresent : 1;
        ULONG SmepPresent : 1;
        ULONG SpeculativeStoreBypassDisableAvailable : 1;
        ULONG SpeculativeStoreBypassDisableSupported : 1;
        ULONG SpeculativeStoreBypassDisabledSystemWide : 1;
        ULONG SpeculativeStoreBypassDisabledKernel : 1;
        ULONG SpeculativeStoreBypassDisableRequired : 1;
        ULONG BpbDisabledKernelToUser : 1;
        ULONG SpecCtrlRetpolineEnabled : 1;
        ULONG SpecCtrlImportOptimizationEnabled : 1;
        ULONG Reserved : 16;
    } SpeculationControlFlags;
};

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION {
    struct _UNICODE_STRING SystemDisk;
};

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION {
    struct _UNICODE_STRING SystemPartition;
};

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION {
    struct _CLIENT_ID ClientId;
    LONG Priority;
};

typedef struct _SYSTEM_THREAD_INFORMATION {
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER CreateTime;
    ULONG WaitTime;
    PVOID StartAddress;
    struct _CLIENT_ID ClientId;
    LONG Priority;
    LONG BasePriority;
    ULONG ContextSwitches;
    ULONG ThreadState;
    ULONG WaitReason;
};

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION {
    union _LARGE_INTEGER BootTime;
    union _LARGE_INTEGER CurrentTime;
    union _LARGE_INTEGER TimeZoneBias;
    ULONG TimeZoneId;
    ULONG Reserved;
    ULONG64 BootTimeBias;
    ULONG64 SleepTimeBias;
};

typedef struct _SYSTEM_TPM_INFORMATION {
    ULONG Flags;
};

typedef struct _SYSTEM_VA_LIST_INFORMATION {
    ULONG64 VirtualSize;
    ULONG64 VirtualPeak;
    ULONG64 VirtualLimit;
    ULONG64 AllocationFailures;
};

typedef struct _SYSTEM_VDM_INSTEMUL_INFO {
    ULONG SegmentNotPresent;
    ULONG VdmOpcode0F;
    ULONG OpcodeESPrefix;
    ULONG OpcodeCSPrefix;
    ULONG OpcodeSSPrefix;
    ULONG OpcodeDSPrefix;
    ULONG OpcodeFSPrefix;
    ULONG OpcodeGSPrefix;
    ULONG OpcodeOPER32Prefix;
    ULONG OpcodeADDR32Prefix;
    ULONG OpcodeINSB;
    ULONG OpcodeINSW;
    ULONG OpcodeOUTSB;
    ULONG OpcodeOUTSW;
    ULONG OpcodePUSHF;
    ULONG OpcodePOPF;
    ULONG OpcodeINTnn;
    ULONG OpcodeINTO;
    ULONG OpcodeIRET;
    ULONG OpcodeINBimm;
    ULONG OpcodeINWimm;
    ULONG OpcodeOUTBimm;
    ULONG OpcodeOUTWimm;
    ULONG OpcodeINB;
    ULONG OpcodeINW;
    ULONG OpcodeOUTB;
    ULONG OpcodeOUTW;
    ULONG OpcodeLOCKPrefix;
    ULONG OpcodeREPNEPrefix;
    ULONG OpcodeREPPrefix;
    ULONG OpcodeHLT;
    ULONG OpcodeCLI;
    ULONG OpcodeSTI;
    ULONG BopCount;
};

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION {
    ULONG CancelProbability;
    ULONG CancelThreshold;
    ULONG CompletionThreshold;
    ULONG CancellationVerifierDisabled;
    ULONG AvailableIssues;
    struct _SYSTEM_VERIFIER_ISSUE Issues[128];
};

typedef struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION {
    struct _SYSTEM_VERIFIER_INFORMATION Legacy;
    ULONG RaiseIrqls;
    ULONG AcquireSpinLocks;
    ULONG SynchronizeExecutions;
    ULONG AllocationsWithNoTag;
    ULONG AllocationsFailed;
    ULONG AllocationsFailedDeliberately;
    ULONG64 LockedBytes;
    ULONG64 PeakLockedBytes;
    ULONG64 MappedLockedBytes;
    ULONG64 PeakMappedLockedBytes;
    ULONG64 MappedIoSpaceBytes;
    ULONG64 PeakMappedIoSpaceBytes;
    ULONG64 PagesForMdlBytes;
    ULONG64 PeakPagesForMdlBytes;
    ULONG64 ContiguousMemoryBytes;
    ULONG64 PeakContiguousMemoryBytes;
    ULONG ExecutePoolTypes;
    ULONG ExecutePageProtections;
    ULONG ExecutePageMappings;
    ULONG ExecuteWriteSections;
    ULONG SectionAlignmentFailures;
    ULONG IATInExecutableSection;
};

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION {
    ULONG Probability;
    ULONG MaxProbability;
    struct _UNICODE_STRING PoolTags;
    struct _UNICODE_STRING Applications;
};

typedef struct _SYSTEM_VERIFIER_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Level;
    ULONG RuleClasses[2];
    ULONG AreAllDriversBeingVerified;
    struct _UNICODE_STRING DriverName;
    ULONG RaiseIrqls;
    ULONG AcquireSpinLocks;
    ULONG SynchronizeExecutions;
    ULONG AllocationsAttempted;
    ULONG AllocationsSucceeded;
    ULONG AllocationsSucceededSpecialPool;
    ULONG AllocationsWithNoTag;
    ULONG TrimRequests;
    ULONG Trims;
    ULONG AllocationsFailed;
    ULONG AllocationsFailedDeliberately;
    ULONG Loads;
    ULONG Unloads;
    ULONG UnTrackedPool;
    ULONG CurrentPagedPoolAllocations;
    ULONG CurrentNonPagedPoolAllocations;
    ULONG PeakPagedPoolAllocations;
    ULONG PeakNonPagedPoolAllocations;
    ULONG64 PagedPoolUsageInBytes;
    ULONG64 NonPagedPoolUsageInBytes;
    ULONG64 PeakPagedPoolUsageInBytes;
    ULONG64 PeakNonPagedPoolUsageInBytes;
};

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX {
    ULONG VerifyMode;
    ULONG OptionChanges;
    struct _UNICODE_STRING PreviousBucketName;
    ULONG IrpCancelTimeoutMsec;
    ULONG VerifierExtensionEnabled;
    ULONG Reserved[1];
};

typedef struct _SYSTEM_VERIFIER_ISSUE {
    ULONG64 IssueType;
    PVOID Address;
    ULONG64 Parameters[2];
};

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION {
    ULONG ActionTaken;
    ULONG64 CrashData[5];
    ULONG VerifierMode;
    ULONG VerifierFlags;
    WCHAR VerifierTargets[256];
};

typedef struct _SYSTEM_VHD_BOOT_INFORMATION {
    UCHAR OsDiskIsVhd;
    ULONG OsVhdFilePathOffset;
    WCHAR OsVhdParentVolume[1];
};

typedef struct _SYSTEM_VSM_PROTECTION_INFORMATION {
    UCHAR DmaProtectionsAvailable;
    UCHAR DmaProtectionsInUse;
    UCHAR HardwareMbecAvailable;
};

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION {
    enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
    ULONG DataValue;
};

typedef struct _SYSTEM_WORKINGSET_ENTRY {
    ULONG UniqueProcessId;
    ULONG SessionId;
    ULONG64 WorkingSetPageCount;
    ULONG64 CommitPageCount;
    ULONG64 PagedPoolPageCount;
    ULONG64 VirtualSizeInPages;
    ULONG64 PrivateWorkingSetPageCount;
};

typedef struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION {
    ULONG64 WorkloadClass;
    ULONG64 CpuSets[1];
};

typedef struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION {
    ULONG WriteConstraintPolicy;
    ULONG Reserved;
};

typedef struct _SYS_EXCEPTION_RECORD {
    struct _EXCEPTION_RECORD _ExceptionRecord;
    struct _CONTEXT _ContextRecord;
    LONG MAX_STACK_RECORDS;
    ULONG64 _StackRecord[256];
    PVOID operator new;
    PVOID operator new;
    VOID operator delete;
    VOID assign;
};

typedef struct _SecPkgContext_IssuerListInfoEx {
    struct _CRYPTOAPI_BLOB *aIssuers;
    ULONG cIssuers;
};

typedef struct _T2_SET_PARAMETERS_V0 {
    ULONG Version;
    ULONG Reserved;
    LONG64 NoWakeTolerance;
};

typedef struct _TAPE_CREATE_PARTITION {
    ULONG Method;
    ULONG Count;
    ULONG Size;
};

typedef struct _TAPE_ERASE {
    ULONG Type;
    UCHAR Immediate;
};

typedef struct _TAPE_GET_DRIVE_PARAMETERS {
    UCHAR ECC;
    UCHAR Compression;
    UCHAR DataPadding;
    UCHAR ReportSetmarks;
    ULONG DefaultBlockSize;
    ULONG MaximumBlockSize;
    ULONG MinimumBlockSize;
    ULONG MaximumPartitionCount;
    ULONG FeaturesLow;
    ULONG FeaturesHigh;
    ULONG EOTWarningZoneSize;
};

typedef struct _TAPE_GET_MEDIA_PARAMETERS {
    union _LARGE_INTEGER Capacity;
    union _LARGE_INTEGER Remaining;
    ULONG BlockSize;
    ULONG PartitionCount;
    UCHAR WriteProtected;
};

typedef struct _TAPE_GET_POSITION {
    ULONG Type;
    ULONG Partition;
    union _LARGE_INTEGER Offset;
};

typedef struct _TAPE_PREPARE {
    ULONG Operation;
    UCHAR Immediate;
};

typedef struct _TAPE_SET_DRIVE_PARAMETERS {
    UCHAR ECC;
    UCHAR Compression;
    UCHAR DataPadding;
    UCHAR ReportSetmarks;
    ULONG EOTWarningZoneSize;
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS {
    ULONG BlockSize;
};

typedef struct _TAPE_SET_POSITION {
    ULONG Method;
    ULONG Partition;
    union _LARGE_INTEGER Offset;
    UCHAR Immediate;
};

typedef struct _TAPE_WMI_OPERATIONS {
    ULONG Method;
    ULONG DataBufferSize;
    PVOID DataBuffer;
};

typedef struct _TAPE_WRITE_MARKS {
    ULONG Type;
    ULONG Count;
    UCHAR Immediate;
};

typedef struct _TEB {
    struct _NT_TIB NtTib;
    PVOID EnvironmentPointer;
    struct _CLIENT_ID ClientId;
    PVOID ActiveRpcHandle;
    PVOID ThreadLocalStoragePointer;
    struct _PEB *ProcessEnvironmentBlock;
    ULONG LastErrorValue;
    ULONG CountOfOwnedCriticalSections;
    PVOID CsrClientThread;
    PVOID Win32ThreadInfo;
    ULONG User32Reserved[26];
    ULONG UserReserved[5];
    PVOID WOW32Reserved;
    ULONG CurrentLocale;
    ULONG FpSoftwareStatusRegister;
    PVOID ReservedForDebuggerInstrumentation[16];
    PVOID SystemReserved1[30];
    CHAR PlaceholderCompatibilityMode;
    UCHAR PlaceholderHydrationAlwaysExplicit;
    CHAR PlaceholderReserved[10];
    ULONG ProxiedProcessId;
    struct _ACTIVATION_CONTEXT_STACK _ActivationStack;
    UCHAR WorkingOnBehalfTicket[8];
    LONG ExceptionCode;
    UCHAR Padding0[4];
    struct _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
    ULONG64 InstrumentationCallbackSp;
    ULONG64 InstrumentationCallbackPreviousPc;
    ULONG64 InstrumentationCallbackPreviousSp;
    ULONG TxFsContext;
    UCHAR InstrumentationCallbackDisabled;
    UCHAR UnalignedLoadStoreExceptions;
    UCHAR Padding1[2];
    struct _GDI_TEB_BATCH GdiTebBatch;
    struct _CLIENT_ID RealClientId;
    PVOID GdiCachedProcessHandle;
    ULONG GdiClientPID;
    ULONG GdiClientTID;
    PVOID GdiThreadLocalInfo;
    ULONG64 Win32ClientInfo[62];
    PVOID glDispatchTable[233];
    ULONG64 glReserved1[29];
    PVOID glReserved2;
    PVOID glSectionInfo;
    PVOID glSection;
    PVOID glTable;
    PVOID glCurrentRC;
    PVOID glContext;
    ULONG LastStatusValue;
    UCHAR Padding2[4];
    struct _UNICODE_STRING StaticUnicodeString;
    WCHAR StaticUnicodeBuffer[261];
    UCHAR Padding3[6];
    PVOID DeallocationStack;
    PVOID TlsSlots[64];
    struct _LIST_ENTRY TlsLinks;
    PVOID Vdm;
    PVOID ReservedForNtRpc;
    PVOID DbgSsReserved[2];
    ULONG HardErrorMode;
    UCHAR Padding4[4];
    PVOID Instrumentation[11];
    struct _GUID ActivityId;
    PVOID SubProcessTag;
    PVOID PerflibData;
    PVOID EtwTraceData;
    PVOID WinSockData;
    ULONG GdiBatchCount;
    struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    ULONG IdealProcessorValue;
    UCHAR ReservedPad0;
    UCHAR ReservedPad1;
    UCHAR ReservedPad2;
    UCHAR IdealProcessor;
    ULONG GuaranteedStackBytes;
    UCHAR Padding5[4];
    PVOID ReservedForPerf;
    PVOID ReservedForOle;
    ULONG WaitingOnLoaderLock;
    UCHAR Padding6[4];
    PVOID SavedPriorityState;
    ULONG64 ReservedForCodeCoverage;
    PVOID ThreadPoolData;
    PVOID *TlsExpansionSlots;
    PVOID DeallocationBStore;
    PVOID BStoreLimit;
    ULONG MuiGeneration;
    ULONG IsImpersonating;
    PVOID NlsCache;
    PVOID pShimData;
    ULONG HeapData;
    UCHAR Padding7[4];
    PVOID CurrentTransactionHandle;
    struct _TEB_ACTIVE_FRAME *ActiveFrame;
    PVOID FlsData;
    PVOID PreferredLanguages;
    PVOID UserPrefLanguages;
    PVOID MergedPrefLanguages;
    ULONG MuiImpersonation;
    USHORT CrossTebFlags;
    USHORT SpareCrossTebBits : 16;
    USHORT SameTebFlags;
    USHORT SafeThunkCall : 1;
    USHORT InDebugPrint : 1;
    USHORT HasFiberData : 1;
    USHORT SkipThreadAttach : 1;
    USHORT WerInShipAssertCode : 1;
    USHORT RanProcessInit : 1;
    USHORT ClonedThread : 1;
    USHORT SuppressDebugMsg : 1;
    USHORT DisableUserStackWalk : 1;
    USHORT RtlExceptionAttached : 1;
    USHORT InitialThread : 1;
    USHORT SessionAware : 1;
    USHORT LoadOwner : 1;
    USHORT LoaderWorker : 1;
    USHORT SkipLoaderInit : 1;
    USHORT SpareSameTebBits : 1;
    PVOID TxnScopeEnterCallback;
    PVOID TxnScopeExitCallback;
    PVOID TxnScopeContext;
    ULONG LockCount;
    LONG WowTebOffset;
    PVOID ResourceRetValue;
    PVOID ReservedForWdf;
    ULONG64 ReservedForCrt;
    struct _GUID EffectiveContainerId;
};

typedef struct _TEB_ACTIVE_FRAME {
    ULONG Flags;
    struct _TEB_ACTIVE_FRAME *Previous;
    struct _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

typedef struct _TEB_ACTIVE_FRAME_CONTEXT {
    ULONG Flags;
    PCHAR FrameName;
};

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX {
    struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
    PCHAR SourceLocation;
};

typedef struct _TEB_ACTIVE_FRAME_EX {
    struct _TEB_ACTIVE_FRAME BasicFrame;
    PVOID ExtensionIdentifier;
};

typedef struct _THREAD_BASIC_INFORMATION {
    LONG ExitStatus;
    struct _TEB *TebBaseAddress;
    struct _CLIENT_ID ClientId;
    ULONG64 AffinityMask;
    LONG Priority;
    LONG BasePriority;
};

typedef struct _THREAD_CYCLE_TIME_INFORMATION {
    ULONG64 AccumulatedCycles;
    ULONG64 CurrentCycleCount;
};

typedef struct _THREAD_ENERGY_VALUES {
    ULONG64 Cycles[4][2];
    ULONG64 AttributedCycles[4][2];
    ULONG64 WorkOnBehalfCycles[4][2];
    union _TIMELINE_BITMAP CpuTimeline;
};

typedef struct _THREAD_LAST_SYSCALL_INFORMATION {
    PVOID FirstArgument;
    USHORT SystemCallNumber;
    USHORT Pad[3];
    ULONG64 WaitTime;
};

typedef struct _THREAD_NAME_INFORMATION {
    struct _UNICODE_STRING ThreadName;
};

typedef struct _THREAD_PERFORMANCE_DATA {
    USHORT Size;
    USHORT Version;
    struct _PROCESSOR_NUMBER ProcessorNumber;
    ULONG ContextSwitches;
    ULONG HwCountersCount;
    ULONG64 UpdateCount;
    ULONG64 WaitReasonBitMap;
    ULONG64 HardwareCounters;
    struct _COUNTER_READING CycleTime;
    struct _COUNTER_READING HwCounters[16];
    VOID _THREAD_PERFORMANCE_DATA;
    VOID _THREAD_PERFORMANCE_DATA;
    struct _THREAD_PERFORMANCE_DATA *operator=;
    struct _THREAD_PERFORMANCE_DATA *operator=;
};

typedef struct _THREAD_POWER_THROTTLING_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _THREAD_PROFILING_INFORMATION {
    ULONG64 HardwareCounters;
    ULONG Flags;
    ULONG Enable;
    struct _THREAD_PERFORMANCE_DATA *PerformanceData;
};

typedef struct _THREAD_TEB_INFORMATION {
    PVOID TebInformation;
    ULONG TebOffset;
    ULONG BytesToRead;
};

typedef struct _THREAD_TLS_INFORMATION {
    ULONG Flags;
    PVOID NewTlsData;
    PVOID OldTlsData;
    PVOID ThreadId;
};

typedef struct _THREAD_UMS_INFORMATION {
    enum _THREAD_UMS_INFORMATION_COMMAND Command;
    struct _RTL_UMS_COMPLETION_LIST *CompletionList;
    struct _RTL_UMS_CONTEXT *UmsContext;
    ULONG Flags;
    ULONG IsUmsSchedulerThread : 1;
    ULONG IsUmsWorkerThread : 1;
};

typedef struct _TIMER_BASIC_INFORMATION {
    union _LARGE_INTEGER RemainingTime;
    UCHAR TimerState;
};

typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO {
    union _LARGE_INTEGER DueTime;
    PVOID TimerApcRoutine;
    PVOID TimerContext;
    struct _COUNTED_REASON_CONTEXT *WakeContext;
    ULONG Period;
    ULONG TolerableDelay;
    PUCHAR PreviousState;
};

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
    WCHAR TimeZoneKeyName[128];
    UCHAR DynamicDaylightTimeDisabled;
};

typedef struct _TIME_FIELDS {
    SHORT Year;
    SHORT Month;
    SHORT Day;
    SHORT Hour;
    SHORT Minute;
    SHORT Second;
    SHORT Milliseconds;
    SHORT Weekday;
};

typedef struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _TOKEN_ACCESS_INFORMATION {
    struct _SID_AND_ATTRIBUTES_HASH *SidHash;
    struct _SID_AND_ATTRIBUTES_HASH *RestrictedSidHash;
    struct _TOKEN_PRIVILEGES *Privileges;
    struct _LUID AuthenticationId;
    enum _TOKEN_TYPE TokenType;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
    ULONG Flags;
    ULONG AppContainerNumber;
    PVOID PackageSid;
    struct _SID_AND_ATTRIBUTES_HASH *CapabilitiesHash;
    PVOID TrustLevelSid;
    PVOID SecurityAttributes;
};

typedef struct _TOKEN_APPCONTAINER_INFORMATION {
    PVOID TokenAppContainer;
};

typedef struct _TOKEN_AUDIT_POLICY {
    UCHAR PerUserPolicy[30];
};

typedef struct _TOKEN_BNO_ISOLATION_INFORMATION {
    PWCHAR IsolationPrefix;
    UCHAR IsolationEnabled;
};

typedef struct _TOKEN_CONTROL {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    struct _LUID ModifiedId;
    struct _TOKEN_SOURCE TokenSource;
};

typedef struct _TOKEN_DEFAULT_DACL {
    struct _ACL *DefaultDacl;
};

typedef struct _TOKEN_DEVICE_CLAIMS {
    PVOID DeviceClaims;
};

typedef struct _TOKEN_ELEVATION {
    ULONG TokenIsElevated;
};

typedef struct _TOKEN_GROUPS {
    ULONG GroupCount;
    struct _SID_AND_ATTRIBUTES Groups[1];
};

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {
    ULONG SidCount;
    ULONG SidLength;
    struct _SID_AND_ATTRIBUTES *Sids;
    ULONG RestrictedSidCount;
    ULONG RestrictedSidLength;
    struct _SID_AND_ATTRIBUTES *RestrictedSids;
    ULONG PrivilegeCount;
    ULONG PrivilegeLength;
    struct _LUID_AND_ATTRIBUTES *Privileges;
    struct _LUID AuthenticationId;
};

typedef struct _TOKEN_LINKED_TOKEN {
    PVOID LinkedToken;
};

typedef struct _TOKEN_MANDATORY_LABEL {
    struct _SID_AND_ATTRIBUTES Label;
};

typedef struct _TOKEN_MANDATORY_POLICY {
    ULONG Policy;
};

typedef struct _TOKEN_ORIGIN {
    struct _LUID OriginatingLogonSession;
};

typedef struct _TOKEN_OWNER {
    PVOID Owner;
};

typedef struct _TOKEN_PRIMARY_GROUP {
    PVOID PrimaryGroup;
};

typedef struct _TOKEN_PRIVILEGES {
    ULONG PrivilegeCount;
    struct _LUID_AND_ATTRIBUTES Privileges[1];
};

typedef struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION {
    struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION *Attributes;
    enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION *Operations;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    ULONG AttributeCount;
     <unnamed-type-Attribute>;
    union {
        struct _TOKEN_SECURITY_ATTRIBUTE_V1 *pAttributeV1;
    } Attribute;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE {
    ULONG64 Version;
    struct _UNICODE_STRING Name;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
    PVOID pValue;
    ULONG ValueLength;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1 {
    ULONG Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        ULONG pInt64[1];
        ULONG pUint64[1];
        ULONG ppString[1];
        ULONG pFqbn[1];
        ULONG pOctetString[1];
    } Values;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_V1 {
    struct _UNICODE_STRING Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        PLONG64 pInt64;
        PULONG64 pUint64;
        struct _UNICODE_STRING *pString;
        struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE *pFqbn;
        struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *pOctetString;
    } Values;
};

typedef struct _TOKEN_SID_INFORMATION {
    PVOID Sid;
};

typedef struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    struct _LUID SourceIdentifier;
};

typedef struct _TOKEN_STATISTICS {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    union _LARGE_INTEGER ExpirationTime;
    enum _TOKEN_TYPE TokenType;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    ULONG DynamicCharged;
    ULONG DynamicAvailable;
    ULONG GroupCount;
    ULONG PrivilegeCount;
    struct _LUID ModifiedId;
};

typedef struct _TOKEN_USER {
    struct _SID_AND_ATTRIBUTES User;
};

typedef struct _TOKEN_USER_CLAIMS {
    PVOID UserClaims;
};

typedef struct _TPP_THREAD_DATA_CALLBACK {
};

typedef struct _TP_ALPC {
};

typedef struct _TP_CALLBACK_ENVIRON_V3 {
    ULONG Version;
    struct _TP_POOL *Pool;
    struct _TP_CLEANUP_GROUP *CleanupGroup;
    PVOID CleanupGroupCancelCallback;
    PVOID RaceDll;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    PVOID FinalizationCallback;
     <unnamed-type-u>;
    union {
        ULONG Flags;
         <unnamed-type-s>;
        struct {
            ULONG LongFunction : 1;
            ULONG Persistent : 1;
            ULONG Private : 30;
        } s;
    } u;
    enum _TP_CALLBACK_PRIORITY CallbackPriority;
    ULONG Size;
};

typedef struct _TP_CALLBACK_INSTANCE {
};

typedef struct _TP_CLEANUP_GROUP {
};

typedef struct _TP_DEBUG_FREE_INFO {
    ULONG FreeListSize;
};

typedef struct _TP_DIRECT {
    struct _TP_TASK Task;
    ULONG64 Lock;
    struct _LIST_ENTRY IoCompletionInformationList;
    PVOID Callback;
    ULONG NumaNode;
    UCHAR IdealProcessor;
};

typedef struct _TP_IO {
};

typedef struct _TP_JOB {
};

typedef struct _TP_POOL {
};

typedef struct _TP_POOL_STACK_INFORMATION {
    ULONG64 StackReserve;
    ULONG64 StackCommit;
};

typedef struct _TP_TASK {
    struct _TP_TASK_CALLBACKS *Callbacks;
    ULONG NumaNode;
    UCHAR IdealProcessor;
    struct _LIST_ENTRY ListEntry;
};

typedef struct _TP_TASK_CALLBACKS {
    PVOID ExecuteCallback;
    PVOID Unposted;
};

typedef struct _TP_TIMER {
};

typedef struct _TP_WAIT {
};

typedef struct _TP_WORK {
};

typedef struct _TRACE_GUID_REGISTRATION {
    struct _GUID *Guid;
    PVOID RegHandle;
};

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION {
    struct _GUID TmIdentity;
    union _LARGE_INTEGER VirtualClock;
};

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {
    ULONG LogPathLength;
    WCHAR LogPath[1];
};

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION {
    struct _GUID LogIdentity;
};

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {
    struct _GUID OldestTransactionGuid;
};

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {
    ULONG64 LastRecoveredLsn;
};

typedef struct _TRANSACTION_BASIC_INFORMATION {
    struct _GUID TransactionId;
    ULONG State;
    ULONG Outcome;
};

typedef struct _TRANSACTION_BIND_INFORMATION {
    PVOID TmHandle;
};

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION {
    ULONG NumberOfEnlistments;
    struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
};

typedef struct _TRANSACTION_ENLISTMENT_PAIR {
    struct _GUID EnlistmentId;
    struct _GUID ResourceManagerId;
};

typedef struct _TRANSACTION_LIST_ENTRY {
    struct _GUID UOW;
};

typedef struct _TRANSACTION_LIST_INFORMATION {
    ULONG NumberOfTransactions;
    struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
};

typedef struct _TRANSACTION_NOTIFICATION {
    PVOID TransactionKey;
    ULONG TransactionNotification;
    union _LARGE_INTEGER TmVirtualClock;
    ULONG ArgumentLength;
};

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {
    ULONG MarshalCookie;
    struct _GUID UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {
    ULONG PropagationCookie;
    struct _GUID UOW;
    struct _GUID TmIdentity;
    ULONG BufferLength;
};

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {
    struct _GUID EnlistmentId;
    struct _GUID UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {
    ULONG SavepointId;
};

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {
    struct _GUID TmIdentity;
    ULONG Flags;
};

typedef struct _TRANSACTION_PROPERTIES_INFORMATION {
    ULONG IsolationLevel;
    ULONG IsolationFlags;
    union _LARGE_INTEGER Timeout;
    ULONG Outcome;
    ULONG DescriptionLength;
    WCHAR Description[1];
};

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {
    struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
};

typedef struct _TRIVERTEX {
    LONG x;
    LONG y;
    USHORT Red;
    USHORT Green;
    USHORT Blue;
    USHORT Alpha;
};

typedef struct _TXFS_CREATE_MINIVERSION_INFO {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG BaseVersion;
    USHORT MiniVersion;
};

typedef struct _TXFS_GET_METADATA_INFO_OUT {
     <unnamed-type-TxfFileId>;
    struct {
        LONG64 LowPart;
        LONG64 HighPart;
    } TxfFileId;
    struct _GUID LockingTransaction;
    ULONG64 LastLsn;
    ULONG TransactionState;
};

typedef struct _TXFS_GET_TRANSACTED_VERSION {
    ULONG ThisBaseVersion;
    ULONG LatestVersion;
    USHORT ThisMiniVersion;
    USHORT FirstMiniVersion;
    USHORT LatestMiniVersion;
};

typedef struct _TXFS_LIST_TRANSACTIONS {
    ULONG64 NumberOfTransactions;
    ULONG64 BufferSizeRequired;
};

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY {
    struct _GUID TransactionId;
    ULONG TransactionState;
    ULONG Reserved1;
    ULONG Reserved2;
    LONG64 Reserved3;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES {
    struct _GUID KtmTransaction;
    ULONG64 NumberOfFiles;
    ULONG64 BufferSizeRequired;
    ULONG64 Offset;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {
    ULONG64 Offset;
    ULONG NameFlags;
    LONG64 FileId;
    ULONG Reserved1;
    ULONG Reserved2;
    LONG64 Reserved3;
    WCHAR FileName[1];
};

typedef struct _TXFS_MODIFY_RM {
    ULONG Flags;
    ULONG LogContainerCountMax;
    ULONG LogContainerCountMin;
    ULONG LogContainerCount;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG64 Reserved;
    USHORT LoggingMode;
};

typedef struct _TXFS_QUERY_RM_INFORMATION {
    ULONG BytesRequired;
    ULONG64 TailLsn;
    ULONG64 CurrentLsn;
    ULONG64 ArchiveTailLsn;
    ULONG64 LogContainerSize;
    union _LARGE_INTEGER HighestVirtualClock;
    ULONG LogContainerCount;
    ULONG LogContainerCountMax;
    ULONG LogContainerCountMin;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG Flags;
    USHORT LoggingMode;
    USHORT Reserved;
    ULONG RmState;
    ULONG64 LogCapacity;
    ULONG64 LogFree;
    ULONG64 TopsSize;
    ULONG64 TopsUsed;
    ULONG64 TransactionCount;
    ULONG64 OnePCCount;
    ULONG64 TwoPCCount;
    ULONG64 NumberLogFileFull;
    ULONG64 OldestTransactionAge;
    struct _GUID RMName;
    ULONG TmLogPathOffset;
};

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT {
    ULONG BufferLength;
    UCHAR Buffer[1];
};

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION {
    union _LARGE_INTEGER LastVirtualClock;
    ULONG64 LastRedoLsn;
    ULONG64 HighestRecoveryLsn;
    ULONG Flags;
};

typedef struct _TXFS_SAVEPOINT_INFORMATION {
    PVOID KtmTransaction;
    ULONG ActionCode;
    ULONG SavepointId;
};

typedef struct _TXFS_START_RM_INFORMATION {
    ULONG Flags;
    ULONG64 LogContainerSize;
    ULONG LogContainerCountMin;
    ULONG LogContainerCountMax;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG TmLogPathOffset;
    USHORT TmLogPathLength;
    USHORT LoggingMode;
    USHORT LogPathLength;
    USHORT Reserved;
    WCHAR LogPath[1];
};

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO {
    UCHAR TransactionsActiveAtSnapshot;
};

typedef struct _TXFS_WRITE_BACKUP_INFORMATION {
    UCHAR Buffer[1];
};

typedef struct _TypeDescriptor {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[0];
};

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {
    ULONG UmsVersion;
    struct _RTL_UMS_CONTEXT *RtlUmsContext;
    PVOID UmsContext;
    struct _RTL_UMS_COMPLETION_LIST *RtlUmsCompletionList;
    PVOID UmsCompletionList;
};

typedef struct _UMS_SCHEDULER_STARTUP_INFO {
    ULONG UmsVersion;
    PVOID CompletionList;
    PVOID SchedulerProc;
    PVOID SchedulerParam;
};

typedef struct _UMS_SYSTEM_THREAD_INFORMATION {
    ULONG UmsVersion;
    ULONG IsUmsSchedulerThread : 1;
    ULONG IsUmsWorkerThread : 1;
    ULONG ThreadUmsFlags;
};

typedef struct _UNICODE_PREFIX_TABLE {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _UNICODE_PREFIX_TABLE_ENTRY *LastNextEntry;
};

typedef struct _UNICODE_PREFIX_TABLE_ENTRY {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _UNICODE_PREFIX_TABLE_ENTRY *CaseMatch;
    struct _RTL_SPLAY_LINKS Links;
    struct _UNICODE_STRING *Prefix;
};

typedef struct _UNICODE_STRING {
    USHORT Length;
    USHORT MaximumLength;
    PWCHAR Buffer;
};

typedef struct _UNIQUE_PROCESS_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 UniqueProcessKey : 48;
    ULONG64 Reserved : 7;
};

typedef struct _UNIVERSAL_NAME_INFOA {
    PCHAR lpUniversalName;
};

typedef struct _UNIVERSAL_NAME_INFOW {
    PWCHAR lpUniversalName;
};

typedef struct _UNLOAD_DLL_DEBUG_INFO {
    PVOID lpBaseOfDll;
};

typedef struct _UNWIND_HISTORY_TABLE {
    ULONG Count;
    UCHAR LocalHint;
    UCHAR GlobalHint;
    UCHAR Search;
    UCHAR Once;
    ULONG64 LowAddress;
    ULONG64 HighAddress;
    struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
};

typedef struct _UNWIND_HISTORY_TABLE_ENTRY {
    ULONG64 ImageBase;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry;
};

typedef struct _UNWIND_INFO {
    UCHAR Version : 3;
    UCHAR Flags : 5;
    UCHAR SizeOfProlog;
    UCHAR CountOfCodes;
    UCHAR FrameRegister : 4;
    UCHAR FrameOffset : 4;
    union _UNWIND_CODE UnwindCode[1];
};

typedef struct _USER_MARSHAL_CB {
    ULONG Flags;
    struct _MIDL_STUB_MESSAGE *pStubMsg;
    PUCHAR pReserve;
    ULONG Signature;
    enum _USER_MARSHAL_CB_TYPE CBType;
    PUCHAR pFormat;
    PUCHAR pTypeFormat;
};

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE {
    PULONG pfnBufferSize;
    PUCHAR *pfnMarshall;
    PUCHAR *pfnUnmarshall;
    PVOID pfnFree;
};

typedef struct _UUID_VECTOR {
    ULONG Count;
    struct _GUID *Uuid[1];
};

typedef struct _VARIABLE_NAME {
    ULONG NextEntryOffset;
    struct _GUID VendorGuid;
    WCHAR Name[1];
};

typedef struct _VARIABLE_NAME_AND_VALUE {
    ULONG NextEntryOffset;
    ULONG ValueOffset;
    ULONG ValueLength;
    ULONG Attributes;
    struct _GUID VendorGuid;
    WCHAR Name[1];
};

typedef struct _VCN_RANGE_INPUT_BUFFER {
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER ClusterCount;
};

typedef struct _VIDEOPARAMETERS {
    struct _GUID Guid;
    ULONG dwOffset;
    ULONG dwCommand;
    ULONG dwFlags;
    ULONG dwMode;
    ULONG dwTVStandard;
    ULONG dwAvailableModes;
    ULONG dwAvailableTVStandard;
    ULONG dwFlickerFilter;
    ULONG dwOverScanX;
    ULONG dwOverScanY;
    ULONG dwMaxUnscaledX;
    ULONG dwMaxUnscaledY;
    ULONG dwPositionX;
    ULONG dwPositionY;
    ULONG dwBrightness;
    ULONG dwContrast;
    ULONG dwCPType;
    ULONG dwCPCommand;
    ULONG dwCPStandard;
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;
    UCHAR bOEMCopyProtection[256];
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT {
    ULONG NumberOfWorkerThreads;
    ULONG Flags;
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX {
    USHORT HeaderSize;
    ULONG Flags;
    ULONG NotificationInfoSize;
    USHORT NotificationInfoOffset;
    USHORT ProviderMajorVersion;
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT {
    struct _GUID VirtualizationInstanceID;
};

typedef struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT {
    ULONG Size;
    enum _VIRTUAL_STORAGE_BEHAVIOR_CODE BehaviorCode;
};

typedef struct _VIRTUAL_STORAGE_TYPE {
    ULONG DeviceId;
    struct _GUID VendorId;
};

typedef struct _VM_COUNTERS {
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
};

typedef struct _VM_COUNTERS_EX {
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
    ULONG64 PrivateUsage;
};

typedef struct _VM_COUNTERS_EX2 {
    struct _VM_COUNTERS_EX CountersEx;
    ULONG64 PrivateWorkingSetSize;
    ULONG64 SharedCommitUsage;
};

typedef struct _VOLUME_REFS_INFO_BUFFER {
    union _LARGE_INTEGER CacheSizeInBytes;
    union _LARGE_INTEGER AllocatedCacheInBytes;
    union _LARGE_INTEGER PopulatedCacheInBytes;
    union _LARGE_INTEGER InErrorCacheInBytes;
    union _LARGE_INTEGER MemoryUsedForCacheMetadata;
    ULONG CacheLineSize;
    LONG CacheTransactionsOutstanding;
    LONG CacheLinesFree;
    LONG CacheLinesInError;
    union _LARGE_INTEGER CacheHitsInBytes;
    union _LARGE_INTEGER CacheMissesInBytes;
    union _LARGE_INTEGER CachePopulationUpdatesInBytes;
    union _LARGE_INTEGER CacheWriteThroughUpdatesInBytes;
    union _LARGE_INTEGER CacheInvalidationsInBytes;
    union _LARGE_INTEGER CacheOverReadsInBytes;
    union _LARGE_INTEGER MetadataWrittenBytes;
    LONG CacheHitCounter;
    LONG CacheMissCounter;
    LONG CacheLineAllocationCounter;
    LONG CacheInvalidationsCounter;
    LONG CachePopulationUpdatesCounter;
    LONG CacheWriteThroughUpdatesCounter;
    LONG MaxCacheTransactionsOutstanding;
    LONG DataWritesReallocationCount;
    LONG DataInPlaceWriteCount;
    LONG MetadataAllocationsFastTierCount;
    LONG MetadataAllocationsSlowTierCount;
    LONG DataAllocationsFastTierCount;
    LONG DataAllocationsSlowTierCount;
    LONG DestagesSlowTierToFastTier;
    LONG DestagesFastTierToSlowTier;
    LONG SlowTierDataFillRatio;
    LONG FastTierDataFillRatio;
    LONG SlowTierMetadataFillRatio;
    LONG FastTierMetadataFillRatio;
    LONG SlowToFastDestageReadLatency;
    LONG SlowToFastDestageReadLatencyBase;
    LONG SlowToFastDestageWriteLatency;
    LONG SlowToFastDestageWriteLatencyBase;
    LONG FastToSlowDestageReadLatency;
    LONG FastToSlowDestageReadLatencyBase;
    LONG FastToSlowDestageWriteLatency;
    LONG FastToSlowDestageWriteLatencyBase;
    LONG SlowTierContainerFillRatio;
    LONG SlowTierContainerFillRatioBase;
    LONG FastTierContainerFillRatio;
    LONG FastTierContainerFillRatioBase;
    LONG TreeUpdateLatency;
    LONG TreeUpdateLatencyBase;
    LONG CheckpointLatency;
    LONG CheckpointLatencyBase;
    LONG TreeUpdateCount;
    LONG CheckpointCount;
    LONG LogWriteCount;
    LONG LogFillRatio;
    LONG ReadCacheInvalidationsForOverwrite;
    LONG ReadCacheInvalidationsForReuse;
    LONG ReadCacheInvalidationsGeneral;
    LONG ReadCacheChecksOnMount;
    LONG ReadCacheIssuesOnMount;
    LONG TrimLatency;
    LONG TrimLatencyBase;
    LONG DataCompactionCount;
    LONG CompactionReadLatency;
    LONG CompactionReadLatencyBase;
    LONG CompactionWriteLatency;
    LONG CompactionWriteLatencyBase;
    union _LARGE_INTEGER DataInPlaceWriteClusterCount;
    LONG CompactionFailedDueToIneligibleContainer;
    LONG CompactionFailedDueToMaxFragmentation;
    LONG CompactedContainerFillRatio;
    LONG CompactedContainerFillRatioBase;
    LONG ContainerMoveRetryCount;
    LONG ContainerMoveFailedDueToIneligibleContainer;
    LONG CompactionFailureCount;
    LONG ContainerMoveFailureCount;
    union _LARGE_INTEGER NumberOfDirtyMetadataPages;
    LONG NumberOfDirtyTableListEntries;
    LONG NumberOfDeleteQueueEntries;
};

typedef struct _WAKE_TIMER_INFO {
    ULONG64 OffsetToNext;
    union _ULARGE_INTEGER DueTime;
    ULONG Period;
    struct _DIAGNOSTIC_BUFFER ReasonContext;
};

typedef struct _WGLSWAP {
    struct HDC__ *hdc;
    ULONG uiFlags;
};

typedef struct _WIM_PROVIDER_ADD_OVERLAY_INPUT {
    ULONG WimType;
    ULONG WimIndex;
    ULONG WimFileNameOffset;
    ULONG WimFileNameLength;
};

typedef struct _WIM_PROVIDER_CONTROL_INTEGRITY {
    ULONG ControlCode;
};

typedef struct _WIM_PROVIDER_EXTERNAL_INFO {
    ULONG Version;
    ULONG Flags;
    union _LARGE_INTEGER DataSourceId;
    UCHAR ResourceHash[20];
};

typedef struct _WIM_PROVIDER_INTEGRITY_STATUS {
    UCHAR IntegrityComplete;
    UCHAR IntegrityRunning;
    ULONG64 IntegrityAvailable;
    ULONG64 IntegrityRequired;
};

typedef struct _WIM_PROVIDER_OVERLAY_ENTRY {
    ULONG NextEntryOffset;
    union _LARGE_INTEGER DataSourceId;
    struct _GUID WimGuid;
    ULONG WimFileNameOffset;
    ULONG WimType;
    ULONG WimIndex;
    ULONG Flags;
};

typedef struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_START_INTEGRITY {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
    ULONG WimFileNameOffset;
    ULONG WimFileNameLength;
};

typedef struct _WIN32K_SYSCALL_FILTER {
    ULONG FilterState;
    ULONG FilterSet;
};

typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
};

typedef struct _WIN32_FIND_DATAA {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG dwReserved0;
    ULONG dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef struct _WIN32_FIND_DATAW {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG dwReserved0;
    ULONG dwReserved1;
    WCHAR cFileName[260];
    WCHAR cAlternateFileName[14];
};

typedef struct _WIN32_FIND_STREAM_DATA {
    union _LARGE_INTEGER StreamSize;
    WCHAR cStreamName[296];
};

typedef struct _WIN32_MEMORY_RANGE_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NumberOfBytes;
};

typedef struct _WIN32_STREAM_ID {
    ULONG dwStreamId;
    ULONG dwStreamAttributes;
    union _LARGE_INTEGER Size;
    ULONG dwStreamNameSize;
    WCHAR cStreamName[1];
};

typedef struct _WINDOWS_OS_OPTIONS {
    UCHAR Signature[8];
    ULONG Version;
    ULONG Length;
    ULONG OsLoadPathOffset;
    WCHAR OsLoadOptions[1];
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD {
    struct _COORD dwSize;
};

typedef struct _WNF_DELIVERY_DESCRIPTOR {
    ULONG64 SubscriptionId;
    struct _WNF_STATE_NAME StateName;
    ULONG ChangeStamp;
    ULONG StateDataSize;
    ULONG EventMask;
    struct _WNF_TYPE_ID TypeId;
    ULONG StateDataOffset;
};

typedef struct _WNF_STATE_NAME {
    ULONG Data[2];
};

typedef struct _WNF_TYPE_ID {
    struct _GUID TypeId;
};

typedef struct _WNF_USER_SUBSCRIPTION {
};

typedef struct _WOF_EXTERNAL_FILE_ID {
    struct _FILE_ID_128 FileId;
};

typedef struct _WOF_EXTERNAL_INFO {
    ULONG Version;
    ULONG Provider;
};

typedef struct _WOF_VERSION_INFO {
    ULONG WofVersion;
};

typedef struct _WORD_BLOB {
    ULONG clSize;
    USHORT asData[1];
};

typedef struct _WORKER_FACTORY_BASIC_INFORMATION {
    union _LARGE_INTEGER Timeout;
    union _LARGE_INTEGER RetryTimeout;
    union _LARGE_INTEGER IdleTimeout;
    UCHAR Paused;
    UCHAR TimerSet;
    UCHAR QueuedToExWorker;
    UCHAR MayCreate;
    UCHAR CreateInProgress;
    UCHAR InsertedIntoQueue;
    UCHAR Shutdown;
    ULONG BindingCount;
    ULONG ThreadMinimum;
    ULONG ThreadMaximum;
    ULONG PendingWorkerCount;
    ULONG WaitingWorkerCount;
    ULONG TotalWorkerCount;
    ULONG ReleaseCount;
    LONG64 InfiniteWaitGoal;
    PLONG StartRoutine;
    PVOID StartParameter;
    PVOID ProcessId;
    ULONG64 StackReserve;
    ULONG64 StackCommit;
    LONG LastThreadCreationStatus;
};

typedef struct _WORKER_FACTORY_DEFERRED_WORK {
    struct _PORT_MESSAGE *AlpcSendMessage;
    PVOID AlpcSendMessagePort;
    ULONG AlpcSendMessageFlags;
    ULONG Flags;
};

typedef struct _WOW64_ARCHITECTURE_INFORMATION {
    ULONG Machine : 16;
    ULONG KernelMode : 1;
    ULONG UserMode : 1;
    ULONG Native : 1;
    ULONG Process : 1;
    ULONG ReservedZero0 : 12;
};

typedef struct _WOW64_CONTEXT {
    ULONG ContextFlags;
    ULONG Dr0;
    ULONG Dr1;
    ULONG Dr2;
    ULONG Dr3;
    ULONG Dr6;
    ULONG Dr7;
    struct _WOW64_FLOATING_SAVE_AREA FloatSave;
    ULONG SegGs;
    ULONG SegFs;
    ULONG SegEs;
    ULONG SegDs;
    ULONG Edi;
    ULONG Esi;
    ULONG Ebx;
    ULONG Edx;
    ULONG Ecx;
    ULONG Eax;
    ULONG Ebp;
    ULONG Eip;
    ULONG SegCs;
    ULONG EFlags;
    ULONG Esp;
    ULONG SegSs;
    UCHAR ExtendedRegisters[512];
};

typedef struct _WOW64_CPUAREA_INFO {
    PVOID Context;
    struct _X86_NT5_CONTEXT *ContextX86;
    struct _AMD64_CONTEXT *ContextAmd64;
    struct _ARM_CONTEXT *ContextArm;
    struct _ARM64_CONTEXT *ContextArm64;
    PVOID *PerThreadDataLocation;
    PULONG ContextFlagsLocation;
    PULONG CpuAreaFlagsLocation;
    ULONG ArchContextFlag;
    USHORT Machine;
};

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY {
    ULONG Selector;
    struct _WOW64_LDT_ENTRY Descriptor;
};

typedef struct _WOW64_FLOATING_SAVE_AREA {
    ULONG ControlWord;
    ULONG StatusWord;
    ULONG TagWord;
    ULONG ErrorOffset;
    ULONG ErrorSelector;
    ULONG DataOffset;
    ULONG DataSelector;
    UCHAR RegisterArea[80];
    ULONG Cr0NpxState;
};

typedef struct _WOW64_LDT_ENTRY {
    USHORT LimitLow;
    USHORT BaseLow;
     <unnamed-type-HighWord>;
    union {
         <unnamed-type-Bytes>;
        struct {
            UCHAR BaseMid;
            UCHAR Flags1;
            UCHAR Flags2;
            UCHAR BaseHi;
        } Bytes;
         <unnamed-type-Bits>;
        struct {
            ULONG BaseMid : 8;
            ULONG Type : 5;
            ULONG Dpl : 2;
            ULONG Pres : 1;
            ULONG LimitHi : 4;
            ULONG Sys : 1;
            ULONG Reserved_0 : 1;
            ULONG Default_Big : 1;
            ULONG Granularity : 1;
            ULONG BaseHi : 8;
        } Bits;
    } HighWord;
};

typedef struct _WPP_TRACE_CONTROL_BLOCK {
    struct _WPP_TRACE_CONTROL_BLOCK *Next;
    ULONG64 UmRegistrationHandle;
    ULONG64 Logger;
    struct _WPP_WIN2K_CONTROL_BLOCK *Win2kCb;
    PVOID Ptr;
    struct _WPP_TRACE_CONTROL_BLOCK *Cb;
    UCHAR FlagsLen;
    UCHAR Level;
    USHORT Options;
    ULONG Flags[1];
    struct _GUID *ControlGuid;
};

typedef struct _WPP_WIN2K_CONTROL_BLOCK {
    ULONG64 Logger;
    ULONG Flags;
    ULONG Level;
    struct _GUID *ControlGuid;
};

typedef struct _WRITE_USN_REASON_INPUT {
    ULONG Flags;
    ULONG UsnReasonToWrite;
};

typedef struct _WinrtTypeSerializationInfo___x_Windows_CData_CXml_CDom_CIXmlDocument_MIDL_TYPE_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[21];
};

typedef struct _Wx86TIB {
    ULONG Size;
    ULONG InitialPc;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID DeallocationStack;
    ULONG LogFlags;
    ULONG InitialSp;
    UCHAR SimulationCount;
    UCHAR InCpuSimulation;
    UCHAR EmulateInitialPc;
    UCHAR Initialized;
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID CpuContext;
    struct _CONTEXT *InitialExceptionContext;
    PVOID pCallersRIID;
    PVOID pCallersUnknown;
    ULONG Flags;
    PVOID SelfRegDllName;
    PVOID SelfRegDllHandle;
};

typedef struct _Wx86ThreadState {
    PULONG CallBx86Eip;
    PVOID DeallocationCpu;
    UCHAR UseKnownWx86Dll;
    CHAR OleStubInvoked;
};

typedef struct _X86_CALL_FRAME {
    ULONG ReturnAddress;
    ULONG Param1;
    ULONG Param2;
    ULONG CompatibilityArea;
};

typedef struct _X86_NT5_CONTEXT {
};

typedef struct _XMIT_ROUTINE_QUINTUPLE {
    PVOID pfnTranslateToXmit;
    PVOID pfnTranslateFromXmit;
    PVOID pfnFreeXmit;
    PVOID pfnFreeInst;
};

typedef struct _XML_NODE_INFO {
    ULONG dwSize;
    ULONG dwType;
    ULONG dwSubType;
    LONG fTerminal;
    PWCHAR pwcText;
    ULONG ulLen;
    ULONG ulNsPrefixLen;
    PVOID pNode;
    PVOID pReserved;
};

typedef struct _XSAVE_AREA {
    struct _XSAVE_FORMAT LegacyState;
    struct _XSAVE_AREA_HEADER Header;
};

typedef struct _XSAVE_AREA_HEADER {
    ULONG64 Mask;
    ULONG64 CompactionMask;
    ULONG64 Reserved2[6];
};

typedef struct _XSAVE_CET_U_FORMAT {
    ULONG64 Ia32CetUMsr;
    ULONG64 Ia32Pl3SspMsr;
};

typedef struct _XSAVE_FEATURE {
    ULONG FeatureId;
    struct _XSAVE_VENDORS *Vendors;
    ULONG64 Unused;
};

typedef struct _XSAVE_FORMAT {
    USHORT ControlWord;
    USHORT StatusWord;
    UCHAR TagWord;
    UCHAR Reserved1;
    USHORT ErrorOpcode;
    ULONG ErrorOffset;
    USHORT ErrorSelector;
    USHORT Reserved2;
    ULONG DataOffset;
    USHORT DataSelector;
    USHORT Reserved3;
    ULONG MxCsr;
    ULONG MxCsr_Mask;
    struct _M128A FloatRegisters[8];
    struct _M128A XmmRegisters[16];
    UCHAR Reserved4[96];
};

typedef struct _XSAVE_POLICY {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG MaxSaveAreaLength;
    ULONG64 FeatureBitmask;
    ULONG NumberOfFeatures;
    struct _XSAVE_FEATURE Features[1];
};

typedef struct _XSAVE_SUPPORTED_CPU {
    struct XSAVE_CPU_INFO CpuInfo;
    struct XSAVE_CPU_ERRATA *CpuErrata;
    ULONG64 Unused;
};

typedef struct _XSAVE_VENDOR {
    ULONG VendorId[3];
    struct _XSAVE_SUPPORTED_CPU SupportedCpu;
};

typedef struct _XSAVE_VENDORS {
    ULONG NumberOfVendors;
    struct _XSAVE_VENDOR Vendor[1];
};

typedef struct _XSTATE_CONFIGURATION {
    ULONG64 EnabledFeatures;
    ULONG64 EnabledVolatileFeatures;
    ULONG Size;
    ULONG ControlFlags;
    ULONG OptimizedSave : 1;
    ULONG CompactionEnabled : 1;
    struct _XSTATE_FEATURE Features[64];
    ULONG64 EnabledSupervisorFeatures;
    ULONG64 AlignedFeatures;
    ULONG AllFeatureSize;
    ULONG AllFeatures[64];
    ULONG64 EnabledUserVisibleSupervisorFeatures;
};

typedef struct _XSTATE_CONTEXT {
    ULONG64 Mask;
    ULONG Length;
    ULONG Reserved1;
    struct _XSAVE_AREA *Area;
    PVOID Buffer;
};

typedef struct _XSTATE_FEATURE {
    ULONG Offset;
    ULONG Size;
};

typedef struct _ZONEATTRIBUTES {
    ULONG cbSize;
    WCHAR szDisplayName[260];
    WCHAR szDescription[200];
    WCHAR szIconPath[260];
    ULONG dwTemplateMinLevel;
    ULONG dwTemplateRecommended;
    ULONG dwTemplateCurrentLevel;
    ULONG dwFlags;
};

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT {
    ULONG dwMinLength;
    ULONG dwMaxLength;
    ULONG dwIncrement;
};

typedef struct __GENERIC_BINDING_INFO {
    PVOID pObj;
    ULONG Size;
    PVOID *pfnBind;
    PVOID pfnUnbind;
};

typedef struct __MIDL___MIDL_itf_dimm_0000_0000_0012 {
    struct HWND__ *hWnd;
    LONG fOpen;
    struct tagPOINT ptStatusWndPos;
    struct tagPOINT ptSoftKbdPos;
    ULONG fdwConversion;
    ULONG fdwSentence;
     <unnamed-type-lfFont>;
    union {
        struct tagLOGFONTA A;
        struct tagLOGFONTW W;
    } lfFont;
    struct tagCOMPOSITIONFORM cfCompForm;
    struct tagCANDIDATEFORM cfCandForm[4];
    struct HIMCC__ *hCompStr;
    struct HIMCC__ *hCandInfo;
    struct HIMCC__ *hGuideLine;
    struct HIMCC__ *hPrivate;
    ULONG dwNumMsgBuf;
    struct HIMCC__ *hMsgBuf;
    ULONG fdwInit;
    ULONG dwReserve[3];
};

typedef struct __MIDL___MIDL_itf_dimm_0000_0000_0014 {
    ULONG dwPrivateDataSize;
    ULONG fdwProperty;
    ULONG fdwConversionCaps;
    ULONG fdwSentenceCaps;
    ULONG fdwUICaps;
    ULONG fdwSCSCaps;
    ULONG fdwSelectCaps;
};

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 {
    ULONG tyspec;
     __MIDL___MIDL_itf_wtypes_0000_0001_0005;
    union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
};

typedef struct __NCRYPT_KEY_ACCESS_POLICY_BLOB {
    ULONG dwVersion;
    ULONG dwPolicyFlags;
    ULONG cbUserSid;
    ULONG cbApplicationSid;
};

typedef struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO {
    ULONG dwVersion;
    LONG iExpiration;
    UCHAR pabNonce[32];
    UCHAR pabPolicyRef[32];
    UCHAR pabHMAC[32];
};

typedef struct __NCRYPT_PCP_RAW_POLICYDIGEST {
    ULONG dwVersion;
    ULONG cbDigest;
};

typedef struct __NCRYPT_PCP_TPM_FW_VERSION_INFO {
    USHORT major1;
    USHORT major2;
    USHORT minor1;
    USHORT minor2;
};

typedef struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG HeaderSize;
    ULONG cbCertifyInfo;
    ULONG cbSignature;
    ULONG cbTpmPublic;
};

typedef struct __NCRYPT_SUPPORTED_LENGTHS {
    ULONG dwMinLength;
    ULONG dwMaxLength;
    ULONG dwIncrement;
    ULONG dwDefaultLength;
};

typedef struct __NCRYPT_UI_POLICY {
    ULONG dwVersion;
    ULONG dwFlags;
    PWCHAR pszCreationTitle;
    PWCHAR pszFriendlyName;
    PWCHAR pszDescription;
};

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION {
    struct _UNICODE_STRING TypeName;
    ULONG Reserved[22];
};

typedef struct __WIL_RTL_SRWLOCK {
    PVOID Ptr;
};

typedef struct __WIL__WNF_STATE_NAME {
    ULONG Data[2];
};

typedef struct __WIL__WNF_TYPE_ID {
    struct _GUID TypeId;
};

typedef struct __WIL__WNF_USER_SUBSCRIPTION {
};

typedef struct __WilFeatureTraits_Feature_MSRC39592_12749998 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy6;
    CHAR ___dummy0;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1;
    CHAR ___dummy2;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy3;
    CHAR ___dummy4;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy5;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC39805_13013422 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy13;
    CHAR ___dummy7;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy8;
    CHAR ___dummy9;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy10;
    CHAR ___dummy11;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy12;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC41263_14085975 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy20;
    CHAR ___dummy14;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy15;
    CHAR ___dummy16;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy17;
    CHAR ___dummy18;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy19;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC41449_14282720 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy27;
    CHAR ___dummy21;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy22;
    CHAR ___dummy23;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy24;
    CHAR ___dummy25;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy26;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC44445_16718509 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy59;
    CHAR ___dummy55;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy56;
    CHAR ___dummy57;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy58;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC45187_17440332 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy49;
    CHAR ___dummy45;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy46;
    CHAR ___dummy47;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy48;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC45635_17718802 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy39;
    CHAR ___dummy35;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy36;
    CHAR ___dummy37;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy38;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC45785_17791580 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy44;
    CHAR ___dummy40;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy41;
    CHAR ___dummy42;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy43;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46037_17906251 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy34;
    CHAR ___dummy28;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy29;
    CHAR ___dummy30;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy31;
    CHAR ___dummy32;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy33;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46521_18338331 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy64;
    CHAR ___dummy60;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy61;
    CHAR ___dummy62;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy63;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46522_18338316 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy69;
    CHAR ___dummy65;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy66;
    CHAR ___dummy67;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy68;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46531_18225312 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy54;
    CHAR ___dummy50;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy51;
    CHAR ___dummy52;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy53;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46712_18296196 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy74;
    CHAR ___dummy70;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy71;
    CHAR ___dummy72;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy73;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46861_18388632 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy79;
    CHAR ___dummy75;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy76;
    CHAR ___dummy77;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy78;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC46881_18391601 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy84;
    CHAR ___dummy80;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy81;
    CHAR ___dummy82;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy83;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47072_18544034 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy89;
    CHAR ___dummy85;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy86;
    CHAR ___dummy87;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy88;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47097_18546487 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy94;
    CHAR ___dummy90;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy91;
    CHAR ___dummy92;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy93;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47208_18734728 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy99;
    CHAR ___dummy95;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy96;
    CHAR ___dummy97;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy98;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47284_18736032 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy104;
    CHAR ___dummy100;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy101;
    CHAR ___dummy102;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy103;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47319_18746405 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy109;
    CHAR ___dummy105;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy106;
    CHAR ___dummy107;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy108;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47359_18787260 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy114;
    CHAR ___dummy110;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy111;
    CHAR ___dummy112;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy113;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MSRC47461_18851232 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy119;
    CHAR ___dummy115;
    enum wil::UsageReportingMode usageReportingMode;
    CHAR ___dummy116;
    CHAR ___dummy117;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy118;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __lc_time_data {
};

typedef struct __m128d {
    DOUBLE m128d_f64[2];
};

typedef struct __m256d {
    DOUBLE m256d_f64[4];
};

typedef struct __midl_frag100_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag105_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag140_t {
    struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
};

typedef struct __midl_frag143_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag14_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_REGION_FORMAT frag1;
        struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    } frag2;
};

typedef struct __midl_frag151_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag15_t {
    struct _NDR64_NON_ENCAPSULATED_UNION frag1;
    struct _NDR64_UNION_ARM_SELECTOR frag2;
    struct _NDR64_UNION_ARM frag3;
    struct _NDR64_UNION_ARM frag4;
    struct _NDR64_UNION_ARM frag5;
    struct _NDR64_UNION_ARM frag6;
    struct _NDR64_UNION_ARM frag7;
    struct _NDR64_UNION_ARM frag8;
    struct _NDR64_UNION_ARM frag9;
    struct _NDR64_UNION_ARM frag10;
    struct _NDR64_UNION_ARM frag11;
    struct _NDR64_UNION_ARM frag12;
    struct _NDR64_UNION_ARM frag13;
    struct _NDR64_UNION_ARM frag14;
    struct _NDR64_UNION_ARM frag15;
    struct _NDR64_UNION_ARM frag16;
    struct _NDR64_UNION_ARM frag17;
    struct _NDR64_UNION_ARM frag18;
    struct _NDR64_UNION_ARM frag19;
    struct _NDR64_UNION_ARM frag20;
    struct _NDR64_UNION_ARM frag21;
    struct _NDR64_UNION_ARM frag22;
    struct _NDR64_UNION_ARM frag23;
    struct _NDR64_UNION_ARM frag24;
    struct _NDR64_UNION_ARM frag25;
    struct _NDR64_UNION_ARM frag26;
    struct _NDR64_UNION_ARM frag27;
    struct _NDR64_UNION_ARM frag28;
    struct _NDR64_UNION_ARM frag29;
    struct _NDR64_UNION_ARM frag30;
    struct _NDR64_UNION_ARM frag31;
    struct _NDR64_UNION_ARM frag32;
    struct _NDR64_UNION_ARM frag33;
    struct _NDR64_UNION_ARM frag34;
    struct _NDR64_UNION_ARM frag35;
    struct _NDR64_UNION_ARM frag36;
    struct _NDR64_UNION_ARM frag37;
    struct _NDR64_UNION_ARM frag38;
    struct _NDR64_UNION_ARM frag39;
    struct _NDR64_UNION_ARM frag40;
    struct _NDR64_UNION_ARM frag41;
    struct _NDR64_UNION_ARM frag42;
    struct _NDR64_UNION_ARM frag43;
    struct _NDR64_UNION_ARM frag44;
    struct _NDR64_UNION_ARM frag45;
    struct _NDR64_UNION_ARM frag46;
    struct _NDR64_UNION_ARM frag47;
    struct _NDR64_UNION_ARM frag48;
    struct _NDR64_UNION_ARM frag49;
    ULONG frag50;
};

typedef struct __midl_frag160_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag166_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag167_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag16_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag179_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag195_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag200_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag20_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag210_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag215_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag219_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag223_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
    struct _NDR64_PARAM_FORMAT frag6;
};

typedef struct __midl_frag229_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag234_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag236_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag242_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag245_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag248_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag250_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag254_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag257_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag25_t {
    struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
};

typedef struct __midl_frag260_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag263_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag266_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag269_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag271_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag276_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag282_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag288_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag293_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag29_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag2_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag300_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag307_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag309_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag314_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
};

typedef struct __midl_frag316_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag318_t {
    struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_NO_REPEAT_FORMAT frag1;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
        struct _NDR64_POINTER_FORMAT frag3;
        struct _NDR64_NO_REPEAT_FORMAT frag4;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
        struct _NDR64_POINTER_FORMAT frag6;
        struct _NDR64_NO_REPEAT_FORMAT frag7;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag8;
        struct _NDR64_POINTER_FORMAT frag9;
        struct _NDR64_NO_REPEAT_FORMAT frag10;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag11;
        struct _NDR64_POINTER_FORMAT frag12;
        UCHAR frag13;
    } frag2;
};

typedef struct __midl_frag323_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag326_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag330_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag334_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag337_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag340_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag345_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
    struct _NDR64_PARAM_FORMAT frag6;
    struct _NDR64_PARAM_FORMAT frag7;
};

typedef struct __midl_frag349_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag34_t {
    struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_REGION_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag355_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag3;
            struct _NDR64_POINTER_FORMAT frag4;
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
            struct _NDR64_POINTER_FORMAT frag6;
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag7;
            struct _NDR64_POINTER_FORMAT frag8;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag356_t {
    ULONG frag1;
    struct _NDR64_EXPR_OPERATOR frag2;
    struct _NDR64_EXPR_VAR frag3;
};

typedef struct __midl_frag358_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag35_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag362_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag367_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag369_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
    struct _NDR64_PARAM_FORMAT frag6;
};

typedef struct __midl_frag36_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag374_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag375_t {
    struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
};

typedef struct __midl_frag376_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag377_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag378_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag379_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag37_t {
    struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
};

typedef struct __midl_frag381_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag383_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag388_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag389_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag38_t {
    struct _NDR64_ENCAPSULATED_UNION frag1;
    struct _NDR64_UNION_ARM_SELECTOR frag2;
    struct _NDR64_UNION_ARM frag3;
    struct _NDR64_UNION_ARM frag4;
    struct _NDR64_UNION_ARM frag5;
    struct _NDR64_UNION_ARM frag6;
    struct _NDR64_UNION_ARM frag7;
    struct _NDR64_UNION_ARM frag8;
    struct _NDR64_UNION_ARM frag9;
    struct _NDR64_UNION_ARM frag10;
    struct _NDR64_UNION_ARM frag11;
    struct _NDR64_UNION_ARM frag12;
    ULONG frag13;
};

typedef struct __midl_frag392_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag395_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag396_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag398_t {
    struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
};

typedef struct __midl_frag399_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag39_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag400_t {
    ULONG frag1;
    struct _NDR64_EXPR_OPERATOR frag2;
    struct _NDR64_EXPR_VAR frag3;
};

typedef struct __midl_frag406_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag40_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag421_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag429_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
    struct _NDR64_PARAM_FORMAT frag6;
};

typedef struct __midl_frag433_t {
    struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
};

typedef struct __midl_frag434_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag435_t {
    ULONG frag1;
    struct _NDR64_EXPR_OPERATOR frag2;
    struct _NDR64_EXPR_VAR frag3;
};

typedef struct __midl_frag436_t {
    ULONG frag1;
    struct _NDR64_EXPR_NOOP frag2;
    struct _NDR64_EXPR_CONST64 frag3;
};

typedef struct __midl_frag43_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag44_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag465_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag481_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag501_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag511_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag51_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag52_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag539_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag542_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag546_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag552_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag559_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag563_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag578_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag57_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag582_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag58_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag592_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag59_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag5_t {
    struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
};

typedef struct __midl_frag612_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag617_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag622_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag62_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag63_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag640_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag64_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag656_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag663_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag66_t {
    struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_NO_REPEAT_FORMAT frag1;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
        struct _NDR64_POINTER_FORMAT frag3;
        struct _NDR64_NO_REPEAT_FORMAT frag4;
        struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
        struct _NDR64_POINTER_FORMAT frag6;
        UCHAR frag7;
    } frag2;
};

typedef struct __midl_frag679_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag684_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
};

typedef struct __midl_frag686_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag68_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag690_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag695_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag699_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag69_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag6_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag704_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
};

typedef struct __midl_frag709_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag716_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag725_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag72_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag732_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
    struct _NDR64_PARAM_FORMAT frag5;
};

typedef struct __midl_frag73_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
        struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag7;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    } frag2;
};

typedef struct __midl_frag741_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag748_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag74_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_REPEAT_FORMAT frag1;
        struct {
            struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
            struct _NDR64_POINTER_FORMAT frag2;
        } frag2;
        UCHAR frag3;
    } frag2;
    struct _NDR64_ARRAY_ELEMENT_INFO frag3;
};

typedef struct __midl_frag755_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __midl_frag79_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag7_t {
    ULONG frag1;
    struct _NDR64_EXPR_VAR frag2;
};

typedef struct __midl_frag80_t {
    struct _NDR64_FIX_ARRAY_HEADER_FORMAT frag1;
};

typedef struct __midl_frag81_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag85_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag86_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag87_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag90_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag91_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag92_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag95_t {
    struct _NDR64_POINTER_FORMAT frag1;
};

typedef struct __midl_frag96_t {
    struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
    struct {
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
        struct _NDR64_MEMPAD_FORMAT frag2;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
        struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    } frag2;
};

typedef struct __midl_frag97_t {
    struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
    struct _NDR64_ARRAY_ELEMENT_INFO frag2;
};

typedef struct __midl_frag98_t {
    struct _NDR64_PROC_FORMAT frag1;
    struct _NDR64_PARAM_FORMAT frag2;
    struct _NDR64_PARAM_FORMAT frag3;
    struct _NDR64_PARAM_FORMAT frag4;
};

typedef struct __msxml6_ReferenceRemainingTypes__ {
    enum tagDOMNodeType __tagDomNodeType__;
    enum tagDOMNodeType __domNodeType__;
    enum _SERVERXMLHTTP_OPTION __serverXmlHttpOptionEnum__;
    enum _SERVERXMLHTTP_OPTION __serverXmlHttpOption__;
    enum _SXH_SERVER_CERT_OPTION __serverCertOptionEnum__;
    enum _SXH_SERVER_CERT_OPTION __serverCertOption__;
    enum _SXH_PROXY_SETTING __proxySettingEnum__;
    enum _SXH_PROXY_SETTING __proxySetting__;
    enum _SOMITEMTYPE __somItemTypeEnum__;
    enum _SOMITEMTYPE __somItemType__;
    enum _SCHEMAUSE __schemaUseEnum__;
    enum _SCHEMAUSE __schemaUse__;
    enum _SCHEMADERIVATIONMETHOD __schemaDerivationMethodEnum__;
    enum _SCHEMADERIVATIONMETHOD __schemaDerivationMethod__;
    enum _SCHEMACONTENTTYPE __schemaContentTypeEnum__;
    enum _SCHEMACONTENTTYPE __schemaContentType__;
    enum _SCHEMAPROCESSCONTENTS __schemaProcessContentsEnum__;
    enum _SCHEMAPROCESSCONTENTS __schemaProcessContents__;
    enum _SCHEMAWHITESPACE __schemaWhitespaceEnum__;
    enum _SCHEMAWHITESPACE __schemaWhitespace__;
    enum _SCHEMATYPEVARIETY __schemaTypeVarietyEnum__;
    enum _SCHEMATYPEVARIETY __schemaTypeVariety__;
};

typedef struct __s_GUID {
    ULONG Data1;
    USHORT Data2;
    USHORT Data3;
    UCHAR Data4[8];
};

typedef struct __type_info_node {
    PVOID memPtr;
    struct __type_info_node *next;
};

typedef struct __vc_attributes::aggregatableAttribute {
    LONG type_e;
    VOID aggregatableAttribute;
    VOID aggregatableAttribute;
    enum __vc_attributes::aggregatableAttribute::type_e type;
};

typedef struct __vc_attributes::appobjectAttribute {
    VOID appobjectAttribute;
};

typedef struct __vc_attributes::async_uuidAttribute {
    VOID async_uuidAttribute;
    PCHAR uuid;
};

typedef struct __vc_attributes::atl::aggregatesAttribute {
    VOID aggregatesAttribute;
    VOID aggregatesAttribute;
    PCHAR clsid;
};

typedef struct __vc_attributes::atl::com_interface_entryAttribute {
    VOID com_interface_entryAttribute;
    VOID com_interface_entryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::db_accessorAttribute {
    VOID db_accessorAttribute;
    VOID db_accessorAttribute;
    LONG id;
    BOOLEAN auto_;
};

typedef struct __vc_attributes::atl::db_columnAttribute {
    VOID db_columnAttribute;
    VOID db_columnAttribute;
    VOID db_columnAttribute;
    PCHAR ordinal;
    PCHAR dbtype;
    PCHAR precision;
    PCHAR scale;
    PCHAR status;
    PCHAR length;
};

typedef struct __vc_attributes::atl::db_commandAttribute {
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    PCHAR command;
    PCHAR name;
    PCHAR source_name;
    PCHAR hresult;
    PCHAR bindings;
    PCHAR bulk_fetch;
};

typedef struct __vc_attributes::atl::db_paramAttribute {
    VOID db_paramAttribute;
    VOID db_paramAttribute;
    VOID db_paramAttribute;
    PCHAR ordinal;
    PCHAR paramtype;
    PCHAR dbtype;
    PCHAR precision;
    PCHAR scale;
    PCHAR status;
    PCHAR length;
};

typedef struct __vc_attributes::atl::db_sourceAttribute {
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    PCHAR source;
    PCHAR name;
    PCHAR hresult;
};

typedef struct __vc_attributes::atl::db_tableAttribute {
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    PCHAR table;
    PCHAR name;
    PCHAR source_name;
    PCHAR hresult;
    PCHAR bulk_fetch;
};

typedef struct __vc_attributes::atl::implements_categoryAttribute {
    VOID implements_categoryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::perf_counterAttribute {
    VOID perf_counterAttribute;
    VOID perf_counterAttribute;
    PCHAR namestring;
    PCHAR helpstring;
    LONG name_res;
    LONG help_res;
    LONG countertype;
    LONG defscale;
    BOOLEAN default_counter;
    LONG detail;
    LONG max_counter_size;
    PCHAR countertype_string;
};

typedef struct __vc_attributes::atl::perf_objectAttribute {
    VOID perf_objectAttribute;
    VOID perf_objectAttribute;
    LONG name_res;
    LONG help_res;
    PCHAR namestring;
    PCHAR helpstring;
    LONG detail;
    BOOLEAN no_instances;
    PCHAR class_;
    LONG maxinstnamelen;
};

typedef struct __vc_attributes::atl::perfmonAttribute {
    VOID perfmonAttribute;
    VOID perfmonAttribute;
    VOID perfmonAttribute;
    PCHAR name;
    BOOLEAN register;
};

typedef struct __vc_attributes::atl::rdxAttribute {
    VOID rdxAttribute;
    VOID rdxAttribute;
    VOID rdxAttribute;
    PCHAR key;
    PCHAR valuename;
    PCHAR regtype;
};

typedef struct __vc_attributes::atl::registration_scriptAttribute {
    VOID registration_scriptAttribute;
    VOID registration_scriptAttribute;
    PCHAR script;
};

typedef struct __vc_attributes::atl::request_handlerAttribute {
    VOID request_handlerAttribute;
    VOID request_handlerAttribute;
    VOID request_handlerAttribute;
    PCHAR name;
    PCHAR sdl;
};

typedef struct __vc_attributes::atl::requires_categoryAttribute {
    VOID requires_categoryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::soap_handlerAttribute {
    VOID soap_handlerAttribute;
    VOID soap_handlerAttribute;
    PCHAR name;
    PCHAR namespace;
    PCHAR protocol;
    PCHAR style;
    PCHAR use;
};

typedef struct __vc_attributes::atl::soap_headerAttribute {
    VOID soap_headerAttribute;
    VOID soap_headerAttribute;
    VOID soap_headerAttribute;
    PCHAR value;
    BOOLEAN required;
    BOOLEAN in;
    BOOLEAN out;
};

typedef struct __vc_attributes::atl::soap_methodAttribute {
    VOID soap_methodAttribute;
    VOID soap_methodAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::atl::soap_namespaceAttribute {
    VOID soap_namespaceAttribute;
    VOID soap_namespaceAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::support_error_infoAttribute {
    VOID support_error_infoAttribute;
    PCHAR error_interface;
};

typedef struct __vc_attributes::atl::synchronizeAttribute {
    VOID synchronizeAttribute;
};

typedef struct __vc_attributes::atl::tag_nameAttribute {
    VOID tag_nameAttribute;
    VOID tag_nameAttribute;
    VOID tag_nameAttribute;
    PCHAR name;
    PCHAR parse_func;
};

typedef struct __vc_attributes::bindableAttribute {
    VOID bindableAttribute;
};

typedef struct __vc_attributes::call_asAttribute {
    VOID call_asAttribute;
    PVOID local_proc;
};

typedef struct __vc_attributes::caseAttribute {
    VOID caseAttribute;
    LONG value;
};

typedef struct __vc_attributes::coclassAttribute {
    VOID coclassAttribute;
};

typedef struct __vc_attributes::controlAttribute {
    VOID controlAttribute;
};

typedef struct __vc_attributes::cpp_quoteAttribute {
    VOID cpp_quoteAttribute;
    PCHAR string;
};

typedef struct __vc_attributes::customAttribute {
    VOID customAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultAttribute {
    VOID defaultAttribute;
    VOID defaultAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultbindAttribute {
    VOID defaultbindAttribute;
};

typedef struct __vc_attributes::defaultcollelemAttribute {
    VOID defaultcollelemAttribute;
};

typedef struct __vc_attributes::defaultvalueAttribute {
    VOID defaultvalueAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultvtableAttribute {
    VOID defaultvtableAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::dispinterfaceAttribute {
    VOID dispinterfaceAttribute;
};

typedef struct __vc_attributes::displaybindAttribute {
    VOID displaybindAttribute;
};

typedef struct __vc_attributes::dualAttribute {
    VOID dualAttribute;
};

typedef struct __vc_attributes::emitidlAttribute {
    LONG restricted;
    LONG forced;
    LONG push;
    LONG pop;
    VOID emitidlAttribute;
    VOID emitidlAttribute;
    VOID emitidlAttribute;
    LONG value;
    BOOLEAN defaultimports;
};

typedef struct __vc_attributes::entryAttribute {
    VOID entryAttribute;
    PCHAR entry_id;
};

typedef struct __vc_attributes::event_receiverAttribute {
    LONG type_e;
    VOID event_receiverAttribute;
    VOID event_receiverAttribute;
    VOID event_receiverAttribute;
    enum __vc_attributes::event_receiverAttribute::type_e type;
    BOOLEAN layout_dependent;
};

typedef struct __vc_attributes::event_sourceAttribute {
    LONG type_e;
    LONG optimize_e;
    VOID event_sourceAttribute;
    VOID event_sourceAttribute;
    enum __vc_attributes::event_sourceAttribute::type_e type;
    enum __vc_attributes::event_sourceAttribute::optimize_e optimize;
    BOOLEAN decorate;
};

typedef struct __vc_attributes::exportAttribute {
    VOID exportAttribute;
};

typedef struct __vc_attributes::first_isAttribute {
    VOID first_isAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::helpcontextAttribute {
    VOID helpcontextAttribute;
    PCHAR helpcontext_value;
};

typedef struct __vc_attributes::helper_attributes::as_stringAttribute {
    VOID as_stringAttribute;
};

typedef struct __vc_attributes::helper_attributes::attributeAttribute {
    LONG All;
    LONG Assembly;
    LONG Class;
    LONG Constructor;
    LONG Delegate;
    LONG Enum;
    LONG Event;
    LONG Field;
    LONG GenericParameter;
    LONG Interface;
    LONG Method;
    LONG Module;
    LONG Parameter;
    LONG Property;
    LONG ReturnValue;
    LONG Struct;
    VOID attributeAttribute;
    VOID attributeAttribute;
    LONG ValidOn;
    BOOLEAN AllowMultiple;
    BOOLEAN Inherited;
};

typedef struct __vc_attributes::helper_attributes::default_valueAttribute {
    VOID default_valueAttribute;
    PVOID value;
};

typedef struct __vc_attributes::helper_attributes::help_stringAttribute {
    VOID help_stringAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::helper_attributes::multi_valueAttribute {
    VOID multi_valueAttribute;
};

typedef struct __vc_attributes::helper_attributes::notify_atlprovAttribute {
    VOID notify_atlprovAttribute;
};

typedef struct __vc_attributes::helper_attributes::process_earlyAttribute {
    VOID process_earlyAttribute;
};

typedef struct __vc_attributes::helper_attributes::repeatableAttribute {
    VOID repeatableAttribute;
};

typedef struct __vc_attributes::helper_attributes::requires_valueAttribute {
    VOID requires_valueAttribute;
};

typedef struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute {
    LONG All;
    LONG Assembly;
    LONG Class;
    LONG Constructor;
    LONG Delegate;
    LONG Enum;
    LONG Event;
    LONG Field;
    LONG GenericParameter;
    LONG Interface;
    LONG Method;
    LONG Module;
    LONG Parameter;
    LONG Property;
    LONG ReturnValue;
    LONG Struct;
    LONG Typedef;
    VOID source_annotation_attributeAttribute;
    VOID source_annotation_attributeAttribute;
    LONG ValidOn;
    BOOLEAN AllowMultiple;
};

typedef struct __vc_attributes::helper_attributes::usageAttribute {
    LONG usage_e;
    VOID usageAttribute;
    ULONG value;
};

typedef struct __vc_attributes::helper_attributes::v1_alttypeAttribute {
    LONG type_e;
    VOID v1_alttypeAttribute;
    enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e type;
};

typedef struct __vc_attributes::helper_attributes::v1_earlyAttribute {
    VOID v1_earlyAttribute;
};

typedef struct __vc_attributes::helper_attributes::v1_nameAttribute {
    VOID v1_nameAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::helpfileAttribute {
    VOID helpfileAttribute;
    PCHAR filename;
};

typedef struct __vc_attributes::helpstringAttribute {
    VOID helpstringAttribute;
    PCHAR help_text_string;
};

typedef struct __vc_attributes::helpstringcontextAttribute {
    VOID helpstringcontextAttribute;
    LONG contextid;
};

typedef struct __vc_attributes::helpstringdllAttribute {
    VOID helpstringdllAttribute;
    PCHAR dllname;
};

typedef struct __vc_attributes::hiddenAttribute {
    VOID hiddenAttribute;
};

typedef struct __vc_attributes::hookAttribute {
    VOID hookAttribute;
    VOID hookAttribute;
    VOID hookAttribute;
    VOID hookAttribute;
    PCHAR event;
    PCHAR source;
    PCHAR handler;
    PCHAR receiver;
};

typedef struct __vc_attributes::idAttribute {
    VOID idAttribute;
    LONG id_num;
};

typedef struct __vc_attributes::idl_moduleAttribute {
    VOID idl_moduleAttribute;
    VOID idl_moduleAttribute;
    PCHAR name;
    PCHAR dllname;
    PCHAR version;
    PCHAR uuid;
    PCHAR helpstring;
    LONG helpstringcontext;
    LONG helpcontext;
    BOOLEAN hidden;
    BOOLEAN restricted;
};

typedef struct __vc_attributes::idl_quoteAttribute {
    VOID idl_quoteAttribute;
    VOID idl_quoteAttribute;
    PCHAR text;
};

typedef struct __vc_attributes::iid_isAttribute {
    VOID iid_isAttribute;
    PCHAR limited_expression;
};

typedef struct __vc_attributes::immediatebindAttribute {
    VOID immediatebindAttribute;
};

typedef struct __vc_attributes::implementsAttribute {
    VOID implementsAttribute;
    VOID implementsAttribute;
    PCHAR interfaces;
    PCHAR dispinterfaces;
};

typedef struct __vc_attributes::importAttribute {
    VOID importAttribute;
    PCHAR idl_file;
};

typedef struct __vc_attributes::importidlAttribute {
    VOID importidlAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::importlibAttribute {
    VOID importlibAttribute;
    PCHAR tlb_file;
};

typedef struct __vc_attributes::inAttribute {
    VOID inAttribute;
};

typedef struct __vc_attributes::includeAttribute {
    VOID includeAttribute;
    PCHAR include_file;
};

typedef struct __vc_attributes::includelibAttribute {
    VOID includelibAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::last_isAttribute {
    VOID last_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::lcidAttribute {
    VOID lcidAttribute;
};

typedef struct __vc_attributes::length_isAttribute {
    VOID length_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::library_blockAttribute {
    VOID library_blockAttribute;
};

typedef struct __vc_attributes::licensedAttribute {
    VOID licensedAttribute;
};

typedef struct __vc_attributes::localAttribute {
    VOID localAttribute;
};

typedef struct __vc_attributes::max_isAttribute {
    VOID max_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::moduleAttribute {
    LONG type_e;
    VOID moduleAttribute;
    VOID moduleAttribute;
    VOID moduleAttribute;
    enum __vc_attributes::moduleAttribute::type_e type;
    PCHAR name;
    PCHAR version;
    PCHAR uuid;
    LONG lcid;
    BOOLEAN control;
    PCHAR helpstring;
    LONG helpstringcontext;
    PCHAR helpstringdll;
    PCHAR helpfile;
    LONG helpcontext;
    BOOLEAN hidden;
    BOOLEAN restricted;
    PCHAR custom;
    PCHAR resource_name;
};

typedef struct __vc_attributes::ms_unionAttribute {
    VOID ms_unionAttribute;
};

typedef struct __vc_attributes::no_injected_textAttribute {
    VOID no_injected_textAttribute;
    VOID no_injected_textAttribute;
    BOOLEAN value;
};

typedef struct __vc_attributes::nonbrowsableAttribute {
    VOID nonbrowsableAttribute;
};

typedef struct __vc_attributes::noncreatableAttribute {
    VOID noncreatableAttribute;
};

typedef struct __vc_attributes::nonextensibleAttribute {
    VOID nonextensibleAttribute;
};

typedef struct __vc_attributes::objectAttribute {
    VOID objectAttribute;
};

typedef struct __vc_attributes::odlAttribute {
    VOID odlAttribute;
};

typedef struct __vc_attributes::oleautomationAttribute {
    VOID oleautomationAttribute;
};

typedef struct __vc_attributes::optionalAttribute {
    VOID optionalAttribute;
};

typedef struct __vc_attributes::outAttribute {
    VOID outAttribute;
};

typedef struct __vc_attributes::pointer_defaultAttribute {
    LONG type_e;
    VOID pointer_defaultAttribute;
    enum __vc_attributes::pointer_defaultAttribute::type_e type;
};

typedef struct __vc_attributes::pragmaAttribute {
    VOID pragmaAttribute;
    PCHAR token_sequence;
};

typedef struct __vc_attributes::progidAttribute {
    VOID progidAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::propgetAttribute {
    VOID propgetAttribute;
};

typedef struct __vc_attributes::propputAttribute {
    VOID propputAttribute;
};

typedef struct __vc_attributes::propputrefAttribute {
    VOID propputrefAttribute;
};

typedef struct __vc_attributes::providerAttribute {
    VOID providerAttribute;
    VOID providerAttribute;
    PCHAR name;
    PCHAR uuid;
    LONG cookies;
};

typedef struct __vc_attributes::ptrAttribute {
    VOID ptrAttribute;
};

typedef struct __vc_attributes::publicAttribute {
    VOID publicAttribute;
};

typedef struct __vc_attributes::rangeAttribute {
    VOID rangeAttribute;
    LONG low_val;
    LONG high_val;
};

typedef struct __vc_attributes::readonlyAttribute {
    VOID readonlyAttribute;
};

typedef struct __vc_attributes::refAttribute {
    VOID refAttribute;
};

typedef struct __vc_attributes::requesteditAttribute {
    VOID requesteditAttribute;
};

typedef struct __vc_attributes::restrictedAttribute {
    VOID restrictedAttribute;
    VOID restrictedAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::retvalAttribute {
    VOID retvalAttribute;
};

typedef struct __vc_attributes::satypeAttribute {
    VOID satypeAttribute;
    VOID satypeAttribute;
    PCHAR type;
};

typedef struct __vc_attributes::size_isAttribute {
    VOID size_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::sourceAttribute {
    VOID sourceAttribute;
    VOID sourceAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::stringAttribute {
    VOID stringAttribute;
};

typedef struct __vc_attributes::switch_isAttribute {
    VOID switch_isAttribute;
    PCHAR limited_expression;
};

typedef struct __vc_attributes::switch_typeAttribute {
    VOID switch_typeAttribute;
    PCHAR switch_type_specifier;
};

typedef struct __vc_attributes::threadingAttribute {
    LONG threading_e;
    VOID threadingAttribute;
    VOID threadingAttribute;
    enum __vc_attributes::threadingAttribute::threading_e value;
};

typedef struct __vc_attributes::transmit_asAttribute {
    VOID transmit_asAttribute;
    PCHAR xmit_type;
};

typedef struct __vc_attributes::uidefaultAttribute {
    VOID uidefaultAttribute;
};

typedef struct __vc_attributes::unhookAttribute {
    VOID unhookAttribute;
    VOID unhookAttribute;
    VOID unhookAttribute;
    VOID unhookAttribute;
    PCHAR event;
    PCHAR source;
    PCHAR handler;
    PCHAR receiver;
};

typedef struct __vc_attributes::uniqueAttribute {
    VOID uniqueAttribute;
};

typedef struct __vc_attributes::usesgetlasterrorAttribute {
    VOID usesgetlasterrorAttribute;
};

typedef struct __vc_attributes::uuidAttribute {
    VOID uuidAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::v1_enumAttribute {
    VOID v1_enumAttribute;
};

typedef struct __vc_attributes::varargAttribute {
    VOID varargAttribute;
};

typedef struct __vc_attributes::versionAttribute {
    VOID versionAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::vi_progidAttribute {
    VOID vi_progidAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::wire_marshalAttribute {
    VOID wire_marshalAttribute;
    PCHAR wire_type;
};

typedef struct _complex {
    DOUBLE x;
    DOUBLE y;
};

typedef struct _cpinfo {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
};

typedef struct _cpinfoexA {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
    WCHAR UnicodeDefaultChar;
    ULONG CodePage;
    CHAR CodePageName[260];
};

typedef struct _cpinfoexW {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
    WCHAR UnicodeDefaultChar;
    ULONG CodePage;
    WCHAR CodePageName[260];
};

typedef struct _currencyfmtA {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PCHAR lpDecimalSep;
    PCHAR lpThousandSep;
    ULONG NegativeOrder;
    ULONG PositiveOrder;
    PCHAR lpCurrencySymbol;
};

typedef struct _currencyfmtW {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PWCHAR lpDecimalSep;
    PWCHAR lpThousandSep;
    ULONG NegativeOrder;
    ULONG PositiveOrder;
    PWCHAR lpCurrencySymbol;
};

typedef struct _devicemodeA {
    UCHAR dmDeviceName[32];
    USHORT dmSpecVersion;
    USHORT dmDriverVersion;
    USHORT dmSize;
    USHORT dmDriverExtra;
    ULONG dmFields;
    SHORT dmOrientation;
    SHORT dmPaperSize;
    SHORT dmPaperLength;
    SHORT dmPaperWidth;
    SHORT dmScale;
    SHORT dmCopies;
    SHORT dmDefaultSource;
    SHORT dmPrintQuality;
    struct _POINTL dmPosition;
    ULONG dmDisplayOrientation;
    ULONG dmDisplayFixedOutput;
    SHORT dmColor;
    SHORT dmDuplex;
    SHORT dmYResolution;
    SHORT dmTTOption;
    SHORT dmCollate;
    UCHAR dmFormName[32];
    USHORT dmLogPixels;
    ULONG dmBitsPerPel;
    ULONG dmPelsWidth;
    ULONG dmPelsHeight;
    ULONG dmDisplayFlags;
    ULONG dmNup;
    ULONG dmDisplayFrequency;
    ULONG dmICMMethod;
    ULONG dmICMIntent;
    ULONG dmMediaType;
    ULONG dmDitherType;
    ULONG dmReserved1;
    ULONG dmReserved2;
    ULONG dmPanningWidth;
    ULONG dmPanningHeight;
};

typedef struct _devicemodeW {
    WCHAR dmDeviceName[32];
    USHORT dmSpecVersion;
    USHORT dmDriverVersion;
    USHORT dmSize;
    USHORT dmDriverExtra;
    ULONG dmFields;
    SHORT dmOrientation;
    SHORT dmPaperSize;
    SHORT dmPaperLength;
    SHORT dmPaperWidth;
    SHORT dmScale;
    SHORT dmCopies;
    SHORT dmDefaultSource;
    SHORT dmPrintQuality;
    struct _POINTL dmPosition;
    ULONG dmDisplayOrientation;
    ULONG dmDisplayFixedOutput;
    SHORT dmColor;
    SHORT dmDuplex;
    SHORT dmYResolution;
    SHORT dmTTOption;
    SHORT dmCollate;
    WCHAR dmFormName[32];
    USHORT dmLogPixels;
    ULONG dmBitsPerPel;
    ULONG dmPelsWidth;
    ULONG dmPelsHeight;
    ULONG dmDisplayFlags;
    ULONG dmNup;
    ULONG dmDisplayFrequency;
    ULONG dmICMMethod;
    ULONG dmICMIntent;
    ULONG dmMediaType;
    ULONG dmDitherType;
    ULONG dmReserved1;
    ULONG dmReserved2;
    ULONG dmPanningWidth;
    ULONG dmPanningHeight;
};

typedef struct _div_t {
    LONG quot;
    LONG rem;
};

typedef struct _exception {
    LONG type;
    PCHAR name;
    DOUBLE arg1;
    DOUBLE arg2;
    DOUBLE retval;
};

typedef struct _heapinfo {
    PLONG _pentry;
    ULONG64 _size;
    LONG _useflag;
};

typedef struct _htable<DeclElement>::_hentry<DeclElement> {
    DeclElement *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct _htable<DeclEntity>::_hentry<DeclEntity> {
    DeclEntity *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct _htable<DeclNotation>::_hentry<DeclNotation> {
    DeclNotation *pValue;
    struct StringPtr *pKey;
    ULONG lHash;
};

typedef struct _iobuf {
    PCHAR _ptr;
    LONG _cnt;
    PCHAR _base;
    LONG _flag;
    LONG _file;
    LONG _charbuf;
    LONG _bufsiz;
    PCHAR _tmpfname;
};

typedef struct _ldiv_t {
    LONG quot;
    LONG rem;
};

typedef struct _msxml6_MIDL_PROC_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[1691];
};

typedef struct _msxml6_MIDL_TYPE_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[1539];
};

typedef struct _msxml6i_MIDL_PROC_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[39];
};

typedef struct _msxml6i_MIDL_TYPE_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[3];
};

typedef struct _nlsversioninfo {
    ULONG dwNLSVersionInfoSize;
    ULONG dwNLSVersion;
    ULONG dwDefinedVersion;
    ULONG dwEffectiveId;
    struct _GUID guidCustomVersion;
};

typedef struct _nlsversioninfoex {
    ULONG dwNLSVersionInfoSize;
    ULONG dwNLSVersion;
    ULONG dwDefinedVersion;
    ULONG dwEffectiveId;
    struct _GUID guidCustomVersion;
};

typedef struct _numberfmtA {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PCHAR lpDecimalSep;
    PCHAR lpThousandSep;
    ULONG NegativeOrder;
};

typedef struct _numberfmtW {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PWCHAR lpDecimalSep;
    PWCHAR lpThousandSep;
    ULONG NegativeOrder;
};

typedef struct _remoteMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    struct _userHMETAFILE *hMF;
};

typedef struct _s__CatchableType {
    ULONG properties;
    struct _TypeDescriptor *pType;
    struct _PMD thisDisplacement;
    LONG sizeOrOffset;
    PVOID copyFunction;
};

typedef struct _s__CatchableTypeArray {
    LONG nCatchableTypes;
    struct _s__CatchableType *arrayOfCatchableTypes[0];
};

typedef struct _s__RTTIBaseClassArray {
    struct _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[0];
};

typedef struct _s__RTTIBaseClassDescriptor2 {
    struct _TypeDescriptor *pTypeDescriptor;
    ULONG numContainedBases;
    struct _PMD where;
    ULONG attributes;
    struct _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

typedef struct _s__RTTIClassHierarchyDescriptor {
    ULONG signature;
    ULONG attributes;
    ULONG numBaseClasses;
    struct _s__RTTIBaseClassArray *pBaseClassArray;
};

typedef struct _s__RTTICompleteObjectLocator2 {
    ULONG signature;
    ULONG offset;
    ULONG cdOffset;
    struct _TypeDescriptor *pTypeDescriptor;
    struct _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
    struct _s__RTTICompleteObjectLocator2 *pSelf;
};

typedef struct _s__ThrowInfo {
    ULONG attributes;
    PVOID pmfnUnwind;
    PLONG pForwardCompat;
    struct _s__CatchableTypeArray *pCatchableTypeArray;
};

typedef struct _stat {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stat32 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG st_atime;
    LONG st_mtime;
    LONG st_ctime;
};

typedef struct _stat32i64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG st_atime;
    LONG st_mtime;
    LONG st_ctime;
};

typedef struct _stat64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stat64i32 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stati64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _tagAUTHENTICATEINFO {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _tagBINDINFO {
    ULONG cbSize;
    PWCHAR szExtraInfo;
    struct tagSTGMEDIUM stgmedData;
    ULONG grfBindInfoF;
    ULONG dwBindVerb;
    PWCHAR szCustomVerb;
    ULONG cbstgmedData;
    ULONG dwOptions;
    ULONG dwOptionsFlags;
    ULONG dwCodePage;
    struct _SECURITY_ATTRIBUTES securityAttributes;
    struct _GUID iid;
    struct IUnknown *pUnk;
    ULONG dwReserved;
};

typedef struct _tagCODEBASEHOLD {
    ULONG cbSize;
    PWCHAR szDistUnit;
    PWCHAR szCodeBase;
    ULONG dwVersionMS;
    ULONG dwVersionLS;
    ULONG dwStyle;
};

typedef struct _tagDATAINFO {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
};

typedef struct _tagHIT_LOGGING_INFO {
    ULONG dwStructSize;
    PCHAR lpszLoggedUrlName;
    struct _SYSTEMTIME StartTime;
    struct _SYSTEMTIME EndTime;
    PCHAR lpszExtendedInfo;
};

typedef struct _tagOLECMD {
    ULONG cmdID;
    ULONG cmdf;
};

typedef struct _tagOLECMDTEXT {
    ULONG cmdtextf;
    ULONG cwActual;
    ULONG cwBuf;
    WCHAR rgwz[1];
};

typedef struct _tagPROTOCOLDATA {
    ULONG grfFlags;
    ULONG dwState;
    PVOID pData;
    ULONG cbData;
};

typedef struct _tagPROTOCOLFILTERDATA {
    ULONG cbSize;
    struct IInternetProtocolSink *pProtocolSink;
    struct IInternetProtocol *pProtocol;
    struct IUnknown *pUnk;
    ULONG dwFilterFlags;
};

typedef struct _tagPROTOCOL_ARGUMENT {
    PWCHAR szMethod;
    PWCHAR szTargetUrl;
};

typedef struct _tagRemBINDINFO {
    ULONG cbSize;
    PWCHAR szExtraInfo;
    ULONG grfBindInfoF;
    ULONG dwBindVerb;
    PWCHAR szCustomVerb;
    ULONG cbstgmedData;
    ULONG dwOptions;
    ULONG dwOptionsFlags;
    ULONG dwCodePage;
    struct _REMSECURITY_ATTRIBUTES securityAttributes;
    struct _GUID iid;
    struct IUnknown *pUnk;
    ULONG dwReserved;
};

typedef struct _tagSOFTDISTINFO {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG dwAdState;
    PWCHAR szTitle;
    PWCHAR szAbstract;
    PWCHAR szHREF;
    ULONG dwInstalledVersionMS;
    ULONG dwInstalledVersionLS;
    ULONG dwUpdateVersionMS;
    ULONG dwUpdateVersionLS;
    ULONG dwAdvertisedVersionMS;
    ULONG dwAdvertisedVersionLS;
    ULONG dwReserved;
};

typedef struct _tagStartParam {
    struct _GUID iid;
    struct IBindCtx *pIBindCtx;
    struct IUnknown *pItf;
};

typedef struct _tagpropertykey {
    struct _GUID fmtid;
    ULONG pid;
};

typedef struct _userBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    USHORT bmPlanes;
    USHORT bmBitsPixel;
    ULONG cbSize;
    UCHAR pBuffer[1];
};

typedef struct _userCLIPFORMAT {
    LONG fContext;
     __MIDL_IWinTypes_0001;
    union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
};

typedef struct _userFLAG_STGMEDIUM {
    LONG ContextFlags;
    LONG fPassOwnership;
    struct _userSTGMEDIUM Stgmed;
};

typedef struct _userHBITMAP {
    LONG fContext;
     __MIDL_IWinTypes_0007;
    union _userHBITMAP::__MIDL_IWinTypes_0007 u;
};

typedef struct _userHENHMETAFILE {
    LONG fContext;
     __MIDL_IWinTypes_0006;
    union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
};

typedef struct _userHGLOBAL {
    LONG fContext;
     __MIDL_IWinTypes_0003;
    union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
};

typedef struct _userHMETAFILE {
    LONG fContext;
     __MIDL_IWinTypes_0004;
    union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
};

typedef struct _userHMETAFILEPICT {
    LONG fContext;
     __MIDL_IWinTypes_0005;
    union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
};

typedef struct _userHPALETTE {
    LONG fContext;
     __MIDL_IWinTypes_0008;
    union _userHPALETTE::__MIDL_IWinTypes_0008 u;
};

typedef struct _userSTGMEDIUM {
     _STGMEDIUM_UNION;
    struct IUnknown *pUnkForRelease;
};

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION {
    ULONG tymed;
     __MIDL_IAdviseSink_0003;
    union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

typedef struct _wfinddata32_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddata32i64_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wfinddata64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wfinddata64i32_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddata_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddatai64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wil_details_UsageSubscriptionData {
    ULONG featureId;
    USHORT serviceReportingKind;
};

typedef struct _windows2Edata2Exml_MIDL_PROC_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[4857];
};

typedef struct _windows2Edata2Exml_MIDL_TYPE_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[973];
};

typedef struct _wireBRECORD {
    ULONG fFlags;
    ULONG clSize;
    struct IRecordInfo *pRecInfo;
    PUCHAR pRecord;
};

typedef struct _wireSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    struct _wireSAFEARRAY_UNION uArrayStructs;
    struct tagSAFEARRAYBOUND rgsabound[1];
};

typedef struct _wireSAFEARRAY_UNION {
    ULONG sfType;
     __MIDL_IOleAutomationTypes_0001;
    union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
};

typedef struct _wireSAFEARR_BRECORD {
    ULONG Size;
    struct _wireBRECORD **aRecord;
};

typedef struct _wireSAFEARR_BSTR {
    ULONG Size;
    struct _FLAGGED_WORD_BLOB **aBstr;
};

typedef struct _wireSAFEARR_DISPATCH {
    ULONG Size;
    struct IDispatch **apDispatch;
};

typedef struct _wireSAFEARR_HAVEIID {
    ULONG Size;
    struct IUnknown **apUnknown;
    struct _GUID iid;
};

typedef struct _wireSAFEARR_UNKNOWN {
    ULONG Size;
    struct IUnknown **apUnknown;
};

typedef struct _wireSAFEARR_VARIANT {
    ULONG Size;
    struct _wireVARIANT **aVariant;
};

typedef struct _wireVARIANT {
    ULONG clSize;
    ULONG rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    LONG64 llVal;
    LONG lVal;
    UCHAR bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    struct _FLAGGED_WORD_BLOB *bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct _wireSAFEARRAY **parray;
    struct _wireBRECORD *brecVal;
    PUCHAR pbVal;
    PSHORT piVal;
    PLONG plVal;
    PLONG64 pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    struct _FLAGGED_WORD_BLOB **pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct _wireSAFEARRAY ***pparray;
    struct _wireVARIANT **pvarVal;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONG64 ullVal;
    LONG intVal;
    ULONG uintVal;
    struct tagDEC decVal;
    struct tagDEC *pdecVal;
    PCHAR pcVal;
    PWCHAR puiVal;
    PULONG pulVal;
    PULONG64 pullVal;
    PLONG pintVal;
    PULONG puintVal;
};

typedef struct _xml_error {
    ULONG _nLine;
    PWCHAR _pchBuf;
    ULONG _cchBuf;
    ULONG _ich;
    PWCHAR _pszFound;
    PWCHAR _pszExpected;
    ULONG _reserved1;
    ULONG _reserved2;
};

typedef struct callstack {
    ULONG64 frame[64];
};

typedef struct failure_tracing {
    BOOLEAN initialize;
    VOID finalize;
    VOID record;
    VOID tracingfailed;
     callstack;
    struct failure_tracing::callstack _stacks[32];
    LONG _count;
    BOOLEAN _fInitialized;
    BOOLEAN _fTracingFailed;
    struct _RTL_CRITICAL_SECTION _cs;
};

typedef struct failure_tracing::callstack {
    ULONG64 frame[64];
};

typedef struct lconv {
};

typedef struct localeinfo_struct {
    struct threadlocaleinfostruct *locinfo;
    struct threadmbcinfostruct *mbcinfo;
};

typedef struct provider_info {
    PULONG pi_R0_1val;
    PULONG pi_R0_allvals;
    PULONG pi_R3_1val;
    PULONG pi_R3_allvals;
    ULONG pi_flags;
    PVOID pi_key_context;
};

typedef struct pvalueA {
    PCHAR pv_valuename;
    LONG pv_valuelen;
    PVOID pv_value_context;
    ULONG pv_type;
};

typedef struct pvalueW {
    PWCHAR pv_valuename;
    LONG pv_valuelen;
    PVOID pv_value_context;
    ULONG pv_type;
};

typedef struct stat {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct std::nothrow_t {
};

typedef struct tagABORTPATH {
    struct tagEMR emr;
};

typedef struct tagACCEL {
    UCHAR fVirt;
    USHORT key;
    USHORT cmd;
};

typedef struct tagACCESSTIMEOUT {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iTimeOutMSec;
};

typedef struct tagACTCTXA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpSource;
    USHORT wProcessorArchitecture;
    USHORT wLangId;
    PCHAR lpAssemblyDirectory;
    PCHAR lpResourceName;
    PCHAR lpApplicationName;
    struct HINSTANCE__ *hModule;
};

typedef struct tagACTCTXW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpSource;
    USHORT wProcessorArchitecture;
    USHORT wLangId;
    PWCHAR lpAssemblyDirectory;
    PWCHAR lpResourceName;
    PWCHAR lpApplicationName;
    struct HINSTANCE__ *hModule;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    PVOID hActCtx;
    ULONG ulAssemblyRosterIndex;
    ULONG ulFlags;
    struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    PVOID hActCtx;
    ULONG ulAssemblyRosterIndex;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    PVOID lpInformation;
    PVOID lpSectionBase;
    ULONG ulSectionLength;
    PVOID lpSectionGlobalDataBase;
    ULONG ulSectionGlobalDataLength;
};

typedef struct tagALTTABINFO {
    ULONG cbSize;
    LONG cItems;
    LONG cColumns;
    LONG cRows;
    LONG iColFocus;
    LONG iRowFocus;
    LONG cxItem;
    LONG cyItem;
    struct tagPOINT ptStart;
};

typedef struct tagANIMATIONINFO {
    ULONG cbSize;
    LONG iMinAnimate;
};

typedef struct tagARRAYDESC {
    struct tagTYPEDESC tdescElem;
    USHORT cDims;
    struct tagSAFEARRAYBOUND rgbounds[1];
};

typedef struct tagAUDIODESCRIPTION {
    ULONG cbSize;
    LONG Enabled;
    ULONG Locale;
};

typedef struct tagAXESLISTA {
    ULONG axlReserved;
    ULONG axlNumAxes;
    struct tagAXISINFOA axlAxisInfo[16];
};

typedef struct tagAXESLISTW {
    ULONG axlReserved;
    ULONG axlNumAxes;
    struct tagAXISINFOW axlAxisInfo[16];
};

typedef struct tagAXISINFOA {
    LONG axMinValue;
    LONG axMaxValue;
    UCHAR axAxisName[16];
};

typedef struct tagAXISINFOW {
    LONG axMinValue;
    LONG axMaxValue;
    WCHAR axAxisName[16];
};

typedef struct tagAspectInfo {
    ULONG cb;
    ULONG dwFlags;
};

typedef struct tagBIND_OPTS {
    ULONG cbStruct;
    ULONG grfFlags;
    ULONG grfMode;
    ULONG dwTickCountDeadline;
};

typedef struct tagBIND_OPTS2 {
    struct tagBIND_OPTS tagBIND_OPTS;
    ULONG dwTrackFlags;
    ULONG dwClassContext;
    ULONG locale;
    struct _COSERVERINFO *pServerInfo;
};

typedef struct tagBIND_OPTS3 {
    struct tagBIND_OPTS2 tagBIND_OPTS2;
    struct HWND__ *hwnd;
};

typedef struct tagBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    USHORT bmPlanes;
    USHORT bmBitsPixel;
    PVOID bmBits;
};

typedef struct tagBITMAPCOREHEADER {
    ULONG bcSize;
    USHORT bcWidth;
    USHORT bcHeight;
    USHORT bcPlanes;
    USHORT bcBitCount;
};

typedef struct tagBITMAPCOREINFO {
    struct tagBITMAPCOREHEADER bmciHeader;
    struct tagRGBTRIPLE bmciColors[1];
};

typedef struct tagBITMAPFILEHEADER {
    USHORT bfType;
    ULONG bfSize;
    USHORT bfReserved1;
    USHORT bfReserved2;
    ULONG bfOffBits;
};

typedef struct tagBITMAPINFO {
    struct tagBITMAPINFOHEADER bmiHeader;
    struct tagRGBQUAD bmiColors[1];
};

typedef struct tagBITMAPINFOHEADER {
    ULONG biSize;
    LONG biWidth;
    LONG biHeight;
    USHORT biPlanes;
    USHORT biBitCount;
    ULONG biCompression;
    ULONG biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    ULONG biClrUsed;
    ULONG biClrImportant;
};

typedef struct tagBLOB {
    ULONG cbSize;
    PUCHAR pBlobData;
};

typedef struct tagBSTRBLOB {
    ULONG cbSize;
    PUCHAR pData;
};

typedef struct tagBinaryParam {
    PVOID Buffer;
    SHORT Size;
};

typedef struct tagCABOOL {
    ULONG cElems;
    PSHORT pElems;
};

typedef struct tagCABSTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCABSTRBLOB {
    ULONG cElems;
    struct tagBSTRBLOB *pElems;
};

typedef struct tagCAC {
    ULONG cElems;
    PCHAR pElems;
};

typedef struct tagCACLIPDATA {
    ULONG cElems;
    struct tagCLIPDATA *pElems;
};

typedef struct tagCACLSID {
    ULONG cElems;
    struct _GUID *pElems;
};

typedef struct tagCACY {
    ULONG cElems;
    union tagCY *pElems;
};

typedef struct tagCADATE {
    ULONG cElems;
    DOUBLE *pElems;
};

typedef struct tagCADBL {
    ULONG cElems;
    DOUBLE *pElems;
};

typedef struct tagCADWORD {
    ULONG cElems;
    PULONG pElems;
};

typedef struct tagCAFILETIME {
    ULONG cElems;
    struct _FILETIME *pElems;
};

typedef struct tagCAFLT {
    ULONG cElems;
    FLOAT *pElems;
};

typedef struct tagCAH {
    ULONG cElems;
    union _LARGE_INTEGER *pElems;
};

typedef struct tagCAI {
    ULONG cElems;
    PSHORT pElems;
};

typedef struct tagCAL {
    ULONG cElems;
    PLONG pElems;
};

typedef struct tagCALPOLESTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCALPSTR {
    ULONG cElems;
    PCHAR *pElems;
};

typedef struct tagCALPWSTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCANDIDATEFORM {
    ULONG dwIndex;
    ULONG dwStyle;
    struct tagPOINT ptCurrentPos;
    struct tagRECT rcArea;
};

typedef struct tagCANDIDATELIST {
    ULONG dwSize;
    ULONG dwStyle;
    ULONG dwCount;
    ULONG dwSelection;
    ULONG dwPageStart;
    ULONG dwPageSize;
    ULONG dwOffset[1];
};

typedef struct tagCAPROPVARIANT {
    ULONG cElems;
    struct tagPROPVARIANT *pElems;
};

typedef struct tagCASCODE {
    ULONG cElems;
    PLONG pElems;
};

typedef struct tagCAUB {
    ULONG cElems;
    PUCHAR pElems;
};

typedef struct tagCAUH {
    ULONG cElems;
    union _ULARGE_INTEGER *pElems;
};

typedef struct tagCAUI {
    ULONG cElems;
    PWCHAR pElems;
};

typedef struct tagCAUL {
    ULONG cElems;
    PULONG pElems;
};

typedef struct tagCAUUID {
    ULONG cElems;
    struct _GUID *pElems;
};

typedef struct tagCBTACTIVATESTRUCT {
    LONG fMouse;
    struct HWND__ *hWndActive;
};

typedef struct tagCBT_CREATEWNDA {
    struct tagCREATESTRUCTA *lpcs;
    struct HWND__ *hwndInsertAfter;
};

typedef struct tagCBT_CREATEWNDW {
    struct tagCREATESTRUCTW *lpcs;
    struct HWND__ *hwndInsertAfter;
};

typedef struct tagCHANGEFILTERSTRUCT {
    ULONG cbSize;
    ULONG ExtStatus;
};

typedef struct tagCHARSETINFO {
    ULONG ciCharset;
    ULONG ciACP;
    struct tagFONTSIGNATURE fs;
};

typedef struct tagCIEXYZ {
    LONG ciexyzX;
    LONG ciexyzY;
    LONG ciexyzZ;
};

typedef struct tagCInterfaceProxyHeader {
    PVOID pStublessProxyInfo;
    struct _GUID *piid;
};

typedef struct tagCInterfaceProxyVtbl {
    struct tagCInterfaceProxyHeader header;
    PVOID Vtbl[0];
};

typedef struct tagCInterfaceStubHeader {
    struct _GUID *piid;
    struct _MIDL_SERVER_INFO_ *pServerInfo;
    ULONG DispatchTableCount;
    PVOID *pDispatchTable;
};

typedef struct tagCInterfaceStubVtbl {
    struct tagCInterfaceStubHeader header;
    struct IRpcStubBufferVtbl Vtbl;
};

typedef struct tagCLEANLOCALSTORAGE {
    struct IUnknown *pInterface;
    PVOID pStorage;
    ULONG flags;
};

typedef struct tagCLIENTCREATESTRUCT {
    PVOID hWindowMenu;
    ULONG idFirstChild;
};

typedef struct tagCLIPDATA {
    ULONG cbSize;
    LONG ulClipFmt;
    PUCHAR pClipData;
};

typedef struct tagCOLORADJUSTMENT {
    USHORT caSize;
    USHORT caFlags;
    USHORT caIlluminantIndex;
    USHORT caRedGamma;
    USHORT caGreenGamma;
    USHORT caBlueGamma;
    USHORT caReferenceBlack;
    USHORT caReferenceWhite;
    SHORT caContrast;
    SHORT caBrightness;
    SHORT caColorfulness;
    SHORT caRedGreenTint;
};

typedef struct tagCOLORCORRECTPALETTE {
    struct tagEMR emr;
    ULONG ihPalette;
    ULONG nFirstEntry;
    ULONG nPalEntries;
    ULONG nReserved;
};

typedef struct tagCOLORMATCHTOTARGET {
    struct tagEMR emr;
    ULONG dwAction;
    ULONG dwFlags;
    ULONG cbName;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagCOMBOBOXINFO {
    ULONG cbSize;
    struct tagRECT rcItem;
    struct tagRECT rcButton;
    ULONG stateButton;
    struct HWND__ *hwndCombo;
    struct HWND__ *hwndItem;
    struct HWND__ *hwndList;
};

typedef struct tagCOMPAREITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    struct HWND__ *hwndItem;
    ULONG itemID1;
    ULONG64 itemData1;
    ULONG itemID2;
    ULONG64 itemData2;
    ULONG dwLocaleId;
};

typedef struct tagCOMPOSITIONFORM {
    ULONG dwStyle;
    struct tagPOINT ptCurrentPos;
    struct tagRECT rcArea;
};

typedef struct tagCONNECTDATA {
    struct IUnknown *pUnk;
    ULONG dwCookie;
};

typedef struct tagCONTROLINFO {
    ULONG cb;
    struct HACCEL__ *hAccel;
    USHORT cAccel;
    ULONG dwFlags;
};

typedef struct tagCOPYDATASTRUCT {
    ULONG64 dwData;
    ULONG cbData;
    PVOID lpData;
};

typedef struct tagCPCInfo {
    struct _GUID iidOutgoingInterface;
    enum CPTYPE cpt;
};

typedef struct tagCPNode {
    enum CPTYPE cpt;
    _gitpointer<IUnknown,&IID_IUnknown> punkConnector;
    _gitpointer<IDispatch,&IID_IDispatch> pdispConnector;
    _gitpointer<IPropertyNotifySink,&IID_IPropertyNotifySink> ppnsConnector;
    struct tagCPNode *pNext;
    ULONG dwCookie;
    VOID MarkDeleted;
    VOID ~tagCPNode;
    VOID tagCPNode;
    struct tagCPNode *operator=;
    PVOID __vecDelDtor;
};

typedef struct tagCREATESTRUCTA {
    PVOID lpCreateParams;
    struct HINSTANCE__ *hInstance;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndParent;
    LONG cy;
    LONG cx;
    LONG y;
    LONG x;
    LONG style;
    PCHAR lpszName;
    PCHAR lpszClass;
    ULONG dwExStyle;
};

typedef struct tagCREATESTRUCTW {
    PVOID lpCreateParams;
    struct HINSTANCE__ *hInstance;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndParent;
    LONG cy;
    LONG cx;
    LONG y;
    LONG x;
    LONG style;
    PWCHAR lpszName;
    PWCHAR lpszClass;
    ULONG dwExStyle;
};

typedef struct tagCSPLATFORM {
    ULONG dwPlatformId;
    ULONG dwVersionHi;
    ULONG dwVersionLo;
    ULONG dwProcessorArch;
};

typedef struct tagCStdPSFactoryBuffer {
    struct IPSFactoryBufferVtbl *lpVtbl;
    LONG RefCount;
    struct tagProxyFileInfo **pProxyFileList;
    LONG Filler1;
};

typedef struct tagCURSORINFO {
    ULONG cbSize;
    ULONG flags;
    struct HICON__ *hCursor;
    struct tagPOINT ptScreenPos;
};

typedef struct tagCURSORSHAPE {
    LONG xHotSpot;
    LONG yHotSpot;
    LONG cx;
    LONG cy;
    LONG cbWidth;
    UCHAR Planes;
    UCHAR BitsPixel;
};

typedef struct tagCUSTDATA {
    ULONG cCustData;
    struct tagCUSTDATAITEM *prgCustData;
};

typedef struct tagCUSTDATAITEM {
    struct _GUID guid;
    struct tagVARIANT varValue;
};

typedef struct tagCWPRETSTRUCT {
    LONG64 lResult;
    LONG64 lParam;
    ULONG64 wParam;
    ULONG message;
    struct HWND__ *hwnd;
};

typedef struct tagCWPSTRUCT {
    LONG64 lParam;
    ULONG64 wParam;
    ULONG message;
    struct HWND__ *hwnd;
};

typedef struct tagDEBUGHOOKINFO {
    ULONG idThread;
    ULONG idThreadInstaller;
    LONG64 lParam;
    ULONG64 wParam;
    LONG code;
};

typedef struct tagDEC {
    USHORT wReserved;
    UCHAR scale;
    UCHAR sign;
    USHORT signscale;
    ULONG Hi32;
    ULONG Lo32;
    ULONG Mid32;
    ULONG64 Lo64;
};

typedef struct tagDELETEITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    struct HWND__ *hwndItem;
    ULONG64 itemData;
};

typedef struct tagDESIGNVECTOR {
    ULONG dvReserved;
    ULONG dvNumAxes;
    LONG dvValues[16];
};

typedef struct tagDIBSECTION {
    struct tagBITMAP dsBm;
    struct tagBITMAPINFOHEADER dsBmih;
    ULONG dsBitfields[3];
    PVOID dshSection;
    ULONG dsOffset;
};

typedef struct tagDISPPARAMS {
    struct tagVARIANT *rgvarg;
    PLONG rgdispidNamedArgs;
    ULONG cArgs;
    ULONG cNamedArgs;
};

typedef struct tagDRAWITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    ULONG itemAction;
    ULONG itemState;
    struct HWND__ *hwndItem;
    struct HDC__ *hDC;
    struct tagRECT rcItem;
    ULONG64 itemData;
};

typedef struct tagDRAWTEXTPARAMS {
    ULONG cbSize;
    LONG iTabLength;
    LONG iLeftMargin;
    LONG iRightMargin;
    ULONG uiLengthDrawn;
};

typedef struct tagDROPSTRUCT {
    struct HWND__ *hwndSource;
    struct HWND__ *hwndSink;
    ULONG wFmt;
    ULONG64 dwData;
    struct tagPOINT ptDrop;
    ULONG dwControlData;
};

typedef struct tagDVTARGETDEVICE {
    ULONG tdSize;
    USHORT tdDriverNameOffset;
    USHORT tdDeviceNameOffset;
    USHORT tdPortNameOffset;
    USHORT tdExtDevmodeOffset;
    UCHAR tdData[1];
};

typedef struct tagDebugPropertyInfo {
    ULONG m_dwValidFields;
    PWCHAR m_bstrName;
    PWCHAR m_bstrType;
    PWCHAR m_bstrValue;
    PWCHAR m_bstrFullName;
    ULONG m_dwAttrib;
    struct IDebugProperty *m_pDebugProp;
};

typedef struct tagDebugStackFrameDescriptor {
    struct IDebugStackFrame *pdsf;
    ULONG dwMin;
    ULONG dwLim;
    LONG fFinal;
    struct IUnknown *punkFinal;
};

typedef struct tagDetectEncodingInfo {
    ULONG nLangID;
    ULONG nCodePage;
    LONG nDocPercent;
    LONG nConfidence;
};

typedef struct tagELEMDESC {
    struct tagTYPEDESC tdesc;
    struct tagIDLDESC idldesc;
    struct tagPARAMDESC paramdesc;
};

typedef struct tagEMR {
    ULONG iType;
    ULONG nSize;
};

typedef struct tagEMRALPHABLEND {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRANGLEARC {
    struct tagEMR emr;
    struct _POINTL ptlCenter;
    ULONG nRadius;
    FLOAT eStartAngle;
    FLOAT eSweepAngle;
};

typedef struct tagEMRARC {
    struct tagEMR emr;
    struct _RECTL rclBox;
    struct _POINTL ptlStart;
    struct _POINTL ptlEnd;
};

typedef struct tagEMRBITBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
};

typedef struct tagEMRCREATEBRUSHINDIRECT {
    struct tagEMR emr;
    ULONG ihBrush;
    struct tagLOGBRUSH32 lb;
};

typedef struct tagEMRCREATECOLORSPACE {
    struct tagEMR emr;
    ULONG ihCS;
    struct tagLOGCOLORSPACEA lcs;
};

typedef struct tagEMRCREATECOLORSPACEW {
    struct tagEMR emr;
    ULONG ihCS;
    struct tagLOGCOLORSPACEW lcs;
    ULONG dwFlags;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT {
    struct tagEMR emr;
    ULONG ihBrush;
    ULONG iUsage;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
};

typedef struct tagEMRCREATEMONOBRUSH {
    struct tagEMR emr;
    ULONG ihBrush;
    ULONG iUsage;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
};

typedef struct tagEMRCREATEPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
    struct tagLOGPALETTE lgpl;
};

typedef struct tagEMRCREATEPEN {
    struct tagEMR emr;
    ULONG ihPen;
    struct tagLOGPEN lopn;
};

typedef struct tagEMRELLIPSE {
    struct tagEMR emr;
    struct _RECTL rclBox;
};

typedef struct tagEMREOF {
    struct tagEMR emr;
    ULONG nPalEntries;
    ULONG offPalEntries;
    ULONG nSizeLast;
};

typedef struct tagEMREXCLUDECLIPRECT {
    struct tagEMR emr;
    struct _RECTL rclClip;
};

typedef struct tagEMREXTCREATEFONTINDIRECTW {
    struct tagEMR emr;
    ULONG ihFont;
    struct tagEXTLOGFONTW elfw;
};

typedef struct tagEMREXTCREATEPEN {
    struct tagEMR emr;
    ULONG ihPen;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
    struct tagEXTLOGPEN32 elp;
};

typedef struct tagEMREXTESCAPE {
    struct tagEMR emr;
    LONG iEscape;
    LONG cbEscData;
    UCHAR EscData[1];
};

typedef struct tagEMREXTFLOODFILL {
    struct tagEMR emr;
    struct _POINTL ptlStart;
    ULONG crColor;
    ULONG iMode;
};

typedef struct tagEMREXTSELECTCLIPRGN {
    struct tagEMR emr;
    ULONG cbRgnData;
    ULONG iMode;
    UCHAR RgnData[1];
};

typedef struct tagEMREXTTEXTOUTA {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    struct tagEMRTEXT emrtext;
};

typedef struct tagEMRFILLPATH {
    struct tagEMR emr;
    struct _RECTL rclBounds;
};

typedef struct tagEMRFILLRGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    ULONG ihBrush;
    UCHAR RgnData[1];
};

typedef struct tagEMRFORMAT {
    ULONG dSignature;
    ULONG nVersion;
    ULONG cbData;
    ULONG offData;
};

typedef struct tagEMRFRAMERGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    ULONG ihBrush;
    struct tagSIZE szlStroke;
    UCHAR RgnData[1];
};

typedef struct tagEMRGDICOMMENT {
    struct tagEMR emr;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGLSBOUNDEDRECORD {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGLSRECORD {
    struct tagEMR emr;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGRADIENTFILL {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nVer;
    ULONG nTri;
    ULONG ulMode;
    struct _TRIVERTEX Ver[1];
};

typedef struct tagEMRINVERTRGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    UCHAR RgnData[1];
};

typedef struct tagEMRLINETO {
    struct tagEMR emr;
    struct _POINTL ptl;
};

typedef struct tagEMRMASKBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG xMask;
    LONG yMask;
    ULONG iUsageMask;
    ULONG offBmiMask;
    ULONG cbBmiMask;
    ULONG offBitsMask;
    ULONG cbBitsMask;
};

typedef struct tagEMRMODIFYWORLDTRANSFORM {
    struct tagEMR emr;
    struct tagXFORM xform;
    ULONG iMode;
};

typedef struct tagEMRNAMEDESCAPE {
    struct tagEMR emr;
    LONG iEscape;
    LONG cbDriver;
    LONG cbEscData;
    UCHAR EscData[1];
};

typedef struct tagEMROFFSETCLIPRGN {
    struct tagEMR emr;
    struct _POINTL ptlOffset;
};

typedef struct tagEMRPIXELFORMAT {
    struct tagEMR emr;
    struct tagPIXELFORMATDESCRIPTOR pfd;
};

typedef struct tagEMRPLGBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    struct _POINTL aptlDest[3];
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG xMask;
    LONG yMask;
    ULONG iUsageMask;
    ULONG offBmiMask;
    ULONG cbBmiMask;
    ULONG offBitsMask;
    ULONG cbBitsMask;
};

typedef struct tagEMRPOLYDRAW {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cptl;
    struct _POINTL aptl[1];
    UCHAR abTypes[1];
};

typedef struct tagEMRPOLYDRAW16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cpts;
    struct tagPOINTS apts[1];
    UCHAR abTypes[1];
};

typedef struct tagEMRPOLYLINE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cptl;
    struct _POINTL aptl[1];
};

typedef struct tagEMRPOLYLINE16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cpts;
    struct tagPOINTS apts[1];
};

typedef struct tagEMRPOLYPOLYLINE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nPolys;
    ULONG cptl;
    ULONG aPolyCounts[1];
    struct _POINTL aptl[1];
};

typedef struct tagEMRPOLYPOLYLINE16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nPolys;
    ULONG cpts;
    ULONG aPolyCounts[1];
    struct tagPOINTS apts[1];
};

typedef struct tagEMRPOLYTEXTOUTA {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    LONG cStrings;
    struct tagEMRTEXT aemrtext[1];
};

typedef struct tagEMRRESIZEPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
    ULONG cEntries;
};

typedef struct tagEMRRESTOREDC {
    struct tagEMR emr;
    LONG iRelative;
};

typedef struct tagEMRROUNDRECT {
    struct tagEMR emr;
    struct _RECTL rclBox;
    struct tagSIZE szlCorner;
};

typedef struct tagEMRSCALEVIEWPORTEXTEX {
    struct tagEMR emr;
    LONG xNum;
    LONG xDenom;
    LONG yNum;
    LONG yDenom;
};

typedef struct tagEMRSELECTCLIPPATH {
    struct tagEMR emr;
    ULONG iMode;
};

typedef struct tagEMRSELECTOBJECT {
    struct tagEMR emr;
    ULONG ihObject;
};

typedef struct tagEMRSELECTPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
};

typedef struct tagEMRSETARCDIRECTION {
    struct tagEMR emr;
    ULONG iArcDirection;
};

typedef struct tagEMRSETCOLORADJUSTMENT {
    struct tagEMR emr;
    struct tagCOLORADJUSTMENT ColorAdjustment;
};

typedef struct tagEMRSETCOLORSPACE {
    struct tagEMR emr;
    ULONG ihCS;
};

typedef struct tagEMRSETDIBITSTODEVICE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    ULONG iUsageSrc;
    ULONG iStartScan;
    ULONG cScans;
};

typedef struct tagEMRSETICMPROFILE {
    struct tagEMR emr;
    ULONG dwFlags;
    ULONG cbName;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRSETMAPPERFLAGS {
    struct tagEMR emr;
    ULONG dwFlags;
};

typedef struct tagEMRSETMITERLIMIT {
    struct tagEMR emr;
    FLOAT eMiterLimit;
};

typedef struct tagEMRSETPALETTEENTRIES {
    struct tagEMR emr;
    ULONG ihPal;
    ULONG iStart;
    ULONG cEntries;
    struct tagPALETTEENTRY aPalEntries[1];
};

typedef struct tagEMRSETPIXELV {
    struct tagEMR emr;
    struct _POINTL ptlPixel;
    ULONG crColor;
};

typedef struct tagEMRSETTEXTCOLOR {
    struct tagEMR emr;
    ULONG crColor;
};

typedef struct tagEMRSETVIEWPORTEXTEX {
    struct tagEMR emr;
    struct tagSIZE szlExtent;
};

typedef struct tagEMRSETVIEWPORTORGEX {
    struct tagEMR emr;
    struct _POINTL ptlOrigin;
};

typedef struct tagEMRSETWORLDTRANSFORM {
    struct tagEMR emr;
    struct tagXFORM xform;
};

typedef struct tagEMRSTRETCHBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRSTRETCHDIBITS {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    ULONG iUsageSrc;
    ULONG dwRop;
    LONG cxDest;
    LONG cyDest;
};

typedef struct tagEMRTEXT {
    struct _POINTL ptlReference;
    ULONG nChars;
    ULONG offString;
    ULONG fOptions;
    struct _RECTL rcl;
    ULONG offDx;
};

typedef struct tagEMRTRANSPARENTBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagENHMETAHEADER {
    ULONG iType;
    ULONG nSize;
    struct _RECTL rclBounds;
    struct _RECTL rclFrame;
    ULONG dSignature;
    ULONG nVersion;
    ULONG nBytes;
    ULONG nRecords;
    USHORT nHandles;
    USHORT sReserved;
    ULONG nDescription;
    ULONG offDescription;
    ULONG nPalEntries;
    struct tagSIZE szlDevice;
    struct tagSIZE szlMillimeters;
    ULONG cbPixelFormat;
    ULONG offPixelFormat;
    ULONG bOpenGL;
    struct tagSIZE szlMicrometers;
};

typedef struct tagENHMETARECORD {
    ULONG iType;
    ULONG nSize;
    ULONG dParm[1];
};

typedef struct tagENUMLOGFONTA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
};

typedef struct tagENUMLOGFONTEXA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
    UCHAR elfScript[32];
};

typedef struct tagENUMLOGFONTEXDVA {
    struct tagENUMLOGFONTEXA elfEnumLogfontEx;
    struct tagDESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTEXDVW {
    struct tagENUMLOGFONTEXW elfEnumLogfontEx;
    struct tagDESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTEXW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    WCHAR elfScript[32];
};

typedef struct tagENUMLOGFONTW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
};

typedef struct tagENUMTEXTMETRICA {
    struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
    struct tagAXESLISTA etmAxesList;
};

typedef struct tagENUMTEXTMETRICW {
    struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
    struct tagAXESLISTW etmAxesList;
};

typedef struct tagENUMUILANG {
    ULONG NumOfEnumUILang;
    ULONG SizeOfEnumUIBuffer;
    PWCHAR pEnumUIBuffer;
};

typedef struct tagEVENTMSG {
    ULONG message;
    ULONG paramL;
    ULONG paramH;
    ULONG time;
    struct HWND__ *hwnd;
};

typedef struct tagEXCEPINFO {
    USHORT wCode;
    USHORT wReserved;
    PWCHAR bstrSource;
    PWCHAR bstrDescription;
    PWCHAR bstrHelpFile;
    ULONG dwHelpContext;
    PVOID pvReserved;
    HRESULT *pfnDeferredFillIn;
    LONG scode;
};

typedef struct tagEXTLOGFONTA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
    ULONG elfVersion;
    ULONG elfStyleSize;
    ULONG elfMatch;
    ULONG elfReserved;
    UCHAR elfVendorId[4];
    ULONG elfCulture;
    struct tagPANOSE elfPanose;
};

typedef struct tagEXTLOGFONTW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    ULONG elfVersion;
    ULONG elfStyleSize;
    ULONG elfMatch;
    ULONG elfReserved;
    UCHAR elfVendorId[4];
    ULONG elfCulture;
    struct tagPANOSE elfPanose;
};

typedef struct tagEXTLOGPEN {
    ULONG elpPenStyle;
    ULONG elpWidth;
    ULONG elpBrushStyle;
    ULONG elpColor;
    ULONG64 elpHatch;
    ULONG elpNumEntries;
    ULONG elpStyleEntry[1];
};

typedef struct tagEXTLOGPEN32 {
    ULONG elpPenStyle;
    ULONG elpWidth;
    ULONG elpBrushStyle;
    ULONG elpColor;
    ULONG elpHatch;
    ULONG elpNumEntries;
    ULONG elpStyleEntry[1];
};

typedef struct tagExtentInfo {
    ULONG cb;
    ULONG dwExtentMode;
    struct tagSIZE sizelProposed;
};

typedef struct tagFILTERKEYS {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iWaitMSec;
    ULONG iDelayMSec;
    ULONG iRepeatMSec;
    ULONG iBounceMSec;
};

typedef struct tagFONTDESC {
    ULONG cbSizeofstruct;
    PWCHAR lpstrName;
    union tagCY cySize;
    SHORT sWeight;
    SHORT sCharset;
    LONG fItalic;
    LONG fUnderline;
    LONG fStrikethrough;
};

typedef struct tagFONTSIGNATURE {
    ULONG fsUsb[4];
    ULONG fsCsb[2];
};

typedef struct tagFORMATETC {
    USHORT cfFormat;
    struct tagDVTARGETDEVICE *ptd;
    ULONG dwAspect;
    LONG lindex;
    ULONG tymed;
};

typedef struct tagFUNCDESC {
    LONG memid;
    PLONG lprgscode;
    struct tagELEMDESC *lprgelemdescParam;
    enum tagFUNCKIND funckind;
    enum tagINVOKEKIND invkind;
    enum tagCALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    struct tagELEMDESC elemdescFunc;
    USHORT wFuncFlags;
};

typedef struct tagGCP_RESULTSA {
    ULONG lStructSize;
    PCHAR lpOutString;
    PULONG lpOrder;
    PLONG lpDx;
    PLONG lpCaretPos;
    PCHAR lpClass;
    PWCHAR lpGlyphs;
    ULONG nGlyphs;
    LONG nMaxFit;
};

typedef struct tagGCP_RESULTSW {
    ULONG lStructSize;
    PWCHAR lpOutString;
    PULONG lpOrder;
    PLONG lpDx;
    PLONG lpCaretPos;
    PCHAR lpClass;
    PWCHAR lpGlyphs;
    ULONG nGlyphs;
    LONG nMaxFit;
};

typedef struct tagGESTURECONFIG {
    ULONG dwID;
    ULONG dwWant;
    ULONG dwBlock;
};

typedef struct tagGESTUREINFO {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG dwID;
    struct HWND__ *hwndTarget;
    struct tagPOINTS ptsLocation;
    ULONG dwInstanceID;
    ULONG dwSequenceID;
    ULONG64 ullArguments;
    ULONG cbExtraArgs;
};

typedef struct tagGESTURENOTIFYSTRUCT {
    ULONG cbSize;
    ULONG dwFlags;
    struct HWND__ *hwndTarget;
    struct tagPOINTS ptsLocation;
    ULONG dwInstanceID;
};

typedef struct tagGLYPHSET {
    ULONG cbThis;
    ULONG flAccel;
    ULONG cGlyphsSupported;
    ULONG cRanges;
    struct tagWCRANGE ranges[1];
};

typedef struct tagGUITHREADINFO {
    ULONG cbSize;
    ULONG flags;
    struct HWND__ *hwndActive;
    struct HWND__ *hwndFocus;
    struct HWND__ *hwndCapture;
    struct HWND__ *hwndMenuOwner;
    struct HWND__ *hwndMoveSize;
    struct HWND__ *hwndCaret;
    struct tagRECT rcCaret;
};

typedef struct tagHANDLETABLE {
    PVOID objectHandle[1];
};

typedef struct tagHARDWAREHOOKSTRUCT {
    struct HWND__ *hwnd;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
};

typedef struct tagHARDWAREINPUT {
    ULONG uMsg;
    USHORT wParamL;
    USHORT wParamH;
};

typedef struct tagHELPINFO {
    ULONG cbSize;
    LONG iContextType;
    LONG iCtrlId;
    PVOID hItemHandle;
    ULONG64 dwContextId;
    struct tagPOINT MousePos;
};

typedef struct tagHELPWININFOA {
    LONG wStructSize;
    LONG x;
    LONG y;
    LONG dx;
    LONG dy;
    LONG wMax;
    CHAR rgchMember[2];
};

typedef struct tagHELPWININFOW {
    LONG wStructSize;
    LONG x;
    LONG y;
    LONG dx;
    LONG dy;
    LONG wMax;
    WCHAR rgchMember[2];
};

typedef struct tagHIGHCONTRASTA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpszDefaultScheme;
};

typedef struct tagHIGHCONTRASTW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpszDefaultScheme;
};

typedef struct tagHW_PROFILE_INFOA {
    ULONG dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
};

typedef struct tagHW_PROFILE_INFOW {
    ULONG dwDockInfo;
    WCHAR szHwProfileGuid[39];
    WCHAR szHwProfileName[80];
};

typedef struct tagICEXYZTRIPLE {
    struct tagCIEXYZ ciexyzRed;
    struct tagCIEXYZ ciexyzGreen;
    struct tagCIEXYZ ciexyzBlue;
};

typedef struct tagICONMETRICSA {
    ULONG cbSize;
    LONG iHorzSpacing;
    LONG iVertSpacing;
    LONG iTitleWrap;
    struct tagLOGFONTA lfFont;
};

typedef struct tagICONMETRICSW {
    ULONG cbSize;
    LONG iHorzSpacing;
    LONG iVertSpacing;
    LONG iTitleWrap;
    struct tagLOGFONTW lfFont;
};

typedef struct tagIDLDESC {
    ULONG64 dwReserved;
    USHORT wIDLFlags;
};

typedef struct tagIMECHARPOSITION {
    ULONG dwSize;
    ULONG dwCharPos;
    struct tagPOINT pt;
    ULONG cLineHeight;
    struct tagRECT rcDocument;
};

typedef struct tagIMEMENUITEMINFOA {
    ULONG cbSize;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG dwItemData;
    CHAR szString[80];
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagIMEMENUITEMINFOW {
    ULONG cbSize;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG dwItemData;
    WCHAR szString[80];
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagINPUT {
    ULONG type;
    struct tagMOUSEINPUT mi;
    struct tagKEYBDINPUT ki;
    struct tagHARDWAREINPUT hi;
};

typedef struct tagINPUT_INJECTION_VALUE {
    USHORT page;
    USHORT usage;
    LONG value;
    USHORT index;
};

typedef struct tagINPUT_MESSAGE_SOURCE {
    enum tagINPUT_MESSAGE_DEVICE_TYPE deviceType;
    enum tagINPUT_MESSAGE_ORIGIN_ID originId;
};

typedef struct tagINPUT_TRANSFORM {
    FLOAT _11;
    FLOAT _12;
    FLOAT _13;
    FLOAT _14;
    FLOAT _21;
    FLOAT _22;
    FLOAT _23;
    FLOAT _24;
    FLOAT _31;
    FLOAT _32;
    FLOAT _33;
    FLOAT _34;
    FLOAT _41;
    FLOAT _42;
    FLOAT _43;
    FLOAT _44;
    FLOAT m[4][4];
};

typedef struct tagINTERFACEDATA {
    struct tagMETHODDATA *pmethdata;
    ULONG cMembers;
};

typedef struct tagINTERFACEINFO {
    struct IUnknown *pUnk;
    struct _GUID iid;
    USHORT wMethod;
};

typedef struct tagI_RpcProxyCallbackInterface {
    PLONG IsValidMachineFn;
    PLONG GetClientAddressFn;
    PLONG GetConnectionTimeoutFn;
    PLONG PerformCalloutFn;
    PVOID FreeCalloutStateFn;
    PLONG GetClientSessionAndResourceUUIDFn;
    PLONG ProxyFilterIfFn;
    PVOID RpcProxyUpdatePerfCounterFn;
    PVOID RpcProxyUpdatePerfCounterBackendServerFn;
};

typedef struct tagKBDLLHOOKSTRUCT {
    ULONG vkCode;
    ULONG scanCode;
    ULONG flags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagKERNINGPAIR {
    USHORT wFirst;
    USHORT wSecond;
    LONG iKernAmount;
};

typedef struct tagKEYBDINPUT {
    USHORT wVk;
    USHORT wScan;
    ULONG dwFlags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagLASTINPUTINFO {
    ULONG cbSize;
    ULONG dwTime;
};

typedef struct tagLAYERPLANEDESCRIPTOR {
    USHORT nSize;
    USHORT nVersion;
    ULONG dwFlags;
    UCHAR iPixelType;
    UCHAR cColorBits;
    UCHAR cRedBits;
    UCHAR cRedShift;
    UCHAR cGreenBits;
    UCHAR cGreenShift;
    UCHAR cBlueBits;
    UCHAR cBlueShift;
    UCHAR cAlphaBits;
    UCHAR cAlphaShift;
    UCHAR cAccumBits;
    UCHAR cAccumRedBits;
    UCHAR cAccumGreenBits;
    UCHAR cAccumBlueBits;
    UCHAR cAccumAlphaBits;
    UCHAR cDepthBits;
    UCHAR cStencilBits;
    UCHAR cAuxBuffers;
    UCHAR iLayerPlane;
    UCHAR bReserved;
    ULONG crTransparent;
};

typedef struct tagLC_ID {
    USHORT wLanguage;
    USHORT wCountry;
    USHORT wCodePage;
};

typedef struct tagLICINFO {
    LONG cbLicInfo;
    LONG fRuntimeKeyAvail;
    LONG fLicVerified;
};

typedef struct tagLOCALESIGNATURE {
    ULONG lsUsb[4];
    ULONG lsCsbDefault[2];
    ULONG lsCsbSupported[2];
};

typedef struct tagLOGBRUSH {
    ULONG lbStyle;
    ULONG lbColor;
    ULONG64 lbHatch;
};

typedef struct tagLOGBRUSH32 {
    ULONG lbStyle;
    ULONG lbColor;
    ULONG lbHatch;
};

typedef struct tagLOGCOLORSPACEA {
    ULONG lcsSignature;
    ULONG lcsVersion;
    ULONG lcsSize;
    LONG lcsCSType;
    LONG lcsIntent;
    struct tagICEXYZTRIPLE lcsEndpoints;
    ULONG lcsGammaRed;
    ULONG lcsGammaGreen;
    ULONG lcsGammaBlue;
    CHAR lcsFilename[260];
};

typedef struct tagLOGCOLORSPACEW {
    ULONG lcsSignature;
    ULONG lcsVersion;
    ULONG lcsSize;
    LONG lcsCSType;
    LONG lcsIntent;
    struct tagICEXYZTRIPLE lcsEndpoints;
    ULONG lcsGammaRed;
    ULONG lcsGammaGreen;
    ULONG lcsGammaBlue;
    WCHAR lcsFilename[260];
};

typedef struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    UCHAR lfItalic;
    UCHAR lfUnderline;
    UCHAR lfStrikeOut;
    UCHAR lfCharSet;
    UCHAR lfOutPrecision;
    UCHAR lfClipPrecision;
    UCHAR lfQuality;
    UCHAR lfPitchAndFamily;
    CHAR lfFaceName[32];
};

typedef struct tagLOGFONTW {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    UCHAR lfItalic;
    UCHAR lfUnderline;
    UCHAR lfStrikeOut;
    UCHAR lfCharSet;
    UCHAR lfOutPrecision;
    UCHAR lfClipPrecision;
    UCHAR lfQuality;
    UCHAR lfPitchAndFamily;
    WCHAR lfFaceName[32];
};

typedef struct tagLOGPALETTE {
    USHORT palVersion;
    USHORT palNumEntries;
    struct tagPALETTEENTRY palPalEntry[1];
};

typedef struct tagLOGPEN {
    ULONG lopnStyle;
    struct tagPOINT lopnWidth;
    ULONG lopnColor;
};

typedef struct tagMDICREATESTRUCTA {
    PCHAR szClass;
    PCHAR szTitle;
    PVOID hOwner;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG style;
    LONG64 lParam;
};

typedef struct tagMDICREATESTRUCTW {
    PWCHAR szClass;
    PWCHAR szTitle;
    PVOID hOwner;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG style;
    LONG64 lParam;
};

typedef struct tagMDINEXTMENU {
    struct HMENU__ *hmenuIn;
    struct HMENU__ *hmenuNext;
    struct HWND__ *hwndNext;
};

typedef struct tagMEASUREITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    ULONG itemWidth;
    ULONG itemHeight;
    ULONG64 itemData;
};

typedef struct tagMENUBARINFO {
    ULONG cbSize;
    struct tagRECT rcBar;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndMenu;
    LONG fBarFocused : 1;
    LONG fFocused : 1;
};

typedef struct tagMENUGETOBJECTINFO {
    ULONG dwFlags;
    ULONG uPos;
    struct HMENU__ *hmenu;
    PVOID riid;
    PVOID pvObj;
};

typedef struct tagMENUINFO {
    ULONG cbSize;
    ULONG fMask;
    ULONG dwStyle;
    ULONG cyMax;
    struct HBRUSH__ *hbrBack;
    ULONG dwContextHelpID;
    ULONG64 dwMenuData;
};

typedef struct tagMENUITEMINFOA {
    ULONG cbSize;
    ULONG fMask;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HMENU__ *hSubMenu;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG64 dwItemData;
    PCHAR dwTypeData;
    ULONG cch;
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagMENUITEMINFOW {
    ULONG cbSize;
    ULONG fMask;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HMENU__ *hSubMenu;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG64 dwItemData;
    PWCHAR dwTypeData;
    ULONG cch;
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    struct HMETAFILE__ *hMF;
};

typedef struct tagMETAHEADER {
    USHORT mtType;
    USHORT mtHeaderSize;
    USHORT mtVersion;
    ULONG mtSize;
    USHORT mtNoObjects;
    ULONG mtMaxRecord;
    USHORT mtNoParameters;
};

typedef struct tagMETARECORD {
    ULONG rdSize;
    USHORT rdFunction;
    USHORT rdParm[1];
};

typedef struct tagMETHODDATA {
    PWCHAR szName;
    struct tagPARAMDATA *ppdata;
    LONG dispid;
    ULONG iMeth;
    enum tagCALLCONV cc;
    ULONG cArgs;
    USHORT wFlags;
    USHORT vtReturn;
};

typedef struct tagMIMECPINFO {
    ULONG dwFlags;
    ULONG uiCodePage;
    ULONG uiFamilyCodePage;
    WCHAR wszDescription[64];
    WCHAR wszWebCharset[50];
    WCHAR wszHeaderCharset[50];
    WCHAR wszBodyCharset[50];
    WCHAR wszFixedWidthFont[32];
    WCHAR wszProportionalFont[32];
    UCHAR bGDICharset;
};

typedef struct tagMIMECSETINFO {
    ULONG uiCodePage;
    ULONG uiInternetEncoding;
    WCHAR wszCharset[50];
};

typedef struct tagMINIMIZEDMETRICS {
    ULONG cbSize;
    LONG iWidth;
    LONG iHorzGap;
    LONG iVertGap;
    LONG iArrange;
};

typedef struct tagMINMAXINFO {
    struct tagPOINT ptReserved;
    struct tagPOINT ptMaxSize;
    struct tagPOINT ptMaxPosition;
    struct tagPOINT ptMinTrackSize;
    struct tagPOINT ptMaxTrackSize;
};

typedef struct tagMONITORINFO {
    ULONG cbSize;
    struct tagRECT rcMonitor;
    struct tagRECT rcWork;
    ULONG dwFlags;
};

typedef struct tagMONITORINFOEXA {
    struct tagMONITORINFO tagMONITORINFO;
    CHAR szDevice[32];
};

typedef struct tagMONITORINFOEXW {
    struct tagMONITORINFO tagMONITORINFO;
    WCHAR szDevice[32];
};

typedef struct tagMOUSEHOOKSTRUCT {
    struct tagPOINT pt;
    struct HWND__ *hwnd;
    ULONG wHitTestCode;
    ULONG64 dwExtraInfo;
};

typedef struct tagMOUSEHOOKSTRUCTEX {
    struct tagMOUSEHOOKSTRUCT tagMOUSEHOOKSTRUCT;
    ULONG mouseData;
};

typedef struct tagMOUSEINPUT {
    LONG dx;
    LONG dy;
    ULONG mouseData;
    ULONG dwFlags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMOUSEKEYS {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iMaxSpeed;
    ULONG iTimeToMaxSpeed;
    ULONG iCtrlSpeed;
    ULONG dwReserved1;
    ULONG dwReserved2;
};

typedef struct tagMOUSEMOVEPOINT {
    LONG x;
    LONG y;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMSG {
    struct HWND__ *hwnd;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
    ULONG time;
    struct tagPOINT pt;
};

typedef struct tagMSGBOXPARAMSA {
    ULONG cbSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PCHAR lpszText;
    PCHAR lpszCaption;
    ULONG dwStyle;
    PCHAR lpszIcon;
    ULONG64 dwContextHelpId;
    PVOID lpfnMsgBoxCallback;
    ULONG dwLanguageId;
};

typedef struct tagMSGBOXPARAMSW {
    ULONG cbSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpszText;
    PWCHAR lpszCaption;
    ULONG dwStyle;
    PWCHAR lpszIcon;
    ULONG64 dwContextHelpId;
    PVOID lpfnMsgBoxCallback;
    ULONG dwLanguageId;
};

typedef struct tagMSLLHOOKSTRUCT {
    struct tagPOINT pt;
    ULONG mouseData;
    ULONG flags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMULTIKEYHELPA {
    ULONG mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
};

typedef struct tagMULTIKEYHELPW {
    ULONG mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
};

typedef struct tagMULTI_QI {
    struct _GUID *pIID;
    struct IUnknown *pItf;
    HRESULT hr;
};

typedef struct tagNCCALCSIZE_PARAMS {
    struct tagRECT rgrc[3];
    struct tagWINDOWPOS *lppos;
};

typedef struct tagNEWTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    UCHAR tmFirstChar;
    UCHAR tmLastChar;
    UCHAR tmDefaultChar;
    UCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
    ULONG ntmFlags;
    ULONG ntmSizeEM;
    ULONG ntmCellHeight;
    ULONG ntmAvgWidth;
};

typedef struct tagNEWTEXTMETRICEXA {
    struct tagNEWTEXTMETRICA ntmTm;
    struct tagFONTSIGNATURE ntmFontSig;
};

typedef struct tagNEWTEXTMETRICEXW {
    struct tagNEWTEXTMETRICW ntmTm;
    struct tagFONTSIGNATURE ntmFontSig;
};

typedef struct tagNEWTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
    ULONG ntmFlags;
    ULONG ntmSizeEM;
    ULONG ntmCellHeight;
    ULONG ntmAvgWidth;
};

typedef struct tagNMHDR {
    struct HWND__ *hwndFrom;
    ULONG64 idFrom;
    ULONG code;
};

typedef struct tagNONCLIENTMETRICSA {
    ULONG cbSize;
    LONG iBorderWidth;
    LONG iScrollWidth;
    LONG iScrollHeight;
    LONG iCaptionWidth;
    LONG iCaptionHeight;
    struct tagLOGFONTA lfCaptionFont;
    LONG iSmCaptionWidth;
    LONG iSmCaptionHeight;
    struct tagLOGFONTA lfSmCaptionFont;
    LONG iMenuWidth;
    LONG iMenuHeight;
    struct tagLOGFONTA lfMenuFont;
    struct tagLOGFONTA lfStatusFont;
    struct tagLOGFONTA lfMessageFont;
    LONG iPaddedBorderWidth;
};

typedef struct tagNONCLIENTMETRICSW {
    ULONG cbSize;
    LONG iBorderWidth;
    LONG iScrollWidth;
    LONG iScrollHeight;
    LONG iCaptionWidth;
    LONG iCaptionHeight;
    struct tagLOGFONTW lfCaptionFont;
    LONG iSmCaptionWidth;
    LONG iSmCaptionHeight;
    struct tagLOGFONTW lfSmCaptionFont;
    LONG iMenuWidth;
    LONG iMenuHeight;
    struct tagLOGFONTW lfMenuFont;
    struct tagLOGFONTW lfStatusFont;
    struct tagLOGFONTW lfMessageFont;
    LONG iPaddedBorderWidth;
};

typedef struct tagOBJECTDESCRIPTOR {
    ULONG cbSize;
    struct _GUID clsid;
    ULONG dwDrawAspect;
    struct tagSIZE sizel;
    struct _POINTL pointl;
    ULONG dwStatus;
    ULONG dwFullUserTypeName;
    ULONG dwSrcOfCopy;
};

typedef struct tagOCPFIPARAMS {
    ULONG cbStructSize;
    struct HWND__ *hWndOwner;
    LONG x;
    LONG y;
    PWCHAR lpszCaption;
    ULONG cObjects;
    struct IUnknown **lplpUnk;
    ULONG cPages;
    struct _GUID *lpPages;
    ULONG lcid;
    LONG dispidInitialProperty;
};

typedef struct tagOIFI {
    ULONG cb;
    LONG fMDIApp;
    struct HWND__ *hwndFrame;
    struct HACCEL__ *haccel;
    ULONG cAccelEntries;
};

typedef struct tagOLEVERB {
    LONG lVerb;
    PWCHAR lpszVerbName;
    ULONG fuFlags;
    ULONG grfAttribs;
};

typedef struct tagOleMenuGroupWidths {
    LONG width[6];
};

typedef struct tagPAGERANGE {
    LONG nFromPage;
    LONG nToPage;
};

typedef struct tagPAGESET {
    ULONG cbStruct;
    LONG fOddPages;
    LONG fEvenPages;
    ULONG cPageRange;
    struct tagPAGERANGE rgPages[1];
};

typedef struct tagPAINTSTRUCT {
    struct HDC__ *hdc;
    LONG fErase;
    struct tagRECT rcPaint;
    LONG fRestore;
    LONG fIncUpdate;
    UCHAR rgbReserved[32];
};

typedef struct tagPALETTEENTRY {
    UCHAR peRed;
    UCHAR peGreen;
    UCHAR peBlue;
    UCHAR peFlags;
};

typedef struct tagPANOSE {
    UCHAR bFamilyType;
    UCHAR bSerifStyle;
    UCHAR bWeight;
    UCHAR bProportion;
    UCHAR bContrast;
    UCHAR bStrokeVariation;
    UCHAR bArmStyle;
    UCHAR bLetterform;
    UCHAR bMidline;
    UCHAR bXHeight;
};

typedef struct tagPARAMDATA {
    PWCHAR szName;
    USHORT vt;
};

typedef struct tagPARAMDESC {
    struct tagPARAMDESCEX *pparamdescex;
    USHORT wParamFlags;
};

typedef struct tagPARAMDESCEX {
    ULONG cBytes;
    struct tagVARIANT varDefaultValue;
};

typedef struct tagPARSEDURLA {
    ULONG cbSize;
    PCHAR pszProtocol;
    ULONG cchProtocol;
    PCHAR pszSuffix;
    ULONG cchSuffix;
    ULONG nScheme;
};

typedef struct tagPARSEDURLW {
    ULONG cbSize;
    PWCHAR pszProtocol;
    ULONG cchProtocol;
    PWCHAR pszSuffix;
    ULONG cchSuffix;
    ULONG nScheme;
};

typedef struct tagPELARRAY {
    LONG paXCount;
    LONG paYCount;
    LONG paXExt;
    LONG paYExt;
    UCHAR paRGBs;
};

typedef struct tagPICTDESC {
    ULONG cbSizeofstruct;
    ULONG picType;
    struct {
        struct HBITMAP__ *hbitmap;
        struct HPALETTE__ *hpal;
    } bmp;
    struct {
        struct HMETAFILE__ *hmeta;
        LONG xExt;
        LONG yExt;
    } wmf;
    struct {
        struct HICON__ *hicon;
    } icon;
    struct {
        struct HENHMETAFILE__ *hemf;
    } emf;
};

typedef struct tagPIXELFORMATDESCRIPTOR {
    USHORT nSize;
    USHORT nVersion;
    ULONG dwFlags;
    UCHAR iPixelType;
    UCHAR cColorBits;
    UCHAR cRedBits;
    UCHAR cRedShift;
    UCHAR cGreenBits;
    UCHAR cGreenShift;
    UCHAR cBlueBits;
    UCHAR cBlueShift;
    UCHAR cAlphaBits;
    UCHAR cAlphaShift;
    UCHAR cAccumBits;
    UCHAR cAccumRedBits;
    UCHAR cAccumGreenBits;
    UCHAR cAccumBlueBits;
    UCHAR cAccumAlphaBits;
    UCHAR cDepthBits;
    UCHAR cStencilBits;
    UCHAR cAuxBuffers;
    UCHAR iLayerType;
    UCHAR bReserved;
    ULONG dwLayerMask;
    ULONG dwVisibleMask;
    ULONG dwDamageMask;
};

typedef struct tagPOINT {
    LONG x;
    LONG y;
};

typedef struct tagPOINTER_DEVICE_CURSOR_INFO {
    ULONG cursorId;
    enum tagPOINTER_DEVICE_CURSOR_TYPE cursor;
};

typedef struct tagPOINTER_DEVICE_INFO {
    ULONG displayOrientation;
    PVOID device;
    enum tagPOINTER_DEVICE_TYPE pointerDeviceType;
    struct HMONITOR__ *monitor;
    ULONG startingCursorId;
    USHORT maxActiveContacts;
    WCHAR productString[520];
};

typedef struct tagPOINTER_DEVICE_PROPERTY {
    LONG logicalMin;
    LONG logicalMax;
    LONG physicalMin;
    LONG physicalMax;
    ULONG unit;
    ULONG unitExponent;
    USHORT usagePageId;
    USHORT usageId;
};

typedef struct tagPOINTER_INFO {
    ULONG pointerType;
    ULONG pointerId;
    ULONG frameId;
    ULONG pointerFlags;
    PVOID sourceDevice;
    struct HWND__ *hwndTarget;
    struct tagPOINT ptPixelLocation;
    struct tagPOINT ptHimetricLocation;
    struct tagPOINT ptPixelLocationRaw;
    struct tagPOINT ptHimetricLocationRaw;
    ULONG dwTime;
    ULONG historyCount;
    LONG InputData;
    ULONG dwKeyStates;
    ULONG64 PerformanceCount;
    enum tagPOINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
};

typedef struct tagPOINTER_PEN_INFO {
    struct tagPOINTER_INFO pointerInfo;
    ULONG penFlags;
    ULONG penMask;
    ULONG pressure;
    ULONG rotation;
    LONG tiltX;
    LONG tiltY;
};

typedef struct tagPOINTER_TOUCH_INFO {
    struct tagPOINTER_INFO pointerInfo;
    ULONG touchFlags;
    ULONG touchMask;
    struct tagRECT rcContact;
    struct tagRECT rcContactRaw;
    ULONG orientation;
    ULONG pressure;
};

typedef struct tagPOINTER_TYPE_INFO {
    ULONG type;
    struct tagPOINTER_TOUCH_INFO touchInfo;
    struct tagPOINTER_PEN_INFO penInfo;
};

typedef struct tagPOINTF {
    FLOAT x;
    FLOAT y;
};

typedef struct tagPOINTFX {
    struct _FIXED x;
    struct _FIXED y;
};

typedef struct tagPOINTS {
    SHORT x;
    SHORT y;
};

typedef struct tagPOLYTEXTA {
    LONG x;
    LONG y;
    ULONG n;
    PCHAR lpstr;
    ULONG uiFlags;
    struct tagRECT rcl;
    PLONG pdx;
};

typedef struct tagPOLYTEXTW {
    LONG x;
    LONG y;
    ULONG n;
    PWCHAR lpstr;
    ULONG uiFlags;
    struct tagRECT rcl;
    PLONG pdx;
};

typedef struct tagPROPBAG2 {
    ULONG dwType;
    USHORT vt;
    USHORT cfType;
    ULONG dwHint;
    PWCHAR pstrName;
    struct _GUID clsid;
};

typedef struct tagPROPPAGEINFO {
    ULONG cb;
    PWCHAR pszTitle;
    struct tagSIZE size;
    PWCHAR pszDocString;
    PWCHAR pszHelpFile;
    ULONG dwHelpContext;
};

typedef struct tagPROPSPEC {
    ULONG ulKind;
    ULONG propid;
    PWCHAR lpwstr;
};

typedef struct tagPROPVARIANT {
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    CHAR cVal;
    UCHAR bVal;
    SHORT iVal;
    USHORT uiVal;
    LONG lVal;
    ULONG ulVal;
    LONG intVal;
    ULONG uintVal;
    union _LARGE_INTEGER hVal;
    union _ULARGE_INTEGER uhVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    struct _FILETIME filetime;
    struct _GUID *puuid;
    struct tagCLIPDATA *pclipdata;
    PWCHAR bstrVal;
    struct tagBSTRBLOB bstrblobVal;
    struct tagBLOB blob;
    PCHAR pszVal;
    PWCHAR pwszVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct IStream *pStream;
    struct IStorage *pStorage;
    struct tagVersionedStream *pVersionedStream;
    struct tagSAFEARRAY *parray;
    struct tagCAC cac;
    struct tagCAUB caub;
    struct tagCAI cai;
    struct tagCAUI caui;
    struct tagCAL cal;
    struct tagCAUL caul;
    struct tagCAH cah;
    struct tagCAUH cauh;
    struct tagCAFLT caflt;
    struct tagCADBL cadbl;
    struct tagCABOOL cabool;
    struct tagCASCODE cascode;
    struct tagCACY cacy;
    struct tagCADATE cadate;
    struct tagCAFILETIME cafiletime;
    struct tagCACLSID cauuid;
    struct tagCACLIPDATA caclipdata;
    struct tagCABSTR cabstr;
    struct tagCABSTRBLOB cabstrblob;
    struct tagCALPSTR calpstr;
    struct tagCALPWSTR calpwstr;
    struct tagCAPROPVARIANT capropvar;
    PCHAR pcVal;
    PUCHAR pbVal;
    PSHORT piVal;
    PWCHAR puiVal;
    PLONG plVal;
    PULONG pulVal;
    PLONG pintVal;
    PULONG puintVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    struct tagDEC *pdecVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    PWCHAR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct tagSAFEARRAY **pparray;
    struct tagPROPVARIANT *pvarVal;
    struct tagDEC decVal;
};

typedef struct tagProxyFileInfo {
    struct tagCInterfaceProxyVtbl **pProxyVtblList;
    struct tagCInterfaceStubVtbl **pStubVtblList;
    PCHAR *pNamesArray;
    struct _GUID **pDelegatedIIDs;
    PLONG pIIDLookupRtn;
    USHORT TableSize;
    USHORT TableVersion;
    struct _GUID **pAsyncIIDLookup;
    LONG64 Filler2;
    LONG64 Filler3;
    LONG64 Filler4;
};

typedef struct tagQACONTAINER {
    ULONG cbSize;
    struct IOleClientSite *pClientSite;
    struct IAdviseSinkEx *pAdviseSink;
    struct IPropertyNotifySink *pPropertyNotifySink;
    struct IUnknown *pUnkEventSink;
    ULONG dwAmbientFlags;
    ULONG colorFore;
    ULONG colorBack;
    struct IFont *pFont;
    struct IOleUndoManager *pUndoMgr;
    ULONG dwAppearance;
    LONG lcid;
    struct HPALETTE__ *hpal;
    struct IBindHost *pBindHost;
    struct IOleControlSite *pOleControlSite;
    struct IServiceProvider *pServiceProvider;
};

typedef struct tagQACONTROL {
    ULONG cbSize;
    ULONG dwMiscStatus;
    ULONG dwViewStatus;
    ULONG dwEventCookie;
    ULONG dwPropNotifyCookie;
    ULONG dwPointerActivationPolicy;
};

typedef struct tagQUERYCONTEXT {
    ULONG dwContext;
    struct tagCSPLATFORM Platform;
    ULONG Locale;
    ULONG dwVersionHi;
    ULONG dwVersionLo;
};

typedef struct tagRAWHID {
    ULONG dwSizeHid;
    ULONG dwCount;
    UCHAR bRawData[1];
};

typedef struct tagRAWINPUT {
    struct tagRAWINPUTHEADER header;
     <unnamed-type-data>;
    union {
        struct tagRAWMOUSE mouse;
        struct tagRAWKEYBOARD keyboard;
        struct tagRAWHID hid;
    } data;
};

typedef struct tagRAWINPUTDEVICE {
    USHORT usUsagePage;
    USHORT usUsage;
    ULONG dwFlags;
    struct HWND__ *hwndTarget;
};

typedef struct tagRAWINPUTDEVICELIST {
    PVOID hDevice;
    ULONG dwType;
};

typedef struct tagRAWINPUTHEADER {
    ULONG dwType;
    ULONG dwSize;
    PVOID hDevice;
    ULONG64 wParam;
};

typedef struct tagRAWKEYBOARD {
    USHORT MakeCode;
    USHORT Flags;
    USHORT Reserved;
    USHORT VKey;
    ULONG Message;
    ULONG ExtraInformation;
};

typedef struct tagRAWMOUSE {
    USHORT usFlags;
    ULONG ulButtons;
    USHORT usButtonFlags;
    USHORT usButtonData;
    ULONG ulRawButtons;
    LONG lLastX;
    LONG lLastY;
    ULONG ulExtraInformation;
};

typedef struct tagRECONVERTSTRING {
    ULONG dwSize;
    ULONG dwVersion;
    ULONG dwStrLen;
    ULONG dwStrOffset;
    ULONG dwCompStrLen;
    ULONG dwCompStrOffset;
    ULONG dwTargetStrLen;
    ULONG dwTargetStrOffset;
};

typedef struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef struct tagREGISTERWORDA {
    PCHAR lpReading;
    PCHAR lpWord;
};

typedef struct tagREGISTERWORDW {
    PWCHAR lpReading;
    PWCHAR lpWord;
};

typedef struct tagRFC1766INFO {
    ULONG lcid;
    WCHAR wszRfc1766[6];
    WCHAR wszLocaleName[32];
};

typedef struct tagRGBQUAD {
    UCHAR rgbBlue;
    UCHAR rgbGreen;
    UCHAR rgbRed;
    UCHAR rgbReserved;
};

typedef struct tagRGBTRIPLE {
    UCHAR rgbtBlue;
    UCHAR rgbtGreen;
    UCHAR rgbtRed;
};

typedef struct tagRID_DEVICE_INFO {
    ULONG cbSize;
    ULONG dwType;
    struct tagRID_DEVICE_INFO_MOUSE mouse;
    struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct tagRID_DEVICE_INFO_HID hid;
};

typedef struct tagRID_DEVICE_INFO_HID {
    ULONG dwVendorId;
    ULONG dwProductId;
    ULONG dwVersionNumber;
    USHORT usUsagePage;
    USHORT usUsage;
};

typedef struct tagRID_DEVICE_INFO_KEYBOARD {
    ULONG dwType;
    ULONG dwSubType;
    ULONG dwKeyboardMode;
    ULONG dwNumberOfFunctionKeys;
    ULONG dwNumberOfIndicators;
    ULONG dwNumberOfKeysTotal;
};

typedef struct tagRID_DEVICE_INFO_MOUSE {
    ULONG dwId;
    ULONG dwNumberOfButtons;
    ULONG dwSampleRate;
    LONG fHasHorizontalWheel;
};

typedef struct tagRPCOLEMESSAGE {
    PVOID reserved1;
    ULONG dataRepresentation;
    PVOID Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    PVOID reserved2[5];
    ULONG rpcFlags;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V2_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    ULONG IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V2_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    enum tagRpcCallClientLocality IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V3_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    ULONG IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
    ULONG ClientIdentifierBufferLength;
    PUCHAR ClientIdentifier;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V3_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    enum tagRpcCallClientLocality IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
    ULONG ClientIdentifierBufferLength;
    PUCHAR ClientIdentifier;
};

typedef struct tagRPC_EE_INFO_PARAM {
    enum tagExtendedErrorParamTypes ParameterType;
     <unnamed-type-u>;
    union {
        PCHAR AnsiString;
        PWCHAR UnicodeString;
        LONG LVal;
        SHORT SVal;
        ULONG64 PVal;
        struct tagBinaryParam BVal;
    } u;
};

typedef struct tagRPC_ERROR_ENUM_HANDLE {
    ULONG Signature;
    PVOID CurrentPos;
    PVOID Head;
};

typedef struct tagRPC_EXTENDED_ERROR_INFO {
    ULONG Version;
    PWCHAR ComputerName;
    ULONG ProcessID;
     <unnamed-type-u>;
    union {
        struct _SYSTEMTIME SystemTime;
        struct _FILETIME FileTime;
    } u;
    ULONG GeneratingComponent;
    ULONG Status;
    USHORT DetectionLocation;
    USHORT Flags;
    LONG NumberOfParameters;
    struct tagRPC_EE_INFO_PARAM Parameters[4];
};

typedef struct tagRedirectionPolicyFlags {
    UCHAR _fSkipNeutralCheck;
    UCHAR _fCheckDontShowNeedIE;
    UCHAR _fCheckDontShowNeedHVSI;
    UCHAR _fCheckProcessRecycle;
};

typedef struct tagRemBRUSH {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemFORMATETC {
    ULONG cfFormat;
    ULONG ptd;
    ULONG dwAspect;
    LONG lindex;
    ULONG tymed;
};

typedef struct tagRemHBITMAP {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHENHMETAFILE {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHGLOBAL {
    LONG fNullHGlobal;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHPALETTE {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemSNB {
    ULONG ulCntStr;
    ULONG ulCntChar;
    WCHAR rgString[1];
};

typedef struct tagRemSTGMEDIUM {
    ULONG tymed;
    ULONG dwHandleType;
    ULONG pData;
    ULONG pUnkForRelease;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    struct tagSAFEARRAYBOUND rgsabound[1];
};

typedef struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

typedef struct tagSCRIPFONTINFO {
    LONG64 scripts;
    WCHAR wszFont[32];
};

typedef struct tagSCRIPTINFO {
    UCHAR ScriptId;
    ULONG uiCodePage;
    WCHAR wszDescription[48];
    WCHAR wszFixedWidthFont[32];
    WCHAR wszProportionalFont[32];
};

typedef struct tagSCROLLBARINFO {
    ULONG cbSize;
    struct tagRECT rcScrollBar;
    LONG dxyLineButton;
    LONG xyThumbTop;
    LONG xyThumbBottom;
    LONG reserved;
    ULONG rgstate[6];
};

typedef struct tagSCROLLINFO {
    ULONG cbSize;
    ULONG fMask;
    LONG nMin;
    LONG nMax;
    ULONG nPage;
    LONG nPos;
    LONG nTrackPos;
};

typedef struct tagSERIALIZEDPROPERTYVALUE {
    ULONG dwType;
    UCHAR rgb[1];
};

typedef struct tagSERIALKEYSA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpszActivePort;
    PCHAR lpszPort;
    ULONG iBaudRate;
    ULONG iPortState;
    ULONG iActive;
};

typedef struct tagSERIALKEYSW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpszActivePort;
    PWCHAR lpszPort;
    ULONG iBaudRate;
    ULONG iPortState;
    ULONG iActive;
};

typedef struct tagSIZE {
    LONG cx;
    LONG cy;
};

typedef struct tagSOLE_AUTHENTICATION_INFO {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PVOID pAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_LIST {
    ULONG cAuthInfo;
    struct tagSOLE_AUTHENTICATION_INFO *aAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_SERVICE {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PWCHAR pPrincipalName;
    HRESULT hr;
};

typedef struct tagSOUNDSENTRYA {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iFSTextEffect;
    ULONG iFSTextEffectMSec;
    ULONG iFSTextEffectColorBits;
    ULONG iFSGrafEffect;
    ULONG iFSGrafEffectMSec;
    ULONG iFSGrafEffectColor;
    ULONG iWindowsEffect;
    ULONG iWindowsEffectMSec;
    PCHAR lpszWindowsEffectDLL;
    ULONG iWindowsEffectOrdinal;
};

typedef struct tagSOUNDSENTRYW {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iFSTextEffect;
    ULONG iFSTextEffectMSec;
    ULONG iFSTextEffectColorBits;
    ULONG iFSGrafEffect;
    ULONG iFSGrafEffectMSec;
    ULONG iFSGrafEffectColor;
    ULONG iWindowsEffect;
    ULONG iWindowsEffectMSec;
    PWCHAR lpszWindowsEffectDLL;
    ULONG iWindowsEffectOrdinal;
};

typedef struct tagSTATDATA {
    struct tagFORMATETC formatetc;
    ULONG advf;
    struct IAdviseSink *pAdvSink;
    ULONG dwConnection;
};

typedef struct tagSTATPROPSETSTG {
    struct _GUID fmtid;
    struct _GUID clsid;
    ULONG grfFlags;
    struct _FILETIME mtime;
    struct _FILETIME ctime;
    struct _FILETIME atime;
    ULONG dwOSVersion;
};

typedef struct tagSTATPROPSTG {
    PWCHAR lpwstrName;
    ULONG propid;
    USHORT vt;
};

typedef struct tagSTATSTG {
    PWCHAR pwcsName;
    ULONG type;
    union _ULARGE_INTEGER cbSize;
    struct _FILETIME mtime;
    struct _FILETIME ctime;
    struct _FILETIME atime;
    ULONG grfMode;
    ULONG grfLocksSupported;
    struct _GUID clsid;
    ULONG grfStateBits;
    ULONG reserved;
};

typedef struct tagSTGMEDIUM {
    ULONG tymed;
    struct HBITMAP__ *hBitmap;
    PVOID hMetaFilePict;
    struct HENHMETAFILE__ *hEnhMetaFile;
    PVOID hGlobal;
    PWCHAR lpszFileName;
    struct IStream *pstm;
    struct IStorage *pstg;
    struct IUnknown *pUnkForRelease;
};

typedef struct tagSTGOPTIONS {
    USHORT usVersion;
    USHORT reserved;
    ULONG ulSectorSize;
    PWCHAR pwcsTemplateFile;
};

typedef struct tagSTICKYKEYS {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct tagSTYLEBUFA {
    ULONG dwStyle;
    CHAR szDescription[32];
};

typedef struct tagSTYLEBUFW {
    ULONG dwStyle;
    WCHAR szDescription[32];
};

typedef struct tagSTYLESTRUCT {
    ULONG styleOld;
    ULONG styleNew;
};

typedef struct tagServerInformation {
    ULONG dwServerPid;
    ULONG dwServerTid;
    ULONG64 ui64ServerAddress;
};

typedef struct tagStorageLayout {
    ULONG LayoutType;
    PWCHAR pwcsElementName;
    union _LARGE_INTEGER cOffset;
    union _LARGE_INTEGER cBytes;
};

typedef struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    UCHAR tmFirstChar;
    UCHAR tmLastChar;
    UCHAR tmDefaultChar;
    UCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
};

typedef struct tagTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
};

typedef struct tagTITLEBARINFO {
    ULONG cbSize;
    struct tagRECT rcTitleBar;
    ULONG rgstate[6];
};

typedef struct tagTITLEBARINFOEX {
    ULONG cbSize;
    struct tagRECT rcTitleBar;
    ULONG rgstate[6];
    struct tagRECT rgrect[6];
};

typedef struct tagTLIBATTR {
    struct _GUID guid;
    ULONG lcid;
    enum tagSYSKIND syskind;
    USHORT wMajorVerNum;
    USHORT wMinorVerNum;
    USHORT wLibFlags;
};

typedef struct tagTOGGLEKEYS {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct tagTOUCHINPUT {
    LONG x;
    LONG y;
    PVOID hSource;
    ULONG dwID;
    ULONG dwFlags;
    ULONG dwMask;
    ULONG dwTime;
    ULONG64 dwExtraInfo;
    ULONG cxContact;
    ULONG cyContact;
};

typedef struct tagTOUCH_HIT_TESTING_INPUT {
    ULONG pointerId;
    struct tagPOINT point;
    struct tagRECT boundingBox;
    struct tagRECT nonOccludedBoundingBox;
    ULONG orientation;
};

typedef struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION {
    USHORT score;
    struct tagPOINT adjustedPoint;
};

typedef struct tagTPMPARAMS {
    ULONG cbSize;
    struct tagRECT rcExclude;
};

typedef struct tagTRACKMOUSEEVENT {
    ULONG cbSize;
    ULONG dwFlags;
    struct HWND__ *hwndTrack;
    ULONG dwHoverTime;
};

typedef struct tagTTPOLYCURVE {
    USHORT wType;
    USHORT cpfx;
    struct tagPOINTFX apfx[1];
};

typedef struct tagTTPOLYGONHEADER {
    ULONG cb;
    ULONG dwType;
    struct tagPOINTFX pfxStart;
};

typedef struct tagTYPEATTR {
    struct _GUID guid;
    ULONG lcid;
    ULONG dwReserved;
    LONG memidConstructor;
    LONG memidDestructor;
    PWCHAR lpstrSchema;
    ULONG cbSizeInstance;
    enum tagTYPEKIND typekind;
    USHORT cFuncs;
    USHORT cVars;
    USHORT cImplTypes;
    USHORT cbSizeVft;
    USHORT cbAlignment;
    USHORT wTypeFlags;
    USHORT wMajorVerNum;
    USHORT wMinorVerNum;
    struct tagTYPEDESC tdescAlias;
    struct tagIDLDESC idldescType;
};

typedef struct tagTYPEDESC {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    ULONG hreftype;
    USHORT vt;
};

typedef struct tagTouchPredictionParameters {
    ULONG cbSize;
    ULONG dwLatency;
    ULONG dwSampleTime;
    ULONG bUseHWTimeStamp;
};

typedef struct tagUNICODERANGE {
    WCHAR wcFrom;
    WCHAR wcTo;
};

typedef struct tagUPDATELAYEREDWINDOWINFO {
    ULONG cbSize;
    struct HDC__ *hdcDst;
    struct tagPOINT *pptDst;
    struct tagSIZE *psize;
    struct HDC__ *hdcSrc;
    struct tagPOINT *pptSrc;
    ULONG crKey;
    struct _BLENDFUNCTION *pblend;
    ULONG dwFlags;
    struct tagRECT *prcDirty;
};

typedef struct tagUSAGE_PROPERTIES {
    USHORT level;
    USHORT page;
    USHORT usage;
    LONG logicalMinimum;
    LONG logicalMaximum;
    USHORT unit;
    USHORT exponent;
    UCHAR count;
    LONG physicalMinimum;
    LONG physicalMaximum;
};

typedef struct tagUSEROBJECTFLAGS {
    LONG fInherit;
    LONG fReserved;
    ULONG dwFlags;
};

typedef struct tagVARDESC {
    LONG memid;
    PWCHAR lpstrSchema;
    ULONG oInst;
    struct tagVARIANT *lpvarValue;
    struct tagELEMDESC elemdescVar;
    USHORT wVarFlags;
    enum tagVARKIND varkind;
};

typedef struct tagVARIANT {
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    LONG64 llVal;
    LONG lVal;
    UCHAR bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    PWCHAR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct tagSAFEARRAY *parray;
    PUCHAR pbVal;
    PSHORT piVal;
    PLONG plVal;
    PLONG64 pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    PWCHAR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct tagSAFEARRAY **pparray;
    struct tagVARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONG64 ullVal;
    LONG intVal;
    ULONG uintVal;
    struct tagDEC *pdecVal;
    PCHAR pcVal;
    PWCHAR puiVal;
    PULONG pulVal;
    PULONG64 pullVal;
    PLONG pintVal;
    PULONG puintVal;
    PVOID pvRecord;
    struct IRecordInfo *pRecInfo;
    struct tagDEC decVal;
};

typedef struct tagVS_FIXEDFILEINFO {
    ULONG dwSignature;
    ULONG dwStrucVersion;
    ULONG dwFileVersionMS;
    ULONG dwFileVersionLS;
    ULONG dwProductVersionMS;
    ULONG dwProductVersionLS;
    ULONG dwFileFlagsMask;
    ULONG dwFileFlags;
    ULONG dwFileOS;
    ULONG dwFileType;
    ULONG dwFileSubtype;
    ULONG dwFileDateMS;
    ULONG dwFileDateLS;
};

typedef struct tagVersionedStream {
    struct _GUID guidVersion;
    struct IStream *pStream;
};

typedef struct tagWCRANGE {
    WCHAR wcLow;
    USHORT cGlyphs;
};

typedef struct tagWINDOWINFO {
    ULONG cbSize;
    struct tagRECT rcWindow;
    struct tagRECT rcClient;
    ULONG dwStyle;
    ULONG dwExStyle;
    ULONG dwWindowStatus;
    ULONG cxWindowBorders;
    ULONG cyWindowBorders;
    USHORT atomWindowType;
    USHORT wCreatorVersion;
};

typedef struct tagWINDOWPLACEMENT {
    ULONG length;
    ULONG flags;
    ULONG showCmd;
    struct tagPOINT ptMinPosition;
    struct tagPOINT ptMaxPosition;
    struct tagRECT rcNormalPosition;
};

typedef struct tagWINDOWPOS {
    struct HWND__ *hwnd;
    struct HWND__ *hwndInsertAfter;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG flags;
};

typedef struct tagWNDCLASSA {
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PCHAR lpszMenuName;
    PCHAR lpszClassName;
};

typedef struct tagWNDCLASSEXA {
    ULONG cbSize;
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PCHAR lpszMenuName;
    PCHAR lpszClassName;
    struct HICON__ *hIconSm;
};

typedef struct tagWNDCLASSEXW {
    ULONG cbSize;
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PWCHAR lpszMenuName;
    PWCHAR lpszClassName;
    struct HICON__ *hIconSm;
};

typedef struct tagWNDCLASSW {
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PWCHAR lpszMenuName;
    PWCHAR lpszClassName;
};

typedef struct tagWTSSESSION_NOTIFICATION {
    ULONG cbSize;
    ULONG dwSessionId;
};

typedef struct tagXFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

typedef struct tagXHR_CERT {
    ULONG cbCert;
    PUCHAR pbCert;
};

typedef struct tagXHR_COOKIE {
    PWCHAR pwszUrl;
    PWCHAR pwszName;
    PWCHAR pwszValue;
    PWCHAR pwszP3PPolicy;
    struct _FILETIME ftExpires;
    ULONG dwFlags;
};

typedef struct threadlocaleinfostruct {
    LONG refcount;
    ULONG lc_codepage;
    ULONG lc_collate_cp;
    ULONG lc_handle[6];
    struct tagLC_ID lc_id[6];
     <unnamed-type-lc_category>;
    struct {
        PCHAR locale;
        PWCHAR wlocale;
        PLONG refcount;
        PLONG wrefcount;
    } lc_category[6];
    LONG lc_clike;
    LONG mb_cur_max;
    PLONG lconv_intl_refcount;
    PLONG lconv_num_refcount;
    PLONG lconv_mon_refcount;
    struct lconv *lconv;
    PLONG ctype1_refcount;
    PWCHAR ctype1;
    PUSHORT pctype;
    PUCHAR pclmap;
    PUCHAR pcumap;
    struct __lc_time_data *lc_time_curr;
};

typedef struct threadmbcinfostruct {
};

typedef struct tm {
    LONG tm_sec;
    LONG tm_min;
    LONG tm_hour;
    LONG tm_mday;
    LONG tm_mon;
    LONG tm_year;
    LONG tm_wday;
    LONG tm_yday;
    LONG tm_isdst;
};

typedef struct val_context {
    LONG valuelen;
    PVOID value_context;
    PVOID val_buff_ptr;
};

typedef struct value_entA {
    PCHAR ve_valuename;
    ULONG ve_valuelen;
    ULONG64 ve_valueptr;
    ULONG ve_type;
};

typedef struct value_entW {
    PWCHAR ve_valuename;
    ULONG ve_valuelen;
    ULONG64 ve_valueptr;
    ULONG ve_type;
};

typedef struct wil::CallContextInfo {
    LONG contextId;
    PCHAR contextName;
    PWCHAR contextMessage;
};

typedef struct wil::DiagnosticsInfo {
    PVOID returnAddress;
    PCHAR file;
    PCHAR name;
    USHORT line;
    VOID DiagnosticsInfo;
    VOID DiagnosticsInfo;
    VOID DiagnosticsInfo;
};

typedef struct wil::FailureInfo {
    enum wil::FailureType type;
    HRESULT hr;
    LONG failureId;
    PWCHAR pszMessage;
    ULONG threadId;
    PCHAR pszCode;
    PCHAR pszFunction;
    PCHAR pszFile;
    ULONG uLineNumber;
    LONG cFailureCount;
    PCHAR pszCallContext;
    struct wil::CallContextInfo callContextOriginating;
    struct wil::CallContextInfo callContextCurrent;
    PCHAR pszModule;
    PVOID returnAddress;
    PVOID callerReturnAddress;
};

typedef struct wil::FeatureProperties {
    enum wil::FeatureChangeTime changeTime;
    enum wil::FeatureStage stage;
    BOOLEAN isEnabledByDefault;
    USHORT version;
    USHORT baseVersion;
    BOOLEAN isEnabled;
};

typedef struct wil::PaintDC {
    struct HWND__ *hwnd;
    struct tagPAINTSTRUCT ps;
    VOID PaintDC;
    struct HDC__ *operator struct HDC__ *;
    VOID Close;
    VOID __dflt_ctor_closure;
};

typedef struct wil::SelectResult {
    PVOID hgdi;
    struct HDC__ *hdc;
    VOID SelectResult;
    PVOID operator void *;
    VOID Close;
};

typedef struct wil::StagingControl {
    ULONG id;
    enum wil::FeatureEnabledState state;
};

typedef struct wil::VariantUsage {
    ULONG featureId;
    ULONG variantId;
    ULONG64 usageFileTime;
};

typedef struct wil::WNF_CHANGE_STAMP_STRUCT {
    ULONG value;
    ULONG operator unsigned long;
    VOID AssignToOptParam;
    VOID WNF_CHANGE_STAMP_STRUCT;
};

typedef struct wil::WindowDC {
    struct HDC__ *dc;
    struct HWND__ *hwnd;
    VOID WindowDC;
    struct HDC__ *operator struct HDC__ *;
    VOID Close;
};

typedef struct wil::cotaskmem_secure_deleter {
};

typedef struct wil::details::DestroyThreadPoolIo<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolIo<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolIo<2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<2> {
    VOID Destroy;
};

typedef struct wil::details::EnabledStateManager::CachedFeaturePropertyData {
    enum wil_FeatureChangeTime changeTime;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct wil::details::EnabledStateManager::CachedUsageData {
    ULONG id;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct wil::details::EnabledStateManager::RecordCachedUsageUnderLock::__l9::Change {
    enum wil_details_ServiceReportingKind kind;
    ULONG count;
};

typedef struct wil::details::FeatureTestState {
    ULONG featureId;
    enum wil::FeatureEnabledState state;
    struct wil::details::FeatureTestState *next;
    VOID Reset;
};

typedef struct wil::details::FeatureTraitsBase {
    enum wil::CustomReportingKind CustomReportingKind;
    enum wil::details::EmptyVariant Variant;
    enum wil::details::EmptyVariant defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    USHORT version;
    USHORT baseVersion;
    enum wil::FeatureStage stageOverride;
    enum wil::FeatureStage stageChkOverride;
    enum wil::FeatureChangeTime changeTime;
    enum wil::UsageReportingMode usageReportingMode;
    BOOLEAN ShouldBeEnabledForDependentFeature_DefaultDisabled;
    BOOLEAN ShouldBeEnabledForDependentFeature_DefaultEnabled;
    BOOLEAN AreDependenciesEnabled;
    PCHAR GetEMail;
    PCHAR GetLink;
};

typedef struct wil::details::FeatureUsageDurationData {
    ULONG featureId;
    BOOLEAN enabled;
    enum wil::ReportingKind kind;
    union _LARGE_INTEGER counterStart;
    VOID FeatureUsageDurationData;
    VOID Stop;
};

typedef struct wil::details::IFailureCallback {
Error: Could not get member name.
    BOOLEAN NotifyFailure;
    VOID IFailureCallback;
    VOID IFailureCallback;
    VOID IFailureCallback;
    struct wil::details::IFailureCallback *operator=;
    struct wil::details::IFailureCallback *operator=;
};

typedef struct wil::details::IFunctor {
Error: Could not get member name.
    HRESULT Run;
    VOID IFunctor;
    VOID IFunctor;
    VOID IFunctor;
    struct wil::details::IFunctor *operator=;
    struct wil::details::IFunctor *operator=;
};

typedef struct wil::details::IFunctorHost {
Error: Could not get member name.
    HRESULT Run;
    HRESULT ExceptionThrown;
    VOID IFunctorHost;
    VOID IFunctorHost;
    VOID IFunctorHost;
    struct wil::details::IFunctorHost *operator=;
    struct wil::details::IFunctorHost *operator=;
};

typedef struct wil::details::RtlThreadPoolMethods {
    VOID SetThreadpoolTimer;
    VOID WaitForThreadpoolTimerCallbacks;
    VOID CloseThreadpoolTimer;
};

typedef struct wil::details::SecureZeroData {
    PVOID pointer;
    ULONG64 sizeBytes;
    VOID SecureZeroData;
    PVOID operator void *;
    VOID Close;
};

typedef struct wil::details::SystemThreadPoolMethods {
    VOID SetThreadpoolTimer;
    VOID WaitForThreadpoolTimerCallbacks;
    VOID CloseThreadpoolTimer;
};

typedef struct wil::details::com_unknown_deleter {
};

typedef struct wil::details::empty_wnf_state {
};

typedef struct wil::details::event_watcher_state {
    VOID event_watcher_state;
    VOID event_watcher_state;
    wistd::function<void __cdecl(void)> m_callback;
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_event;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t> > > m_threadPoolWait;
    VOID ~event_watcher_state;
    struct wil::details::event_watcher_state *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> {
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer_storage;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> {
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer_storage;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> {
    struct wil::PaintDC pointer_storage;
    struct HDC__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::PaintDC invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::WindowDC),&wil::WindowDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::WindowDC,0,std::nullptr_t> {
    struct wil::WindowDC pointer_storage;
    struct HDC__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::WindowDC invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> {
    struct HSTRING_BUFFER__ *pointer_storage;
    struct HSTRING_BUFFER__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct HSTRING_BUFFER__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> {
    struct HSTRING__ *pointer_storage;
    struct HSTRING__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct HSTRING__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> {
    struct _RTL_CRITICAL_SECTION *pointer_storage;
    struct _RTL_CRITICAL_SECTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_CRITICAL_SECTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> {
    struct _RTL_CRITICAL_SECTION *pointer_storage;
    struct _RTL_CRITICAL_SECTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_CRITICAL_SECTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,0,std::nullptr_t> {
    struct _TP_TIMER *pointer_storage;
    struct _TP_TIMER *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _TP_TIMER *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t> {
    struct _TP_WAIT *pointer_storage;
    struct _TP_WAIT *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _TP_WAIT *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> {
    struct _WNF_USER_SUBSCRIPTION *pointer_storage;
    struct _WNF_USER_SUBSCRIPTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _WNF_USER_SUBSCRIPTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION *,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION *),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> {
    struct __WIL__WNF_USER_SUBSCRIPTION *pointer_storage;
    struct __WIL__WNF_USER_SUBSCRIPTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct __WIL__WNF_USER_SUBSCRIPTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> {
    PCHAR pointer_storage;
    PCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(wil::SelectResult),&wil::SelectResult::Close,wistd::integral_constant<unsigned __int64,0>,wil::SelectResult,0,std::nullptr_t> {
    struct wil::SelectResult pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::SelectResult invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData),&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,0,std::nullptr_t> {
    struct wil::details::SecureZeroData pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::details::SecureZeroData invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> {
    struct wil::details::event_watcher_state *pointer_storage;
    struct wil::details::event_watcher_state *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct wil::details::event_watcher_state *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t> {
    struct wil_FeatureTestState *pointer_storage;
    struct wil_FeatureTestState *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil_FeatureTestState *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil_StagingConfig *,void (__cdecl*)(wil_StagingConfig *),&wil_FreeStagingConfig,wistd::integral_constant<unsigned __int64,0>,wil_StagingConfig *,0,std::nullptr_t> {
    struct wil_StagingConfig *pointer_storage;
    struct wil_StagingConfig *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil_StagingConfig *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::return_type<0,long> {
    struct wil::details::tag_return_HRESULT type;
};

typedef struct wil::details::return_type<0,void> {
    struct wil::details::tag_return_void type;
};

typedef struct wil::details::return_type<1,void> {
    struct wil::details::tag_return_void type;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > > {
    VOID ~string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
    HRESULT make;
    PWCHAR buffer;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > release;
    PWCHAR get;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > value;
    struct HSTRING_BUFFER__ *m_bufferHandle;
    PWCHAR m_charBuffer;
    VOID string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
    PVOID __vecDelDtor;
};

typedef struct wil::details::tag_return_HRESULT {
    struct wistd::integral_constant<unsigned __int64,1> wistd::integral_constant<unsigned __int64,1>;
};

typedef struct wil::details::tag_return_other {
    struct wistd::integral_constant<unsigned __int64,2> wistd::integral_constant<unsigned __int64,2>;
};

typedef struct wil::details::tag_return_void {
    struct wistd::integral_constant<unsigned __int64,0> wistd::integral_constant<unsigned __int64,0>;
};

typedef struct wil::details::variable_size<1> {
    UCHAR type;
};

typedef struct wil::details::variable_size<2> {
    USHORT type;
};

typedef struct wil::details::variable_size<4> {
    ULONG type;
};

typedef struct wil::details::variable_size<8> {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<enum FEATURE_CHANGE_TIME> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum FEATURE_ENABLED_STATE> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::EventOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::StagingControlActions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::details::ReportFailureOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::details::StagingConfigurationFlags> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::details_abi::UsageIndexesLoadOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<int> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<unsigned __int64 const > {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<unsigned __int64> {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<unsigned int> {
    ULONG type;
};

typedef struct wil::details::verify_single_flag_helper<1073741824> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<128> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<1> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<2147483648> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<2> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<4> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<64> {
    ULONG64 value;
};

typedef struct wil::details::wnf_callback_type<wil::details::empty_wnf_state> {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wil::details::wnf_subscription_state_base {
Error: Could not get member name.
    VOID ~wnf_subscription_state_base;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> > > m_subscription;
    VOID wnf_subscription_state_base;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::ProcessLocalData {
    USHORT size;
    LONG failureSequenceId;
    wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData> threads;
    VOID ProcessShutdown;
    VOID ProcessLocalData;
    VOID ~ProcessLocalData;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::RawUsageIndex::Header {
    USHORT formatVersion;
    USHORT version;
    USHORT indexSize;
    USHORT valueSize;
    enum wil::details_abi::CountSize indexCountSize;
    enum wil::details_abi::CountSize valueCountSize;
};

typedef struct wil::details_abi::SerializedFailure {
    HRESULT hr;
    USHORT lineNumber;
    USHORT file;
    USHORT modulePath;
    USHORT callerModule;
    ULONG callerReturnAddressOffset;
    USHORT message;
    USHORT originLineNumber;
    USHORT originFile;
    USHORT originModule;
    ULONG originCallerReturnAddressOffset;
    USHORT originCallerModule;
    USHORT originName;
    USHORT process;
    BOOLEAN Serialize;
    BOOLEAN Deserialize;
};

typedef struct wil::details_abi::SubscriptionList::Subscription {
    PVOID callback;
    PVOID context;
};

typedef struct wil::details_abi::ThreadLocalData {
    USHORT size;
    ULONG threadId;
    PLONG failureSequenceId;
    ULONG latestSubscribedFailureSequenceId;
    struct wil::details_abi::ThreadLocalFailureInfo *errors;
    USHORT errorAllocCount;
    USHORT errorCurrentIndex;
    VOID ~ThreadLocalData;
    VOID Clear;
    BOOLEAN EnsureAllocated;
    VOID SetLastError;
    BOOLEAN GetLastError;
    BOOLEAN GetCaughtExceptionError;
    VOID ThreadLocalData;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::ThreadLocalFailureInfo {
    USHORT size;
    UCHAR reserved1[2];
    ULONG sequenceId;
    HRESULT hr;
    PCHAR fileName;
    USHORT lineNumber;
    UCHAR failureType;
    UCHAR reserved2;
    PCHAR modulePath;
    PVOID returnAddress;
    PVOID callerReturnAddress;
    PWCHAR message;
    PVOID stringBuffer;
    ULONG64 stringBufferSize;
    VOID Clear;
    VOID Set;
    VOID Get;
};

typedef struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node {
    wil::details::ThreadFailureCallbackHolder *value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node *pNext;
    VOID Node;
};

typedef struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node {
    struct wil::details_abi::ThreadLocalData value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node *pNext;
    VOID Node;
    VOID ~Node;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::UsageIndexProperty {
    USHORT c_size;
    enum wil::details_abi::CountSize c_countSize;
    ULONG count;
    USHORT size;
    PVOID countBuffer;
    PVOID value;
    VOID UsageIndexProperty;
    LONG Compare;
    VOID Attach;
    VOID UpdateCount;
    BOOLEAN AddToCount;
    ULONG64 GetAndValidateCount;
    ULONG64 GetSize;
    ULONG64 GetFixedSize;
    BOOLEAN Write;
    BOOLEAN Read;
};

typedef struct wil::details_abi::UsageIndexes {
    wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0> device;
    wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2> unique;
    wil::details_abi::UsageIndexBuffer<unsigned int,1> error;
    VOID UsageIndexes;
    VOID UsageIndexes;
    VOID Record;
    VOID Load;
    VOID ~UsageIndexes;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::buffer_range {
    PUCHAR buffer;
    PUCHAR bufferEnd;
    PUCHAR bufferAllocEnd;
    VOID buffer_range;
    VOID buffer_range;
    ULONG64 size;
    ULONG64 capacity;
    ULONG64 remaining_capacity;
    VOID clear;
    BOOLEAN empty;
};

typedef struct wil::details_abi::heap_buffer {
    struct wil::details_abi::buffer_range wil::details_abi::buffer_range;
    wistd::unique_ptr<void,wil::process_heap_deleter> allocation;
    VOID heap_buffer;
    VOID heap_buffer;
    VOID heap_buffer;
    BOOLEAN reserve;
    BOOLEAN ensure;
    VOID set_size;
    BOOLEAN push_back;
    VOID ~heap_buffer;
    struct wil::details_abi::heap_buffer *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::empty_deleter {
};

typedef struct wil::err_failfast_policy {
    VOID result;
    VOID Win32BOOL;
    VOID Win32Handle;
    VOID HResult;
    VOID LastError;
    VOID LastErrorIfFalse;
    VOID OK;
};

typedef struct wil::err_returncode_policy {
    HRESULT result;
    HRESULT Win32BOOL;
    HRESULT Win32Handle;
    HRESULT HResult;
    HRESULT LastError;
    HRESULT LastErrorIfFalse;
    HRESULT OK;
};

typedef struct wil::function_deleter<long (__cdecl*)(void *),&NCryptFreeBuffer> {
};

typedef struct wil::function_deleter<void (__cdecl*)(void *),&BCryptFreeBuffer> {
};

typedef struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> {
};

typedef struct wil::function_deleter<void * (__cdecl*)(void *),&GlobalFree> {
};

typedef struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> {
};

typedef struct wil::hlocal_secure_deleter {
};

typedef struct wil::process_heap_deleter {
};

typedef struct wil::unique_hglobal_locked {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> > > wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> > >;
    VOID unique_hglobal_locked;
    VOID unique_hglobal_locked;
    VOID unique_hglobal_locked;
    PVOID get;
    PVOID m_globalMemory;
    VOID ~unique_hglobal_locked;
    struct wil::unique_hglobal_locked *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::variadic_logical_or<> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wil::virtualalloc_deleter {
};

typedef struct wil_FeatureState {
    enum wil_FeatureEnabledState enabledState;
    UCHAR variant;
    enum wil_FeatureVariantPayloadKind payloadKind;
    ULONG payload;
    LONG hasNotification;
    LONG isVariantConfiguration;
};

typedef struct wil_FeatureTestState {
};

typedef struct wil_StagingConfig {
};

typedef struct wil_details_FeatureProperties {
    ULONG enabledState : 2;
    ULONG isVariant : 1;
    ULONG queuedForReporting : 1;
    ULONG hasNotificationState : 2;
    ULONG usageCount : 9;
    ULONG usageCountRepresentsPotential : 1;
    ULONG reportedDeviceUsage : 1;
    ULONG reportedDevicePotential : 1;
    ULONG reportedDeviceOpportunity : 1;
    ULONG reportedDevicePotentialOpportunity : 1;
    ULONG recordedDeviceUsage : 1;
    ULONG recordedDevicePotential : 1;
    ULONG recordedDeviceOpportunity : 1;
    ULONG recordedDevicePotentialOpportunity : 1;
    ULONG opportunityCount : 7;
    ULONG opportunityCountRepresentsPotential : 1;
};

typedef struct wil_details_FeatureTestState {
    enum wil_details_FeatureTestStateKind kind;
    ULONG featureId;
    enum wil_FeatureEnabledState state;
    UCHAR variant;
    ULONG payload;
    struct wil_details_FeatureTestState *next;
};

typedef struct wil_details_FeatureUsageSRUM {
    ULONG featureId;
    USHORT serviceReportingKind;
    ULONG usageCount;
};

typedef struct wil_details_FeatureVariantPropertyCache {
    union wil_details_FeaturePropertyCache propertyCache;
    ULONG payloadId;
    VOID wil_details_FeatureVariantPropertyCache;
    VOID wil_details_FeatureVariantPropertyCache;
    struct wil_details_FeatureVariantPropertyCache *operator=;
    struct wil_details_FeatureVariantPropertyCache *operator=;
};

typedef struct wil_details_RecordUsageResult {
    LONG queueBackground;
    ULONG countImmediate;
    enum wil_details_ServiceReportingKind kindImmediate;
    ULONG payloadId;
    LONG ignoredUse;
    LONG isVariantConfiguration;
};

typedef struct wil_details_SetPropertyCacheUsageContext {
    struct wil_details_RecordUsageResult *result;
    enum wil_details_ServiceReportingKind kind;
    ULONG64 addend;
};

typedef struct wil_details_SetPropertyFlagContext {
    struct wil_details_RecordUsageResult *result;
    ULONG flags;
    LONG ignoreReporting;
};

typedef struct wil_details_StagingConfig {
    enum wil_FeatureStore store;
    LONG forUpdate;
    ULONG readChangeStamp;
    UCHAR readVersion;
    LONG modified;
    struct wil_details_StagingConfigHeader *header;
    struct wil_details_StagingConfigFeature *features;
    struct wil_details_StagingConfigUsageTrigger *triggers;
    LONG changedInSession;
    PVOID buffer;
    ULONG64 bufferSize;
    ULONG64 bufferAlloc;
    LONG bufferOwned;
};

typedef struct wil_details_StagingConfigFeature {
    ULONG featureId;
    ULONG changedInSession : 1;
    ULONG isVariantConfig : 1;
    ULONG unused1 : 6;
    ULONG serviceState : 2;
    ULONG userState : 2;
    ULONG testState : 2;
    ULONG unused2 : 2;
    ULONG unused3 : 8;
    ULONG variant : 6;
    ULONG payloadKind : 2;
    ULONG payload;
};

typedef struct wil_details_StagingConfigHeader {
    UCHAR version;
    UCHAR versionMinor;
    USHORT headerSizeBytes;
    USHORT featureCount;
    USHORT featureUsageTriggerCount;
    struct wil_details_StagingConfigHeaderProperties sessionProperties;
    struct wil_details_StagingConfigHeaderProperties properties;
};

typedef struct wil_details_StagingConfigHeaderProperties {
    ULONG ignoreServiceState : 1;
    ULONG ignoreUserState : 1;
    ULONG ignoreTestState : 1;
    ULONG ignoreVariants : 1;
    ULONG unused : 28;
};

typedef struct wil_details_StagingConfigUsageTrigger {
    ULONG featureId;
    struct wil_details_StagingConfigWnfStateName trigger;
    ULONG serviceReportingKind : 16;
    ULONG isVariantConfig : 1;
    ULONG unused : 15;
};

typedef struct wil_details_StagingConfigWnfStateName {
    ULONG Data[2];
};

typedef struct wil_details_VariantProperties {
    ULONG enabledState : 2;
    ULONG isVariant : 1;
    ULONG queuedForReporting : 1;
    ULONG hasNotificationState : 2;
    ULONG recordedDeviceUsage : 1;
    ULONG variant : 6;
    ULONG unused : 19;
};

typedef struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> _MyTy;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_MyCnstTy;
    VOID _Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    VOID _Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_Get;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_Get;
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> *operator=;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> _Object;
};

typedef struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> _MyTy;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_MyCnstTy;
    VOID _Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    VOID _Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_Get;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_Get;
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> *operator=;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> _Object;
};

typedef struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> {
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> _Mybase;
    VOID _Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    VOID _Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
};

typedef struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> {
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> _Mybase;
    VOID _Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    VOID _Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
};

typedef struct wistd::_Cat_base<0> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Cat_base<1> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Conjunction<> {
    struct wistd::integral_constant<bool,1> type;
};

typedef struct wistd::_Disjunction<> {
    struct wistd::integral_constant<bool,0> type;
};

typedef struct wistd::_Fun_class_base<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    PVOID _Arg0;
};

typedef struct wistd::_Fun_class_base<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    struct wistd::unary_function<wistd::_Nil,void> wistd::unary_function<wistd::_Nil,void>;
    struct wistd::_Nil _Arg0;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned short,wil::cotaskmem_secure_deleter> {
    struct wistd::_Identity<unsigned short *> _Decltype;
    PWCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned short,wil::hlocal_secure_deleter> {
    struct wistd::_Identity<unsigned short *> _Decltype;
    PWCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<void,wil::process_heap_deleter> {
    struct wistd::_Identity<void *> _Decltype;
    PVOID type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Identity<wil::details::event_watcher_state *> _Decltype;
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter> {
    struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *> _Decltype;
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter> {
    struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *> _Decltype;
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::_Get_function_impl<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)> {
    wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> type;
};

typedef struct wistd::_Get_function_impl<void __cdecl(void)> {
    wistd::_Func_class<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> type;
};

typedef struct wistd::_Identity<unsigned short *> {
    PWCHAR type;
};

typedef struct wistd::_Identity<void *> {
    PVOID type;
};

typedef struct wistd::_Identity<wil::details::event_watcher_state *> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *> {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *type;
};

typedef struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *> {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::_If<0,<lambda_1be4317d7b68aea1d134397100149062> *,<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::_If<0,<lambda_2f784ef15c303f2c8d3bec493a729414> *,<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::_If<0,char &,wil::details::event_watcher_state &> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_If<0,wil::cotaskmem_secure_deleter,wil::cotaskmem_secure_deleter const &> {
    struct wil::cotaskmem_secure_deleter *type;
};

typedef struct wistd::_If<0,wil::hlocal_secure_deleter,wil::hlocal_secure_deleter const &> {
    struct wil::hlocal_secure_deleter *type;
};

typedef struct wistd::_If<0,wil::process_heap_deleter,wil::process_heap_deleter const &> {
    struct wil::process_heap_deleter *type;
};

typedef struct wistd::_If<0,wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> const &> {
    struct wistd::default_delete<wil::details::event_watcher_state> *type;
};

typedef struct wistd::_Is_floating_point<double> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_floating_point<float> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_floating_point<long double> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_funptr<<lambda_1be4317d7b68aea1d134397100149062> *> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_funptr<<lambda_2f784ef15c303f2c8d3bec493a729414> *> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_integral<__int64> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<bool> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char16_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char32_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<short> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<signed char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned __int64> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned short> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_void<void> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_void<wil::details::event_watcher_state> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Nil {
};

typedef struct wistd::_Wrap_int {
    VOID _Wrap_int;
};

typedef struct wistd::add_pointer<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *type;
};

typedef struct wistd::add_pointer<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *type;
};

typedef struct wistd::add_reference<unsigned short> {
    PWCHAR type;
};

typedef struct wistd::add_reference<void const > {
    VOID type;
};

typedef struct wistd::add_reference<void const volatile > {
    VOID type;
};

typedef struct wistd::add_reference<void volatile > {
    VOID type;
};

typedef struct wistd::add_reference<void> {
    VOID type;
};

typedef struct wistd::add_reference<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> > {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *type;
};

typedef struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> > {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::add_rvalue_reference<void const > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void const volatile > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void volatile > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void> {
    VOID type;
};

typedef struct wistd::decay<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> _Ty1;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::decay<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> _Ty1;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::default_delete<wil::details::event_watcher_state> {
    struct wistd::default_delete<wil::details::event_watcher_state> _Myt;
    VOID default_delete<wil::details::event_watcher_state>;
    VOID operator();
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::enable_if<0,void *> {
};

typedef struct wistd::enable_if<1,void *> {
    PVOID type;
};

typedef struct wistd::enable_if<1,wistd::unique_ptr<void,wil::process_heap_deleter> &> {
    wistd::unique_ptr<void,wil::process_heap_deleter> *type;
};

typedef struct wistd::integral_constant<bool,0> {
    BOOLEAN value;
    BOOLEAN value_type;
    struct wistd::integral_constant<bool,0> type;
    BOOLEAN operator bool;
};

typedef struct wistd::integral_constant<bool,1> {
    BOOLEAN value;
    BOOLEAN value_type;
    struct wistd::integral_constant<bool,1> type;
    BOOLEAN operator bool;
};

typedef struct wistd::integral_constant<unsigned __int64,0> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,0> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::integral_constant<unsigned __int64,1> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,1> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::integral_constant<unsigned __int64,2> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,2> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::is_array<<lambda_1be4317d7b68aea1d134397100149062> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_array<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_array<void> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_class<bool> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<int> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<unsigned char> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<unsigned short *> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<void *> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_convertible<void *,void *> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::cotaskmem_secure_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::hlocal_secure_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::process_heap_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_function<<lambda_1be4317d7b68aea1d134397100149062> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_function<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_lvalue_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_pointer<wil::cotaskmem_secure_deleter> {
    struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter> wistd::_Is_pointer<wil::cotaskmem_secure_deleter>;
};

typedef struct wistd::is_pointer<wil::hlocal_secure_deleter> {
    struct wistd::_Is_pointer<wil::hlocal_secure_deleter> wistd::_Is_pointer<wil::hlocal_secure_deleter>;
};

typedef struct wistd::is_pointer<wil::process_heap_deleter> {
    struct wistd::_Is_pointer<wil::process_heap_deleter> wistd::_Is_pointer<wil::process_heap_deleter>;
};

typedef struct wistd::is_pointer<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> > wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
};

typedef struct wistd::is_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wil::hlocal_secure_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wil::process_heap_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_rvalue_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<int,int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<long,long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<std::nullptr_t,std::nullptr_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<void,void> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<void>,wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> >,wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >,wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_void<wil::details::event_watcher_state> {
    struct wistd::_Is_void<wil::details::event_watcher_state> wistd::_Is_void<wil::details::event_watcher_state>;
};

typedef struct wistd::less<void> {
    LONG is_transparent;
};

typedef struct wistd::pointer_traits<wil::details::event_watcher_state *> {
    struct wistd::pointer_traits<wil::details::event_watcher_state *> other;
    struct wil::details::event_watcher_state element_type;
    struct wil::details::event_watcher_state *pointer;
    LONG64 difference_type;
    struct wil::details::event_watcher_state *_Reftype;
    struct wil::details::event_watcher_state *pointer_to;
};

typedef struct wistd::remove_const<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_const<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_const<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_const<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_const<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_const<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_const<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_cv<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_cv<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_cv<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_cv<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_cv<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_cv<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_cv<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_extent<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_extent<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_reference<<lambda_1be4317d7b68aea1d134397100149062> &> {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_reference<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_reference<<lambda_2f784ef15c303f2c8d3bec493a729414> &> {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_reference<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_reference<HSTRING__ * &> {
    struct HSTRING__ *type;
};

typedef struct wistd::remove_reference<_RTL_CRITICAL_SECTION * &> {
    struct _RTL_CRITICAL_SECTION *type;
};

typedef struct wistd::remove_reference<_RTL_CRITICAL_SECTION *> {
    struct _RTL_CRITICAL_SECTION *type;
};

typedef struct wistd::remove_reference<_RTL_SRWLOCK * &> {
    struct _RTL_SRWLOCK *type;
};

typedef struct wistd::remove_reference<_RTL_SRWLOCK *> {
    struct _RTL_SRWLOCK *type;
};

typedef struct wistd::remove_reference<bool &> {
    BOOLEAN type;
};

typedef struct wistd::remove_reference<char * &> {
    PCHAR type;
};

typedef struct wistd::remove_reference<char const (&)[12]> {
    CHAR type[12];
};

typedef struct wistd::remove_reference<unsigned __int64> {
    ULONG64 type;
};

typedef struct wistd::remove_reference<unsigned int> {
    ULONG type;
};

typedef struct wistd::remove_reference<unsigned short * &> {
    PWCHAR type;
};

typedef struct wistd::remove_reference<unsigned short *> {
    PWCHAR type;
};

typedef struct wistd::remove_reference<void * &> {
    PVOID type;
};

typedef struct wistd::remove_reference<void *> {
    PVOID type;
};

typedef struct wistd::remove_reference<wil::PaintDC &> {
    struct wil::PaintDC type;
};

typedef struct wistd::remove_reference<wil::SelectResult> {
    struct wil::SelectResult type;
};

typedef struct wistd::remove_reference<wil::StoredFailureInfo &> {
    wil::StoredFailureInfo type;
};

typedef struct wistd::remove_reference<wil::WindowDC> {
    struct wil::WindowDC type;
};

typedef struct wistd::remove_reference<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_reference<wil::details::SecureZeroData> {
    struct wil::details::SecureZeroData type;
};

typedef struct wistd::remove_reference<wil::details::event_watcher_state * &> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::remove_reference<wil::details_abi::SemaphoreValue &> {
    wil::details_abi::SemaphoreValue type;
};

typedef struct wistd::remove_reference<wil::details_abi::heap_buffer &> {
    struct wil::details_abi::heap_buffer type;
};

typedef struct wistd::remove_reference<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_reference<wil::last_error_context &> {
    wil::last_error_context type;
};

typedef struct wistd::remove_reference<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil_FeatureTestState * &> {
    struct wil_FeatureTestState *type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> &> {
    struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> > {
    struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> &> {
    struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> > {
    struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_reference<wistd::function<void __cdecl(void)> &> {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wistd::remove_reference<wistd::function<void __cdecl(void)> > {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wistd::remove_reference<wistd::unique_ptr<void,wil::process_heap_deleter> &> {
    wistd::unique_ptr<void,wil::process_heap_deleter> type;
};

typedef struct wistd::remove_volatile<<lambda_1be4317d7b68aea1d134397100149062> > {
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> type;
};

typedef struct wistd::remove_volatile<<lambda_2f784ef15c303f2c8d3bec493a729414> > {
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> type;
};

typedef struct wistd::remove_volatile<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_volatile<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_volatile<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_volatile<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::unary_function<wistd::_Nil,void> {
    struct wistd::_Nil argument_type;
    VOID result_type;
};

typedef union FT {
    ULONG64 ft_scalar;
    struct _FILETIME ft_struct;
};

typedef union FormatInfo {
    BOOLEAN _fIsSeparator;
    enum MSONFC _numberingType;
    LONG _cMinLen;
    PWCHAR _wszSeparator;
    ULONG _ulLen;
};

typedef union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer {
    ULONG64 refCount;
    LONG64 rawValue;
    PVOID ifHighBitIsSetThenShiftLeftToYieldPointerToWeakReference;
};

typedef union NumberingFormat::FormatInfo {
    BOOLEAN _fIsSeparator;
    enum MSONFC _numberingType;
    LONG _cMinLen;
    PWCHAR _wszSeparator;
    ULONG _ulLen;
};

typedef union TypeStorage {
    BOOLEAN boolData;
    FLOAT floatData;
    DOUBLE doubleData;
    PUCHAR binaryData;
    LONG64 timeDurationData;
    APN *apnData;
};

typedef union USN_RECORD_UNION {
    struct USN_RECORD_COMMON_HEADER Header;
    struct USN_RECORD_V2 V2;
    struct USN_RECORD_V3 V3;
    struct USN_RECORD_V4 V4;
};

typedef union WPP_PROJECT_CONTROL_BLOCK {
    struct _WPP_TRACE_CONTROL_BLOCK Control;
    UCHAR ReserveSpace[40];
};

typedef union XWinRT::FakeStl::_align_type<double,8> {
    DOUBLE _val;
    CHAR _pad[8];
};

typedef union XWinRT::FakeStl::_align_type<int,4> {
    LONG _val;
    CHAR _pad[4];
};

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA {
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
};

typedef union _CLIENT_CALL_RETURN {
    PVOID Pointer;
    LONG64 Simple;
};

typedef union _DL_EUI48 {
};

typedef union _ENERGY_STATE_DURATION {
    ULONG64 Value;
    ULONG LastChangeTime;
    ULONG Duration : 31;
    ULONG IsInState : 1;
};

typedef union _FILE_SEGMENT_ELEMENT {
    PVOID Buffer;
    ULONG64 Alignment;
};

typedef union _FOUR_PART_VERSION {
    ULONG64 Version64;
     <unnamed-type-Version32>;
    struct {
        ULONG BuildAndRevision;
        ULONG MajorAndMinor;
    } Version32;
     <unnamed-type-Version16>;
    struct {
        USHORT Revision;
        USHORT Build;
        USHORT Minor;
        USHORT Major;
    } Version16;
};

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 {
    LONG hInproc;
    struct _DWORD_BLOB *hRemote;
};

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002 {
    struct _userHBITMAP *hBitmap;
    struct _userHPALETTE *hPalette;
    struct _userHGLOBAL *hGeneric;
};

typedef union _IMAGE_AUX_SYMBOL {
     <unnamed-type-Sym>;
    struct {
        ULONG TagIndex;
         <unnamed-type-Misc>;
        union {
             <unnamed-type-LnSz>;
            struct {
                USHORT Linenumber;
                USHORT Size;
            } LnSz;
            ULONG TotalSize;
        } Misc;
         <unnamed-type-FcnAry>;
        union {
             <unnamed-type-Function>;
            struct {
                ULONG PointerToLinenumber;
                ULONG PointerToNextFunction;
            } Function;
             <unnamed-type-Array>;
            struct {
                USHORT Dimension[4];
            } Array;
        } FcnAry;
        USHORT TvIndex;
    } Sym;
     <unnamed-type-File>;
    struct {
        UCHAR Name[18];
    } File;
     <unnamed-type-Section>;
    struct {
        ULONG Length;
        USHORT NumberOfRelocations;
        USHORT NumberOfLinenumbers;
        ULONG CheckSum;
        SHORT Number;
        UCHAR Selection;
        UCHAR bReserved;
        SHORT HighNumber;
    } Section;
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
     <unnamed-type-CRC>;
    struct {
        ULONG crc;
        UCHAR rgbReserved[14];
    } CRC;
};

typedef union _IMAGE_AUX_SYMBOL_EX {
     <unnamed-type-Sym>;
    struct {
        ULONG WeakDefaultSymIndex;
        ULONG WeakSearchType;
        UCHAR rgbReserved[12];
    } Sym;
     <unnamed-type-File>;
    struct {
        UCHAR Name[20];
    } File;
     <unnamed-type-Section>;
    struct {
        ULONG Length;
        USHORT NumberOfRelocations;
        USHORT NumberOfLinenumbers;
        ULONG CheckSum;
        SHORT Number;
        UCHAR Selection;
        UCHAR bReserved;
        SHORT HighNumber;
        UCHAR rgbReserved[2];
    } Section;
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    UCHAR rgbReserved[2];
     <unnamed-type-CRC>;
    struct {
        ULONG crc;
        UCHAR rgbReserved[16];
    } CRC;
};

typedef union _JOBOBJECT_ENERGY_TRACKING_STATE {
    ULONG64 Value;
    ULONG UpdateMask;
    ULONG DesiredState;
};

typedef union _LARGE_INTEGER {
    ULONG LowPart;
    LONG HighPart;
     <unnamed-type-u>;
    struct {
        ULONG LowPart;
        LONG HighPart;
    } u;
    LONG64 QuadPart;
};

typedef union _LDR_DLL_NOTIFICATION_DATA {
    struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
};

typedef union _MCI_ADDR {
    ULONG Address;
    ULONG Reserved;
    ULONG64 QuadPart;
};

typedef union _MCI_STATS {
     <unnamed-type-MciStatus>;
    struct {
        USHORT McaErrorCode;
        USHORT ModelErrorCode;
        ULONG OtherInformation : 25;
        ULONG ContextCorrupt : 1;
        ULONG AddressValid : 1;
        ULONG MiscValid : 1;
        ULONG ErrorEnabled : 1;
        ULONG UncorrectedError : 1;
        ULONG StatusOverFlow : 1;
        ULONG Valid : 1;
    } MciStatus;
    ULONG64 QuadPart;
};

typedef union _MM_ETW_PAGE_EXTRA_INFO {
     <unnamed-type-e1>;
    struct {
        ULONG64 SharedInitial : 1;
    } e1;
     <unnamed-type-e2>;
    struct {
        ULONG64 WorkingSetType : 2;
        ULONG64 NotAddedtoWS : 1;
        ULONG64 COWFault : 1;
    } e2;
    ULONG64 ProtoPte;
    PVOID VirtualAddress;
};

typedef union _POWER_STATE {
    enum _SYSTEM_POWER_STATE SystemState;
    enum _DEVICE_POWER_STATE DeviceState;
};

typedef union _PROCESS_AFFINITY_UPDATE_MODE {
    ULONG Flags;
    ULONG EnableAutoUpdate : 1;
    ULONG Permanent : 1;
    ULONG Reserved : 30;
};

typedef union _PROCESS_LOGGING_INFORMATION {
    ULONG Flags;
    ULONG EnableReadVmLogging : 1;
    ULONG EnableWriteVmLogging : 1;
    ULONG EnableProcessSuspendResumeLogging : 1;
    ULONG EnableThreadSuspendResumeLogging : 1;
    ULONG Reserved : 28;
};

typedef union _PROCESS_MEMORY_ALLOCATION_MODE {
    ULONG Flags;
    ULONG TopDown : 1;
    ULONG Reserved : 31;
};

typedef union _PROCESS_READWRITEVM_LOGGING_INFORMATION {
    UCHAR Flags;
    UCHAR EnableReadVmLogging : 1;
    UCHAR EnableWriteVmLogging : 1;
    UCHAR Unused : 6;
};

typedef union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT {
    ULONG Flags;
    ULONG Foreground : 1;
    ULONG Reserved : 31;
};

typedef union _RATE_QUOTA_LIMIT {
    ULONG RateData;
    ULONG RatePercent : 7;
    ULONG Reserved0 : 25;
};

typedef union _RPC_ASYNC_NOTIFICATION_INFO {
     <unnamed-type-APC>;
    struct {
        PVOID NotificationRoutine;
        PVOID hThread;
    } APC;
     <unnamed-type-IOC>;
    struct {
        PVOID hIOPort;
        ULONG dwNumberOfBytesTransferred;
        ULONG64 dwCompletionKey;
        struct _OVERLAPPED *lpOverlapped;
    } IOC;
     <unnamed-type-HWND>;
    struct {
        struct HWND__ *hWnd;
        ULONG Msg;
    } HWND;
    PVOID hEvent;
    PVOID NotificationRoutine;
};

typedef union _RTL_ELEVATION_FLAGS {
    ULONG Flags;
    ULONG ElevationEnabled : 1;
    ULONG VirtualizationEnabled : 1;
    ULONG InstallerDetectEnabled : 1;
    ULONG ReservedBits : 29;
};

typedef union _RTL_IMAGE_MITIGATION_POLICY {
    ULONG64 AuditState : 2;
    ULONG64 AuditFlag : 1;
    ULONG64 EnableAdditionalAuditingOption : 1;
    ULONG64 Reserved : 60;
    ULONG64 PolicyState : 2;
    ULONG64 AlwaysInherit : 1;
    ULONG64 EnableAdditionalPolicyOption : 1;
    ULONG64 AuditReserved : 60;
};

typedef union _RTL_RUN_ONCE {
    PVOID Ptr;
    ULONG64 Value;
    ULONG64 State : 2;
};

typedef union _RTL_TICK_LOCK {
    ULONG64 AsULong64;
    ULONG64 Busy : 1;
    ULONG64 Ticks : 63;
};

typedef union _RemotableHandle::__MIDL_IWinTypes_0009 {
    LONG hInproc;
    LONG hRemote;
};

typedef union _SE_SID {
    struct _SID Sid;
    UCHAR Buffer[68];
};

typedef union _SLIST_HEADER {
    ULONG64 Alignment;
    ULONG64 Region;
    struct {
        ULONG64 Depth : 16;
        ULONG64 Sequence : 48;
        ULONG64 Reserved : 4;
        ULONG64 NextEntry : 60;
    } HeaderX64;
};

typedef union _STREAM_INFORMATION_ENTRY::_StreamInformation {
     _DesiredStorageClass;
    struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass DesiredStorageClass;
};

typedef union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES {
    ULONG HypervisorPages : 1;
    ULONG Reserved : 31;
    ULONG AsUlong;
};

typedef union _SYSDBG_LIVEDUMP_CONTROL_FLAGS {
    ULONG UseDumpStorageStack : 1;
    ULONG CompressMemoryPagesData : 1;
    ULONG IncludeUserSpaceMemoryPages : 1;
    ULONG AbortIfMemoryPressure : 1;
    ULONG Reserved : 28;
    ULONG AsUlong;
};

typedef union _StreamInformation {
     _DesiredStorageClass;
    struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass DesiredStorageClass;
};

typedef union _TIMELINE_BITMAP {
    ULONG64 Value;
    ULONG EndTime;
    ULONG Bitmap;
};

typedef union _ULARGE_INTEGER {
    ULONG LowPart;
    ULONG HighPart;
    struct {
        ULONG LowPart;
        ULONG HighPart;
    } u;
    ULONG64 QuadPart;
};

typedef union _UNWIND_CODE {
    UCHAR CodeOffset;
    UCHAR UnwindOp : 4;
    UCHAR OpInfo : 4;
     <unnamed-type-EpilogueCode>;
    struct {
        UCHAR OffsetLow;
        UCHAR UnwindOp : 4;
        UCHAR OffsetHigh : 4;
    } EpilogueCode;
    USHORT FrameOffset;
};

typedef union __MIDL_IAdviseSink_0002 {
    struct _userHBITMAP *hBitmap;
    struct _userHPALETTE *hPalette;
    struct _userHGLOBAL *hGeneric;
};

typedef union __MIDL_IAdviseSink_0003 {
    struct _userHMETAFILEPICT *hMetaFilePict;
    struct _userHENHMETAFILE *hHEnhMetaFile;
    struct _GDI_OBJECT *hGdiHandle;
    struct _userHGLOBAL *hGlobal;
    PWCHAR lpszFileName;
    struct _BYTE_BLOB *pstm;
    struct _BYTE_BLOB *pstg;
};

typedef union __MIDL_IOleAutomationTypes_0001 {
    struct _wireSAFEARR_BSTR BstrStr;
    struct _wireSAFEARR_UNKNOWN UnknownStr;
    struct _wireSAFEARR_DISPATCH DispatchStr;
    struct _wireSAFEARR_VARIANT VariantStr;
    struct _wireSAFEARR_BRECORD RecordStr;
    struct _wireSAFEARR_HAVEIID HaveIidStr;
    struct _BYTE_SIZEDARR ByteStr;
    struct _SHORT_SIZEDARR WordStr;
    struct _LONG_SIZEDARR LongStr;
    struct _HYPER_SIZEDARR HyperStr;
};

typedef union __MIDL_IWinTypes_0001 {
    ULONG dwValue;
    PWCHAR pwszName;
};

typedef union __MIDL_IWinTypes_0002 {
    LONG hInproc;
    struct _DWORD_BLOB *hRemote;
};

typedef union __MIDL_IWinTypes_0003 {
    LONG hInproc;
    struct _FLAGGED_BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0004 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0005 {
    LONG hInproc;
    struct _remoteMETAFILEPICT *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0006 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0007 {
    LONG hInproc;
    struct _userBITMAP *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0008 {
    LONG hInproc;
    struct tagLOGPALETTE *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0009 {
    LONG hInproc;
    LONG hRemote;
};

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    struct _GUID clsid;
    PWCHAR pFileExt;
    PWCHAR pMimeType;
    PWCHAR pProgId;
    PWCHAR pFileName;
     <unnamed-type-ByName>;
    struct {
        PWCHAR pPackageName;
        struct _GUID PolicyId;
    } ByName;
     <unnamed-type-ByObjectId>;
    struct {
        struct _GUID ObjectId;
        struct _GUID PolicyId;
    } ByObjectId;
};

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    struct _GUID clsid;
    PWCHAR pFileExt;
    PWCHAR pMimeType;
    PWCHAR pProgId;
    PWCHAR pFileName;
     <unnamed-type-ByName>;
    struct {
        PWCHAR pPackageName;
        struct _GUID PolicyId;
    } ByName;
     <unnamed-type-ByObjectId>;
    struct {
        struct _GUID ObjectId;
        struct _GUID PolicyId;
    } ByObjectId;
};

typedef union __m128 {
    FLOAT m128_f32[4];
    ULONG64 m128_u64[2];
    CHAR m128_i8[16];
    SHORT m128_i16[8];
    LONG m128_i32[4];
    LONG64 m128_i64[2];
    UCHAR m128_u8[16];
    USHORT m128_u16[8];
    ULONG m128_u32[4];
};

typedef union __m128i {
    CHAR m128i_i8[16];
    SHORT m128i_i16[8];
    LONG m128i_i32[4];
    LONG64 m128i_i64[2];
    UCHAR m128i_u8[16];
    USHORT m128i_u16[8];
    ULONG m128i_u32[4];
    ULONG64 m128i_u64[2];
};

typedef union __m256 {
    FLOAT m256_f32[8];
};

typedef union __m256i {
    CHAR m256i_i8[32];
    SHORT m256i_i16[16];
    LONG m256i_i32[8];
    LONG64 m256i_i64[4];
    UCHAR m256i_u8[32];
    USHORT m256i_u16[16];
    ULONG m256i_u32[8];
    ULONG64 m256i_u64[4];
};

typedef union __m64 {
    ULONG64 m64_u64;
    FLOAT m64_f32[2];
    CHAR m64_i8[8];
    SHORT m64_i16[4];
    LONG m64_i32[2];
    LONG64 m64_i64;
    UCHAR m64_u8[8];
    USHORT m64_u16[4];
    ULONG m64_u32[2];
};

typedef union _tagFastWppEnabledFlags {
    ULONG ulFlags;
    UCHAR rgbFlags[4];
};

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001 {
    ULONG dwValue;
    PWCHAR pwszName;
};

typedef union _userHBITMAP::__MIDL_IWinTypes_0007 {
    LONG hInproc;
    struct _userBITMAP *hRemote;
    LONG64 hInproc64;
};

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003 {
    LONG hInproc;
    struct _FLAGGED_BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 {
    LONG hInproc;
    struct _remoteMETAFILEPICT *hRemote;
    LONG64 hInproc64;
};

typedef union _userHPALETTE::__MIDL_IWinTypes_0008 {
    LONG hInproc;
    struct tagLOGPALETTE *hRemote;
    LONG64 hInproc64;
};

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 {
    struct _userHMETAFILEPICT *hMetaFilePict;
    struct _userHENHMETAFILE *hHEnhMetaFile;
    struct _GDI_OBJECT *hGdiHandle;
    struct _userHGLOBAL *hGlobal;
    PWCHAR lpszFileName;
    struct _BYTE_BLOB *pstm;
    struct _BYTE_BLOB *pstg;
};

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 {
    struct _wireSAFEARR_BSTR BstrStr;
    struct _wireSAFEARR_UNKNOWN UnknownStr;
    struct _wireSAFEARR_DISPATCH DispatchStr;
    struct _wireSAFEARR_VARIANT VariantStr;
    struct _wireSAFEARR_BRECORD RecordStr;
    struct _wireSAFEARR_HAVEIID HaveIidStr;
    struct _BYTE_SIZEDARR ByteStr;
    struct _SHORT_SIZEDARR WordStr;
    struct _LONG_SIZEDARR LongStr;
    struct _HYPER_SIZEDARR HyperStr;
};

typedef union tagBINDPTR {
    struct tagFUNCDESC *lpfuncdesc;
    struct tagVARDESC *lpvardesc;
    struct ITypeComp *lptcomp;
};

typedef union tagCY {
    ULONG Lo;
    LONG Hi;
    LONG64 int64;
};

typedef union wil_details_FeaturePropertyCache {
    struct wil_details_FeatureProperties cache;
    struct wil_details_VariantProperties variant;
    LONG var;
    VOID wil_details_FeaturePropertyCache;
    VOID wil_details_FeaturePropertyCache;
    union wil_details_FeaturePropertyCache *operator=;
    union wil_details_FeaturePropertyCache *operator=;
};

typedef enum ABI::Windows::Foundation::AsyncStatus {
    Started = 0,
    Completed = 1,
    Canceled = 2,
    Error = 3
};

typedef enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags {
    None = 0,
    SuppressExceptions = 1,
    ForceExceptions = 2,
    UseSetErrorInfo = 4,
    SuppressSetErrorInfo = 8
};

typedef enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE {
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
};

typedef enum ACTCTX_REQUESTED_RUN_LEVEL {
    ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
    ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
    ACTCTX_RUN_LEVEL_NUMBERS = 4
};

typedef enum ASSOCDATA {
    ASSOCDATA_MSIDESCRIPTOR = 1,
    ASSOCDATA_NOACTIVATEHANDLER = 2,
    ASSOCDATA_UNUSED1 = 3,
    ASSOCDATA_HASPERUSERASSOC = 4,
    ASSOCDATA_EDITFLAGS = 5,
    ASSOCDATA_VALUE = 6,
    ASSOCDATA_MAX = 7
};

typedef enum ASSOCENUM {
    ASSOCENUM_NONE = 0
};

typedef enum ASSOCKEY {
    ASSOCKEY_SHELLEXECCLASS = 1,
    ASSOCKEY_APP = 2,
    ASSOCKEY_CLASS = 3,
    ASSOCKEY_BASECLASS = 4,
    ASSOCKEY_MAX = 5
};

typedef enum ASSOCSTR {
    ASSOCSTR_COMMAND = 1,
    ASSOCSTR_EXECUTABLE = 2,
    ASSOCSTR_FRIENDLYDOCNAME = 3,
    ASSOCSTR_FRIENDLYAPPNAME = 4,
    ASSOCSTR_NOOPEN = 5,
    ASSOCSTR_SHELLNEWVALUE = 6,
    ASSOCSTR_DDECOMMAND = 7,
    ASSOCSTR_DDEIFEXEC = 8,
    ASSOCSTR_DDEAPPLICATION = 9,
    ASSOCSTR_DDETOPIC = 10,
    ASSOCSTR_INFOTIP = 11,
    ASSOCSTR_QUICKTIP = 12,
    ASSOCSTR_TILEINFO = 13,
    ASSOCSTR_CONTENTTYPE = 14,
    ASSOCSTR_DEFAULTICON = 15,
    ASSOCSTR_SHELLEXTENSION = 16,
    ASSOCSTR_DROPTARGET = 17,
    ASSOCSTR_DELEGATEEXECUTE = 18,
    ASSOCSTR_SUPPORTED_URI_PROTOCOLS = 19,
    ASSOCSTR_PROGID = 20,
    ASSOCSTR_APPID = 21,
    ASSOCSTR_APPPUBLISHER = 22,
    ASSOCSTR_APPICONREFERENCE = 23,
    ASSOCSTR_MAX = 24
};

typedef enum ASTContext::ErrorType {
    XPSyntaxError = 0,
    FunctionError = 1,
    OtherError = 2
};

typedef enum Absent {
    Absent_none = 0,
    Absent_local = 1,
    Absent_targetNamespace = 2
};

typedef enum AgileReferenceOptions {
    AGILEREFERENCE_DEFAULT = 0,
    AGILEREFERENCE_DELAYEDMARSHAL = 1
};

typedef enum AppendState {
    CacheString = 0,
    NewBuffer = 1,
    AppendBuffer = 2
};

typedef enum ApplyOptimizer::VisitedMark {
    WAS_NOT_VISITED = 0,
    WAS_VISITED = 1,
    DO_NOT_VISIT = 2
};

typedef enum ApplyType {
    APPLY_TEMPL = 0,
    APPLY_IMPORT = 1,
    CALL_TEMPL = 2
};

typedef enum ArgType {
    tAny = 0,
    tBoolean = 1,
    tNumber = 3,
    tString = 4,
    tQName = 5,
    tQNameDef = 6,
    tNCName = 7,
    tNodeSet = 8,
    tOptional = 16,
    tZeroOrMore = 32,
    tOptionalAny = 16,
    tOptionalBoolean = 17,
    tOptionalNumber = 19,
    tOptionalString = 20,
    tOptionalQName = 21,
    tOptionalQNameDef = 22,
    tOptionalNCName = 23,
    tOptionalNodeSet = 24
};

typedef enum AsyncStatus {
    Started = 0,
    Completed = 1,
    Canceled = 2,
    Error = 3
};

typedef enum AttrProps {
    ATTR_DEFAULT = 0,
    URI = 1,
    BOOLEAN = 2
};

typedef enum BCRYPT_HASH_OPERATION_TYPE {
    BCRYPT_HASH_OPERATION_HASH_DATA = 1,
    BCRYPT_HASH_OPERATION_FINISH_HASH = 2
};

typedef enum BCRYPT_MULTI_OPERATION_TYPE {
    BCRYPT_OPERATION_TYPE_HASH = 1
};

typedef enum BIT_SETTINGS_SUMMARY {
    BIT_SETTINGS_SUMMARY_UNKNOWN = 0,
    BIT_SETTINGS_SUMMARY_ALL32 = 1,
    BIT_SETTINGS_SUMMARY_ALL64 = 2,
    BIT_SETTINGS_SUMMARY_MIXED = 3
};

typedef enum Base::CodebaseInstanceEnum {
    CodebaseInstance = 0
};

typedef enum BaseTextAppendVisitor::AppendState {
    CacheString = 0,
    NewBuffer = 1,
    AppendBuffer = 2
};

typedef enum BooleanOp {
    Or = 0,
    And = 1,
    Not = 2
};

typedef enum BranchType {
    BRNONE = 0,
    BRFALSE = 1,
    BRTRUE = 2,
    BLT = 3,
    BEQ = 4,
    BGT = 5,
    BLE = 6,
    BNE = 7,
    BGE = 8
};

typedef enum BuilderStatesEnum {
    SAXBuilder_NotStarted = 0,
    SAXBuilder_Error = 1,
    SAXBuilder_Document = 2,
    SAXBuilder_DocType = 3,
    SAXBuilder_DocTypeSubset = 4,
    SAXBuilder_Element = 5,
    SAXBuilder_CDATA = 6
};

typedef enum CAPICOM_STORE_LOCATION {
    CAPICOM_MEMORY_STORE = 0,
    CAPICOM_LOCAL_MACHINE_STORE = 1,
    CAPICOM_CURRENT_USER_STORE = 2,
    CAPICOM_ACTIVE_DIRECTORY_USER_STORE = 3,
    CAPICOM_SMART_CARD_USER_STORE = 4
};

typedef enum CI_WINDOWS_LOCKDOWN_RESTRICTION {
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NONE = 0,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK = 1,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK_PERMANENT = 2,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_MAX = 3
};

typedef enum COMPARTMENT_ID {
    UNSPECIFIED_COMPARTMENT_ID = 0,
    DEFAULT_COMPARTMENT_ID = 1
};

typedef enum CO_MARSHALING_CONTEXT_ATTRIBUTES {
    CO_MARSHALING_SOURCE_IS_APP_CONTAINER = 0,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1 = -2147483648,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2 = -2147483647,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3 = -2147483646,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4 = -2147483645,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5 = -2147483644,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6 = -2147483643,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7 = -2147483642,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8 = -2147483641,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9 = -2147483640,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10 = -2147483639,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11 = -2147483638,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12 = -2147483637,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13 = -2147483636,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14 = -2147483635,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15 = -2147483634,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16 = -2147483633,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17 = -2147483632
};

typedef enum CPTYPE {
    CP_Invalid = 0,
    CP_Unknown = 1,
    CP_Dispatch = 2,
    CP_PropertyNotifySink = 3
};

typedef enum CWMO_FLAGS {
    CWMO_DEFAULT = 0,
    CWMO_DISPATCH_CALLS = 1,
    CWMO_DISPATCH_WINDOW_MESSAGES = 2
};

typedef enum CachedWS {
    WSNone = 0,
    WSOptional = 1,
    WSRequired = 2
};

typedef enum CertKeyType {
    KeyTypeOther = 0,
    KeyTypeVirtualSmartCard = 1,
    KeyTypePhysicalSmartCard = 2,
    KeyTypePassport = 3,
    KeyTypePassportRemote = 4,
    KeyTypePassportSmartCard = 5,
    KeyTypeHardware = 6,
    KeyTypeSoftware = 7,
    KeyTypeSelfSigned = 8
};

typedef enum CodeGenAttrs::DerivedFlags {
    MULTI_NODES = 1,
    MULTI_LEVELS = 2,
    CONTAINED = 4,
    MASK_PROPS = 7,
    MULTI_NODES_MRG = 8,
    MULTI_LEVELS_MRG = 16,
    CONTAINED_MRG = 32,
    MASK_PROPS_MRG = 56,
    NEEDS_MERGING = 64,
    REVERSE_AXIS = 128,
    CHEAP_COUNT = 256,
    USES_CACHE = 512,
    NON_ATTRIBUTES = 1024
};

typedef enum CodeGenAttrs::InheritedFlags {
    MATCH_PATTERN = 1,
    LOCATION_PATH = 2,
    EXPRESSION = 4,
    AS_STRING = 8,
    AS_NUMBER = 16,
    AS_BOOLEAN = 32,
    AS_SCALAR = 56
};

typedef enum CodePage {
    utf16 = 1200,
    windows1250 = 1250,
    windows1251 = 1251,
    windows1252 = 1252,
    windows1253 = 1253,
    windows1254 = 1254,
    windows1255 = 1255,
    windows1256 = 1256,
    windows1257 = 1257,
    windows1258 = 1258,
    ucs4 = 12000,
    ucs2 = 12001,
    usascii = 20127,
    iso88591 = 28591,
    iso88592 = 28592,
    iso88593 = 28593,
    iso88594 = 28594,
    iso88595 = 28595,
    iso88596 = 28596,
    iso88597 = 28597,
    iso88598 = 28598,
    iso88599 = 28599,
    utf8 = 0xfde9
};

typedef enum CodeSpace::Flags {
    REUSE_NONE = 0,
    REUSE_STACK = 1,
    REUSE_LOCAL = 2,
    REUSE_ALL = 3
};

typedef enum CodebaseInstanceEnum {
    CodebaseInstance = 0
};

typedef enum CompareFlags {
    Less = 1,
    Equals = 2,
    Greater = 4,
    LessEquals = 3,
    NotEquals = 5,
    GreaterEquals = 6,
    MaskRelOp = 7,
    Insensitive = 8,
    UpperCaseFirst = 16,
    Lexicographic = 32,
    LastFlag = 32
};

typedef enum CompareOp {
    Less = 1,
    Equals = 2,
    Greater = 4,
    LessEquals = 3,
    NotEquals = 5,
    GreaterEquals = 6
};

typedef enum CompiledIdentityConstraint::ConstraintRole {
    ConstraintRole_Unique = 98,
    ConstraintRole_Key = 99,
    ConstraintRole_Keyref = 100
};

typedef enum ComplexContentEnum {
    SimpleContentRestriction = 0,
    SimpleContentExtension = 1,
    ComplexContentExtension = 2,
    ComplexContentRestriction = 3
};

typedef enum ConstraintRole {
    ConstraintRole_Unique = 98,
    ConstraintRole_Key = 99,
    ConstraintRole_Keyref = 100
};

typedef enum ContextNodeSet::Flags {
    CHEAP_COUNT = 1,
    NEEDS_POSITION = 2,
    NEEDS_LAST = 4,
    TEMPLATE_SWITCH = 8,
    ONLY_ATTRIBUTES = 16
};

typedef enum DEVICE_SCALE_FACTOR {
    DEVICE_SCALE_FACTOR_INVALID = 0,
    SCALE_100_PERCENT = 100,
    SCALE_120_PERCENT = 120,
    SCALE_125_PERCENT = 125,
    SCALE_140_PERCENT = 140,
    SCALE_150_PERCENT = 150,
    SCALE_160_PERCENT = 160,
    SCALE_175_PERCENT = 175,
    SCALE_180_PERCENT = 180,
    SCALE_200_PERCENT = 200,
    SCALE_225_PERCENT = 225,
    SCALE_250_PERCENT = 250,
    SCALE_300_PERCENT = 300,
    SCALE_350_PERCENT = 350,
    SCALE_400_PERCENT = 400,
    SCALE_450_PERCENT = 450,
    SCALE_500_PERCENT = 500
};

typedef enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS {
    DCDC_DEFAULT = 0,
    DCDC_DISABLE_FONT_UPDATE = 1,
    DCDC_DISABLE_RELAYOUT = 2
};

typedef enum DIALOG_DPI_CHANGE_BEHAVIORS {
    DDC_DEFAULT = 0,
    DDC_DISABLE_ALL = 1,
    DDC_DISABLE_RESIZE = 2,
    DDC_DISABLE_CONTROL_RELAYOUT = 4
};

typedef enum DISPLAYCONFIG_DEVICE_INFO_TYPE {
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4,
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6,
    DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7,
    DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9,
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10,
    DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11,
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_MODE_INFO_TYPE {
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
    DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3,
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_PIXELFORMAT {
    DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
    DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
    DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
    DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
    DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5,
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_ROTATION {
    DISPLAYCONFIG_ROTATION_IDENTITY = 1,
    DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
    DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
    DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_SCALING {
    DISPLAYCONFIG_SCALING_IDENTITY = 1,
    DISPLAYCONFIG_SCALING_CENTERED = 2,
    DISPLAYCONFIG_SCALING_STRETCHED = 3,
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4,
    DISPLAYCONFIG_SCALING_CUSTOM = 5,
    DISPLAYCONFIG_SCALING_PREFERRED = 128,
    DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_SCANLINE_ORDERING {
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_TOPOLOGY_ID {
    DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1,
    DISPLAYCONFIG_TOPOLOGY_CLONE = 2,
    DISPLAYCONFIG_TOPOLOGY_EXTEND = 4,
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8,
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY {
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1
};

typedef enum DOMDocumentWrapper::DocumentProperty {
    PropertySelectionLanguage = 0,
    PropertySelectionNamespaces = 1,
    PropertyMaxElementDepth = 2,
    PropertyMaxXmlSize = 3,
    Property_BooleanProperties = 4,
    PropertyServerHttpRequest = 5,
    PropertyForcedResync = 6,
    PropertyAllowDocumentFunc = 7,
    PropertyAllowXsltScript = 8,
    PropertyPopulateElementDefaultValues = 9,
    PropertyProhibitDTD = 10,
    PropertyNewParser = 11,
    PropertyMultipleErrorMessages = 12,
    PropertyUseInlineSchema = 13,
    PropertyValidateOnParse = 14,
    PropertyResolveExternals = 15,
    PropertyNormalizeAttributeValues = 16
};

typedef enum DOMEXCEPTION::DOMExceptionCode {
    DOMEXCEPTION_CODE_BASE = -1072893952,
    INDEX_SIZE_ERR = -1072893951,
    DOMSTRING_SIZE_ERR = -1072893950,
    HIERARCHY_REQUEST_ERR = -1072893949,
    WRONG_DOCUMENT_ERR = -1072893948,
    INVALID_CHARACTER_ERR = -1072893947,
    NO_DATA_ALLOWED_ERR = -1072893946,
    NO_MODIFICATION_ALLOWED_ERR = -1072893945,
    NOT_FOUND_ERR = -1072893944,
    NOT_SUPPORTED_ERR = -1072893943,
    INUSE_ATTRIBUTE_ERR = -1072893942,
    INVALID_STATE_ERR = -1072893941,
    SYNTAX_ERR = -1072893940,
    INVALID_MODIFICATION_ERR = -1072893939,
    NAMESPACE_ERR = -1072893938,
    INVALID_ACCESS_ERR = -1072893937
};

typedef enum DOMProcessor::ProcessState {
    UnInit = 0,
    Loaded = 1,
    Interactive = 2,
    InTransform = 3,
    Aborting = 4,
    Complete = 5
};

typedef enum DPI_AWARENESS {
    DPI_AWARENESS_INVALID = -1,
    DPI_AWARENESS_UNAWARE = 0,
    DPI_AWARENESS_SYSTEM_AWARE = 1,
    DPI_AWARENESS_PER_MONITOR_AWARE = 2
};

typedef enum DPI_HOSTING_BEHAVIOR {
    DPI_HOSTING_BEHAVIOR_INVALID = -1,
    DPI_HOSTING_BEHAVIOR_DEFAULT = 0,
    DPI_HOSTING_BEHAVIOR_MIXED = 1
};

typedef enum DSAFIPSVERSION_ENUM {
    DSA_FIPS186_2 = 0,
    DSA_FIPS186_3 = 1
};

typedef enum DTD::REFTYPE {
    REF_ID = 0,
    REF_NOTATION = 1
};

typedef enum DTDFactory::NameParseEnum {
    NAME_NONE = 0,
    NAME_SIMPLE = 1,
    NAME_DTD = 2
};

typedef enum DXGI_COLOR_SPACE_TYPE {
    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709 = 0,
    DXGI_COLOR_SPACE_RGB_FULL_G10_NONE_P709 = 1,
    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P709 = 2,
    DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P2020 = 3,
    DXGI_COLOR_SPACE_RESERVED = 4,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_NONE_P709_X601 = 5,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P601 = 6,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P601 = 7,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709 = 8,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P709 = 9,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P2020 = 10,
    DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P2020 = 11,
    DXGI_COLOR_SPACE_RGB_FULL_G2084_NONE_P2020 = 12,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_LEFT_P2020 = 13,
    DXGI_COLOR_SPACE_RGB_STUDIO_G2084_NONE_P2020 = 14,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_TOPLEFT_P2020 = 15,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_TOPLEFT_P2020 = 16,
    DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P2020 = 17,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_GHLG_TOPLEFT_P2020 = 18,
    DXGI_COLOR_SPACE_YCBCR_FULL_GHLG_TOPLEFT_P2020 = 19,
    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P709 = 20,
    DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P2020 = 21,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P709 = 22,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P2020 = 23,
    DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_TOPLEFT_P2020 = 24,
    DXGI_COLOR_SPACE_CUSTOM = -1
};

typedef enum DXGI_FORMAT {
    DXGI_FORMAT_UNKNOWN = 0,
    DXGI_FORMAT_R32G32B32A32_TYPELESS = 1,
    DXGI_FORMAT_R32G32B32A32_FLOAT = 2,
    DXGI_FORMAT_R32G32B32A32_UINT = 3,
    DXGI_FORMAT_R32G32B32A32_SINT = 4,
    DXGI_FORMAT_R32G32B32_TYPELESS = 5,
    DXGI_FORMAT_R32G32B32_FLOAT = 6,
    DXGI_FORMAT_R32G32B32_UINT = 7,
    DXGI_FORMAT_R32G32B32_SINT = 8,
    DXGI_FORMAT_R16G16B16A16_TYPELESS = 9,
    DXGI_FORMAT_R16G16B16A16_FLOAT = 10,
    DXGI_FORMAT_R16G16B16A16_UNORM = 11,
    DXGI_FORMAT_R16G16B16A16_UINT = 12,
    DXGI_FORMAT_R16G16B16A16_SNORM = 13,
    DXGI_FORMAT_R16G16B16A16_SINT = 14,
    DXGI_FORMAT_R32G32_TYPELESS = 15,
    DXGI_FORMAT_R32G32_FLOAT = 16,
    DXGI_FORMAT_R32G32_UINT = 17,
    DXGI_FORMAT_R32G32_SINT = 18,
    DXGI_FORMAT_R32G8X24_TYPELESS = 19,
    DXGI_FORMAT_D32_FLOAT_S8X24_UINT = 20,
    DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS = 21,
    DXGI_FORMAT_X32_TYPELESS_G8X24_UINT = 22,
    DXGI_FORMAT_R10G10B10A2_TYPELESS = 23,
    DXGI_FORMAT_R10G10B10A2_UNORM = 24,
    DXGI_FORMAT_R10G10B10A2_UINT = 25,
    DXGI_FORMAT_R11G11B10_FLOAT = 26,
    DXGI_FORMAT_R8G8B8A8_TYPELESS = 27,
    DXGI_FORMAT_R8G8B8A8_UNORM = 28,
    DXGI_FORMAT_R8G8B8A8_UNORM_SRGB = 29,
    DXGI_FORMAT_R8G8B8A8_UINT = 30,
    DXGI_FORMAT_R8G8B8A8_SNORM = 31,
    DXGI_FORMAT_R8G8B8A8_SINT = 32,
    DXGI_FORMAT_R16G16_TYPELESS = 33,
    DXGI_FORMAT_R16G16_FLOAT = 34,
    DXGI_FORMAT_R16G16_UNORM = 35,
    DXGI_FORMAT_R16G16_UINT = 36,
    DXGI_FORMAT_R16G16_SNORM = 37,
    DXGI_FORMAT_R16G16_SINT = 38,
    DXGI_FORMAT_R32_TYPELESS = 39,
    DXGI_FORMAT_D32_FLOAT = 40,
    DXGI_FORMAT_R32_FLOAT = 41,
    DXGI_FORMAT_R32_UINT = 42,
    DXGI_FORMAT_R32_SINT = 43,
    DXGI_FORMAT_R24G8_TYPELESS = 44,
    DXGI_FORMAT_D24_UNORM_S8_UINT = 45,
    DXGI_FORMAT_R24_UNORM_X8_TYPELESS = 46,
    DXGI_FORMAT_X24_TYPELESS_G8_UINT = 47,
    DXGI_FORMAT_R8G8_TYPELESS = 48,
    DXGI_FORMAT_R8G8_UNORM = 49,
    DXGI_FORMAT_R8G8_UINT = 50,
    DXGI_FORMAT_R8G8_SNORM = 51,
    DXGI_FORMAT_R8G8_SINT = 52,
    DXGI_FORMAT_R16_TYPELESS = 53,
    DXGI_FORMAT_R16_FLOAT = 54,
    DXGI_FORMAT_D16_UNORM = 55,
    DXGI_FORMAT_R16_UNORM = 56,
    DXGI_FORMAT_R16_UINT = 57,
    DXGI_FORMAT_R16_SNORM = 58,
    DXGI_FORMAT_R16_SINT = 59,
    DXGI_FORMAT_R8_TYPELESS = 60,
    DXGI_FORMAT_R8_UNORM = 61,
    DXGI_FORMAT_R8_UINT = 62,
    DXGI_FORMAT_R8_SNORM = 63,
    DXGI_FORMAT_R8_SINT = 64,
    DXGI_FORMAT_A8_UNORM = 65,
    DXGI_FORMAT_R1_UNORM = 66,
    DXGI_FORMAT_R9G9B9E5_SHAREDEXP = 67,
    DXGI_FORMAT_R8G8_B8G8_UNORM = 68,
    DXGI_FORMAT_G8R8_G8B8_UNORM = 69,
    DXGI_FORMAT_BC1_TYPELESS = 70,
    DXGI_FORMAT_BC1_UNORM = 71,
    DXGI_FORMAT_BC1_UNORM_SRGB = 72,
    DXGI_FORMAT_BC2_TYPELESS = 73,
    DXGI_FORMAT_BC2_UNORM = 74,
    DXGI_FORMAT_BC2_UNORM_SRGB = 75,
    DXGI_FORMAT_BC3_TYPELESS = 76,
    DXGI_FORMAT_BC3_UNORM = 77,
    DXGI_FORMAT_BC3_UNORM_SRGB = 78,
    DXGI_FORMAT_BC4_TYPELESS = 79,
    DXGI_FORMAT_BC4_UNORM = 80,
    DXGI_FORMAT_BC4_SNORM = 81,
    DXGI_FORMAT_BC5_TYPELESS = 82,
    DXGI_FORMAT_BC5_UNORM = 83,
    DXGI_FORMAT_BC5_SNORM = 84,
    DXGI_FORMAT_B5G6R5_UNORM = 85,
    DXGI_FORMAT_B5G5R5A1_UNORM = 86,
    DXGI_FORMAT_B8G8R8A8_UNORM = 87,
    DXGI_FORMAT_B8G8R8X8_UNORM = 88,
    DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM = 89,
    DXGI_FORMAT_B8G8R8A8_TYPELESS = 90,
    DXGI_FORMAT_B8G8R8A8_UNORM_SRGB = 91,
    DXGI_FORMAT_B8G8R8X8_TYPELESS = 92,
    DXGI_FORMAT_B8G8R8X8_UNORM_SRGB = 93,
    DXGI_FORMAT_BC6H_TYPELESS = 94,
    DXGI_FORMAT_BC6H_UF16 = 95,
    DXGI_FORMAT_BC6H_SF16 = 96,
    DXGI_FORMAT_BC7_TYPELESS = 97,
    DXGI_FORMAT_BC7_UNORM = 98,
    DXGI_FORMAT_BC7_UNORM_SRGB = 99,
    DXGI_FORMAT_AYUV = 100,
    DXGI_FORMAT_Y410 = 101,
    DXGI_FORMAT_Y416 = 102,
    DXGI_FORMAT_NV12 = 103,
    DXGI_FORMAT_P010 = 104,
    DXGI_FORMAT_P016 = 105,
    DXGI_FORMAT_420_OPAQUE = 106,
    DXGI_FORMAT_YUY2 = 107,
    DXGI_FORMAT_Y210 = 108,
    DXGI_FORMAT_Y216 = 109,
    DXGI_FORMAT_NV11 = 110,
    DXGI_FORMAT_AI44 = 111,
    DXGI_FORMAT_IA44 = 112,
    DXGI_FORMAT_P8 = 113,
    DXGI_FORMAT_A8P8 = 114,
    DXGI_FORMAT_B4G4R4A4_UNORM = 115,
    DXGI_FORMAT_P208 = 130,
    DXGI_FORMAT_V208 = 131,
    DXGI_FORMAT_V408 = 132,
    DXGI_FORMAT_FORCE_UINT = -1
};

typedef enum DXGI_MODE_ROTATION {
    DXGI_MODE_ROTATION_UNSPECIFIED = 0,
    DXGI_MODE_ROTATION_IDENTITY = 1,
    DXGI_MODE_ROTATION_ROTATE90 = 2,
    DXGI_MODE_ROTATION_ROTATE180 = 3,
    DXGI_MODE_ROTATION_ROTATE270 = 4
};

typedef enum DXGI_MODE_SCALING {
    DXGI_MODE_SCALING_UNSPECIFIED = 0,
    DXGI_MODE_SCALING_CENTERED = 1,
    DXGI_MODE_SCALING_STRETCHED = 2
};

typedef enum DXGI_MODE_SCANLINE_ORDER {
    DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED = 0,
    DXGI_MODE_SCANLINE_ORDER_PROGRESSIVE = 1,
    DXGI_MODE_SCANLINE_ORDER_UPPER_FIELD_FIRST = 2,
    DXGI_MODE_SCANLINE_ORDER_LOWER_FIELD_FIRST = 3
};

typedef enum DataType {
    tUnknown = 0,
    tBoolean = 1,
    tInt = 2,
    tR8 = 3,
    tString = 4,
    tRTF = 5,
    tNodeSet = 6,
    tPointer = 7,
    tObject = 8,
    tLastType = 8
};

typedef enum DateTimeFormat::XSDType {
    XSD_UNKNOWN = 0,
    XSD_YEAR = 1,
    XSD_MONTH = 2,
    XSD_DAY = 4,
    XSD_TIME = 8,
    XSD_YEAR_MONTH = 3,
    XSD_MONTH_DAY = 6,
    XSD_DATE = 7,
    XSD_TIME_INSTANT = 15
};

typedef enum DecimalFormat::ParseState {
    ParsePrefix = 0,
    ParseInteger = 1,
    ParseFraction = 2
};

typedef enum DerivedFlags {
    NO_DERIVED = 0,
    NEEDS_POSITION = 1,
    NEEDS_LAST = 2,
    POS_FILTER = 4,
    ALL_FLAGS = 7
};

typedef enum DocStream::EState {
    NONE = 0,
    READING = 1,
    WRITING = 2
};

typedef enum Document::NewNodeNotifyEnum {
    NoNewNodeNotifications = 0,
    NewNodeNotify = 1
};

typedef enum DocumentProperty {
    PropertySelectionLanguage = 0,
    PropertySelectionNamespaces = 1,
    PropertyMaxElementDepth = 2,
    PropertyMaxXmlSize = 3,
    Property_BooleanProperties = 4,
    PropertyServerHttpRequest = 5,
    PropertyForcedResync = 6,
    PropertyAllowDocumentFunc = 7,
    PropertyAllowXsltScript = 8,
    PropertyPopulateElementDefaultValues = 9,
    PropertyProhibitDTD = 10,
    PropertyNewParser = 11,
    PropertyMultipleErrorMessages = 12,
    PropertyUseInlineSchema = 13,
    PropertyValidateOnParse = 14,
    PropertyResolveExternals = 15,
    PropertyNormalizeAttributeValues = 16
};

typedef enum ECC_CURVE_ALG_ID_ENUM {
    BCRYPT_NO_CURVE_GENERATION_ALG_ID = 0
};

typedef enum ECC_CURVE_TYPE_ENUM {
    BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE = 1,
    BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE = 2,
    BCRYPT_ECC_PRIME_MONTGOMERY_CURVE = 3
};

typedef enum EDIT_CONTROL_FEATURE {
    EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT = 0,
    EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS = 1
};

typedef enum EState {
    NONE = 0,
    READING = 1,
    WRITING = 2
};

typedef enum ElemProps {
    ELEM_DEFAULT = 0,
    BLOCK_WS = 1,
    URI_PARENT = 2,
    BOOL_PARENT = 4,
    EMPTY = 8,
    NO_ENTITIES = 16,
    HEAD = 32,
    HAS_NS = 64
};

typedef enum ElemType {
    XslElem = 0,
    ExtElem = 1,
    LiteralElem = 2,
    StyleElem = 3
};

typedef enum EncodeErrorAction {
    Entitize = 0,
    CDataEntitize = 1
};

typedef enum EncodeFlags {
    ENCODE_ERROR = 0,
    ENCODE_ENTITIZE = 1,
    ENCODE_CDATA_ENTITIZE = 2
};

typedef enum Error {
    MX_E_MX = -1072894464,
    MX_E_INPUTEND = -1072894463,
    MX_E_ENCODING = -1072894462,
    MX_E_ENCODINGSWITCH = -1072894461,
    MX_E_ENCODINGSIGNATURE = -1072894460,
    WC_E_WC = -1072894432,
    WC_E_WHITESPACE = -1072894431,
    WC_E_SEMICOLON = -1072894430,
    WC_E_GREATERTHAN = -1072894429,
    WC_E_QUOTE = -1072894428,
    WC_E_EQUAL = -1072894427,
    WC_E_LESSTHAN = -1072894426,
    WC_E_HEXDIGIT = -1072894425,
    WC_E_DIGIT = -1072894424,
    WC_E_LEFTBRACKET = -1072894423,
    WC_E_LEFTPAREN = -1072894422,
    WC_E_XMLCHARACTER = -1072894421,
    WC_E_NAMECHARACTER = -1072894420,
    WC_E_SYNTAX = -1072894419,
    WC_E_CDSECT = -1072894418,
    WC_E_COMMENT = -1072894417,
    WC_E_CONDSECT = -1072894416,
    WC_E_DECLATTLIST = -1072894415,
    WC_E_DECLDOCTYPE = -1072894414,
    WC_E_DECLELEMENT = -1072894413,
    WC_E_DECLENTITY = -1072894412,
    WC_E_DECLNOTATION = -1072894411,
    WC_E_NDATA = -1072894410,
    WC_E_PUBLIC = -1072894409,
    WC_E_SYSTEM = -1072894408,
    WC_E_NAME = -1072894407,
    WC_E_ROOTELEMENT = -1072894406,
    WC_E_ELEMENTMATCH = -1072894405,
    WC_E_UNIQUEATTRIBUTE = -1072894404,
    WC_E_TEXTXMLDECL = -1072894403,
    WC_E_LEADINGXML = -1072894402,
    WC_E_TEXTDECL = -1072894401,
    WC_E_XMLDECL = -1072894400,
    WC_E_ENCNAME = -1072894399,
    WC_E_PUBLICID = -1072894398,
    WC_E_PESINTERNALSUBSET = -1072894397,
    WC_E_PESBETWEENDECLS = -1072894396,
    WC_E_NORECURSION = -1072894395,
    WC_E_ENTITYCONTENT = -1072894394,
    WC_E_UNDECLAREDENTITY = -1072894393,
    WC_E_PARSEDENTITY = -1072894392,
    WC_E_NOEXTERNALENTITYREF = -1072894391,
    WC_E_PI = -1072894390,
    WC_E_SYSTEMID = -1072894389,
    WC_E_QUESTIONMARK = -1072894388,
    WC_E_CDSECTEND = -1072894387,
    WC_E_DTD_PROHIBITED = -1072894386,
    WC_E_RESERVEDXMLNAMESPACE = -1072894385,
    WC_E_RESERVEDXMLNS = -1072894384,
    NC_E_NC = -1072894368,
    NC_E_QNAMECHARACTER = -1072894367,
    NC_E_QNAMECOLON = -1072894366,
    NC_E_NAMECOLON = -1072894365,
    NC_E_DECLAREDPREFIX = -1072894364,
    NC_E_UNDECLAREDPREFIX = -1072894363,
    NC_E_EMPTYURI = -1072894362,
    VC_E_VC = -1072894336,
    MV_E_CONSTRAINT_VIOLATED = -1072894320,
    MV_E_MAXXMLSIZE = -1072894319,
    MV_E_MAXELEMENTDEPTH = -1072894318
};

typedef enum ErrorType {
    XPSyntaxError = 0,
    OtherError = 1
};

typedef enum EventType {
    UNKNOWN = 0,
    BEGIN_ELEM = 1,
    END_ELEM = 2,
    BEGIN_ATTR = 3,
    END_ATTR = 4,
    BEGIN_COMMENT = 5,
    END_COMMENT = 6,
    BEGIN_PI = 7,
    END_PI = 8,
    TEXT = 9,
    TEXT_NOENT = 10,
    NAMESPACE = 11,
    WS = 12,
    WS_OPTIONAL = 13
};

typedef enum ExpressionCompiler::Flags {
    EXPRESSION = 1,
    LOCATION_PATH = 2,
    MATCH_PATTERN = 4,
    ALLOW_EXTENSIONS = 8
};

typedef enum FEATURE_CHANGE_TIME {
    FEATURE_CHANGE_TIME_READ = 0,
    FEATURE_CHANGE_TIME_MODULE_RELOAD = 1,
    FEATURE_CHANGE_TIME_SESSION = 2,
    FEATURE_CHANGE_TIME_REBOOT = 3,
    FEATURE_CHANGE_TIME_USER_FLAG = 128
};

typedef enum FEATURE_ENABLED_STATE {
    FEATURE_ENABLED_STATE_DEFAULT = 0,
    FEATURE_ENABLED_STATE_DISABLED = 1,
    FEATURE_ENABLED_STATE_ENABLED = 2,
    FEATURE_ENABLED_STATE_HAS_NOTIFICATION = 128,
    FEATURE_ENABLED_STATE_HAS_VARIANT_CONFIGURATION = 64
};

typedef enum FILETYPEATTRIBUTEFLAGS {
    FTA_None = 0,
    FTA_Exclude = 1,
    FTA_Show = 2,
    FTA_HasExtension = 4,
    FTA_NoEdit = 8,
    FTA_NoRemove = 16,
    FTA_NoNewVerb = 32,
    FTA_NoEditVerb = 64,
    FTA_NoRemoveVerb = 128,
    FTA_NoEditDesc = 256,
    FTA_NoEditIcon = 512,
    FTA_NoEditDflt = 1024,
    FTA_NoEditVerbCmd = 2048,
    FTA_NoEditVerbExe = 4096,
    FTA_NoDDE = 8192,
    FTA_NoEditMIME = 0x8000,
    FTA_OpenIsSafe = 0x10000,
    FTA_AlwaysUnsafe = 0x20000,
    FTA_NoRecentDocs = 0x100000,
    FTA_SafeForElevation = 0x200000,
    FTA_AlwaysUseDirectInvoke = 0x400000
};

typedef enum FindResult {
    Unknown = 0,
    Present = 1,
    Empty = 2,
    EndOfList = 3
};

typedef enum Flags {
    REUSE_NONE = 0,
    REUSE_STACK = 1,
    REUSE_LOCAL = 2,
    REUSE_ALL = 3
};

typedef enum FuncID {
    FUNC_UNKNOWN = 0,
    __XP_FIRSTFUNC = 1,
    XP_BOOLEAN = 1,
    XP_CEILING = 2,
    XP_CONCAT = 3,
    XP_CONTAINS = 4,
    XP_COUNT = 5,
    XP_FALSE = 6,
    XP_FLOOR = 7,
    XP_ID = 8,
    XP_LANG = 9,
    XP_LAST = 10,
    XP_LOCALNAME = 11,
    XP_NAME = 12,
    XP_NAMESPACEURI = 13,
    XP_NORMALIZESPACE = 14,
    XP_NOT = 15,
    XP_NUMBER = 16,
    XP_POSITION = 17,
    XP_ROUND = 18,
    XP_STARTSWITH = 19,
    XP_STRING = 20,
    XP_STRINGLENGTH = 21,
    XP_SUBSTRING = 22,
    XP_SUBSTRINGAFTER = 23,
    XP_SUBSTRINGBEFORE = 24,
    XP_SUM = 25,
    XP_TRANSLATE = 26,
    XP_TRUE = 27,
    __XP_LASTFUNC = 27,
    __XSLT_FIRSTFUNC = 28,
    XSLT_CURRENT = 28,
    XSLT_DOCUMENT = 29,
    XSLT_ELEMAVAIL = 30,
    XSLT_FORMATNUMBER = 31,
    XSLT_FUNCAVAIL = 32,
    XSLT_GENERATEID = 33,
    XSLT_KEY = 34,
    XSLT_SYSPROP = 35,
    XSLT_UNPARSEDURI = 36,
    __XSLT_LASTFUNC = 36,
    __MSXSL_FIRSTFUNC = 37,
    MSXSL_FORMATNUMBER = 37,
    MSXSL_AVERAGE = 38,
    MSXSL_NODESET = 39,
    MSXSL_FORMATDATE = 40,
    MSXSL_FORMATTIME = 41,
    MSXSL_LOCALNAME = 42,
    MSXSL_NAMESPACEURI = 43,
    MSXSL_NUMBER = 44,
    MSXSL_SCHEMAAVAIL = 45,
    MSXSL_STRINGCOMPARE = 46,
    MSXSL_TYPEIS = 47,
    MSXSL_TYPELOCALNAME = 48,
    MSXSL_TYPENAMESPACEURI = 49,
    MSXSL_UTC = 50,
    __MSXSL_LASTFUNC = 50
};

typedef enum FunctionLookup::ArgType {
    tAny = 0,
    tBoolean = 1,
    tNumber = 3,
    tString = 4,
    tQName = 5,
    tQNameDef = 6,
    tNCName = 7,
    tNodeSet = 8,
    tOptional = 16,
    tZeroOrMore = 32,
    tOptionalAny = 16,
    tOptionalBoolean = 17,
    tOptionalNumber = 19,
    tOptionalString = 20,
    tOptionalQName = 21,
    tOptionalQNameDef = 22,
    tOptionalNCName = 23,
    tOptionalNodeSet = 24
};

typedef enum FunctionLookup::FuncID {
    FUNC_UNKNOWN = 0,
    __XP_FIRSTFUNC = 1,
    XP_BOOLEAN = 1,
    XP_CEILING = 2,
    XP_CONCAT = 3,
    XP_CONTAINS = 4,
    XP_COUNT = 5,
    XP_FALSE = 6,
    XP_FLOOR = 7,
    XP_ID = 8,
    XP_LANG = 9,
    XP_LAST = 10,
    XP_LOCALNAME = 11,
    XP_NAME = 12,
    XP_NAMESPACEURI = 13,
    XP_NORMALIZESPACE = 14,
    XP_NOT = 15,
    XP_NUMBER = 16,
    XP_POSITION = 17,
    XP_ROUND = 18,
    XP_STARTSWITH = 19,
    XP_STRING = 20,
    XP_STRINGLENGTH = 21,
    XP_SUBSTRING = 22,
    XP_SUBSTRINGAFTER = 23,
    XP_SUBSTRINGBEFORE = 24,
    XP_SUM = 25,
    XP_TRANSLATE = 26,
    XP_TRUE = 27,
    __XP_LASTFUNC = 27,
    __XSLT_FIRSTFUNC = 28,
    XSLT_CURRENT = 28,
    XSLT_DOCUMENT = 29,
    XSLT_ELEMAVAIL = 30,
    XSLT_FORMATNUMBER = 31,
    XSLT_FUNCAVAIL = 32,
    XSLT_GENERATEID = 33,
    XSLT_KEY = 34,
    XSLT_SYSPROP = 35,
    XSLT_UNPARSEDURI = 36,
    __XSLT_LASTFUNC = 36,
    __MSXSL_FIRSTFUNC = 37,
    MSXSL_FORMATNUMBER = 37,
    MSXSL_AVERAGE = 38,
    MSXSL_NODESET = 39,
    MSXSL_FORMATDATE = 40,
    MSXSL_FORMATTIME = 41,
    MSXSL_LOCALNAME = 42,
    MSXSL_NAMESPACEURI = 43,
    MSXSL_NUMBER = 44,
    MSXSL_SCHEMAAVAIL = 45,
    MSXSL_STRINGCOMPARE = 46,
    MSXSL_TYPEIS = 47,
    MSXSL_TYPELOCALNAME = 48,
    MSXSL_TYPENAMESPACEURI = 49,
    MSXSL_UTC = 50,
    __MSXSL_LASTFUNC = 50
};

typedef enum HASHALGORITHM_ENUM {
    DSA_HASH_ALGORITHM_SHA1 = 0,
    DSA_HASH_ALGORITHM_SHA256 = 1,
    DSA_HASH_ALGORITHM_SHA512 = 2
};

typedef enum HTMLProps::AttrProps {
    ATTR_DEFAULT = 0,
    URI = 1,
    BOOLEAN = 2
};

typedef enum HTMLProps::ElemProps {
    ELEM_DEFAULT = 0,
    BLOCK_WS = 1,
    URI_PARENT = 2,
    BOOL_PARENT = 4,
    EMPTY = 8,
    NO_ENTITIES = 16,
    HEAD = 32,
    HAS_NS = 64
};

typedef enum HTMLWriter::CachedWS {
    WSNone = 0,
    WSOptional = 1,
    WSRequired = 2
};

typedef enum Hashtable::FindResult {
    Unknown = 0,
    Present = 1,
    Empty = 2,
    EndOfList = 3
};

typedef enum HeaderType {
    Unknown = 0,
    ContentType = 1,
    ContentLength = 2,
    AcceptLanguage = 3
};

typedef enum HierarchyType {
    HT_SelfCompareOnly = 0,
    HT_string = 1,
    HT_normalizedString = 2,
    HT_token = 3,
    HT_language = 4,
    HT_Name = 5,
    HT_NCName = 6,
    HT_ID = 7,
    HT_IDREF = 8,
    HT_ENTITY = 9,
    HT_NMTOKEN = 10,
    HT_decimal = 11,
    HT_integer = 12,
    HT_nonPositiveInteger = 13,
    HT_negativeInteger = 14,
    HT_long = 15,
    HT_int = 16,
    HT_short = 17,
    HT_byte = 18,
    HT_nonNegativeInteger = 19,
    HT_unsignedLong = 20,
    HT_unsignedInt = 21,
    HT_unsignedShort = 22,
    HT_unsignedByte = 23,
    HT_positiveInteger = 24
};

typedef enum IEObjectType {
    IE_EPM_OBJECT_EVENT = 0,
    IE_EPM_OBJECT_MUTEX = 1,
    IE_EPM_OBJECT_SEMAPHORE = 2,
    IE_EPM_OBJECT_SHARED_MEMORY = 3,
    IE_EPM_OBJECT_WAITABLE_TIMER = 4,
    IE_EPM_OBJECT_FILE = 5,
    IE_EPM_OBJECT_NAMED_PIPE = 6,
    IE_EPM_OBJECT_REGISTRY = 7
};

typedef enum IGNOREMIME {
    IGNOREMIME_PROMPT = 1,
    IGNOREMIME_TEXT = 2
};

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1
};

typedef enum IMPORT_OBJECT_NAME_TYPE {
    IMPORT_OBJECT_ORDINAL = 0,
    IMPORT_OBJECT_NAME = 1,
    IMPORT_OBJECT_NAME_NO_PREFIX = 2,
    IMPORT_OBJECT_NAME_UNDECORATE = 3,
    IMPORT_OBJECT_NAME_EXPORTAS = 4
};

typedef enum IMPORT_OBJECT_TYPE {
    IMPORT_OBJECT_CODE = 0,
    IMPORT_OBJECT_DATA = 1,
    IMPORT_OBJECT_CONST = 2
};

typedef enum INTERNET_SCHEME {
    INTERNET_SCHEME_PARTIAL = -2,
    INTERNET_SCHEME_UNKNOWN = -1,
    INTERNET_SCHEME_DEFAULT = 0,
    INTERNET_SCHEME_FTP = 1,
    INTERNET_SCHEME_GOPHER = 2,
    INTERNET_SCHEME_HTTP = 3,
    INTERNET_SCHEME_HTTPS = 4,
    INTERNET_SCHEME_FILE = 5,
    INTERNET_SCHEME_NEWS = 6,
    INTERNET_SCHEME_MAILTO = 7,
    INTERNET_SCHEME_SOCKS = 8,
    INTERNET_SCHEME_JAVASCRIPT = 9,
    INTERNET_SCHEME_VBSCRIPT = 10,
    INTERNET_SCHEME_RES = 11,
    INTERNET_SCHEME_FIRST = 1,
    INTERNET_SCHEME_LAST = 11
};

typedef enum IXMLSecurityInfo::XmlSecurityEnum {
    ALLOW_ALL = 0,
    CHECK_SECURITY = 1,
    ALLOW_NONE = 2
};

typedef enum IfCompile::InstrType {
    IfInstr = 0,
    WhenInstr = 1,
    OtherwiseInstr = 2
};

typedef enum InheritedFlags {
    MATCH_PATTERN = 1,
    LOCATION_PATH = 2,
    EXPRESSION = 4,
    AS_STRING = 8,
    AS_NUMBER = 16,
    AS_BOOLEAN = 32,
    AS_SCALAR = 56
};

typedef enum InstrFlags {
    ALIAS_LOC = 1,
    DISABLE_ESCAPING = 2
};

typedef enum InstrState {
    EMPTY_STATE = 0,
    ELEM_BEGIN = 1,
    ELEM_WS = 2,
    ELEM_LITERAL_TEXT = 3,
    ELEM_PARAM_TEXT = 4,
    ATTR_BEGIN = 5,
    ATTR_LITERAL_TEXT = 6,
    ATTR_PARAM_TEXT = 7,
    FRAG_BEGIN = 8,
    FRAG_TEXT = 9
};

typedef enum InstrType {
    IfInstr = 0,
    WhenInstr = 1,
    OtherwiseInstr = 2
};

typedef enum IntFlags {
    UNDERFLOW = 1,
    OVERFLOW = 2,
    NAN = 3,
    ROUNDED = 4
};

typedef enum Internal {
    m_MaxShareLockUsers = 256,
    m_lMaxSpins = 4096,
    m_lMaxUsers = 256
};

typedef enum InternetCookieState {
    COOKIE_STATE_UNKNOWN = 0,
    COOKIE_STATE_ACCEPT = 1,
    COOKIE_STATE_PROMPT = 2,
    COOKIE_STATE_LEASH = 3,
    COOKIE_STATE_DOWNGRADE = 4,
    COOKIE_STATE_REJECT = 5,
    COOKIE_STATE_MAX = 5
};

typedef enum InvokingMethodType {
    StaticMethod = 0,
    InstanceMethod = 1
};

typedef enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS {
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 1,
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 2,
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 3
};

typedef enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS {
    JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 1,
    JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 2,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 4,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 8,
    JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 15
};

typedef enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS {
    JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 1,
    JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 2,
    JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 4,
    JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 7
};

typedef enum Kind {
    Kind_Srw = 0,
    Kind_StaReentrancy = 1
};

typedef enum LATENCY_TIME {
    LT_DONT_CARE = 0,
    LT_LOWEST_LATENCY = 1
};

typedef enum LetterValue {
    ALPHABETIC = 0,
    TRADITIONAL = 1
};

typedef enum LevelType {
    SINGLE = 0,
    MULTIPLE = 1,
    ANY = 2
};

typedef enum ListType {
    ListType_Any = 0,
    ListType_Other = 1,
    ListType_Set = 2
};

typedef enum LoadType {
    URI = 0,
    FILE_ITEM = 1
};

typedef enum LoadWorkItem::LoadType {
    URI = 0,
    FILE_ITEM = 1
};

typedef enum LocationFlags {
    NMSP_LOC = 1,
    DEF_NMSP_LOC = 2,
    ATTR_LOC = 3,
    DEF_ATTR_LOC = 4,
    SINGLE_TEXT_LOC = 5,
    CHILD_LOC = 6
};

typedef enum MCA_EXCEPTION_TYPE {
    HAL_MCE_RECORD = 0,
    HAL_MCA_RECORD = 1
};

typedef enum MEDIAPLAYBACK_STATE {
    MEDIAPLAYBACK_RESUME = 0,
    MEDIAPLAYBACK_PAUSE = 1,
    MEDIAPLAYBACK_PAUSE_AND_SUSPEND = 2,
    MEDIAPLAYBACK_RESUME_FROM_SUSPEND = 3
};

typedef enum MEM_EXTENDED_PARAMETER_TYPE {
    MemExtendedParameterInvalidType = 0,
    MemExtendedParameterAddressRequirements = 1,
    MemExtendedParameterNumaNode = 2,
    MemExtendedParameterPartitionHandle = 3,
    MemExtendedParameterUserPhysicalHandle = 4,
    MemExtendedParameterAttributeFlags = 5,
    MemExtendedParameterMax = 6
};

typedef enum MEM_SECTION_EXTENDED_PARAMETER_TYPE {
    MemSectionExtendedParameterInvalidType = 0,
    MemSectionExtendedParameterUserPhysicalFlags = 1,
    MemSectionExtendedParameterNumaNode = 2,
    MemSectionExtendedParameterMax = 3
};

typedef enum MSONFC {
    msonfcNil = -1,
    msonfcFirstNum = 0,
    msonfcArabic = 0,
    msonfcDArabic = 1,
    msonfcHindi3 = 2,
    msonfcThai2 = 3,
    msonfcFEDecimal = 4,
    msonfcKorDbNum1 = 5,
    msonfcLastNum = 5,
    msonfcFirstAlpha = 6,
    msonfcUCLetter = 6,
    msonfcLCLetter = 7,
    msonfcUCRus = 8,
    msonfcLCRus = 9,
    msonfcThai1 = 10,
    msonfcHindi1 = 11,
    msonfcHindi2 = 12,
    msonfcAiueo = 13,
    msonfcDAiueo = 14,
    msonfcIroha = 15,
    msonfcDIroha = 16,
    msonfcDChosung = 17,
    msonfcGanada = 18,
    msonfcArabicScript = 19,
    msonfcLastAlpha = 19,
    msonfcFirstSpecial = 20,
    msonfcUCRoman = 20,
    msonfcLCRoman = 21,
    msonfcHebrew = 22,
    msonfcDbNum3 = 23,
    msonfcChnCmplx = 24,
    msonfcKorDbNum3 = 25,
    msonfcZodiac1 = 26,
    msonfcZodiac2 = 27,
    msonfcZodiac3 = 28,
    msonfcLastSpecial = 28
};

typedef enum MSXMLRegistry::ValueName {
    XSLProcessorMultiplier = 0,
    DebugMaxLines = 1,
    AssertToFile = 2,
    AssertNoPopup = 3,
    NormalizeAttributeValuesDefaultValue = 4
};

typedef enum MatchType {
    NONE = 0,
    ELEMENT = 1,
    ATTRIBUTE = 2,
    NAMESPACE = 4,
    TEXT = 8,
    PI = 16,
    COMMENT = 32,
    DOCUMENT = 64,
    NONATTRIBUTE = 121,
    ALL = 127
};

typedef enum Matcher::MatchType {
    NONE = 0,
    ELEMENT = 1,
    ATTRIBUTE = 2,
    NAMESPACE = 4,
    TEXT = 8,
    PI = 16,
    COMMENT = 32,
    DOCUMENT = 64,
    NONATTRIBUTE = 121,
    ALL = 127
};

typedef enum Microsoft::WRL::AsyncResultType {
    SingleResult = 1,
    MultipleResults = 2
};

typedef enum Microsoft::WRL::CancelTransitionPolicy {
    RemainCanceled = 0,
    TransitionFromCanceled = 1
};

typedef enum Microsoft::WRL::DelegateCheckMode {
    NoCheck = 1
};

typedef enum Microsoft::WRL::Details::AsyncStatusInternal {
    _Undefined = -2,
    _Created = -1,
    _Started = 0,
    _Completed = 1,
    _Canceled = 2,
    _Error = 3,
    _Closed = 4
};

typedef enum Microsoft::WRL::ErrorPropagationPolicy {
    PropagateDelegateError = 1,
    IgnoreDelegateError = 2
};

typedef enum Microsoft::WRL::FactoryCacheFlags {
    FactoryCacheDefault = 0,
    FactoryCacheEnabled = 1,
    FactoryCacheDisabled = 2
};

typedef enum Microsoft::WRL::InvokeMode {
    StopOnFirstError = 1,
    FireAll = 2
};

typedef enum Microsoft::WRL::ModuleType {
    InProc = 1,
    OutOfProc = 2,
    DisableCaching = 4,
    InProcDisableCaching = 5,
    OutOfProcDisableCaching = 6
};

typedef enum Microsoft::WRL::RuntimeClassType {
    WinRt = 1,
    ClassicCom = 2,
    WinRtClassicComMix = 3,
    InhibitWeakReference = 4,
    Delegate = 2,
    InhibitFtmBase = 8,
    InhibitRoOriginateError = 16
};

typedef enum Microsoft::WRL::RuntimeClassType_CustomIUnknown {
    CustomIUnknown = 4096,
    RuntimeClassFlagsXml = 4103
};

typedef enum NameParseEnum {
    NAME_NONE = 0,
    NAME_SIMPLE = 1,
    NAME_DTD = 2
};

typedef enum NewNoException {
    NewNoExceptionEnum = 0
};

typedef enum NewNodeNotifyEnum {
    NoNewNodeNotifications = 0,
    NewNodeNotify = 1
};

typedef enum NewZeroMemory {
    NewZeroMemoryEnum = 0
};

typedef enum Node::NodeType {
    ANY = -1,
    ELEMENT = 0,
    PCDATA = 1,
    COMMENT = 2,
    DOCUMENT = 3,
    DOCTYPE = 4,
    PI = 5,
    CDATA = 6,
    ENTITY = 7,
    NOTATION = 8,
    ELEMENTDECL = 9,
    __NAMESPACE = 10,
    ENTITYREF = 11,
    __WHITESPACE = 12,
    __INCLUDESECTION = 13,
    __IGNORESECTION = 14,
    ATTRIBUTE = 15,
    TYPEDVALUE = 16,
    DOCFRAG = 17,
    XMLDECL = 18
};

typedef enum NodeLocation::LocationFlags {
    NMSP_LOC = 1,
    DEF_NMSP_LOC = 2,
    ATTR_LOC = 3,
    DEF_ATTR_LOC = 4,
    SINGLE_TEXT_LOC = 5,
    CHILD_LOC = 6
};

typedef enum NodeType {
    PATH = 0,
    UNION = 1
};

typedef enum NumberStyles {
    NumberStyles_None = 0,
    NumberStyles_AllowLeadingWhite = 1,
    NumberStyles_AllowTrailingWhite = 2,
    NumberStyles_AllowLeadingSign = 4,
    NumberStyles_AllowTrailingSign = 8,
    NumberStyles_AllowParentheses = 16,
    NumberStyles_AllowDecimalPoint = 32,
    NumberStyles_AllowThousands = 64,
    NumberStyles_AllowExponent = 128,
    NumberStyles_AllowCurrencySymbol = 256,
    NumberStyles_AllowHexSpecifier = 512,
    NumberStyles_OverflowInvalid = 1024
};

typedef enum NumberingOptions::LetterValue {
    ALPHABETIC = 0,
    TRADITIONAL = 1
};

typedef enum NumberingOptions::LevelType {
    SINGLE = 0,
    MULTIPLE = 1,
    ANY = 2
};

typedef enum NumericOp {
    Add = 0,
    Subtract = 1,
    Negate = 2,
    Modulo = 3,
    Divide = 4,
    Multiply = 5
};

typedef enum OFFER_PRIORITY {
    VmOfferPriorityVeryLow = 1,
    VmOfferPriorityLow = 2,
    VmOfferPriorityBelowNormal = 3,
    VmOfferPriorityNormal = 4
};

typedef enum OLECMDEXECOPT {
    OLECMDEXECOPT_DODEFAULT = 0,
    OLECMDEXECOPT_PROMPTUSER = 1,
    OLECMDEXECOPT_DONTPROMPTUSER = 2,
    OLECMDEXECOPT_SHOWHELP = 3
};

typedef enum OLECMDF {
    OLECMDF_SUPPORTED = 1,
    OLECMDF_ENABLED = 2,
    OLECMDF_LATCHED = 4,
    OLECMDF_NINCHED = 8,
    OLECMDF_INVISIBLE = 16,
    OLECMDF_DEFHIDEONCTXTMENU = 32
};

typedef enum OLECMDID {
    OLECMDID_OPEN = 1,
    OLECMDID_NEW = 2,
    OLECMDID_SAVE = 3,
    OLECMDID_SAVEAS = 4,
    OLECMDID_SAVECOPYAS = 5,
    OLECMDID_PRINT = 6,
    OLECMDID_PRINTPREVIEW = 7,
    OLECMDID_PAGESETUP = 8,
    OLECMDID_SPELL = 9,
    OLECMDID_PROPERTIES = 10,
    OLECMDID_CUT = 11,
    OLECMDID_COPY = 12,
    OLECMDID_PASTE = 13,
    OLECMDID_PASTESPECIAL = 14,
    OLECMDID_UNDO = 15,
    OLECMDID_REDO = 16,
    OLECMDID_SELECTALL = 17,
    OLECMDID_CLEARSELECTION = 18,
    OLECMDID_ZOOM = 19,
    OLECMDID_GETZOOMRANGE = 20,
    OLECMDID_UPDATECOMMANDS = 21,
    OLECMDID_REFRESH = 22,
    OLECMDID_STOP = 23,
    OLECMDID_HIDETOOLBARS = 24,
    OLECMDID_SETPROGRESSMAX = 25,
    OLECMDID_SETPROGRESSPOS = 26,
    OLECMDID_SETPROGRESSTEXT = 27,
    OLECMDID_SETTITLE = 28,
    OLECMDID_SETDOWNLOADSTATE = 29,
    OLECMDID_STOPDOWNLOAD = 30,
    OLECMDID_ONTOOLBARACTIVATED = 31,
    OLECMDID_FIND = 32,
    OLECMDID_DELETE = 33,
    OLECMDID_HTTPEQUIV = 34,
    OLECMDID_HTTPEQUIV_DONE = 35,
    OLECMDID_ENABLE_INTERACTION = 36,
    OLECMDID_ONUNLOAD = 37,
    OLECMDID_PROPERTYBAG2 = 38,
    OLECMDID_PREREFRESH = 39,
    OLECMDID_SHOWSCRIPTERROR = 40,
    OLECMDID_SHOWMESSAGE = 41,
    OLECMDID_SHOWFIND = 42,
    OLECMDID_SHOWPAGESETUP = 43,
    OLECMDID_SHOWPRINT = 44,
    OLECMDID_CLOSE = 45,
    OLECMDID_ALLOWUILESSSAVEAS = 46,
    OLECMDID_DONTDOWNLOADCSS = 47,
    OLECMDID_UPDATEPAGESTATUS = 48,
    OLECMDID_PRINT2 = 49,
    OLECMDID_PRINTPREVIEW2 = 50,
    OLECMDID_SETPRINTTEMPLATE = 51,
    OLECMDID_GETPRINTTEMPLATE = 52,
    OLECMDID_PAGEACTIONBLOCKED = 55,
    OLECMDID_PAGEACTIONUIQUERY = 56,
    OLECMDID_FOCUSVIEWCONTROLS = 57,
    OLECMDID_FOCUSVIEWCONTROLSQUERY = 58,
    OLECMDID_SHOWPAGEACTIONMENU = 59,
    OLECMDID_ADDTRAVELENTRY = 60,
    OLECMDID_UPDATETRAVELENTRY = 61,
    OLECMDID_UPDATEBACKFORWARDSTATE = 62,
    OLECMDID_OPTICAL_ZOOM = 63,
    OLECMDID_OPTICAL_GETZOOMRANGE = 64,
    OLECMDID_WINDOWSTATECHANGED = 65,
    OLECMDID_ACTIVEXINSTALLSCOPE = 66,
    OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = 67,
    OLECMDID_SHOWTASKDLG = 68,
    OLECMDID_POPSTATEEVENT = 69,
    OLECMDID_VIEWPORT_MODE = 70,
    OLECMDID_LAYOUT_VIEWPORT_WIDTH = 71,
    OLECMDID_VISUAL_VIEWPORT_EXCLUDE_BOTTOM = 72,
    OLECMDID_USER_OPTICAL_ZOOM = 73,
    OLECMDID_PAGEAVAILABLE = 74,
    OLECMDID_GETUSERSCALABLE = 75,
    OLECMDID_UPDATE_CARET = 76,
    OLECMDID_ENABLE_VISIBILITY = 77,
    OLECMDID_MEDIA_PLAYBACK = 78,
    OLECMDID_SETFAVICON = 79,
    OLECMDID_SET_HOST_FULLSCREENMODE = 80,
    OLECMDID_EXITFULLSCREEN = 81,
    OLECMDID_SCROLLCOMPLETE = 82,
    OLECMDID_ONBEFOREUNLOAD = 83,
    OLECMDID_SHOWMESSAGE_BLOCKABLE = 84,
    OLECMDID_SHOWTASKDLG_BLOCKABLE = 85
};

typedef enum OLECMDID_BROWSERSTATEFLAG {
    OLECMDIDF_BROWSERSTATE_EXTENSIONSOFF = 1,
    OLECMDIDF_BROWSERSTATE_IESECURITY = 2,
    OLECMDIDF_BROWSERSTATE_PROTECTEDMODE_OFF = 4,
    OLECMDIDF_BROWSERSTATE_RESET = 8,
    OLECMDIDF_BROWSERSTATE_REQUIRESACTIVEX = 16,
    OLECMDIDF_BROWSERSTATE_DESKTOPHTMLDIALOG = 32,
    OLECMDIDF_BROWSERSTATE_BLOCKEDVERSION = 64
};

typedef enum OLECMDID_OPTICAL_ZOOMFLAG {
    OLECMDIDF_OPTICAL_ZOOM_NOPERSIST = 1,
    OLECMDIDF_OPTICAL_ZOOM_NOLAYOUT = 16,
    OLECMDIDF_OPTICAL_ZOOM_NOTRANSIENT = 32,
    OLECMDIDF_OPTICAL_ZOOM_RELOADFORNEWTAB = 64
};

typedef enum OLECMDID_PAGEACTIONFLAG {
    OLECMDIDF_PAGEACTION_FILEDOWNLOAD = 1,
    OLECMDIDF_PAGEACTION_ACTIVEXINSTALL = 2,
    OLECMDIDF_PAGEACTION_ACTIVEXTRUSTFAIL = 4,
    OLECMDIDF_PAGEACTION_ACTIVEXUSERDISABLE = 8,
    OLECMDIDF_PAGEACTION_ACTIVEXDISALLOW = 16,
    OLECMDIDF_PAGEACTION_ACTIVEXUNSAFE = 32,
    OLECMDIDF_PAGEACTION_POPUPWINDOW = 64,
    OLECMDIDF_PAGEACTION_LOCALMACHINE = 128,
    OLECMDIDF_PAGEACTION_MIMETEXTPLAIN = 256,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE = 512,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXINSTALL = 512,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 1024,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNTRUSTED = 2048,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTRANET = 4096,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTERNET = 8192,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNRESTRICTED = 16384,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNDENY = 0x8000,
    OLECMDIDF_PAGEACTION_POPUPALLOWED = 0x10000,
    OLECMDIDF_PAGEACTION_SCRIPTPROMPT = 0x20000,
    OLECMDIDF_PAGEACTION_ACTIVEXUSERAPPROVAL = 0x40000,
    OLECMDIDF_PAGEACTION_MIXEDCONTENT = 0x80000,
    OLECMDIDF_PAGEACTION_INVALID_CERT = 0x100000,
    OLECMDIDF_PAGEACTION_INTRANETZONEREQUEST = 0x200000,
    OLECMDIDF_PAGEACTION_XSSFILTERED = 0x400000,
    OLECMDIDF_PAGEACTION_SPOOFABLEIDNHOST = 0x800000,
    OLECMDIDF_PAGEACTION_ACTIVEX_EPM_INCOMPATIBLE = 0x1000000,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXUSERAPPROVAL = 0x2000000,
    OLECMDIDF_PAGEACTION_WPCBLOCKED = 0x4000000,
    OLECMDIDF_PAGEACTION_WPCBLOCKED_ACTIVEX = 0x8000000,
    OLECMDIDF_PAGEACTION_EXTENSION_COMPAT_BLOCKED = 0x10000000,
    OLECMDIDF_PAGEACTION_NORESETACTIVEX = 0x20000000,
    OLECMDIDF_PAGEACTION_GENERIC_STATE = 0x40000000,
    OLECMDIDF_PAGEACTION_RESET = -2147483648
};

typedef enum OLECMDID_REFRESHFLAG {
    OLECMDIDF_REFRESH_NORMAL = 0,
    OLECMDIDF_REFRESH_IFEXPIRED = 1,
    OLECMDIDF_REFRESH_CONTINUE = 2,
    OLECMDIDF_REFRESH_COMPLETELY = 3,
    OLECMDIDF_REFRESH_NO_CACHE = 4,
    OLECMDIDF_REFRESH_RELOAD = 5,
    OLECMDIDF_REFRESH_LEVELMASK = 255,
    OLECMDIDF_REFRESH_CLEARUSERINPUT = 4096,
    OLECMDIDF_REFRESH_PROMPTIFOFFLINE = 8192,
    OLECMDIDF_REFRESH_THROUGHSCRIPT = 16384,
    OLECMDIDF_REFRESH_SKIPBEFOREUNLOADEVENT = 0x8000,
    OLECMDIDF_REFRESH_PAGEACTION_ACTIVEXINSTALL = 0x10000,
    OLECMDIDF_REFRESH_PAGEACTION_FILEDOWNLOAD = 0x20000,
    OLECMDIDF_REFRESH_PAGEACTION_LOCALMACHINE = 0x40000,
    OLECMDIDF_REFRESH_PAGEACTION_POPUPWINDOW = 0x80000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 0x100000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNTRUSTED = 0x200000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTRANET = 0x400000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTERNET = 0x800000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNRESTRICTED = 0x1000000,
    OLECMDIDF_REFRESH_PAGEACTION_MIXEDCONTENT = 0x2000000,
    OLECMDIDF_REFRESH_PAGEACTION_INVALID_CERT = 0x4000000,
    OLECMDIDF_REFRESH_PAGEACTION_ALLOW_VERSION = 0x8000000
};

typedef enum OLECMDID_VIEWPORT_MODE_FLAG {
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH = 1,
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM = 2,
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH_VALID = 0x10000,
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM_VALID = 0x20000
};

typedef enum OLECMDID_WINDOWSTATE_FLAG {
    OLECMDIDF_WINDOWSTATE_USERVISIBLE = 1,
    OLECMDIDF_WINDOWSTATE_ENABLED = 2,
    OLECMDIDF_WINDOWSTATE_USERVISIBLE_VALID = 0x10000,
    OLECMDIDF_WINDOWSTATE_ENABLED_VALID = 0x20000
};

typedef enum OLECMDTEXTF {
    OLECMDTEXTF_NONE = 0,
    OLECMDTEXTF_NAME = 1,
    OLECMDTEXTF_STATUS = 2
};

typedef enum OLE_TRISTATE {
    triUnchecked = 0,
    triChecked = 1,
    triGray = 2
};

typedef enum OPCODE {
    OP_OWS = 0,
    OP_WS = 1,
    OP_CHAR = 2,
    OP_CHAR2 = 3,
    OP_PEEK = 4,
    OP_NAME = 5,
    OP_TOKEN = 6,
    OP_STRING = 7,
    OP_EXTID = 8,
    OP_STRCMP = 9,
    OP_POP = 10,
    OP_NWS = 11,
    OP_SUBSET = 12,
    OP_PUBIDOPTION = 13,
    OP_NMTOKEN = 14,
    OP_TABLE = 15,
    OP_STABLE = 16,
    OP_COMMENT = 17,
    OP_CONDSECT = 18,
    OP_SNCHAR = 19,
    OP_EQUALS = 20,
    OP_ENCODING = 21,
    OP_CHARWS = 22,
    OP_ATTRVAL = 23,
    OP_PETEST = 24,
    OP_ATTEXPAND = 25,
    OP_NMSTRING = 26,
    OP_FAKESYSTEM = 27,
    OP_EXTIDVAL = 28
};

typedef enum ORIENTATION_PREFERENCE {
    ORIENTATION_PREFERENCE_NONE = 0,
    ORIENTATION_PREFERENCE_LANDSCAPE = 1,
    ORIENTATION_PREFERENCE_PORTRAIT = 2,
    ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4,
    ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8
};

typedef enum OfflineFolderStatus {
    OFS_INACTIVE = -1,
    OFS_ONLINE = 0,
    OFS_OFFLINE = 1,
    OFS_SERVERBACK = 2,
    OFS_DIRTYCACHE = 3
};

typedef enum OpType {
    tUnknown = 0,
    tString = 4,
    tNumber = 3,
    tBoolean = 1,
    tNodeSet = 6,
    tRTF = 5
};

typedef enum OptimizeAttrs::DerivedFlags {
    NO_DERIVED = 0,
    NEEDS_POSITION = 1,
    NEEDS_LAST = 2
};

typedef enum OptimizeFlags {
    MATCH_OPT = 1,
    EXPR_OPT = 2,
    MATCH_TO_EXPR = 4
};

typedef enum OptionsEnum {
    NoOptions = 0,
    Async = 1,
    NotAsync = 0,
    ResolveExternals = 2,
    NotResolveExternals = 0,
    Validate = 4,
    NotValidate = 0,
    ServerHTTP = 8,
    NotServerHTTP = 0,
    ForcedResync = 16,
    NoForcedResync = 0
};

typedef enum OutputType {
    OutputText = 0,
    OutputXML = 1,
    OutputHTML = 2
};

typedef enum PAGEACTION_UI {
    PAGEACTION_UI_DEFAULT = 0,
    PAGEACTION_UI_MODAL = 1,
    PAGEACTION_UI_MODELESS = 2,
    PAGEACTION_UI_SILENT = 3
};

typedef enum PIDMSI_STATUS_VALUE {
    PIDMSI_STATUS_NORMAL = 0,
    PIDMSI_STATUS_NEW = 1,
    PIDMSI_STATUS_PRELIM = 2,
    PIDMSI_STATUS_DRAFT = 3,
    PIDMSI_STATUS_INPROGRESS = 4,
    PIDMSI_STATUS_EDIT = 5,
    PIDMSI_STATUS_REVIEW = 6,
    PIDMSI_STATUS_PROOF = 7,
    PIDMSI_STATUS_FINAL = 8,
    PIDMSI_STATUS_OTHER = 32767
};

typedef enum POINTER_FEEDBACK_MODE {
    POINTER_FEEDBACK_DEFAULT = 1,
    POINTER_FEEDBACK_INDIRECT = 2,
    POINTER_FEEDBACK_NONE = 3
};

typedef enum POWER_ACTION {
    PowerActionNone = 0,
    PowerActionReserved = 1,
    PowerActionSleep = 2,
    PowerActionHibernate = 3,
    PowerActionShutdown = 4,
    PowerActionShutdownReset = 5,
    PowerActionShutdownOff = 6,
    PowerActionWarmEject = 7,
    PowerActionDisplayOff = 8
};

typedef enum POWER_INFORMATION_LEVEL {
    SystemPowerPolicyAc = 0,
    SystemPowerPolicyDc = 1,
    VerifySystemPolicyAc = 2,
    VerifySystemPolicyDc = 3,
    SystemPowerCapabilities = 4,
    SystemBatteryState = 5,
    SystemPowerStateHandler = 6,
    ProcessorStateHandler = 7,
    SystemPowerPolicyCurrent = 8,
    AdministratorPowerPolicy = 9,
    SystemReserveHiberFile = 10,
    ProcessorInformation = 11,
    SystemPowerInformation = 12,
    ProcessorStateHandler2 = 13,
    LastWakeTime = 14,
    LastSleepTime = 15,
    SystemExecutionState = 16,
    SystemPowerStateNotifyHandler = 17,
    ProcessorPowerPolicyAc = 18,
    ProcessorPowerPolicyDc = 19,
    VerifyProcessorPowerPolicyAc = 20,
    VerifyProcessorPowerPolicyDc = 21,
    ProcessorPowerPolicyCurrent = 22,
    SystemPowerStateLogging = 23,
    SystemPowerLoggingEntry = 24,
    SetPowerSettingValue = 25,
    NotifyUserPowerSetting = 26,
    PowerInformationLevelUnused0 = 27,
    SystemMonitorHiberBootPowerOff = 28,
    SystemVideoState = 29,
    TraceApplicationPowerMessage = 30,
    TraceApplicationPowerMessageEnd = 31,
    ProcessorPerfStates = 32,
    ProcessorIdleStates = 33,
    ProcessorCap = 34,
    SystemWakeSource = 35,
    SystemHiberFileInformation = 36,
    TraceServicePowerMessage = 37,
    ProcessorLoad = 38,
    PowerShutdownNotification = 39,
    MonitorCapabilities = 40,
    SessionPowerInit = 41,
    SessionDisplayState = 42,
    PowerRequestCreate = 43,
    PowerRequestAction = 44,
    GetPowerRequestList = 45,
    ProcessorInformationEx = 46,
    NotifyUserModeLegacyPowerEvent = 47,
    GroupPark = 48,
    ProcessorIdleDomains = 49,
    WakeTimerList = 50,
    SystemHiberFileSize = 51,
    ProcessorIdleStatesHv = 52,
    ProcessorPerfStatesHv = 53,
    ProcessorPerfCapHv = 54,
    ProcessorSetIdle = 55,
    LogicalProcessorIdling = 56,
    UserPresence = 57,
    PowerSettingNotificationName = 58,
    GetPowerSettingValue = 59,
    IdleResiliency = 60,
    SessionRITState = 61,
    SessionConnectNotification = 62,
    SessionPowerCleanup = 63,
    SessionLockState = 64,
    SystemHiberbootState = 65,
    PlatformInformation = 66,
    PdcInvocation = 67,
    MonitorInvocation = 68,
    FirmwareTableInformationRegistered = 69,
    SetShutdownSelectedTime = 70,
    SuspendResumeInvocation = 71,
    PlmPowerRequestCreate = 72,
    ScreenOff = 73,
    CsDeviceNotification = 74,
    PlatformRole = 75,
    LastResumePerformance = 76,
    DisplayBurst = 77,
    ExitLatencySamplingPercentage = 78,
    RegisterSpmPowerSettings = 79,
    PlatformIdleStates = 80,
    ProcessorIdleVeto = 81,
    PlatformIdleVeto = 82,
    SystemBatteryStatePrecise = 83,
    ThermalEvent = 84,
    PowerRequestActionInternal = 85,
    BatteryDeviceState = 86,
    PowerInformationInternal = 87,
    ThermalStandby = 88,
    SystemHiberFileType = 89,
    PhysicalPowerButtonPress = 90,
    QueryPotentialDripsConstraint = 91,
    EnergyTrackerCreate = 92,
    EnergyTrackerQuery = 93,
    UpdateBlackBoxRecorder = 94,
    PowerInformationLevelMaximum = 95
};

typedef enum POWER_MONITOR_REQUEST_REASON {
    MonitorRequestReasonUnknown = 0,
    MonitorRequestReasonPowerButton = 1,
    MonitorRequestReasonRemoteConnection = 2,
    MonitorRequestReasonScMonitorpower = 3,
    MonitorRequestReasonUserInput = 4,
    MonitorRequestReasonAcDcDisplayBurst = 5,
    MonitorRequestReasonUserDisplayBurst = 6,
    MonitorRequestReasonPoSetSystemState = 7,
    MonitorRequestReasonSetThreadExecutionState = 8,
    MonitorRequestReasonFullWake = 9,
    MonitorRequestReasonSessionUnlock = 10,
    MonitorRequestReasonScreenOffRequest = 11,
    MonitorRequestReasonIdleTimeout = 12,
    MonitorRequestReasonPolicyChange = 13,
    MonitorRequestReasonSleepButton = 14,
    MonitorRequestReasonLid = 15,
    MonitorRequestReasonBatteryCountChange = 16,
    MonitorRequestReasonGracePeriod = 17,
    MonitorRequestReasonPnP = 18,
    MonitorRequestReasonDP = 19,
    MonitorRequestReasonSxTransition = 20,
    MonitorRequestReasonSystemIdle = 21,
    MonitorRequestReasonNearProximity = 22,
    MonitorRequestReasonThermalStandby = 23,
    MonitorRequestReasonResumePdc = 24,
    MonitorRequestReasonResumeS4 = 25,
    MonitorRequestReasonTerminal = 26,
    MonitorRequestReasonPdcSignal = 27,
    MonitorRequestReasonAcDcDisplayBurstSuppressed = 28,
    MonitorRequestReasonSystemStateEntered = 29,
    MonitorRequestReasonWinrt = 30,
    MonitorRequestReasonUserInputKeyboard = 31,
    MonitorRequestReasonUserInputMouse = 32,
    MonitorRequestReasonUserInputTouch = 33,
    MonitorRequestReasonUserInputPen = 34,
    MonitorRequestReasonUserInputAccelerometer = 35,
    MonitorRequestReasonUserInputHid = 36,
    MonitorRequestReasonUserInputPoUserPresent = 37,
    MonitorRequestReasonUserInputSessionSwitch = 38,
    MonitorRequestReasonUserInputInitialization = 39,
    MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40,
    MonitorRequestReasonPdcSignalWindowsMobileShell = 41,
    MonitorRequestReasonPdcSignalHeyCortana = 42,
    MonitorRequestReasonPdcSignalHolographicShell = 43,
    MonitorRequestReasonPdcSignalFingerprint = 44,
    MonitorRequestReasonDirectedDrips = 45,
    MonitorRequestReasonMax = 46
};

typedef enum POWER_STATE_DISABLED_TYPE {
    PoDisabledStateSleeping1 = 0,
    PoDisabledStateSleeping2 = 1,
    PoDisabledStateSleeping3 = 2,
    PoDisabledStateSleeping4 = 3,
    PoDisabledStateSleeping0Idle = 4,
    PoDisabledStateReserved5 = 5,
    PoDisabledStateSleeping4Firmware = 6,
    PoDisabledStateMaximum = 7
};

typedef enum POWER_STATE_HANDLER_TYPE {
    PowerStateSleeping1 = 0,
    PowerStateSleeping2 = 1,
    PowerStateSleeping3 = 2,
    PowerStateSleeping4 = 3,
    PowerStateShutdownOff = 4,
    PowerStateShutdownReset = 5,
    PowerStateSleeping4Firmware = 6,
    PowerStateMaximum = 7
};

typedef enum POWER_USER_PRESENCE_TYPE {
    UserNotPresent = 0,
    UserPresent = 1,
    UserUnknown = 255
};

typedef enum PO_FIXED_WAKE_SOURCE_TYPE {
    FixedWakeSourcePowerButton = 0,
    FixedWakeSourceSleepButton = 1,
    FixedWakeSourceRtc = 2,
    FixedWakeSourceDozeToHibernate = 3
};

typedef enum PO_INTERNAL_WAKE_SOURCE_TYPE {
    InternalWakeSourceDozeToHibernate = 0,
    InternalWakeSourcePredictedUserPresence = 1
};

typedef enum PO_WAKE_SOURCE_TYPE {
    DeviceWakeSourceType = 0,
    FixedWakeSourceType = 1,
    TimerWakeSourceType = 2,
    TimerPresumedWakeSourceType = 3,
    InternalWakeSourceType = 4
};

typedef enum PROXY_PHASE {
    PROXY_CALCSIZE = 0,
    PROXY_GETBUFFER = 1,
    PROXY_MARSHAL = 2,
    PROXY_SENDRECEIVE = 3,
    PROXY_UNMARSHAL = 4
};

typedef enum PS_CREATE_STATE {
    PsCreateInitialState = 0,
    PsCreateFailOnFileOpen = 1,
    PsCreateFailOnSectionCreate = 2,
    PsCreateFailExeFormat = 3,
    PsCreateFailMachineMismatch = 4,
    PsCreateFailExeName = 5,
    PsCreateSuccess = 6,
    PsCreateMaximumStates = 7
};

typedef enum ParseFlags {
    NONE = 0,
    NO_CURRENT = 1,
    NO_VARIABLES = 2,
    NO_KEYS = 4,
    FWD_COMPAT = 8,
    NO_OPT = 16
};

typedef enum ParseScope {
    Document = 0,
    InternalSubset = 1,
    ExternalSubset = 2
};

typedef enum ParseState {
    ParsePrefix = 0,
    ParseInteger = 1,
    ParseFraction = 2
};

typedef enum ParseType {
    MatchPattern = 0,
    LocationPath = 1,
    Expression = 2,
    AVT = 3,
    XsdPattern = 4
};

typedef enum PathNode::PathOp {
    tAncestor = 0,
    tAncestorSelf = 1,
    tAttribute = 2,
    tChild = 3,
    tDescendant = 4,
    tDescendantSelf = 5,
    tFollowing = 6,
    tFollowingSibling = 7,
    tNamespace = 8,
    tParent = 9,
    tPreceding = 10,
    tPrecedingSibling = 11,
    tSelf = 12
};

typedef enum PathOp {
    tAncestor = 0,
    tAncestorSelf = 1,
    tAttribute = 2,
    tChild = 3,
    tDescendant = 4,
    tDescendantSelf = 5,
    tFollowing = 6,
    tFollowingSibling = 7,
    tNamespace = 8,
    tParent = 9,
    tPreceding = 10,
    tPrecedingSibling = 11,
    tSelf = 12
};

typedef enum PeepholeOptimize::InstrFlags {
    ALIAS_LOC = 1,
    DISABLE_ESCAPING = 2
};

typedef enum PeepholeOptimize::InstrState {
    EMPTY_STATE = 0,
    ELEM_BEGIN = 1,
    ELEM_WS = 2,
    ELEM_LITERAL_TEXT = 3,
    ELEM_PARAM_TEXT = 4,
    ATTR_BEGIN = 5,
    ATTR_LITERAL_TEXT = 6,
    ATTR_PARAM_TEXT = 7,
    FRAG_BEGIN = 8,
    FRAG_TEXT = 9
};

typedef enum ProcessState {
    UnInit = 0,
    Loaded = 1,
    Interactive = 2,
    InTransform = 3,
    Aborting = 4,
    Complete = 5
};

typedef enum REFTYPE {
    REF_ID = 0,
    REF_NOTATION = 1
};

typedef enum RO_ERROR_REPORTING_FLAGS {
    RO_ERROR_REPORTING_NONE = 0,
    RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 1,
    RO_ERROR_REPORTING_FORCEEXCEPTIONS = 2,
    RO_ERROR_REPORTING_USESETERRORINFO = 4,
    RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 8
};

typedef enum RO_INIT_TYPE {
    RO_INIT_SINGLETHREADED = 0,
    RO_INIT_MULTITHREADED = 1
};

typedef enum RPC_ADDRESS_CHANGE_TYPE {
    PROTOCOL_NOT_LOADED = 1,
    PROTOCOL_LOADED = 2,
    PROTOCOL_ADDRESS_CHANGE = 3
};

typedef enum RTLWOW64_CROSSPROCESS_WORK_OPERATION {
    CrossProcOperationMemoryAllocPreNotify = 0,
    CrossProcOperationMemoryAllocPostNotify = 1,
    CrossProcOperationMemoryFreePreNotify = 2,
    CrossProcOperationMemoryFreePostNotify = 3,
    CrossProcOperationMemoryProtectPreNotify = 4,
    CrossProcOperationMemoryProtectPostNotify = 5,
    CrossProcOperationInstructionCacheFlush = 6
};

typedef enum RTL_BSD_ITEM_TYPE {
    RtlBsdItemVersionNumber = 0,
    RtlBsdItemProductType = 1,
    RtlBsdItemAabEnabled = 2,
    RtlBsdItemAabTimeout = 3,
    RtlBsdItemBootGood = 4,
    RtlBsdItemBootShutdown = 5,
    RtlBsdSleepInProgress = 6,
    RtlBsdPowerTransition = 7,
    RtlBsdItemBootAttemptCount = 8,
    RtlBsdItemBootCheckpoint = 9,
    RtlBsdItemBootId = 10,
    RtlBsdItemShutdownBootId = 11,
    RtlBsdItemReportedAbnormalShutdownBootId = 12,
    RtlBsdItemErrorInfo = 13,
    RtlBsdItemPowerButtonPressInfo = 14,
    RtlBsdItemChecksum = 15,
    RtlBsdPowerTransitionExtension = 16,
    RtlBsdItemMax = 17
};

typedef enum RTL_DISK_SPACE_POLICY {
    RtlDiskSpacePolicyVeryLow = 5,
    RtlDiskSpacePolicyLow = 10,
    RtlDiskSpacePolicyBelowNormal = 15,
    RtlDiskSpacePolicyNormal = 20
};

typedef enum RTL_DISK_SPEED_POLICY {
    RtlDiskSpeedPolicyNormal = 10,
    RtlDiskSpeedPolicyFast = 20
};

typedef enum RTL_DISK_WRITE_CONSTRAINT_POLICY {
    RtlDiskWriteConstraintPolicyLimited = 50,
    RtlDiskWriteConstraintPolicyNormal = 100
};

typedef enum RTL_PHYSICAL_MEMORY_POLICY {
    RtlPhysicalMemoryPolicyLow = 10,
    RtlPhysicalMemoryPolicyNormal = 20
};

typedef enum RefAttachEnum {
    RefAttach = 0
};

typedef enum RegexOptions {
    REGEXOPTIONS_NONE = 0,
    REGEXOPTIONS_IGNORECASE = 1,
    REGEXOPTIONS_MULTILINE = 2,
    REGEXOPTIONS_EXPLICITCAPTURE = 4,
    REGEXOPTIONS_COMPILED = 8,
    REGEXOPTIONS_SINGLELINE = 16,
    REGEXOPTIONS_IGNOREPATTERNWHITESPACE = 32,
    REGEXOPTIONS_RIGHTTOLEFT = 64
};

typedef enum ReplacesCorHdrNumericDefines {
    COMIMAGE_FLAGS_ILONLY = 1,
    COMIMAGE_FLAGS_32BITREQUIRED = 2,
    COMIMAGE_FLAGS_IL_LIBRARY = 4,
    COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
    COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,
    COR_VERSION_MAJOR_V2 = 2,
    COR_VERSION_MAJOR = 2,
    COR_VERSION_MINOR = 5,
    COR_DELETED_NAME_LENGTH = 8,
    COR_VTABLEGAP_NAME_LENGTH = 8,
    NATIVE_TYPE_MAX_CB = 1,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
    IMAGE_COR_MIH_METHODRVA = 1,
    IMAGE_COR_MIH_EHRVA = 2,
    IMAGE_COR_MIH_BASICBLOCK = 8,
    COR_VTABLE_32BIT = 1,
    COR_VTABLE_64BIT = 2,
    COR_VTABLE_FROM_UNMANAGED = 4,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
    COR_VTABLE_CALL_MOST_DERIVED = 16,
    IMAGE_COR_EATJ_THUNK_SIZE = 32,
    MAX_CLASS_NAME = 1024,
    MAX_PACKAGE_NAME = 1024
};

typedef enum RestrictionFlags {
    RestrictionFlags_Length = 1,
    RestrictionFlags_MinLength = 2,
    RestrictionFlags_MaxLength = 4,
    RestrictionFlags_Pattern = 8,
    RestrictionFlags_Enumeration = 16,
    RestrictionFlags_WhiteSpace = 32,
    RestrictionFlags_MaxInclusive = 64,
    RestrictionFlags_MaxExclusive = 128,
    RestrictionFlags_MinInclusive = 256,
    RestrictionFlags_MinExclusive = 512,
    RestrictionFlags_TotalDigits = 1024,
    RestrictionFlags_FractionDigits = 2048
};

typedef enum RetType {
    tUnknown = 0,
    tBoolean = 1,
    tInt = 2,
    tR8 = 3,
    tString = 4,
    tRTF = 5,
    tNodeSet = 6,
    tPointer = 7,
    tObject = 8,
    tLastType = 8
};

typedef enum RoVariant::States {
    StateIsNull = 0,
    StateIsObjNoRef = 1,
    StateIsObj = 3,
    StateIsPV = 7
};

typedef enum RpcProxyPerfCounters {
    RpcCurrentUniqueUser = 1,
    RpcBackEndConnectionAttempts = 2,
    RpcBackEndConnectionFailed = 3,
    RpcRequestsPerSecond = 4,
    RpcIncomingConnections = 5,
    RpcIncomingBandwidth = 6,
    RpcOutgoingBandwidth = 7,
    RpcAttemptedLbsDecisions = 8,
    RpcFailedLbsDecisions = 9,
    RpcAttemptedLbsMessages = 10,
    RpcFailedLbsMessages = 11,
    RpcLastCounter = 12
};

typedef enum SAFETYOPERATION {
    SAFETY_INIT = 0,
    SAFETY_SCRIPT = 1,
    SAFETY_SCRIPTENGINE = 2
};

typedef enum SAXWriter::WRITER_OUTPUT_TYPE {
    OUTPUT_TYPE_BSTR = 0,
    OUTPUT_TYPE_ISTREAM = 1
};

typedef enum SAXWriter::WRITER_STATE {
    STATE_UNINITIALIZED = 0,
    STATE_UNKNOWN = 1,
    STATE_START_ELEMENT = 2,
    STATE_END_ELEMENT = 3,
    STATE_CDATA = 4,
    STATE_COMMENT = 5,
    STATE_PROCESSING_INSTRUCTION = 6,
    STATE_CLOSE_START_ELEMENT = 7,
    STATE_PENDING_NEWLINE = 8,
    STATE_IN_DTD = 9,
    STATE_PENDINGWS = 10
};

typedef enum SCHEMATYPE {
    SchemaType_None = 0,
    SchemaType_DTD = 1,
    SchemaType_XSD = 2
};

typedef enum SERVICE_DIRECTORY_TYPE {
    ServiceDirectoryPersistentState = 0,
    ServiceDirectoryTypeMax = 1
};

typedef enum SERVICE_REGISTRY_STATE_TYPE {
    ServiceRegistryStateParameters = 0,
    ServiceRegistryStatePersistent = 1,
    MaxServiceRegistryStateType = 2
};

typedef enum SE_WS_APPX_SIGNATURE_ORIGIN {
    SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0,
    SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 1,
    SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 2,
    SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 3,
    SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE = 4
};

typedef enum SHGLOBALCOUNTER {
    GLOBALCOUNTER_SEARCHMANAGER = 0,
    GLOBALCOUNTER_SEARCHOPTIONS = 1,
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE = 2,
    GLOBALCOUNTER_RATINGS = 3,
    GLOBALCOUNTER_APPROVEDSITES = 4,
    GLOBALCOUNTER_RESTRICTIONS = 5,
    GLOBALCOUNTER_SHELLSETTINGSCHANGED = 6,
    GLOBALCOUNTER_SYSTEMPIDLCHANGE = 7,
    GLOBALCOUNTER_OVERLAYMANAGER = 8,
    GLOBALCOUNTER_QUERYASSOCIATIONS = 9,
    GLOBALCOUNTER_IESESSIONS = 10,
    GLOBALCOUNTER_IEONLY_SESSIONS = 11,
    GLOBALCOUNTER_APPLICATION_DESTINATIONS = 12,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS = 13,
    GLOBALCOUNTER_BITBUCKETNUMDELETERS = 14,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES = 15,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A = 16,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B = 17,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C = 18,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D = 19,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E = 20,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F = 21,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G = 22,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H = 23,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I = 24,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J = 25,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K = 26,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L = 27,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M = 28,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N = 29,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O = 30,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P = 31,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q = 32,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R = 33,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S = 34,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T = 35,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U = 36,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V = 37,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W = 38,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X = 39,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y = 40,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z = 41,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE = 42,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT = 43,
    GLOBALCOUNTER_RECYCLEBINENUM = 44,
    GLOBALCOUNTER_RECYCLEBINCORRUPTED = 45,
    GLOBALCOUNTER_RATINGS_STATECOUNTER = 46,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE = 47,
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT = 48,
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE = 49,
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE = 50,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE = 51,
    GLOBALCOUNTER_ASSOCCHANGED = 52,
    GLOBALCOUNTER_APP_ITEMS_STATE_STORE_CACHE = 53,
    GLOBALCOUNTER_SETTINGSYNC_ENABLED = 54,
    GLOBALCOUNTER_APPSFOLDER_FILETYPEASSOCIATION_COUNTER = 55,
    GLOBALCOUNTER_USERINFOCHANGED = 56,
    GLOBALCOUNTER_SYNC_ENGINE_INFORMATION_CACHE_MACHINEWIDE = 57,
    GLOBALCOUNTER_BANNERS_DATAMODEL_CACHE_MACHINEWIDE = 58,
    GLOBALCOUNTER_MAXIMUMVALUE = 59
};

typedef enum SHREGDEL_FLAGS {
    SHREGDEL_DEFAULT = 0,
    SHREGDEL_HKCU = 1,
    SHREGDEL_HKLM = 16,
    SHREGDEL_BOTH = 17
};

typedef enum SHREGENUM_FLAGS {
    SHREGENUM_DEFAULT = 0,
    SHREGENUM_HKCU = 1,
    SHREGENUM_HKLM = 16,
    SHREGENUM_BOTH = 17
};

typedef enum STUB_PHASE {
    STUB_UNMARSHAL = 0,
    STUB_CALL_SERVER = 1,
    STUB_MARSHAL = 2,
    STUB_CALL_SERVER_NO_HRESULT = 3
};

typedef enum SXPContext::ErrorType {
    XPSyntaxError = 0,
    OtherError = 1
};

typedef enum SXPathNode::SXPathOp {
    tAttribute = 0,
    tChild = 1,
    tDescendantSelf = 2,
    tSelf = 3
};

typedef enum SXPathOp {
    tAttribute = 0,
    tChild = 1,
    tDescendantSelf = 2,
    tSelf = 3
};

typedef enum SXSyntaxNode::NodeType {
    PATH = 0,
    UNION = 1
};

typedef enum SXSyntaxNode::OptimizeFlags {
    MATCH_OPT = 1,
    EXPR_OPT = 2,
    MATCH_TO_EXPR = 4
};

typedef enum SYSGEOCLASS {
    GEOCLASS_NATION = 16,
    GEOCLASS_REGION = 14,
    GEOCLASS_ALL = 0
};

typedef enum SYSGEOTYPE {
    GEO_NATION = 1,
    GEO_LATITUDE = 2,
    GEO_LONGITUDE = 3,
    GEO_ISO2 = 4,
    GEO_ISO3 = 5,
    GEO_RFC1766 = 6,
    GEO_LCID = 7,
    GEO_FRIENDLYNAME = 8,
    GEO_OFFICIALNAME = 9,
    GEO_TIMEZONES = 10,
    GEO_OFFICIALLANGUAGES = 11,
    GEO_ISO_UN_NUMBER = 12,
    GEO_PARENT = 13,
    GEO_DIALINGCODE = 14,
    GEO_CURRENCYCODE = 15,
    GEO_CURRENCYSYMBOL = 16,
    GEO_NAME = 17,
    GEO_ID = 18
};

typedef enum SYSNLS_FUNCTION {
    COMPARE_STRING = 1
};

typedef enum SYSTEM_POWER_CONDITION {
    PoAc = 0,
    PoDc = 1,
    PoHot = 2,
    PoConditionMaximum = 3
};

typedef enum SchemaContentProcessing {
    SchemaContentProcessing_None = 0,
    SchemaContentProcessing_Skip = 1,
    SchemaContentProcessing_Lax = 2,
    SchemaContentProcessing_Strict = 3
};

typedef enum SchemaContentType {
    SchemaContentType_Empty = 0,
    SchemaContentType_TextOnly = 1,
    SchemaContentType_ElementOnly = 2,
    SchemaContentType_Mixed = 3
};

typedef enum SchemaDatatypeVariety {
    SchemaDatatypeVariety_Atomic = 0,
    SchemaDatatypeVariety_List = 1,
    SchemaDatatypeVariety_Union = 2
};

typedef enum SchemaDerivationMethod {
    SchemaDerivationMethod_Empty = 0,
    SchemaDerivationMethod_Substitution = 1,
    SchemaDerivationMethod_Extension = 2,
    SchemaDerivationMethod_Restriction = 4,
    SchemaDerivationMethod_List = 8,
    SchemaDerivationMethod_Union = 16,
    SchemaDerivationMethod_All = 255,
    SchemaDerivationMethod_None = 256,
    SchemaDerivationMethod_ElementBlockAll = 7
};

typedef enum SchemaEnum {
    SCHEMA_NAME = 0,
    SCHEMA_TYPE = 1,
    SCHEMA_MAXOCCURS = 2,
    SCHEMA_MINOCCURS = 3,
    SCHEMA_INFINITE = 4,
    SCHEMA_MODEL = 5,
    SCHEMA_OPEN = 6,
    SCHEMA_CLOSED = 7,
    SCHEMA_CONTENT = 8,
    SCHEMA_MIXED = 9,
    SCHEMA_EMPTY = 10,
    SCHEMA_ELTONLY = 11,
    SCHEMA_TEXTONLY = 12,
    SCHEMA_ORDER = 13,
    SCHEMA_GROUPORDER = 14,
    SCHEMA_SEQ = 15,
    SCHEMA_OR = 16,
    SCHEMA_MANY = 17,
    SCHEMA_REQUIRED = 18,
    SCHEMA_YES = 19,
    SCHEMA_NO = 20,
    SCHEMA_STRING = 21,
    SCHEMA_ID = 22,
    SCHEMA_IDREF = 23,
    SCHEMA_IDREFS = 24,
    SCHEMA_ENTITY = 25,
    SCHEMA_ENTITIES = 26,
    SCHEMA_NMTOKEN = 27,
    SCHEMA_NMTOKENS = 28,
    SCHEMA_ENUMERATION = 29,
    SCHEMA_DEFAULT = 30,
    SCHEMA_REQUIREDVALUE = 31,
    XSDATTR_ATTRIBUTEFORMDEFAULT = 32,
    XSDATTR_BLOCKDEFAULT = 33,
    XSDATTR_ELEMENTFORMDEFAULT = 34,
    XSDATTR_FINALDEFAULT = 35,
    XSDATTR_ID = 36,
    XSDATTR_TARGETNAMESPACE = 37,
    XSDATTR_VERSION = 38,
    XSDATTR_ABSTRACT = 39,
    XSDATTR_BLOCK = 40,
    XSDATTR_DEFAULT = 41,
    XSDATTR_EQUIVCLASS = 42,
    XSDATTR_FINAL = 43,
    XSDATTR_FIXED = 44,
    XSDATTR_FORM = 45,
    XSDATTR_MAXOCCURS = 46,
    XSDATTR_MINOCCURS = 47,
    XSDATTR_NAME = 48,
    XSDATTR_NILLABLE = 49,
    XSDATTR_REF = 50,
    XSDATTR_TYPE = 51,
    XSDATTR_USE = 52,
    XSDATTR_VALUE = 53,
    XSDATTR_BASE = 54,
    XSDATTR_CONTENT = 55,
    XSDATTR_DERIVEDBY = 56,
    XSDATTR_NAMESPACE = 57,
    XSDATTR_PROCESSCONTENTS = 58,
    XSDATTR_REFER = 59,
    XSDATTR_PUBLIC = 60,
    XSDATTR_SYSTEM = 61,
    XSDATTR_SCHEMALOCATION = 62,
    XSDATTR_SUBSTITUTIONGROUP = 63,
    XSDATTR_MIXED = 64,
    XSDATTR_MEMBERTYPES = 65,
    XSDATTR_ITEMTYPE = 66,
    XSDATTR_XPATH = 67,
    XSDATTR_SOURCE = 68,
    SCHEMA_USE_SCHEMA_NAMESPACE = 69,
    SCHEMA_SCHEMAROOT = 69,
    SCHEMA_ELEMENTTYPE = 70,
    SCHEMA_ELEMENT = 71,
    SCHEMA_GROUP = 72,
    SCHEMA_ATTRIBUTETYPE = 73,
    SCHEMA_ATTRIBUTE = 74,
    SCHEMA_DATATYPE = 75,
    SCHEMA_DESCRIPTION = 76,
    SCHEMA_EXTENDS = 77,
    SCHEMA_USE_SCHEMAALIAS_NAMESPACE = 78,
    SCHEMA_USE_DATATYPE_NAMESPACE = 79,
    SCHEMA_DTTYPE = 79,
    SCHEMA_DTVALUES = 80,
    SCHEMA_DTMAXLENGTH = 81,
    SCHEMA_DTMINLENGTH = 82,
    SCHEMA_DTMAX = 83,
    SCHEMA_DTMIN = 84,
    SCHEMA_DTMINEXCLUSIVE = 85,
    SCHEMA_DTMAXEXCLUSIVE = 86,
    SCHEMA_USE_XSD_NAMESPACE = 87,
    XSDNAME_SCHEMA = 87,
    XSDNAME_COMPLEXTYPE = 88,
    XSDNAME_ELEMENT = 89,
    XSDNAME_GROUP = 90,
    XSDNAME_ALL = 91,
    XSDNAME_CHOICE = 92,
    XSDNAME_SEQUENCE = 93,
    XSDNAME_ANY = 94,
    XSDNAME_ANYATTRIBUTE = 95,
    XSDNAME_ATTRIBUTE = 96,
    XSDNAME_ATTRIBUTEGROUP = 97,
    XSDNAME_UNIQUE = 98,
    XSDNAME_KEY = 99,
    XSDNAME_KEYREF = 100,
    XSDNAME_SELECTOR = 101,
    XSDNAME_FIELD = 102,
    XSDNAME_INCLUDE = 103,
    XSDNAME_IMPORT = 104,
    XSDNAME_NOTATION = 105,
    XSDNAME_SIMPLETYPE = 106,
    XSDNAME_MAXEXCLUSIVE = 107,
    XSDNAME_MINEXCLUSIVE = 108,
    XSDNAME_MAXINCLUSIVE = 109,
    XSDNAME_MININCLUSIVE = 110,
    XSDNAME_TOTALDIGITS = 111,
    XSDNAME_FRACTIONDIGITS = 112,
    XSDNAME_LENGTH = 113,
    XSDNAME_MINLENGTH = 114,
    XSDNAME_MAXLENGTH = 115,
    XSDNAME_ENUMERATION = 116,
    XSDNAME_PATTERN = 117,
    XSDNAME_ANNOTATION = 118,
    XSDNAME_APPINFO = 119,
    XSDNAME_DOCUMENTATION = 120,
    XSDNAME_COMPLEXCONTENT = 121,
    XSDNAME_COMPLEXCONTENTEXTENSION = 122,
    XSDNAME_COMPLEXCONTENTRESTRICTION = 123,
    XSDNAME_SIMPLECONTENT = 124,
    XSDNAME_SIMPLECONTENTEXTENSION = 125,
    XSDNAME_SIMPLECONTENTRESTRICTION = 126,
    XSDNAME_SIMPLETYPEUNION = 127,
    XSDNAME_SIMPLETYPELIST = 128,
    XSDNAME_SIMPLETYPERESTRICTION = 129,
    XSDNAME_WHITESPACE = 130,
    XSDNAME_REDEFINE = 131,
    XSDNAME_ANYTYPE = 132,
    SCHEMA_USE_XML_NAMESPACE = 133,
    XMLLANG = 133,
    SCHEMA_MAX_VALUE = 134
};

typedef enum SchemaFacetEnum {
    SchemaLengthFacet = 113,
    SchemaMinLengthFacet = 114,
    SchemaMaxLengthFacet = 115,
    SchemaPatternFacet = 117,
    SchemaEnumerationFacet = 116,
    SchemaMinExclusiveFacet = 108,
    SchemaMinInclusiveFacet = 110,
    SchemaMaxExclusiveFacet = 107,
    SchemaMaxInclusiveFacet = 109,
    SchemaTotalDigitsFacet = 111,
    SchemaFractionDigitsFacet = 112,
    SchemaWhiteSpaceFacet = 130
};

typedef enum SchemaFinal {
    SchemaFinal_None = 0,
    SchemaFinal_Extension = 1,
    SchemaFinal_Restriction = 2,
    SchemaFinal_All = 3
};

typedef enum SchemaForm {
    SchemaForm_None = 0,
    SchemaForm_Qualified = 1,
    SchemaForm_Unqualified = 2
};

typedef enum SchemaNamespaceList::Absent {
    Absent_none = 0,
    Absent_local = 1,
    Absent_targetNamespace = 2
};

typedef enum SchemaNamespaceList::ListType {
    ListType_Any = 0,
    ListType_Other = 1,
    ListType_Set = 2
};

typedef enum SchemaUse {
    SchemaUse_None = 0,
    SchemaUse_Optional = 1,
    SchemaUse_Prohibited = 2,
    SchemaUse_Required = 3
};

typedef enum SchemaWhiteSpace {
    SchemaWhiteSpace_Preserve = 0,
    SchemaWhiteSpace_Replace = 1,
    SchemaWhiteSpace_Collapse = 2
};

typedef enum SecurityEnum {
    AllowAll = 0,
    CheckSecurity = 1,
    AllowNone = 2
};

typedef enum SecurityInfo::SecurityEnum {
    AllowAll = 0,
    CheckSecurity = 1,
    AllowNone = 2
};

typedef enum SelectionLanguage {
    SelectionLanguageXSLPattern = 0,
    SelectionLanguageXPath = 1
};

typedef enum ShareMutex::Internal {
    m_MaxShareLockUsers = 256,
    m_lMaxSpins = 4096,
    m_lMaxUsers = 256
};

typedef enum State {
    CREATED = 0,
    OPENED = 1,
    SENDING = 2,
    SENT = 3,
    RECEIVING = 4,
    RESPONSE = 5
};

typedef enum States {
    StateIsNull = 0,
    StateIsObjNoRef = 1,
    StateIsObj = 3,
    StateIsPV = 7
};

typedef enum SubType {
    ST_None = 0,
    ST_base64 = 1,
    ST_hex = 2,
    ST_dateTime = 3,
    ST_time = 4,
    ST_date = 5,
    ST_gYearMonth = 6,
    ST_gYear = 7,
    ST_gMonthDay = 8,
    ST_gDay = 9,
    ST_gMonth = 10,
    ST_QName = 11,
    ST_NOTATION = 12
};

typedef enum TestType {
    Any = 0,
    Element = 1,
    Attribute = 2,
    Comment = 8,
    PI = 7,
    Text = 3
};

typedef enum TextTypeEnum {
    PCDATA = 0,
    CDATA = 1,
    WHITESPACE = 2
};

typedef enum Token {
    Unknown = 0,
    XmlDecl = 1,
    XmlDeclEnd = 2,
    Tag = 3,
    ETag = 4,
    TagEnd = 5,
    EETagEnd = 6,
    PcData = 7,
    WsData = 8,
    CrData = 9,
    CharRef = 10,
    EntityRef = 11,
    Name = 12,
    CdSect = 13,
    CdSectEnd = 14,
    Comment = 15,
    CommentEnd = 16,
    Pi = 17,
    PiEnd = 18,
    ParamEntityRef = 19,
    CondSect = 20,
    CondSectEnd = 21,
    CondSectIgnore = 22,
    CondSectInclude = 23,
    AttlistDecl = 24,
    DoctypeDecl = 25,
    ElementDecl = 26,
    EntityDecl = 27,
    NotationDecl = 28,
    AttTypeCdata = 29,
    AttTypeId = 30,
    AttTypeIdref = 31,
    AttTypeIdrefs = 32,
    AttTypeEntity = 33,
    AttTypeEntities = 34,
    AttTypeNmtoken = 35,
    AttTypeNmtokens = 36,
    AttTypeNotation = 37,
    AttValueRequired = 38,
    AttValueImplied = 39,
    AttValueFixed = 40,
    ContentSpecEmpty = 41,
    ContentSpecAny = 42,
    ContentSpecMixed = 43,
    NdataDecl = 44,
    PublicId = 45,
    SystemId = 46,
    Comma = 47,
    GreaterThan = 48,
    LeftBracket = 49,
    LeftParen = 50,
    Percent = 51,
    Plus = 52,
    QuestionMark = 53,
    Quote = 54,
    RightBracket = 55,
    RightParen = 56,
    Or = 57,
    Times = 58,
    End = 59
};

typedef enum TokenType {
    COMMA = 44,
    SLASH = 47,
    AT = 64,
    DOT = 46,
    LPARENS = 40,
    RPARENS = 41,
    LBRACKET = 91,
    RBRACKET = 93,
    LBRACE = 123,
    RBRACE = 125,
    COLON = 58,
    STAR = 42,
    PLUS = 43,
    MINUS = 45,
    EQ = 61,
    LT = 60,
    GT = 62,
    BANG = 33,
    DOLLAR = 36,
    PIPE = 124,
    EOF_TOKEN = 0,
    INVALIDTOKEN = -1,
    DOTDOT = -2,
    SLASHSLASH = -3,
    COLONCOLON = -4,
    NE = -5,
    LE = -6,
    GE = -7,
    NAME = -8,
    STRING = -9,
    NUMBER = -10,
    NODE = -11,
    TEXT = -12,
    PI = -13,
    COMMENT = -14,
    START_AXES = -15,
    AXES_ANCESTOR = -15,
    AXES_ANCESTOR_SELF = -16,
    AXES_ATTRIBUTE = -17,
    AXES_CHILD = -18,
    AXES_DESCENDANT = -19,
    AXES_DESCENDANT_SELF = -20,
    AXES_FOLLOWING = -21,
    AXES_FOLLOWING_SIBLING = -22,
    AXES_NAMESPACE = -23,
    AXES_PARENT = -24,
    AXES_PRECEDING = -25,
    AXES_PRECEDING_SIBLING = -26,
    AXES_SELF = -27,
    END_AXES = -27,
    START_FUNCS = -28,
    FUNC_TRUE = -28,
    FUNC_FALSE = -29,
    FUNC_NOT = -30,
    FUNC_ID = -31,
    FUNC_KEY = -32,
    FUNC_OTHER = -33,
    END_FUNCS = -33
};

typedef enum TokenizedType {
    TokenizedType_CDATA = 0,
    TokenizedType_ID = 1,
    TokenizedType_IDREF = 2,
    TokenizedType_IDREFS = 3,
    TokenizedType_ENTITY = 4,
    TokenizedType_ENTITIES = 5,
    TokenizedType_NMTOKEN = 6,
    TokenizedType_NMTOKENS = 7,
    TokenizedType_NOTATION = 8,
    TokenizedType_QName = 9,
    TokenizedType_NCName = 10,
    TokenizedType_None = 11
};

typedef enum TriState {
    TRI_TRUE = 1,
    TRI_FALSE = 0,
    TRI_UNKNOWN = -1
};

typedef enum TrustLevel {
    BaseTrust = 0,
    PartialTrust = 1,
    FullTrust = 2
};

typedef enum Type {
    XPNullNavType = 0,
    XPNodeNavType = 1,
    XPTextNavType = 2
};

typedef enum URLIS {
    URLIS_URL = 0,
    URLIS_OPAQUE = 1,
    URLIS_NOHISTORY = 2,
    URLIS_FILEURL = 3,
    URLIS_APPLIABLE = 4,
    URLIS_DIRECTORY = 5,
    URLIS_HASQUERY = 6
};

typedef enum URLRequest::HeaderType {
    Unknown = 0,
    ContentType = 1,
    ContentLength = 2,
    AcceptLanguage = 3
};

typedef enum URLStream::Flags {
    SYNCREAD = 0,
    ASYNCREAD = 1,
    URLMON = 0,
    WINHTTP = 2,
    TIGHT = 0,
    FORCEDRESYNC = 8,
    XMLCONTENT = 16,
    WINRT = 32
};

typedef enum URL_PART {
    URL_PART_NONE = 0,
    URL_PART_SCHEME = 1,
    URL_PART_HOSTNAME = 2,
    URL_PART_USERNAME = 3,
    URL_PART_PASSWORD = 4,
    URL_PART_PORT = 5,
    URL_PART_QUERY = 6
};

typedef enum URL_SCHEME {
    URL_SCHEME_INVALID = -1,
    URL_SCHEME_UNKNOWN = 0,
    URL_SCHEME_FTP = 1,
    URL_SCHEME_HTTP = 2,
    URL_SCHEME_GOPHER = 3,
    URL_SCHEME_MAILTO = 4,
    URL_SCHEME_NEWS = 5,
    URL_SCHEME_NNTP = 6,
    URL_SCHEME_TELNET = 7,
    URL_SCHEME_WAIS = 8,
    URL_SCHEME_FILE = 9,
    URL_SCHEME_MK = 10,
    URL_SCHEME_HTTPS = 11,
    URL_SCHEME_SHELL = 12,
    URL_SCHEME_SNEWS = 13,
    URL_SCHEME_LOCAL = 14,
    URL_SCHEME_JAVASCRIPT = 15,
    URL_SCHEME_VBSCRIPT = 16,
    URL_SCHEME_ABOUT = 17,
    URL_SCHEME_RES = 18,
    URL_SCHEME_MSSHELLROOTED = 19,
    URL_SCHEME_MSSHELLIDLIST = 20,
    URL_SCHEME_MSHELP = 21,
    URL_SCHEME_MSSHELLDEVICE = 22,
    URL_SCHEME_WILDCARD = 23,
    URL_SCHEME_SEARCH_MS = 24,
    URL_SCHEME_SEARCH = 25,
    URL_SCHEME_KNOWNFOLDER = 26,
    URL_SCHEME_MAXVALUE = 27
};

typedef enum UnicodeCategory {
    UNICODECATEGORY_UPPERCASELETTER = 0,
    UNICODECATEGORY_LOWERCASELETTER = 1,
    UNICODECATEGORY_TITLECASELETTER = 2,
    UNICODECATEGORY_MODIFIERLETTER = 3,
    UNICODECATEGORY_OTHERLETTER = 4,
    UNICODECATEGORY_NONSPACINGMARK = 5,
    UNICODECATEGORY_SPACINGCOMBININGMARK = 6,
    UNICODECATEGORY_ENCLOSINGMARK = 7,
    UNICODECATEGORY_DECIMALDIGITNUMBER = 8,
    UNICODECATEGORY_LETTERNUMBER = 9,
    UNICODECATEGORY_OTHERNUMBER = 10,
    UNICODECATEGORY_SPACESEPARATOR = 11,
    UNICODECATEGORY_LINESEPARATOR = 12,
    UNICODECATEGORY_PARAGRAPHSEPARATOR = 13,
    UNICODECATEGORY_CONTROL = 14,
    UNICODECATEGORY_FORMAT = 15,
    UNICODECATEGORY_SURROGATE = 16,
    UNICODECATEGORY_PRIVATEUSE = 17,
    UNICODECATEGORY_CONNECTORPUNCTUATION = 18,
    UNICODECATEGORY_DASHPUNCTUATION = 19,
    UNICODECATEGORY_OPENPUNCTUATION = 20,
    UNICODECATEGORY_CLOSEPUNCTUATION = 21,
    UNICODECATEGORY_INITIALQUOTEPUNCTUATION = 22,
    UNICODECATEGORY_FINALQUOTEPUNCTUATION = 23,
    UNICODECATEGORY_OTHERPUNCTUATION = 24,
    UNICODECATEGORY_MATHSYMBOL = 25,
    UNICODECATEGORY_CURRENCYSYMBOL = 26,
    UNICODECATEGORY_MODIFIERSYMBOL = 27,
    UNICODECATEGORY_OTHERSYMBOL = 28,
    UNICODECATEGORY_OTHERNOTASSIGNED = 29
};

typedef enum VARENUM {
    VT_EMPTY = 0,
    VT_NULL = 1,
    VT_I2 = 2,
    VT_I4 = 3,
    VT_R4 = 4,
    VT_R8 = 5,
    VT_CY = 6,
    VT_DATE = 7,
    VT_BSTR = 8,
    VT_DISPATCH = 9,
    VT_ERROR = 10,
    VT_BOOL = 11,
    VT_VARIANT = 12,
    VT_UNKNOWN = 13,
    VT_DECIMAL = 14,
    VT_I1 = 16,
    VT_UI1 = 17,
    VT_UI2 = 18,
    VT_UI4 = 19,
    VT_I8 = 20,
    VT_UI8 = 21,
    VT_INT = 22,
    VT_UINT = 23,
    VT_VOID = 24,
    VT_HRESULT = 25,
    VT_PTR = 26,
    VT_SAFEARRAY = 27,
    VT_CARRAY = 28,
    VT_USERDEFINED = 29,
    VT_LPSTR = 30,
    VT_LPWSTR = 31,
    VT_RECORD = 36,
    VT_INT_PTR = 37,
    VT_UINT_PTR = 38,
    VT_FILETIME = 64,
    VT_BLOB = 65,
    VT_STREAM = 66,
    VT_STORAGE = 67,
    VT_STREAMED_OBJECT = 68,
    VT_STORED_OBJECT = 69,
    VT_BLOB_OBJECT = 70,
    VT_CF = 71,
    VT_CLSID = 72,
    VT_VERSIONED_STREAM = 73,
    VT_BSTR_BLOB = 4095,
    VT_VECTOR = 4096,
    VT_ARRAY = 8192,
    VT_BYREF = 16384,
    VT_RESERVED = 0x8000,
    VT_ILLEGAL = 0xffff,
    VT_ILLEGALMASKED = 4095,
    VT_TYPEMASK = 4095
};

typedef enum VERIFIER_MODE {
    VERIFIER_MODE_UNUSED = 0,
    VERIFIER_MODE_TRIAGE = 1,
    VERIFIER_MODE_FIELD = 2,
    VERIFIER_MODE_LOGO = 3,
    VERIFIER_MODE_TEST = 4
};

typedef enum ValidationDFAState {
    ValidationDFA_Init = 0,
    ValidationDFA_LookupDecl = -1
};

typedef enum ValidationType {
    VALIDATION_AUTO = 0,
    VALIDATION_DTD = 1,
    VALIDATION_XDR = 2,
    VALIDATION_XSD = 3
};

typedef enum ValueName {
    XSLProcessorMultiplier = 0,
    DebugMaxLines = 1,
    AssertToFile = 2,
    AssertNoPopup = 3,
    NormalizeAttributeValuesDefaultValue = 4
};

typedef enum VariableType {
    VAR_FORWARD = 0,
    VAR_VARIABLE = 1,
    VAR_PARAM = 2,
    VAR_WITHPARAM = 3
};

typedef enum VisitedMark {
    WAS_NOT_VISITED = 0,
    WAS_VISITED = 1,
    DO_NOT_VISIT = 2
};

typedef enum WELL_KNOWN_SID_TYPE {
    WinNullSid = 0,
    WinWorldSid = 1,
    WinLocalSid = 2,
    WinCreatorOwnerSid = 3,
    WinCreatorGroupSid = 4,
    WinCreatorOwnerServerSid = 5,
    WinCreatorGroupServerSid = 6,
    WinNtAuthoritySid = 7,
    WinDialupSid = 8,
    WinNetworkSid = 9,
    WinBatchSid = 10,
    WinInteractiveSid = 11,
    WinServiceSid = 12,
    WinAnonymousSid = 13,
    WinProxySid = 14,
    WinEnterpriseControllersSid = 15,
    WinSelfSid = 16,
    WinAuthenticatedUserSid = 17,
    WinRestrictedCodeSid = 18,
    WinTerminalServerSid = 19,
    WinRemoteLogonIdSid = 20,
    WinLogonIdsSid = 21,
    WinLocalSystemSid = 22,
    WinLocalServiceSid = 23,
    WinNetworkServiceSid = 24,
    WinBuiltinDomainSid = 25,
    WinBuiltinAdministratorsSid = 26,
    WinBuiltinUsersSid = 27,
    WinBuiltinGuestsSid = 28,
    WinBuiltinPowerUsersSid = 29,
    WinBuiltinAccountOperatorsSid = 30,
    WinBuiltinSystemOperatorsSid = 31,
    WinBuiltinPrintOperatorsSid = 32,
    WinBuiltinBackupOperatorsSid = 33,
    WinBuiltinReplicatorSid = 34,
    WinBuiltinPreWindows2000CompatibleAccessSid = 35,
    WinBuiltinRemoteDesktopUsersSid = 36,
    WinBuiltinNetworkConfigurationOperatorsSid = 37,
    WinAccountAdministratorSid = 38,
    WinAccountGuestSid = 39,
    WinAccountKrbtgtSid = 40,
    WinAccountDomainAdminsSid = 41,
    WinAccountDomainUsersSid = 42,
    WinAccountDomainGuestsSid = 43,
    WinAccountComputersSid = 44,
    WinAccountControllersSid = 45,
    WinAccountCertAdminsSid = 46,
    WinAccountSchemaAdminsSid = 47,
    WinAccountEnterpriseAdminsSid = 48,
    WinAccountPolicyAdminsSid = 49,
    WinAccountRasAndIasServersSid = 50,
    WinNTLMAuthenticationSid = 51,
    WinDigestAuthenticationSid = 52,
    WinSChannelAuthenticationSid = 53,
    WinThisOrganizationSid = 54,
    WinOtherOrganizationSid = 55,
    WinBuiltinIncomingForestTrustBuildersSid = 56,
    WinBuiltinPerfMonitoringUsersSid = 57,
    WinBuiltinPerfLoggingUsersSid = 58,
    WinBuiltinAuthorizationAccessSid = 59,
    WinBuiltinTerminalServerLicenseServersSid = 60,
    WinBuiltinDCOMUsersSid = 61,
    WinBuiltinIUsersSid = 62,
    WinIUserSid = 63,
    WinBuiltinCryptoOperatorsSid = 64,
    WinUntrustedLabelSid = 65,
    WinLowLabelSid = 66,
    WinMediumLabelSid = 67,
    WinHighLabelSid = 68,
    WinSystemLabelSid = 69,
    WinWriteRestrictedCodeSid = 70,
    WinCreatorOwnerRightsSid = 71,
    WinCacheablePrincipalsGroupSid = 72,
    WinNonCacheablePrincipalsGroupSid = 73,
    WinEnterpriseReadonlyControllersSid = 74,
    WinAccountReadonlyControllersSid = 75,
    WinBuiltinEventLogReadersGroup = 76,
    WinNewEnterpriseReadonlyControllersSid = 77,
    WinBuiltinCertSvcDComAccessGroup = 78,
    WinMediumPlusLabelSid = 79,
    WinLocalLogonSid = 80,
    WinConsoleLogonSid = 81,
    WinThisOrganizationCertificateSid = 82,
    WinApplicationPackageAuthoritySid = 83,
    WinBuiltinAnyPackageSid = 84,
    WinCapabilityInternetClientSid = 85,
    WinCapabilityInternetClientServerSid = 86,
    WinCapabilityPrivateNetworkClientServerSid = 87,
    WinCapabilityPicturesLibrarySid = 88,
    WinCapabilityVideosLibrarySid = 89,
    WinCapabilityMusicLibrarySid = 90,
    WinCapabilityDocumentsLibrarySid = 91,
    WinCapabilitySharedUserCertificatesSid = 92,
    WinCapabilityEnterpriseAuthenticationSid = 93,
    WinCapabilityRemovableStorageSid = 94,
    WinBuiltinRDSRemoteAccessServersSid = 95,
    WinBuiltinRDSEndpointServersSid = 96,
    WinBuiltinRDSManagementServersSid = 97,
    WinUserModeDriversSid = 98,
    WinBuiltinHyperVAdminsSid = 99,
    WinAccountCloneableControllersSid = 100,
    WinBuiltinAccessControlAssistanceOperatorsSid = 101,
    WinBuiltinRemoteManagementUsersSid = 102,
    WinAuthenticationAuthorityAssertedSid = 103,
    WinAuthenticationServiceAssertedSid = 104,
    WinLocalAccountSid = 105,
    WinLocalAccountAndAdministratorSid = 106,
    WinAccountProtectedUsersSid = 107,
    WinCapabilityAppointmentsSid = 108,
    WinCapabilityContactsSid = 109,
    WinAccountDefaultSystemManagedSid = 110,
    WinBuiltinDefaultSystemManagedGroupSid = 111,
    WinBuiltinStorageReplicaAdminsSid = 112,
    WinAccountKeyAdminsSid = 113,
    WinAccountEnterpriseKeyAdminsSid = 114,
    WinAuthenticationKeyTrustSid = 115,
    WinAuthenticationKeyPropertyMFASid = 116,
    WinAuthenticationKeyPropertyAttestationSid = 117,
    WinAuthenticationFreshKeyAuthSid = 118,
    WinBuiltinDeviceOwnersSid = 119
};

typedef enum WIN32_MEMORY_INFORMATION_CLASS {
    MemoryRegionInfo = 0
};

typedef enum WININET_SYNC_MODE {
    WININET_SYNC_MODE_NEVER = 0,
    WININET_SYNC_MODE_ON_EXPIRY = 1,
    WININET_SYNC_MODE_ONCE_PER_SESSION = 2,
    WININET_SYNC_MODE_ALWAYS = 3,
    WININET_SYNC_MODE_AUTOMATIC = 4,
    WININET_SYNC_MODE_DEFAULT = 4
};

typedef enum WMIDPREQUESTCODE {
    WMI_GET_ALL_DATA = 0,
    WMI_GET_SINGLE_INSTANCE = 1,
    WMI_SET_SINGLE_INSTANCE = 2,
    WMI_SET_SINGLE_ITEM = 3,
    WMI_ENABLE_EVENTS = 4,
    WMI_DISABLE_EVENTS = 5,
    WMI_ENABLE_COLLECTION = 6,
    WMI_DISABLE_COLLECTION = 7,
    WMI_REGINFO = 8,
    WMI_EXECUTE_METHOD = 9,
    WMI_CAPTURE_STATE = 10
};

typedef enum WPAD_CACHE_DELETE {
    WPAD_CACHE_DELETE_CURRENT = 0,
    WPAD_CACHE_DELETE_ALL = 1
};

typedef enum WPCSETTING {
    WPCSETTING_LOGGING_ENABLED = 1,
    WPCSETTING_FILEDOWNLOAD_BLOCKED = 2
};

typedef enum WPP_CTL_NAMES {
    WPP_CTL_MsXml6 = 0,
    WPP_LAST_CTL = 1
};

typedef enum WPP_DEFINE_BIT_NAMES {
    WPP_BLOCK_START_MsXml6 = 0,
    WPP_BIT_CAT_HTTP = 1,
    WPP_BIT_CAT_URLREQ = 2,
    WPP_BIT_CAT_URLMON = 3,
    WPP_BIT_CAT_STREAM = 4,
    WPP_BIT_CAT_UTIL = 5,
    WPP_BLOCK_END_MsXml6 = 6
};

typedef enum WRITER_OUTPUT_TYPE {
    OUTPUT_TYPE_BSTR = 0,
    OUTPUT_TYPE_ISTREAM = 1
};

typedef enum WRITER_STATE {
    STATE_UNINITIALIZED = 0,
    STATE_UNKNOWN = 1,
    STATE_START_ELEMENT = 2,
    STATE_END_ELEMENT = 3,
    STATE_CDATA = 4,
    STATE_COMMENT = 5,
    STATE_PROCESSING_INSTRUCTION = 6,
    STATE_CLOSE_START_ELEMENT = 7,
    STATE_PENDING_NEWLINE = 8,
    STATE_IN_DTD = 9,
    STATE_PENDINGWS = 10
};

typedef enum WSMODE {
    WS_PRESERVE = 0,
    WS_COLLAPSE = 1,
    WS_TRIM = 2,
    WS_NORMALIZE = 3,
    WS_COLLAPSE_SPACE = 4
};

typedef enum WSStringBuffer::WSMODE {
    WS_PRESERVE = 0,
    WS_COLLAPSE = 1,
    WS_TRIM = 2,
    WS_NORMALIZE = 3,
    WS_COLLAPSE_SPACE = 4
};

typedef enum WinHttpRequestAutoLogonPolicy {
    AutoLogonPolicy_Always = 0,
    AutoLogonPolicy_OnlyIfBypassProxy = 1,
    AutoLogonPolicy_Never = 2
};

typedef enum WinHttpRequestOption {
    WinHttpRequestOption_UserAgentString = 0,
    WinHttpRequestOption_URL = 1,
    WinHttpRequestOption_URLCodePage = 2,
    WinHttpRequestOption_EscapePercentInURL = 3,
    WinHttpRequestOption_SslErrorIgnoreFlags = 4,
    WinHttpRequestOption_SelectCertificate = 5,
    WinHttpRequestOption_EnableRedirects = 6,
    WinHttpRequestOption_UrlEscapeDisable = 7,
    WinHttpRequestOption_UrlEscapeDisableQuery = 8,
    WinHttpRequestOption_SecureProtocols = 9,
    WinHttpRequestOption_EnableTracing = 10,
    WinHttpRequestOption_RevertImpersonationOverSsl = 11,
    WinHttpRequestOption_EnableHttpsToHttpRedirects = 12,
    WinHttpRequestOption_EnablePassportAuthentication = 13,
    WinHttpRequestOption_MaxAutomaticRedirects = 14,
    WinHttpRequestOption_MaxResponseHeaderSize = 15,
    WinHttpRequestOption_MaxResponseDrainSize = 16,
    WinHttpRequestOption_EnableHttp1_1 = 17,
    WinHttpRequestOption_EnableCertificateRevocationCheck = 18,
    WinHttpRequestOption_RejectUserpwd = 19
};

typedef enum Windows::ApplicationModel::Background::BackgroundTaskCancellationReason {
    BackgroundTaskCancellationReason_Abort = 0,
    BackgroundTaskCancellationReason_Terminating = 1,
    BackgroundTaskCancellationReason_LoggingOff = 2,
    BackgroundTaskCancellationReason_ServicingUpdate = 3,
    BackgroundTaskCancellationReason_IdleTask = 4,
    BackgroundTaskCancellationReason_Uninstall = 5,
    BackgroundTaskCancellationReason_ConditionLoss = 6,
    BackgroundTaskCancellationReason_SystemPolicy = 7,
    BackgroundTaskCancellationReason_QuietHoursEntered = 8,
    BackgroundTaskCancellationReason_ExecutionTimeExceeded = 9,
    BackgroundTaskCancellationReason_ResourceRevocation = 10,
    BackgroundTaskCancellationReason_EnergySaver = 11
};

typedef enum Windows::ApplicationModel::Background::BackgroundTaskThrottleCounter {
    BackgroundTaskThrottleCounter_All = 0,
    BackgroundTaskThrottleCounter_Cpu = 1,
    BackgroundTaskThrottleCounter_Network = 2
};

typedef enum Windows::ApplicationModel::Background::BackgroundTaskYieldStatus {
    BackgroundTaskYieldStatus_Success = 0,
    BackgroundTaskYieldStatus_Timeout = 1,
    BackgroundTaskYieldStatus_TaskExiting = 2
};

typedef enum Windows::ApplicationModel::Background::BackgroundWorkCostValue {
    BackgroundWorkCostValue_Low = 0,
    BackgroundWorkCostValue_Medium = 1,
    BackgroundWorkCostValue_High = 2
};

typedef enum Windows::Data::Xml::Dom::NodeType {
    NodeType_Invalid = 0,
    NodeType_ElementNode = 1,
    NodeType_AttributeNode = 2,
    NodeType_TextNode = 3,
    NodeType_DataSectionNode = 4,
    NodeType_EntityReferenceNode = 5,
    NodeType_EntityNode = 6,
    NodeType_ProcessingInstructionNode = 7,
    NodeType_CommentNode = 8,
    NodeType_DocumentNode = 9,
    NodeType_DocumentTypeNode = 10,
    NodeType_DocumentFragmentNode = 11,
    NodeType_NotationNode = 12
};

typedef enum Windows::Foundation::Collections::CollectionChange {
    CollectionChange_Reset = 0,
    CollectionChange_ItemInserted = 1,
    CollectionChange_ItemRemoved = 2,
    CollectionChange_ItemChanged = 3
};

typedef enum Windows::Foundation::Diagnostics::CausalityRelation {
    CausalityRelation_AssignDelegate = 0,
    CausalityRelation_Join = 1,
    CausalityRelation_Choice = 2,
    CausalityRelation_Cancel = 3,
    CausalityRelation_Error = 4
};

typedef enum Windows::Foundation::Diagnostics::CausalitySource {
    CausalitySource_Application = 0,
    CausalitySource_Library = 1,
    CausalitySource_System = 2
};

typedef enum Windows::Foundation::Diagnostics::CausalitySynchronousWork {
    CausalitySynchronousWork_CompletionNotification = 0,
    CausalitySynchronousWork_ProgressNotification = 1,
    CausalitySynchronousWork_Execution = 2
};

typedef enum Windows::Foundation::Diagnostics::CausalityTraceLevel {
    CausalityTraceLevel_Required = 0,
    CausalityTraceLevel_Important = 1,
    CausalityTraceLevel_Verbose = 2
};

typedef enum Windows::Foundation::Diagnostics::ErrorOptions {
    ErrorOptions_None = 0,
    ErrorOptions_SuppressExceptions = 1,
    ErrorOptions_ForceExceptions = 2,
    ErrorOptions_UseSetErrorInfo = 4,
    ErrorOptions_SuppressSetErrorInfo = 8
};

typedef enum Windows::Foundation::Diagnostics::RoErrorReportingFlags {
    None = 0,
    SuppressExceptions = 1,
    ForceExceptions = 2,
    UseSetErrorInfo = 4,
    SuppressSetErrorInfo = 8
};

typedef enum Windows::Foundation::Metadata::GCPressureAmount {
    GCPressureAmount_Low = 0,
    GCPressureAmount_Medium = 1,
    GCPressureAmount_High = 2
};

typedef enum Windows::Foundation::PropertyType {
    PropertyType_Empty = 0,
    PropertyType_UInt8 = 1,
    PropertyType_Int16 = 2,
    PropertyType_UInt16 = 3,
    PropertyType_Int32 = 4,
    PropertyType_UInt32 = 5,
    PropertyType_Int64 = 6,
    PropertyType_UInt64 = 7,
    PropertyType_Single = 8,
    PropertyType_Double = 9,
    PropertyType_Char16 = 10,
    PropertyType_Boolean = 11,
    PropertyType_String = 12,
    PropertyType_Inspectable = 13,
    PropertyType_DateTime = 14,
    PropertyType_TimeSpan = 15,
    PropertyType_Guid = 16,
    PropertyType_Point = 17,
    PropertyType_Size = 18,
    PropertyType_Rect = 19,
    PropertyType_OtherType = 20,
    PropertyType_UInt8Array = 1025,
    PropertyType_Int16Array = 1026,
    PropertyType_UInt16Array = 1027,
    PropertyType_Int32Array = 1028,
    PropertyType_UInt32Array = 1029,
    PropertyType_Int64Array = 1030,
    PropertyType_UInt64Array = 1031,
    PropertyType_SingleArray = 1032,
    PropertyType_DoubleArray = 1033,
    PropertyType_Char16Array = 1034,
    PropertyType_BooleanArray = 1035,
    PropertyType_StringArray = 1036,
    PropertyType_InspectableArray = 1037,
    PropertyType_DateTimeArray = 1038,
    PropertyType_TimeSpanArray = 1039,
    PropertyType_GuidArray = 1040,
    PropertyType_PointArray = 1041,
    PropertyType_SizeArray = 1042,
    PropertyType_RectArray = 1043,
    PropertyType_OtherTypeArray = 1044
};

typedef enum Windows::Storage::AccessCache::AccessCacheOptions {
    AccessCacheOptions_None = 0,
    AccessCacheOptions_DisallowUserInput = 1,
    AccessCacheOptions_FastLocationsOnly = 2,
    AccessCacheOptions_UseReadOnlyCachedCopy = 4,
    AccessCacheOptions_SuppressAccessTimeUpdate = 8
};

typedef enum Windows::Storage::AccessCache::RecentStorageItemVisibility {
    RecentStorageItemVisibility_AppOnly = 0,
    RecentStorageItemVisibility_AppAndSystem = 1
};

typedef enum Windows::Storage::CreationCollisionOption {
    CreationCollisionOption_GenerateUniqueName = 0,
    CreationCollisionOption_ReplaceExisting = 1,
    CreationCollisionOption_FailIfExists = 2,
    CreationCollisionOption_OpenIfExists = 3
};

typedef enum Windows::Storage::FileAccessMode {
    FileAccessMode_Read = 0,
    FileAccessMode_ReadWrite = 1
};

typedef enum Windows::Storage::FileAttributes {
    FileAttributes_Normal = 0,
    FileAttributes_ReadOnly = 1,
    FileAttributes_Directory = 16,
    FileAttributes_Archive = 32,
    FileAttributes_Temporary = 256,
    FileAttributes_LocallyIncomplete = 512
};

typedef enum Windows::Storage::FileProperties::PhotoOrientation {
    PhotoOrientation_Unspecified = 0,
    PhotoOrientation_Normal = 1,
    PhotoOrientation_FlipHorizontal = 2,
    PhotoOrientation_Rotate180 = 3,
    PhotoOrientation_FlipVertical = 4,
    PhotoOrientation_Transpose = 5,
    PhotoOrientation_Rotate270 = 6,
    PhotoOrientation_Transverse = 7,
    PhotoOrientation_Rotate90 = 8
};

typedef enum Windows::Storage::FileProperties::PropertyPrefetchOptions {
    PropertyPrefetchOptions_None = 0,
    PropertyPrefetchOptions_MusicProperties = 1,
    PropertyPrefetchOptions_VideoProperties = 2,
    PropertyPrefetchOptions_ImageProperties = 4,
    PropertyPrefetchOptions_DocumentProperties = 8,
    PropertyPrefetchOptions_BasicProperties = 16
};

typedef enum Windows::Storage::FileProperties::ThumbnailMode {
    ThumbnailMode_PicturesView = 0,
    ThumbnailMode_VideosView = 1,
    ThumbnailMode_MusicView = 2,
    ThumbnailMode_DocumentsView = 3,
    ThumbnailMode_ListView = 4,
    ThumbnailMode_SingleItem = 5
};

typedef enum Windows::Storage::FileProperties::ThumbnailOptions {
    ThumbnailOptions_None = 0,
    ThumbnailOptions_ReturnOnlyIfCached = 1,
    ThumbnailOptions_ResizeThumbnail = 2,
    ThumbnailOptions_UseCurrentScale = 4
};

typedef enum Windows::Storage::FileProperties::ThumbnailType {
    ThumbnailType_Image = 0,
    ThumbnailType_Icon = 1
};

typedef enum Windows::Storage::FileProperties::VideoOrientation {
    VideoOrientation_Normal = 0,
    VideoOrientation_Rotate90 = 90,
    VideoOrientation_Rotate180 = 180,
    VideoOrientation_Rotate270 = 270
};

typedef enum Windows::Storage::KnownFolderId {
    KnownFolderId_AppCaptures = 0,
    KnownFolderId_CameraRoll = 1,
    KnownFolderId_DocumentsLibrary = 2,
    KnownFolderId_HomeGroup = 3,
    KnownFolderId_MediaServerDevices = 4,
    KnownFolderId_MusicLibrary = 5,
    KnownFolderId_Objects3D = 6,
    KnownFolderId_PicturesLibrary = 7,
    KnownFolderId_Playlists = 8,
    KnownFolderId_RecordedCalls = 9,
    KnownFolderId_RemovableDevices = 10,
    KnownFolderId_SavedPictures = 11,
    KnownFolderId_Screenshots = 12,
    KnownFolderId_VideosLibrary = 13,
    KnownFolderId_AllAppMods = 14,
    KnownFolderId_CurrentAppMods = 15
};

typedef enum Windows::Storage::KnownLibraryId {
    KnownLibraryId_Music = 0,
    KnownLibraryId_Pictures = 1,
    KnownLibraryId_Videos = 2,
    KnownLibraryId_Documents = 3
};

typedef enum Windows::Storage::NameCollisionOption {
    NameCollisionOption_GenerateUniqueName = 0,
    NameCollisionOption_ReplaceExisting = 1,
    NameCollisionOption_FailIfExists = 2
};

typedef enum Windows::Storage::Pickers::PickerLocationId {
    PickerLocationId_DocumentsLibrary = 0,
    PickerLocationId_ComputerFolder = 1,
    PickerLocationId_Desktop = 2,
    PickerLocationId_Downloads = 3,
    PickerLocationId_HomeGroup = 4,
    PickerLocationId_MusicLibrary = 5,
    PickerLocationId_PicturesLibrary = 6,
    PickerLocationId_VideosLibrary = 7,
    PickerLocationId_Objects3D = 8,
    PickerLocationId_Unspecified = 9
};

typedef enum Windows::Storage::Pickers::PickerViewMode {
    PickerViewMode_List = 0,
    PickerViewMode_Thumbnail = 1
};

typedef enum Windows::Storage::Provider::CachedFileOptions {
    CachedFileOptions_None = 0,
    CachedFileOptions_RequireUpdateOnAccess = 1,
    CachedFileOptions_UseCachedFileWhenOffline = 2,
    CachedFileOptions_DenyAccessWhenOffline = 4
};

typedef enum Windows::Storage::Provider::FileUpdateStatus {
    FileUpdateStatus_Incomplete = 0,
    FileUpdateStatus_Complete = 1,
    FileUpdateStatus_UserInputNeeded = 2,
    FileUpdateStatus_CurrentlyUnavailable = 3,
    FileUpdateStatus_Failed = 4,
    FileUpdateStatus_CompleteAndRenamed = 5
};

typedef enum Windows::Storage::Provider::ReadActivationMode {
    ReadActivationMode_NotNeeded = 0,
    ReadActivationMode_BeforeAccess = 1
};

typedef enum Windows::Storage::Provider::WriteActivationMode {
    WriteActivationMode_ReadOnly = 0,
    WriteActivationMode_NotNeeded = 1,
    WriteActivationMode_AfterWrite = 2
};

typedef enum Windows::Storage::Search::CommonFileQuery {
    CommonFileQuery_DefaultQuery = 0,
    CommonFileQuery_OrderByName = 1,
    CommonFileQuery_OrderByTitle = 2,
    CommonFileQuery_OrderByMusicProperties = 3,
    CommonFileQuery_OrderBySearchRank = 4,
    CommonFileQuery_OrderByDate = 5
};

typedef enum Windows::Storage::Search::CommonFolderQuery {
    CommonFolderQuery_DefaultQuery = 0,
    CommonFolderQuery_GroupByYear = 100,
    CommonFolderQuery_GroupByMonth = 101,
    CommonFolderQuery_GroupByArtist = 102,
    CommonFolderQuery_GroupByAlbum = 103,
    CommonFolderQuery_GroupByAlbumArtist = 104,
    CommonFolderQuery_GroupByComposer = 105,
    CommonFolderQuery_GroupByGenre = 106,
    CommonFolderQuery_GroupByPublishedYear = 107,
    CommonFolderQuery_GroupByRating = 108,
    CommonFolderQuery_GroupByTag = 109,
    CommonFolderQuery_GroupByAuthor = 110,
    CommonFolderQuery_GroupByType = 111
};

typedef enum Windows::Storage::Search::DateStackOption {
    DateStackOption_None = 0,
    DateStackOption_Year = 1,
    DateStackOption_Month = 2
};

typedef enum Windows::Storage::Search::FolderDepth {
    FolderDepth_Shallow = 0,
    FolderDepth_Deep = 1
};

typedef enum Windows::Storage::Search::IndexedState {
    IndexedState_Unknown = 0,
    IndexedState_NotIndexed = 1,
    IndexedState_PartiallyIndexed = 2,
    IndexedState_FullyIndexed = 3
};

typedef enum Windows::Storage::Search::IndexerOption {
    IndexerOption_UseIndexerWhenAvailable = 0,
    IndexerOption_OnlyUseIndexer = 1,
    IndexerOption_DoNotUseIndexer = 2,
    IndexerOption_OnlyUseIndexerAndOptimizeForIndexedProperties = 3
};

typedef enum Windows::Storage::StorageDeleteOption {
    StorageDeleteOption_Default = 0,
    StorageDeleteOption_PermanentDelete = 1
};

typedef enum Windows::Storage::StorageItemTypes {
    StorageItemTypes_None = 0,
    StorageItemTypes_File = 1,
    StorageItemTypes_Folder = 2
};

typedef enum Windows::Storage::StorageLibraryChangeType {
    StorageLibraryChangeType_Created = 0,
    StorageLibraryChangeType_Deleted = 1,
    StorageLibraryChangeType_MovedOrRenamed = 2,
    StorageLibraryChangeType_ContentsChanged = 3,
    StorageLibraryChangeType_MovedOutOfLibrary = 4,
    StorageLibraryChangeType_MovedIntoLibrary = 5,
    StorageLibraryChangeType_ContentsReplaced = 6,
    StorageLibraryChangeType_IndexingStatusChanged = 7,
    StorageLibraryChangeType_EncryptionChanged = 8,
    StorageLibraryChangeType_ChangeTrackingLost = 9
};

typedef enum Windows::Storage::StorageOpenOptions {
    StorageOpenOptions_None = 0,
    StorageOpenOptions_AllowOnlyReaders = 1,
    StorageOpenOptions_AllowReadersAndWriters = 2
};

typedef enum Windows::Storage::StreamedFileFailureMode {
    StreamedFileFailureMode_Failed = 0,
    StreamedFileFailureMode_CurrentlyUnavailable = 1,
    StreamedFileFailureMode_Incomplete = 2
};

typedef enum Windows::Storage::Streams::ByteOrder {
    ByteOrder_LittleEndian = 0,
    ByteOrder_BigEndian = 1
};

typedef enum Windows::Storage::Streams::FileOpenDisposition {
    FileOpenDisposition_OpenExisting = 0,
    FileOpenDisposition_OpenAlways = 1,
    FileOpenDisposition_CreateNew = 2,
    FileOpenDisposition_CreateAlways = 3,
    FileOpenDisposition_TruncateExisting = 4
};

typedef enum Windows::Storage::Streams::InputStreamOptions {
    InputStreamOptions_None = 0,
    InputStreamOptions_Partial = 1,
    InputStreamOptions_ReadAhead = 2
};

typedef enum Windows::Storage::Streams::UnicodeEncoding {
    UnicodeEncoding_Utf8 = 0,
    UnicodeEncoding_Utf16LE = 1,
    UnicodeEncoding_Utf16BE = 2
};

typedef enum Windows::System::UserAuthenticationStatus {
    UserAuthenticationStatus_Unauthenticated = 0,
    UserAuthenticationStatus_LocallyAuthenticated = 1,
    UserAuthenticationStatus_RemotelyAuthenticated = 2
};

typedef enum Windows::System::UserPictureSize {
    UserPictureSize_Size64x64 = 0,
    UserPictureSize_Size208x208 = 1,
    UserPictureSize_Size424x424 = 2,
    UserPictureSize_Size1080x1080 = 3
};

typedef enum Windows::System::UserType {
    UserType_LocalUser = 0,
    UserType_RemoteUser = 1,
    UserType_LocalGuest = 2,
    UserType_RemoteGuest = 3,
    UserType_SystemManaged = 4
};

typedef enum Windows::System::UserWatcherStatus {
    UserWatcherStatus_Created = 0,
    UserWatcherStatus_Started = 1,
    UserWatcherStatus_EnumerationCompleted = 2,
    UserWatcherStatus_Stopping = 3,
    UserWatcherStatus_Stopped = 4,
    UserWatcherStatus_Aborted = 5
};

typedef enum WinrtRttiKind {
    WinrtRttiKind_Namespace = 0,
    WinrtRttiKind_RuntimeClass = 1,
    WinrtRttiKind_Interface = 2,
    WinrtRttiKind_Delegate = 3,
    WinrtRttiKind_ParameterizedInterface = 4,
    WinrtRttiKind_ParameterizedInterfaceInstance = 5,
    WinrtRttiKind_ParameterizedDelegate = 6,
    WinrtRttiKind_ParameterizedDelegateInstance = 7
};

typedef enum XCodeGen::BranchType {
    BRNONE = 0,
    BRFALSE = 1,
    BRTRUE = 2,
    BLT = 3,
    BEQ = 4,
    BGT = 5,
    BLE = 6,
    BNE = 7,
    BGE = 8
};

typedef enum XCompare::CompareFlags {
    Less = 1,
    Equals = 2,
    Greater = 4,
    LessEquals = 3,
    NotEquals = 5,
    GreaterEquals = 6,
    MaskRelOp = 7,
    Insensitive = 8,
    UpperCaseFirst = 16,
    Lexicographic = 32,
    LastFlag = 32
};

typedef enum XConvert::IntFlags {
    UNDERFLOW = 1,
    OVERFLOW = 2,
    NAN = 3,
    ROUNDED = 4
};

typedef enum XLAT_SIDE {
    XLAT_SERVER = 1,
    XLAT_CLIENT = 2
};

typedef enum XMLNav::NodeType {
    INVALID_NODETYPE = 0,
    ANY_NODETYPE = 0,
    ELEMENT = 1,
    ATTRIBUTE = 2,
    TEXT = 3,
    DOCROOT = 4,
    CDATA_SECTION = 5,
    ENTITY_REFERENCE = 6,
    PROCESSING_INSTRUCTION = 7,
    COMMENT = 8,
    DOCUMENT_TYPE = 9,
    WHITESPACE = 10
};

typedef enum XMLOutputHelper::EncodeErrorAction {
    Entitize = 0,
    CDataEntitize = 1
};

typedef enum XMLState {
    WithinElem = 0,
    EnumAttrs = 1,
    WithinAttr = 2,
    WithinComment = 3,
    WithinPI = 4
};

typedef enum XMLStateMachine::XMLState {
    WithinElem = 0,
    EnumAttrs = 1,
    WithinAttr = 2,
    WithinComment = 3,
    WithinPI = 4
};

typedef enum XMLStream::XMLToken {
    XML_PENDING = 0,
    XML_NUMENTITYREF = 58,
    XML_HEXENTITYREF = 59,
    XML_BUILTINENTITYREF = 60,
    XML_TAGEND = 61,
    XML_EMPTYTAGEND = 62,
    XML_ENDTAG = 63,
    XML_ENDPI = 64,
    XML_ENDXMLDECL = 65,
    XML_ENDDECL = 66,
    XML_CLOSEPAREN = 67,
    XML_ENDCONDSECT = 68,
    XML_STARTDTDSUBSET = 69,
    XML_ENDPROLOG = 70,
    XML_DATAAVAILABLE = 71,
    XML_DATAREALLOCATE = 72,
    XML_CDATABLOCK = 73
};

typedef enum XMLToken {
    XML_PENDING = 0,
    XML_NUMENTITYREF = 58,
    XML_HEXENTITYREF = 59,
    XML_BUILTINENTITYREF = 60,
    XML_TAGEND = 61,
    XML_EMPTYTAGEND = 62,
    XML_ENDTAG = 63,
    XML_ENDPI = 64,
    XML_ENDXMLDECL = 65,
    XML_ENDDECL = 66,
    XML_CLOSEPAREN = 67,
    XML_ENDCONDSECT = 68,
    XML_STARTDTDSUBSET = 69,
    XML_ENDPROLOG = 70,
    XML_DATAAVAILABLE = 71,
    XML_DATAREALLOCATE = 72,
    XML_CDATABLOCK = 73
};

typedef enum XMLValidator::TextTypeEnum {
    PCDATA = 0,
    CDATA = 1,
    WHITESPACE = 2
};

typedef enum XML_ATTRIBUTE_TYPE {
    XMLTYPE_CDATA = 0,
    XMLTYPE_NAME = 1,
    XMLTYPE_NAMES = 2,
    XMLTYPE_NMTOKEN = 3,
    XMLTYPE_NMTOKENS = 4
};

typedef enum XPBuilder::BooleanOp {
    Or = 0,
    And = 1,
    Not = 2
};

typedef enum XPBuilder::CompareOp {
    Less = 1,
    Equals = 2,
    Greater = 4,
    LessEquals = 3,
    NotEquals = 5,
    GreaterEquals = 6
};

typedef enum XPBuilder::NumericOp {
    Add = 0,
    Subtract = 1,
    Negate = 2,
    Modulo = 3,
    Divide = 4,
    Multiply = 5
};

typedef enum XPBuilder::OpType {
    tUnknown = 0,
    tString = 4,
    tNumber = 3,
    tBoolean = 1,
    tNodeSet = 6,
    tRTF = 5
};

typedef enum XPBuilder::TestType {
    Any = 0,
    Element = 1,
    Attribute = 2,
    Comment = 8,
    PI = 7,
    Text = 3
};

typedef enum XPNav::Flags {
    WS_INSIDE = 1,
    WS_AFTER = 2,
    IS_FINISHED = 3,
    NOT_QUITE_EMPTY = 4
};

typedef enum XPNav::Type {
    XPNullNavType = 0,
    XPNodeNavType = 1,
    XPTextNavType = 2
};

typedef enum XPParser::ParseType {
    MatchPattern = 0,
    LocationPath = 1,
    Expression = 2,
    AVT = 3,
    XsdPattern = 4
};

typedef enum XPParser::TokenType {
    COMMA = 44,
    SLASH = 47,
    AT = 64,
    DOT = 46,
    LPARENS = 40,
    RPARENS = 41,
    LBRACKET = 91,
    RBRACKET = 93,
    LBRACE = 123,
    RBRACE = 125,
    COLON = 58,
    STAR = 42,
    PLUS = 43,
    MINUS = 45,
    EQ = 61,
    LT = 60,
    GT = 62,
    BANG = 33,
    DOLLAR = 36,
    PIPE = 124,
    EOF_TOKEN = 0,
    INVALIDTOKEN = -1,
    DOTDOT = -2,
    SLASHSLASH = -3,
    COLONCOLON = -4,
    NE = -5,
    LE = -6,
    GE = -7,
    NAME = -8,
    STRING = -9,
    NUMBER = -10,
    NODE = -11,
    TEXT = -12,
    PI = -13,
    COMMENT = -14,
    START_AXES = -15,
    AXES_ANCESTOR = -15,
    AXES_ANCESTOR_SELF = -16,
    AXES_ATTRIBUTE = -17,
    AXES_CHILD = -18,
    AXES_DESCENDANT = -19,
    AXES_DESCENDANT_SELF = -20,
    AXES_FOLLOWING = -21,
    AXES_FOLLOWING_SIBLING = -22,
    AXES_NAMESPACE = -23,
    AXES_PARENT = -24,
    AXES_PRECEDING = -25,
    AXES_PRECEDING_SIBLING = -26,
    AXES_SELF = -27,
    END_AXES = -27,
    START_FUNCS = -28,
    FUNC_TRUE = -28,
    FUNC_FALSE = -29,
    FUNC_NOT = -30,
    FUNC_ID = -31,
    FUNC_KEY = -32,
    FUNC_OTHER = -33,
    END_FUNCS = -33
};

typedef enum XSDType {
    XSD_UNKNOWN = 0,
    XSD_YEAR = 1,
    XSD_MONTH = 2,
    XSD_DAY = 4,
    XSD_TIME = 8,
    XSD_YEAR_MONTH = 3,
    XSD_MONTH_DAY = 6,
    XSD_DATE = 7,
    XSD_TIME_INSTANT = 15
};

typedef enum XSLTBuilder::ParseFlags {
    NONE = 0,
    NO_CURRENT = 1,
    NO_VARIABLES = 2,
    NO_KEYS = 4,
    FWD_COMPAT = 8,
    NO_OPT = 16
};

typedef enum XSLTInheritAttrs::ElemType {
    XslElem = 0,
    ExtElem = 1,
    LiteralElem = 2,
    StyleElem = 3
};

typedef enum XStreamFactory::OutputType {
    OutputText = 0,
    OutputXML = 1,
    OutputHTML = 2
};

typedef enum XSyntaxNode::NodeType {
    UNKNOWN = 0,
    ABS = 1,
    BOOLEAN = 2,
    CAST = 3,
    COMPARE = 4,
    CONTEXT = 5,
    COMPERROR = 6,
    FILTER = 7,
    FUNCTIONCALL = 8,
    GROUP = 9,
    LITERAL = 10,
    NUMERIC = 11,
    PATH = 12,
    SORT = 13,
    VARIABLEREF = 14,
    UNION = 15
};

typedef enum XSyntaxNode::OptimizeFlags {
    MATCH_OPT = 1,
    EXPR_OPT = 2,
    MATCH_TO_EXPR = 4
};

typedef enum XVariant::DataType {
    tUnknown = 0,
    tBoolean = 1,
    tInt = 2,
    tR8 = 3,
    tString = 4,
    tRTF = 5,
    tNodeSet = 6,
    tPointer = 7,
    tObject = 8,
    tLastType = 8
};

typedef enum XWinRT::ComLock::Kind {
    Kind_Srw = 0,
    Kind_StaReentrancy = 1
};

typedef enum XmlEvent::EventType {
    UNKNOWN = 0,
    BEGIN_ELEM = 1,
    END_ELEM = 2,
    BEGIN_ATTR = 3,
    END_ATTR = 4,
    BEGIN_COMMENT = 5,
    END_COMMENT = 6,
    BEGIN_PI = 7,
    END_PI = 8,
    TEXT = 9,
    TEXT_NOENT = 10,
    NAMESPACE = 11,
    WS = 12,
    WS_OPTIONAL = 13
};

typedef enum XmlParseTask::OptionsEnum {
    NoOptions = 0,
    Async = 1,
    NotAsync = 0,
    ResolveExternals = 2,
    NotResolveExternals = 0,
    Validate = 4,
    NotValidate = 0,
    ServerHTTP = 8,
    NotServerHTTP = 0,
    ForcedResync = 16,
    NoForcedResync = 0
};

typedef enum XmlSecurityEnum {
    ALLOW_ALL = 0,
    CHECK_SECURITY = 1,
    ALLOW_NONE = 2
};

typedef enum _ACCESS_REASON_TYPE {
    AccessReasonNone = 0,
    AccessReasonAllowedAce = 0x10000,
    AccessReasonDeniedAce = 0x20000,
    AccessReasonAllowedParentAce = 0x30000,
    AccessReasonDeniedParentAce = 0x40000,
    AccessReasonNotGrantedByCape = 0x50000,
    AccessReasonNotGrantedByParentCape = 0x60000,
    AccessReasonNotGrantedToAppContainer = 0x70000,
    AccessReasonMissingPrivilege = 0x100000,
    AccessReasonFromPrivilege = 0x200000,
    AccessReasonIntegrityLevel = 0x300000,
    AccessReasonOwnership = 0x400000,
    AccessReasonNullDacl = 0x500000,
    AccessReasonEmptyDacl = 0x600000,
    AccessReasonNoSD = 0x700000,
    AccessReasonNoGrant = 0x800000,
    AccessReasonTrustLabel = 0x900000,
    AccessReasonFilterAce = 0xa00000
};

typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation = 1,
    AclSizeInformation = 2
};

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation = 1,
    ActivationContextDetailedInformation = 2,
    AssemblyDetailedInformationInActivationContext = 3,
    FileInformationInAssemblyOfAssemblyInActivationContext = 4,
    RunlevelInformationInActivationContext = 5,
    CompatibilityInformationInActivationContext = 6,
    ActivationContextManifestResourceName = 7,
    MaxActivationContextInfoClass = 8,
    AssemblyDetailedInformationInActivationContxt = 3,
    FileInformationInAssemblyOfAssemblyInActivationContxt = 4
};

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS {
    AlpcMessageSidInformation = 0,
    AlpcMessageTokenModifiedIdInformation = 1,
    AlpcMessageDirectStatusInformation = 2,
    AlpcMessageHandleInformation = 3
};

typedef enum _ALPC_PORT_INFORMATION_CLASS {
    AlpcBasicInformation = 0,
    AlpcPortInformation = 1,
    AlpcAssociateCompletionPortInformation = 2,
    AlpcConnectedSIDInformation = 3,
    AlpcServerInformation = 4,
    AlpcMessageZoneInformation = 5,
    AlpcRegisterCompletionListInformation = 6,
    AlpcUnregisterCompletionListInformation = 7,
    AlpcAdjustCompletionListConcurrencyCountInformation = 8,
    AlpcRegisterCallbackInformation = 9,
    AlpcCompletionListRundownInformation = 10,
    AlpcWaitForPortReferences = 11
};

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE {
    StandardDesign = 0,
    NEC98x86 = 1,
    EndAlternatives = 2
};

typedef enum _APPCONTAINER_SID_TYPE {
    NotAppContainerSidType = 0,
    ChildAppContainerSidType = 1,
    ParentAppContainerSidType = 2,
    InvalidAppContainerSidType = 3,
    MaxAppContainerSidType = 4
};

typedef enum _APTTYPE {
    APTTYPE_CURRENT = -1,
    APTTYPE_STA = 0,
    APTTYPE_MTA = 1,
    APTTYPE_NA = 2,
    APTTYPE_MAINSTA = 3
};

typedef enum _APTTYPEQUALIFIER {
    APTTYPEQUALIFIER_NONE = 0,
    APTTYPEQUALIFIER_IMPLICIT_MTA = 1,
    APTTYPEQUALIFIER_NA_ON_MTA = 2,
    APTTYPEQUALIFIER_NA_ON_STA = 3,
    APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4,
    APTTYPEQUALIFIER_NA_ON_MAINSTA = 5,
    APTTYPEQUALIFIER_APPLICATION_STA = 6,
    APTTYPEQUALIFIER_RESERVED_1 = 7
};

typedef enum _ATOM_INFORMATION_CLASS {
    AtomBasicInformation = 0,
    AtomTableInformation = 1
};

typedef enum _AUDIT_EVENT_TYPE {
    AuditEventObjectAccess = 0,
    AuditEventDirectoryServiceAccess = 1
};

typedef enum _BEHAVIOR_EVENT {
    BEHAVIOREVENT_FIRST = 0,
    BEHAVIOREVENT_CONTENTREADY = 0,
    BEHAVIOREVENT_DOCUMENTREADY = 1,
    BEHAVIOREVENT_APPLYSTYLE = 2,
    BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE = 3,
    BEHAVIOREVENT_CONTENTSAVE = 4,
    BEHAVIOREVENT_LAST = 4,
    BEHAVIOR_EVENT_Max = 0x7fffffff
};

typedef enum _BEHAVIOR_EVENT_FLAGS {
    BEHAVIOREVENTFLAGS_BUBBLE = 1,
    BEHAVIOREVENTFLAGS_STANDARDADDITIVE = 2,
    BEHAVIOR_EVENT_FLAGS_Max = 0x7fffffff
};

typedef enum _BEHAVIOR_LAYOUT_INFO {
    BEHAVIORLAYOUTINFO_FULLDELEGATION = 1,
    BEHAVIORLAYOUTINFO_MODIFYNATURAL = 2,
    BEHAVIORLAYOUTINFO_MAPSIZE = 4,
    BEHAVIOR_LAYOUT_INFO_Max = 0x7fffffff
};

typedef enum _BEHAVIOR_LAYOUT_MODE {
    BEHAVIORLAYOUTMODE_NATURAL = 1,
    BEHAVIORLAYOUTMODE_MINWIDTH = 2,
    BEHAVIORLAYOUTMODE_MAXWIDTH = 4,
    BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION = 16384,
    BEHAVIORLAYOUTMODE_FINAL_PERCENT = 0x8000,
    BEHAVIOR_LAYOUT_MODE_Max = 0x7fffffff
};

typedef enum _BEHAVIOR_RELATION {
    BEHAVIOR_FIRSTRELATION = 0,
    BEHAVIOR_SAMEELEMENT = 0,
    BEHAVIOR_PARENT = 1,
    BEHAVIOR_CHILD = 2,
    BEHAVIOR_SIBLING = 3,
    BEHAVIOR_LASTRELATION = 3,
    BEHAVIOR_RELATION_Max = 0x7fffffff
};

typedef enum _BEHAVIOR_RENDER_INFO {
    BEHAVIORRENDERINFO_BEFOREBACKGROUND = 1,
    BEHAVIORRENDERINFO_AFTERBACKGROUND = 2,
    BEHAVIORRENDERINFO_BEFORECONTENT = 4,
    BEHAVIORRENDERINFO_AFTERCONTENT = 8,
    BEHAVIORRENDERINFO_AFTERFOREGROUND = 32,
    BEHAVIORRENDERINFO_ABOVECONTENT = 40,
    BEHAVIORRENDERINFO_ALLLAYERS = 255,
    BEHAVIORRENDERINFO_DISABLEBACKGROUND = 256,
    BEHAVIORRENDERINFO_DISABLENEGATIVEZ = 512,
    BEHAVIORRENDERINFO_DISABLECONTENT = 1024,
    BEHAVIORRENDERINFO_DISABLEPOSITIVEZ = 2048,
    BEHAVIORRENDERINFO_DISABLEALLLAYERS = 3840,
    BEHAVIORRENDERINFO_HITTESTING = 4096,
    BEHAVIORRENDERINFO_SURFACE = 0x100000,
    BEHAVIORRENDERINFO_3DSURFACE = 0x200000,
    BEHAVIOR_RENDER_INFO_Max = 0x7fffffff
};

typedef enum _BOOT_ENTROPY_SOURCE_ID {
    BootEntropySourceNone = 0,
    BootEntropySourceSeedfile = 1,
    BootEntropySourceExternal = 2,
    BootEntropySourceTpm = 3,
    BootEntropySourceRdrand = 4,
    BootEntropySourceTime = 5,
    BootEntropySourceAcpiOem0 = 6,
    BootEntropySourceUefi = 7,
    BootEntropySourceCng = 8,
    BootEntropySourceTcbTpm = 9,
    BootEntropySourceTcbRdrand = 10,
    BootMaxEntropySources = 10
};

typedef enum _BOOT_ENTROPY_SOURCE_RESULT_CODE {
    BootEntropySourceStructureUninitialized = 0,
    BootEntropySourceDisabledByPolicy = 1,
    BootEntropySourceNotPresent = 2,
    BootEntropySourceError = 3,
    BootEntropySourceSuccess = 4
};

typedef enum _BUS_DATA_TYPE {
    ConfigurationSpaceUndefined = -1,
    Cmos = 0,
    EisaConfiguration = 1,
    Pos = 2,
    CbusConfiguration = 3,
    PCIConfiguration = 4,
    VMEConfiguration = 5,
    NuBusConfiguration = 6,
    PCMCIAConfiguration = 7,
    MPIConfiguration = 8,
    MPSAConfiguration = 9,
    PNPISAConfiguration = 10,
    SgiInternalConfiguration = 11,
    MaximumBusDataType = 12
};

typedef enum _BoolValue {
    True = 1,
    False = 0,
    BoolValue_Max = 0x7fffffff
};

typedef enum _CARET_DIRECTION {
    CARET_DIRECTION_INDETERMINATE = 0,
    CARET_DIRECTION_SAME = 1,
    CARET_DIRECTION_BACKWARD = 2,
    CARET_DIRECTION_FORWARD = 3,
    CARET_DIRECTION_Max = 0x7fffffff
};

typedef enum _CI_WINDOWS_LOCKDOWN_MODE {
    CI_WINDOWS_LOCKDOWN_MODE_UNLOCKED = 0,
    CI_WINDOWS_LOCKDOWN_MODE_TRIAL = 1,
    CI_WINDOWS_LOCKDOWN_MODE_LOCKED = 2,
    CI_WINDOWS_LOCKDOWN_MODE_MAX = 3
};

typedef enum _CM_ERROR_CONTROL_TYPE {
    IgnoreError = 0,
    NormalError = 1,
    SevereError = 2,
    CriticalError = 3
};

typedef enum _CM_SERVICE_LOAD_TYPE {
    BootLoad = 0,
    SystemLoad = 1,
    AutoLoad = 2,
    DemandLoad = 3,
    DisableLoad = 4
};

typedef enum _CM_SERVICE_NODE_TYPE {
    DriverType = 1,
    FileSystemType = 2,
    Win32ServiceOwnProcess = 16,
    Win32ServiceShareProcess = 32,
    AdapterType = 4,
    RecognizerType = 8
};

typedef enum _CM_SHARE_DISPOSITION {
    CmResourceShareUndetermined = 0,
    CmResourceShareDeviceExclusive = 1,
    CmResourceShareDriverExclusive = 2,
    CmResourceShareShared = 3
};

typedef enum _COMPUTER_NAME_FORMAT {
    ComputerNameNetBIOS = 0,
    ComputerNameDnsHostname = 1,
    ComputerNameDnsDomain = 2,
    ComputerNameDnsFullyQualified = 3,
    ComputerNamePhysicalNetBIOS = 4,
    ComputerNamePhysicalDnsHostname = 5,
    ComputerNamePhysicalDnsDomain = 6,
    ComputerNamePhysicalDnsFullyQualified = 7,
    ComputerNameMax = 8
};

typedef enum _COORD_SYSTEM {
    COORD_SYSTEM_GLOBAL = 0,
    COORD_SYSTEM_PARENT = 1,
    COORD_SYSTEM_CONTAINER = 2,
    COORD_SYSTEM_CONTENT = 3,
    COORD_SYSTEM_FRAME = 4,
    COORD_SYSTEM_CLIENT = 5,
    COORD_SYSTEM_Max = 0x7fffffff
};

typedef enum _COPYFILE2_COPY_PHASE {
    COPYFILE2_PHASE_NONE = 0,
    COPYFILE2_PHASE_PREPARE_SOURCE = 1,
    COPYFILE2_PHASE_PREPARE_DEST = 2,
    COPYFILE2_PHASE_READ_SOURCE = 3,
    COPYFILE2_PHASE_WRITE_DESTINATION = 4,
    COPYFILE2_PHASE_SERVER_COPY = 5,
    COPYFILE2_PHASE_NAMEGRAFT_COPY = 6,
    COPYFILE2_PHASE_MAX = 7
};

typedef enum _COPYFILE2_MESSAGE_ACTION {
    COPYFILE2_PROGRESS_CONTINUE = 0,
    COPYFILE2_PROGRESS_CANCEL = 1,
    COPYFILE2_PROGRESS_STOP = 2,
    COPYFILE2_PROGRESS_QUIET = 3,
    COPYFILE2_PROGRESS_PAUSE = 4
};

typedef enum _COPYFILE2_MESSAGE_TYPE {
    COPYFILE2_CALLBACK_NONE = 0,
    COPYFILE2_CALLBACK_CHUNK_STARTED = 1,
    COPYFILE2_CALLBACK_CHUNK_FINISHED = 2,
    COPYFILE2_CALLBACK_STREAM_STARTED = 3,
    COPYFILE2_CALLBACK_STREAM_FINISHED = 4,
    COPYFILE2_CALLBACK_POLL_CONTINUE = 5,
    COPYFILE2_CALLBACK_ERROR = 6,
    COPYFILE2_CALLBACK_MAX = 7
};

typedef enum _COVERAGE_REQUEST_CODES {
    CoverageAllModules = 0,
    CoverageSearchByHash = 1,
    CoverageSearchByName = 2
};

typedef enum _CPU_SET_INFORMATION_TYPE {
    CpuSetInformation = 0
};

typedef enum _CSVFS_DISK_CONNECTIVITY {
    CsvFsDiskConnectivityNone = 0,
    CsvFsDiskConnectivityMdsNodeOnly = 1,
    CsvFsDiskConnectivitySubsetOfNodes = 2,
    CsvFsDiskConnectivityAllNodes = 3
};

typedef enum _CSV_CONTROL_OP {
    CsvControlStartRedirectFile = 2,
    CsvControlStopRedirectFile = 3,
    CsvControlQueryRedirectState = 4,
    CsvControlQueryFileRevision = 6,
    CsvControlQueryMdsPath = 8,
    CsvControlQueryFileRevisionFileId128 = 9,
    CsvControlQueryVolumeRedirectState = 10,
    CsvControlEnableUSNRangeModificationTracking = 13,
    CsvControlMarkHandleLocalVolumeMount = 14,
    CsvControlUnmarkHandleLocalVolumeMount = 15,
    CsvControlGetCsvFsMdsPathV2 = 18,
    CsvControlDisableCaching = 19,
    CsvControlEnableCaching = 20
};

typedef enum _DEBUG_CONTROL_SPACE_ITEM {
    DEBUG_CONTROL_SPACE_PCR = 0,
    DEBUG_CONTROL_SPACE_PRCB = 1,
    DEBUG_CONTROL_SPACE_KSPECIAL = 2,
    DEBUG_CONTROL_SPACE_THREAD = 3,
    DEBUG_CONTROL_SPACE_MAXIMUM = 4
};

typedef enum _DEP_SYSTEM_POLICY_TYPE {
    DEPPolicyAlwaysOff = 0,
    DEPPolicyAlwaysOn = 1,
    DEPPolicyOptIn = 2,
    DEPPolicyOptOut = 3,
    DEPTotalPolicyCount = 4
};

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceUnspecified = 0,
    PowerDeviceD0 = 1,
    PowerDeviceD1 = 2,
    PowerDeviceD2 = 3,
    PowerDeviceD3 = 4,
    PowerDeviceMaximum = 5
};

typedef enum _DEV_CONSOLE_MESSAGE_LEVEL {
    DCML_INFORMATIONAL = 0,
    DCML_WARNING = 1,
    DCML_ERROR = 2,
    DEV_CONSOLE_MESSAGE_LEVEL_Max = 0x7fffffff
};

typedef enum _DIRECTORY_NOTIFY_INFORMATION_CLASS {
    DirectoryNotifyInformation = 1,
    DirectoryNotifyExtendedInformation = 2
};

typedef enum _DISPLAYCONFIG_COLOR_ENCODING {
    DISPLAYCONFIG_COLOR_ENCODING_RGB = 0,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 1,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 2,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 3,
    DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 4,
    DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = -1
};

typedef enum _DISPLAY_BREAK {
    DISPLAY_BREAK_None = 0,
    DISPLAY_BREAK_Block = 1,
    DISPLAY_BREAK_Break = 2,
    DISPLAY_BREAK_Max = 0x7fffffff
};

typedef enum _DISPLAY_GRAVITY {
    DISPLAY_GRAVITY_PreviousLine = 1,
    DISPLAY_GRAVITY_NextLine = 2,
    DISPLAY_GRAVITY_Max = 0x7fffffff
};

typedef enum _DISPLAY_MOVEUNIT {
    DISPLAY_MOVEUNIT_PreviousLine = 1,
    DISPLAY_MOVEUNIT_NextLine = 2,
    DISPLAY_MOVEUNIT_CurrentLineStart = 3,
    DISPLAY_MOVEUNIT_CurrentLineEnd = 4,
    DISPLAY_MOVEUNIT_TopOfWindow = 5,
    DISPLAY_MOVEUNIT_BottomOfWindow = 6,
    DISPLAY_MOVEUNIT_Max = 0x7fffffff
};

typedef enum _DMA_SPEED {
    Compatible = 0,
    TypeA = 1,
    TypeB = 2,
    TypeC = 3,
    TypeF = 4,
    MaximumDmaSpeed = 5
};

typedef enum _DMA_WIDTH {
    Width8Bits = 0,
    Width16Bits = 1,
    Width32Bits = 2,
    Width64Bits = 3,
    WidthNoWrap = 4,
    MaximumDmaWidth = 5
};

typedef enum _DOM_EVENT_PHASE {
    DEP_CAPTURING_PHASE = 1,
    DEP_AT_TARGET = 2,
    DEP_BUBBLING_PHASE = 3,
    DOM_EVENT_PHASE_Max = 0x7fffffff
};

typedef enum _DPFLTR_TYPE {
    DPFLTR_SYSTEM_ID = 0,
    DPFLTR_SMSS_ID = 1,
    DPFLTR_SETUP_ID = 2,
    DPFLTR_NTFS_ID = 3,
    DPFLTR_FSTUB_ID = 4,
    DPFLTR_CRASHDUMP_ID = 5,
    DPFLTR_CDAUDIO_ID = 6,
    DPFLTR_CDROM_ID = 7,
    DPFLTR_CLASSPNP_ID = 8,
    DPFLTR_DISK_ID = 9,
    DPFLTR_REDBOOK_ID = 10,
    DPFLTR_STORPROP_ID = 11,
    DPFLTR_SCSIPORT_ID = 12,
    DPFLTR_SCSIMINIPORT_ID = 13,
    DPFLTR_CONFIG_ID = 14,
    DPFLTR_I8042PRT_ID = 15,
    DPFLTR_SERMOUSE_ID = 16,
    DPFLTR_LSERMOUS_ID = 17,
    DPFLTR_KBDHID_ID = 18,
    DPFLTR_MOUHID_ID = 19,
    DPFLTR_KBDCLASS_ID = 20,
    DPFLTR_MOUCLASS_ID = 21,
    DPFLTR_TWOTRACK_ID = 22,
    DPFLTR_WMILIB_ID = 23,
    DPFLTR_ACPI_ID = 24,
    DPFLTR_AMLI_ID = 25,
    DPFLTR_HALIA64_ID = 26,
    DPFLTR_VIDEO_ID = 27,
    DPFLTR_SVCHOST_ID = 28,
    DPFLTR_VIDEOPRT_ID = 29,
    DPFLTR_TCPIP_ID = 30,
    DPFLTR_DMSYNTH_ID = 31,
    DPFLTR_NTOSPNP_ID = 32,
    DPFLTR_FASTFAT_ID = 33,
    DPFLTR_SAMSS_ID = 34,
    DPFLTR_PNPMGR_ID = 35,
    DPFLTR_NETAPI_ID = 36,
    DPFLTR_SCSERVER_ID = 37,
    DPFLTR_SCCLIENT_ID = 38,
    DPFLTR_SERIAL_ID = 39,
    DPFLTR_SERENUM_ID = 40,
    DPFLTR_UHCD_ID = 41,
    DPFLTR_RPCPROXY_ID = 42,
    DPFLTR_AUTOCHK_ID = 43,
    DPFLTR_DCOMSS_ID = 44,
    DPFLTR_UNIMODEM_ID = 45,
    DPFLTR_SIS_ID = 46,
    DPFLTR_FLTMGR_ID = 47,
    DPFLTR_WMICORE_ID = 48,
    DPFLTR_BURNENG_ID = 49,
    DPFLTR_IMAPI_ID = 50,
    DPFLTR_SXS_ID = 51,
    DPFLTR_FUSION_ID = 52,
    DPFLTR_IDLETASK_ID = 53,
    DPFLTR_SOFTPCI_ID = 54,
    DPFLTR_TAPE_ID = 55,
    DPFLTR_MCHGR_ID = 56,
    DPFLTR_IDEP_ID = 57,
    DPFLTR_PCIIDE_ID = 58,
    DPFLTR_FLOPPY_ID = 59,
    DPFLTR_FDC_ID = 60,
    DPFLTR_TERMSRV_ID = 61,
    DPFLTR_W32TIME_ID = 62,
    DPFLTR_PREFETCHER_ID = 63,
    DPFLTR_RSFILTER_ID = 64,
    DPFLTR_FCPORT_ID = 65,
    DPFLTR_PCI_ID = 66,
    DPFLTR_DMIO_ID = 67,
    DPFLTR_DMCONFIG_ID = 68,
    DPFLTR_DMADMIN_ID = 69,
    DPFLTR_WSOCKTRANSPORT_ID = 70,
    DPFLTR_VSS_ID = 71,
    DPFLTR_PNPMEM_ID = 72,
    DPFLTR_PROCESSOR_ID = 73,
    DPFLTR_DMSERVER_ID = 74,
    DPFLTR_SR_ID = 75,
    DPFLTR_INFINIBAND_ID = 76,
    DPFLTR_IHVDRIVER_ID = 77,
    DPFLTR_IHVVIDEO_ID = 78,
    DPFLTR_IHVAUDIO_ID = 79,
    DPFLTR_IHVNETWORK_ID = 80,
    DPFLTR_IHVSTREAMING_ID = 81,
    DPFLTR_IHVBUS_ID = 82,
    DPFLTR_HPS_ID = 83,
    DPFLTR_RTLTHREADPOOL_ID = 84,
    DPFLTR_LDR_ID = 85,
    DPFLTR_TCPIP6_ID = 86,
    DPFLTR_ISAPNP_ID = 87,
    DPFLTR_SHPC_ID = 88,
    DPFLTR_STORPORT_ID = 89,
    DPFLTR_STORMINIPORT_ID = 90,
    DPFLTR_PRINTSPOOLER_ID = 91,
    DPFLTR_VSSDYNDISK_ID = 92,
    DPFLTR_VERIFIER_ID = 93,
    DPFLTR_VDS_ID = 94,
    DPFLTR_VDSBAS_ID = 95,
    DPFLTR_VDSDYN_ID = 96,
    DPFLTR_VDSDYNDR_ID = 97,
    DPFLTR_VDSLDR_ID = 98,
    DPFLTR_VDSUTIL_ID = 99,
    DPFLTR_DFRGIFC_ID = 100,
    DPFLTR_DEFAULT_ID = 101,
    DPFLTR_MM_ID = 102,
    DPFLTR_DFSC_ID = 103,
    DPFLTR_WOW64_ID = 104,
    DPFLTR_ALPC_ID = 105,
    DPFLTR_WDI_ID = 106,
    DPFLTR_PERFLIB_ID = 107,
    DPFLTR_KTM_ID = 108,
    DPFLTR_IOSTRESS_ID = 109,
    DPFLTR_HEAP_ID = 110,
    DPFLTR_WHEA_ID = 111,
    DPFLTR_USERGDI_ID = 112,
    DPFLTR_MMCSS_ID = 113,
    DPFLTR_TPM_ID = 114,
    DPFLTR_THREADORDER_ID = 115,
    DPFLTR_ENVIRON_ID = 116,
    DPFLTR_EMS_ID = 117,
    DPFLTR_WDT_ID = 118,
    DPFLTR_FVEVOL_ID = 119,
    DPFLTR_NDIS_ID = 120,
    DPFLTR_NVCTRACE_ID = 121,
    DPFLTR_LUAFV_ID = 122,
    DPFLTR_APPCOMPAT_ID = 123,
    DPFLTR_USBSTOR_ID = 124,
    DPFLTR_SBP2PORT_ID = 125,
    DPFLTR_COVERAGE_ID = 126,
    DPFLTR_CACHEMGR_ID = 127,
    DPFLTR_MOUNTMGR_ID = 128,
    DPFLTR_CFR_ID = 129,
    DPFLTR_TXF_ID = 130,
    DPFLTR_KSECDD_ID = 131,
    DPFLTR_FLTREGRESS_ID = 132,
    DPFLTR_MPIO_ID = 133,
    DPFLTR_MSDSM_ID = 134,
    DPFLTR_UDFS_ID = 135,
    DPFLTR_PSHED_ID = 136,
    DPFLTR_STORVSP_ID = 137,
    DPFLTR_LSASS_ID = 138,
    DPFLTR_SSPICLI_ID = 139,
    DPFLTR_CNG_ID = 140,
    DPFLTR_EXFAT_ID = 141,
    DPFLTR_FILETRACE_ID = 142,
    DPFLTR_XSAVE_ID = 143,
    DPFLTR_SE_ID = 144,
    DPFLTR_DRIVEEXTENDER_ID = 145,
    DPFLTR_POWER_ID = 146,
    DPFLTR_CRASHDUMPXHCI_ID = 147,
    DPFLTR_GPIO_ID = 148,
    DPFLTR_REFS_ID = 149,
    DPFLTR_WER_ID = 150,
    DPFLTR_CAPIMG_ID = 151,
    DPFLTR_VPCI_ID = 152,
    DPFLTR_STORAGECLASSMEMORY_ID = 153,
    DPFLTR_FSLIB_ID = 154,
    DPFLTR_ENDOFTABLE_ID = 155
};

typedef enum _DomConstructor {
    DomConstructorObject = 0,
    DomConstructorAttr = 1,
    DomConstructorBehaviorUrnsCollection = 2,
    DomConstructorBookmarkCollection = 3,
    DomConstructorCompatibleInfo = 4,
    DomConstructorCompatibleInfoCollection = 5,
    DomConstructorControlRangeCollection = 6,
    DomConstructorCSSCurrentStyleDeclaration = 7,
    DomConstructorCSSRuleList = 8,
    DomConstructorCSSRuleStyleDeclaration = 9,
    DomConstructorCSSStyleDeclaration = 10,
    DomConstructorCSSStyleRule = 11,
    DomConstructorCSSStyleSheet = 12,
    DomConstructorDataTransfer = 13,
    DomConstructorDOMImplementation = 14,
    DomConstructorElement = 15,
    DomConstructorEvent = 16,
    DomConstructorHistory = 17,
    DomConstructorHTCElementBehaviorDefaults = 18,
    DomConstructorHTMLAnchorElement = 19,
    DomConstructorHTMLAreaElement = 20,
    DomConstructorHTMLAreasCollection = 21,
    DomConstructorHTMLBaseElement = 22,
    DomConstructorHTMLBaseFontElement = 23,
    DomConstructorHTMLBGSoundElement = 24,
    DomConstructorHTMLBlockElement = 25,
    DomConstructorHTMLBodyElement = 26,
    DomConstructorHTMLBRElement = 27,
    DomConstructorHTMLButtonElement = 28,
    DomConstructorHTMLCollection = 29,
    DomConstructorHTMLCommentElement = 30,
    DomConstructorHTMLDDElement = 31,
    DomConstructorHTMLDivElement = 32,
    DomConstructorHTMLDocument = 33,
    DomConstructorHTMLDListElement = 34,
    DomConstructorHTMLDTElement = 35,
    DomConstructorHTMLEmbedElement = 36,
    DomConstructorHTMLFieldSetElement = 37,
    DomConstructorHTMLFontElement = 38,
    DomConstructorHTMLFormElement = 39,
    DomConstructorHTMLFrameElement = 40,
    DomConstructorHTMLFrameSetElement = 41,
    DomConstructorHTMLGenericElement = 42,
    DomConstructorHTMLHeadElement = 43,
    DomConstructorHTMLHeadingElement = 44,
    DomConstructorHTMLHRElement = 45,
    DomConstructorHTMLHtmlElement = 46,
    DomConstructorHTMLIFrameElement = 47,
    DomConstructorHTMLImageElement = 48,
    DomConstructorHTMLInputElement = 49,
    DomConstructorHTMLIsIndexElement = 50,
    DomConstructorHTMLLabelElement = 51,
    DomConstructorHTMLLegendElement = 52,
    DomConstructorHTMLLIElement = 53,
    DomConstructorHTMLLinkElement = 54,
    DomConstructorHTMLMapElement = 55,
    DomConstructorHTMLMarqueeElement = 56,
    DomConstructorHTMLMetaElement = 57,
    DomConstructorHTMLModelessDialog = 58,
    DomConstructorHTMLNamespaceInfo = 59,
    DomConstructorHTMLNamespaceInfoCollection = 60,
    DomConstructorHTMLNextIdElement = 61,
    DomConstructorHTMLNoShowElement = 62,
    DomConstructorHTMLObjectElement = 63,
    DomConstructorHTMLOListElement = 64,
    DomConstructorHTMLOptionElement = 65,
    DomConstructorHTMLParagraphElement = 66,
    DomConstructorHTMLParamElement = 67,
    DomConstructorHTMLPhraseElement = 68,
    DomConstructorHTMLPluginsCollection = 69,
    DomConstructorHTMLPopup = 70,
    DomConstructorHTMLScriptElement = 71,
    DomConstructorHTMLSelectElement = 72,
    DomConstructorHTMLSpanElement = 73,
    DomConstructorHTMLStyleElement = 74,
    DomConstructorHTMLTableCaptionElement = 75,
    DomConstructorHTMLTableCellElement = 76,
    DomConstructorHTMLTableColElement = 77,
    DomConstructorHTMLTableElement = 78,
    DomConstructorHTMLTableRowElement = 79,
    DomConstructorHTMLTableSectionElement = 80,
    DomConstructorHTMLTextAreaElement = 81,
    DomConstructorHTMLTextElement = 82,
    DomConstructorHTMLTitleElement = 83,
    DomConstructorHTMLUListElement = 84,
    DomConstructorHTMLUnknownElement = 85,
    DomConstructorImage = 86,
    DomConstructorLocation = 87,
    DomConstructorNamedNodeMap = 88,
    DomConstructorNavigator = 89,
    DomConstructorNodeList = 90,
    DomConstructorOption = 91,
    DomConstructorScreen = 92,
    DomConstructorSelection = 93,
    DomConstructorStaticNodeList = 94,
    DomConstructorStorage = 95,
    DomConstructorStyleSheetList = 96,
    DomConstructorStyleSheetPage = 97,
    DomConstructorStyleSheetPageList = 98,
    DomConstructorText = 99,
    DomConstructorTextRange = 100,
    DomConstructorTextRangeCollection = 101,
    DomConstructorTextRectangle = 102,
    DomConstructorTextRectangleList = 103,
    DomConstructorWindow = 104,
    DomConstructorXDomainRequest = 105,
    DomConstructorXMLHttpRequest = 106,
    DomConstructorMax = 107,
    DomConstructor_Max = 0x7fffffff
};

typedef enum _ELEMENTDESCRIPTOR_FLAGS {
    ELEMENTDESCRIPTORFLAGS_LITERAL = 1,
    ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL = 2,
    ELEMENTDESCRIPTOR_FLAGS_Max = 0x7fffffff
};

typedef enum _ELEMENTNAMESPACE_FLAGS {
    ELEMENTNAMESPACEFLAGS_ALLOWANYTAG = 1,
    ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS = 2,
    ELEMENTNAMESPACE_FLAGS_Max = 0x7fffffff
};

typedef enum _ELEMENT_ADJACENCY {
    ELEM_ADJ_BeforeBegin = 0,
    ELEM_ADJ_AfterBegin = 1,
    ELEM_ADJ_BeforeEnd = 2,
    ELEM_ADJ_AfterEnd = 3,
    ELEMENT_ADJACENCY_Max = 0x7fffffff
};

typedef enum _ELEMENT_CORNER {
    ELEMENT_CORNER_NONE = 0,
    ELEMENT_CORNER_TOP = 1,
    ELEMENT_CORNER_LEFT = 2,
    ELEMENT_CORNER_BOTTOM = 3,
    ELEMENT_CORNER_RIGHT = 4,
    ELEMENT_CORNER_TOPLEFT = 5,
    ELEMENT_CORNER_TOPRIGHT = 6,
    ELEMENT_CORNER_BOTTOMLEFT = 7,
    ELEMENT_CORNER_BOTTOMRIGHT = 8,
    ELEMENT_CORNER_Max = 0x7fffffff
};

typedef enum _ELEMENT_TAG_ID {
    TAGID_NULL = 0,
    TAGID_UNKNOWN = 1,
    TAGID_A = 2,
    TAGID_ACRONYM = 3,
    TAGID_ADDRESS = 4,
    TAGID_APPLET = 5,
    TAGID_AREA = 6,
    TAGID_B = 7,
    TAGID_BASE = 8,
    TAGID_BASEFONT = 9,
    TAGID_BDO = 10,
    TAGID_BGSOUND = 11,
    TAGID_BIG = 12,
    TAGID_BLINK = 13,
    TAGID_BLOCKQUOTE = 14,
    TAGID_BODY = 15,
    TAGID_BR = 16,
    TAGID_BUTTON = 17,
    TAGID_CAPTION = 18,
    TAGID_CENTER = 19,
    TAGID_CITE = 20,
    TAGID_CODE = 21,
    TAGID_COL = 22,
    TAGID_COLGROUP = 23,
    TAGID_COMMENT = 24,
    TAGID_COMMENT_RAW = 25,
    TAGID_DD = 26,
    TAGID_DEL = 27,
    TAGID_DFN = 28,
    TAGID_DIR = 29,
    TAGID_DIV = 30,
    TAGID_DL = 31,
    TAGID_DT = 32,
    TAGID_EM = 33,
    TAGID_EMBED = 34,
    TAGID_FIELDSET = 35,
    TAGID_FONT = 36,
    TAGID_FORM = 37,
    TAGID_FRAME = 38,
    TAGID_FRAMESET = 39,
    TAGID_GENERIC = 40,
    TAGID_H1 = 41,
    TAGID_H2 = 42,
    TAGID_H3 = 43,
    TAGID_H4 = 44,
    TAGID_H5 = 45,
    TAGID_H6 = 46,
    TAGID_HEAD = 47,
    TAGID_HR = 48,
    TAGID_HTML = 49,
    TAGID_I = 50,
    TAGID_IFRAME = 51,
    TAGID_IMG = 52,
    TAGID_INPUT = 53,
    TAGID_INS = 54,
    TAGID_KBD = 55,
    TAGID_LABEL = 56,
    TAGID_LEGEND = 57,
    TAGID_LI = 58,
    TAGID_LINK = 59,
    TAGID_LISTING = 60,
    TAGID_MAP = 61,
    TAGID_MARQUEE = 62,
    TAGID_MENU = 63,
    TAGID_META = 64,
    TAGID_NEXTID = 65,
    TAGID_NOBR = 66,
    TAGID_NOEMBED = 67,
    TAGID_NOFRAMES = 68,
    TAGID_NOSCRIPT = 69,
    TAGID_OBJECT = 70,
    TAGID_OL = 71,
    TAGID_OPTION = 72,
    TAGID_P = 73,
    TAGID_PARAM = 74,
    TAGID_PLAINTEXT = 75,
    TAGID_PRE = 76,
    TAGID_Q = 77,
    TAGID_RP = 78,
    TAGID_RT = 79,
    TAGID_RUBY = 80,
    TAGID_S = 81,
    TAGID_SAMP = 82,
    TAGID_SCRIPT = 83,
    TAGID_SELECT = 84,
    TAGID_SMALL = 85,
    TAGID_SPAN = 86,
    TAGID_STRIKE = 87,
    TAGID_STRONG = 88,
    TAGID_STYLE = 89,
    TAGID_SUB = 90,
    TAGID_SUP = 91,
    TAGID_TABLE = 92,
    TAGID_TBODY = 93,
    TAGID_TC = 94,
    TAGID_TD = 95,
    TAGID_TEXTAREA = 96,
    TAGID_TFOOT = 97,
    TAGID_TH = 98,
    TAGID_THEAD = 99,
    TAGID_TITLE = 100,
    TAGID_TR = 101,
    TAGID_TT = 102,
    TAGID_U = 103,
    TAGID_UL = 104,
    TAGID_VAR = 105,
    TAGID_WBR = 106,
    TAGID_XMP = 107,
    TAGID_ROOT = 108,
    TAGID_OPTGROUP = 109,
    TAGID_ABBR = 110,
    TAGID_SVG_A = 111,
    TAGID_SVG_ALTGLYPH = 112,
    TAGID_SVG_ALTGLYPHDEF = 113,
    TAGID_SVG_ALTGLYPHITEM = 114,
    TAGID_SVG_ANIMATE = 115,
    TAGID_SVG_ANIMATECOLOR = 116,
    TAGID_SVG_ANIMATEMOTION = 117,
    TAGID_SVG_ANIMATETRANSFORM = 118,
    TAGID_SVG_CIRCLE = 119,
    TAGID_SVG_CLIPPATH = 120,
    TAGID_SVG_COLOR_PROFILE = 121,
    TAGID_SVG_CURSOR = 122,
    TAGID_SVG_DEFINITION_SRC = 123,
    TAGID_SVG_DEFS = 124,
    TAGID_SVG_DESC = 125,
    TAGID_SVG_ELLIPSE = 126,
    TAGID_SVG_FEBLEND = 127,
    TAGID_SVG_FECOLORMATRIX = 128,
    TAGID_SVG_FECOMPONENTTRANSFER = 129,
    TAGID_SVG_FECOMPOSITE = 130,
    TAGID_SVG_FECONVOLVEMATRIX = 131,
    TAGID_SVG_FEDIFFUSELIGHTING = 132,
    TAGID_SVG_FEDISPLACEMENTMAP = 133,
    TAGID_SVG_FEDISTANTLIGHT = 134,
    TAGID_SVG_FEFLOOD = 135,
    TAGID_SVG_FEFUNCA = 136,
    TAGID_SVG_FEFUNCB = 137,
    TAGID_SVG_FEFUNCG = 138,
    TAGID_SVG_FEFUNCR = 139,
    TAGID_SVG_FEGAUSSIANBLUR = 140,
    TAGID_SVG_FEIMAGE = 141,
    TAGID_SVG_FEMERGE = 142,
    TAGID_SVG_FEMERGENODE = 143,
    TAGID_SVG_FEMORPHOLOGY = 144,
    TAGID_SVG_FEOFFSET = 145,
    TAGID_SVG_FEPOINTLIGHT = 146,
    TAGID_SVG_FESPECULARLIGHTING = 147,
    TAGID_SVG_FESPOTLIGHT = 148,
    TAGID_SVG_FETILE = 149,
    TAGID_SVG_FETURBULENCE = 150,
    TAGID_SVG_FILTER = 151,
    TAGID_SVG_FONT = 152,
    TAGID_SVG_FONT_FACE = 153,
    TAGID_SVG_FONT_FACE_FORMAT = 154,
    TAGID_SVG_FONT_FACE_NAME = 155,
    TAGID_SVG_FONT_FACE_SRC = 156,
    TAGID_SVG_FONT_FACE_URI = 157,
    TAGID_SVG_FOREIGNOBJECT = 158,
    TAGID_SVG_G = 159,
    TAGID_SVG_GLYPH = 160,
    TAGID_SVG_GLYPHREF = 161,
    TAGID_SVG_HKERN = 162,
    TAGID_SVG_IMAGE = 163,
    TAGID_SVG_LINE = 164,
    TAGID_SVG_LINEARGRADIENT = 165,
    TAGID_SVG_MARKER = 166,
    TAGID_SVG_MASK = 167,
    TAGID_SVG_METADATA = 168,
    TAGID_SVG_MISSING_GLYPH = 169,
    TAGID_SVG_MPATH = 170,
    TAGID_SVG_PATH = 171,
    TAGID_SVG_PATTERN = 172,
    TAGID_SVG_POLYGON = 173,
    TAGID_SVG_POLYLINE = 174,
    TAGID_SVG_RADIALGRADIENT = 175,
    TAGID_SVG_RECT = 176,
    TAGID_SVG_SCRIPT = 177,
    TAGID_SVG_SET = 178,
    TAGID_SVG_STOP = 179,
    TAGID_SVG_STYLE = 180,
    TAGID_SVG_SVG = 181,
    TAGID_SVG_SWITCH = 182,
    TAGID_SVG_SYMBOL = 183,
    TAGID_SVG_TEXT = 184,
    TAGID_SVG_TEXTPATH = 185,
    TAGID_SVG_TITLE = 186,
    TAGID_SVG_TREF = 187,
    TAGID_SVG_TSPAN = 188,
    TAGID_SVG_USE = 189,
    TAGID_SVG_VIEW = 190,
    TAGID_SVG_VKERN = 191,
    TAGID_AUDIO = 192,
    TAGID_SOURCE = 193,
    TAGID_VIDEO = 194,
    TAGID_CANVAS = 195,
    TAGID_DOCTYPE = 196,
    TAGID_KEYGEN = 197,
    TAGID_PROCESSINGINSTRUCTION = 198,
    TAGID_ARTICLE = 199,
    TAGID_ASIDE = 200,
    TAGID_FIGCAPTION = 201,
    TAGID_FIGURE = 202,
    TAGID_FOOTER = 203,
    TAGID_HEADER = 204,
    TAGID_HGROUP = 205,
    TAGID_MARK = 206,
    TAGID_NAV = 207,
    TAGID_SECTION = 208,
    TAGID_PROGRESS = 209,
    TAGID_MATHML_ANNOTATION_XML = 210,
    TAGID_MATHML_MATH = 211,
    TAGID_MATHML_MI = 212,
    TAGID_MATHML_MN = 213,
    TAGID_MATHML_MO = 214,
    TAGID_MATHML_MS = 215,
    TAGID_MATHML_MTEXT = 216,
    TAGID_DATALIST = 217,
    TAGID_TRACK = 218,
    TAGID_ISINDEX = 219,
    TAGID_COMMAND = 220,
    TAGID_DETAILS = 221,
    TAGID_SUMMARY = 222,
    TAGID_X_MS_WEBVIEW = 223,
    TAGID_COUNT = 224,
    TAGID_LAST_PREDEFINED = 10000,
    ELEMENT_TAG_ID_Max = 0x7fffffff
};

typedef enum _ENLISTMENT_INFORMATION_CLASS {
    EnlistmentBasicInformation = 0,
    EnlistmentRecoveryInformation = 1,
    EnlistmentCrmInformation = 2
};

typedef enum _ERROR_SEVERITY_VALUE {
    ErrorRecoverable = 0,
    ErrorFatal = 1,
    ErrorCorrected = 2,
    ErrorOthers = 3
};

typedef enum _EVENT_INFORMATION_CLASS {
    EventBasicInformation = 0
};

typedef enum _EVENT_TYPE {
    NotificationEvent = 0,
    SynchronizationEvent = 1
};

typedef enum _EXCEPTION_DISPOSITION {
    ExceptionContinueExecution = 0,
    ExceptionContinueSearch = 1,
    ExceptionNestedException = 2,
    ExceptionCollidedUnwind = 3
};

typedef enum _EXCEPTION_LOG_TYPE {
    LogExceptionEmpty = 0,
    LogExceptionDispatch = 1,
    LogExceptionHandler = 2
};

typedef enum _FILE_ID_TYPE {
    FileIdType = 0,
    ObjectIdType = 1,
    ExtendedFileIdType = 2,
    MaximumFileIdType = 3
};

typedef enum _FILE_INFORMATION_CLASS {
    FileDirectoryInformation = 1,
    FileFullDirectoryInformation = 2,
    FileBothDirectoryInformation = 3,
    FileBasicInformation = 4,
    FileStandardInformation = 5,
    FileInternalInformation = 6,
    FileEaInformation = 7,
    FileAccessInformation = 8,
    FileNameInformation = 9,
    FileRenameInformation = 10,
    FileLinkInformation = 11,
    FileNamesInformation = 12,
    FileDispositionInformation = 13,
    FilePositionInformation = 14,
    FileFullEaInformation = 15,
    FileModeInformation = 16,
    FileAlignmentInformation = 17,
    FileAllInformation = 18,
    FileAllocationInformation = 19,
    FileEndOfFileInformation = 20,
    FileAlternateNameInformation = 21,
    FileStreamInformation = 22,
    FilePipeInformation = 23,
    FilePipeLocalInformation = 24,
    FilePipeRemoteInformation = 25,
    FileMailslotQueryInformation = 26,
    FileMailslotSetInformation = 27,
    FileCompressionInformation = 28,
    FileObjectIdInformation = 29,
    FileCompletionInformation = 30,
    FileMoveClusterInformation = 31,
    FileQuotaInformation = 32,
    FileReparsePointInformation = 33,
    FileNetworkOpenInformation = 34,
    FileAttributeTagInformation = 35,
    FileTrackingInformation = 36,
    FileIdBothDirectoryInformation = 37,
    FileIdFullDirectoryInformation = 38,
    FileValidDataLengthInformation = 39,
    FileShortNameInformation = 40,
    FileIoCompletionNotificationInformation = 41,
    FileIoStatusBlockRangeInformation = 42,
    FileIoPriorityHintInformation = 43,
    FileSfioReserveInformation = 44,
    FileSfioVolumeInformation = 45,
    FileHardLinkInformation = 46,
    FileProcessIdsUsingFileInformation = 47,
    FileNormalizedNameInformation = 48,
    FileNetworkPhysicalNameInformation = 49,
    FileIdGlobalTxDirectoryInformation = 50,
    FileIsRemoteDeviceInformation = 51,
    FileUnusedInformation = 52,
    FileNumaNodeInformation = 53,
    FileStandardLinkInformation = 54,
    FileRemoteProtocolInformation = 55,
    FileRenameInformationBypassAccessCheck = 56,
    FileLinkInformationBypassAccessCheck = 57,
    FileVolumeNameInformation = 58,
    FileIdInformation = 59,
    FileIdExtdDirectoryInformation = 60,
    FileReplaceCompletionInformation = 61,
    FileHardLinkFullIdInformation = 62,
    FileIdExtdBothDirectoryInformation = 63,
    FileDispositionInformationEx = 64,
    FileRenameInformationEx = 65,
    FileRenameInformationExBypassAccessCheck = 66,
    FileDesiredStorageClassInformation = 67,
    FileStatInformation = 68,
    FileMemoryPartitionInformation = 69,
    FileStatLxInformation = 70,
    FileCaseSensitiveInformation = 71,
    FileLinkInformationEx = 72,
    FileLinkInformationExBypassAccessCheck = 73,
    FileStorageReserveIdInformation = 74,
    FileCaseSensitiveInformationForceAccessCheck = 75,
    FileMaximumInformation = 76
};

typedef enum _FILE_INFO_BY_HANDLE_CLASS {
    FileBasicInfo = 0,
    FileStandardInfo = 1,
    FileNameInfo = 2,
    FileRenameInfo = 3,
    FileDispositionInfo = 4,
    FileAllocationInfo = 5,
    FileEndOfFileInfo = 6,
    FileStreamInfo = 7,
    FileCompressionInfo = 8,
    FileAttributeTagInfo = 9,
    FileIdBothDirectoryInfo = 10,
    FileIdBothDirectoryRestartInfo = 11,
    FileIoPriorityHintInfo = 12,
    FileRemoteProtocolInfo = 13,
    FileFullDirectoryInfo = 14,
    FileFullDirectoryRestartInfo = 15,
    FileStorageInfo = 16,
    FileAlignmentInfo = 17,
    FileIdInfo = 18,
    FileIdExtdDirectoryInfo = 19,
    FileIdExtdDirectoryRestartInfo = 20,
    FileDispositionInfoEx = 21,
    FileRenameInfoEx = 22,
    MaximumFileInfoByHandleClass = 23
};

typedef enum _FILE_METADATA_OPTIMIZATION_STATE {
    FileMetadataOptimizationNone = 0,
    FileMetadataOptimizationInProgress = 1,
    FileMetadataOptimizationPending = 2
};

typedef enum _FILE_STORAGE_TIER_CLASS {
    FileStorageTierClassUnspecified = 0,
    FileStorageTierClassCapacity = 1,
    FileStorageTierClassPerformance = 2,
    FileStorageTierClassMax = 3
};

typedef enum _FILE_STORAGE_TIER_MEDIA_TYPE {
    FileStorageTierMediaTypeUnspecified = 0,
    FileStorageTierMediaTypeDisk = 1,
    FileStorageTierMediaTypeSsd = 2,
    FileStorageTierMediaTypeScm = 4,
    FileStorageTierMediaTypeMax = 5
};

typedef enum _FILTER_BOOT_OPTION_OPERATION {
    FilterBootOptionOperationOpenSystemStore = 0,
    FilterBootOptionOperationSetElement = 1,
    FilterBootOptionOperationDeleteElement = 2,
    FilterBootOptionOperationMax = 3
};

typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoStandard = 0,
    FindExInfoBasic = 1,
    FindExInfoMaxInfoLevel = 2
};

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchNameMatch = 0,
    FindExSearchLimitToDirectories = 1,
    FindExSearchLimitToDevices = 2,
    FindExSearchMaxSearchOp = 3
};

typedef enum _FINDTEXT_FLAGS {
    FINDTEXT_BACKWARDS = 1,
    FINDTEXT_WHOLEWORD = 2,
    FINDTEXT_MATCHCASE = 4,
    FINDTEXT_RAW = 0x20000,
    FINDTEXT_MATCHREPEATEDWHITESPACE = 0x40000,
    FINDTEXT_MATCHDIAC = 0x20000000,
    FINDTEXT_MATCHKASHIDA = 0x40000000,
    FINDTEXT_MATCHALEFHAMZA = -2147483648,
    FINDTEXT_FLAGS_Max = 0x7fffffff
};

typedef enum _FIRMWARE_TYPE {
    FirmwareTypeUnknown = 0,
    FirmwareTypeBios = 1,
    FirmwareTypeUefi = 2,
    FirmwareTypeMax = 3
};

typedef enum _FP_IEEE_COMPARE_RESULT {
    FpCompareEqual = 0,
    FpCompareGreater = 1,
    FpCompareLess = 2,
    FpCompareUnordered = 3
};

typedef enum _FP_IEEE_OPERATION_CODE {
    FpCodeUnspecified = 0,
    FpCodeAdd = 1,
    FpCodeSubtract = 2,
    FpCodeMultiply = 3,
    FpCodeDivide = 4,
    FpCodeSquareRoot = 5,
    FpCodeRemainder = 6,
    FpCodeCompare = 7,
    FpCodeConvert = 8,
    FpCodeRound = 9,
    FpCodeTruncate = 10,
    FpCodeFloor = 11,
    FpCodeCeil = 12,
    FpCodeAcos = 13,
    FpCodeAsin = 14,
    FpCodeAtan = 15,
    FpCodeAtan2 = 16,
    FpCodeCabs = 17,
    FpCodeCos = 18,
    FpCodeCosh = 19,
    FpCodeExp = 20,
    FpCodeFabs = 21,
    FpCodeFmod = 22,
    FpCodeFrexp = 23,
    FpCodeHypot = 24,
    FpCodeLdexp = 25,
    FpCodeLog = 26,
    FpCodeLog10 = 27,
    FpCodeModf = 28,
    FpCodePow = 29,
    FpCodeSin = 30,
    FpCodeSinh = 31,
    FpCodeTan = 32,
    FpCodeTanh = 33,
    FpCodeY0 = 34,
    FpCodeY1 = 35,
    FpCodeYn = 36
};

typedef enum _FP__IEEE_FORMAT {
    FpFormatFp32 = 0,
    FpFormatFp64 = 1,
    FpFormatFp80 = 2,
    FpFormatFp128 = 3,
    FpFormatI16 = 4,
    FpFormatI32 = 5,
    FpFormatI64 = 6,
    FpFormatU16 = 7,
    FpFormatU32 = 8,
    FpFormatU64 = 9,
    FpFormatCompare = 10,
    FpFormatString = 11
};

typedef enum _FP__IEEE_ROUNDING_MODE {
    FpRoundNearest = 0,
    FpRoundMinusInfinity = 1,
    FpRoundPlusInfinity = 2,
    FpRoundChopped = 3
};

typedef enum _FSINFOCLASS {
    FileFsVolumeInformation = 1,
    FileFsLabelInformation = 2,
    FileFsSizeInformation = 3,
    FileFsDeviceInformation = 4,
    FileFsAttributeInformation = 5,
    FileFsControlInformation = 6,
    FileFsFullSizeInformation = 7,
    FileFsObjectIdInformation = 8,
    FileFsDriverPathInformation = 9,
    FileFsVolumeFlagsInformation = 10,
    FileFsSectorSizeInformation = 11,
    FileFsDataCopyInformation = 12,
    FileFsMetadataSizeInformation = 13,
    FileFsFullSizeInformationEx = 14,
    FileFsMaximumInformation = 15
};

typedef enum _FUNCTION_TABLE_TYPE {
    RF_SORTED = 0,
    RF_UNSORTED = 1,
    RF_CALLBACK = 2,
    RF_KERNEL_DYNAMIC = 3
};

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard = 0,
    GetFileExMaxInfoLevel = 1
};

typedef enum _HARDERROR_RESPONSE {
    ResponseReturnToCaller = 0,
    ResponseNotHandled = 1,
    ResponseAbort = 2,
    ResponseCancel = 3,
    ResponseIgnore = 4,
    ResponseNo = 5,
    ResponseOk = 6,
    ResponseRetry = 7,
    ResponseYes = 8,
    ResponseTryAgain = 9,
    ResponseContinue = 10
};

typedef enum _HARDERROR_RESPONSE_OPTION {
    OptionAbortRetryIgnore = 0,
    OptionOk = 1,
    OptionOkCancel = 2,
    OptionRetryCancel = 3,
    OptionYesNo = 4,
    OptionYesNoCancel = 5,
    OptionShutdownSystem = 6,
    OptionOkNoWait = 7,
    OptionCancelTryContinue = 8
};

typedef enum _HARDWARE_COUNTER_TYPE {
    PMCCounter = 0,
    MaxHardwareCounterType = 1
};

typedef enum _HEAP_INFORMATION_CLASS {
    HeapCompatibilityInformation = 0,
    HeapEnableTerminationOnCorruption = 1,
    HeapExtendedInformation = 2,
    HeapOptimizeResources = 3,
    HeapTaggingInformation = 4,
    HeapStackDatabase = 5,
    HeapMemoryLimit = 6,
    HeapDetailedFailureInformation = -2147483647,
    HeapSetDebuggingInformation = -2147483646
};

typedef enum _HIBERFILE_BUCKET_SIZE {
    HiberFileBucket1GB = 0,
    HiberFileBucket2GB = 1,
    HiberFileBucket4GB = 2,
    HiberFileBucket8GB = 3,
    HiberFileBucket16GB = 4,
    HiberFileBucket32GB = 5,
    HiberFileBucketUnlimited = 6,
    HiberFileBucketMax = 7
};

typedef enum _HOT_PATCH_INFORMATION_CLASS {
    ManageHotPatchLoadPatch = 0,
    ManageHotPatchUnloadPatch = 1,
    ManageHotPatchQueryPatches = 2,
    ManageHotPatchLoadPatchForUser = 3,
    ManageHotPatchUnloadPatchForUser = 4,
    ManageHotPatchQueryPatchesForUser = 5,
    ManageHotPatchQueryActivePatches = 6,
    ManageHotPatchMax = 7
};

typedef enum _HTMLAppFlag {
    HTMLAppFlagNo = 0,
    HTMLAppFlagOff = 0,
    HTMLAppFlag0 = 0,
    HTMLAppFlagYes = 1,
    HTMLAppFlagOn = 1,
    HTMLAppFlag1 = 1,
    HTMLAppFlag_Max = 0x7fffffff
};

typedef enum _HTMLBorder {
    HTMLBorderNone = 0,
    HTMLBorderThick = 0x40000,
    HTMLBorderDialog = 0x400000,
    HTMLBorderThin = 0x800000,
    HTMLBorder_Max = 0x7fffffff
};

typedef enum _HTMLBorderStyle {
    HTMLBorderStyleNormal = 0,
    HTMLBorderStyleRaised = 256,
    HTMLBorderStyleSunken = 512,
    HTMLBorderStylecombined = 768,
    HTMLBorderStyleStatic = 0x20000,
    HTMLBorderStyle_Max = 0x7fffffff
};

typedef enum _HTMLCaptionFlag {
    HTMLCaptionFlagNo = 0,
    HTMLCaptionFlagYes = 0xc00000,
    HTMLCaptionFlag_Max = 0x7fffffff
};

typedef enum _HTMLDlgBorder {
    HTMLDlgBorderThin = 0,
    HTMLDlgBorderThick = 0x40000,
    HTMLDlgBorder_Max = 0x7fffffff
};

typedef enum _HTMLDlgCenter {
    HTMLDlgCenterNo = 0,
    HTMLDlgCenterOff = 0,
    HTMLDlgCenter0 = 0,
    HTMLDlgCenterYes = 1,
    HTMLDlgCenterOn = 1,
    HTMLDlgCenter1 = 1,
    HTMLDlgCenterParent = 1,
    HTMLDlgCenterDesktop = 2,
    HTMLDlgCenter_Max = 0x7fffffff
};

typedef enum _HTMLDlgEdge {
    HTMLDlgEdgeSunken = 0,
    HTMLDlgEdgeRaised = 16,
    HTMLDlgEdge_Max = 0x7fffffff
};

typedef enum _HTMLDlgFlag {
    HTMLDlgFlagNo = 0,
    HTMLDlgFlagOff = 0,
    HTMLDlgFlag0 = 0,
    HTMLDlgFlagYes = 1,
    HTMLDlgFlagOn = 1,
    HTMLDlgFlag1 = 1,
    HTMLDlgFlagNotSet = -1,
    HTMLDlgFlag_Max = 0x7fffffff
};

typedef enum _HTMLMaximizeFlag {
    HTMLMaximizeFlagNo = 0,
    HTMLMaximizeFlagYes = 0x10000,
    HTMLMaximizeFlag_Max = 0x7fffffff
};

typedef enum _HTMLMinimizeFlag {
    HTMLMinimizeFlagNo = 0,
    HTMLMinimizeFlagYes = 0x20000,
    HTMLMinimizeFlag_Max = 0x7fffffff
};

typedef enum _HTMLSysMenuFlag {
    HTMLSysMenuFlagNo = 0,
    HTMLSysMenuFlagYes = 0x80000,
    HTMLSysMenuFlag_Max = 0x7fffffff
};

typedef enum _HTMLWindowState {
    HTMLWindowStateNormal = 1,
    HTMLWindowStateMaximize = 3,
    HTMLWindowStateMinimize = 6,
    HTMLWindowState_Max = 0x7fffffff
};

typedef enum _HTML_PAINTER {
    HTMLPAINTER_OPAQUE = 1,
    HTMLPAINTER_TRANSPARENT = 2,
    HTMLPAINTER_ALPHA = 4,
    HTMLPAINTER_COMPLEX = 8,
    HTMLPAINTER_OVERLAY = 16,
    HTMLPAINTER_HITTEST = 32,
    HTMLPAINTER_SURFACE = 256,
    HTMLPAINTER_3DSURFACE = 512,
    HTMLPAINTER_NOBAND = 1024,
    HTMLPAINTER_NODC = 4096,
    HTMLPAINTER_NOPHYSICALCLIP = 8192,
    HTMLPAINTER_NOSAVEDC = 16384,
    HTMLPAINTER_SUPPORTS_XFORM = 0x8000,
    HTMLPAINTER_EXPAND = 0x10000,
    HTMLPAINTER_NOSCROLLBITS = 0x20000,
    HTML_PAINTER_Max = 0x7fffffff
};

typedef enum _HTML_PAINT_DRAW_FLAGS {
    HTMLPAINT_DRAW_UPDATEREGION = 1,
    HTMLPAINT_DRAW_USE_XFORM = 2,
    HTML_PAINT_DRAW_FLAGS_Max = 0x7fffffff
};

typedef enum _HTML_PAINT_DRAW_INFO_FLAGS {
    HTMLPAINT_DRAWINFO_VIEWPORT = 1,
    HTMLPAINT_DRAWINFO_UPDATEREGION = 2,
    HTMLPAINT_DRAWINFO_XFORM = 4,
    HTML_PAINT_DRAW_INFO_FLAGS_Max = 0x7fffffff
};

typedef enum _HTML_PAINT_EVENT_FLAGS {
    HTMLPAINT_EVENT_TARGET = 1,
    HTMLPAINT_EVENT_SETCURSOR = 2,
    HTML_PAINT_EVENT_FLAGS_Max = 0x7fffffff
};

typedef enum _HTML_PAINT_ZORDER {
    HTMLPAINT_ZORDER_NONE = 0,
    HTMLPAINT_ZORDER_REPLACE_ALL = 1,
    HTMLPAINT_ZORDER_REPLACE_CONTENT = 2,
    HTMLPAINT_ZORDER_REPLACE_BACKGROUND = 3,
    HTMLPAINT_ZORDER_BELOW_CONTENT = 4,
    HTMLPAINT_ZORDER_BELOW_FLOW = 5,
    HTMLPAINT_ZORDER_ABOVE_FLOW = 6,
    HTMLPAINT_ZORDER_ABOVE_CONTENT = 7,
    HTMLPAINT_ZORDER_WINDOW_TOP = 8,
    HTML_PAINT_ZORDER_Max = 0x7fffffff
};

typedef enum _HT_OPTIONS {
    HT_OPT_AllowAfterEOL = 1,
    HT_OPTIONS_Max = 0x7fffffff
};

typedef enum _HT_RESULTS {
    HT_RESULTS_Glyph = 1,
    HT_RESULTS_Max = 0x7fffffff
};

typedef enum _IDL_CS_CONVERT {
    IDL_CS_NO_CONVERT = 0,
    IDL_CS_IN_PLACE_CONVERT = 1,
    IDL_CS_NEW_BUFFER_CONVERT = 2
};

typedef enum _IMAGE_MITIGATION_POLICY {
    ImageDepPolicy = 0,
    ImageAslrPolicy = 1,
    ImageDynamicCodePolicy = 2,
    ImageStrictHandleCheckPolicy = 3,
    ImageSystemCallDisablePolicy = 4,
    ImageMitigationOptionsMask = 5,
    ImageExtensionPointDisablePolicy = 6,
    ImageControlFlowGuardPolicy = 7,
    ImageSignaturePolicy = 8,
    ImageFontDisablePolicy = 9,
    ImageImageLoadPolicy = 10,
    ImagePayloadRestrictionPolicy = 11,
    ImageChildProcessPolicy = 12,
    ImageSehopPolicy = 13,
    ImageHeapPolicy = 14,
    MaxImageMitigationPolicy = 15
};

typedef enum _IMAGE_POLICY_ENTRY_TYPE {
    ImagePolicyEntryTypeNone = 0,
    ImagePolicyEntryTypeBool = 1,
    ImagePolicyEntryTypeInt8 = 2,
    ImagePolicyEntryTypeUInt8 = 3,
    ImagePolicyEntryTypeInt16 = 4,
    ImagePolicyEntryTypeUInt16 = 5,
    ImagePolicyEntryTypeInt32 = 6,
    ImagePolicyEntryTypeUInt32 = 7,
    ImagePolicyEntryTypeInt64 = 8,
    ImagePolicyEntryTypeUInt64 = 9,
    ImagePolicyEntryTypeAnsiString = 10,
    ImagePolicyEntryTypeUnicodeString = 11,
    ImagePolicyEntryTypeOverride = 12,
    ImagePolicyEntryTypeMaximum = 13
};

typedef enum _IMAGE_POLICY_ID {
    ImagePolicyIdNone = 0,
    ImagePolicyIdEtw = 1,
    ImagePolicyIdDebug = 2,
    ImagePolicyIdCrashDump = 3,
    ImagePolicyIdCrashDumpKey = 4,
    ImagePolicyIdCrashDumpKeyGuid = 5,
    ImagePolicyIdParentSd = 6,
    ImagePolicyIdParentSdRev = 7,
    ImagePolicyIdSvn = 8,
    ImagePolicyIdDeviceId = 9,
    ImagePolicyIdCapability = 10,
    ImagePolicyIdScenarioId = 11,
    ImagePolicyIdMaximum = 12
};

typedef enum _INTERFACE_TYPE {
    InterfaceTypeUndefined = -1,
    Internal = 0,
    Isa = 1,
    Eisa = 2,
    MicroChannel = 3,
    TurboChannel = 4,
    PCIBus = 5,
    VMEBus = 6,
    NuBus = 7,
    PCMCIABus = 8,
    CBus = 9,
    MPIBus = 10,
    MPSABus = 11,
    ProcessorInternal = 12,
    InternalPowerBus = 13,
    PNPISABus = 14,
    PNPBus = 15,
    Vmcs = 16,
    ACPIBus = 17,
    MaximumInterfaceType = 18
};

typedef enum _IO_COMPLETION_INFORMATION_CLASS {
    IoCompletionBasicInformation = 0
};

typedef enum _IO_PRIORITY_HINT {
    IoPriorityVeryLow = 0,
    IoPriorityLow = 1,
    IoPriorityNormal = 2,
    IoPriorityHigh = 3,
    IoPriorityCritical = 4,
    MaxIoPriorityTypes = 5
};

typedef enum _IO_SESSION_EVENT {
    IoSessionEventIgnore = 0,
    IoSessionEventCreated = 1,
    IoSessionEventTerminated = 2,
    IoSessionEventConnected = 3,
    IoSessionEventDisconnected = 4,
    IoSessionEventLogon = 5,
    IoSessionEventLogoff = 6,
    IoSessionEventMax = 7
};

typedef enum _IO_SESSION_STATE {
    IoSessionStateCreated = 1,
    IoSessionStateInitialized = 2,
    IoSessionStateConnected = 3,
    IoSessionStateDisconnected = 4,
    IoSessionStateDisconnectedLoggedOn = 5,
    IoSessionStateLoggedOn = 6,
    IoSessionStateLoggedOff = 7,
    IoSessionStateTerminated = 8,
    IoSessionStateMax = 9
};

typedef enum _IRQ_DEVICE_POLICY {
    IrqPolicyMachineDefault = 0,
    IrqPolicyAllCloseProcessors = 1,
    IrqPolicyOneCloseProcessor = 2,
    IrqPolicyAllProcessorsInMachine = 3,
    IrqPolicySpecifiedProcessors = 4,
    IrqPolicySpreadMessagesAcrossAllProcessors = 5,
    IrqPolicyAllProcessorsInMachineWhenSteered = 6
};

typedef enum _IRQ_GROUP_POLICY {
    GroupAffinityAllGroupZero = 0,
    GroupAffinityDontCare = 1
};

typedef enum _IRQ_PRIORITY {
    IrqPriorityUndefined = 0,
    IrqPriorityLow = 1,
    IrqPriorityNormal = 2,
    IrqPriorityHigh = 3
};

typedef enum _JOBOBJECTINFOCLASS {
    JobObjectBasicAccountingInformation = 1,
    JobObjectBasicLimitInformation = 2,
    JobObjectBasicProcessIdList = 3,
    JobObjectBasicUIRestrictions = 4,
    JobObjectSecurityLimitInformation = 5,
    JobObjectEndOfJobTimeInformation = 6,
    JobObjectAssociateCompletionPortInformation = 7,
    JobObjectBasicAndIoAccountingInformation = 8,
    JobObjectExtendedLimitInformation = 9,
    JobObjectJobSetInformation = 10,
    JobObjectGroupInformation = 11,
    JobObjectNotificationLimitInformation = 12,
    JobObjectLimitViolationInformation = 13,
    JobObjectGroupInformationEx = 14,
    JobObjectCpuRateControlInformation = 15,
    JobObjectCompletionFilter = 16,
    JobObjectCompletionCounter = 17,
    JobObjectFreezeInformation = 18,
    JobObjectExtendedAccountingInformation = 19,
    JobObjectWakeInformation = 20,
    JobObjectBackgroundInformation = 21,
    JobObjectSchedulingRankBiasInformation = 22,
    JobObjectTimerVirtualizationInformation = 23,
    JobObjectCycleTimeNotification = 24,
    JobObjectClearEvent = 25,
    JobObjectInterferenceInformation = 26,
    JobObjectClearPeakJobMemoryUsed = 27,
    JobObjectMemoryUsageInformation = 28,
    JobObjectSharedCommit = 29,
    JobObjectContainerId = 30,
    JobObjectIoRateControlInformation = 31,
    JobObjectSiloRootDirectory = 37,
    JobObjectServerSiloBasicInformation = 38,
    JobObjectServerSiloUserSharedData = 39,
    JobObjectServerSiloInitialize = 40,
    JobObjectServerSiloRunningState = 41,
    JobObjectIoAttribution = 42,
    JobObjectMemoryPartitionInformation = 43,
    JobObjectContainerTelemetryId = 44,
    JobObjectSiloSystemRoot = 45,
    JobObjectEnergyTrackingState = 46,
    JobObjectThreadImpersonationInformation = 47,
    JobObjectReserved1Information = 18,
    JobObjectReserved2Information = 19,
    JobObjectReserved3Information = 20,
    JobObjectReserved4Information = 21,
    JobObjectReserved5Information = 22,
    JobObjectReserved6Information = 23,
    JobObjectReserved7Information = 24,
    JobObjectReserved8Information = 25,
    JobObjectReserved9Information = 26,
    JobObjectReserved10Information = 27,
    JobObjectReserved11Information = 28,
    JobObjectReserved12Information = 29,
    JobObjectReserved13Information = 30,
    JobObjectReserved14Information = 31,
    JobObjectNetRateControlInformation = 32,
    JobObjectNotificationLimitInformation2 = 33,
    JobObjectLimitViolationInformation2 = 34,
    JobObjectCreateSilo = 35,
    JobObjectSiloBasicInformation = 36,
    JobObjectReserved15Information = 37,
    JobObjectReserved16Information = 38,
    JobObjectReserved17Information = 39,
    JobObjectReserved18Information = 40,
    JobObjectReserved19Information = 41,
    JobObjectReserved20Information = 42,
    JobObjectReserved21Information = 43,
    JobObjectReserved22Information = 44,
    JobObjectReserved23Information = 45,
    JobObjectReserved24Information = 46,
    JobObjectReserved25Information = 47,
    MaxJobObjectInfoClass = 48
};

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE {
    ToleranceLow = 1,
    ToleranceMedium = 2,
    ToleranceHigh = 3
};

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL {
    ToleranceIntervalShort = 1,
    ToleranceIntervalMedium = 2,
    ToleranceIntervalLong = 3
};

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS {
    JournalCreateKey = 0,
    JournalDeleteKey = 1,
    JournalRenameKey = 2,
    JournalSetValue = 3,
    JournalDeleteValue = 4,
    JournalSetKeySecurity = 5,
    JournalSetKeyUserFlags = 6,
    JournalSetLastWriteTime = 7,
    JournalBeginTransaction = 8,
    JournalCommitTransaction = 9,
    JournalAbortTransaction = 10,
    MaxJournalChangeAction = 11
};

typedef enum _JOURNAL_INFORMATION_CLASS {
    JournalAbsoluteInformation = 0,
    JournalClientInformation = 1,
    MaxJournalInformation = 2
};

typedef enum _KEY_INFORMATION_CLASS {
    KeyBasicInformation = 0,
    KeyNodeInformation = 1,
    KeyFullInformation = 2,
    KeyNameInformation = 3,
    KeyCachedInformation = 4,
    KeyFlagsInformation = 5,
    KeyVirtualizationInformation = 6,
    KeyHandleTagsInformation = 7,
    KeyTrustInformation = 8,
    KeyLayerInformation = 9,
    MaxKeyInfoClass = 10
};

typedef enum _KEY_SET_INFORMATION_CLASS {
    KeyWriteTimeInformation = 0,
    KeyWow64FlagsInformation = 1,
    KeyControlFlagsInformation = 2,
    KeySetVirtualizationInformation = 3,
    KeySetDebugInformation = 4,
    KeySetHandleTagsInformation = 5,
    KeySetLayerInformation = 6,
    MaxKeySetInfoClass = 7
};

typedef enum _KEY_VALUE_INFORMATION_CLASS {
    KeyValueBasicInformation = 0,
    KeyValueFullInformation = 1,
    KeyValuePartialInformation = 2,
    KeyValueFullInformationAlign64 = 3,
    KeyValuePartialInformationAlign64 = 4,
    KeyValueLayerInformation = 5,
    MaxKeyValueInfoClass = 6
};

typedef enum _KHETERO_CPU_POLICY {
    KHeteroCpuPolicyAll = 0,
    KHeteroCpuPolicyLarge = 1,
    KHeteroCpuPolicyLargeOrIdle = 2,
    KHeteroCpuPolicySmall = 3,
    KHeteroCpuPolicySmallOrIdle = 4,
    KHeteroCpuPolicyDynamic = 5,
    KHeteroCpuPolicyStaticMax = 5,
    KHeteroCpuPolicyBiasedSmall = 6,
    KHeteroCpuPolicyBiasedLarge = 7,
    KHeteroCpuPolicyDefault = 8,
    KHeteroCpuPolicyMax = 9
};

typedef enum _KPROFILE_SOURCE {
    ProfileTime = 0,
    ProfileAlignmentFixup = 1,
    ProfileTotalIssues = 2,
    ProfilePipelineDry = 3,
    ProfileLoadInstructions = 4,
    ProfilePipelineFrozen = 5,
    ProfileBranchInstructions = 6,
    ProfileTotalNonissues = 7,
    ProfileDcacheMisses = 8,
    ProfileIcacheMisses = 9,
    ProfileCacheMisses = 10,
    ProfileBranchMispredictions = 11,
    ProfileStoreInstructions = 12,
    ProfileFpInstructions = 13,
    ProfileIntegerInstructions = 14,
    Profile2Issue = 15,
    Profile3Issue = 16,
    Profile4Issue = 17,
    ProfileSpecialInstructions = 18,
    ProfileTotalCycles = 19,
    ProfileIcacheIssues = 20,
    ProfileDcacheAccesses = 21,
    ProfileMemoryBarrierCycles = 22,
    ProfileLoadLinkedIssues = 23,
    ProfileMaximum = 24
};

typedef enum _KTMOBJECT_TYPE {
    KTMOBJECT_TRANSACTION = 0,
    KTMOBJECT_TRANSACTION_MANAGER = 1,
    KTMOBJECT_RESOURCE_MANAGER = 2,
    KTMOBJECT_ENLISTMENT = 3,
    KTMOBJECT_INVALID = 4
};

typedef enum _LDR_DDAG_STATE {
    LdrModulesMerged = -5,
    LdrModulesInitError = -4,
    LdrModulesSnapError = -3,
    LdrModulesUnloaded = -2,
    LdrModulesUnloading = -1,
    LdrModulesPlaceHolder = 0,
    LdrModulesMapping = 1,
    LdrModulesMapped = 2,
    LdrModulesWaitingForDependencies = 3,
    LdrModulesSnapping = 4,
    LdrModulesSnapped = 5,
    LdrModulesCondensed = 6,
    LdrModulesReadyToInit = 7,
    LdrModulesInitializing = 8,
    LdrModulesReadyToRun = 9
};

typedef enum _LDR_DLL_LOAD_REASON {
    LoadReasonStaticDependency = 0,
    LoadReasonStaticForwarderDependency = 1,
    LoadReasonDynamicForwarderDependency = 2,
    LoadReasonDelayloadDependency = 3,
    LoadReasonDynamicLoad = 4,
    LoadReasonAsImageLoad = 5,
    LoadReasonAsDataLoad = 6,
    LoadReasonEnclavePrimary = 7,
    LoadReasonEnclaveDependency = 8,
    LoadReasonUnknown = -1
};

typedef enum _LEARNING_MODE_LOG_LEVEL {
    LearningModeLogLevelPassive = 0,
    LearningModeLogLevelNormalApc = 1,
    LearningModeLogLevelSpecialApc = 2,
    LearningModeLogLevelMax = 3
};

typedef enum _LINE_DIRECTION {
    LINE_DIRECTION_RightToLeft = 1,
    LINE_DIRECTION_LeftToRight = 2,
    LINE_DIRECTION_Max = 0x7fffffff
};

typedef enum _LINK_TRACKING_INFORMATION_TYPE {
    NtfsLinkTrackingInformation = 0,
    DfsLinkTrackingInformation = 1
};

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {
    RelationProcessorCore = 0,
    RelationNumaNode = 1,
    RelationCache = 2,
    RelationProcessorPackage = 3,
    RelationGroup = 4,
    RelationAll = 0xffff
};

typedef enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION {
    MarshalDirectionMarshal = 0,
    MarshalDirectionUnmarshal = 1
};

typedef enum _MANDATORY_LEVEL {
    MandatoryLevelUntrusted = 0,
    MandatoryLevelLow = 1,
    MandatoryLevelMedium = 2,
    MandatoryLevelHigh = 3,
    MandatoryLevelSystem = 4,
    MandatoryLevelSecureProcess = 5,
    MandatoryLevelCount = 6
};

typedef enum _MARKUP_CONTEXT_TYPE {
    CONTEXT_TYPE_None = 0,
    CONTEXT_TYPE_Text = 1,
    CONTEXT_TYPE_EnterScope = 2,
    CONTEXT_TYPE_ExitScope = 3,
    CONTEXT_TYPE_NoScope = 4,
    MARKUP_CONTEXT_TYPE_Max = 0x7fffffff
};

typedef enum _MEMORY_EXHAUSTION_TYPE {
    MemoryExhaustionTypeFailFastOnCommitFailure = 0,
    MemoryExhaustionTypeMax = 1
};

typedef enum _MEMORY_INFORMATION_CLASS {
    MemoryBasicInformation = 0,
    MemoryWorkingSetInformation = 1,
    MemoryMappedFilenameInformation = 2,
    MemoryRegionInformation = 3,
    MemoryWorkingSetExInformation = 4,
    MemorySharedCommitInformation = 5,
    MemoryImageInformation = 6,
    MemoryRegionInformationEx = 7,
    MemoryPrivilegedBasicInformation = 8,
    MemoryEnclaveImageInformation = 9,
    MemoryBasicInformationCapped = 10
};

typedef enum _MEMORY_RESERVE_TYPE {
    MemoryReserveUserApc = 0,
    MemoryReserveIoCompletion = 1,
    MemoryReserveTypeMax = 2
};

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE {
    LowMemoryResourceNotification = 0,
    HighMemoryResourceNotification = 1
};

typedef enum _MEMORY_WORKING_SET_EX_LOCATION {
    MemoryLocationInvalid = 0,
    MemoryLocationResident = 1,
    MemoryLocationPagefile = 2,
    MemoryLocationReserved = 3
};

typedef enum _MM_ETW_WORKING_SET_TYPE {
    MmEtwWorkingSetTypeUser = 0,
    MmEtwWorkingSetTypeSession = 1,
    MmEtwWorkingSetTypeSystem = 2,
    MmEtwWorkingSetTypeMaximum = 3
};

typedef enum _MONITOR_DISPLAY_STATE {
    PowerMonitorOff = 0,
    PowerMonitorOn = 1,
    PowerMonitorDim = 2
};

typedef enum _MOVEUNIT_ACTION {
    MOVEUNIT_PREVCHAR = 0,
    MOVEUNIT_NEXTCHAR = 1,
    MOVEUNIT_PREVCLUSTERBEGIN = 2,
    MOVEUNIT_NEXTCLUSTERBEGIN = 3,
    MOVEUNIT_PREVCLUSTEREND = 4,
    MOVEUNIT_NEXTCLUSTEREND = 5,
    MOVEUNIT_PREVWORDBEGIN = 6,
    MOVEUNIT_NEXTWORDBEGIN = 7,
    MOVEUNIT_PREVWORDEND = 8,
    MOVEUNIT_NEXTWORDEND = 9,
    MOVEUNIT_PREVPROOFWORD = 10,
    MOVEUNIT_NEXTPROOFWORD = 11,
    MOVEUNIT_NEXTURLBEGIN = 12,
    MOVEUNIT_PREVURLBEGIN = 13,
    MOVEUNIT_NEXTURLEND = 14,
    MOVEUNIT_PREVURLEND = 15,
    MOVEUNIT_PREVSENTENCE = 16,
    MOVEUNIT_NEXTSENTENCE = 17,
    MOVEUNIT_PREVBLOCK = 18,
    MOVEUNIT_NEXTBLOCK = 19,
    MOVEUNIT_ACTION_Max = 0x7fffffff
};

typedef enum _MUTANT_INFORMATION_CLASS {
    MutantBasicInformation = 0,
    MutantOwnerInformation = 1
};

typedef enum _NORM_FORM {
    NormalizationOther = 0,
    NormalizationC = 1,
    NormalizationD = 2,
    NormalizationKC = 5,
    NormalizationKD = 6
};

typedef enum _NT_PRODUCT_TYPE {
    NtProductWinNt = 1,
    NtProductLanManNt = 2,
    NtProductServer = 3
};

typedef enum _OBJECT_INFORMATION_CLASS {
    ObjectBasicInformation = 0,
    ObjectNameInformation = 1,
    ObjectTypeInformation = 2,
    ObjectTypesInformation = 3,
    ObjectHandleFlagInformation = 4,
    ObjectSessionInformation = 5,
    ObjectSessionObjectInformation = 6,
    MaxObjectInfoClass = 7
};

typedef enum _OS_DEPLOYEMENT_STATE_VALUES {
    OS_DEPLOYMENT_STANDARD = 1,
    OS_DEPLOYMENT_COMPACT = 2
};

typedef enum _PARSE_FLAGS {
    PARSE_ABSOLUTIFYIE40URLS = 1,
    PARSE_DISABLEVML = 2,
    PARSE_FLAGS_Max = 0x7fffffff
};

typedef enum _PARTITION_INFORMATION_CLASS {
    SystemMemoryPartitionInformation = 0,
    SystemMemoryPartitionMoveMemory = 1,
    SystemMemoryPartitionAddPagefile = 2,
    SystemMemoryPartitionCombineMemory = 3,
    SystemMemoryPartitionInitialAddMemory = 4,
    SystemMemoryPartitionGetMemoryEvents = 5,
    SystemMemoryPartitionMax = 6
};

typedef enum _PLUGPLAY_CONTROL_CLASS {
    PlugPlayControlEnumerateDevice = 0,
    PlugPlayControlRegisterNewDevice = 1,
    PlugPlayControlDeregisterDevice = 2,
    PlugPlayControlInitializeDevice = 3,
    PlugPlayControlStartDevice = 4,
    PlugPlayControlUnlockDevice = 5,
    PlugPlayControlQueryAndRemoveDevice = 6,
    PlugPlayControlUserResponse = 7,
    PlugPlayControlGenerateLegacyDevice = 8,
    PlugPlayControlGetInterfaceDeviceList = 9,
    PlugPlayControlProperty = 10,
    PlugPlayControlDeviceClassAssociation = 11,
    PlugPlayControlGetRelatedDevice = 12,
    PlugPlayControlGetInterfaceDeviceAlias = 13,
    PlugPlayControlDeviceStatus = 14,
    PlugPlayControlGetDeviceDepth = 15,
    PlugPlayControlQueryDeviceRelations = 16,
    PlugPlayControlTargetDeviceRelation = 17,
    PlugPlayControlQueryConflictList = 18,
    PlugPlayControlRetrieveDock = 19,
    PlugPlayControlResetDevice = 20,
    PlugPlayControlHaltDevice = 21,
    PlugPlayControlGetBlockedDriverList = 22,
    PlugPlayControlGetDeviceInterfaceEnabled = 23,
    MaxPlugPlayControl = 24
};

typedef enum _PLUGPLAY_EVENT_CATEGORY {
    HardwareProfileChangeEvent = 0,
    TargetDeviceChangeEvent = 1,
    DeviceClassChangeEvent = 2,
    CustomDeviceEvent = 3,
    DeviceInstallEvent = 4,
    DeviceArrivalEvent = 5,
    VetoEvent = 6,
    BlockedDriverEvent = 7,
    InvalidIDEvent = 8,
    DevicePropertyChangeEvent = 9,
    DeviceInstanceRemovalEvent = 10,
    DeviceInstanceStartedEvent = 11,
    MaxPlugEventCategory = 12
};

typedef enum _PNP_QUERY_RELATION {
    PnpQueryEjectRelations = 0,
    PnpQueryRemovalRelations = 1,
    PnpQueryPowerRelations = 2,
    PnpQueryBusRelations = 3,
    PnpQueryTransportRelations = 4,
    MaxPnpQueryRelations = 5
};

typedef enum _PNP_VETO_TYPE {
    PNP_VetoTypeUnknown = 0,
    PNP_VetoLegacyDevice = 1,
    PNP_VetoPendingClose = 2,
    PNP_VetoWindowsApp = 3,
    PNP_VetoWindowsService = 4,
    PNP_VetoOutstandingOpen = 5,
    PNP_VetoDevice = 6,
    PNP_VetoDriver = 7,
    PNP_VetoIllegalDeviceRequest = 8,
    PNP_VetoInsufficientPower = 9,
    PNP_VetoNonDisableable = 10,
    PNP_VetoLegacyDriver = 11,
    PNP_VetoInsufficientRights = 12
};

typedef enum _POINTER_GRAVITY {
    POINTER_GRAVITY_Left = 0,
    POINTER_GRAVITY_Right = 1,
    POINTER_GRAVITY_Max = 0x7fffffff
};

typedef enum _PORT_INFORMATION_CLASS {
    PortBasicInformation = 0,
    PortDumpInformation = 1
};

typedef enum _POWER_MONITOR_REQUEST_TYPE {
    MonitorRequestTypeOff = 0,
    MonitorRequestTypeOnAndPresent = 1,
    MonitorRequestTypeToggleOn = 2
};

typedef enum _POWER_PLATFORM_ROLE {
    PlatformRoleUnspecified = 0,
    PlatformRoleDesktop = 1,
    PlatformRoleMobile = 2,
    PlatformRoleWorkstation = 3,
    PlatformRoleEnterpriseServer = 4,
    PlatformRoleSOHOServer = 5,
    PlatformRoleAppliancePC = 6,
    PlatformRolePerformanceServer = 7,
    PlatformRoleSlate = 8,
    PlatformRoleMaximum = 9
};

typedef enum _POWER_REQUEST_TYPE {
    PowerRequestDisplayRequired = 0,
    PowerRequestSystemRequired = 1,
    PowerRequestAwayModeRequired = 2,
    PowerRequestExecutionRequired = 3
};

typedef enum _POWER_STATE_TYPE {
    SystemPowerState = 0,
    DevicePowerState = 1
};

typedef enum _PO_CS_DEVICE_NOTIFICATION_TYPE {
    PoCsDeviceNotificationStorage = 0,
    PoCsDeviceNotificationWiFi = 1,
    PoCsDeviceNotificationMbn = 2,
    PoCsDeviceNotificationAudio = 3,
    PoCsDeviceNotificationEthernet = 4,
    PoCsDeviceNotificationMaximum = 5
};

typedef enum _PO_HIBER_FORCE_DISABLE_REASON {
    PoHiberForceDisableReasonPolicy = 0,
    PoHiberForceDisableReasonGuardedHost = 1,
    PoHiberForceDisableReasonMax = 2
};

typedef enum _PO_SLEEP_DISABLE_REASON {
    PoSleepDisableReasonVideo = 0,
    PoSleepDisableReasonHypervisor = 1,
    PoSleepDisableReasonVhdBoot = 2,
    PoSleepDisableReasonPortableWorkspace = 3,
    PoSleepDisableReasonPolicy = 4,
    PoSleepDisableReasonGuardedHost = 5,
    PoSleepDisableReasonMax = 6
};

typedef enum _PRIORITY_HINT {
    IoPriorityHintVeryLow = 0,
    IoPriorityHintLow = 1,
    IoPriorityHintNormal = 2,
    MaximumIoPriorityHintType = 3
};

typedef enum _PROCESSINFOCLASS {
    ProcessBasicInformation = 0,
    ProcessQuotaLimits = 1,
    ProcessIoCounters = 2,
    ProcessVmCounters = 3,
    ProcessTimes = 4,
    ProcessBasePriority = 5,
    ProcessRaisePriority = 6,
    ProcessDebugPort = 7,
    ProcessExceptionPort = 8,
    ProcessAccessToken = 9,
    ProcessLdtInformation = 10,
    ProcessLdtSize = 11,
    ProcessDefaultHardErrorMode = 12,
    ProcessIoPortHandlers = 13,
    ProcessPooledUsageAndLimits = 14,
    ProcessWorkingSetWatch = 15,
    ProcessUserModeIOPL = 16,
    ProcessEnableAlignmentFaultFixup = 17,
    ProcessPriorityClass = 18,
    ProcessWx86Information = 19,
    ProcessHandleCount = 20,
    ProcessAffinityMask = 21,
    ProcessPriorityBoost = 22,
    ProcessDeviceMap = 23,
    ProcessSessionInformation = 24,
    ProcessForegroundInformation = 25,
    ProcessWow64Information = 26,
    ProcessImageFileName = 27,
    ProcessLUIDDeviceMapsEnabled = 28,
    ProcessBreakOnTermination = 29,
    ProcessDebugObjectHandle = 30,
    ProcessDebugFlags = 31,
    ProcessHandleTracing = 32,
    ProcessIoPriority = 33,
    ProcessExecuteFlags = 34,
    ProcessTlsInformation = 35,
    ProcessCookie = 36,
    ProcessImageInformation = 37,
    ProcessCycleTime = 38,
    ProcessPagePriority = 39,
    ProcessInstrumentationCallback = 40,
    ProcessThreadStackAllocation = 41,
    ProcessWorkingSetWatchEx = 42,
    ProcessImageFileNameWin32 = 43,
    ProcessImageFileMapping = 44,
    ProcessAffinityUpdateMode = 45,
    ProcessMemoryAllocationMode = 46,
    ProcessGroupInformation = 47,
    ProcessTokenVirtualizationEnabled = 48,
    ProcessOwnerInformation = 49,
    ProcessWindowInformation = 50,
    ProcessHandleInformation = 51,
    ProcessMitigationPolicy = 52,
    ProcessDynamicFunctionTableInformation = 53,
    ProcessHandleCheckingMode = 54,
    ProcessKeepAliveCount = 55,
    ProcessRevokeFileHandles = 56,
    ProcessWorkingSetControl = 57,
    ProcessHandleTable = 58,
    ProcessCheckStackExtentsMode = 59,
    ProcessCommandLineInformation = 60,
    ProcessProtectionInformation = 61,
    ProcessMemoryExhaustion = 62,
    ProcessFaultInformation = 63,
    ProcessTelemetryIdInformation = 64,
    ProcessCommitReleaseInformation = 65,
    ProcessDefaultCpuSetsInformation = 66,
    ProcessAllowedCpuSetsInformation = 67,
    ProcessReserved1Information = 66,
    ProcessReserved2Information = 67,
    ProcessSubsystemProcess = 68,
    ProcessJobMemoryInformation = 69,
    ProcessInPrivate = 70,
    ProcessRaiseUMExceptionOnInvalidHandleClose = 71,
    ProcessIumChallengeResponse = 72,
    ProcessChildProcessInformation = 73,
    ProcessHighGraphicsPriorityInformation = 74,
    ProcessSubsystemInformation = 75,
    ProcessEnergyValues = 76,
    ProcessPowerThrottlingState = 77,
    ProcessReserved3Information = 78,
    ProcessWin32kSyscallFilterInformation = 79,
    ProcessDisableSystemAllowedCpuSets = 80,
    ProcessWakeInformation = 81,
    ProcessEnergyTrackingState = 82,
    ProcessManageWritesToExecutableMemory = 83,
    ProcessCaptureTrustletLiveDump = 84,
    ProcessTelemetryCoverage = 85,
    ProcessEnclaveInformation = 86,
    ProcessEnableReadWriteVmLogging = 87,
    ProcessUptimeInformation = 88,
    ProcessImageSection = 89,
    ProcessDebugAuthInformation = 90,
    ProcessSystemResourceManagement = 91,
    ProcessSequenceNumber = 92,
    ProcessLoaderDetour = 93,
    ProcessSecurityDomainInformation = 94,
    ProcessCombineSecurityDomainsInformation = 95,
    ProcessEnableLogging = 96,
    ProcessLeapSecondInformation = 97,
    MaxProcessInfoClass = 98
};

typedef enum _PROCESSOR_CACHE_TYPE {
    CacheUnified = 0,
    CacheInstruction = 1,
    CacheData = 2,
    CacheTrace = 3
};

typedef enum _PROCESS_ACTIVITY_TYPE {
    ProcessActivityTypeAudio = 0,
    ProcessActivityTypeMax = 1
};

typedef enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM {
    PsEnergyComponentTypeCpu = 0,
    PsEnergyComponentTypeStorage = 1,
    PsEnergyComponentTypeNetwork = 2,
    PsEnergyComponentTypeMBB = 3,
    PsEnergyComponentTypeForegroundTime = 4,
    PsEnergyComponentTypeDesktopVisibleTime = 5,
    PsEnergyComponentTypeWindowResource = 6,
    PsEnergyComponentTypeCompositorResource = 7,
    PsEnergyComponentTypeTrackingState = 8,
    PsEnergyComponentTypeInput = 9,
    PsEnergyComponentTypeAudioIn = 10,
    PsEnergyComponentTypeAudioOut = 11,
    PsEnergyComponentTypeDisplayRequired = 12,
    PsEnergyComponentTypeKeyboardInput = 13,
    PsEnergyComponentTypeMouseInput = 14,
    PsEnergyComponentTypeMax = 15
};

typedef enum _PROCESS_INFORMATION_CLASS {
    ProcessMemoryPriority = 0,
    ProcessMemoryExhaustionInfo = 1,
    ProcessAppMemoryInfo = 2,
    ProcessInPrivateInfo = 3,
    ProcessPowerThrottling = 4,
    ProcessReservedValue1 = 5,
    ProcessTelemetryCoverageInfo = 6,
    ProcessProtectionLevelInfo = 7,
    ProcessLeapSecondInfo = 8,
    ProcessInformationClassMax = 9
};

typedef enum _PROCESS_MEMORY_EXHAUSTION_TYPE {
    PMETypeFailFastOnCommitFailure = 0,
    PMETypeMax = 1
};

typedef enum _PROCESS_MITIGATION_POLICY {
    ProcessDEPPolicy = 0,
    ProcessASLRPolicy = 1,
    ProcessDynamicCodePolicy = 2,
    ProcessStrictHandleCheckPolicy = 3,
    ProcessSystemCallDisablePolicy = 4,
    ProcessMitigationOptionsMask = 5,
    ProcessExtensionPointDisablePolicy = 6,
    ProcessControlFlowGuardPolicy = 7,
    ProcessSignaturePolicy = 8,
    ProcessFontDisablePolicy = 9,
    ProcessImageLoadPolicy = 10,
    ProcessSystemCallFilterPolicy = 11,
    ProcessPayloadRestrictionPolicy = 12,
    ProcessChildProcessPolicy = 13,
    ProcessSideChannelIsolationPolicy = 14,
    MaxProcessMitigationPolicy = 15
};

typedef enum _PROCESS_TLS_INFORMATION_TYPE {
    ProcessTlsReplaceIndex = 0,
    ProcessTlsReplaceVector = 1,
    MaxProcessTlsOperation = 2
};

typedef enum _PROCESS_WORKING_SET_OPERATION {
    ProcessWorkingSetSwap = 0,
    ProcessWorkingSetEmpty = 1,
    ProcessWorkingSetOperationMax = 2
};

typedef enum _PROC_THREAD_ATTRIBUTE_NUM {
    ProcThreadAttributeParentProcess = 0,
    ProcThreadAttributeHandleList = 2,
    ProcThreadAttributeGroupAffinity = 3,
    ProcThreadAttributePreferredNode = 4,
    ProcThreadAttributeIdealProcessor = 5,
    ProcThreadAttributeUmsThread = 6,
    ProcThreadAttributeMitigationPolicy = 7,
    ProcThreadAttributeSecurityCapabilities = 9,
    ProcThreadAttributeProtectionLevel = 11,
    ProcThreadAttributeJobList = 13,
    ProcThreadAttributeChildProcessPolicy = 14,
    ProcThreadAttributeAllApplicationPackagesPolicy = 15,
    ProcThreadAttributeWin32kFilter = 16,
    ProcThreadAttributeSafeOpenPromptOriginClaim = 17,
    ProcThreadAttributeDesktopAppPolicy = 18,
    ProcThreadAttributePseudoConsole = 22
};

typedef enum _PS_ATTRIBUTE_NUM {
    PsAttributeParentProcess = 0,
    PsAttributeDebugObject = 1,
    PsAttributeToken = 2,
    PsAttributeClientId = 3,
    PsAttributeTebAddress = 4,
    PsAttributeImageName = 5,
    PsAttributeImageInfo = 6,
    PsAttributeMemoryReserve = 7,
    PsAttributePriorityClass = 8,
    PsAttributeErrorMode = 9,
    PsAttributeStdHandleInfo = 10,
    PsAttributeHandleList = 11,
    PsAttributeGroupAffinity = 12,
    PsAttributePreferredNode = 13,
    PsAttributeIdealProcessor = 14,
    PsAttributeUmsThread = 15,
    PsAttributeMitigationOptions = 16,
    PsAttributeProtectionLevel = 17,
    PsAttributeSecureProcess = 18,
    PsAttributeJobList = 19,
    PsAttributeChildProcessPolicy = 20,
    PsAttributeAllApplicationPackagesPolicy = 21,
    PsAttributeWin32kFilter = 22,
    PsAttributeSafeOpenPromptOriginClaim = 23,
    PsAttributeBnoIsolation = 24,
    PsAttributeDesktopAppPolicy = 25,
    PsAttributeChpe = 26,
    PsAttributeMax = 27
};

typedef enum _PS_MITIGATION_OPTION {
    PS_MITIGATION_OPTION_NX = 0,
    PS_MITIGATION_OPTION_SEHOP = 1,
    PS_MITIGATION_OPTION_FORCE_RELOCATE_IMAGES = 2,
    PS_MITIGATION_OPTION_HEAP_TERMINATE = 3,
    PS_MITIGATION_OPTION_BOTTOM_UP_ASLR = 4,
    PS_MITIGATION_OPTION_HIGH_ENTROPY_ASLR = 5,
    PS_MITIGATION_OPTION_STRICT_HANDLE_CHECKS = 6,
    PS_MITIGATION_OPTION_WIN32K_SYSTEM_CALL_DISABLE = 7,
    PS_MITIGATION_OPTION_EXTENSION_POINT_DISABLE = 8,
    PS_MITIGATION_OPTION_PROHIBIT_DYNAMIC_CODE = 9,
    PS_MITIGATION_OPTION_CONTROL_FLOW_GUARD = 10,
    PS_MITIGATION_OPTION_BLOCK_NON_MICROSOFT_BINARIES = 11,
    PS_MITIGATION_OPTION_FONT_DISABLE = 12,
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_REMOTE = 13,
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_LOW_LABEL = 14,
    PS_MITIGATION_OPTION_IMAGE_LOAD_PREFER_SYSTEM32 = 15,
    PS_MITIGATION_OPTION_RETURN_FLOW_GUARD = 16,
    PS_MITIGATION_OPTION_LOADER_INTEGRITY_CONTINUITY = 17,
    PS_MITIGATION_OPTION_STRICT_CONTROL_FLOW_GUARD = 18,
    PS_MITIGATION_OPTION_RESTRICT_SET_THREAD_CONTEXT = 19,
    PS_MITIGATION_OPTION_ROP_STACKPIVOT = 20,
    PS_MITIGATION_OPTION_ROP_CALLER_CHECK = 21,
    PS_MITIGATION_OPTION_ROP_SIMEXEC = 22,
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER = 23,
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER_PLUS = 24,
    PS_MITIGATION_OPTION_RESTRICT_CHILD_PROCESS_CREATION = 25,
    PS_MITIGATION_OPTION_IMPORT_ADDRESS_FILTER = 26,
    PS_MITIGATION_OPTION_MODULE_TAMPERING_PROTECTION = 27,
    PS_MITIGATION_OPTION_RESTRICT_INDIRECT_BRANCH_PREDICTION = 28,
    PS_MITIGATION_OPTION_SPECULATIVE_STORE_BYPASS_DISABLE = 29,
    PS_MITIGATION_OPTION_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY = 30,
    PS_MITIGATION_OPTION_CET_SHADOW_STACKS = 31
};

typedef enum _PS_PROTECTED_SIGNER {
    PsProtectedSignerNone = 0,
    PsProtectedSignerAuthenticode = 1,
    PsProtectedSignerCodeGen = 2,
    PsProtectedSignerAntimalware = 3,
    PsProtectedSignerLsa = 4,
    PsProtectedSignerWindows = 5,
    PsProtectedSignerWinTcb = 6,
    PsProtectedSignerWinSystem = 7,
    PsProtectedSignerApp = 8,
    PsProtectedSignerMax = 9
};

typedef enum _PS_PROTECTED_TYPE {
    PsProtectedTypeNone = 0,
    PsProtectedTypeProtectedLight = 1,
    PsProtectedTypeProtected = 2,
    PsProtectedTypeMax = 3
};

typedef enum _PS_STD_HANDLE_STATE {
    PsNeverDuplicate = 0,
    PsRequestDuplicate = 1,
    PsAlwaysDuplicate = 2,
    PsMaxStdHandleStates = 3
};

typedef enum _PS_WAKE_REASON {
    PsWakeReasonUser = 0,
    PsWakeReasonExecutionRequired = 1,
    PsWakeReasonKernel = 2,
    PsWakeReasonInstrumentation = 3,
    PsWakeReasonPreserveProcess = 4,
    PsWakeReasonActivityReference = 5,
    PsWakeReasonWorkOnBehalf = 6,
    PsMaxWakeReasons = 7
};

typedef enum _QUERY_FILE_LAYOUT_FILTER_TYPE {
    QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0,
    QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 1,
    QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 2,
    QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID = 3,
    QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 4
};

typedef enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS {
    ReadDirectoryNotifyInformation = 1,
    ReadDirectoryNotifyExtendedInformation = 2
};

typedef enum _REFS_SMR_VOLUME_GC_ACTION {
    SmrGcActionStart = 1,
    SmrGcActionStartFullSpeed = 2,
    SmrGcActionPause = 3,
    SmrGcActionStop = 4
};

typedef enum _REFS_SMR_VOLUME_GC_METHOD {
    SmrGcMethodCompaction = 1,
    SmrGcMethodCompression = 2,
    SmrGcMethodRotation = 3
};

typedef enum _REFS_SMR_VOLUME_GC_STATE {
    SmrGcStateInactive = 0,
    SmrGcStatePaused = 1,
    SmrGcStateActive = 2,
    SmrGcStateActiveFullSpeed = 3
};

typedef enum _REG_ACTION {
    KeyAdded = 0,
    KeyRemoved = 1,
    KeyModified = 2
};

typedef enum _REQUESTER_TYPE {
    KernelRequester = 0,
    UserProcessRequester = 1,
    UserSharedServiceRequester = 2
};

typedef enum _REQUEST_TIMES {
    NameResolutionStart = 0,
    NameResolutionEnd = 1,
    ConnectionEstablishmentStart = 2,
    ConnectionEstablishmentEnd = 3,
    TLSHandshakeStart = 4,
    TLSHandshakeEnd = 5,
    HttpRequestTimeMax = 32
};

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS {
    ResourceManagerBasicInformation = 0,
    ResourceManagerCompletionInformation = 1
};

typedef enum _RPC_ASYNC_EVENT {
    RpcCallComplete = 0,
    RpcSendComplete = 1,
    RpcReceiveComplete = 2,
    RpcClientDisconnect = 3,
    RpcClientCancel = 4
};

typedef enum _RPC_HTTP_REDIRECTOR_STAGE {
    RPCHTTP_RS_REDIRECT = 1,
    RPCHTTP_RS_ACCESS_1 = 2,
    RPCHTTP_RS_SESSION = 3,
    RPCHTTP_RS_ACCESS_2 = 4,
    RPCHTTP_RS_INTERFACE = 5
};

typedef enum _RPC_NOTIFICATIONS {
    RpcNotificationCallNone = 0,
    RpcNotificationClientDisconnect = 1,
    RpcNotificationCallCancel = 2
};

typedef enum _RPC_NOTIFICATION_TYPES {
    RpcNotificationTypeNone = 0,
    RpcNotificationTypeEvent = 1,
    RpcNotificationTypeApc = 2,
    RpcNotificationTypeIoc = 3,
    RpcNotificationTypeHwnd = 4,
    RpcNotificationTypeCallback = 5
};

typedef enum _RTL_GENERIC_COMPARE_RESULTS {
    GenericLessThan = 0,
    GenericGreaterThan = 1,
    GenericEqual = 2
};

typedef enum _RTL_IMAGE_MITIGATION_OPTION_STATE {
    RtlMitigationOptionStateNotConfigured = 0,
    RtlMitigationOptionStateOn = 1,
    RtlMitigationOptionStateOff = 2
};

typedef enum _RTL_MEMORY_TYPE {
    MemoryTypePaged = 0,
    MemoryTypeNonPaged = 1,
    MemoryTypeLargePage = 2,
    MemoryTypeHugePage = 3,
    MemoryTypeMax = 4
};

typedef enum _RTL_PATH_TYPE {
    RtlPathTypeUnknown = 0,
    RtlPathTypeUncAbsolute = 1,
    RtlPathTypeDriveAbsolute = 2,
    RtlPathTypeDriveRelative = 3,
    RtlPathTypeRooted = 4,
    RtlPathTypeRelative = 5,
    RtlPathTypeLocalDevice = 6,
    RtlPathTypeRootLocalDevice = 7
};

typedef enum _RTL_RESOURCE_CATEGORY {
    RtlResTypePhysicalMemoryTier = 0,
    RtlResTypeDiskSpaceTier = 1,
    RtlResTypeDiskSpeedTier = 2,
    RtlResTypeDiskWriteConstraintTier = 3,
    RtlResTypeMax = 4
};

typedef enum _RTL_RESOURCE_POLICY_FLAGS {
    RTL_RESOURCE_POLICY_FLAGS_NONE = 0
};

typedef enum _RTL_RXACT_OPERATION {
    RtlRXactOperationDelete = 1,
    RtlRXactOperationSetValue = 2,
    RtlRXactOperationDelAttribute = 3,
    RtlRXactOperationSetAttribute = 4
};

typedef enum _RTL_SPARSE_BITMAP_CTX_OPERATION {
    RtlSparseBitmapOperationClear = 0,
    RtlSparseBitmapOperationSet = 1,
    RtlSparseBitmapOperationAny = 2,
    RtlSparseBitmapOperationMax = 3
};

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL {
    BackTraceDatabaseCreate = 0,
    BackTraceDatabaseDelete = 1,
    BackTraceDatabaseFlush = 2,
    BackTraceDatabaseMaxControl = 3
};

typedef enum _RTL_UMS_SCHEDULER_REASON {
    UmsSchedulerStartup = 0,
    UmsSchedulerThreadBlocked = 1,
    UmsSchedulerThreadYield = 2
};

typedef enum _RTL_UMS_THREAD_INFO_CLASS {
    UmsThreadInvalidInfoClass = 0,
    UmsThreadUserContext = 1,
    UmsThreadPriority = 2,
    UmsThreadAffinity = 3,
    UmsThreadTeb = 4,
    UmsThreadIsSuspended = 5,
    UmsThreadIsTerminated = 6,
    UmsThreadMaxInfoClass = 7
};

typedef enum _SAVE_SEGMENTS_FLAGS {
    SAVE_SEGMENTS_NoIE4SelectionCompat = 1,
    SAVE_SEGMENTS_FLAGS_Max = 0x7fffffff
};

typedef enum _SCHEMACONTENTTYPE {
    SCHEMACONTENTTYPE_EMPTY = 0,
    SCHEMACONTENTTYPE_TEXTONLY = 1,
    SCHEMACONTENTTYPE_ELEMENTONLY = 2,
    SCHEMACONTENTTYPE_MIXED = 3
};

typedef enum _SCHEMADERIVATIONMETHOD {
    SCHEMADERIVATIONMETHOD_EMPTY = 0,
    SCHEMADERIVATIONMETHOD_SUBSTITUTION = 1,
    SCHEMADERIVATIONMETHOD_EXTENSION = 2,
    SCHEMADERIVATIONMETHOD_RESTRICTION = 4,
    SCHEMADERIVATIONMETHOD_LIST = 8,
    SCHEMADERIVATIONMETHOD_UNION = 16,
    SCHEMADERIVATIONMETHOD_ALL = 255,
    SCHEMADERIVATIONMETHOD_NONE = 256
};

typedef enum _SCHEMAPROCESSCONTENTS {
    SCHEMAPROCESSCONTENTS_NONE = 0,
    SCHEMAPROCESSCONTENTS_SKIP = 1,
    SCHEMAPROCESSCONTENTS_LAX = 2,
    SCHEMAPROCESSCONTENTS_STRICT = 3
};

typedef enum _SCHEMATYPEVARIETY {
    SCHEMATYPEVARIETY_NONE = -1,
    SCHEMATYPEVARIETY_ATOMIC = 0,
    SCHEMATYPEVARIETY_LIST = 1,
    SCHEMATYPEVARIETY_UNION = 2
};

typedef enum _SCHEMAUSE {
    SCHEMAUSE_OPTIONAL = 0,
    SCHEMAUSE_PROHIBITED = 1,
    SCHEMAUSE_REQUIRED = 2
};

typedef enum _SCHEMAWHITESPACE {
    SCHEMAWHITESPACE_NONE = -1,
    SCHEMAWHITESPACE_PRESERVE = 0,
    SCHEMAWHITESPACE_REPLACE = 1,
    SCHEMAWHITESPACE_COLLAPSE = 2
};

typedef enum _SCRIPT_TIMER_TYPE {
    STT_TIMEOUT = 0,
    STT_INTERVAL = 1,
    STT_IMMEDIATE = 2,
    STT_ANIMATION_FRAME = 3,
    SCRIPT_TIMER_TYPE_Max = 0x7fffffff
};

typedef enum _SC_ACTION_TYPE {
    SC_ACTION_NONE = 0,
    SC_ACTION_RESTART = 1,
    SC_ACTION_REBOOT = 2,
    SC_ACTION_RUN_COMMAND = 3,
    SC_ACTION_OWN_RESTART = 4
};

typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO = 0
};

typedef enum _SC_EVENT_TYPE {
    SC_EVENT_DATABASE_CHANGE = 0,
    SC_EVENT_PROPERTY_CHANGE = 1,
    SC_EVENT_STATUS_CHANGE = 2
};

typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO = 0
};

typedef enum _SECTION_INFORMATION_CLASS {
    SectionBasicInformation = 0,
    SectionImageInformation = 1,
    SectionRelocationInformation = 2,
    SectionOriginalBaseInformation = 3,
    SectionInternalImageInformation = 4,
    MaxSectionInfoClass = 5
};

typedef enum _SECTION_INHERIT {
    ViewShare = 1,
    ViewUnmap = 2
};

typedef enum _SECUREURLHOSTVALIDATE_FLAGS {
    SUHV_PROMPTBEFORENO = 1,
    SUHV_SILENTYES = 2,
    SUHV_UNSECURESOURCE = 4,
    SECUREURLHOSTVALIDATE_FLAGS_Max = 0x7fffffff
};

typedef enum _SECURE_SETTING_VALUE_TYPE {
    SecureSettingValueTypeBoolean = 0,
    SecureSettingValueTypeUlong = 1,
    SecureSettingValueTypeBinary = 2,
    SecureSettingValueTypeString = 3
};

typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous = 0,
    SecurityIdentification = 1,
    SecurityImpersonation = 2,
    SecurityDelegation = 3
};

typedef enum _SELECTION_TYPE {
    SELECTION_TYPE_None = 0,
    SELECTION_TYPE_Caret = 1,
    SELECTION_TYPE_Text = 2,
    SELECTION_TYPE_Control = 3,
    SELECTION_TYPE_Max = 0x7fffffff
};

typedef enum _SEMAPHORE_INFORMATION_CLASS {
    SemaphoreBasicInformation = 0
};

typedef enum _SERVERSILO_STATE {
    SERVERSILO_INITING = 0,
    SERVERSILO_STARTED = 1,
    SERVERSILO_SHUTTING_DOWN = 2,
    SERVERSILO_TERMINATING = 3,
    SERVERSILO_TERMINATED = 4
};

typedef enum _SERVERXMLHTTP_OPTION {
    SXH_OPTION_URL = -1,
    SXH_OPTION_URL_CODEPAGE = 0,
    SXH_OPTION_ESCAPE_PERCENT_IN_URL = 1,
    SXH_OPTION_IGNORE_SERVER_SSL_CERT_ERROR_FLAGS = 2,
    SXH_OPTION_SELECT_CLIENT_SSL_CERT = 3
};

typedef enum _SE_AUDIT_OPERATION {
    AuditPrivilegeObject = 0,
    AuditPrivilegeService = 1,
    AuditAccessCheck = 2,
    AuditOpenObject = 3,
    AuditOpenObjectWithTransaction = 4,
    AuditCloseObject = 5,
    AuditDeleteObject = 6,
    AuditOpenObjectForDelete = 7,
    AuditOpenObjectForDeleteWithTransaction = 8,
    AuditCloseNonObject = 9,
    AuditOpenNonObject = 10,
    AuditObjectReference = 11,
    AuditHandleCreation = 12
};

typedef enum _SE_IMAGE_SIGNATURE_TYPE {
    SeImageSignatureNone = 0,
    SeImageSignatureEmbedded = 1,
    SeImageSignatureCache = 2,
    SeImageSignatureCatalogCached = 3,
    SeImageSignatureCatalogNotCached = 4,
    SeImageSignatureCatalogHint = 5,
    SeImageSignaturePackageCatalog = 6
};

typedef enum _SE_LEARNING_MODE_DATA_TYPE {
    SeLearningModeInvalidType = 0,
    SeLearningModeSettings = 1,
    SeLearningModeMax = 2
};

typedef enum _SE_VALIDATE_MAPPING_TYPE {
    SE_VALIDATE_MAPPING_HEADER_ONLY = 0,
    SE_VALIDATE_MAPPING_ENTIRE_IMAGE = 1,
    SE_VALIDATE_MAPPING_ENTIRE_IMAGE_CLEAN = 2
};

typedef enum _SHRINK_VOLUME_REQUEST_TYPES {
    ShrinkPrepare = 1,
    ShrinkCommit = 2,
    ShrinkAbort = 3
};

typedef enum _SHUTDOWN_ACTION {
    ShutdownNoReboot = 0,
    ShutdownReboot = 1,
    ShutdownPowerOff = 2
};

typedef enum _SID_NAME_USE {
    SidTypeUser = 1,
    SidTypeGroup = 2,
    SidTypeDomain = 3,
    SidTypeAlias = 4,
    SidTypeWellKnownGroup = 5,
    SidTypeDeletedAccount = 6,
    SidTypeInvalid = 7,
    SidTypeUnknown = 8,
    SidTypeComputer = 9,
    SidTypeLabel = 10,
    SidTypeLogonSession = 11
};

typedef enum _SOMITEMTYPE {
    SOMITEM_SCHEMA = 4096,
    SOMITEM_ATTRIBUTE = 4097,
    SOMITEM_ATTRIBUTEGROUP = 4098,
    SOMITEM_NOTATION = 4099,
    SOMITEM_ANNOTATION = 4100,
    SOMITEM_IDENTITYCONSTRAINT = 4352,
    SOMITEM_KEY = 4353,
    SOMITEM_KEYREF = 4354,
    SOMITEM_UNIQUE = 4355,
    SOMITEM_ANYTYPE = 8192,
    SOMITEM_DATATYPE = 8448,
    SOMITEM_DATATYPE_ANYTYPE = 8449,
    SOMITEM_DATATYPE_ANYURI = 8450,
    SOMITEM_DATATYPE_BASE64BINARY = 8451,
    SOMITEM_DATATYPE_BOOLEAN = 8452,
    SOMITEM_DATATYPE_BYTE = 8453,
    SOMITEM_DATATYPE_DATE = 8454,
    SOMITEM_DATATYPE_DATETIME = 8455,
    SOMITEM_DATATYPE_DAY = 8456,
    SOMITEM_DATATYPE_DECIMAL = 8457,
    SOMITEM_DATATYPE_DOUBLE = 8458,
    SOMITEM_DATATYPE_DURATION = 8459,
    SOMITEM_DATATYPE_ENTITIES = 8460,
    SOMITEM_DATATYPE_ENTITY = 8461,
    SOMITEM_DATATYPE_FLOAT = 8462,
    SOMITEM_DATATYPE_HEXBINARY = 8463,
    SOMITEM_DATATYPE_ID = 8464,
    SOMITEM_DATATYPE_IDREF = 8465,
    SOMITEM_DATATYPE_IDREFS = 8466,
    SOMITEM_DATATYPE_INT = 8467,
    SOMITEM_DATATYPE_INTEGER = 8468,
    SOMITEM_DATATYPE_LANGUAGE = 8469,
    SOMITEM_DATATYPE_LONG = 8470,
    SOMITEM_DATATYPE_MONTH = 8471,
    SOMITEM_DATATYPE_MONTHDAY = 8472,
    SOMITEM_DATATYPE_NAME = 8473,
    SOMITEM_DATATYPE_NCNAME = 8474,
    SOMITEM_DATATYPE_NEGATIVEINTEGER = 8475,
    SOMITEM_DATATYPE_NMTOKEN = 8476,
    SOMITEM_DATATYPE_NMTOKENS = 8477,
    SOMITEM_DATATYPE_NONNEGATIVEINTEGER = 8478,
    SOMITEM_DATATYPE_NONPOSITIVEINTEGER = 8479,
    SOMITEM_DATATYPE_NORMALIZEDSTRING = 8480,
    SOMITEM_DATATYPE_NOTATION = 8481,
    SOMITEM_DATATYPE_POSITIVEINTEGER = 8482,
    SOMITEM_DATATYPE_QNAME = 8483,
    SOMITEM_DATATYPE_SHORT = 8484,
    SOMITEM_DATATYPE_STRING = 8485,
    SOMITEM_DATATYPE_TIME = 8486,
    SOMITEM_DATATYPE_TOKEN = 8487,
    SOMITEM_DATATYPE_UNSIGNEDBYTE = 8488,
    SOMITEM_DATATYPE_UNSIGNEDINT = 8489,
    SOMITEM_DATATYPE_UNSIGNEDLONG = 8490,
    SOMITEM_DATATYPE_UNSIGNEDSHORT = 8491,
    SOMITEM_DATATYPE_YEAR = 8492,
    SOMITEM_DATATYPE_YEARMONTH = 8493,
    SOMITEM_DATATYPE_ANYSIMPLETYPE = 8703,
    SOMITEM_SIMPLETYPE = 8704,
    SOMITEM_COMPLEXTYPE = 9216,
    SOMITEM_PARTICLE = 16384,
    SOMITEM_ANY = 16385,
    SOMITEM_ANYATTRIBUTE = 16386,
    SOMITEM_ELEMENT = 16387,
    SOMITEM_GROUP = 16640,
    SOMITEM_ALL = 16641,
    SOMITEM_CHOICE = 16642,
    SOMITEM_SEQUENCE = 16643,
    SOMITEM_EMPTYPARTICLE = 16644,
    SOMITEM_NULL = 2048,
    SOMITEM_NULL_TYPE = 10240,
    SOMITEM_NULL_ANY = 18433,
    SOMITEM_NULL_ANYATTRIBUTE = 18434,
    SOMITEM_NULL_ELEMENT = 18435
};

typedef enum _STATE_LOCATION_TYPE {
    LocationTypeRegistry = 0,
    LocationTypeFileSystem = 1,
    LocationTypeMaximum = 2
};

typedef enum _STORAGE_RESERVE_ID {
    StorageReserveIdNone = 0,
    StorageReserveIdHard = 1,
    StorageReserveIdSoft = 2,
    StorageReserveIdMax = 3
};

typedef enum _STREAM_INFO_LEVELS {
    FindStreamInfoStandard = 0,
    FindStreamInfoMaxInfoLevel = 1
};

typedef enum _SUBSYSTEM_INFORMATION_TYPE {
    SubsystemInformationTypeWin32 = 0,
    SubsystemInformationTypeWSL = 1,
    MaxSubsystemInformationType = 2
};

typedef enum _SUITE_TYPE {
    SmallBusiness = 0,
    Enterprise = 1,
    BackOffice = 2,
    CommunicationServer = 3,
    TerminalServer = 4,
    SmallBusinessRestricted = 5,
    EmbeddedNT = 6,
    DataCenter = 7,
    SingleUserTS = 8,
    Personal = 9,
    Blade = 10,
    EmbeddedRestricted = 11,
    SecurityAppliance = 12,
    StorageServer = 13,
    ComputeServer = 14,
    WHServer = 15,
    PhoneNT = 16,
    MultiUserTS = 17,
    MaxSuiteType = 18
};

typedef enum _SXH_PROXY_SETTING {
    SXH_PROXY_SET_DEFAULT = 0,
    SXH_PROXY_SET_PRECONFIG = 0,
    SXH_PROXY_SET_DIRECT = 1,
    SXH_PROXY_SET_PROXY = 2
};

typedef enum _SXH_SERVER_CERT_OPTION {
    SXH_SERVER_CERT_IGNORE_UNKNOWN_CA = 256,
    SXH_SERVER_CERT_IGNORE_WRONG_USAGE = 512,
    SXH_SERVER_CERT_IGNORE_CERT_CN_INVALID = 4096,
    SXH_SERVER_CERT_IGNORE_CERT_DATE_INVALID = 8192,
    SXH_SERVER_CERT_IGNORE_ALL_SERVER_ERRORS = 13056
};

typedef enum _SYMBOLIC_LINK_INFO_CLASS {
    SymbolicLinkGlobalInformation = 1,
    SymbolicLinkAccessMask = 2
};

typedef enum _SYSDBG_COMMAND {
    SysDbgQueryModuleInformation = 0,
    SysDbgQueryTraceInformation = 1,
    SysDbgSetTracepoint = 2,
    SysDbgSetSpecialCall = 3,
    SysDbgClearSpecialCalls = 4,
    SysDbgQuerySpecialCalls = 5,
    SysDbgBreakPoint = 6,
    SysDbgQueryVersion = 7,
    SysDbgReadVirtual = 8,
    SysDbgWriteVirtual = 9,
    SysDbgReadPhysical = 10,
    SysDbgWritePhysical = 11,
    SysDbgReadControlSpace = 12,
    SysDbgWriteControlSpace = 13,
    SysDbgReadIoSpace = 14,
    SysDbgWriteIoSpace = 15,
    SysDbgReadMsr = 16,
    SysDbgWriteMsr = 17,
    SysDbgReadBusData = 18,
    SysDbgWriteBusData = 19,
    SysDbgCheckLowMemory = 20,
    SysDbgEnableKernelDebugger = 21,
    SysDbgDisableKernelDebugger = 22,
    SysDbgGetAutoKdEnable = 23,
    SysDbgSetAutoKdEnable = 24,
    SysDbgGetPrintBufferSize = 25,
    SysDbgSetPrintBufferSize = 26,
    SysDbgGetKdUmExceptionEnable = 27,
    SysDbgSetKdUmExceptionEnable = 28,
    SysDbgGetTriageDump = 29,
    SysDbgGetKdBlockEnable = 30,
    SysDbgSetKdBlockEnable = 31,
    SysDbgRegisterForUmBreakInfo = 32,
    SysDbgGetUmBreakPid = 33,
    SysDbgClearUmBreakPid = 34,
    SysDbgGetUmAttachPid = 35,
    SysDbgClearUmAttachPid = 36,
    SysDbgGetLiveKernelDump = 37
};

typedef enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE {
    SystemActivityModerationAppTypeClassic = 0,
    SystemActivityModerationAppTypePackaged = 1,
    MaxSystemActivityModerationAppType = 2
};

typedef enum _SYSTEM_ACTIVITY_MODERATION_STATE {
    SystemActivityModerationStateSystemManaged = 0,
    SystemActivityModerationStateUserManagedAllowThrottling = 1,
    SystemActivityModerationStateUserManagedDisableThrottling = 2,
    MaxSystemActivityModerationState = 3
};

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS {
    SystemCrashDumpDisable = 0,
    SystemCrashDumpReconfigure = 1,
    SystemCrashDumpInitializationComplete = 2
};

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION {
    SystemFirmwareTable_Enumerate = 0,
    SystemFirmwareTable_Get = 1
};

typedef enum _SYSTEM_INFORMATION_CLASS {
    SystemBasicInformation = 0,
    SystemProcessorInformation = 1,
    SystemPerformanceInformation = 2,
    SystemTimeOfDayInformation = 3,
    SystemPathInformation = 4,
    SystemProcessInformation = 5,
    SystemCallCountInformation = 6,
    SystemDeviceInformation = 7,
    SystemProcessorPerformanceInformation = 8,
    SystemFlagsInformation = 9,
    SystemCallTimeInformation = 10,
    SystemModuleInformation = 11,
    SystemLocksInformation = 12,
    SystemStackTraceInformation = 13,
    SystemPagedPoolInformation = 14,
    SystemNonPagedPoolInformation = 15,
    SystemHandleInformation = 16,
    SystemObjectInformation = 17,
    SystemPageFileInformation = 18,
    SystemVdmInstemulInformation = 19,
    SystemVdmBopInformation = 20,
    SystemFileCacheInformation = 21,
    SystemPoolTagInformation = 22,
    SystemInterruptInformation = 23,
    SystemDpcBehaviorInformation = 24,
    SystemFullMemoryInformation = 25,
    SystemLoadGdiDriverInformation = 26,
    SystemUnloadGdiDriverInformation = 27,
    SystemTimeAdjustmentInformation = 28,
    SystemSummaryMemoryInformation = 29,
    SystemMirrorMemoryInformation = 30,
    SystemPerformanceTraceInformation = 31,
    SystemObsolete0 = 32,
    SystemExceptionInformation = 33,
    SystemCrashDumpStateInformation = 34,
    SystemKernelDebuggerInformation = 35,
    SystemContextSwitchInformation = 36,
    SystemRegistryQuotaInformation = 37,
    SystemExtendServiceTableInformation = 38,
    SystemPrioritySeperation = 39,
    SystemVerifierAddDriverInformation = 40,
    SystemVerifierRemoveDriverInformation = 41,
    SystemProcessorIdleInformation = 42,
    SystemLegacyDriverInformation = 43,
    SystemCurrentTimeZoneInformation = 44,
    SystemLookasideInformation = 45,
    SystemTimeSlipNotification = 46,
    SystemSessionCreate = 47,
    SystemSessionDetach = 48,
    SystemSessionInformation = 49,
    SystemRangeStartInformation = 50,
    SystemVerifierInformation = 51,
    SystemVerifierThunkExtend = 52,
    SystemSessionProcessInformation = 53,
    SystemLoadGdiDriverInSystemSpace = 54,
    SystemNumaProcessorMap = 55,
    SystemPrefetcherInformation = 56,
    SystemExtendedProcessInformation = 57,
    SystemRecommendedSharedDataAlignment = 58,
    SystemComPlusPackage = 59,
    SystemNumaAvailableMemory = 60,
    SystemProcessorPowerInformation = 61,
    SystemEmulationBasicInformation = 62,
    SystemEmulationProcessorInformation = 63,
    SystemExtendedHandleInformation = 64,
    SystemLostDelayedWriteInformation = 65,
    SystemBigPoolInformation = 66,
    SystemSessionPoolTagInformation = 67,
    SystemSessionMappedViewInformation = 68,
    SystemHotpatchInformation = 69,
    SystemObjectSecurityMode = 70,
    SystemWatchdogTimerHandler = 71,
    SystemWatchdogTimerInformation = 72,
    SystemLogicalProcessorInformation = 73,
    SystemWow64SharedInformationObsolete = 74,
    SystemRegisterFirmwareTableInformationHandler = 75,
    SystemFirmwareTableInformation = 76,
    SystemModuleInformationEx = 77,
    SystemVerifierTriageInformation = 78,
    SystemSuperfetchInformation = 79,
    SystemMemoryListInformation = 80,
    SystemFileCacheInformationEx = 81,
    SystemThreadPriorityClientIdInformation = 82,
    SystemProcessorIdleCycleTimeInformation = 83,
    SystemVerifierCancellationInformation = 84,
    SystemProcessorPowerInformationEx = 85,
    SystemRefTraceInformation = 86,
    SystemSpecialPoolInformation = 87,
    SystemProcessIdInformation = 88,
    SystemErrorPortInformation = 89,
    SystemBootEnvironmentInformation = 90,
    SystemHypervisorInformation = 91,
    SystemVerifierInformationEx = 92,
    SystemTimeZoneInformation = 93,
    SystemImageFileExecutionOptionsInformation = 94,
    SystemCoverageInformation = 95,
    SystemPrefetchPatchInformation = 96,
    SystemVerifierFaultsInformation = 97,
    SystemSystemPartitionInformation = 98,
    SystemSystemDiskInformation = 99,
    SystemProcessorPerformanceDistribution = 100,
    SystemNumaProximityNodeInformation = 101,
    SystemDynamicTimeZoneInformation = 102,
    SystemCodeIntegrityInformation = 103,
    SystemProcessorMicrocodeUpdateInformation = 104,
    SystemProcessorBrandString = 105,
    SystemVirtualAddressInformation = 106,
    SystemLogicalProcessorAndGroupInformation = 107,
    SystemProcessorCycleTimeInformation = 108,
    SystemStoreInformation = 109,
    SystemRegistryAppendString = 110,
    SystemAitSamplingValue = 111,
    SystemVhdBootInformation = 112,
    SystemCpuQuotaInformation = 113,
    SystemNativeBasicInformation = 114,
    SystemErrorPortTimeouts = 115,
    SystemLowPriorityIoInformation = 116,
    SystemBootEntropyInformation = 117,
    SystemVerifierCountersInformation = 118,
    SystemPagedPoolInformationEx = 119,
    SystemSystemPtesInformationEx = 120,
    SystemNodeDistanceInformation = 121,
    SystemAcpiAuditInformation = 122,
    SystemBasicPerformanceInformation = 123,
    SystemQueryPerformanceCounterInformation = 124,
    SystemSessionBigPoolInformation = 125,
    SystemBootGraphicsInformation = 126,
    SystemScrubPhysicalMemoryInformation = 127,
    SystemBadPageInformation = 128,
    SystemProcessorProfileControlArea = 129,
    SystemCombinePhysicalMemoryInformation = 130,
    SystemEntropyInterruptTimingInformation = 131,
    SystemConsoleInformation = 132,
    SystemPlatformBinaryInformation = 133,
    SystemPolicyInformation = 134,
    SystemHypervisorProcessorCountInformation = 135,
    SystemDeviceDataInformation = 136,
    SystemDeviceDataEnumerationInformation = 137,
    SystemMemoryTopologyInformation = 138,
    SystemMemoryChannelInformation = 139,
    SystemBootLogoInformation = 140,
    SystemProcessorPerformanceInformationEx = 141,
    SystemCriticalProcessErrorLogInformation = 142,
    SystemSecureBootPolicyInformation = 143,
    SystemPageFileInformationEx = 144,
    SystemSecureBootInformation = 145,
    SystemEntropyInterruptTimingRawInformation = 146,
    SystemPortableWorkspaceEfiLauncherInformation = 147,
    SystemFullProcessInformation = 148,
    SystemKernelDebuggerInformationEx = 149,
    SystemBootMetadataInformation = 150,
    SystemSoftRebootInformation = 151,
    SystemElamCertificateInformation = 152,
    SystemOfflineDumpConfigInformation = 153,
    SystemProcessorFeaturesInformation = 154,
    SystemRegistryReconciliationInformation = 155,
    SystemEdidInformation = 156,
    SystemManufacturingInformation = 157,
    SystemEnergyEstimationConfigInformation = 158,
    SystemHypervisorDetailInformation = 159,
    SystemProcessorCycleStatsInformation = 160,
    SystemVmGenerationCountInformation = 161,
    SystemTrustedPlatformModuleInformation = 162,
    SystemKernelDebuggerFlags = 163,
    SystemCodeIntegrityPolicyInformation = 164,
    SystemIsolatedUserModeInformation = 165,
    SystemHardwareSecurityTestInterfaceResultsInformation = 166,
    SystemSingleModuleInformation = 167,
    SystemAllowedCpuSetsInformation = 168,
    SystemVsmProtectionInformation = 169,
    SystemInterruptCpuSetsInformation = 170,
    SystemSecureBootPolicyFullInformation = 171,
    SystemCodeIntegrityPolicyFullInformation = 172,
    SystemAffinitizedInterruptProcessorInformation = 173,
    SystemRootSiloInformation = 174,
    SystemCpuSetInformation = 175,
    SystemCpuSetTagInformation = 176,
    SystemWin32WerStartCallout = 177,
    SystemSecureKernelProfileInformation = 178,
    SystemCodeIntegrityPlatformManifestInformation = 179,
    SystemInterruptSteeringInformation = 180,
    SystemSupportedProcessorArchitectures = 181,
    SystemMemoryUsageInformation = 182,
    SystemCodeIntegrityCertificateInformation = 183,
    SystemPhysicalMemoryInformation = 184,
    SystemControlFlowTransition = 185,
    SystemKernelDebuggingAllowed = 186,
    SystemActivityModerationExeState = 187,
    SystemActivityModerationUserSettings = 188,
    SystemCodeIntegrityPoliciesFullInformation = 189,
    SystemCodeIntegrityUnlockInformation = 190,
    SystemIntegrityQuotaInformation = 191,
    SystemFlushInformation = 192,
    SystemProcessorIdleMaskInformation = 193,
    SystemSecureDumpEncryptionInformation = 194,
    SystemWriteConstraintInformation = 195,
    SystemKernelVaShadowInformation = 196,
    SystemHypervisorSharedPageInformation = 197,
    SystemFirmwareBootPerformanceInformation = 198,
    SystemCodeIntegrityVerificationInformation = 199,
    SystemFirmwarePartitionInformation = 200,
    SystemSpeculationControlInformation = 201,
    SystemDmaGuardPolicyInformation = 202,
    SystemEnclaveLaunchControlInformation = 203,
    SystemWorkloadAllowedCpuSetsInformation = 204,
    SystemCodeIntegrityUnlockModeInformation = 205,
    SystemLeapSecondInformation = 206,
    SystemFlags2Information = 207,
    MaxSystemInfoClass = 208
};

typedef enum _SYSTEM_MEMORY_LIST_COMMAND {
    MemoryCaptureAccessedBits = 0,
    MemoryCaptureAndResetAccessedBits = 1,
    MemoryEmptyWorkingSets = 2,
    MemoryFlushModifiedList = 3,
    MemoryPurgeStandbyList = 4,
    MemoryPurgeLowPriorityStandbyList = 5,
    MemoryCommandMax = 6
};

typedef enum _SYSTEM_NET_RATE_CONTROL_TYPE {
    SystemNetRateControlSet = 0,
    SystemNetRateControlQuota = 1
};

typedef enum _SYSTEM_PIXEL_FORMAT {
    SystemPixelFormatUnknown = 0,
    SystemPixelFormatR8G8B8 = 1,
    SystemPixelFormatR8G8B8X8 = 2,
    SystemPixelFormatB8G8R8 = 3,
    SystemPixelFormatB8G8R8X8 = 4
};

typedef enum _SYSTEM_POWER_STATE {
    PowerSystemUnspecified = 0,
    PowerSystemWorking = 1,
    PowerSystemSleeping1 = 2,
    PowerSystemSleeping2 = 3,
    PowerSystemSleeping3 = 4,
    PowerSystemHibernate = 5,
    PowerSystemShutdown = 6,
    PowerSystemMaximum = 7
};

typedef enum _SYSTEM_PROCESS_CLASSIFICATION {
    SystemProcessClassificationNormal = 0,
    SystemProcessClassificationSystem = 1,
    SystemProcessClassificationSecureSystem = 2,
    SystemProcessClassificationMemCompression = 3,
    SystemProcessClassificationRegistry = 4,
    SystemProcessClassificationMaximum = 5
};

typedef enum _SYSTEM_VA_TYPE {
    SystemVaTypeAll = 0,
    SystemVaTypeNonPagedPool = 1,
    SystemVaTypePagedPool = 2,
    SystemVaTypeSystemCache = 3,
    SystemVaTypeSystemPtes = 4,
    SystemVaTypeSessionSpace = 5,
    SystemVaTypeMax = 6
};

typedef enum _SharedVirtualDiskHandleState {
    SharedVirtualDiskHandleStateNone = 0,
    SharedVirtualDiskHandleStateFileShared = 1,
    SharedVirtualDiskHandleStateHandleShared = 3
};

typedef enum _SharedVirtualDiskSupportType {
    SharedVirtualDisksUnsupported = 0,
    SharedVirtualDisksSupported = 1,
    SharedVirtualDiskSnapshotsSupported = 3,
    SharedVirtualDiskCDPSnapshotsSupported = 7
};

typedef enum _TABLE_SEARCH_RESULT {
    TableEmptyTree = 0,
    TableFoundNode = 1,
    TableInsertAsLeft = 2,
    TableInsertAsRight = 3
};

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
    TapeDriveProblemNone = 0,
    TapeDriveReadWriteWarning = 1,
    TapeDriveReadWriteError = 2,
    TapeDriveReadWarning = 3,
    TapeDriveWriteWarning = 4,
    TapeDriveReadError = 5,
    TapeDriveWriteError = 6,
    TapeDriveHardwareError = 7,
    TapeDriveUnsupportedMedia = 8,
    TapeDriveScsiConnectionError = 9,
    TapeDriveTimetoClean = 10,
    TapeDriveCleanDriveNow = 11,
    TapeDriveMediaLifeExpired = 12,
    TapeDriveSnappedTape = 13
};

typedef enum _THDTYPE {
    THDTYPE_BLOCKMESSAGES = 0,
    THDTYPE_PROCESSMESSAGES = 1
};

typedef enum _THREADINFOCLASS {
    ThreadBasicInformation = 0,
    ThreadTimes = 1,
    ThreadPriority = 2,
    ThreadBasePriority = 3,
    ThreadAffinityMask = 4,
    ThreadImpersonationToken = 5,
    ThreadDescriptorTableEntry = 6,
    ThreadEnableAlignmentFaultFixup = 7,
    ThreadEventPair_Reusable = 8,
    ThreadQuerySetWin32StartAddress = 9,
    ThreadZeroTlsCell = 10,
    ThreadPerformanceCount = 11,
    ThreadAmILastThread = 12,
    ThreadIdealProcessor = 13,
    ThreadPriorityBoost = 14,
    ThreadSetTlsArrayAddress = 15,
    ThreadIsIoPending = 16,
    ThreadHideFromDebugger = 17,
    ThreadBreakOnTermination = 18,
    ThreadSwitchLegacyState = 19,
    ThreadIsTerminated = 20,
    ThreadLastSystemCall = 21,
    ThreadIoPriority = 22,
    ThreadCycleTime = 23,
    ThreadPagePriority = 24,
    ThreadActualBasePriority = 25,
    ThreadTebInformation = 26,
    ThreadCSwitchMon = 27,
    ThreadCSwitchPmu = 28,
    ThreadWow64Context = 29,
    ThreadGroupInformation = 30,
    ThreadUmsInformation = 31,
    ThreadCounterProfiling = 32,
    ThreadIdealProcessorEx = 33,
    ThreadCpuAccountingInformation = 34,
    ThreadSuspendCount = 35,
    ThreadHeterogeneousCpuPolicy = 36,
    ThreadContainerId = 37,
    ThreadNameInformation = 38,
    ThreadSelectedCpuSets = 39,
    ThreadSystemThreadInformation = 40,
    ThreadActualGroupAffinity = 41,
    ThreadDynamicCodePolicyInfo = 42,
    ThreadExplicitCaseSensitivity = 43,
    ThreadWorkOnBehalfTicket = 44,
    ThreadSubsystemInformation = 45,
    ThreadDbgkWerReportActive = 46,
    ThreadAttachContainer = 47,
    ThreadManageWritesToExecutableMemory = 48,
    ThreadPowerThrottlingState = 49,
    ThreadWorkloadClass = 50,
    MaxThreadInfoClass = 51
};

typedef enum _THREAD_INFORMATION_CLASS {
    ThreadMemoryPriority = 0,
    ThreadAbsoluteCpuPriority = 1,
    ThreadDynamicCodePolicy = 2,
    ThreadPowerThrottling = 3,
    ThreadInformationClassMax = 4
};

typedef enum _THREAD_UMS_INFORMATION_COMMAND {
    UmsInformationCommandInvalid = 0,
    UmsInformationCommandAttach = 1,
    UmsInformationCommandDetach = 2,
    UmsInformationCommandQuery = 3
};

typedef enum _THREAD_WORKLOAD_CLASS {
    ThreadWorkloadClassDefault = 0,
    ThreadWorkloadClassGraphics = 1,
    MaxThreadWorkloadClass = 2
};

typedef enum _TIMER_INFORMATION_CLASS {
    TimerBasicInformation = 0
};

typedef enum _TIMER_SET_INFORMATION_CLASS {
    TimerSetCoalescableTimer = 0,
    MaxTimerInfoClass = 1
};

typedef enum _TIMER_TYPE {
    NotificationTimer = 0,
    SynchronizationTimer = 1
};

typedef enum _TOKEN_ELEVATION_TYPE {
    TokenElevationTypeDefault = 1,
    TokenElevationTypeFull = 2,
    TokenElevationTypeLimited = 3
};

typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser = 1,
    TokenGroups = 2,
    TokenPrivileges = 3,
    TokenOwner = 4,
    TokenPrimaryGroup = 5,
    TokenDefaultDacl = 6,
    TokenSource = 7,
    TokenType = 8,
    TokenImpersonationLevel = 9,
    TokenStatistics = 10,
    TokenRestrictedSids = 11,
    TokenSessionId = 12,
    TokenGroupsAndPrivileges = 13,
    TokenSessionReference = 14,
    TokenSandBoxInert = 15,
    TokenAuditPolicy = 16,
    TokenOrigin = 17,
    TokenElevationType = 18,
    TokenLinkedToken = 19,
    TokenElevation = 20,
    TokenHasRestrictions = 21,
    TokenAccessInformation = 22,
    TokenVirtualizationAllowed = 23,
    TokenVirtualizationEnabled = 24,
    TokenIntegrityLevel = 25,
    TokenUIAccess = 26,
    TokenMandatoryPolicy = 27,
    TokenLogonSid = 28,
    TokenIsAppContainer = 29,
    TokenCapabilities = 30,
    TokenAppContainerSid = 31,
    TokenAppContainerNumber = 32,
    TokenUserClaimAttributes = 33,
    TokenDeviceClaimAttributes = 34,
    TokenRestrictedUserClaimAttributes = 35,
    TokenRestrictedDeviceClaimAttributes = 36,
    TokenDeviceGroups = 37,
    TokenRestrictedDeviceGroups = 38,
    TokenSecurityAttributes = 39,
    TokenIsRestricted = 40,
    TokenProcessTrustLevel = 41,
    TokenPrivateNameSpace = 42,
    TokenSingletonAttributes = 43,
    TokenBnoIsolation = 44,
    TokenChildProcessFlags = 45,
    TokenIsLessPrivilegedAppContainer = 46,
    MaxTokenInfoClass = 47
};

typedef enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION {
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4
};

typedef enum _TOKEN_TYPE {
    TokenPrimary = 1,
    TokenImpersonation = 2
};

typedef enum _TP_CALLBACK_PRIORITY {
    TP_CALLBACK_PRIORITY_HIGH = 0,
    TP_CALLBACK_PRIORITY_NORMAL = 1,
    TP_CALLBACK_PRIORITY_LOW = 2,
    TP_CALLBACK_PRIORITY_INVALID = 3,
    TP_CALLBACK_PRIORITY_COUNT = 3
};

typedef enum _TP_DEBUG_CLASS {
    TP_DEBUG_CLASS_POOL = 0
};

typedef enum _TP_LOG_LEVEL {
    TP_LOG_LEVEL_ERROR = 0,
    TP_LOG_LEVEL_WARNING = 1,
    TP_LOG_LEVEL_INFO = 2,
    TP_LOG_LEVEL_TRACE_ENTER = 3,
    TP_LOG_LEVEL_TRACE_LEAVE = 4
};

typedef enum _TP_TRACE_TYPE {
    TpTraceThreadPriority = 1,
    TpTraceThreadAffinity = 2,
    MaxTpTraceType = 3
};

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS {
    TransactionManagerBasicInformation = 0,
    TransactionManagerLogInformation = 1,
    TransactionManagerLogPathInformation = 2,
    TransactionManagerRecoveryInformation = 4,
    TransactionManagerOnlineProbeInformation = 3,
    TransactionManagerOldestTransactionInformation = 5
};

typedef enum _TRANSACTION_INFORMATION_CLASS {
    TransactionBasicInformation = 0,
    TransactionPropertiesInformation = 1,
    TransactionEnlistmentInformation = 2,
    TransactionSuperiorEnlistmentInformation = 3,
    TransactionBindInformation = 4,
    TransactionDTCPrivateInformation = 5
};

typedef enum _TRANSACTION_OUTCOME {
    TransactionOutcomeUndetermined = 1,
    TransactionOutcomeCommitted = 2,
    TransactionOutcomeAborted = 3
};

typedef enum _TRANSACTION_STATE {
    TransactionStateNormal = 1,
    TransactionStateIndoubt = 2,
    TransactionStateCommittedNotify = 3
};

typedef enum _UNWIND_OP_CODES {
    UWOP_PUSH_NONVOL = 0,
    UWOP_ALLOC_LARGE = 1,
    UWOP_ALLOC_SMALL = 2,
    UWOP_SET_FPREG = 3,
    UWOP_SAVE_NONVOL = 4,
    UWOP_SAVE_NONVOL_FAR = 5,
    UWOP_EPILOG = 6,
    UWOP_SPARE_CODE = 7,
    UWOP_SAVE_XMM128 = 8,
    UWOP_SAVE_XMM128_FAR = 9,
    UWOP_PUSH_MACHFRAME = 10
};

typedef enum _URLZONEREG {
    URLZONEREG_DEFAULT = 0,
    URLZONEREG_HKLM = 1,
    URLZONEREG_HKCU = 2
};

typedef enum _USER_ACTIVITY_PRESENCE {
    PowerUserPresent = 0,
    PowerUserNotPresent = 1,
    PowerUserInactive = 2,
    PowerUserMaximum = 3,
    PowerUserInvalid = 3
};

typedef enum _USER_MARSHAL_CB_TYPE {
    USER_MARSHAL_CB_BUFFER_SIZE = 0,
    USER_MARSHAL_CB_MARSHALL = 1,
    USER_MARSHAL_CB_UNMARSHALL = 2,
    USER_MARSHAL_CB_FREE = 3
};

typedef enum _VERIFIER_RULE_CLASS_ID {
    VrfSpecialPoolRuleClass = 0,
    VrfForceIrqlRuleClass = 1,
    VrfAllocationFailuresRuleClass = 2,
    VrfTrackingPoolAllocationsRuleClass = 3,
    VrfIORuleClass = 4,
    VrfDeadlockPreventionRuleClass = 5,
    VrfEnhancedIORuleClass = 6,
    VrfDMARuleClass = 7,
    VrfSecurityRuleClass = 8,
    VrfForcePendingIORequestRuleClass = 9,
    VrfIRPTrackingRuleClass = 10,
    VrfMiscellaneousRuleClass = 11,
    VrfMoreDebuggingRuleClass = 12,
    VrfMDLInvariantStackRuleClass = 13,
    VrfMDLInvariantDriverRuleClass = 14,
    VrfPowerDelayFuzzingRuleClass = 15,
    VrfPortMiniportRuleClass = 16,
    VrfStandardDDIRuleClass = 17,
    VrfAutoFailRuleClass = 18,
    VrfAdditionalDDIRuleClass = 19,
    VrfRuleClassBase = 20,
    VrfNdisWifiRuleClass = 21,
    VrfDriverLoggingRuleClass = 22,
    VrfSyncDelayFuzzingRuleClass = 23,
    VrfVMSwitchingRuleClass = 24,
    VrfCodeIntegrityRuleClass = 25,
    VrfBelow4GBAllocationRuleClass = 26,
    VrfProcessorBranchTraceRuleClass = 27,
    VrfAdvancedMMRuleClass = 28,
    VrfExtendingXDVTimeLimit = 29,
    VrfSystemBIOSRuleClass = 30,
    VrfHardwareRuleClass = 31,
    VrfStateSepRuleClass = 32,
    VrfWDFRuleClass = 33,
    VrfMoreIrqlRuleClass = 34,
    ReservedForDVRF35 = 35,
    ReservedForDVRF36 = 36,
    ReservedForDVRF37 = 37,
    ReservedForDVRF38 = 38,
    ReservedForDVRF39 = 39,
    ReservedForDVRF40 = 40,
    ReservedForDVRF41 = 41,
    ReservedForDVRF42 = 42,
    ReservedForDVRF43 = 43,
    ReservedForDVRF44 = 44,
    ReservedForDVRF45 = 45,
    ReservedForDVRF46 = 46,
    ReservedForDVRF47 = 47,
    ReservedForDVRF48 = 48,
    ReservedForDVRF49 = 49,
    ReservedForDVRF50 = 50,
    ReservedForDVRF51 = 51,
    ReservedForDVRF52 = 52,
    ReservedForDVRF53 = 53,
    ReservedForDVRF54 = 54,
    ReservedForDVRF55 = 55,
    ReservedForDVRF56 = 56,
    ReservedForDVRF57 = 57,
    ReservedForDVRF58 = 58,
    ReservedForDVRF59 = 59,
    ReservedForDVRF60 = 60,
    ReservedForDVRF61 = 61,
    ReservedForDVRF62 = 62,
    ReservedForDVRF63 = 63,
    VrfRuleClassSizeMax = 64
};

typedef enum _VIEW_OBJECT_ALPHA_MODE {
    VIEW_OBJECT_ALPHA_MODE_IGNORE = 0,
    VIEW_OBJECT_ALPHA_MODE_PREMULTIPLIED = 1,
    VIEW_OBJECT_ALPHA_MODE_Max = 0x7fffffff
};

typedef enum _VIEW_OBJECT_COMPOSITION_MODE {
    VIEW_OBJECT_COMPOSITION_MODE_LEGACY = 0,
    VIEW_OBJECT_COMPOSITION_MODE_SURFACEPRESENTER = 1,
    VIEW_OBJECT_COMPOSITION_MODE_Max = 0x7fffffff
};

typedef enum _VIRTUAL_MEMORY_INFORMATION_CLASS {
    VmPrefetchInformation = 0,
    VmPagePriorityInformation = 1,
    VmCfgCallTargetInformation = 2,
    VmPageDirtyStateInformation = 3,
    VmImageHotPatchInformation = 4
};

typedef enum _VIRTUAL_STORAGE_BEHAVIOR_CODE {
    VirtualStorageBehaviorUndefined = 0,
    VirtualStorageBehaviorCacheWriteThrough = 1,
    VirtualStorageBehaviorCacheWriteBack = 2
};

typedef enum _WAIT_TYPE {
    WaitAll = 0,
    WaitAny = 1,
    WaitNotification = 2,
    WaitDequeue = 3
};

typedef enum _WATCHDOG_HANDLER_ACTION {
    WdActionSetTimeoutValue = 0,
    WdActionQueryTimeoutValue = 1,
    WdActionResetTimer = 2,
    WdActionStopTimer = 3,
    WdActionStartTimer = 4,
    WdActionSetTriggerAction = 5,
    WdActionQueryTriggerAction = 6,
    WdActionQueryState = 7,
    WdActionSleep = 8,
    WdActionWake = 9,
    WdActionMarkHiberPhase = 10
};

typedef enum _WATCHDOG_INFORMATION_CLASS {
    WdInfoTimeoutValue = 0,
    WdInfoResetTimer = 1,
    WdInfoStopTimer = 2,
    WdInfoStartTimer = 3,
    WdInfoTriggerAction = 4,
    WdInfoState = 5,
    WdInfoTriggerReset = 6,
    WdInfoNop = 7,
    WdInfoGeneratedLastReset = 8,
    WdInfoInvalid = 9
};

typedef enum _WNF_DATA_SCOPE {
    WnfDataScopeSystem = 0,
    WnfDataScopeSession = 1,
    WnfDataScopeUser = 2,
    WnfDataScopeProcess = 3,
    WnfDataScopeMachine = 4
};

typedef enum _WNF_STATE_NAME_INFORMATION {
    WnfInfoStateNameExist = 0,
    WnfInfoSubscribersPresent = 1,
    WnfInfoIsQuiescent = 2
};

typedef enum _WNF_STATE_NAME_LIFETIME {
    WnfWellKnownStateName = 0,
    WnfPermanentStateName = 1,
    WnfPersistentStateName = 2,
    WnfTemporaryStateName = 3
};

typedef enum _WORKERFACTORYINFOCLASS {
    WorkerFactoryTimeout = 0,
    WorkerFactoryRetryTimeout = 1,
    WorkerFactoryIdleTimeout = 2,
    WorkerFactoryBindingCount = 3,
    WorkerFactoryThreadMinimum = 4,
    WorkerFactoryThreadMaximum = 5,
    WorkerFactoryPaused = 6,
    WorkerFactoryBasicInformation = 7,
    WorkerFactoryAdjustThreadGoal = 8,
    WorkerFactoryCallbackType = 9,
    WorkerFactoryStackInformation = 10,
    WorkerFactoryThreadBasePriority = 11,
    WorkerFactoryTimeoutWaiters = 12,
    WorkerFactoryFlags = 13,
    WorkerFactoryThreadSoftMaximum = 14,
    MaxWorkerFactoryInfoClass = 15
};

typedef enum _WORKER_FACTORY_CALLBACK_CLASS {
    WorkerFactoryCallbackNormal = 0,
    WorkerFactoryCallbackLongRunning = 1,
    WorkerFactoryCallbackIndependent = 2,
    WorkerFactoryCallbackDetectedUnrecoverableError = 3
};

typedef enum _WOW64_FUNCTION_CODE64 {
    WOW64_FUNCTION_NOP = 0,
    WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
    WOW64_FUNCTION_CPU_TURBO_THUNK_CONTROL = 2,
    WOW64_FUNCTION_CPU_CFG_DISPATCH_CONTROL = 3,
    WOW64_FUNCTION_CPU_OPTIMIZE_CHPE_IMPORT_THUNKS = 4,
    WOW64_FUNCTION_MAXIMUM = 5
};

typedef enum _WPP_FLAG_LEN_ENUM {
    WPP_FLAG_LEN = 1
};

typedef enum _WPP_FLAG_LEN_ENUM_MAX {
    WPP_MAX_FLAG_LEN_CHECK = 1
};

typedef enum _XHR_AUTH {
    XHR_AUTH_ALL = 0,
    XHR_AUTH_NONE = 1,
    XHR_AUTH_PROXY = 2
};

typedef enum _XHR_CERT_ERROR_FLAG {
    XHR_CERT_ERROR_REVOCATION_FAILED = 0x800000,
    XHR_CERT_ERROR_UNKNOWN_CA = 0x1000000,
    XHR_CERT_ERROR_CERT_CN_INVALID = 0x2000000,
    XHR_CERT_ERROR_CERT_DATE_INVALID = 0x4000000,
    XHR_CERT_ERROR_ALL_SERVER_ERRORS = 0x7800000
};

typedef enum _XHR_CERT_IGNORE_FLAG {
    XHR_CERT_IGNORE_REVOCATION_FAILED = 128,
    XHR_CERT_IGNORE_UNKNOWN_CA = 256,
    XHR_CERT_IGNORE_CERT_CN_INVALID = 4096,
    XHR_CERT_IGNORE_CERT_DATE_INVALID = 8192,
    XHR_CERT_IGNORE_ALL_SERVER_ERRORS = 12672
};

typedef enum _XHR_COOKIE_FLAG {
    XHR_COOKIE_IS_SECURE = 1,
    XHR_COOKIE_IS_SESSION = 2,
    XHR_COOKIE_THIRD_PARTY = 16,
    XHR_COOKIE_PROMPT_REQUIRED = 32,
    XHR_COOKIE_EVALUATE_P3P = 64,
    XHR_COOKIE_APPLY_P3P = 128,
    XHR_COOKIE_P3P_ENABLED = 256,
    XHR_COOKIE_IS_RESTRICTED = 512,
    XHR_COOKIE_IE6 = 1024,
    XHR_COOKIE_IS_LEGACY = 2048,
    XHR_COOKIE_NON_SCRIPT = 4096,
    XHR_COOKIE_HTTPONLY = 8192
};

typedef enum _XHR_COOKIE_STATE {
    XHR_COOKIE_STATE_UNKNOWN = 0,
    XHR_COOKIE_STATE_ACCEPT = 1,
    XHR_COOKIE_STATE_PROMPT = 2,
    XHR_COOKIE_STATE_LEASH = 3,
    XHR_COOKIE_STATE_DOWNGRADE = 4,
    XHR_COOKIE_STATE_REJECT = 5
};

typedef enum _XHR_CRED_PROMPT {
    XHR_CRED_PROMPT_ALL = 0,
    XHR_CRED_PROMPT_NONE = 1,
    XHR_CRED_PROMPT_PROXY = 2
};

typedef enum _XHR_PROPERTY {
    XHR_PROP_NO_CRED_PROMPT = 0,
    XHR_PROP_NO_AUTH = 1,
    XHR_PROP_TIMEOUT = 2,
    XHR_PROP_NO_DEFAULT_HEADERS = 3,
    XHR_PROP_REPORT_REDIRECT_STATUS = 4,
    XHR_PROP_NO_CACHE = 5,
    XHR_PROP_EXTENDED_ERROR = 6,
    XHR_PROP_QUERY_STRING_UTF8 = 7,
    XHR_PROP_IGNORE_CERT_ERRORS = 8,
    XHR_PROP_ONDATA_THRESHOLD = 9,
    XHR_PROP_SET_ENTERPRISEID = 10,
    XHR_PROP_MAX_CONNECTIONS = 11
};

typedef enum __MIDL_IAsyncSecurityStatus_0001 {
    ASYNCSECURITYF_PENDING = 1,
    ASYNCSECURITYF_FAILED = 2
};

typedef enum __MIDL_IAuthenticateEx_0001 {
    AUTHENTICATEF_PROXY = 1,
    AUTHENTICATEF_BASIC = 2,
    AUTHENTICATEF_HTTP = 4
};

typedef enum __MIDL_IBindStatusCallbackEx_0001 {
    BINDF2_DISABLEBASICOVERHTTP = 1,
    BINDF2_DISABLEAUTOCOOKIEHANDLING = 2,
    BINDF2_READ_DATA_GREATER_THAN_4GB = 4,
    BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID = 8,
    BINDF2_SETDOWNLOADMODE = 32,
    BINDF2_DISABLE_HTTP_REDIRECT_CACHING = 64,
    BINDF2_KEEP_CALLBACK_MODULE_LOADED = 128,
    BINDF2_ALLOW_PROXY_CRED_PROMPT = 256,
    BINDF2_RESERVED_17 = 512,
    BINDF2_RESERVED_16 = 1024,
    BINDF2_RESERVED_15 = 2048,
    BINDF2_RESERVED_14 = 4096,
    BINDF2_RESERVED_13 = 8192,
    BINDF2_RESERVED_12 = 16384,
    BINDF2_RESERVED_11 = 0x8000,
    BINDF2_RESERVED_10 = 0x10000,
    BINDF2_RESERVED_F = 0x20000,
    BINDF2_RESERVED_E = 0x40000,
    BINDF2_RESERVED_D = 0x80000,
    BINDF2_RESERVED_C = 0x100000,
    BINDF2_RESERVED_B = 0x200000,
    BINDF2_RESERVED_A = 0x400000,
    BINDF2_RESERVED_9 = 0x800000,
    BINDF2_RESERVED_8 = 0x1000000,
    BINDF2_RESERVED_7 = 0x2000000,
    BINDF2_RESERVED_6 = 0x4000000,
    BINDF2_RESERVED_5 = 0x8000000,
    BINDF2_RESERVED_4 = 0x10000000,
    BINDF2_RESERVED_3 = 0x20000000,
    BINDF2_RESERVED_2 = 0x40000000,
    BINDF2_RESERVED_1 = -2147483648
};

typedef enum __MIDL_IBindStatusCallback_0001 {
    BINDVERB_GET = 0,
    BINDVERB_POST = 1,
    BINDVERB_PUT = 2,
    BINDVERB_CUSTOM = 3,
    BINDVERB_RESERVED1 = 4
};

typedef enum __MIDL_IBindStatusCallback_0002 {
    BINDINFOF_URLENCODESTGMEDDATA = 1,
    BINDINFOF_URLENCODEDEXTRAINFO = 2
};

typedef enum __MIDL_IBindStatusCallback_0003 {
    BINDF_ASYNCHRONOUS = 1,
    BINDF_ASYNCSTORAGE = 2,
    BINDF_NOPROGRESSIVERENDERING = 4,
    BINDF_OFFLINEOPERATION = 8,
    BINDF_GETNEWESTVERSION = 16,
    BINDF_NOWRITECACHE = 32,
    BINDF_NEEDFILE = 64,
    BINDF_PULLDATA = 128,
    BINDF_IGNORESECURITYPROBLEM = 256,
    BINDF_RESYNCHRONIZE = 512,
    BINDF_HYPERLINK = 1024,
    BINDF_NO_UI = 2048,
    BINDF_SILENTOPERATION = 4096,
    BINDF_PRAGMA_NO_CACHE = 8192,
    BINDF_GETCLASSOBJECT = 16384,
    BINDF_RESERVED_1 = 0x8000,
    BINDF_FREE_THREADED = 0x10000,
    BINDF_DIRECT_READ = 0x20000,
    BINDF_FORMS_SUBMIT = 0x40000,
    BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
    BINDF_FROMURLMON = 0x100000,
    BINDF_FWD_BACK = 0x200000,
    BINDF_PREFERDEFAULTHANDLER = 0x400000,
    BINDF_ENFORCERESTRICTED = 0x800000,
    BINDF_RESERVED_2 = -2147483648,
    BINDF_RESERVED_3 = 0x1000000,
    BINDF_RESERVED_4 = 0x2000000,
    BINDF_RESERVED_5 = 0x4000000,
    BINDF_RESERVED_6 = 0x8000000,
    BINDF_RESERVED_7 = 0x40000000,
    BINDF_RESERVED_8 = 0x20000000
};

typedef enum __MIDL_IBindStatusCallback_0004 {
    URL_ENCODING_NONE = 0,
    URL_ENCODING_ENABLE_UTF8 = 0x10000000,
    URL_ENCODING_DISABLE_UTF8 = 0x20000000
};

typedef enum __MIDL_IBindStatusCallback_0005 {
    BINDINFO_OPTIONS_WININETFLAG = 0x10000,
    BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
    BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
    BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
    BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
    BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
    BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
    BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
    BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
    BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
    BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
    BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
    BINDINFO_OPTIONS_ALLOWCONNECTDATA = 0x20000000,
    BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
    BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648
};

typedef enum __MIDL_IBindStatusCallback_0006 {
    BSCF_FIRSTDATANOTIFICATION = 1,
    BSCF_INTERMEDIATEDATANOTIFICATION = 2,
    BSCF_LASTDATANOTIFICATION = 4,
    BSCF_DATAFULLYAVAILABLE = 8,
    BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
    BSCF_SKIPDRAINDATAFORFILEURLS = 32,
    BSCF_64BITLENGTHDOWNLOAD = 64
};

typedef enum __MIDL_ICodeInstall_0001 {
    CIP_DISK_FULL = 0,
    CIP_ACCESS_DENIED = 1,
    CIP_NEWER_VERSION_EXISTS = 2,
    CIP_OLDER_VERSION_EXISTS = 3,
    CIP_NAME_CONFLICT = 4,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
    CIP_UNSAFE_TO_ABORT = 7,
    CIP_NEED_REBOOT = 8,
    CIP_NEED_REBOOT_UI_PERMISSION = 9
};

typedef enum __MIDL_IGetBindHandle_0001 {
    BINDHANDLETYPES_APPCACHE = 0,
    BINDHANDLETYPES_DEPENDENCY = 1,
    BINDHANDLETYPES_COUNT = 2
};

typedef enum __MIDL_IInternetSecurityManager_0001 {
    PUAF_DEFAULT = 0,
    PUAF_NOUI = 1,
    PUAF_ISFILE = 2,
    PUAF_WARN_IF_DENIED = 4,
    PUAF_FORCEUI_FOREGROUND = 8,
    PUAF_CHECK_TIFS = 16,
    PUAF_DONTCHECKBOXINDIALOG = 32,
    PUAF_TRUSTED = 64,
    PUAF_ACCEPT_WILDCARD_SCHEME = 128,
    PUAF_ENFORCERESTRICTED = 256,
    PUAF_NOSAVEDFILECHECK = 512,
    PUAF_REQUIRESAVEDFILECHECK = 1024,
    PUAF_DONT_USE_CACHE = 4096,
    PUAF_RESERVED1 = 8192,
    PUAF_RESERVED2 = 16384,
    PUAF_LMZ_UNLOCKED = 0x10000,
    PUAF_LMZ_LOCKED = 0x20000,
    PUAF_DEFAULTZONEPOL = 0x40000,
    PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
    PUAF_NOUIIFLOCKED = 0x100000,
    PUAF_DRAGPROTOCOLCHECK = 0x200000
};

typedef enum __MIDL_IInternetSecurityManager_0002 {
    PUAFOUT_DEFAULT = 0,
    PUAFOUT_ISLOCKZONEPOLICY = 1
};

typedef enum __MIDL_IInternetSecurityManager_0003 {
    SZM_CREATE = 0,
    SZM_DELETE = 1
};

typedef enum __MIDL_IInternetZoneManager_0001 {
    MAX_ZONE_PATH = 260,
    MAX_ZONE_DESCRIPTION = 200
};

typedef enum __MIDL_IInternetZoneManager_0002 {
    ZAFLAGS_CUSTOM_EDIT = 1,
    ZAFLAGS_ADD_SITES = 2,
    ZAFLAGS_REQUIRE_VERIFICATION = 4,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
    ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
    ZAFLAGS_NO_UI = 32,
    ZAFLAGS_SUPPORTS_VERIFICATION = 64,
    ZAFLAGS_UNC_AS_INTRANET = 128,
    ZAFLAGS_DETECT_INTRANET = 256,
    ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
    ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
    ZAFLAGS_NO_CACHE = 0x40000
};

typedef enum __MIDL_IMonikerProp_0001 {
    MIMETYPEPROP = 0,
    USE_SRC_URL = 1,
    CLASSIDPROP = 2,
    TRUSTEDDOWNLOADPROP = 3,
    POPUPLEVELPROP = 4
};

typedef enum __MIDL_IOleDocument_0001 {
    DOCMISC_CANCREATEMULTIPLEVIEWS = 1,
    DOCMISC_SUPPORTCOMPLEXRECTANGLES = 2,
    DOCMISC_CANTOPENEDIT = 4,
    DOCMISC_NOFILESUPPORT = 8
};

typedef enum __MIDL_IPrint_0001 {
    PRINTFLAG_MAYBOTHERUSER = 1,
    PRINTFLAG_PROMPTUSER = 2,
    PRINTFLAG_USERMAYCHANGEPRINTER = 4,
    PRINTFLAG_RECOMPOSETODEVICE = 8,
    PRINTFLAG_DONTACTUALLYPRINT = 16,
    PRINTFLAG_FORCEPROPERTIES = 32,
    PRINTFLAG_PRINTTOFILE = 64
};

typedef enum __MIDL_ITransactionInternal_0001 {
    TRANS_INTERNAL_READ_OVER_4GB = 1,
    TRANS_INTERNAL_REDIRECT_KEEP_VERB = 2,
    TRANS_INTERNAL_POST_TO_GET_REDIRECT = 4,
    TRANS_INTERNAL_REDIRECT = 8
};

typedef enum __MIDL_IUri_0001 {
    Uri_PROPERTY_ABSOLUTE_URI = 0,
    Uri_PROPERTY_STRING_START = 0,
    Uri_PROPERTY_AUTHORITY = 1,
    Uri_PROPERTY_DISPLAY_URI = 2,
    Uri_PROPERTY_DOMAIN = 3,
    Uri_PROPERTY_EXTENSION = 4,
    Uri_PROPERTY_FRAGMENT = 5,
    Uri_PROPERTY_HOST = 6,
    Uri_PROPERTY_PASSWORD = 7,
    Uri_PROPERTY_PATH = 8,
    Uri_PROPERTY_PATH_AND_QUERY = 9,
    Uri_PROPERTY_QUERY = 10,
    Uri_PROPERTY_RAW_URI = 11,
    Uri_PROPERTY_SCHEME_NAME = 12,
    Uri_PROPERTY_USER_INFO = 13,
    Uri_PROPERTY_USER_NAME = 14,
    Uri_PROPERTY_STRING_LAST = 14,
    Uri_PROPERTY_HOST_TYPE = 15,
    Uri_PROPERTY_DWORD_START = 15,
    Uri_PROPERTY_PORT = 16,
    Uri_PROPERTY_SCHEME = 17,
    Uri_PROPERTY_ZONE = 18,
    Uri_PROPERTY_DWORD_LAST = 18
};

typedef enum __MIDL_IUri_0002 {
    Uri_HOST_UNKNOWN = 0,
    Uri_HOST_DNS = 1,
    Uri_HOST_IPV4 = 2,
    Uri_HOST_IPV6 = 3,
    Uri_HOST_IDN = 4
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0011_0001 {
    BINDFRESERVED_FLAGS_SEND_INETSTATUS_TIMESTAMPS = 1,
    BINDFRESERVED_FLAGS_PRESERVE_REFERER_ON_HTTPS_TO_HTTP_REDIRECT = 2,
    BINDFRESERVED_FLAGS_SYNC_MODE_AUTOMATIC_SESSION_DISABLED = 4,
    BINDFRESERVED_TOP_LEVEL_NAVIGATE_USE_EXISTING_DEPENDENCY_HANDLE = 8
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0019_0001 {
    AHC_GENERIC = 0,
    AHC_MARKUP = 1,
    AHC_STYLESHEET = 2,
    AHC_SCRIPT = 3,
    AHC_IMAGE = 4
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0026_0001 {
    IDP_TYPE_DEFAULT = 0,
    IDP_TYPE_HTML = 1,
    IDP_TYPE_PREBINDING = 2,
    IDP_TYPE_XHR_SYNC = 3,
    IDP_TYPE_SCRIPT = 4,
    IDP_TYPE_CSS = 5,
    IDP_TYPE_FONT = 6,
    IDP_TYPE_XHR = 7,
    IDP_TYPE_OBJECT = 8,
    IDP_TYPE_IMG = 9,
    IDP_TYPE_MEDIA_VIDEO = 10,
    IDP_TYPE_MEDIA_AUDIO = 11
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0026_0002 {
    IDP_CONTEXT_DEFAULT = 0,
    IDP_CONTEXT_FOREGROUND = 1,
    IDP_CONTEXT_BACKGROUND = 2,
    IDP_CONTEXT_PRERENDER = 4,
    IDP_CONTEXT_NONROOTMARKUP = 8,
    IDP_CONTEXT_LAZYLOAD = 16
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0026_0003 {
    IDP_MARKUP_DEFAULT = 0,
    IDP_MARKUP_POSTONLOAD = 1,
    IDP_MARKUP_PREONLOAD = 2,
    IDP_MARKUP_PREFETCH = 3
};

typedef enum __MIDL___MIDL_itf_urlmonp_0000_0026_0004 {
    IDP_THREAD_DEFAULT = 0,
    IDP_THREAD_UI = 1,
    IDP_THREAD_SPECULATIVE = 2,
    IDP_THREAD_PREPARSER = 3,
    IDP_THREAD_WEBWORKER = 4
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0001 {
    XML_ELEMENT = 1,
    XML_ATTRIBUTE = 2,
    XML_PI = 3,
    XML_XMLDECL = 4,
    XML_DOCTYPE = 5,
    XML_DTDATTRIBUTE = 6,
    XML_ENTITYDECL = 7,
    XML_ELEMENTDECL = 8,
    XML_ATTLISTDECL = 9,
    XML_NOTATION = 10,
    XML_GROUP = 11,
    XML_INCLUDESECT = 12,
    XML_PCDATA = 13,
    XML_CDATA = 14,
    XML_IGNORESECT = 15,
    XML_COMMENT = 16,
    XML_ENTITYREF = 17,
    XML_WHITESPACE = 18,
    XML_NAME = 19,
    XML_NMTOKEN = 20,
    XML_STRING = 21,
    XML_PEREF = 22,
    XML_MODEL = 23,
    XML_ATTDEF = 24,
    XML_ATTTYPE = 25,
    XML_ATTPRESENCE = 26,
    XML_DTDSUBSET = 27,
    XML_LASTNODETYPE = 28
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0002 {
    XML_VERSION = 28,
    XML_ENCODING = 29,
    XML_STANDALONE = 30,
    XML_NS = 31,
    XML_XMLSPACE = 32,
    XML_XMLLANG = 33,
    XML_SYSTEM = 34,
    XML_PUBLIC = 35,
    XML_NDATA = 36,
    XML_AT_CDATA = 37,
    XML_AT_ID = 38,
    XML_AT_IDREF = 39,
    XML_AT_IDREFS = 40,
    XML_AT_ENTITY = 41,
    XML_AT_ENTITIES = 42,
    XML_AT_NMTOKEN = 43,
    XML_AT_NMTOKENS = 44,
    XML_AT_NOTATION = 45,
    XML_AT_REQUIRED = 46,
    XML_AT_IMPLIED = 47,
    XML_AT_FIXED = 48,
    XML_PENTITYDECL = 49,
    XML_EMPTY = 50,
    XML_ANY = 51,
    XML_MIXED = 52,
    XML_SEQUENCE = 53,
    XML_CHOICE = 54,
    XML_STAR = 55,
    XML_PLUS = 56,
    XML_QUESTIONMARK = 57,
    XML_LASTSUBNODETYPE = 58
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0003 {
    XML_E_PARSEERRORBASE = -1072896768,
    XML_E_ENDOFINPUT = -1072896768,
    XML_E_MISSINGEQUALS = -1072896767,
    XML_E_MISSINGQUOTE = -1072896766,
    XML_E_COMMENTSYNTAX = -1072896765,
    XML_E_BADSTARTNAMECHAR = -1072896764,
    XML_E_BADNAMECHAR = -1072896763,
    XML_E_BADCHARINSTRING = -1072896762,
    XML_E_XMLDECLSYNTAX = -1072896761,
    XML_E_BADCHARDATA = -1072896760,
    XML_E_MISSINGWHITESPACE = -1072896759,
    XML_E_EXPECTINGTAGEND = -1072896758,
    XML_E_BADCHARINDTD = -1072896757,
    XML_E_BADCHARINDECL = -1072896756,
    XML_E_MISSINGSEMICOLON = -1072896755,
    XML_E_BADCHARINENTREF = -1072896754,
    XML_E_UNBALANCEDPAREN = -1072896753,
    XML_E_EXPECTINGOPENBRACKET = -1072896752,
    XML_E_BADENDCONDSECT = -1072896751,
    XML_E_INTERNALERROR = -1072896750,
    XML_E_UNEXPECTED_WHITESPACE = -1072896749,
    XML_E_INCOMPLETE_ENCODING = -1072896748,
    XML_E_BADCHARINMIXEDMODEL = -1072896747,
    XML_E_MISSING_STAR = -1072896746,
    XML_E_BADCHARINMODEL = -1072896745,
    XML_E_MISSING_PAREN = -1072896744,
    XML_E_BADCHARINENUMERATION = -1072896743,
    XML_E_PIDECLSYNTAX = -1072896742,
    XML_E_EXPECTINGCLOSEQUOTE = -1072896741,
    XML_E_MULTIPLE_COLONS = -1072896740,
    XML_E_INVALID_DECIMAL = -1072896739,
    XML_E_INVALID_HEXIDECIMAL = -1072896738,
    XML_E_INVALID_UNICODE = -1072896737,
    XML_E_WHITESPACEORQUESTIONMARK = -1072896736,
    XML_E_ENDOFPE = -1072896735,
    XML_E_TOKEN_ERROR = -1072896688,
    XML_E_SUSPENDED = -1072896688,
    XML_E_STOPPED = -1072896687,
    XML_E_UNEXPECTEDENDTAG = -1072896686,
    XML_E_UNCLOSEDTAG = -1072896685,
    XML_E_DUPLICATEATTRIBUTE = -1072896684,
    XML_E_MULTIPLEROOTS = -1072896683,
    XML_E_INVALIDATROOTLEVEL = -1072896682,
    XML_E_BADXMLDECL = -1072896681,
    XML_E_MISSINGROOT = -1072896680,
    XML_E_UNEXPECTEDEOF = -1072896679,
    XML_E_BADPEREFINSUBSET = -1072896678,
    XML_E_PE_NESTING = -1072896677,
    XML_E_INVALID_CDATACLOSINGTAG = -1072896676,
    XML_E_UNCLOSEDPI = -1072896675,
    XML_E_UNCLOSEDSTARTTAG = -1072896674,
    XML_E_UNCLOSEDENDTAG = -1072896673,
    XML_E_UNCLOSEDSTRING = -1072896672,
    XML_E_UNCLOSEDCOMMENT = -1072896671,
    XML_E_UNCLOSEDDECL = -1072896670,
    XML_E_UNCLOSEDMARKUPDECL = -1072896669,
    XML_E_UNCLOSEDCDATA = -1072896668,
    XML_E_BADDECLNAME = -1072896667,
    XML_E_BADEXTERNALID = -1072896666,
    XML_E_BADELEMENTINDTD = -1072896665,
    XML_E_RESERVEDNAMESPACE = -1072896664,
    XML_E_EXPECTING_VERSION = -1072896663,
    XML_E_EXPECTING_ENCODING = -1072896662,
    XML_E_EXPECTING_NAME = -1072896661,
    XML_E_UNEXPECTED_ATTRIBUTE = -1072896660,
    XML_E_ENDTAGMISMATCH = -1072896659,
    XML_E_INVALIDENCODING = -1072896658,
    XML_E_INVALIDSWITCH = -1072896657,
    XML_E_EXPECTING_NDATA = -1072896656,
    XML_E_INVALID_MODEL = -1072896655,
    XML_E_INVALID_TYPE = -1072896654,
    XML_E_INVALIDXMLSPACE = -1072896653,
    XML_E_MULTI_ATTR_VALUE = -1072896652,
    XML_E_INVALID_PRESENCE = -1072896651,
    XML_E_BADXMLCASE = -1072896650,
    XML_E_CONDSECTINSUBSET = -1072896649,
    XML_E_CDATAINVALID = -1072896648,
    XML_E_INVALID_STANDALONE = -1072896647,
    XML_E_UNEXPECTED_STANDALONE = -1072896646,
    XML_E_DOCTYPE_IN_DTD = -1072896645,
    XML_E_MISSING_ENTITY = -1072896644,
    XML_E_ENTITYREF_INNAME = -1072896643,
    XML_E_DOCTYPE_OUTSIDE_PROLOG = -1072896642,
    XML_E_INVALID_VERSION = -1072896641,
    XML_E_DTDELEMENT_OUTSIDE_DTD = -1072896640,
    XML_E_DUPLICATEDOCTYPE = -1072896639,
    XML_E_RESOURCE = -1072896638,
    XML_E_MISSINGNAME = -1072896637,
    XML_E_DTD_PROHIBITED = -1072896636,
    XML_E_MAXXMLSIZE = -1072896635,
    XML_E_MAXELEMENTDEPTH = -1072896634,
    XML_E_LASTERROR = -1072896633
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0004 {
    XMLPARSER_IDLE = 0,
    XMLPARSER_WAITING = 1,
    XMLPARSER_BUSY = 2,
    XMLPARSER_ERROR = 3,
    XMLPARSER_STOPPED = 4,
    XMLPARSER_SUSPENDED = 5
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0005 {
    XMLFLAG_FLOATINGAMP = 1,
    XMLFLAG_SHORTENDTAGS = 2,
    XMLFLAG_CASEINSENSITIVE = 4,
    XMLFLAG_NONAMESPACES = 8,
    XMLFLAG_NOWHITESPACE = 16,
    XMLFLAG_IE4QUIRKS = 32,
    XMLFLAG_NODTDNODES = 64,
    XMLFLAG_IE4COMPATIBILITY = 255,
    XMLFLAG_IGNORESXMLDECL = 256,
    XMLFLAG_SAX = 512,
    XMLFLAG_NORMALIZELB = 1024,
    XMLFLAG_IGNOREENCODING = 2048,
    XMLFLAG_USEWINHTTP = 4096,
    XMLFLAG_RUNBUFFERONLY = 8192,
    XMLFLAG_LAZYRESYNC = 16384,
    XMLFLAG_PROHIBIT_DTD = 0x8000,
    XMLFLAG_IGNOREILLEGALCHARS = 0x10000,
    XMLFLAG_IE5COMPATIBILITY = 0xf0100,
    XMLFLAG_XMLFRAGMENTS = 0x100000,
    XMLFLAG_NORMALIZE_ATTRIBUTE_VALUES = 0x200000
};

typedef enum __MIDL___MIDL_itf_xmlparser_0000_0000_0006 {
    XMLNF_STARTDOCUMENT = 0,
    XMLNF_STARTDTD = 1,
    XMLNF_ENDDTD = 2,
    XMLNF_STARTDTDSUBSET = 3,
    XMLNF_ENDDTDSUBSET = 4,
    XMLNF_ENDPROLOG = 5,
    XMLNF_STARTENTITY = 6,
    XMLNF_ENDENTITY = 7,
    XMLNF_ENDDOCUMENT = 8,
    XMLNF_DATAAVAILABLE = 9,
    XMLNF_LASTEVENT = 9
};

typedef enum __enative_startup_state {
    __uninitialized = 0,
    __initializing = 1,
    __initialized = 2
};

typedef enum __vc_attributes::aggregatableAttribute::type_e {
    never = 0,
    allowed = 1,
    always = 2
};

typedef enum __vc_attributes::event_receiverAttribute::type_e {
    native = 0,
    com = 1,
    managed = 2
};

typedef enum __vc_attributes::event_sourceAttribute::optimize_e {
    speed = 0,
    size = 1
};

typedef enum __vc_attributes::event_sourceAttribute::type_e {
    native = 0,
    com = 1,
    managed = 2
};

typedef enum __vc_attributes::helper_attributes::usageAttribute::usage_e {
    eAnyUsage = 0,
    eCoClassUsage = 1,
    eCOMInterfaceUsage = 2,
    eInterfaceUsage = 6,
    eMemberUsage = 8,
    eMethodUsage = 16,
    eInterfaceMethodUsage = 32,
    eInterfaceMemberUsage = 64,
    eCoClassMemberUsage = 128,
    eCoClassMethodUsage = 256,
    eGlobalMethodUsage = 768,
    eGlobalDataUsage = 1024,
    eClassUsage = 2048,
    eInterfaceParameterUsage = 4096,
    eMethodParameterUsage = 12288,
    eIDLModuleUsage = 16384,
    eAnonymousUsage = 0x8000,
    eTypedefUsage = 0x10000,
    eUnionUsage = 0x20000,
    eEnumUsage = 0x40000,
    eDefineTagUsage = 0x80000,
    eStructUsage = 0x100000,
    eLocalUsage = 0x200000,
    ePropertyUsage = 0x400000,
    eEventUsage = 0x800000,
    eTemplateUsage = 0x1000000,
    eModuleUsage = 0x1000000,
    eIllegalUsage = 0x2000000,
    eAsynchronousUsage = 0x4000000,
    eAnyIDLUsage = 0x3f7fff
};

typedef enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e {
    eBoolean = 0,
    eInteger = 1,
    eFloat = 2,
    eDouble = 3
};

typedef enum __vc_attributes::moduleAttribute::type_e {
    dll = 1,
    exe = 2,
    service = 3,
    unspecified = 4,
    EXE = 2,
    SERVICE = 3
};

typedef enum __vc_attributes::pointer_defaultAttribute::type_e {
    ptr = 0,
    ref = 1,
    unique = 2
};

typedef enum __vc_attributes::threadingAttribute::threading_e {
    apartment = 1,
    single = 2,
    free = 3,
    neutral = 4,
    both = 5
};

typedef enum _bodyScroll {
    bodyScrollyes = 1,
    bodyScrollno = 2,
    bodyScrollauto = 4,
    bodyScrolldefault = 3,
    bodyScroll_Max = 0x7fffffff
};

typedef enum _frameScrolling {
    frameScrollingyes = 1,
    frameScrollingno = 2,
    frameScrollingauto = 4,
    frameScrolling_Max = 0x7fffffff
};

typedef enum _htmlAdjacency {
    htmlAdjacencyBeforeBegin = 1,
    htmlAdjacencyAfterBegin = 2,
    htmlAdjacencyBeforeEnd = 3,
    htmlAdjacencyAfterEnd = 4,
    htmlAdjacency_Max = 0x7fffffff
};

typedef enum _htmlApplyLocation {
    htmlApplyLocationInside = 0,
    htmlApplyLocationOutside = 1,
    htmlApplyLocation_Max = 0x7fffffff
};

typedef enum _htmlBlockAlign {
    htmlBlockAlignNotSet = 0,
    htmlBlockAlignLeft = 1,
    htmlBlockAlignCenter = 2,
    htmlBlockAlignRight = 3,
    htmlBlockAlignJustify = 4,
    htmlBlockAlign_Max = 0x7fffffff
};

typedef enum _htmlCaptionAlign {
    htmlCaptionAlignNotSet = 0,
    htmlCaptionAlignLeft = 1,
    htmlCaptionAlignCenter = 2,
    htmlCaptionAlignRight = 3,
    htmlCaptionAlignJustify = 4,
    htmlCaptionAlignTop = 5,
    htmlCaptionAlignBottom = 6,
    htmlCaptionAlign_Max = 0x7fffffff
};

typedef enum _htmlCaptionVAlign {
    htmlCaptionVAlignNotSet = 0,
    htmlCaptionVAlignTop = 1,
    htmlCaptionVAlignBottom = 2,
    htmlCaptionVAlign_Max = 0x7fffffff
};

typedef enum _htmlCellAlign {
    htmlCellAlignNotSet = 0,
    htmlCellAlignLeft = 1,
    htmlCellAlignCenter = 2,
    htmlCellAlignRight = 3,
    htmlCellAlignMiddle = 2,
    htmlCellAlign_Max = 0x7fffffff
};

typedef enum _htmlCellVAlign {
    htmlCellVAlignNotSet = 0,
    htmlCellVAlignTop = 1,
    htmlCellVAlignMiddle = 2,
    htmlCellVAlignBottom = 3,
    htmlCellVAlignBaseline = 4,
    htmlCellVAlignCenter = 2,
    htmlCellVAlign_Max = 0x7fffffff
};

typedef enum _htmlClear {
    htmlClearNotSet = 0,
    htmlClearAll = 1,
    htmlClearLeft = 2,
    htmlClearRight = 3,
    htmlClearBoth = 4,
    htmlClearNone = 5,
    htmlClear_Max = 0x7fffffff
};

typedef enum _htmlCompatMode {
    htmlCompatModeBackCompat = 0,
    htmlCompatModeCSS1Compat = 1,
    htmlCompatMode_Max = 0x7fffffff
};

typedef enum _htmlComponent {
    htmlComponentClient = 0,
    htmlComponentSbLeft = 1,
    htmlComponentSbPageLeft = 2,
    htmlComponentSbHThumb = 3,
    htmlComponentSbPageRight = 4,
    htmlComponentSbRight = 5,
    htmlComponentSbUp = 6,
    htmlComponentSbPageUp = 7,
    htmlComponentSbVThumb = 8,
    htmlComponentSbPageDown = 9,
    htmlComponentSbDown = 10,
    htmlComponentSbLeft2 = 11,
    htmlComponentSbPageLeft2 = 12,
    htmlComponentSbRight2 = 13,
    htmlComponentSbPageRight2 = 14,
    htmlComponentSbUp2 = 15,
    htmlComponentSbPageUp2 = 16,
    htmlComponentSbDown2 = 17,
    htmlComponentSbPageDown2 = 18,
    htmlComponentSbTop = 19,
    htmlComponentSbBottom = 20,
    htmlComponentOutside = 21,
    htmlComponentGHTopLeft = 22,
    htmlComponentGHLeft = 23,
    htmlComponentGHTop = 24,
    htmlComponentGHBottomLeft = 25,
    htmlComponentGHTopRight = 26,
    htmlComponentGHBottom = 27,
    htmlComponentGHRight = 28,
    htmlComponentGHBottomRight = 29,
    htmlComponent_Max = 0x7fffffff
};

typedef enum _htmlControlAlign {
    htmlControlAlignNotSet = 0,
    htmlControlAlignLeft = 1,
    htmlControlAlignCenter = 2,
    htmlControlAlignRight = 3,
    htmlControlAlignTextTop = 4,
    htmlControlAlignAbsMiddle = 5,
    htmlControlAlignBaseline = 6,
    htmlControlAlignAbsBottom = 7,
    htmlControlAlignBottom = 8,
    htmlControlAlignMiddle = 9,
    htmlControlAlignTop = 10,
    htmlControlAlign_Max = 0x7fffffff
};

typedef enum _htmlDesignMode {
    htmlDesignModeInherit = -2,
    htmlDesignModeOn = -1,
    htmlDesignModeOff = 0,
    htmlDesignMode_Max = 0x7fffffff
};

typedef enum _htmlDir {
    htmlDirNotSet = 0,
    htmlDirLeftToRight = 1,
    htmlDirRightToLeft = 2,
    htmlDir_Max = 0x7fffffff
};

typedef enum _htmlDirection {
    htmlDirectionForward = 0x1869f,
    htmlDirectionBackward = -99999,
    htmlDirection_Max = 0x7fffffff
};

typedef enum _htmlDraggable {
    htmlDraggableAuto = 0,
    htmlDraggableTrue = 1,
    htmlDraggableFalse = 2,
    htmlDraggable_Max = 0x7fffffff
};

typedef enum _htmlDropEffect {
    htmlDropEffectCopy = 0,
    htmlDropEffectLink = 1,
    htmlDropEffectMove = 2,
    htmlDropEffectNone = 3,
    htmlDropEffect_Max = 0x7fffffff
};

typedef enum _htmlEditable {
    htmlEditableInherit = 0,
    htmlEditableTrue = 1,
    htmlEditableFalse = 2,
    htmlEditable_Max = 0x7fffffff
};

typedef enum _htmlEffectAllowed {
    htmlEffectAllowedCopy = 0,
    htmlEffectAllowedLink = 1,
    htmlEffectAllowedMove = 2,
    htmlEffectAllowedCopyLink = 3,
    htmlEffectAllowedCopyMove = 4,
    htmlEffectAllowedLinkMove = 5,
    htmlEffectAllowedAll = 6,
    htmlEffectAllowedNone = 7,
    htmlEffectAllowedUninitialized = 8,
    htmlEffectAllowed_Max = 0x7fffffff
};

typedef enum _htmlEncoding {
    htmlEncodingURL = 0,
    htmlEncodingMultipart = 1,
    htmlEncodingText = 2,
    htmlEncoding_Max = 0x7fffffff
};

typedef enum _htmlEndPoints {
    htmlEndPointsStartToStart = 1,
    htmlEndPointsStartToEnd = 2,
    htmlEndPointsEndToStart = 3,
    htmlEndPointsEndToEnd = 4,
    htmlEndPoints_Max = 0x7fffffff
};

typedef enum _htmlFrame {
    htmlFrameNotSet = 0,
    htmlFramevoid = 1,
    htmlFrameabove = 2,
    htmlFramebelow = 3,
    htmlFramehsides = 4,
    htmlFramelhs = 5,
    htmlFramerhs = 6,
    htmlFramevsides = 7,
    htmlFramebox = 8,
    htmlFrameborder = 9,
    htmlFrame_Max = 0x7fffffff
};

typedef enum _htmlGlyphMode {
    htmlGlyphModeNone = 0,
    htmlGlyphModeBegin = 1,
    htmlGlyphModeEnd = 2,
    htmlGlyphModeBoth = 3,
    htmlGlyphMode_Max = 0x7fffffff
};

typedef enum _htmlInput {
    htmlInputNotSet = 0,
    htmlInputButton = 1,
    htmlInputCheckbox = 2,
    htmlInputFile = 3,
    htmlInputHidden = 4,
    htmlInputImage = 5,
    htmlInputPassword = 6,
    htmlInputRadio = 7,
    htmlInputReset = 8,
    htmlInputSelectOne = 9,
    htmlInputSelectMultiple = 10,
    htmlInputSubmit = 11,
    htmlInputText = 12,
    htmlInputTextarea = 13,
    htmlInputRichtext = 14,
    htmlInputRange = 15,
    htmlInputUrl = 16,
    htmlInputEmail = 17,
    htmlInputNumber = 18,
    htmlInputTel = 19,
    htmlInputSearch = 20,
    htmlInput_Max = 0x7fffffff
};

typedef enum _htmlListType {
    htmlListTypeNotSet = 0,
    htmlListTypeLargeAlpha = 1,
    htmlListTypeSmallAlpha = 2,
    htmlListTypeLargeRoman = 3,
    htmlListTypeSmallRoman = 4,
    htmlListTypeNumbers = 5,
    htmlListTypeDisc = 6,
    htmlListTypeCircle = 7,
    htmlListTypeSquare = 8,
    htmlListType_Max = 0x7fffffff
};

typedef enum _htmlLoop {
    htmlLoopLoopInfinite = -1,
    htmlLoop_Max = 0x7fffffff
};

typedef enum _htmlMarqueeBehavior {
    htmlMarqueeBehaviorscroll = 1,
    htmlMarqueeBehaviorslide = 2,
    htmlMarqueeBehavioralternate = 3,
    htmlMarqueeBehavior_Max = 0x7fffffff
};

typedef enum _htmlMarqueeDirection {
    htmlMarqueeDirectionleft = 1,
    htmlMarqueeDirectionright = 3,
    htmlMarqueeDirectionup = 5,
    htmlMarqueeDirectiondown = 7,
    htmlMarqueeDirection_Max = 0x7fffffff
};

typedef enum _htmlMediaErr {
    htmlMediaErrAborted = 0,
    htmlMediaErrNetwork = 1,
    htmlMediaErrDecode = 2,
    htmlMediaErrSrcNotSupported = 3,
    htmlMediaErr_Max = 0x7fffffff
};

typedef enum _htmlMediaNetworkState {
    htmlMediaNetworkStateEmpty = 0,
    htmlMediaNetworkStateIdle = 1,
    htmlMediaNetworkStateLoading = 2,
    htmlMediaNetworkStateNoSource = 3,
    htmlMediaNetworkState_Max = 0x7fffffff
};

typedef enum _htmlMediaReadyState {
    htmlMediaReadyStateHaveNothing = 0,
    htmlMediaReadyStateHaveMetadata = 1,
    htmlMediaReadyStateHaveCurrentData = 2,
    htmlMediaReadyStateHaveFutureData = 3,
    htmlMediaReadyStateHaveEnoughData = 4,
    htmlMediaReadyState_Max = 0x7fffffff
};

typedef enum _htmlMethod {
    htmlMethodNotSet = 0,
    htmlMethodGet = 1,
    htmlMethodPost = 2,
    htmlMethod_Max = 0x7fffffff
};

typedef enum _htmlPersistState {
    htmlPersistStateNormal = 0,
    htmlPersistStateFavorite = 1,
    htmlPersistStateHistory = 2,
    htmlPersistStateSnapshot = 3,
    htmlPersistStateUserData = 4,
    htmlPersistState_Max = 0x7fffffff
};

typedef enum _htmlReadyState {
    htmlReadyStateuninitialized = 0,
    htmlReadyStateloading = 1,
    htmlReadyStateloaded = 2,
    htmlReadyStateinteractive = 3,
    htmlReadyStatecomplete = 4,
    htmlReadyState_Max = 0x7fffffff
};

typedef enum _htmlRules {
    htmlRulesNotSet = 0,
    htmlRulesnone = 1,
    htmlRulesgroups = 2,
    htmlRulesrows = 3,
    htmlRulescols = 4,
    htmlRulesall = 5,
    htmlRules_Max = 0x7fffffff
};

typedef enum _htmlSelectExFlag {
    htmlSelectExFlagNone = 0,
    htmlSelectExFlagHideSelectionInDesign = 1,
    htmlSelectExFlag_Max = 0x7fffffff
};

typedef enum _htmlSelectType {
    htmlSelectTypeSelectOne = 1,
    htmlSelectTypeSelectMultiple = 2,
    htmlSelectType_Max = 0x7fffffff
};

typedef enum _htmlSelection {
    htmlSelectionNone = 0,
    htmlSelectionText = 1,
    htmlSelectionControl = 2,
    htmlSelectionTable = 3,
    htmlSelection_Max = 0x7fffffff
};

typedef enum _htmlSpellCheck {
    htmlSpellCheckNotSet = 0,
    htmlSpellCheckTrue = 1,
    htmlSpellCheckFalse = 2,
    htmlSpellCheckDefault = 3,
    htmlSpellCheck_Max = 0x7fffffff
};

typedef enum _htmlStart {
    htmlStartfileopen = 0,
    htmlStartmouseover = 1,
    htmlStart_Max = 0x7fffffff
};

typedef enum _htmlTabIndex {
    htmlTabIndexNotSet = -32768,
    htmlTabIndex_Max = 0x7fffffff
};

typedef enum _htmlUnit {
    htmlUnitCharacter = 1,
    htmlUnitWord = 2,
    htmlUnitSentence = 3,
    htmlUnitTextEdit = 6,
    htmlUnit_Max = 0x7fffffff
};

typedef enum _htmlWrap {
    htmlWrapOff = 1,
    htmlWrapSoft = 2,
    htmlWrapHard = 3,
    htmlWrap_Max = 0x7fffffff
};

typedef enum _htmlZOrder {
    htmlZOrderFront = 0,
    htmlZOrderBack = 1,
    htmlZOrder_Max = 0x7fffffff
};

typedef enum _lengthAdjust {
    LENGTHADJUST_UNKNOWN = 0,
    LENGTHADJUST_SPACING = 1,
    LENGTHADJUST_SPACINGANDGLYPHS = 2,
    lengthAdjust_Max = 0x7fffffff
};

typedef enum _mediaType {
    mediaTypeNotSet = 0,
    mediaTypeAll = 511,
    mediaTypeAural = 1,
    mediaTypeBraille = 2,
    mediaTypeEmbossed = 4,
    mediaTypeHandheld = 8,
    mediaTypePrint = 16,
    mediaTypeProjection = 32,
    mediaTypeScreen = 64,
    mediaTypeTty = 128,
    mediaTypeTv = 256,
    mediaType_Max = 0x7fffffff
};

typedef enum _sandboxAllow {
    sandboxAllowScripts = 0,
    sandboxAllowSameOrigin = 1,
    sandboxAllowTopNavigation = 2,
    sandboxAllowForms = 3,
    sandboxAllowPopups = 4,
    sandboxAllow_Max = 0x7fffffff
};

typedef enum _styleAccelerator {
    styleAcceleratorFalse = 0,
    styleAcceleratorTrue = 1,
    styleAccelerator_Max = 0x7fffffff
};

typedef enum _styleAlignContent {
    styleAlignContentFlexStart = 0,
    styleAlignContentFlexEnd = 1,
    styleAlignContentCenter = 2,
    styleAlignContentSpaceBetween = 3,
    styleAlignContentSpaceAround = 4,
    styleAlignContentStretch = 5,
    styleAlignContentNotSet = 6,
    styleAlignContent_Max = 0x7fffffff
};

typedef enum _styleAlignItems {
    styleAlignItemsFlexStart = 0,
    styleAlignItemsFlexEnd = 1,
    styleAlignItemsCenter = 2,
    styleAlignItemsBaseline = 3,
    styleAlignItemsStretch = 4,
    styleAlignItemsNotSet = 5,
    styleAlignItems_Max = 0x7fffffff
};

typedef enum _styleAlignSelf {
    styleAlignSelfFlexStart = 0,
    styleAlignSelfFlexEnd = 1,
    styleAlignSelfCenter = 2,
    styleAlignSelfBaseline = 3,
    styleAlignSelfStretch = 4,
    styleAlignSelfAuto = 5,
    styleAlignSelfNotSet = 6,
    styleAlignSelf_Max = 0x7fffffff
};

typedef enum _styleAlignmentBaseline {
    styleAlignmentBaselineNotSet = 0,
    styleAlignmentBaselineAfterEdge = 1,
    styleAlignmentBaselineAlphabetic = 2,
    styleAlignmentBaselineAuto = 3,
    styleAlignmentBaselineBaseline = 4,
    styleAlignmentBaselineBeforeEdge = 5,
    styleAlignmentBaselineCentral = 6,
    styleAlignmentBaselineHanging = 7,
    styleAlignmentBaselineMathematical = 8,
    styleAlignmentBaselineMiddle = 9,
    styleAlignmentBaselineTextAfterEdge = 10,
    styleAlignmentBaselineTextBeforeEdge = 11,
    styleAlignmentBaselineIdeographic = 12,
    styleAlignmentBaseline_Max = 0x7fffffff
};

typedef enum _styleAttrType {
    styleAttrTypeString = 0,
    styleAttrTypeColor = 1,
    styleAttrTypeUrl = 2,
    styleAttrTypeInteger = 3,
    styleAttrTypeNumber = 4,
    styleAttrTypeLength = 5,
    styleAttrTypePx = 6,
    styleAttrTypeEm = 7,
    styleAttrTypeEx = 8,
    styleAttrTypeIn = 9,
    styleAttrTypeCm = 10,
    styleAttrTypeMm = 11,
    styleAttrTypePt = 12,
    styleAttrTypePc = 13,
    styleAttrTypeRem = 14,
    styleAttrTypeCh = 15,
    styleAttrTypeVh = 16,
    styleAttrTypeVw = 17,
    styleAttrTypeVmin = 18,
    styleAttrTypePercentage = 19,
    styleAttrTypeAngle = 20,
    styleAttrTypeDeg = 21,
    styleAttrTypeRad = 22,
    styleAttrTypeGrad = 23,
    styleAttrTypeTime = 24,
    styleAttrTypeS = 25,
    styleAttrTypeMs = 26,
    styleAttrType_Max = 0x7fffffff
};

typedef enum _styleAuto {
    styleAutoAuto = 0,
    styleAuto_Max = 0x7fffffff
};

typedef enum _styleBackfaceVisibility {
    styleBackfaceVisibilityVisible = 0,
    styleBackfaceVisibilityHidden = 1,
    styleBackfaceVisibilityNotSet = 2,
    styleBackfaceVisibility_Max = 0x7fffffff
};

typedef enum _styleBackgroundAttachment {
    styleBackgroundAttachmentFixed = 0,
    styleBackgroundAttachmentScroll = 1,
    styleBackgroundAttachmentNotSet = 2,
    styleBackgroundAttachment_Max = 0x7fffffff
};

typedef enum _styleBackgroundAttachment3 {
    styleBackgroundAttachment3Fixed = 0,
    styleBackgroundAttachment3Scroll = 1,
    styleBackgroundAttachment3Local = 2,
    styleBackgroundAttachment3NotSet = 3,
    styleBackgroundAttachment3_Max = 0x7fffffff
};

typedef enum _styleBackgroundClip {
    styleBackgroundClipBorderBox = 0,
    styleBackgroundClipPaddingBox = 1,
    styleBackgroundClipContentBox = 2,
    styleBackgroundClipNotSet = 3,
    styleBackgroundClip_Max = 0x7fffffff
};

typedef enum _styleBackgroundOrigin {
    styleBackgroundOriginBorderBox = 0,
    styleBackgroundOriginPaddingBox = 1,
    styleBackgroundOriginContentBox = 2,
    styleBackgroundOriginNotSet = 3,
    styleBackgroundOrigin_Max = 0x7fffffff
};

typedef enum _styleBackgroundRepeat {
    styleBackgroundRepeatRepeat = 0,
    styleBackgroundRepeatRepeatX = 1,
    styleBackgroundRepeatRepeatY = 2,
    styleBackgroundRepeatNoRepeat = 3,
    styleBackgroundRepeatNotSet = 4,
    styleBackgroundRepeat_Max = 0x7fffffff
};

typedef enum _styleBaselineShift {
    styleBaselineShiftBaseline = 0,
    styleBaselineShiftSub = 1,
    styleBaselineShiftSuper = 2,
    styleBaselineShift_Max = 0x7fffffff
};

typedef enum _styleBidi {
    styleBidiNotSet = 0,
    styleBidiNormal = 1,
    styleBidiEmbed = 2,
    styleBidiOverride = 3,
    styleBidiInherit = 4,
    styleBidi_Max = 0x7fffffff
};

typedef enum _styleBlockProgression {
    styleBlockProgressionTb = 0,
    styleBlockProgressionRl = 1,
    styleBlockProgressionBt = 2,
    styleBlockProgressionLr = 3,
    styleBlockProgressionNotSet = 4,
    styleBlockProgression_Max = 0x7fffffff
};

typedef enum _styleBool {
    styleBoolFalse = 0,
    styleBoolTrue = 1,
    styleBool_Max = 0x7fffffff
};

typedef enum _styleBorderCollapse {
    styleBorderCollapseNotSet = 0,
    styleBorderCollapseSeparate = 1,
    styleBorderCollapseCollapse = 2,
    styleBorderCollapse_Max = 0x7fffffff
};

typedef enum _styleBorderImageRepeat {
    styleBorderImageRepeatStretch = 0,
    styleBorderImageRepeatRepeat = 1,
    styleBorderImageRepeatRound = 2,
    styleBorderImageRepeatSpace = 3,
    styleBorderImageRepeatNotSet = 4,
    styleBorderImageRepeat_Max = 0x7fffffff
};

typedef enum _styleBorderImageSliceFill {
    styleBorderImageSliceFillNotSet = 0,
    styleBorderImageSliceFillFill = 1,
    styleBorderImageSliceFill_Max = 0x7fffffff
};

typedef enum _styleBorderStyle {
    styleBorderStyleNotSet = 0,
    styleBorderStyleDotted = 1,
    styleBorderStyleDashed = 2,
    styleBorderStyleSolid = 3,
    styleBorderStyleDouble = 4,
    styleBorderStyleGroove = 5,
    styleBorderStyleRidge = 6,
    styleBorderStyleInset = 7,
    styleBorderStyleOutset = 8,
    styleBorderStyleWindowInset = 9,
    styleBorderStyleNone = 10,
    styleBorderStyleHidden = 11,
    styleBorderStyle_Max = 0x7fffffff
};

typedef enum _styleBorderWidth {
    styleBorderWidthThin = 0,
    styleBorderWidthMedium = 1,
    styleBorderWidthThick = 2,
    styleBorderWidth_Max = 0x7fffffff
};

typedef enum _styleBoxSizing {
    styleBoxSizingNotSet = 0,
    styleBoxSizingContentBox = 1,
    styleBoxSizingBorderBox = 2,
    styleBoxSizing_Max = 0x7fffffff
};

typedef enum _styleBreak {
    styleBreakNotSet = 0,
    styleBreakAuto = 1,
    styleBreakAlways = 2,
    styleBreakAvoid = 3,
    styleBreakLeft = 4,
    styleBreakRight = 5,
    styleBreakPage = 6,
    styleBreakColumn = 7,
    styleBreakAvoidPage = 8,
    styleBreakAvoidColumn = 9,
    styleBreak_Max = 0x7fffffff
};

typedef enum _styleBreakInside {
    styleBreakInsideNotSet = 0,
    styleBreakInsideAuto = 1,
    styleBreakInsideAvoid = 2,
    styleBreakInsideAvoidPage = 3,
    styleBreakInsideAvoidColumn = 4,
    styleBreakInside_Max = 0x7fffffff
};

typedef enum _styleCaptionSide {
    styleCaptionSideNotSet = 0,
    styleCaptionSideTop = 1,
    styleCaptionSideBottom = 2,
    styleCaptionSideLeft = 3,
    styleCaptionSideRight = 4,
    styleCaptionSide_Max = 0x7fffffff
};

typedef enum _styleClipRule {
    styleClipRuleNotSet = 0,
    styleClipRuleNonZero = 1,
    styleClipRuleEvenOdd = 2,
    styleClipRule_Max = 0x7fffffff
};

typedef enum _styleColorInterpolationFilters {
    styleColorInterpolationFiltersAuto = 0,
    styleColorInterpolationFiltersSRgb = 1,
    styleColorInterpolationFiltersLinearRgb = 2,
    styleColorInterpolationFiltersNotSet = 3,
    styleColorInterpolationFilters_Max = 0x7fffffff
};

typedef enum _styleColumnFill {
    styleColumnFillAuto = 0,
    styleColumnFillBalance = 1,
    styleColumnFillNotSet = 2,
    styleColumnFill_Max = 0x7fffffff
};

typedef enum _styleColumnSpan {
    styleColumnSpanNone = 0,
    styleColumnSpanAll = 1,
    styleColumnSpanOne = 2,
    styleColumnSpanNotSet = 3,
    styleColumnSpan_Max = 0x7fffffff
};

typedef enum _styleCursor {
    styleCursorAuto = 0,
    styleCursorCrosshair = 1,
    styleCursorDefault = 2,
    styleCursorHand = 3,
    styleCursorMove = 4,
    styleCursorE_resize = 5,
    styleCursorNe_resize = 6,
    styleCursorNw_resize = 7,
    styleCursorN_resize = 8,
    styleCursorSe_resize = 9,
    styleCursorSw_resize = 10,
    styleCursorS_resize = 11,
    styleCursorW_resize = 12,
    styleCursorText = 13,
    styleCursorWait = 14,
    styleCursorHelp = 15,
    styleCursorPointer = 16,
    styleCursorProgress = 17,
    styleCursorNot_allowed = 18,
    styleCursorNo_drop = 19,
    styleCursorVertical_text = 20,
    styleCursorall_scroll = 21,
    styleCursorcol_resize = 22,
    styleCursorrow_resize = 23,
    styleCursorNone = 24,
    styleCursorContext_menu = 25,
    styleCursorEw_resize = 26,
    styleCursorNs_resize = 27,
    styleCursorNesw_resize = 28,
    styleCursorNwse_resize = 29,
    styleCursorCell = 30,
    styleCursorCopy = 31,
    styleCursorAlias = 32,
    styleCursorcustom = 33,
    styleCursorNotSet = 34,
    styleCursor_Max = 0x7fffffff
};

typedef enum _styleDataRepeat {
    styleDataRepeatNone = 0,
    styleDataRepeatInner = 1,
    styleDataRepeat_Max = 0x7fffffff
};

typedef enum _styleDefaultTextSelection {
    styleDefaultTextSelectionFalse = 0,
    styleDefaultTextSelectionTrue = 1,
    styleDefaultTextSelection_Max = 0x7fffffff
};

typedef enum _styleDir {
    styleDirNotSet = 0,
    styleDirLeftToRight = 1,
    styleDirRightToLeft = 2,
    styleDirInherit = 3,
    styleDir_Max = 0x7fffffff
};

typedef enum _styleDisplay {
    styleDisplayNotSet = 0,
    styleDisplayBlock = 1,
    styleDisplayInline = 2,
    styleDisplayListItem = 3,
    styleDisplayNone = 4,
    styleDisplayTableHeaderGroup = 5,
    styleDisplayTableFooterGroup = 6,
    styleDisplayInlineBlock = 7,
    styleDisplayTable = 8,
    styleDisplayInlineTable = 9,
    styleDisplayTableRow = 10,
    styleDisplayTableRowGroup = 11,
    styleDisplayTableColumn = 12,
    styleDisplayTableColumnGroup = 13,
    styleDisplayTableCell = 14,
    styleDisplayTableCaption = 15,
    styleDisplayRunIn = 16,
    styleDisplayRuby = 17,
    styleDisplayRubyBase = 18,
    styleDisplayRubyText = 19,
    styleDisplayRubyBaseContainer = 20,
    styleDisplayRubyTextContainer = 21,
    styleDisplayMsFlexbox = 22,
    styleDisplayMsInlineFlexbox = 23,
    styleDisplayMsGrid = 24,
    styleDisplayMsInlineGrid = 25,
    styleDisplayFlex = 26,
    styleDisplayInlineFlex = 27,
    styleDisplayWebkitBox = 28,
    styleDisplayWebkitInlineBox = 29,
    styleDisplay_Max = 0x7fffffff
};

typedef enum _styleDominantBaseline {
    styleDominantBaselineNotSet = 0,
    styleDominantBaselineAlphabetic = 1,
    styleDominantBaselineAuto = 2,
    styleDominantBaselineCentral = 3,
    styleDominantBaselineHanging = 4,
    styleDominantBaselineIdeographic = 5,
    styleDominantBaselineMathematical = 6,
    styleDominantBaselineMiddle = 7,
    styleDominantBaselineNoChange = 8,
    styleDominantBaselineResetSize = 9,
    styleDominantBaselineTextAfterEdge = 10,
    styleDominantBaselineTextBeforeEdge = 11,
    styleDominantBaselineUseScript = 12,
    styleDominantBaseline_Max = 0x7fffffff
};

typedef enum _styleEmptyCells {
    styleEmptyCellsNotSet = 0,
    styleEmptyCellsShow = 1,
    styleEmptyCellsHide = 2,
    styleEmptyCells_Max = 0x7fffffff
};

typedef enum _styleEnableBackground {
    styleEnableBackgroundNotSet = 0,
    styleEnableBackgroundAccumulate = 1,
    styleEnableBackgroundNew = 2,
    styleEnableBackgroundInherit = 3,
    styleEnableBackground_Max = 0x7fffffff
};

typedef enum _styleFillRule {
    styleFillRuleNotSet = 0,
    styleFillRuleNonZero = 1,
    styleFillRuleEvenOdd = 2,
    styleFillRule_Max = 0x7fffffff
};

typedef enum _styleFlex {
    styleFlexNone = 0,
    styleFlexNotSet = 1,
    styleFlex_Max = 0x7fffffff
};

typedef enum _styleFlexBasis {
    styleFlexBasisAuto = 0,
    styleFlexBasisNotSet = 1,
    styleFlexBasis_Max = 0x7fffffff
};

typedef enum _styleFlexDirection {
    styleFlexDirectionRow = 0,
    styleFlexDirectionRowReverse = 1,
    styleFlexDirectionColumn = 2,
    styleFlexDirectionColumnReverse = 3,
    styleFlexDirectionNotSet = 4,
    styleFlexDirection_Max = 0x7fffffff
};

typedef enum _styleFlexWrap {
    styleFlexWrapNowrap = 0,
    styleFlexWrapWrap = 1,
    styleFlexWrapWrapReverse = 2,
    styleFlexWrapNotSet = 3,
    styleFlexWrap_Max = 0x7fffffff
};

typedef enum _styleFontSize {
    styleFontSizeXXSmall = 0,
    styleFontSizeXSmall = 1,
    styleFontSizeSmall = 2,
    styleFontSizeMedium = 3,
    styleFontSizeLarge = 4,
    styleFontSizeXLarge = 5,
    styleFontSizeXXLarge = 6,
    styleFontSizeSmaller = 7,
    styleFontSizeLarger = 8,
    styleFontSize_Max = 0x7fffffff
};

typedef enum _styleFontStretch {
    styleFontStretchNotSet = 0,
    styleFontStretchWider = 1,
    styleFontStretchNarrower = 2,
    styleFontStretchUltraCondensed = 3,
    styleFontStretchExtraCondensed = 4,
    styleFontStretchCondensed = 5,
    styleFontStretchSemiCondensed = 6,
    styleFontStretchNormal = 7,
    styleFontStretchSemiExpanded = 8,
    styleFontStretchExpanded = 9,
    styleFontStretchExtraExpanded = 10,
    styleFontStretchUltraExpanded = 11,
    styleFontStretch_Max = 0x7fffffff
};

typedef enum _styleFontStyle {
    styleFontStyleNotSet = 0,
    styleFontStyleItalic = 1,
    styleFontStyleOblique = 2,
    styleFontStyleNormal = 3,
    styleFontStyle_Max = 0x7fffffff
};

typedef enum _styleFontVariant {
    styleFontVariantNotSet = 0,
    styleFontVariantSmallCaps = 1,
    styleFontVariantNormal = 2,
    styleFontVariant_Max = 0x7fffffff
};

typedef enum _styleFontWeight {
    styleFontWeightNotSet = 0,
    styleFontWeight100 = 1,
    styleFontWeight200 = 2,
    styleFontWeight300 = 3,
    styleFontWeight400 = 4,
    styleFontWeight500 = 5,
    styleFontWeight600 = 6,
    styleFontWeight700 = 7,
    styleFontWeight800 = 8,
    styleFontWeight900 = 9,
    styleFontWeightNormal = 10,
    styleFontWeightBold = 11,
    styleFontWeightBolder = 12,
    styleFontWeightLighter = 13,
    styleFontWeight_Max = 0x7fffffff
};

typedef enum _styleGridColumn {
    styleGridColumnNotSet = 0,
    styleGridColumn_Max = 0x7fffffff
};

typedef enum _styleGridColumnAlign {
    styleGridColumnAlignCenter = 0,
    styleGridColumnAlignEnd = 1,
    styleGridColumnAlignStart = 2,
    styleGridColumnAlignStretch = 3,
    styleGridColumnAlignNotSet = 4,
    styleGridColumnAlign_Max = 0x7fffffff
};

typedef enum _styleGridColumnSpan {
    styleGridColumnSpanNotSet = 0,
    styleGridColumnSpan_Max = 0x7fffffff
};

typedef enum _styleGridRow {
    styleGridRowNotSet = 0,
    styleGridRow_Max = 0x7fffffff
};

typedef enum _styleGridRowAlign {
    styleGridRowAlignCenter = 0,
    styleGridRowAlignEnd = 1,
    styleGridRowAlignStart = 2,
    styleGridRowAlignStretch = 3,
    styleGridRowAlignNotSet = 4,
    styleGridRowAlign_Max = 0x7fffffff
};

typedef enum _styleGridRowSpan {
    styleGridRowSpanNotSet = 0,
    styleGridRowSpan_Max = 0x7fffffff
};

typedef enum _styleHyphenateLimitLines {
    styleHyphenateLimitLinesNoLimit = 0,
    styleHyphenateLimitLines_Max = 0x7fffffff
};

typedef enum _styleHyphens {
    styleHyphensNone = 0,
    styleHyphensManual = 1,
    styleHyphensAuto = 2,
    styleHyphensNotSet = 3,
    styleHyphens_Max = 0x7fffffff
};

typedef enum _styleImeMode {
    styleImeModeAuto = 0,
    styleImeModeActive = 1,
    styleImeModeInactive = 2,
    styleImeModeDisabled = 3,
    styleImeModeNotSet = 4,
    styleImeMode_Max = 0x7fffffff
};

typedef enum _styleInitialColor {
    styleInitialColorNoInitial = 0,
    styleInitialColorColorProperty = 1,
    styleInitialColorTransparent = 2,
    styleInitialColorInvert = 3,
    styleInitialColor_Max = 0x7fffffff
};

typedef enum _styleInitialString {
    styleInitialStringNoInitial = 0,
    styleInitialStringNone = 1,
    styleInitialStringAuto = 2,
    styleInitialStringNormal = 3,
    styleInitialString_Max = 0x7fffffff
};

typedef enum _styleInterpolation {
    styleInterpolationNotSet = 0,
    styleInterpolationNN = 1,
    styleInterpolationBCH = 2,
    styleInterpolation_Max = 0x7fffffff
};

typedef enum _styleJustifyContent {
    styleJustifyContentFlexStart = 0,
    styleJustifyContentFlexEnd = 1,
    styleJustifyContentCenter = 2,
    styleJustifyContentSpaceBetween = 3,
    styleJustifyContentSpaceAround = 4,
    styleJustifyContentNotSet = 5,
    styleJustifyContent_Max = 0x7fffffff
};

typedef enum _styleLayoutFlow {
    styleLayoutFlowHorizontal = 0,
    styleLayoutFlowVerticalIdeographic = 1,
    styleLayoutFlowNotSet = 2,
    styleLayoutFlow_Max = 0x7fffffff
};

typedef enum _styleLayoutGridChar {
    styleLayoutGridCharNotSet = 0,
    styleLayoutGridCharAuto = 1,
    styleLayoutGridCharNone = 2,
    styleLayoutGridChar_Max = 0x7fffffff
};

typedef enum _styleLayoutGridLine {
    styleLayoutGridLineNotSet = 0,
    styleLayoutGridLineAuto = 1,
    styleLayoutGridLineNone = 2,
    styleLayoutGridLine_Max = 0x7fffffff
};

typedef enum _styleLayoutGridMode {
    styleLayoutGridModeNotSet = 0,
    styleLayoutGridModeChar = 1,
    styleLayoutGridModeLine = 2,
    styleLayoutGridModeBoth = 3,
    styleLayoutGridModeNone = 4,
    styleLayoutGridMode_Max = 0x7fffffff
};

typedef enum _styleLayoutGridType {
    styleLayoutGridTypeNotSet = 0,
    styleLayoutGridTypeLoose = 1,
    styleLayoutGridTypeStrict = 2,
    styleLayoutGridTypeFixed = 3,
    styleLayoutGridType_Max = 0x7fffffff
};

typedef enum _styleLineBreak {
    styleLineBreakNotSet = 0,
    styleLineBreakNormal = 1,
    styleLineBreakStrict = 2,
    styleLineBreak_Max = 0x7fffffff
};

typedef enum _styleListStylePosition {
    styleListStylePositionNotSet = 0,
    styleListStylePositionInside = 1,
    styleListStylePositionOutSide = 2,
    styleListStylePosition_Max = 0x7fffffff
};

typedef enum _styleListStyleType {
    styleListStyleTypeNotSet = 0,
    styleListStyleTypeDisc = 1,
    styleListStyleTypeCircle = 2,
    styleListStyleTypeSquare = 3,
    styleListStyleTypeDecimal = 4,
    styleListStyleTypeLowerRoman = 5,
    styleListStyleTypeUpperRoman = 6,
    styleListStyleTypeLowerAlpha = 7,
    styleListStyleTypeUpperAlpha = 8,
    styleListStyleTypeNone = 9,
    styleListStyleTypeDecimalLeadingZero = 10,
    styleListStyleTypeGeorgian = 11,
    styleListStyleTypeArmenian = 12,
    styleListStyleTypeUpperLatin = 13,
    styleListStyleTypeLowerLatin = 14,
    styleListStyleTypeUpperGreek = 15,
    styleListStyleTypeLowerGreek = 16,
    styleListStyleType_Max = 0x7fffffff
};

typedef enum _styleMsAnimationDirection {
    styleMsAnimationDirectionNormal = 0,
    styleMsAnimationDirectionAlternate = 1,
    styleMsAnimationDirectionReverse = 2,
    styleMsAnimationDirectionAlternateReverse = 3,
    styleMsAnimationDirectionNotSet = 4,
    styleMsAnimationDirection_Max = 0x7fffffff
};

typedef enum _styleMsAnimationFillMode {
    styleMsAnimationFillModeNone = 0,
    styleMsAnimationFillModeForwards = 1,
    styleMsAnimationFillModeBackwards = 2,
    styleMsAnimationFillModeBoth = 3,
    styleMsAnimationFillModeNotSet = 4,
    styleMsAnimationFillMode_Max = 0x7fffffff
};

typedef enum _styleMsAnimationPlayState {
    styleMsAnimationPlayStateRunning = 0,
    styleMsAnimationPlayStatePaused = 1,
    styleMsAnimationPlayStateNotSet = 2,
    styleMsAnimationPlayState_Max = 0x7fffffff
};

typedef enum _styleMsContentZoomChaining {
    styleMsContentZoomChainingNotSet = 0,
    styleMsContentZoomChainingNone = 1,
    styleMsContentZoomChainingChained = 2,
    styleMsContentZoomChaining_Max = 0x7fffffff
};

typedef enum _styleMsContentZoomSnapType {
    styleMsContentZoomSnapTypeNotSet = 0,
    styleMsContentZoomSnapTypeNone = 1,
    styleMsContentZoomSnapTypeMandatory = 2,
    styleMsContentZoomSnapTypeProximity = 3,
    styleMsContentZoomSnapType_Max = 0x7fffffff
};

typedef enum _styleMsContentZooming {
    styleMsContentZoomingNotSet = 0,
    styleMsContentZoomingNone = 1,
    styleMsContentZoomingZoom = 2,
    styleMsContentZooming_Max = 0x7fffffff
};

typedef enum _styleMsFlexAlign {
    styleMsFlexAlignStart = 0,
    styleMsFlexAlignEnd = 1,
    styleMsFlexAlignCenter = 2,
    styleMsFlexAlignBaseline = 3,
    styleMsFlexAlignStretch = 4,
    styleMsFlexAlignNotSet = 5,
    styleMsFlexAlign_Max = 0x7fffffff
};

typedef enum _styleMsFlexItemAlign {
    styleMsFlexItemAlignStart = 0,
    styleMsFlexItemAlignEnd = 1,
    styleMsFlexItemAlignCenter = 2,
    styleMsFlexItemAlignBaseline = 3,
    styleMsFlexItemAlignStretch = 4,
    styleMsFlexItemAlignAuto = 5,
    styleMsFlexItemAlignNotSet = 6,
    styleMsFlexItemAlign_Max = 0x7fffffff
};

typedef enum _styleMsFlexLinePack {
    styleMsFlexLinePackStart = 0,
    styleMsFlexLinePackEnd = 1,
    styleMsFlexLinePackCenter = 2,
    styleMsFlexLinePackJustify = 3,
    styleMsFlexLinePackDistribute = 4,
    styleMsFlexLinePackStretch = 5,
    styleMsFlexLinePackNotSet = 6,
    styleMsFlexLinePack_Max = 0x7fffffff
};

typedef enum _styleMsFlexPack {
    styleMsFlexPackStart = 0,
    styleMsFlexPackEnd = 1,
    styleMsFlexPackCenter = 2,
    styleMsFlexPackJustify = 3,
    styleMsFlexPackDistribute = 4,
    styleMsFlexPackNotSet = 5,
    styleMsFlexPack_Max = 0x7fffffff
};

typedef enum _styleMsHighContrastAdjust {
    styleMsHighContrastAdjustNotSet = 0,
    styleMsHighContrastAdjustAuto = 1,
    styleMsHighContrastAdjustNone = 2,
    styleMsHighContrastAdjust_Max = 0x7fffffff
};

typedef enum _styleMsImeAlign {
    styleMsImeAlignAuto = 0,
    styleMsImeAlignAfter = 1,
    styleMsImeAlignNotSet = 2,
    styleMsImeAlign_Max = 0x7fffffff
};

typedef enum _styleMsOverflowStyle {
    styleMsOverflowStyleNotSet = 0,
    styleMsOverflowStyleAuto = 1,
    styleMsOverflowStyleNone = 2,
    styleMsOverflowStyleScrollbar = 3,
    styleMsOverflowStyleMsAutoHidingScrollbar = 4,
    styleMsOverflowStyle_Max = 0x7fffffff
};

typedef enum _styleMsScrollChaining {
    styleMsScrollChainingNotSet = 0,
    styleMsScrollChainingNone = 1,
    styleMsScrollChainingChained = 2,
    styleMsScrollChaining_Max = 0x7fffffff
};

typedef enum _styleMsScrollRails {
    styleMsScrollRailsNotSet = 0,
    styleMsScrollRailsNone = 1,
    styleMsScrollRailsRailed = 2,
    styleMsScrollRails_Max = 0x7fffffff
};

typedef enum _styleMsScrollSnapType {
    styleMsScrollSnapTypeNotSet = 0,
    styleMsScrollSnapTypeNone = 1,
    styleMsScrollSnapTypeMandatory = 2,
    styleMsScrollSnapTypeProximity = 3,
    styleMsScrollSnapType_Max = 0x7fffffff
};

typedef enum _styleMsScrollTranslation {
    styleMsScrollTranslationNotSet = 0,
    styleMsScrollTranslationNone = 1,
    styleMsScrollTranslationVtoH = 2,
    styleMsScrollTranslation_Max = 0x7fffffff
};

typedef enum _styleMsTextCombineHorizontal {
    styleMsTextCombineHorizontalNone = 0,
    styleMsTextCombineHorizontalAll = 1,
    styleMsTextCombineHorizontalDigits = 2,
    styleMsTextCombineHorizontalNotSet = 3,
    styleMsTextCombineHorizontal_Max = 0x7fffffff
};

typedef enum _styleMsTouchAction {
    styleMsTouchActionNotSet = -1,
    styleMsTouchActionNone = 0,
    styleMsTouchActionAuto = 1,
    styleMsTouchActionManipulation = 2,
    styleMsTouchActionDoubleTapZoom = 4,
    styleMsTouchActionPanX = 8,
    styleMsTouchActionPanY = 16,
    styleMsTouchActionPinchZoom = 32,
    styleMsTouchActionCrossSlideX = 64,
    styleMsTouchActionCrossSlideY = 128,
    styleMsTouchAction_Max = 0x7fffffff
};

typedef enum _styleMsTouchSelect {
    styleMsTouchSelectGrippers = 0,
    styleMsTouchSelectNone = 1,
    styleMsTouchSelectNotSet = 2,
    styleMsTouchSelect_Max = 0x7fffffff
};

typedef enum _styleMsUserSelect {
    styleMsUserSelectAuto = 0,
    styleMsUserSelectText = 1,
    styleMsUserSelectElement = 2,
    styleMsUserSelectNone = 3,
    styleMsUserSelectNotSet = 4,
    styleMsUserSelect_Max = 0x7fffffff
};

typedef enum _styleNone {
    styleNoneNone = 0,
    styleNone_Max = 0x7fffffff
};

typedef enum _styleNormal {
    styleNormalNormal = 0,
    styleNormal_Max = 0x7fffffff
};

typedef enum _styleOutlineStyle {
    styleOutlineStyleNotSet = 0,
    styleOutlineStyleDotted = 1,
    styleOutlineStyleDashed = 2,
    styleOutlineStyleSolid = 3,
    styleOutlineStyleDouble = 4,
    styleOutlineStyleGroove = 5,
    styleOutlineStyleRidge = 6,
    styleOutlineStyleInset = 7,
    styleOutlineStyleOutset = 8,
    styleOutlineStyleWindowInset = 9,
    styleOutlineStyleNone = 10,
    styleOutlineStyle_Max = 0x7fffffff
};

typedef enum _styleOverflow {
    styleOverflowNotSet = 0,
    styleOverflowAuto = 1,
    styleOverflowHidden = 2,
    styleOverflowVisible = 3,
    styleOverflowScroll = 4,
    styleOverflow_Max = 0x7fffffff
};

typedef enum _stylePageBreak {
    stylePageBreakNotSet = 0,
    stylePageBreakAuto = 1,
    stylePageBreakAlways = 2,
    stylePageBreakLeft = 3,
    stylePageBreakRight = 4,
    stylePageBreakAvoid = 5,
    stylePageBreak_Max = 0x7fffffff
};

typedef enum _stylePageBreakInside {
    stylePageBreakInsideNotSet = 0,
    stylePageBreakInsideAuto = 1,
    stylePageBreakInsideAvoid = 2,
    stylePageBreakInside_Max = 0x7fffffff
};

typedef enum _stylePerspectiveOriginX {
    stylePerspectiveOriginXNotSet = 0,
    stylePerspectiveOriginXLeft = 1,
    stylePerspectiveOriginXCenter = 2,
    stylePerspectiveOriginXRight = 3,
    stylePerspectiveOriginX_Max = 0x7fffffff
};

typedef enum _stylePerspectiveOriginY {
    stylePerspectiveOriginYNotSet = 0,
    stylePerspectiveOriginYTop = 1,
    stylePerspectiveOriginYCenter = 2,
    stylePerspectiveOriginYBottom = 3,
    stylePerspectiveOriginY_Max = 0x7fffffff
};

typedef enum _stylePointerEvents {
    stylePointerEventsNotSet = 0,
    stylePointerEventsVisiblePainted = 1,
    stylePointerEventsVisibleFill = 2,
    stylePointerEventsVisibleStroke = 3,
    stylePointerEventsVisible = 4,
    stylePointerEventsPainted = 5,
    stylePointerEventsFill = 6,
    stylePointerEventsStroke = 7,
    stylePointerEventsAll = 8,
    stylePointerEventsNone = 9,
    stylePointerEventsInitial = 10,
    stylePointerEventsAuto = 11,
    stylePointerEvents_Max = 0x7fffffff
};

typedef enum _stylePosition {
    stylePositionNotSet = 0,
    stylePositionstatic = 1,
    stylePositionrelative = 2,
    stylePositionabsolute = 3,
    stylePositionfixed = 4,
    stylePositionMsPage = 5,
    stylePositionMsDeviceFixed = 6,
    stylePosition_Max = 0x7fffffff
};

typedef enum _styleRubyAlign {
    styleRubyAlignNotSet = 0,
    styleRubyAlignAuto = 1,
    styleRubyAlignLeft = 2,
    styleRubyAlignCenter = 3,
    styleRubyAlignRight = 4,
    styleRubyAlignDistributeLetter = 5,
    styleRubyAlignDistributeSpace = 6,
    styleRubyAlignLineEdge = 7,
    styleRubyAlign_Max = 0x7fffffff
};

typedef enum _styleRubyOverhang {
    styleRubyOverhangNotSet = 0,
    styleRubyOverhangAuto = 1,
    styleRubyOverhangWhitespace = 2,
    styleRubyOverhangNone = 3,
    styleRubyOverhang_Max = 0x7fffffff
};

typedef enum _styleRubyPosition {
    styleRubyPositionNotSet = 0,
    styleRubyPositionAbove = 1,
    styleRubyPositionInline = 2,
    styleRubyPosition_Max = 0x7fffffff
};

typedef enum _styleStrokeLinecap {
    styleStrokeLinecapNotSet = 0,
    styleStrokeLinecapButt = 1,
    styleStrokeLinecapRound = 2,
    styleStrokeLinecapSquare = 3,
    styleStrokeLinecap_Max = 0x7fffffff
};

typedef enum _styleStrokeLinejoin {
    styleStrokeLinejoinNotSet = 0,
    styleStrokeLinejoinMiter = 1,
    styleStrokeLinejoinRound = 2,
    styleStrokeLinejoinBevel = 3,
    styleStrokeLinejoin_Max = 0x7fffffff
};

typedef enum _styleStyleFloat {
    styleStyleFloatNotSet = 0,
    styleStyleFloatLeft = 1,
    styleStyleFloatRight = 2,
    styleStyleFloatNone = 3,
    styleStyleFloat_Max = 0x7fffffff
};

typedef enum _styleTableLayout {
    styleTableLayoutNotSet = 0,
    styleTableLayoutAuto = 1,
    styleTableLayoutFixed = 2,
    styleTableLayout_Max = 0x7fffffff
};

typedef enum _styleTextAlignLast {
    styleTextAlignLastNotSet = 0,
    styleTextAlignLastLeft = 1,
    styleTextAlignLastCenter = 2,
    styleTextAlignLastRight = 3,
    styleTextAlignLastJustify = 4,
    styleTextAlignLastAuto = 5,
    styleTextAlignLast_Max = 0x7fffffff
};

typedef enum _styleTextAnchor {
    styleTextAnchorNotSet = 0,
    styleTextAnchorStart = 1,
    styleTextAnchorMiddle = 2,
    styleTextAnchorEnd = 3,
    styleTextAnchor_Max = 0x7fffffff
};

typedef enum _styleTextDecoration {
    styleTextDecorationNone = 0,
    styleTextDecorationUnderline = 1,
    styleTextDecorationOverline = 2,
    styleTextDecorationLineThrough = 3,
    styleTextDecorationBlink = 4,
    styleTextDecoration_Max = 0x7fffffff
};

typedef enum _styleTextEffect {
    styleTextEffectNone = 0,
    styleTextEffectEmboss = 1,
    styleTextEffectEngrave = 2,
    styleTextEffectOutline = 3,
    styleTextEffect_Max = 0x7fffffff
};

typedef enum _styleTextJustify {
    styleTextJustifyNotSet = 0,
    styleTextJustifyInterWord = 1,
    styleTextJustifyNewspaper = 2,
    styleTextJustifyDistribute = 3,
    styleTextJustifyDistributeAllLines = 4,
    styleTextJustifyInterIdeograph = 5,
    styleTextJustifyInterCluster = 6,
    styleTextJustifyKashida = 7,
    styleTextJustifyAuto = 8,
    styleTextJustify_Max = 0x7fffffff
};

typedef enum _styleTextJustifyTrim {
    styleTextJustifyTrimNotSet = 0,
    styleTextJustifyTrimNone = 1,
    styleTextJustifyTrimPunctuation = 2,
    styleTextJustifyTrimPunctAndKana = 3,
    styleTextJustifyTrim_Max = 0x7fffffff
};

typedef enum _styleTextLineThroughStyle {
    styleTextLineThroughStyleUndefined = 0,
    styleTextLineThroughStyleSingle = 1,
    styleTextLineThroughStyleDouble = 2,
    styleTextLineThroughStyle_Max = 0x7fffffff
};

typedef enum _styleTextOverflow {
    styleTextOverflowClip = 0,
    styleTextOverflowEllipsis = 1,
    styleTextOverflowNotSet = 2,
    styleTextOverflow_Max = 0x7fffffff
};

typedef enum _styleTextSizeAdjust {
    styleTextSizeAdjustNone = 0,
    styleTextSizeAdjustAuto = 1,
    styleTextSizeAdjust_Max = 0x7fffffff
};

typedef enum _styleTextTransform {
    styleTextTransformNotSet = 0,
    styleTextTransformCapitalize = 1,
    styleTextTransformLowercase = 2,
    styleTextTransformUppercase = 3,
    styleTextTransformNone = 4,
    styleTextTransform_Max = 0x7fffffff
};

typedef enum _styleTextUnderlinePosition {
    styleTextUnderlinePositionBelow = 0,
    styleTextUnderlinePositionAbove = 1,
    styleTextUnderlinePositionAuto = 2,
    styleTextUnderlinePositionNotSet = 3,
    styleTextUnderlinePosition_Max = 0x7fffffff
};

typedef enum _styleTextUnderlineStyle {
    styleTextUnderlineStyleUndefined = 0,
    styleTextUnderlineStyleSingle = 1,
    styleTextUnderlineStyleDouble = 2,
    styleTextUnderlineStyleWords = 3,
    styleTextUnderlineStyleDotted = 4,
    styleTextUnderlineStyleThick = 5,
    styleTextUnderlineStyleDash = 6,
    styleTextUnderlineStyleDotDash = 7,
    styleTextUnderlineStyleDotDotDash = 8,
    styleTextUnderlineStyleWave = 9,
    styleTextUnderlineStyleSingleAccounting = 10,
    styleTextUnderlineStyleDoubleAccounting = 11,
    styleTextUnderlineStyleThickDash = 12,
    styleTextUnderlineStyle_Max = 0x7fffffff
};

typedef enum _styleTransformOriginX {
    styleTransformOriginXNotSet = 0,
    styleTransformOriginXLeft = 1,
    styleTransformOriginXCenter = 2,
    styleTransformOriginXRight = 3,
    styleTransformOriginX_Max = 0x7fffffff
};

typedef enum _styleTransformOriginY {
    styleTransformOriginYNotSet = 0,
    styleTransformOriginYTop = 1,
    styleTransformOriginYCenter = 2,
    styleTransformOriginYBottom = 3,
    styleTransformOriginY_Max = 0x7fffffff
};

typedef enum _styleTransformStyle {
    styleTransformStyleFlat = 0,
    styleTransformStylePreserve3D = 1,
    styleTransformStyleNotSet = 2,
    styleTransformStyle_Max = 0x7fffffff
};

typedef enum _styleUserZoom {
    styleUserZoomNotSet = 0,
    styleUserZoomZoom = 1,
    styleUserZoomFixed = 2,
    styleUserZoom_Max = 0x7fffffff
};

typedef enum _styleVerticalAlign {
    styleVerticalAlignAuto = 0,
    styleVerticalAlignBaseline = 1,
    styleVerticalAlignSub = 2,
    styleVerticalAlignSuper = 3,
    styleVerticalAlignTop = 4,
    styleVerticalAlignTextTop = 5,
    styleVerticalAlignMiddle = 6,
    styleVerticalAlignBottom = 7,
    styleVerticalAlignTextBottom = 8,
    styleVerticalAlignInherit = 9,
    styleVerticalAlignNotSet = 10,
    styleVerticalAlign_Max = 0x7fffffff
};

typedef enum _styleViewportSize {
    styleViewportSizeAuto = 0,
    styleViewportSizeDeviceWidth = 1,
    styleViewportSizeDeviceHeight = 2,
    styleViewportSize_Max = 0x7fffffff
};

typedef enum _styleVisibility {
    styleVisibilityNotSet = 0,
    styleVisibilityInherit = 1,
    styleVisibilityVisible = 2,
    styleVisibilityHidden = 3,
    styleVisibilityCollapse = 4,
    styleVisibility_Max = 0x7fffffff
};

typedef enum _styleWebkitAppearance {
    styleWebkitAppearanceNone = 0,
    styleWebkitAppearanceCapsLockIndicator = 1,
    styleWebkitAppearanceButton = 2,
    styleWebkitAppearanceButtonBevel = 3,
    styleWebkitAppearanceCaret = 4,
    styleWebkitAppearanceCheckbox = 5,
    styleWebkitAppearanceDefaultButton = 6,
    styleWebkitAppearanceListbox = 7,
    styleWebkitAppearanceListitem = 8,
    styleWebkitAppearanceMediaFullscreenButton = 9,
    styleWebkitAppearanceMediaMuteButton = 10,
    styleWebkitAppearanceMediaPlayButton = 11,
    styleWebkitAppearanceMediaSeekBackButton = 12,
    styleWebkitAppearanceMediaSeekForwardButton = 13,
    styleWebkitAppearanceMediaSlider = 14,
    styleWebkitAppearanceMediaSliderthumb = 15,
    styleWebkitAppearanceMenulist = 16,
    styleWebkitAppearanceMenulistButton = 17,
    styleWebkitAppearanceMenulistText = 18,
    styleWebkitAppearanceMenulistTextfield = 19,
    styleWebkitAppearancePushButton = 20,
    styleWebkitAppearanceRadio = 21,
    styleWebkitAppearanceSearchfield = 22,
    styleWebkitAppearanceSearchfieldCancelButton = 23,
    styleWebkitAppearanceSearchfieldDecoration = 24,
    styleWebkitAppearanceSearchfieldResultsButton = 25,
    styleWebkitAppearanceSearchfieldResultsDecoration = 26,
    styleWebkitAppearanceSliderHorizontal = 27,
    styleWebkitAppearanceSliderVertical = 28,
    styleWebkitAppearanceSliderthumbHorizontal = 29,
    styleWebkitAppearanceSliderthumbVertical = 30,
    styleWebkitAppearanceSquareButton = 31,
    styleWebkitAppearanceTextarea = 32,
    styleWebkitAppearanceTextfield = 33,
    styleWebkitAppearanceNotSet = 34,
    styleWebkitAppearance_Max = 0x7fffffff
};

typedef enum _styleWebkitBoxDirection {
    styleWebkitBoxDirectionNormal = 0,
    styleWebkitBoxDirectionReverse = 1,
    styleWebkitBoxDirectionNotSet = 2,
    styleWebkitBoxDirection_Max = 0x7fffffff
};

typedef enum _styleWebkitBoxOrient {
    styleWebkitBoxOrientHorizontal = 0,
    styleWebkitBoxOrientInlineAxis = 1,
    styleWebkitBoxOrientVertical = 2,
    styleWebkitBoxOrientBlockAxis = 3,
    styleWebkitBoxOrientNotSet = 4,
    styleWebkitBoxOrient_Max = 0x7fffffff
};

typedef enum _styleWebkitBoxPack {
    styleWebkitBoxPackStart = 0,
    styleWebkitBoxPackEnd = 1,
    styleWebkitBoxPackCenter = 2,
    styleWebkitBoxPackJustify = 3,
    styleWebkitBoxPackNotSet = 5,
    styleWebkitBoxPack_Max = 0x7fffffff
};

typedef enum _styleWhiteSpace {
    styleWhiteSpaceNotSet = 0,
    styleWhiteSpaceNormal = 1,
    styleWhiteSpacePre = 2,
    styleWhiteSpaceNowrap = 3,
    styleWhiteSpacePreline = 4,
    styleWhiteSpacePrewrap = 5,
    styleWhiteSpace_Max = 0x7fffffff
};

typedef enum _styleWidowsOrphans {
    styleWidowsOrphansNotSet = -2147483647,
    styleWidowsOrphans_Max = 0x7fffffff
};

typedef enum _styleWordBreak {
    styleWordBreakNotSet = 0,
    styleWordBreakNormal = 1,
    styleWordBreakBreakAll = 2,
    styleWordBreakKeepAll = 3,
    styleWordBreak_Max = 0x7fffffff
};

typedef enum _styleWordWrap {
    styleWordWrapNotSet = 0,
    styleWordWrapOff = 1,
    styleWordWrapOn = 2,
    styleWordWrap_Max = 0x7fffffff
};

typedef enum _styleWrapFlow {
    styleWrapFlowNotSet = 0,
    styleWrapFlowAuto = 1,
    styleWrapFlowBoth = 2,
    styleWrapFlowStart = 3,
    styleWrapFlowEnd = 4,
    styleWrapFlowClear = 5,
    styleWrapFlowMinimum = 6,
    styleWrapFlowMaximum = 7,
    styleWrapFlow_Max = 0x7fffffff
};

typedef enum _styleWrapThrough {
    styleWrapThroughNotSet = 0,
    styleWrapThroughWrap = 1,
    styleWrapThroughNone = 2,
    styleWrapThrough_Max = 0x7fffffff
};

typedef enum _styleWritingMode {
    styleWritingModeLrtb = 0,
    styleWritingModeTbrl = 1,
    styleWritingModeRltb = 2,
    styleWritingModeBtrl = 3,
    styleWritingModeNotSet = 4,
    styleWritingModeTblr = 5,
    styleWritingModeBtlr = 6,
    styleWritingModeLrbt = 7,
    styleWritingModeRlbt = 8,
    styleWritingModeLr = 9,
    styleWritingModeRl = 10,
    styleWritingModeTb = 11,
    styleWritingMode_Max = 0x7fffffff
};

typedef enum _styleZIndex {
    styleZIndexAuto = -2147483647,
    styleZIndex_Max = 0x7fffffff
};

typedef enum _svgAngleType {
    SVG_ANGLETYPE_UNKNOWN = 0,
    SVG_ANGLETYPE_UNSPECIFIED = 1,
    SVG_ANGLETYPE_DEG = 2,
    SVG_ANGLETYPE_RAD = 3,
    SVG_ANGLETYPE_GRAD = 4,
    svgAngleType_Max = 0x7fffffff
};

typedef enum _svgChannel {
    SVG_CHANNEL_UNKNOWN = 0,
    SVG_CHANNEL_R = 1,
    SVG_CHANNEL_G = 2,
    SVG_CHANNEL_B = 3,
    SVG_CHANNEL_A = 4,
    svgChannel_Max = 0x7fffffff
};

typedef enum _svgEdgemode {
    SVG_EDGEMODE_UNKNOWN = 0,
    SVG_EDGEMODE_DUPLICATE = 1,
    SVG_EDGEMODE_WRAP = 2,
    SVG_EDGEMODE_NONE = 3,
    svgEdgemode_Max = 0x7fffffff
};

typedef enum _svgExternalResourcesRequired {
    svgExternalResourcesRequiredFalse = 0,
    svgExternalResourcesRequiredTrue = 1,
    svgExternalResourcesRequired_Max = 0x7fffffff
};

typedef enum _svgFeblendMode {
    SVG_FEBLEND_MODE_UNKNOWN = 0,
    SVG_FEBLEND_MODE_NORMAL = 1,
    SVG_FEBLEND_MODE_MULTIPLY = 2,
    SVG_FEBLEND_MODE_SCREEN = 3,
    SVG_FEBLEND_MODE_DARKEN = 4,
    SVG_FEBLEND_MODE_LIGHTEN = 5,
    svgFeblendMode_Max = 0x7fffffff
};

typedef enum _svgFecolormatrixType {
    SVG_FECOLORMATRIX_TYPE_UNKNOWN = 0,
    SVG_FECOLORMATRIX_TYPE_MATRIX = 1,
    SVG_FECOLORMATRIX_TYPE_SATURATE = 2,
    SVG_FECOLORMATRIX_TYPE_HUEROTATE = 3,
    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = 4,
    svgFecolormatrixType_Max = 0x7fffffff
};

typedef enum _svgFecomponenttransferType {
    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = 0,
    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1,
    SVG_FECOMPONENTTRANSFER_TYPE_TABLE = 2,
    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3,
    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR = 4,
    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA = 5,
    svgFecomponenttransferType_Max = 0x7fffffff
};

typedef enum _svgFecompositeOperator {
    SVG_FECOMPOSITE_OPERATOR_UNKNOWN = 0,
    SVG_FECOMPOSITE_OPERATOR_OVER = 1,
    SVG_FECOMPOSITE_OPERATOR_IN = 2,
    SVG_FECOMPOSITE_OPERATOR_OUT = 3,
    SVG_FECOMPOSITE_OPERATOR_ATOP = 4,
    SVG_FECOMPOSITE_OPERATOR_XOR = 5,
    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = 6,
    svgFecompositeOperator_Max = 0x7fffffff
};

typedef enum _svgFocusable {
    svgFocusableNotSet = 0,
    svgFocusableAuto = 1,
    svgFocusableTrue = 2,
    svgFocusableFalse = 3,
    svgFocusable_Max = 0x7fffffff
};

typedef enum _svgLengthType {
    SVG_LENGTHTYPE_UNKNOWN = 0,
    SVG_LENGTHTYPE_NUMBER = 1,
    SVG_LENGTHTYPE_PERCENTAGE = 2,
    SVG_LENGTHTYPE_EMS = 3,
    SVG_LENGTHTYPE_EXS = 4,
    SVG_LENGTHTYPE_PX = 5,
    SVG_LENGTHTYPE_CM = 6,
    SVG_LENGTHTYPE_MM = 7,
    SVG_LENGTHTYPE_IN = 8,
    SVG_LENGTHTYPE_PT = 9,
    SVG_LENGTHTYPE_PC = 10,
    svgLengthType_Max = 0x7fffffff
};

typedef enum _svgMarkerOrient {
    SVG_MARKER_ORIENT_UNKNOWN = 0,
    SVG_MARKER_ORIENT_AUTO = 1,
    SVG_MARKER_ORIENT_ANGLE = 2,
    svgMarkerOrient_Max = 0x7fffffff
};

typedef enum _svgMarkerOrientAttribute {
    svgMarkerOrientAttributeAuto = 0,
    svgMarkerOrientAttribute_Max = 0x7fffffff
};

typedef enum _svgMarkerUnits {
    SVG_MARKERUNITS_UNKNOWN = 0,
    SVG_MARKERUNITS_USERSPACEONUSE = 1,
    SVG_MARKERUNITS_STROKEWIDTH = 2,
    svgMarkerUnits_Max = 0x7fffffff
};

typedef enum _svgMorphologyOperator {
    SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0,
    SVG_MORPHOLOGY_OPERATOR_ERODE = 1,
    SVG_MORPHOLOGY_OPERATOR_DILATE = 2,
    svgMorphologyOperator_Max = 0x7fffffff
};

typedef enum _svgPathSegType {
    PATHSEG_UNKNOWN = 0,
    PATHSEG_CLOSEPATH = 1,
    PATHSEG_MOVETO_ABS = 2,
    PATHSEG_MOVETO_REL = 3,
    PATHSEG_LINETO_ABS = 4,
    PATHSEG_LINETO_REL = 5,
    PATHSEG_CURVETO_CUBIC_ABS = 6,
    PATHSEG_CURVETO_CUBIC_REL = 7,
    PATHSEG_CURVETO_QUADRATIC_ABS = 8,
    PATHSEG_CURVETO_QUADRATIC_REL = 9,
    PATHSEG_ARC_ABS = 10,
    PATHSEG_ARC_REL = 11,
    PATHSEG_LINETO_HORIZONTAL_ABS = 12,
    PATHSEG_LINETO_HORIZONTAL_REL = 13,
    PATHSEG_LINETO_VERTICAL_ABS = 14,
    PATHSEG_LINETO_VERTICAL_REL = 15,
    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16,
    PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17,
    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18,
    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19,
    svgPathSegType_Max = 0x7fffffff
};

typedef enum _svgPreserveAlpha {
    SVG_PRESERVEALPHA_FALSE = 0,
    SVG_PRESERVEALPHA_TRUE = 1,
    svgPreserveAlpha_Max = 0x7fffffff
};

typedef enum _svgPreserveAspectMeetOrSliceType {
    SVG_MEETORSLICE_UNKNOWN = 0,
    SVG_MEETORSLICE_MEET = 1,
    SVG_MEETORSLICE_SLICE = 2,
    svgPreserveAspectMeetOrSliceType_Max = 0x7fffffff
};

typedef enum _svgPreserveAspectRatioAlignType {
    SVG_PRESERVEASPECTRATIO_UNKNOWN = 0,
    SVG_PRESERVEASPECTRATIO_NONE = 1,
    SVG_PRESERVEASPECTRATIO_XMINYMIN = 2,
    SVG_PRESERVEASPECTRATIO_XMIDYMIN = 3,
    SVG_PRESERVEASPECTRATIO_XMAXYMIN = 4,
    SVG_PRESERVEASPECTRATIO_XMINYMID = 5,
    SVG_PRESERVEASPECTRATIO_XMIDYMID = 6,
    SVG_PRESERVEASPECTRATIO_XMAXYMID = 7,
    SVG_PRESERVEASPECTRATIO_XMINYMAX = 8,
    SVG_PRESERVEASPECTRATIO_XMIDYMAX = 9,
    SVG_PRESERVEASPECTRATIO_XMAXYMAX = 10,
    svgPreserveAspectRatioAlignType_Max = 0x7fffffff
};

typedef enum _svgSpreadMethod {
    SVG_SPREADMETHOD_UNKNOWN = 0,
    SVG_SPREADMETHOD_PAD = 1,
    SVG_SPREADMETHOD_REFLECT = 2,
    SVG_SPREADMETHOD_REPEAT = 3,
    svgSpreadMethod_Max = 0x7fffffff
};

typedef enum _svgStitchtype {
    SVG_STITCHTYPE_UNKNOWN = 0,
    SVG_STITCHTYPE_STITCH = 1,
    SVG_STITCHTYPE_NOSTITCH = 2,
    svgStitchtype_Max = 0x7fffffff
};

typedef enum _svgTransformType {
    SVG_TRANSFORM_UNKNOWN = 0,
    SVG_TRANSFORM_MATRIX = 1,
    SVG_TRANSFORM_TRANSLATE = 2,
    SVG_TRANSFORM_SCALE = 3,
    SVG_TRANSFORM_ROTATE = 4,
    SVG_TRANSFORM_SKEWX = 5,
    SVG_TRANSFORM_SKEWY = 6,
    svgTransformType_Max = 0x7fffffff
};

typedef enum _svgTurbulenceType {
    SVG_TURBULENCE_TYPE_UNKNOWN = 0,
    SVG_TURBULENCE_TYPE_FACTALNOISE = 1,
    SVG_TURBULENCE_TYPE_TURBULENCE = 2,
    svgTurbulenceType_Max = 0x7fffffff
};

typedef enum _svgUnitTypes {
    SVG_UNITTYPE_UNKNOWN = 0,
    SVG_UNITTYPE_USERSPACEONUSE = 1,
    SVG_UNITTYPE_OBJECTBOUNDINGBOX = 2,
    svgUnitTypes_Max = 0x7fffffff
};

typedef enum _system_handle_t {
    SYSTEM_HANDLE_FILE = 0,
    SYSTEM_HANDLE_SEMAPHORE = 1,
    SYSTEM_HANDLE_EVENT = 2,
    SYSTEM_HANDLE_MUTEX = 3,
    SYSTEM_HANDLE_PROCESS = 4,
    SYSTEM_HANDLE_TOKEN = 5,
    SYSTEM_HANDLE_SECTION = 6,
    SYSTEM_HANDLE_REG_KEY = 7,
    SYSTEM_HANDLE_THREAD = 8,
    SYSTEM_HANDLE_COMPOSITION_OBJECT = 9,
    SYSTEM_HANDLE_SOCKET = 10,
    SYSTEM_HANDLE_JOB = 11,
    SYSTEM_HANDLE_PIPE = 12,
    SYSTEM_HANDLE_MAX = 12,
    SYSTEM_HANDLE_INVALID = 255
};

typedef enum _tagEXPR_TOKEN {
    FC_EXPR_START = 0,
    FC_EXPR_ILLEGAL = 0,
    FC_EXPR_CONST32 = 1,
    FC_EXPR_CONST64 = 2,
    FC_EXPR_VAR = 3,
    FC_EXPR_OPER = 4,
    FC_EXPR_NOOP = 5,
    FC_EXPR_END = 6
};

typedef enum _tagINTERNETFEATURELIST {
    FEATURE_OBJECT_CACHING = 0,
    FEATURE_ZONE_ELEVATION = 1,
    FEATURE_MIME_HANDLING = 2,
    FEATURE_MIME_SNIFFING = 3,
    FEATURE_WINDOW_RESTRICTIONS = 4,
    FEATURE_WEBOC_POPUPMANAGEMENT = 5,
    FEATURE_BEHAVIORS = 6,
    FEATURE_DISABLE_MK_PROTOCOL = 7,
    FEATURE_LOCALMACHINE_LOCKDOWN = 8,
    FEATURE_SECURITYBAND = 9,
    FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
    FEATURE_VALIDATE_NAVIGATE_URL = 11,
    FEATURE_RESTRICT_FILEDOWNLOAD = 12,
    FEATURE_ADDON_MANAGEMENT = 13,
    FEATURE_PROTOCOL_LOCKDOWN = 14,
    FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
    FEATURE_SAFE_BINDTOOBJECT = 16,
    FEATURE_UNC_SAVEDFILECHECK = 17,
    FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
    FEATURE_TABBED_BROWSING = 19,
    FEATURE_SSLUX = 20,
    FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
    FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
    FEATURE_FORCE_ADDR_AND_STATUS = 23,
    FEATURE_XMLHTTP = 24,
    FEATURE_DISABLE_TELNET_PROTOCOL = 25,
    FEATURE_FEEDS = 26,
    FEATURE_BLOCK_INPUT_PROMPTS = 27,
    FEATURE_ENTRY_COUNT = 28
};

typedef enum _tagOIBDG_FLAGS {
    OIBDG_APARTMENTTHREADED = 256,
    OIBDG_DATAONLY = 4096
};

typedef enum _tagPARSEACTION {
    PARSE_CANONICALIZE = 1,
    PARSE_FRIENDLY = 2,
    PARSE_SECURITY_URL = 3,
    PARSE_ROOTDOCUMENT = 4,
    PARSE_DOCUMENT = 5,
    PARSE_ANCHOR = 6,
    PARSE_ENCODE_IS_UNESCAPE = 7,
    PARSE_DECODE_IS_ESCAPE = 8,
    PARSE_PATH_FROM_URL = 9,
    PARSE_URL_FROM_PATH = 10,
    PARSE_MIME = 11,
    PARSE_SERVER = 12,
    PARSE_SCHEMA = 13,
    PARSE_SITE = 14,
    PARSE_DOMAIN = 15,
    PARSE_LOCATION = 16,
    PARSE_SECURITY_DOMAIN = 17,
    PARSE_ESCAPE = 18,
    PARSE_UNESCAPE = 19
};

typedef enum _tagPI_FLAGS {
    PI_PARSE_URL = 1,
    PI_FILTER_MODE = 2,
    PI_FORCE_ASYNC = 4,
    PI_USE_WORKERTHREAD = 8,
    PI_MIMEVERIFICATION = 16,
    PI_CLSIDLOOKUP = 32,
    PI_DATAPROGRESS = 64,
    PI_SYNCHRONOUS = 128,
    PI_APARTMENTTHREADED = 256,
    PI_CLASSINSTALL = 512,
    PI_PASSONBINDCTX = 8192,
    PI_NOMIMEHANDLER = 0x8000,
    PI_LOADAPPDIRECT = 16384,
    PD_FORCE_SWITCH = 0x10000,
    PI_PREFERDEFAULTHANDLER = 0x20000
};

typedef enum _tagPSUACTION {
    PSU_DEFAULT = 1,
    PSU_SECURITY_URL_ONLY = 2
};

typedef enum _tagQUERYOPTION {
    QUERY_EXPIRATION_DATE = 1,
    QUERY_TIME_OF_LAST_CHANGE = 2,
    QUERY_CONTENT_ENCODING = 3,
    QUERY_CONTENT_TYPE = 4,
    QUERY_REFRESH = 5,
    QUERY_RECOMBINE = 6,
    QUERY_CAN_NAVIGATE = 7,
    QUERY_USES_NETWORK = 8,
    QUERY_IS_CACHED = 9,
    QUERY_IS_INSTALLEDENTRY = 10,
    QUERY_IS_CACHED_OR_MAPPED = 11,
    QUERY_USES_CACHE = 12,
    QUERY_IS_SECURE = 13,
    QUERY_IS_SAFE = 14,
    QUERY_USES_HISTORYFOLDER = 15,
    QUERY_IS_CACHED_AND_USABLE_OFFLINE = 16
};

typedef enum _textDecoration {
    textDecorationNone = 0,
    textDecorationUnderline = 1,
    textDecorationOverline = 2,
    textDecorationLineThrough = 3,
    textDecorationBlink = 4,
    textDecoration_Max = 0x7fffffff
};

typedef enum _textpathMethodtype {
    TEXTPATH_METHODTYPE_UNKNOWN = 0,
    TEXTPATH_METHODTYPE_ALIGN = 1,
    TEXTPATH_METHODTYPE_STRETCH = 2,
    textpathMethodtype_Max = 0x7fffffff
};

typedef enum _textpathSpacingtype {
    TEXTPATH_SPACINGTYPE_UNKNOWN = 0,
    TEXTPATH_SPACINGTYPE_AUTO = 1,
    TEXTPATH_SPACINGTYPE_EXACT = 2,
    textpathSpacingtype_Max = 0x7fffffff
};

typedef enum optimize_e {
    speed = 0,
    size = 1
};

typedef enum std::_Uninitialized {
    _Noinit = 0
};

typedef enum tagACTIVATEFLAGS {
    ACTIVATE_WINDOWLESS = 1
};

typedef enum tagACTIVATIONTYPE {
    ACTIVATIONTYPE_UNCATEGORIZED = 0,
    ACTIVATIONTYPE_FROM_MONIKER = 1,
    ACTIVATIONTYPE_FROM_DATA = 2,
    ACTIVATIONTYPE_FROM_STORAGE = 4,
    ACTIVATIONTYPE_FROM_STREAM = 8,
    ACTIVATIONTYPE_FROM_FILE = 16
};

typedef enum tagADVF {
    ADVF_NODATA = 1,
    ADVF_PRIMEFIRST = 2,
    ADVF_ONLYONCE = 4,
    ADVF_DATAONSTOP = 64,
    ADVFCACHE_NOHANDLER = 8,
    ADVFCACHE_FORCEBUILTIN = 16,
    ADVFCACHE_ONSAVE = 32
};

typedef enum tagAR_STATE {
    AR_ENABLED = 0,
    AR_DISABLED = 1,
    AR_SUPPRESSED = 2,
    AR_REMOTESESSION = 4,
    AR_MULTIMON = 8,
    AR_NOSENSOR = 16,
    AR_NOT_SUPPORTED = 32,
    AR_DOCKED = 64,
    AR_LAPTOP = 128
};

typedef enum tagApplicationType {
    ServerApplication = 0,
    LibraryApplication = 1
};

typedef enum tagAspectInfoFlag {
    DVASPECTINFOFLAG_CANOPTIMIZE = 1
};

typedef enum tagBINDOPTIONINTERNAL {
    BINDOPTIONINTERNAL_REFERRER_URL = 1,
    BINDOPTIONINTERNAL_XHR_SET_TIMEOUT = 2,
    BINDOPTIONINTERNAL_USE_FETCH_ALGORITHM = 3,
    BINDOPTIONINTERNAL_USE_FETCH_ALGORITHM_CORS = 4,
    BINDOPTIONINTERNAL_READ_FROM_CACHEFILE = 5,
    BINDOPTIONINTERNAL_CHECK_FIREWALL_ON_FAILURE = 6,
    BINDOPTIONINTERNAL_IS_SHUTDOWN = 7,
    BINDOPTIONINTERNAL_ACTIVITY_ID = 8,
    BINDOPTIONINTERNAL_WEBREQUEST_EVENT_ID = 9,
    BINDOPTIONINTERNAL_WEBREQUEST_LAST_EVENT_TYPE = 10,
    BINDOPTIONINTERNAL_SAMESITE_COOKIES_LEGACY = 11,
    BINDOPTIONINTERNAL_SHOULD_REDIRECT_TO_NEEDIE = 12
};

typedef enum tagBINDSPEED {
    BINDSPEED_INDEFINITE = 1,
    BINDSPEED_MODERATE = 2,
    BINDSPEED_IMMEDIATE = 3
};

typedef enum tagBINDSTATUS {
    BINDSTATUS_FINDINGRESOURCE = 1,
    BINDSTATUS_CONNECTING = 2,
    BINDSTATUS_REDIRECTING = 3,
    BINDSTATUS_BEGINDOWNLOADDATA = 4,
    BINDSTATUS_DOWNLOADINGDATA = 5,
    BINDSTATUS_ENDDOWNLOADDATA = 6,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
    BINDSTATUS_INSTALLINGCOMPONENTS = 8,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
    BINDSTATUS_USINGCACHEDCOPY = 10,
    BINDSTATUS_SENDINGREQUEST = 11,
    BINDSTATUS_CLASSIDAVAILABLE = 12,
    BINDSTATUS_MIMETYPEAVAILABLE = 13,
    BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
    BINDSTATUS_BEGINSYNCOPERATION = 15,
    BINDSTATUS_ENDSYNCOPERATION = 16,
    BINDSTATUS_BEGINUPLOADDATA = 17,
    BINDSTATUS_UPLOADINGDATA = 18,
    BINDSTATUS_ENDUPLOADDATA = 19,
    BINDSTATUS_PROTOCOLCLASSID = 20,
    BINDSTATUS_ENCODING = 21,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
    BINDSTATUS_CLASSINSTALLLOCATION = 23,
    BINDSTATUS_DECODING = 24,
    BINDSTATUS_LOADINGMIMEHANDLER = 25,
    BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
    BINDSTATUS_FILTERREPORTMIMETYPE = 27,
    BINDSTATUS_CLSIDCANINSTANTIATE = 28,
    BINDSTATUS_IUNKNOWNAVAILABLE = 29,
    BINDSTATUS_DIRECTBIND = 30,
    BINDSTATUS_RAWMIMETYPE = 31,
    BINDSTATUS_PROXYDETECTING = 32,
    BINDSTATUS_ACCEPTRANGES = 33,
    BINDSTATUS_COOKIE_SENT = 34,
    BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
    BINDSTATUS_COOKIE_SUPPRESSED = 36,
    BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
    BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
    BINDSTATUS_COOKIE_STATE_REJECT = 39,
    BINDSTATUS_COOKIE_STATE_PROMPT = 40,
    BINDSTATUS_COOKIE_STATE_LEASH = 41,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
    BINDSTATUS_POLICY_HREF = 43,
    BINDSTATUS_P3P_HEADER = 44,
    BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
    BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
    BINDSTATUS_CACHECONTROL = 48,
    BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
    BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
    BINDSTATUS_PUBLISHERAVAILABLE = 51,
    BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
    BINDSTATUS_SSLUX_NAVBLOCKED = 53,
    BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 54,
    BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 55,
    BINDSTATUS_64BIT_PROGRESS = 56,
    BINDSTATUS_LAST = 56,
    BINDSTATUS_RESERVED_0 = 57,
    BINDSTATUS_RESERVED_1 = 58,
    BINDSTATUS_RESERVED_2 = 59,
    BINDSTATUS_RESERVED_3 = 60,
    BINDSTATUS_RESERVED_4 = 61,
    BINDSTATUS_RESERVED_5 = 62,
    BINDSTATUS_RESERVED_6 = 63,
    BINDSTATUS_RESERVED_7 = 64,
    BINDSTATUS_RESERVED_8 = 65,
    BINDSTATUS_RESERVED_9 = 66,
    BINDSTATUS_RESERVED_A = 67,
    BINDSTATUS_RESERVED_B = 68,
    BINDSTATUS_RESERVED_C = 69,
    BINDSTATUS_RESERVED_D = 70,
    BINDSTATUS_RESERVED_E = 71,
    BINDSTATUS_RESERVED_F = 72,
    BINDSTATUS_RESERVED_10 = 73,
    BINDSTATUS_RESERVED_11 = 74,
    BINDSTATUS_RESERVED_12 = 75,
    BINDSTATUS_RESERVED_13 = 76,
    BINDSTATUS_LAST_PRIVATE = 76
};

typedef enum tagBINDSTRING {
    BINDSTRING_HEADERS = 1,
    BINDSTRING_ACCEPT_MIMES = 2,
    BINDSTRING_EXTRA_URL = 3,
    BINDSTRING_LANGUAGE = 4,
    BINDSTRING_USERNAME = 5,
    BINDSTRING_PASSWORD = 6,
    BINDSTRING_UA_PIXELS = 7,
    BINDSTRING_UA_COLOR = 8,
    BINDSTRING_OS = 9,
    BINDSTRING_USER_AGENT = 10,
    BINDSTRING_ACCEPT_ENCODINGS = 11,
    BINDSTRING_POST_COOKIE = 12,
    BINDSTRING_POST_DATA_MIME = 13,
    BINDSTRING_URL = 14,
    BINDSTRING_IID = 15,
    BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
    BINDSTRING_PTR_BIND_CONTEXT = 17,
    BINDSTRING_XDR_ORIGIN = 18,
    BINDSTRING_DOWNLOADPATH = 19,
    BINDSTRING_ROOTDOC_URL = 20,
    BINDSTRING_INITIAL_FILENAME = 21,
    BINDSTRING_PROXY_USERNAME = 22,
    BINDSTRING_PROXY_PASSWORD = 23,
    BINDSTRING_ENTERPRISE_ID = 24,
    BINDSTRING_DOC_URL = 25,
    BINDSTRING_SAMESITE_COOKIE_LEVEL = 26
};

typedef enum tagBIND_FLAGS {
    BIND_MAYBOTHERUSER = 1,
    BIND_JUSTTESTEXISTENCE = 2
};

typedef enum tagBREAKPOINT_STATE {
    BREAKPOINT_DELETED = 0,
    BREAKPOINT_DISABLED = 1,
    BREAKPOINT_ENABLED = 2
};

typedef enum tagBREAKREASON {
    BREAKREASON_STEP = 0,
    BREAKREASON_BREAKPOINT = 1,
    BREAKREASON_DEBUGGER_BLOCK = 2,
    BREAKREASON_HOST_INITIATED = 3,
    BREAKREASON_LANGUAGE_INITIATED = 4,
    BREAKREASON_DEBUGGER_HALT = 5,
    BREAKREASON_ERROR = 6,
    BREAKREASON_JIT = 7,
    BREAKREASON_MUTATION_BREAKPOINT = 8
};

typedef enum tagBREAKRESUME_ACTION {
    BREAKRESUMEACTION_ABORT = 0,
    BREAKRESUMEACTION_CONTINUE = 1,
    BREAKRESUMEACTION_STEP_INTO = 2,
    BREAKRESUMEACTION_STEP_OVER = 3,
    BREAKRESUMEACTION_STEP_OUT = 4,
    BREAKRESUMEACTION_IGNORE = 5,
    BREAKRESUMEACTION_STEP_DOCUMENT = 6
};

typedef enum tagBROWSERTRANSITIONREASON {
    BROWSERTRANSITIONREASON_NOTRANSITION = 0,
    BROWSERTRANSITIONREASON_EMIE_SITELIST = 1,
    BROWSERTRANSITIONREASON_EMIE_SITELIST_ALLOW_REDIRECT = 2,
    BROWSERTRANSITIONREASON_INTRANET_SETTING = 3,
    BROWSERTRANSITIONREASON_CLOUD_CV_LIST = 4,
    BROWSERTRANSITIONREASON_KEEPINBROWSER = 5,
    BROWSERTRANSITIONREASON_RESTRICTIE = 6,
    BROWSERTRANSITIONREASON_NEEDHVSI = 7,
    BROWSERTRANSITIONREASON_NEEDHVSI_UNKNOWN = 8,
    BROWSERTRANSITIONREASON_HVSINEEDHOST = 9
};

typedef enum tagCALLCONV {
    CC_FASTCALL = 0,
    CC_CDECL = 1,
    CC_MSCPASCAL = 2,
    CC_PASCAL = 2,
    CC_MACPASCAL = 3,
    CC_STDCALL = 4,
    CC_FPFASTCALL = 5,
    CC_SYSCALL = 6,
    CC_MPWCDECL = 7,
    CC_MPWPASCAL = 8,
    CC_MAX = 9
};

typedef enum tagCALLTYPE {
    CALLTYPE_TOPLEVEL = 1,
    CALLTYPE_NESTED = 2,
    CALLTYPE_ASYNC = 3,
    CALLTYPE_TOPLEVEL_CALLPENDING = 4,
    CALLTYPE_ASYNC_CALLPENDING = 5
};

typedef enum tagCHANGEKIND {
    CHANGEKIND_ADDMEMBER = 0,
    CHANGEKIND_DELETEMEMBER = 1,
    CHANGEKIND_SETNAMES = 2,
    CHANGEKIND_SETDOCUMENTATION = 3,
    CHANGEKIND_GENERAL = 4,
    CHANGEKIND_INVALIDATE = 5,
    CHANGEKIND_CHANGEFAILED = 6,
    CHANGEKIND_MAX = 7
};

typedef enum tagCLSCTX {
    CLSCTX_INPROC_SERVER = 1,
    CLSCTX_INPROC_HANDLER = 2,
    CLSCTX_LOCAL_SERVER = 4,
    CLSCTX_INPROC_SERVER16 = 8,
    CLSCTX_REMOTE_SERVER = 16,
    CLSCTX_INPROC_HANDLER16 = 32,
    CLSCTX_RESERVED1 = 64,
    CLSCTX_RESERVED2 = 128,
    CLSCTX_RESERVED3 = 256,
    CLSCTX_RESERVED4 = 512,
    CLSCTX_NO_CODE_DOWNLOAD = 1024,
    CLSCTX_RESERVED5 = 2048,
    CLSCTX_NO_CUSTOM_MARSHAL = 4096,
    CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
    CLSCTX_NO_FAILURE_LOG = 16384,
    CLSCTX_DISABLE_AAA = 0x8000,
    CLSCTX_ENABLE_AAA = 0x10000,
    CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
    CLSCTX_ACTIVATE_X86_SERVER = 0x40000,
    CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
    CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
    CLSCTX_ENABLE_CLOAKING = 0x100000,
    CLSCTX_APPCONTAINER = 0x400000,
    CLSCTX_ACTIVATE_AAA_AS_IU = 0x800000,
    CLSCTX_RESERVED6 = 0x1000000,
    CLSCTX_ACTIVATE_ARM32_SERVER = 0x2000000,
    CLSCTX_PS_DLL = -2147483648
};

typedef enum tagCOINIT {
    COINIT_APARTMENTTHREADED = 2,
    COINIT_MULTITHREADED = 0,
    COINIT_DISABLE_OLE1DDE = 4,
    COINIT_SPEED_OVER_MEMORY = 8
};

typedef enum tagCOINITBASE {
    COINITBASE_MULTITHREADED = 0
};

typedef enum tagCOMSD {
    SD_LAUNCHPERMISSIONS = 0,
    SD_ACCESSPERMISSIONS = 1,
    SD_LAUNCHRESTRICTIONS = 2,
    SD_ACCESSRESTRICTIONS = 3
};

typedef enum tagCOWAIT_FLAGS {
    COWAIT_DEFAULT = 0,
    COWAIT_WAITALL = 1,
    COWAIT_ALERTABLE = 2,
    COWAIT_INPUTAVAILABLE = 4,
    COWAIT_DISPATCH_CALLS = 8,
    COWAIT_DISPATCH_WINDOW_MESSAGES = 16
};

typedef enum tagCTRLINFO {
    CTRLINFO_EATS_RETURN = 1,
    CTRLINFO_EATS_ESCAPE = 2
};

typedef enum tagDATADIR {
    DATADIR_GET = 1,
    DATADIR_SET = 2
};

typedef enum tagDCOM_CALL_STATE {
    DCOM_NONE = 0,
    DCOM_CALL_COMPLETE = 1,
    DCOM_CALL_CANCELED = 2
};

typedef enum tagDESCKIND {
    DESCKIND_NONE = 0,
    DESCKIND_FUNCDESC = 1,
    DESCKIND_VARDESC = 2,
    DESCKIND_TYPECOMP = 3,
    DESCKIND_IMPLICITAPPOBJ = 4,
    DESCKIND_MAX = 5
};

typedef enum tagDISCARDCACHE {
    DISCARDCACHE_SAVEIFDIRTY = 0,
    DISCARDCACHE_NOSAVE = 1
};

typedef enum tagDOCUMENTNAMETYPE {
    DOCUMENTNAMETYPE_APPNODE = 0,
    DOCUMENTNAMETYPE_TITLE = 1,
    DOCUMENTNAMETYPE_FILE_TAIL = 2,
    DOCUMENTNAMETYPE_URL = 3,
    DOCUMENTNAMETYPE_UNIQUE_TITLE = 4,
    DOCUMENTNAMETYPE_SOURCE_MAP_URL = 5
};

typedef enum tagDOMNodeType {
    NODE_INVALID = 0,
    NODE_ELEMENT = 1,
    NODE_ATTRIBUTE = 2,
    NODE_TEXT = 3,
    NODE_CDATA_SECTION = 4,
    NODE_ENTITY_REFERENCE = 5,
    NODE_ENTITY = 6,
    NODE_PROCESSING_INSTRUCTION = 7,
    NODE_COMMENT = 8,
    NODE_DOCUMENT = 9,
    NODE_DOCUMENT_TYPE = 10,
    NODE_DOCUMENT_FRAGMENT = 11,
    NODE_NOTATION = 12
};

typedef enum tagDVASPECT {
    DVASPECT_CONTENT = 1,
    DVASPECT_THUMBNAIL = 2,
    DVASPECT_ICON = 4,
    DVASPECT_DOCPRINT = 8
};

typedef enum tagDVASPECT2 {
    DVASPECT_OPAQUE = 16,
    DVASPECT_TRANSPARENT = 32
};

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES {
    EOAC_NONE = 0,
    EOAC_MUTUAL_AUTH = 1,
    EOAC_STATIC_CLOAKING = 32,
    EOAC_DYNAMIC_CLOAKING = 64,
    EOAC_ANY_AUTHORITY = 128,
    EOAC_MAKE_FULLSIC = 256,
    EOAC_DEFAULT = 2048,
    EOAC_SECURE_REFS = 2,
    EOAC_ACCESS_CONTROL = 4,
    EOAC_APPID = 8,
    EOAC_DYNAMIC = 16,
    EOAC_REQUIRE_FULLSIC = 512,
    EOAC_AUTO_IMPERSONATE = 1024,
    EOAC_DISABLE_AAA = 4096,
    EOAC_NO_CUSTOM_MARSHAL = 8192,
    EOAC_RESERVED1 = 16384
};

typedef enum tagERRORRESUMEACTION {
    ERRORRESUMEACTION_ReexecuteErrorStatement = 0,
    ERRORRESUMEACTION_AbortCallAndReturnErrorToCaller = 1,
    ERRORRESUMEACTION_SkipErrorStatement = 2
};

typedef enum tagEXTCONN {
    EXTCONN_STRONG = 1,
    EXTCONN_WEAK = 2,
    EXTCONN_CALLABLE = 4
};

typedef enum tagExtendedErrorParamTypes {
    eeptAnsiString = 1,
    eeptUnicodeString = 2,
    eeptLongVal = 3,
    eeptShortVal = 4,
    eeptPointerVal = 5,
    eeptNone = 6,
    eeptBinary = 7
};

typedef enum tagExtentMode {
    DVEXTENT_CONTENT = 0,
    DVEXTENT_INTEGRAL = 1
};

typedef enum tagFEEDBACK_TYPE {
    FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
    FEEDBACK_PEN_BARRELVISUALIZATION = 2,
    FEEDBACK_PEN_TAP = 3,
    FEEDBACK_PEN_DOUBLETAP = 4,
    FEEDBACK_PEN_PRESSANDHOLD = 5,
    FEEDBACK_PEN_RIGHTTAP = 6,
    FEEDBACK_TOUCH_TAP = 7,
    FEEDBACK_TOUCH_DOUBLETAP = 8,
    FEEDBACK_TOUCH_PRESSANDHOLD = 9,
    FEEDBACK_TOUCH_RIGHTTAP = 10,
    FEEDBACK_GESTURE_PRESSANDTAP = 11,
    FEEDBACK_MAX = -1
};

typedef enum tagFUNCFLAGS {
    FUNCFLAG_FRESTRICTED = 1,
    FUNCFLAG_FSOURCE = 2,
    FUNCFLAG_FBINDABLE = 4,
    FUNCFLAG_FREQUESTEDIT = 8,
    FUNCFLAG_FDISPLAYBIND = 16,
    FUNCFLAG_FDEFAULTBIND = 32,
    FUNCFLAG_FHIDDEN = 64,
    FUNCFLAG_FUSESGETLASTERROR = 128,
    FUNCFLAG_FDEFAULTCOLLELEM = 256,
    FUNCFLAG_FUIDEFAULT = 512,
    FUNCFLAG_FNONBROWSABLE = 1024,
    FUNCFLAG_FREPLACEABLE = 2048,
    FUNCFLAG_FIMMEDIATEBIND = 4096
};

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL = 0,
    FUNC_PUREVIRTUAL = 1,
    FUNC_NONVIRTUAL = 2,
    FUNC_STATIC = 3,
    FUNC_DISPATCH = 4
};

typedef enum tagGLOBALOPT_EH_VALUES {
    COMGLB_EXCEPTION_HANDLE = 0,
    COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1,
    COMGLB_EXCEPTION_DONOT_HANDLE = 1,
    COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2
};

typedef enum tagGLOBALOPT_PROPERTIES {
    COMGLB_EXCEPTION_HANDLING = 1,
    COMGLB_APPID = 2,
    COMGLB_RPC_THREADPOOL_SETTING = 3,
    COMGLB_RO_SETTINGS = 4,
    COMGLB_UNMARSHALING_POLICY = 5,
    COMGLB_PROPERTIES_RESERVED1 = 6,
    COMGLB_PROPERTIES_RESERVED2 = 7,
    COMGLB_PROPERTIES_RESERVED3 = 8
};

typedef enum tagGLOBALOPT_RO_FLAGS {
    COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES = 1,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES = 2,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES = 4,
    COMGLB_FAST_RUNDOWN = 8,
    COMGLB_RESERVED1 = 16,
    COMGLB_RESERVED2 = 32,
    COMGLB_RESERVED3 = 64,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES = 128,
    COMGLB_RESERVED4 = 256,
    COMGLB_RESERVED5 = 512,
    COMGLB_RESERVED6 = 1024
};

typedef enum tagGLOBALOPT_RPCTP_VALUES {
    COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL = 0,
    COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL = 1
};

typedef enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES {
    COMGLB_UNMARSHALING_POLICY_NORMAL = 0,
    COMGLB_UNMARSHALING_POLICY_STRONG = 1,
    COMGLB_UNMARSHALING_POLICY_HYBRID = 2
};

typedef enum tagGUIDKIND {
    GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1
};

typedef enum tagHANDEDNESS {
    HANDEDNESS_LEFT = 0,
    HANDEDNESS_RIGHT = 1
};

typedef enum tagHITRESULT {
    HITRESULT_OUTSIDE = 0,
    HITRESULT_TRANSPARENT = 1,
    HITRESULT_CLOSE = 2,
    HITRESULT_HIT = 3
};

typedef enum tagINPUT_MESSAGE_DEVICE_TYPE {
    IMDT_UNAVAILABLE = 0,
    IMDT_KEYBOARD = 1,
    IMDT_MOUSE = 2,
    IMDT_TOUCH = 4,
    IMDT_PEN = 8,
    IMDT_TOUCHPAD = 16
};

typedef enum tagINPUT_MESSAGE_ORIGIN_ID {
    IMO_UNAVAILABLE = 0,
    IMO_HARDWARE = 1,
    IMO_INJECTED = 2,
    IMO_SYSTEM = 4
};

typedef enum tagINVOKEKIND {
    INVOKE_FUNC = 1,
    INVOKE_PROPERTYGET = 2,
    INVOKE_PROPERTYPUT = 4,
    INVOKE_PROPERTYPUTREF = 8
};

typedef enum tagLIBFLAGS {
    LIBFLAG_FRESTRICTED = 1,
    LIBFLAG_FCONTROL = 2,
    LIBFLAG_FHIDDEN = 4,
    LIBFLAG_FHASDISKIMAGE = 8
};

typedef enum tagLOCKTYPE {
    LOCK_WRITE = 1,
    LOCK_EXCLUSIVE = 2,
    LOCK_ONLYONCE = 4
};

typedef enum tagMEMCTX {
    MEMCTX_TASK = 1,
    MEMCTX_SHARED = 2,
    MEMCTX_MACSYSTEM = 3,
    MEMCTX_UNKNOWN = -1,
    MEMCTX_SAME = -2
};

typedef enum tagMIMECONTF {
    MIMECONTF_MAILNEWS = 1,
    MIMECONTF_BROWSER = 2,
    MIMECONTF_MINIMAL = 4,
    MIMECONTF_IMPORT = 8,
    MIMECONTF_SAVABLE_MAILNEWS = 256,
    MIMECONTF_SAVABLE_BROWSER = 512,
    MIMECONTF_EXPORT = 1024,
    MIMECONTF_PRIVCONVERTER = 0x10000,
    MIMECONTF_VALID = 0x20000,
    MIMECONTF_VALID_NLS = 0x40000,
    MIMECONTF_MIME_IE4 = 0x10000000,
    MIMECONTF_MIME_LATEST = 0x20000000,
    MIMECONTF_MIME_REGISTRY = 0x40000000
};

typedef enum tagMKREDUCE {
    MKRREDUCE_ONE = 0x30000,
    MKRREDUCE_TOUSER = 0x20000,
    MKRREDUCE_THROUGHUSER = 0x10000,
    MKRREDUCE_ALL = 0
};

typedef enum tagMKSYS {
    MKSYS_NONE = 0,
    MKSYS_GENERICCOMPOSITE = 1,
    MKSYS_FILEMONIKER = 2,
    MKSYS_ANTIMONIKER = 3,
    MKSYS_ITEMMONIKER = 4,
    MKSYS_POINTERMONIKER = 5,
    MKSYS_CLASSMONIKER = 7,
    MKSYS_OBJREFMONIKER = 8,
    MKSYS_SESSIONMONIKER = 9,
    MKSYS_LUAMONIKER = 10
};

typedef enum tagMLCONVCHARF {
    MLCONVCHARF_AUTODETECT = 1,
    MLCONVCHARF_ENTITIZE = 2,
    MLCONVCHARF_NCR_ENTITIZE = 2,
    MLCONVCHARF_NAME_ENTITIZE = 4,
    MLCONVCHARF_USEDEFCHAR = 8,
    MLCONVCHARF_NOBESTFITCHARS = 16,
    MLCONVCHARF_DETECTJPN = 32
};

typedef enum tagMLCPF {
    MLDETECTF_MAILNEWS = 1,
    MLDETECTF_BROWSER = 2,
    MLDETECTF_VALID = 4,
    MLDETECTF_VALID_NLS = 8,
    MLDETECTF_PRESERVE_ORDER = 16,
    MLDETECTF_PREFERRED_ONLY = 32,
    MLDETECTF_FILTER_SPECIALCHAR = 64,
    MLDETECTF_EURO_UTF8 = 128
};

typedef enum tagMLDETECTCP {
    MLDETECTCP_NONE = 0,
    MLDETECTCP_7BIT = 1,
    MLDETECTCP_8BIT = 2,
    MLDETECTCP_DBCS = 4,
    MLDETECTCP_HTML = 8,
    MLDETECTCP_NUMBER = 16
};

typedef enum tagMLSTR_FLAGS {
    MLSTR_READ = 1,
    MLSTR_WRITE = 2
};

typedef enum tagMSHCTX {
    MSHCTX_LOCAL = 0,
    MSHCTX_NOSHAREDMEM = 1,
    MSHCTX_DIFFERENTMACHINE = 2,
    MSHCTX_INPROC = 3,
    MSHCTX_CROSSCTX = 4,
    MSHCTX_RESERVED1 = 5
};

typedef enum tagMSHLFLAGS {
    MSHLFLAGS_NORMAL = 0,
    MSHLFLAGS_TABLESTRONG = 1,
    MSHLFLAGS_TABLEWEAK = 2,
    MSHLFLAGS_NOPING = 4,
    MSHLFLAGS_RESERVED1 = 8,
    MSHLFLAGS_RESERVED2 = 16,
    MSHLFLAGS_RESERVED3 = 32,
    MSHLFLAGS_RESERVED4 = 64
};

typedef enum tagOLECLOSE {
    OLECLOSE_SAVEIFDIRTY = 0,
    OLECLOSE_NOSAVE = 1,
    OLECLOSE_PROMPTSAVE = 2
};

typedef enum tagOLECONTF {
    OLECONTF_EMBEDDINGS = 1,
    OLECONTF_LINKS = 2,
    OLECONTF_OTHERS = 4,
    OLECONTF_ONLYUSER = 8,
    OLECONTF_ONLYIFRUNNING = 16
};

typedef enum tagOLEDCFLAGS {
    OLEDC_NODRAW = 1,
    OLEDC_PAINTBKGND = 2,
    OLEDC_OFFSCREEN = 4
};

typedef enum tagOLEGETMONIKER {
    OLEGETMONIKER_ONLYIFTHERE = 1,
    OLEGETMONIKER_FORCEASSIGN = 2,
    OLEGETMONIKER_UNASSIGN = 3,
    OLEGETMONIKER_TEMPFORUSER = 4
};

typedef enum tagOLELINKBIND {
    OLELINKBIND_EVENIFCLASSDIFF = 1
};

typedef enum tagOLEMISC {
    OLEMISC_RECOMPOSEONRESIZE = 1,
    OLEMISC_ONLYICONIC = 2,
    OLEMISC_INSERTNOTREPLACE = 4,
    OLEMISC_STATIC = 8,
    OLEMISC_CANTLINKINSIDE = 16,
    OLEMISC_CANLINKBYOLE1 = 32,
    OLEMISC_ISLINKOBJECT = 64,
    OLEMISC_INSIDEOUT = 128,
    OLEMISC_ACTIVATEWHENVISIBLE = 256,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
    OLEMISC_INVISIBLEATRUNTIME = 1024,
    OLEMISC_ALWAYSRUN = 2048,
    OLEMISC_ACTSLIKEBUTTON = 4096,
    OLEMISC_ACTSLIKELABEL = 8192,
    OLEMISC_NOUIACTIVATE = 16384,
    OLEMISC_ALIGNABLE = 0x8000,
    OLEMISC_SIMPLEFRAME = 0x10000,
    OLEMISC_SETCLIENTSITEFIRST = 0x20000,
    OLEMISC_IMEMODE = 0x40000,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
    OLEMISC_WANTSTOMENUMERGE = 0x100000,
    OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000
};

typedef enum tagOLERENDER {
    OLERENDER_NONE = 0,
    OLERENDER_DRAW = 1,
    OLERENDER_FORMAT = 2,
    OLERENDER_ASIS = 3
};

typedef enum tagOLEUPDATE {
    OLEUPDATE_ALWAYS = 1,
    OLEUPDATE_ONCALL = 3
};

typedef enum tagOLEVERBATTRIB {
    OLEVERBATTRIB_NEVERDIRTIES = 1,
    OLEVERBATTRIB_ONCONTAINERMENU = 2
};

typedef enum tagOLEWHICHMK {
    OLEWHICHMK_CONTAINER = 1,
    OLEWHICHMK_OBJREL = 2,
    OLEWHICHMK_OBJFULL = 3
};

typedef enum tagPENDINGMSG {
    PENDINGMSG_CANCELCALL = 0,
    PENDINGMSG_WAITNOPROCESS = 1,
    PENDINGMSG_WAITDEFPROCESS = 2
};

typedef enum tagPENDINGTYPE {
    PENDINGTYPE_TOPLEVEL = 1,
    PENDINGTYPE_NESTED = 2
};

typedef enum tagPERCEIVED {
    PERCEIVED_TYPE_FIRST = -3,
    PERCEIVED_TYPE_CUSTOM = -3,
    PERCEIVED_TYPE_UNSPECIFIED = -2,
    PERCEIVED_TYPE_FOLDER = -1,
    PERCEIVED_TYPE_UNKNOWN = 0,
    PERCEIVED_TYPE_TEXT = 1,
    PERCEIVED_TYPE_IMAGE = 2,
    PERCEIVED_TYPE_AUDIO = 3,
    PERCEIVED_TYPE_VIDEO = 4,
    PERCEIVED_TYPE_COMPRESSED = 5,
    PERCEIVED_TYPE_DOCUMENT = 6,
    PERCEIVED_TYPE_SYSTEM = 7,
    PERCEIVED_TYPE_APPLICATION = 8,
    PERCEIVED_TYPE_GAMEMEDIA = 9,
    PERCEIVED_TYPE_CONTACTS = 10,
    PERCEIVED_TYPE_LAST = 10
};

typedef enum tagPOINTERINACTIVE {
    POINTERINACTIVE_ACTIVATEONENTRY = 1,
    POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
    POINTERINACTIVE_ACTIVATEONDRAG = 4
};

typedef enum tagPOINTER_BUTTON_CHANGE_TYPE {
    POINTER_CHANGE_NONE = 0,
    POINTER_CHANGE_FIRSTBUTTON_DOWN = 1,
    POINTER_CHANGE_FIRSTBUTTON_UP = 2,
    POINTER_CHANGE_SECONDBUTTON_DOWN = 3,
    POINTER_CHANGE_SECONDBUTTON_UP = 4,
    POINTER_CHANGE_THIRDBUTTON_DOWN = 5,
    POINTER_CHANGE_THIRDBUTTON_UP = 6,
    POINTER_CHANGE_FOURTHBUTTON_DOWN = 7,
    POINTER_CHANGE_FOURTHBUTTON_UP = 8,
    POINTER_CHANGE_FIFTHBUTTON_DOWN = 9,
    POINTER_CHANGE_FIFTHBUTTON_UP = 10
};

typedef enum tagPOINTER_DEVICE_CURSOR_TYPE {
    POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
    POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
    POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
    POINTER_DEVICE_CURSOR_TYPE_MAX = -1
};

typedef enum tagPOINTER_DEVICE_TYPE {
    POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
    POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
    POINTER_DEVICE_TYPE_TOUCH = 3,
    POINTER_DEVICE_TYPE_TOUCH_PAD = 4,
    POINTER_DEVICE_TYPE_MAX = -1
};

typedef enum tagPOINTER_INPUT_TYPE {
    PT_POINTER = 1,
    PT_TOUCH = 2,
    PT_PEN = 3,
    PT_MOUSE = 4,
    PT_TOUCHPAD = 5
};

typedef enum tagPROPBAG2_TYPE {
    PROPBAG2_TYPE_UNDEFINED = 0,
    PROPBAG2_TYPE_DATA = 1,
    PROPBAG2_TYPE_URL = 2,
    PROPBAG2_TYPE_OBJECT = 3,
    PROPBAG2_TYPE_STREAM = 4,
    PROPBAG2_TYPE_STORAGE = 5,
    PROPBAG2_TYPE_MONIKER = 6
};

typedef enum tagPROPPAGESTATUS {
    PROPPAGESTATUS_DIRTY = 1,
    PROPPAGESTATUS_VALIDATE = 2,
    PROPPAGESTATUS_CLEAN = 4
};

typedef enum tagPictureAttributes {
    PICTURE_SCALABLE = 1,
    PICTURE_TRANSPARENT = 2
};

typedef enum tagQACONTAINERFLAGS {
    QACONTAINER_SHOWHATCHING = 1,
    QACONTAINER_SHOWGRABHANDLES = 2,
    QACONTAINER_USERMODE = 4,
    QACONTAINER_DISPLAYASDEFAULT = 8,
    QACONTAINER_UIDEAD = 16,
    QACONTAINER_AUTOCLIP = 32,
    QACONTAINER_MESSAGEREFLECT = 64,
    QACONTAINER_SUPPORTSMNEMONICS = 128
};

typedef enum tagREADYSTATE {
    READYSTATE_UNINITIALIZED = 0,
    READYSTATE_LOADING = 1,
    READYSTATE_LOADED = 2,
    READYSTATE_INTERACTIVE = 3,
    READYSTATE_COMPLETE = 4
};

typedef enum tagREGCLS {
    REGCLS_SINGLEUSE = 0,
    REGCLS_MULTIPLEUSE = 1,
    REGCLS_MULTI_SEPARATE = 2,
    REGCLS_SUSPENDED = 4,
    REGCLS_SURROGATE = 8,
    REGCLS_AGILE = 16
};

typedef enum tagREGKIND {
    REGKIND_DEFAULT = 0,
    REGKIND_REGISTER = 1,
    REGKIND_NONE = 2
};

typedef enum tagRPCOPT_PROPERTIES {
    COMBND_RPCTIMEOUT = 1,
    COMBND_SERVER_LOCALITY = 2,
    COMBND_RESERVED1 = 4,
    COMBND_RESERVED2 = 5,
    COMBND_RESERVED3 = 8,
    COMBND_RESERVED4 = 16
};

typedef enum tagRPCOPT_SERVER_LOCALITY_VALUES {
    SERVER_LOCALITY_PROCESS_LOCAL = 0,
    SERVER_LOCALITY_MACHINE_LOCAL = 1,
    SERVER_LOCALITY_REMOTE = 2
};

typedef enum tagRpcCallClientLocality {
    rcclInvalid = 0,
    rcclLocal = 1,
    rcclRemote = 2,
    rcclClientUnknownLocality = 3
};

typedef enum tagRpcCallType {
    rctInvalid = 0,
    rctNormal = 1,
    rctTraining = 2,
    rctGuaranteed = 3
};

typedef enum tagRpcLocalAddressFormat {
    rlafInvalid = 0,
    rlafIPv4 = 1,
    rlafIPv6 = 2
};

typedef enum tagSCRIPTCONTF {
    sidDefault = 0,
    sidMerge = 1,
    sidAsciiSym = 2,
    sidAsciiLatin = 3,
    sidLatin = 4,
    sidGreek = 5,
    sidCyrillic = 6,
    sidArmenian = 7,
    sidHebrew = 8,
    sidArabic = 9,
    sidDevanagari = 10,
    sidBengali = 11,
    sidGurmukhi = 12,
    sidGujarati = 13,
    sidOriya = 14,
    sidTamil = 15,
    sidTelugu = 16,
    sidKannada = 17,
    sidMalayalam = 18,
    sidThai = 19,
    sidLao = 20,
    sidTibetan = 21,
    sidGeorgian = 22,
    sidHangul = 23,
    sidKana = 24,
    sidBopomofo = 25,
    sidHan = 26,
    sidEthiopic = 27,
    sidCanSyllabic = 28,
    sidCherokee = 29,
    sidYi = 30,
    sidBraille = 31,
    sidRunic = 32,
    sidOgham = 33,
    sidSinhala = 34,
    sidSyriac = 35,
    sidBurmese = 36,
    sidKhmer = 37,
    sidThaana = 38,
    sidMongolian = 39,
    sidUserDefined = 40,
    sidLim = 41,
    sidFEFirst = 23,
    sidFELast = 26
};

typedef enum tagSCRIPTFONTCONTF {
    SCRIPTCONTF_FIXED_FONT = 1,
    SCRIPTCONTF_PROPORTIONAL_FONT = 2,
    SCRIPTCONTF_SCRIPT_USER = 0x10000,
    SCRIPTCONTF_SCRIPT_HIDE = 0x20000,
    SCRIPTCONTF_SCRIPT_SYSTEM = 0x40000
};

typedef enum tagSCRIPTGCTYPE {
    SCRIPTGCTYPE_NORMAL = 0,
    SCRIPTGCTYPE_EXHAUSTIVE = 1
};

typedef enum tagSCRIPTLANGUAGEVERSION {
    SCRIPTLANGUAGEVERSION_DEFAULT = 0,
    SCRIPTLANGUAGEVERSION_5_7 = 1,
    SCRIPTLANGUAGEVERSION_5_8 = 2,
    SCRIPTLANGUAGEVERSION_MAX = 255
};

typedef enum tagSCRIPTSTATE {
    SCRIPTSTATE_UNINITIALIZED = 0,
    SCRIPTSTATE_INITIALIZED = 5,
    SCRIPTSTATE_STARTED = 1,
    SCRIPTSTATE_CONNECTED = 2,
    SCRIPTSTATE_DISCONNECTED = 3,
    SCRIPTSTATE_CLOSED = 4
};

typedef enum tagSCRIPTTHREADSTATE {
    SCRIPTTHREADSTATE_NOTINSCRIPT = 0,
    SCRIPTTHREADSTATE_RUNNING = 1
};

typedef enum tagSCRIPTTRACEINFO {
    SCRIPTTRACEINFO_SCRIPTSTART = 0,
    SCRIPTTRACEINFO_SCRIPTEND = 1,
    SCRIPTTRACEINFO_COMCALLSTART = 2,
    SCRIPTTRACEINFO_COMCALLEND = 3,
    SCRIPTTRACEINFO_CREATEOBJSTART = 4,
    SCRIPTTRACEINFO_CREATEOBJEND = 5,
    SCRIPTTRACEINFO_GETOBJSTART = 6,
    SCRIPTTRACEINFO_GETOBJEND = 7
};

typedef enum tagSCRIPTUICHANDLING {
    SCRIPTUICHANDLING_ALLOW = 0,
    SCRIPTUICHANDLING_NOUIERROR = 1,
    SCRIPTUICHANDLING_NOUIDEFAULT = 2
};

typedef enum tagSCRIPTUICITEM {
    SCRIPTUICITEM_INPUTBOX = 1,
    SCRIPTUICITEM_MSGBOX = 2
};

typedef enum tagSERVERCALL {
    SERVERCALL_ISHANDLED = 0,
    SERVERCALL_REJECTED = 1,
    SERVERCALL_RETRYLATER = 2
};

typedef enum tagSFBS_FLAGS {
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT = 1,
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS = 2
};

typedef enum tagSF_TYPE {
    SF_ERROR = 10,
    SF_I1 = 16,
    SF_I2 = 2,
    SF_I4 = 3,
    SF_I8 = 20,
    SF_BSTR = 8,
    SF_UNKNOWN = 13,
    SF_DISPATCH = 9,
    SF_VARIANT = 12,
    SF_RECORD = 36,
    SF_HAVEIID = 0x800d
};

typedef enum tagSHCOLSTATE {
    SHCOLSTATE_DEFAULT = 0,
    SHCOLSTATE_TYPE_STR = 1,
    SHCOLSTATE_TYPE_INT = 2,
    SHCOLSTATE_TYPE_DATE = 3,
    SHCOLSTATE_TYPEMASK = 15,
    SHCOLSTATE_ONBYDEFAULT = 16,
    SHCOLSTATE_SLOW = 32,
    SHCOLSTATE_EXTENDED = 64,
    SHCOLSTATE_SECONDARYUI = 128,
    SHCOLSTATE_HIDDEN = 256,
    SHCOLSTATE_PREFER_VARCMP = 512,
    SHCOLSTATE_PREFER_FMTCMP = 1024,
    SHCOLSTATE_NOSORTBYFOLDERNESS = 2048,
    SHCOLSTATE_VIEWONLY = 0x10000,
    SHCOLSTATE_BATCHREAD = 0x20000,
    SHCOLSTATE_NO_GROUPBY = 0x40000,
    SHCOLSTATE_FIXED_WIDTH = 4096,
    SHCOLSTATE_NODPISCALE = 8192,
    SHCOLSTATE_FIXED_RATIO = 16384,
    SHCOLSTATE_DISPLAYMASK = 0xf000
};

typedef enum tagSTATFLAG {
    STATFLAG_DEFAULT = 0,
    STATFLAG_NONAME = 1,
    STATFLAG_NOOPEN = 2
};

typedef enum tagSTDMSHLFLAGS {
    SMEXF_SERVER = 1,
    SMEXF_HANDLER = 2
};

typedef enum tagSTGC {
    STGC_DEFAULT = 0,
    STGC_OVERWRITE = 1,
    STGC_ONLYIFCURRENT = 2,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
    STGC_CONSOLIDATE = 8
};

typedef enum tagSTGMOVE {
    STGMOVE_MOVE = 0,
    STGMOVE_COPY = 1,
    STGMOVE_SHALLOWCOPY = 2
};

typedef enum tagSTGTY {
    STGTY_STORAGE = 1,
    STGTY_STREAM = 2,
    STGTY_LOCKBYTES = 3,
    STGTY_PROPERTY = 4
};

typedef enum tagSTREAM_SEEK {
    STREAM_SEEK_SET = 0,
    STREAM_SEEK_CUR = 1,
    STREAM_SEEK_END = 2
};

typedef enum tagSTRRET_TYPE {
    STRRET_WSTR = 0,
    STRRET_OFFSET = 1,
    STRRET_CSTR = 2
};

typedef enum tagSYSKIND {
    SYS_WIN16 = 0,
    SYS_WIN32 = 1,
    SYS_MAC = 2,
    SYS_WIN64 = 3
};

typedef enum tagShutdownType {
    IdleShutdown = 0,
    ForcedShutdown = 1
};

typedef enum tagTYMED {
    TYMED_HGLOBAL = 1,
    TYMED_FILE = 2,
    TYMED_ISTREAM = 4,
    TYMED_ISTORAGE = 8,
    TYMED_GDI = 16,
    TYMED_MFPICT = 32,
    TYMED_ENHMF = 64,
    TYMED_NULL = 0
};

typedef enum tagTYPEFLAGS {
    TYPEFLAG_FAPPOBJECT = 1,
    TYPEFLAG_FCANCREATE = 2,
    TYPEFLAG_FLICENSED = 4,
    TYPEFLAG_FPREDECLID = 8,
    TYPEFLAG_FHIDDEN = 16,
    TYPEFLAG_FCONTROL = 32,
    TYPEFLAG_FDUAL = 64,
    TYPEFLAG_FNONEXTENSIBLE = 128,
    TYPEFLAG_FOLEAUTOMATION = 256,
    TYPEFLAG_FRESTRICTED = 512,
    TYPEFLAG_FAGGREGATABLE = 1024,
    TYPEFLAG_FREPLACEABLE = 2048,
    TYPEFLAG_FDISPATCHABLE = 4096,
    TYPEFLAG_FREVERSEBIND = 8192,
    TYPEFLAG_FPROXY = 16384
};

typedef enum tagTYPEKIND {
    TKIND_ENUM = 0,
    TKIND_RECORD = 1,
    TKIND_MODULE = 2,
    TKIND_INTERFACE = 3,
    TKIND_DISPATCH = 4,
    TKIND_COCLASS = 5,
    TKIND_ALIAS = 6,
    TKIND_UNION = 7,
    TKIND_MAX = 8
};

typedef enum tagTYSPEC {
    TYSPEC_CLSID = 0,
    TYSPEC_FILEEXT = 1,
    TYSPEC_MIMETYPE = 2,
    TYSPEC_FILENAME = 3,
    TYSPEC_PROGID = 4,
    TYSPEC_PACKAGENAME = 5,
    TYSPEC_OBJECTID = 6
};

typedef enum tagUASFLAGS {
    UAS_NORMAL = 0,
    UAS_BLOCKED = 1,
    UAS_NOPARENTENABLE = 2,
    UAS_MASK = 3
};

typedef enum tagURLTEMPLATE {
    URLTEMPLATE_CUSTOM = 0,
    URLTEMPLATE_PREDEFINED_MIN = 0x10000,
    URLTEMPLATE_LOW = 0x10000,
    URLTEMPLATE_MEDLOW = 0x10500,
    URLTEMPLATE_MEDIUM = 0x11000,
    URLTEMPLATE_MEDHIGH = 0x11500,
    URLTEMPLATE_HIGH = 0x12000,
    URLTEMPLATE_PREDEFINED_MAX = 0x20000
};

typedef enum tagURLZONE {
    URLZONE_INVALID = -1,
    URLZONE_PREDEFINED_MIN = 0,
    URLZONE_LOCAL_MACHINE = 0,
    URLZONE_INTRANET = 1,
    URLZONE_TRUSTED = 2,
    URLZONE_INTERNET = 3,
    URLZONE_UNTRUSTED = 4,
    URLZONE_PREDEFINED_MAX = 999,
    URLZONE_USER_MIN = 1000,
    URLZONE_USER_MAX = 10000
};

typedef enum tagUSERCLASSTYPE {
    USERCLASSTYPE_FULL = 1,
    USERCLASSTYPE_SHORT = 2,
    USERCLASSTYPE_APPNAME = 3
};

typedef enum tagVARFLAGS {
    VARFLAG_FREADONLY = 1,
    VARFLAG_FSOURCE = 2,
    VARFLAG_FBINDABLE = 4,
    VARFLAG_FREQUESTEDIT = 8,
    VARFLAG_FDISPLAYBIND = 16,
    VARFLAG_FDEFAULTBIND = 32,
    VARFLAG_FHIDDEN = 64,
    VARFLAG_FRESTRICTED = 128,
    VARFLAG_FDEFAULTCOLLELEM = 256,
    VARFLAG_FUIDEFAULT = 512,
    VARFLAG_FNONBROWSABLE = 1024,
    VARFLAG_FREPLACEABLE = 2048,
    VARFLAG_FIMMEDIATEBIND = 4096
};

typedef enum tagVARKIND {
    VAR_PERINSTANCE = 0,
    VAR_STATIC = 1,
    VAR_CONST = 2,
    VAR_DISPATCH = 3
};

typedef enum tagVIEWSTATUS {
    VIEWSTATUS_OPAQUE = 1,
    VIEWSTATUS_SOLIDBKGND = 2,
    VIEWSTATUS_DVASPECTOPAQUE = 4,
    VIEWSTATUS_DVASPECTTRANSPARENT = 8,
    VIEWSTATUS_SURFACE = 16,
    VIEWSTATUS_3DSURFACE = 32
};

typedef enum tagXFORMCOORDS {
    XFORMCOORDS_POSITION = 1,
    XFORMCOORDS_SIZE = 2,
    XFORMCOORDS_HIMETRICTOCONTAINER = 4,
    XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
    XFORMCOORDS_EVENTCOMPAT = 16
};

typedef enum tagXMLEMEM_TYPE {
    XMLELEMTYPE_ELEMENT = 0,
    XMLELEMTYPE_TEXT = 1,
    XMLELEMTYPE_COMMENT = 2,
    XMLELEMTYPE_DOCUMENT = 3,
    XMLELEMTYPE_DTD = 4,
    XMLELEMTYPE_PI = 5,
    XMLELEMTYPE_OTHER = 6
};

typedef enum tagXMLNotifyPhase {
    XML_PHASE_AboutToDo = 0,
    XML_PHASE_FailedToDo = 1,
    XML_PHASE_DidEvent = 2
};

typedef enum tagXMLNotifyReason {
    XML_REASON_TextChanged = 0,
    XML_REASON_NodeAdded = 1,
    XML_REASON_NodeRemoved = 2
};

typedef enum threading_e {
    apartment = 1,
    single = 2,
    free = 3,
    neutral = 4,
    both = 5
};

typedef enum type_e {
    native = 0,
    com = 1,
    managed = 2
};

typedef enum usage_e {
    eAnyUsage = 0,
    eCoClassUsage = 1,
    eCOMInterfaceUsage = 2,
    eInterfaceUsage = 6,
    eMemberUsage = 8,
    eMethodUsage = 16,
    eInterfaceMethodUsage = 32,
    eInterfaceMemberUsage = 64,
    eCoClassMemberUsage = 128,
    eCoClassMethodUsage = 256,
    eGlobalMethodUsage = 768,
    eGlobalDataUsage = 1024,
    eClassUsage = 2048,
    eInterfaceParameterUsage = 4096,
    eMethodParameterUsage = 12288,
    eIDLModuleUsage = 16384,
    eAnonymousUsage = 0x8000,
    eTypedefUsage = 0x10000,
    eUnionUsage = 0x20000,
    eEnumUsage = 0x40000,
    eDefineTagUsage = 0x80000,
    eStructUsage = 0x100000,
    eLocalUsage = 0x200000,
    ePropertyUsage = 0x400000,
    eEventUsage = 0x800000,
    eTemplateUsage = 0x1000000,
    eModuleUsage = 0x1000000,
    eIllegalUsage = 0x2000000,
    eAsynchronousUsage = 0x4000000,
    eAnyIDLUsage = 0x3f7fff
};

typedef enum wil::CustomReportingKind {
    Custom1 = 0,
    Custom2 = 1,
    Custom3 = 2
};

typedef enum wil::ErrorReturn {
    Auto = 0,
    None = 1
};

typedef enum wil::EventOptions {
    None = 0,
    ManualReset = 1,
    Signaled = 2
};

typedef enum wil::FailureType {
    Exception = 0,
    Return = 1,
    Log = 2,
    FailFast = 3
};

typedef enum wil::FeatureChangeTime {
    OnRead = 0,
    OnReload = 1,
    OnReboot = 3
};

typedef enum wil::FeatureControlKind {
    All = 0,
    Service = 1,
    User = 2,
    Testing = 3
};

typedef enum wil::FeatureEnabledState {
    Default = 0,
    Disabled = 1,
    Enabled = 2
};

typedef enum wil::FeaturePropertyGroupFlags {
    None = 0,
    StaticProperties = 1,
    FeatureEnabledState = 2
};

typedef enum wil::FeatureStage {
    AlwaysDisabled = 0,
    DisabledByDefault = 1,
    EnabledByDefault = 2,
    AlwaysEnabled = 3
};

typedef enum wil::FeatureString {
    Name = 0,
    Description = 1,
    GroupName = 2,
    GroupDescription = 3,
    EMail = 4,
    Link = 5
};

typedef enum wil::FeatureUsageKind {
    ImplicitOpportunityCount = 0,
    ImplicitUsageCount = 1,
    OpportunityCount = 2,
    UsageCount = 3,
    TotalDuration = 4,
    PausedDuration = 5,
    Custom1 = 11,
    Custom2 = 12,
    Custom3 = 13,
    Custom4 = 14,
    Custom5 = 15
};

typedef enum wil::ReportingKind {
    None = 0,
    UniqueUsage = 1,
    UniqueOpportunity = 2,
    DeviceUsage = 3,
    DeviceOpportunity = 4,
    TotalDuration = 5,
    PausedDuration = 6
};

typedef enum wil::SlimEventType {
    AutoReset = 0,
    ManualReset = 1
};

typedef enum wil::StagingControlActions {
    Default = 0,
    Replace = 1
};

typedef enum wil::SupportedExceptions {
    Default = 0,
    Known = 1,
    All = 2,
    None = 3,
    Thrown = 4,
    ThrownOrAlloc = 5
};

typedef enum wil::UsageReportingMode {
    Default = 0,
    SuppressPotential = 1,
    SuppressImplicit = 2
};

typedef enum wil::VariantReportingKind {
    None = 0,
    UniqueUsage = 1,
    DeviceUsage = 2
};

typedef enum wil::WilInitializeCommand {
    Create = 0,
    Destroy = 1
};

typedef enum wil::details::EmptyVariant {
    None = 0
};

typedef enum wil::details::PendingCallbackCancellationBehavior {
    Cancel = 0,
    Wait = 1,
    NoWait = 2
};

typedef enum wil::details::ReportFailureOptions {
    None = 0,
    ForcePlatformException = 1,
    SuppressAction = 2,
    MayRethrow = 4
};

typedef enum wil::details::StagingConfigurationFlags {
    Default = 0,
    IgnoreServiceControls = 1,
    IgnoreUserControls = 2,
    IgnoreTestControls = 4,
    IgnoreVariants = 8
};

typedef enum wil::details_abi::CountSize {
    None = 0,
    UnsignedShort = 1,
    UnsignedLong = 2
};

typedef enum wil::details_abi::UsageIndexesLoadOptions {
    None = 0,
    Clear = 1
};

typedef enum wil_FeatureChangeTime {
    wil_FeatureChangeTime_OnRead = 0,
    wil_FeatureChangeTime_OnReload = 1,
    wil_FeatureChangeTime_OnSession = 2,
    wil_FeatureChangeTime_OnReboot = 3
};

typedef enum wil_FeatureEnabledState {
    wil_FeatureEnabledState_Default = 0,
    wil_FeatureEnabledState_Disabled = 1,
    wil_FeatureEnabledState_Enabled = 2
};

typedef enum wil_FeatureEnabledStateKind {
    wil_FeatureEnabledStateKind_All = 0,
    wil_FeatureEnabledStateKind_Service = 1,
    wil_FeatureEnabledStateKind_User = 2,
    wil_FeatureEnabledStateKind_Test = 3
};

typedef enum wil_FeatureEnabledStateOptions {
    wil_FeatureEnabledStateOptions_None = 0,
    wil_FeatureEnabledStateOptions_VariantConfig = 1
};

typedef enum wil_FeatureStage {
    wil_FeatureStage_AlwaysDisabled = 0,
    wil_FeatureStage_DisabledByDefault = 1,
    wil_FeatureStage_EnabledByDefault = 2,
    wil_FeatureStage_AlwaysEnabled = 3
};

typedef enum wil_FeatureStore {
    wil_FeatureStore_Machine = 0,
    wil_FeatureStore_User = 1,
    wil_FeatureStore_All = 2
};

typedef enum wil_FeatureVariantPayloadKind {
    wil_FeatureVariantPayloadKind_None = 0,
    wil_FeatureVariantPayloadKind_Resident = 1,
    wil_FeatureVariantPayloadKind_External = 2
};

typedef enum wil_ReportingKind {
    wil_ReportingKind_None = 0,
    wil_ReportingKind_UniqueUsage = 1,
    wil_ReportingKind_UniqueOpportunity = 2,
    wil_ReportingKind_DeviceUsage = 3,
    wil_ReportingKind_DeviceOpportunity = 4,
    wil_ReportingKind_TotalDuration = 5,
    wil_ReportingKind_PausedDuration = 6
};

typedef enum wil_UsageReportingMode {
    wil_UsageReportingMode_Default = 0,
    wil_UsageReportingMode_SuppressPotential = 1,
    wil_UsageReportingMode_SuppressImplicit = 2
};

typedef enum wil_VariantPayloadType {
    wil_VariantPayloadType_None = 0,
    wil_VariantPayloadType_Fixed = 1
};

typedef enum wil_VariantReportingKind {
    wil_VariantReportingKind_None = 0,
    wil_VariantReportingKind_UniqueUsage = 1,
    wil_VariantReportingKind_DeviceUsage = 2
};

typedef enum wil_details_CachedFeatureEnabledState {
    wil_details_CachedFeatureEnabledState_Unknown = 0,
    wil_details_CachedFeatureEnabledState_Disabled = 1,
    wil_details_CachedFeatureEnabledState_Enabled = 2,
    wil_details_CachedFeatureEnabledState_Desired = 3
};

typedef enum wil_details_CachedHasNotificationState {
    wil_details_CachedHasNotificationState_Unknown = 0,
    wil_details_CachedHasNotificationState_DoesNotHaveNotifications = 1,
    wil_details_CachedHasNotificationState_HasNotification = 2
};

typedef enum wil_details_FeatureTestStateKind {
    wil_details_FeatureTestStateKind_EnabledState = 0,
    wil_details_FeatureTestStateKind_Variant = 1
};

typedef enum wil_details_ServiceReportingKind {
    wil_details_ServiceReportingKind_UniqueUsage = 0,
    wil_details_ServiceReportingKind_UniqueOpportunity = 1,
    wil_details_ServiceReportingKind_DeviceUsage = 2,
    wil_details_ServiceReportingKind_DeviceOpportunity = 3,
    wil_details_ServiceReportingKind_PotentialUniqueUsage = 4,
    wil_details_ServiceReportingKind_PotentialUniqueOpportunity = 5,
    wil_details_ServiceReportingKind_PotentialDeviceUsage = 6,
    wil_details_ServiceReportingKind_PotentialDeviceOpportunity = 7,
    wil_details_ServiceReportingKind_EnabledTotalDuration = 8,
    wil_details_ServiceReportingKind_EnabledPausedDuration = 9,
    wil_details_ServiceReportingKind_DisabledTotalDuration = 10,
    wil_details_ServiceReportingKind_DisabledPausedDuration = 11,
    wil_details_ServiceReportingKind_CustomEnabledBase = 100,
    wil_details_ServiceReportingKind_CustomDisabledBase = 150,
    wil_details_ServiceReportingKind_Store = 254,
    wil_details_ServiceReportingKind_None = 255,
    wil_details_ServiceReportingKind_VariantDevicePotentialBase = 256,
    wil_details_ServiceReportingKind_VariantDeviceUsageBase = 320,
    wil_details_ServiceReportingKind_VariantUniquePotentialBase = 384,
    wil_details_ServiceReportingKind_VariantUniqueUsageBase = 448
};

typedef enum wil_details_ServiceReportingOptions {
    wil_details_ServiceReportingOptions_None = 0,
    wil_details_ServiceReportingOptions_VariantConfig = 1
};

typedef enum wil_details_StagingConfigFeatureFields {
    wil_details_StagingConfigFeatureFields_None = 0,
    wil_details_StagingConfigFeatureFields_ServiceState = 1,
    wil_details_StagingConfigFeatureFields_UserState = 2,
    wil_details_StagingConfigFeatureFields_TestState = 4,
    wil_details_StagingConfigFeatureFields_Variant = 8
};

typedef enum xinit {
    COPY = 0,
    OWN = 1,
    BORROW = 2
};

typedef enum xstring::xinit {
    COPY = 0,
    OWN = 1,
    BORROW = 2
};

$xdatasym;
ASTBuilder::`vftable';
AbsoluteMatcher::`vftable';
AbsoluteNode::_ndAbs;
AbsoluteNode::`vftable';
AbsoluteNodeSet::`vftable';
AliasFixup::`vftable';
AliasInfo::`vftable';
AllSubelements;
AlternateIID___FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument;
AlternateIID___FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument;
AlternateIID___x_Windows_CFoundation_CIAsyncAction;
AlternateIID___x_Windows_CFoundation_CIAsyncActionCompletedHandler;
AlwaysAttrFilter::_filter;
AlwaysAttrFilter::`vftable';
AlwaysFilter::_filter;
AlwaysFilter::`vftable';
AlwaysNmspFilter::_filter;
AlwaysNmspFilter::`vftable';
AncestorNodeSet::`vftable';
AnnotatedSubelements;
AnnotationAttributes;
AnnotationSubelements;
AnyAttributeAttributes;
AnyAttributes;
AnyNode::`vftable';
ApartmentMutex::`vftable';
ApiSetExists_ext_ms_win_ntuser_synch_l1_1_0;
ApiSetExists_ext_ms_win_ntuser_window_l1_1_0;
ApiSetExists_ext_ms_win_ntuser_window_l1_1_1;
ApiSetExists_ext_ms_win_ntuser_window_l1_1_2;
ApiSetExists_ext_ms_win_ntuser_window_l1_1_3;
ApiSetExists_ext_ms_win_ntuser_window_l1_1_4;
ApiSetExists_ext_ms_win_ole32_bindctx_l1_1_0;
ApiSetExists_ext_ms_win_rtcore_ntuser_cursor_l1_1_0;
ApiSetExists_ext_ms_win_rtcore_ntuser_cursor_l1_1_1;
ApiSetName_ext_ms_win_ntuser_synch_l1_1_0;
ApiSetName_ext_ms_win_ntuser_window_l1_1_0;
ApiSetName_ext_ms_win_ntuser_window_l1_1_1;
ApiSetName_ext_ms_win_ntuser_window_l1_1_2;
ApiSetName_ext_ms_win_ntuser_window_l1_1_3;
ApiSetName_ext_ms_win_ntuser_window_l1_1_4;
ApiSetName_ext_ms_win_ole32_bindctx_l1_1_0;
ApiSetName_ext_ms_win_rtcore_ntuser_cursor_l1_1_0;
ApiSetName_ext_ms_win_rtcore_ntuser_cursor_l1_1_1;
AppinfoAttributes;
ApplyCompile::`vftable';
ApplyImportFixup::`vftable';
ApplyOptimizer::`vftable';
ApplyTemplFixup::`vftable';
ArrayString::`vftable';
Atom::`vftable';
Atom::s_emptyAtom;
Atom::s_pAtoms;
AttDef::`vftable';
AttrSetCompile::`vftable';
AttrSetFixup::`vftable';
AttrSetSymbol::`vftable';
AttributeAttributes;
AttributeGroupAttributes;
AttributeGroupRefAttributes;
AttributeGroupSubelements;
AttributeSubelements;
Attributes::`vftable';
AttributesWrapper::`vftable';
BaseFilter::s_nodeTypeToMatchType;
BitSet::`vftable';
BoolExpr::_rootExpr;
BooleanNode::`vftable';
BuffString::`vftable';
BufferedStream::`vftable';
BuiltInNodeSet::`vftable';
CATID_ActiveScriptParse;
CATID_SafeForInitializing;
CATID_SafeForScripting;
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::`vftable';
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::`vftable';
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::`vftable';
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::`vftable';
CLSID_CMultiLanguage;
CLSID_DOMDocument60;
CLSID_FreeThreadedDOMDocument60;
CLSID_FreeThreadedXMLHTTP60;
CLSID_GlobalOptions;
CLSID_InternetSecurityManager;
CLSID_MXHTMLWriter60;
CLSID_MXNamespaceManager60;
CLSID_MXXMLWriter60;
CLSID_PSFactoryBuffer;
CLSID_SAXAttributes60;
CLSID_SAXXMLReader60;
CLSID_ServerXMLHTTP60;
CLSID_StdComponentCategoriesMgr;
CLSID_StdGlobalInterfaceTable;
CLSID_VBScript;
CLSID_WinHttpRequest51;
CLSID_XMLHTTP60;
CLSID_XMLSchemaCache60;
CLSID_XSLTemplate60;
CSMutex::`vftable';
CXMLConnectionPt::`vftable';
CXMLConnectionPtContainer::`vftable';
CXMLEnumConnectionPt::`vftable';
CXMLEnumConnections::`vftable';
CacheNodeSet::`vftable';
CacheRevNodeSet::`vftable';
CachingStream::`vftable';
CachingStreamForExternal::`vftable';
CallTemplFixup::`vftable';
CallbackStream::`vftable';
CastNode::`vftable';
CharEncoder::charsetInfo;
CharacterSourceFactory::_rgEncoding2CodePage;
ChildMatcher::`vftable';
ChildNodeSet::`vftable';
ChildNodeSetStack::`vftable';
ChoiceSequenceSubelements;
ChooseCompile::`vftable';
ClassFactory::`vftable';
CodeStringPtr::ANY;
CodeStringPtr::ANY_pwh;
CodeStringPtr::CDATA;
CodeStringPtr::CDATA_pwh;
CodeStringPtr::EMPTY;
CodeStringPtr::EMPTY_pwh;
CodeStringPtr::ENTITIES;
CodeStringPtr::ENTITIES_pwh;
CodeStringPtr::ENTITY;
CodeStringPtr::ENTITY_pwh;
CodeStringPtr::FIXED;
CodeStringPtr::FIXED_pwh;
CodeStringPtr::ID;
CodeStringPtr::IDREF;
CodeStringPtr::IDREFS;
CodeStringPtr::IDREFS_pwh;
CodeStringPtr::IDREF_pwh;
CodeStringPtr::ID_pwh;
CodeStringPtr::IMPLIED;
CodeStringPtr::IMPLIED_pwh;
CodeStringPtr::NMTOKEN;
CodeStringPtr::NMTOKENS;
CodeStringPtr::NMTOKENS_pwh;
CodeStringPtr::NMTOKEN_pwh;
CodeStringPtr::REQUIRED;
CodeStringPtr::REQUIRED_pwh;
CodeStringPtr::amp;
CodeStringPtr::ampValue;
CodeStringPtr::ampValue_pwh;
CodeStringPtr::amp_pwh;
CodeStringPtr::apos;
CodeStringPtr::aposValue;
CodeStringPtr::aposValue_pwh;
CodeStringPtr::apos_pwh;
CodeStringPtr::charset;
CodeStringPtr::charset_pwh;
CodeStringPtr::contentHandler;
CodeStringPtr::contentHandler_pwh;
CodeStringPtr::declarationHandler;
CodeStringPtr::declarationHandler_pwh;
CodeStringPtr::domNode;
CodeStringPtr::domNode_pwh;
CodeStringPtr::dtd;
CodeStringPtr::dtd_pwh;
CodeStringPtr::ebcdiccpus;
CodeStringPtr::ebcdiccpus_pwh;
CodeStringPtr::empty;
CodeStringPtr::empty_pwh;
CodeStringPtr::encoding;
CodeStringPtr::encoding_pwh;
CodeStringPtr::exhaustiveErrors;
CodeStringPtr::exhaustiveErrors_pwh;
CodeStringPtr::externalGeneralEntities;
CodeStringPtr::externalGeneralEntities_pwh;
CodeStringPtr::externalParameterEntities;
CodeStringPtr::externalParameterEntities_pwh;
CodeStringPtr::forcedResync;
CodeStringPtr::forcedResync_pwh;
CodeStringPtr::gt;
CodeStringPtr::gtValue;
CodeStringPtr::gtValue_pwh;
CodeStringPtr::gt_pwh;
CodeStringPtr::inputSource;
CodeStringPtr::inputSource_pwh;
CodeStringPtr::iso10646ucs2;
CodeStringPtr::iso10646ucs2_pwh;
CodeStringPtr::iso10646ucs4;
CodeStringPtr::iso10646ucs4_pwh;
CodeStringPtr::iso88591;
CodeStringPtr::iso88591_pwh;
CodeStringPtr::iso88592;
CodeStringPtr::iso88592_pwh;
CodeStringPtr::iso88593;
CodeStringPtr::iso88593_pwh;
CodeStringPtr::iso88594;
CodeStringPtr::iso88594_pwh;
CodeStringPtr::iso88595;
CodeStringPtr::iso88595_pwh;
CodeStringPtr::iso88596;
CodeStringPtr::iso88596_pwh;
CodeStringPtr::iso88597;
CodeStringPtr::iso88597_pwh;
CodeStringPtr::iso88598;
CodeStringPtr::iso88598_pwh;
CodeStringPtr::iso88599;
CodeStringPtr::iso88599_pwh;
CodeStringPtr::lexicalHandler;
CodeStringPtr::lexicalHandlerParameterEntities;
CodeStringPtr::lexicalHandlerParameterEntities_pwh;
CodeStringPtr::lexicalHandler_pwh;
CodeStringPtr::lt;
CodeStringPtr::ltValue;
CodeStringPtr::ltValue_pwh;
CodeStringPtr::lt_pwh;
CodeStringPtr::maxElementDepth;
CodeStringPtr::maxElementDepth_pwh;
CodeStringPtr::maxXmlSize;
CodeStringPtr::maxXmlSize_pwh;
CodeStringPtr::namespacePrefixes;
CodeStringPtr::namespacePrefixes_pwh;
CodeStringPtr::namespaces;
CodeStringPtr::namespaces_pwh;
CodeStringPtr::no;
CodeStringPtr::no_pwh;
CodeStringPtr::opz;
CodeStringPtr::opz_pwh;
CodeStringPtr::percent;
CodeStringPtr::percent_pwh;
CodeStringPtr::preserveSystemIdentifiers;
CodeStringPtr::preserveSystemIdentifiers_pwh;
CodeStringPtr::prohibitDTD;
CodeStringPtr::prohibitDTD_pwh;
CodeStringPtr::quot;
CodeStringPtr::quotValue;
CodeStringPtr::quotValue_pwh;
CodeStringPtr::quot_pwh;
CodeStringPtr::schemaDeclarationHandler;
CodeStringPtr::schemaDeclarationHandler_pwh;
CodeStringPtr::schemaValidation;
CodeStringPtr::schemaValidation_pwh;
CodeStringPtr::schemas;
CodeStringPtr::schemas_pwh;
CodeStringPtr::serverHttpRequest;
CodeStringPtr::serverHttpRequest_pwh;
CodeStringPtr::standalone;
CodeStringPtr::standalone_pwh;
CodeStringPtr::suppressValFatalError;
CodeStringPtr::suppressValFatalError_pwh;
CodeStringPtr::ucs2;
CodeStringPtr::ucs2_pwh;
CodeStringPtr::ucs4;
CodeStringPtr::ucs4_pwh;
CodeStringPtr::unicode;
CodeStringPtr::unicode_pwh;
CodeStringPtr::usascii;
CodeStringPtr::usascii_pwh;
CodeStringPtr::useInlineSchema;
CodeStringPtr::useInlineSchema_pwh;
CodeStringPtr::useSchemaLocation;
CodeStringPtr::useSchemaLocation_pwh;
CodeStringPtr::utf16;
CodeStringPtr::utf16_pwh;
CodeStringPtr::utf16be;
CodeStringPtr::utf16be_pwh;
CodeStringPtr::utf16le;
CodeStringPtr::utf16le_pwh;
CodeStringPtr::utf8;
CodeStringPtr::utf8_pwh;
CodeStringPtr::version;
CodeStringPtr::version_pwh;
CodeStringPtr::windows1250;
CodeStringPtr::windows1250_pwh;
CodeStringPtr::windows1251;
CodeStringPtr::windows1251_pwh;
CodeStringPtr::windows1252;
CodeStringPtr::windows1252_pwh;
CodeStringPtr::windows1253;
CodeStringPtr::windows1253_pwh;
CodeStringPtr::windows1254;
CodeStringPtr::windows1254_pwh;
CodeStringPtr::windows1255;
CodeStringPtr::windows1255_pwh;
CodeStringPtr::windows1256;
CodeStringPtr::windows1256_pwh;
CodeStringPtr::windows1257;
CodeStringPtr::windows1257_pwh;
CodeStringPtr::windows1258;
CodeStringPtr::windows1258_pwh;
CodeStringPtr::xml;
CodeStringPtr::xmlDeclEncoding;
CodeStringPtr::xmlDeclEncoding_pwh;
CodeStringPtr::xmlDeclStandalone;
CodeStringPtr::xmlDeclStandalone_pwh;
CodeStringPtr::xmlDeclVersion;
CodeStringPtr::xmlDeclVersion_pwh;
CodeStringPtr::xmlUri;
CodeStringPtr::xmlUri_pwh;
CodeStringPtr::xml_pwh;
CodeStringPtr::xmlns;
CodeStringPtr::xmlnsUri;
CodeStringPtr::xmlnsUri_pwh;
CodeStringPtr::xmlns_pwh;
CodeStringPtr::yes;
CodeStringPtr::yes_pwh;
CompareNode::`vftable';
CompiledIdentityConstraint::`vftable';
ComplexContentAttributes;
ComplexContentExtensionAttributes;
ComplexContentExtensionSubelements;
ComplexContentRestrictionAttributes;
ComplexContentRestrictionSubelements;
ComplexContentSubelements;
ComplexTypeAttributes;
ComplexTypeSubelements;
ConstraintStruct::`vftable';
ConstraintsManager::`vftable';
ContentHandlerWrapper::`vftable';
ContentModel::`vftable';
ContentModelAny::`vftable';
ContentModelEmpty::`vftable';
ContentModelStatic::`vftable';
ContentModelTextOnly::`vftable';
ContextNode::_ndCtxt;
ContextNode::`vftable';
CopyCompile::`vftable';
CountNodeSet::`vftable';
CountRevNodeSet::`vftable';
CurrentMatcher::_matcher;
CurrentMatcher::`vftable';
DIID_XMLDOMDocumentEvents;
DOMAttributeValueCollapseVisitor::`vftable';
DOMAttributesAdapter::`vftable';
DOMChildList::`vftable';
DOMDocumentWrapper::`vftable';
DOMDocumentWrapper::s_PropertyMap;
DOMError::`vftable';
DOMError::s_pSuccessParseErrorObj;
DOMErrorCollection::`vftable';
DOMImplementation::`vftable';
DOMNamedNodeMapList::`vftable';
DOMNode::`vftable';
DOMNode::aDispInfo;
DOMPreserveVisitor::`vftable';
DOMProcessor::`vftable';
DOMProcessor::noUriEscaping;
DOMProcessor::noUriEscaping_pwh;
DOMSupportErrorInfoTear::`vftable';
DOMTemplate::`vftable';
DOMTemplate::s_nMaxProcessors;
DOMTrimVisitor::`vftable';
DOMXmlSpaceVisitor::`vftable';
DTD::`vftable';
DTDFactory::`vftable';
DTDFactory::s_aAttDefCallbacks;
DTDFactory::s_aDTDAttrCallbacks;
DTDFactory::s_aDeclCallbacks;
DTDFactory::s_aElemDeclCallbacks;
DTDFactory::s_aSkipDTDCallbacks;
DTDHandlerWrapper::`vftable';
DTDValidator::`vftable';
DTSAttributes::`vftable';
DTSReader::DTSSAXLocator::`vftable';
DTSReader::`vftable';
Datatype_ENTITY::`vftable';
Datatype_ID::`vftable';
Datatype_IDREF::`vftable';
Datatype_NCName::`vftable';
Datatype_NMTOKEN::`vftable';
Datatype_NOTATION::`vftable';
Datatype_Name::`vftable';
Datatype_QName::`vftable';
Datatype_anyType::`vftable';
Datatype_anyURI::`vftable';
Datatype_base64Binary::`vftable';
Datatype_boolean::`vftable';
Datatype_byte::`vftable';
Datatype_date::`vftable';
Datatype_dateTime::`vftable';
Datatype_dateTimeBase::`vftable';
Datatype_day::`vftable';
Datatype_decimal::`vftable';
Datatype_double::`vftable';
Datatype_duration::`vftable';
Datatype_float::`vftable';
Datatype_hexBinary::`vftable';
Datatype_int::`vftable';
Datatype_integer::`vftable';
Datatype_language::`vftable';
Datatype_language::s_languagePattern;
Datatype_long::`vftable';
Datatype_month::`vftable';
Datatype_monthDay::`vftable';
Datatype_negativeInteger::`vftable';
Datatype_nonNegativeInteger::`vftable';
Datatype_nonPositiveInteger::`vftable';
Datatype_normalizedString::`vftable';
Datatype_positiveInteger::`vftable';
Datatype_short::`vftable';
Datatype_string::`vftable';
Datatype_time::`vftable';
Datatype_token::`vftable';
Datatype_union::`vftable';
Datatype_unsignedByte::`vftable';
Datatype_unsignedInt::`vftable';
Datatype_unsignedLong::`vftable';
Datatype_unsignedShort::`vftable';
Datatype_year::`vftable';
Datatype_yearMonth::`vftable';
DateTime::s_DaysToMonth365;
DateTime::s_DaysToMonth366;
DecimalFormat::`vftable';
DecimalFormatSymbols::`vftable';
DecimalFormatSymbols::s_cstrNaN;
DecimalFormatSymbols::s_cstrNaN_pwz;
DecimalFormatSymbols::s_cstrPosInfinity;
DecimalFormatSymbols::s_cstrPosInfinity_pwz;
DecimalFormatSymbols::s_defaultInstance;
DeclAttDef::`vftable';
DeclDoctype::`vftable';
DeclElement::`vftable';
DeclEntity::`vftable';
DeclExternalId::`vftable';
DeclHandlerWrapper::`vftable';
DeclName::`vftable';
DeclNotation::`vftable';
DefaultWriter::`vftable';
DerivationMethodStrings;
DerivationMethodValues;
DescendantMatcher::`vftable';
DescendantNodeSet::`vftable';
DispatchFunctions::s_cstrGet;
DispatchFunctions::s_cstrGet_pwz;
DocStream::`vftable';
Document::_fNormalizeAttributeValuesDefaultValue;
Document::`vftable';
Document::g_docTimestamps;
DocumentInfo::`vftable';
DocumentSchemaCollection::`vftable';
DocumentationAttributes;
DummyObjectSrvcProvider::`vftable';
ENTERPRISE_IDS_ATTRIBUTE_NAME;
EVALUATION_FLAGS_ATTRIBUTE_NAME;
EXEMPT_ENTERPRISE_IDS_ATTRIBUTE_NAME;
ElementAttributes;
ElementDecl::_AnyTypeElementDecl;
ElementDecl::_Empty;
ElementDecl::`vftable';
ElementSubelements;
EmptyNodeList::`vftable';
EmptyNodeSet::_empnset;
EmptyNodeSet::`vftable';
EmptyParticle::`vftable';
Encoding::`vftable';
EncodingStream::`vftable';
Entity::`vftable';
EntityResolverWrapper::`vftable';
ErrorHandlerWrapper::`vftable';
ErrorMatcher::`vftable';
ErrorNode::`vftable';
Exception::`vftable';
Exception::s_cexpOutOfMem;
Exception::s_cexpOutOfStack;
Exception::s_cexpSystemError;
Exception::s_cstrException;
Exception::s_cstrException_pwz;
Exception::s_pstrOutOfMem;
Exception::s_pstrOutOfStack;
ExecutionHost::`vftable';
ExprMatchNodeSet::`vftable';
ExpressionCompiler::`vftable';
ExtensionCompile::`vftable';
FacetAttributes;
FakeHTMLDoc::`vftable';
FieldAttributes;
FileStream::`vftable';
FilterCacheNodeSet::`vftable';
FilterMatcher::`vftable';
FilterNode::`vftable';
FilterNodeSet::`vftable';
FilterRangeNodeSet::`vftable';
FinalDefaultStrings;
FinalDefaultValues;
FollowingNodeSet::`vftable';
FollowingSiblingNodeSet::`vftable';
ForEachCompile::`vftable';
FormStringValues;
FormatSymbol::`vftable';
FormatSymbolsFixup::`vftable';
FuncMatcher::`vftable';
FunctionCallNode::`vftable';
FunctionLookup::s_MSXSLFuncInfo;
FunctionLookup::s_MSXSLLookup;
FunctionLookup::s_XPathFuncInfo;
FunctionLookup::s_XPathLookup;
FunctionLookup::s_XSLTFuncInfo;
FunctionLookup::s_XSLTLookup;
GS_ContextRecord;
GS_ExceptionPointers;
GS_ExceptionRecord;
GUID_00000000_0000_0000_c000_000000000046;
GUID_00000003_0000_0000_c000_000000000046;
GUID_0000000c_0000_0000_c000_000000000046;
GUID_00000035_0000_0000_c000_000000000046;
GUID_00000036_0000_0000_c000_000000000046;
GUID_00000037_0000_0000_c000_000000000046;
GUID_00000038_0000_0000_c000_000000000046;
GUID_00000144_0000_0000_c000_000000000046;
GUID_00000146_0000_0000_c000_000000000046;
GUID_0000015b_0000_0000_c000_000000000046;
GUID_132e42ab_4e36_4df6_b1c8_0ce62fd88b26;
GUID_139d959e_e7b5_5cb6_a596_4b544478da9b;
GUID_1545cdfa_9e4e_4497_a8a4_2bf7d0112c44;
GUID_1c741d59_2122_47d5_a856_83f3d4214875;
GUID_25bd7db0_b780_4d26_98e7_bb2a6b42e460;
GUID_2707fd1e_1e92_4ece_b6f4_26f069078ddc;
GUID_274146c0_9a51_4663_bf30_0ef742146f20;
GUID_2933bf80_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf85_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf86_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf87_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf88_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf89_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf8a_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf8b_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf8c_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf8d_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf8e_7b36_11d2_b20e_00c04f983e60;
GUID_2933bf93_7b36_11d2_b20e_00c04f983e60;
GUID_2dfb8a1f_6b10_4ef8_9f83_efcce8faec37;
GUID_2e2f47bc_c3d0_4ccf_bb86_0ab8c36a61cf;
GUID_30d5a829_7fa4_4026_83bb_d75bae4ea99e;
GUID_3833a35e_2c61_56bd_b093_3694165f8898;
GUID_398c4183_793d_5b00_819b_4aef92485e94;
GUID_3efaa413_272f_11d2_836f_0000f87a7782;
GUID_4207a996_ca2f_42f7_bde8_8b10457a7f30;
GUID_430ecece_1418_5d19_81b2_5ddb381603cc;
GUID_44a9796f_723e_4fdf_a218_033e75b0c084;
GUID_4bd682dd_7554_40e9_9a9b_82654ede7e62;
GUID_4d04b46f_c8bd_45b4_8899_0400d7c2c60f;
GUID_50850b26_267e_451b_a890_ab6a370245ee;
GUID_50ea08b3_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b5_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a;
GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a;
GUID_5543d254_d757_4b79_9539_232b18f50bf1;
GUID_58aa07a8_fed6_46f7_b4c5_fb1ba72108d6;
GUID_5984c710_daf2_43c8_8bb4_a4d3eacfd03f;
GUID_5a648006_843a_4da9_865b_9d26e5dfad7b;
GUID_5cc5b382_e6dd_4991_abef_06d8d2e7bd0c;
GUID_5d034661_7bd8_4ad5_9ebf_81e6347263b1;
GUID_5e52f8ce_aced_5a42_95b4_f674dd84885e;
GUID_5eef7817_93dd_5c0b_9e5a_eb490408f3a9;
GUID_629bdbc8_d932_4ff4_96b9_8d96c5c1e858;
GUID_63dbba8b_d0db_4fe1_b745_f9433afdc25b;
GUID_6a0b5ffc_63b4_480f_9e6a_8a92816aade4;
GUID_6cd0e74e_ee65_4489_9ebf_ca43e87ba637;
GUID_6de58132_f11d_4fbb_8cc6_583cba93112f;
GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b;
GUID_7b64703f_550c_48c6_a90f_93a5b964518f;
GUID_7f85d5f5_47a8_4497_bda5_84ba04819ea6;
GUID_8c60ad77_83a4_4ec1_9c54_7ba429e13da6;
GUID_8cb4e04d_6d46_4edb_ab73_df83c51ad397;
GUID_8da45c56_97a5_44cb_a8be_27d86280c70a;
GUID_905a0fef_bc53_11df_8c49_001e4fc686da;
GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90;
GUID_9e365e57_48b2_4160_956f_c7385120bbfc;
GUID_CAUSALITY_WINDOWS_PLATFORM_ID;
GUID_CUSTOM_CONFIRMOBJECTSAFETY;
GUID_NULL;
GUID_a1c9feee_0617_4f23_9d58_8961ea43567c;
GUID_a4ed5c81_76c9_40bd_8be6_b1d90fb20ae7;
GUID_a6ef9860_c720_11d0_9337_00a0c90dcaa9;
GUID_a9eda967_f50e_4a33_b358_206f6ef3086d;
GUID_ac144aa4_b4f1_4db6_b206_8a22c308db0a;
GUID_af86e2e0_b12d_4c6a_9c5a_d7aa65101e90;
GUID_b3a69eb0_aab0_4b82_a6fa_b1453f7c021b;
GUID_b9e57830_8c6c_4a6f_9c13_47772bb047bb;
GUID_bac05b74_cf58_4b65_bd61_0aca1d0bc08e;
GUID_bc348b13_3a11_47be_8784_1b53c9ae8db0;
GUID_bca474d5_b61f_4611_9cac_2e92e3476d47;
GUID_c7a98e66_1010_492c_a1c8_c809e1f75905;
GUID_e2ea6a96_0c21_44a5_8bc9_9e4a262708ec;
GUID_e521c894_2c26_5946_9e61_2b5e188d01ed;
GUID_f1146ffc_8c92_56e8_93f1_711f86722633;
GUID_f7342425_9781_4964_8e94_9b1c6dfc9bc7;
GUID_f7f3a506_1e87_42d6_bcfb_b8c809fa5494;
GUID_f858e239_1896_5982_8495_143168478eb8;
GUID_f931a4cb_308d_4760_a1d5_43b67450ac7e;
GUID_fa3f6186_4214_428c_a64c_14c9ac7315ea;
GUID_fe2f3d47_5d47_5499_8374_430c7cda0204;
GroupAttributes;
GroupNode::`vftable';
GroupRefAttributes;
GroupSubelements;
Guard::`vftable';
HTMLOutputHelper::`vftable';
HTMLProps::s_htmlAttrs;
HTMLProps::s_htmlElems;
HTMLWriter::`vftable';
HTTPRequest::HTTPRequestSink::`vftable';
HTTPRequest::`vftable';
HTTPStream::`vftable';
HashHashAny;
HashHashAny$initializer$;
HashHashAny_pwz;
HashHashLocal;
HashHashLocal$initializer$;
HashHashLocal_pwz;
HashHashOther;
HashHashOther$initializer$;
HashHashOther_pwz;
HashHashTargetNamespace;
HashHashTargetNamespace$initializer$;
HashHashTargetNamespace_pwz;
Hashtable::`vftable';
HashtableIter::s_emptyHashtable;
HostSecurityMgrDispatchWrapper::`vftable';
HostSecurityMgrWrapper::`vftable';
IDNodeSet::`vftable';
IEnumVARIANTImpl::`vftable';
IEnumVARIANTWrapper::`vftable';
IID_DOMNode;
IID_Document;
IID_Document10;
IID_Document26;
IID_Document30;
IID_Element;
IID_IActiveScript;
IID_IActiveScriptParse64;
IID_IActiveScriptSite;
IID_IActiveScriptSiteDebug64;
IID_IAgileObject;
IID_IAuthenticate;
IID_IAuthenticateEx;
IID_IBindHost;
IID_IBindStatusCallback;
IID_IBindingExInternal;
IID_ICatInformation;
IID_IClassFactory;
IID_IConnectionPoint;
IID_IConnectionPointContainer;
IID_IDTSReader;
IID_IDispatch;
IID_IDispatchEx;
IID_IEnumConnectionPoints;
IID_IEnumConnections;
IID_IEnumVARIANT;
IID_IErrorInfo;
IID_IGlobalInterfaceTable;
IID_IHTMLDocument;
IID_IHTMLDocument2;
IID_IHTMLElement;
IID_IHTMLObjectElement;
IID_IHttpNegotiate;
IID_IHttpNegotiate2;
IID_IHttpNegotiate3;
IID_IHttpSecurity;
IID_IInspectable;
IID_IInternetBindInfo;
IID_IInternetBindInfoEx;
IID_IInternetHostSecurityManager;
IID_IInternetProtocolSink;
IID_IInternetSecurityManager;
IID_IInternetSecurityMgrSite;
IID_IMXAttributes;
IID_IMXNamespaceManager;
IID_IMXNamespacePrefixes;
IID_IMXRAttributes;
IID_IMXRContentHandler;
IID_IMXSchemaDeclHandler;
IID_IMXWriter;
IID_IMXXMLFilter;
IID_IMarshal;
IID_IMultiLanguage;
IID_IMultiLanguage2;
IID_INetworkTransportSettings;
IID_INotificationTransportSync;
IID_IObjectSafety;
IID_IObjectWithSite;
IID_IOleClientSite;
IID_IOleCommandTarget;
IID_IOleWindow;
IID_IPersistMoniker;
IID_IPersistStream;
IID_IPersistStreamInit;
IID_IPropertyNotifySink;
IID_IProvideClassInfo;
IID_IRequest;
IID_IResponse;
IID_ISAXAttributes;
IID_ISAXContentHandler;
IID_ISAXDTDHandler;
IID_ISAXDeclHandler;
IID_ISAXEntityResolver;
IID_ISAXErrorHandler;
IID_ISAXLexicalHandler;
IID_ISAXLocator;
IID_ISAXXMLReader;
IID_ISchema;
IID_ISchemaAny;
IID_ISchemaAttribute;
IID_ISchemaAttributeGroup;
IID_ISchemaComplexType;
IID_ISchemaElement;
IID_ISchemaIdentityConstraint;
IID_ISchemaItemCollection;
IID_ISchemaModelGroup;
IID_ISchemaNotation;
IID_ISchemaStringCollection;
IID_ISchemaType;
IID_ISequentialStream;
IID_IServerXMLHTTPRequest;
IID_IServerXMLHTTPRequest2;
IID_IServiceProvider;
IID_IStream;
IID_ISupportErrorInfo;
IID_IUnknown;
IID_IVBMXNamespaceManager;
IID_IVBSAXAttributes;
IID_IVBSAXContentHandler;
IID_IVBSAXDTDHandler;
IID_IVBSAXDeclHandler;
IID_IVBSAXEntityResolver;
IID_IVBSAXErrorHandler;
IID_IVBSAXLexicalHandler;
IID_IVBSAXLocator;
IID_IVBSAXXMLReader;
IID_IWinHttpRequest;
IID_IWinHttpRequestEvents;
IID_IWinInetHttpInfo;
IID_IWinInetHttpTimeouts;
IID_IXMLDOMAttribute;
IID_IXMLDOMCDATASection;
IID_IXMLDOMCharacterData;
IID_IXMLDOMComment;
IID_IXMLDOMDocument;
IID_IXMLDOMDocument2;
IID_IXMLDOMDocument3;
IID_IXMLDOMDocumentFragment;
IID_IXMLDOMDocumentType;
IID_IXMLDOMElement;
IID_IXMLDOMEntity;
IID_IXMLDOMEntityReference;
IID_IXMLDOMImplementation;
IID_IXMLDOMNamedNodeMap;
IID_IXMLDOMNode;
IID_IXMLDOMNodeList;
IID_IXMLDOMNotation;
IID_IXMLDOMParseError;
IID_IXMLDOMParseError2;
IID_IXMLDOMParseErrorCollection;
IID_IXMLDOMProcessingInstruction;
IID_IXMLDOMSchemaCollection;
IID_IXMLDOMSchemaCollection2;
IID_IXMLDOMSelection;
IID_IXMLDOMText;
IID_IXMLHTTPRequest;
IID_IXMLHTTPRequest2;
IID_IXMLHTTPRequest2Callback;
IID_IXMLHTTPRequest3;
IID_IXMLHTTPRequest3Callback;
IID_IXMLNodeFactory;
IID_IXMLNodeSource;
IID_IXMLParser;
IID_IXMLParser2;
IID_IXMLParser3;
IID_IXMLSecurityInfo;
IID_IXSLProcessor;
IID_IXSLTemplate;
IID_IXmlHttpRequestInternal;
IID_MSXML;
IID_Node;
IID_Node10;
IID_Node26;
IID_Node30;
IID_Parser;
IID_SchemaCache;
IID_SchemaCache30;
IID___FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument;
IID___FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument;
IID___FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode;
IID___FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode;
IID___FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode;
IID___x_Windows_CData_CXml_CDom_CIDtdEntity;
IID___x_Windows_CData_CXml_CDom_CIDtdNotation;
IID___x_Windows_CData_CXml_CDom_CIXmlAttribute;
IID___x_Windows_CData_CXml_CDom_CIXmlCDataSection;
IID___x_Windows_CData_CXml_CDom_CIXmlCharacterData;
IID___x_Windows_CData_CXml_CDom_CIXmlComment;
IID___x_Windows_CData_CXml_CDom_CIXmlDocument;
IID___x_Windows_CData_CXml_CDom_CIXmlDocumentFragment;
IID___x_Windows_CData_CXml_CDom_CIXmlDocumentIO;
IID___x_Windows_CData_CXml_CDom_CIXmlDocumentIO2;
IID___x_Windows_CData_CXml_CDom_CIXmlDocumentStatics;
IID___x_Windows_CData_CXml_CDom_CIXmlDocumentType;
IID___x_Windows_CData_CXml_CDom_CIXmlDomImplementation;
IID___x_Windows_CData_CXml_CDom_CIXmlElement;
IID___x_Windows_CData_CXml_CDom_CIXmlEntityReference;
IID___x_Windows_CData_CXml_CDom_CIXmlLoadSettings;
IID___x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap;
IID___x_Windows_CData_CXml_CDom_CIXmlNode;
IID___x_Windows_CData_CXml_CDom_CIXmlNodeList;
IID___x_Windows_CData_CXml_CDom_CIXmlNodeSelector;
IID___x_Windows_CData_CXml_CDom_CIXmlNodeSerializer;
IID___x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction;
IID___x_Windows_CData_CXml_CDom_CIXmlText;
IID___x_Windows_CData_CXml_CXsl_CIXsltProcessor;
IID___x_Windows_CData_CXml_CXsl_CIXsltProcessor2;
IID___x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory;
INTENT_ENTERPRISE_ID_ATTRIBUTE_NAME;
IServerXMLHTTPRequest2_FormatStringOffsetTable;
IServerXMLHTTPRequest2_Ndr64ProcTable;
IServerXMLHTTPRequest2_ProxyInfo;
IServerXMLHTTPRequest2_ServerInfo;
IServerXMLHTTPRequest2_SyntaxInfo;
IServerXMLHTTPRequest2_table;
IServerXMLHTTPRequest_FormatStringOffsetTable;
IServerXMLHTTPRequest_Ndr64ProcTable;
IServerXMLHTTPRequest_ProxyInfo;
IServerXMLHTTPRequest_ServerInfo;
IServerXMLHTTPRequest_SyntaxInfo;
IServerXMLHTTPRequest_table;
IURLDownloadTask::`vftable';
IURLRequestSite::`vftable';
IURLStream::`vftable';
IXMLHTTPRequest2Callback_FormatStringOffsetTable;
IXMLHTTPRequest2Callback_Ndr64ProcTable;
IXMLHTTPRequest2Callback_ProxyInfo;
IXMLHTTPRequest2Callback_ServerInfo;
IXMLHTTPRequest2Callback_SyntaxInfo;
IXMLHTTPRequest2_FormatStringOffsetTable;
IXMLHTTPRequest2_Ndr64ProcTable;
IXMLHTTPRequest2_ProxyInfo;
IXMLHTTPRequest2_ServerInfo;
IXMLHTTPRequest2_SyntaxInfo;
IXMLHTTPRequest3Callback_FormatStringOffsetTable;
IXMLHTTPRequest3Callback_Ndr64ProcTable;
IXMLHTTPRequest3Callback_ProxyInfo;
IXMLHTTPRequest3Callback_ServerInfo;
IXMLHTTPRequest3Callback_SyntaxInfo;
IXMLHTTPRequest3_FormatStringOffsetTable;
IXMLHTTPRequest3_Ndr64ProcTable;
IXMLHTTPRequest3_ProxyInfo;
IXMLHTTPRequest3_ServerInfo;
IXMLHTTPRequest3_SyntaxInfo;
IXMLHTTPRequest_FormatStringOffsetTable;
IXMLHTTPRequest_Ndr64ProcTable;
IXMLHTTPRequest_ProxyInfo;
IXMLHTTPRequest_ServerInfo;
IXMLHTTPRequest_SyntaxInfo;
IXMLHTTPRequest_table;
IXmlHttpRequestInternal_FormatStringOffsetTable;
IXmlHttpRequestInternal_Ndr64ProcTable;
IXmlHttpRequestInternal_ProxyInfo;
IXmlHttpRequestInternal_ServerInfo;
IXmlHttpRequestInternal_SyntaxInfo;
IdentityConstraintAttributes;
IdentityConstraintSubelements;
IfCompile::`vftable';
ImportAttributes;
IncludeAttributes;
IndexManager::`vftable';
Init_thread_epoch;
InstrCompile::`vftable';
Integer::`vftable';
IntegerHashtable::`vftable';
InternalNode::`vftable';
InternetHost::ThisFakeHTMLDoc::`vftable';
KeyNodeSet::`vftable';
KeySequence::`vftable';
KeySymbol::`vftable';
LIBID_MSXML2;
LexicalHandlerWrapper::`vftable';
LiteralNode::`vftable';
LiveQuerySelection::`vftable';
LoadSettings::`vftable';
LoadSettingsFactory::`vftable';
LoadWorkItem::`vftable';
LoadWorkItem::s_uId;
LocatorWrapper::`vftable';
MSXML::ClassFactories::s_ComponentFactoryTable;
MSXML::ClassFactories::s_cf_DOMDocument;
MSXML::ClassFactories::s_cf_FreeThreadedDOMDocument;
MSXML::ClassFactories::s_cf_FreeThreadedXMLHTTP;
MSXML::ClassFactories::s_cf_MXHTMLWriter;
MSXML::ClassFactories::s_cf_MXNamespaceManager;
MSXML::ClassFactories::s_cf_MXXMLWriter;
MSXML::ClassFactories::s_cf_SAXAttributes;
MSXML::ClassFactories::s_cf_SAXXMLReader;
MSXML::ClassFactories::s_cf_ServerXMLHTTP;
MSXML::ClassFactories::s_cf_XMLHTTP;
MSXML::ClassFactories::s_cf_XMLSchemaCache;
MSXML::ClassFactories::s_cf_XSLTemplate;
MSXMLRegistry::s_rgSettings;
MXAny::`vftable';
MXAnyAttribute::`vftable';
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::`vftable';
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::`vftable';
MXAttribute::`vftable';
MXAttributeGroup::`vftable';
MXComplexType::`vftable';
MXDataType::`vftable';
MXElement::`vftable';
MXHTMLWriter::`vftable';
MXIdentityConstraint::`vftable';
MXItemCollection::`vftable';
MXItemCollection::s_rEmpty;
MXModelGroup::`vftable';
MXNamespaceManager::`vftable';
MXNamespacePrefixes::`vftable';
MXNotation::`vftable';
MXSchema::`vftable';
MXSimpleType::`vftable';
MXStringCollection::`vftable';
MXStringCollection::s_rEmpty;
MXUnhandledAttributes::`vftable';
MXUnhandledAttributes::s_rEmpty;
MXXMLWriter::`vftable';
MatcherBuilder::`vftable';
MatcherCollection::`vftable';
MbyteCharacterSource::`vftable';
MemoryStream::`vftable';
MemoryStreamForExternal::`vftable';
MemoryStreamForStrings::`vftable';
MessageCompile::`vftable';
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::`vftable';
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`vftable';
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`vftable';
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`vftable';
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`vftable';
Microsoft::WRL::Details::DefaultModule<1>::`vftable';
Microsoft::WRL::Details::ModuleBase::moduleLock_;
Microsoft::WRL::Details::ModuleBase::module_;
Microsoft::WRL::Details::ModuleBase::objectCount_;
Microsoft::WRL::Details::WeakReferenceImpl::`vftable';
Microsoft::WRL::FtmBase::`vftable';
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::`vftable';
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::isInitialized;
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::`vftable';
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::gCausality;
Microsoft::WRL::gCausalityInitOnce;
MinMaxNode::`vftable';
MlangCharacterSource::_pMultiLanguage;
MlangCharacterSource::_pMultiLanguage2;
MlangCharacterSource::`vftable';
ModeSymbol::`vftable';
MsxmlInternetSecurityMgrSite::`vftable';
NDR64_UserMarshalRoutines;
Name::`vftable';
Name::s_emptyName;
Name::s_pNames;
NameAttrFilter::`vftable';
NameDef::`vftable';
NameNmspFilter::`vftable';
NamespaceMgr::`vftable';
NamespaceNodeSet::`vftable';
NamespaceParser::`vftable';
NestedVariableRef::`vftable';
NeverFilter::_filter;
NeverFilter::`vftable';
NeverMatcher::_matcher;
NeverMatcher::`vftable';
NewParserCallbackFailureTrackingRegistry::s_fDebugBreakEnabled;
NewParserCallbackFailureTrackingRegistry::s_fInitialized;
NewParserCallbackFailureTrackingRegistry::s_fTracingEnabled;
NewParserCallbackFailureTrackingRegistry::s_rgSettings;
NoAddRefVector::`vftable';
Node::`vftable';
Node::s_finalizeCallback;
NodeFactory::`vftable';
NodeIterator::`vftable';
NodeSource::`vftable';
NodeTestMatchNodeSet::`vftable';
NodeXMLSource::`vftable';
NonMultSimpleIUnknown::`vftable';
NonValidatingDTDValidator::`vftable';
Notation::`vftable';
NotationAttributes;
NullElement::`vftable';
NullElement::s_rNullElement;
NullWriter::`vftable';
NumberingFormat::`vftable';
NumberingFormat::s_defaultFormat;
NumericNode::`vftable';
ObjectParam::`vftable';
Object_StubDesc;
OutputHelper::`vftable';
OutputProperties::`vftable';
OutputSymbol::`vftable';
POLICY_FLAGS_ATTRIBUTE_NAME;
ParameterCache::`vftable';
ParentCacheNodeSet::`vftable';
ParentNodeSet::`vftable';
ParticleAttributes;
PathDeclCache::`vftable';
PathNode::`vftable';
PositionMatchNodeSet::`vftable';
PositionalFixup::`vftable';
PreSibCacheNodeSet::`vftable';
PreSibNodeSet::`vftable';
PrecedingNodeSet::`vftable';
ProcessContentsStringValues;
ProvideClassInfo::`vftable';
QueryNodeList::`vftable';
QuerySelection::`vftable';
QuerySelection::s_propInfo;
QuerySelection::s_propLookup;
RTF::`vftable';
RTFBuilder::`vftable';
RTFNodeSet::`vftable';
Reader::`vftable';
RedefineAttributes;
RedefineSubelements;
RefString::`vftable';
Regex::`vftable';
RegexBoyerMoore::`vftable';
RegexCapture::`vftable';
RegexCharClass::Any;
RegexCharClass::AnyClass;
RegexCharClass::Dot;
RegexCharClass::DotClass;
RegexCharClass::Empty;
RegexCharClass::EmptyClass;
RegexCharClass::NotSpace;
RegexCharClass::NotWord;
RegexCharClass::Space;
RegexCharClass::Word;
RegexCharClass::_definedCategories;
RegexCharClass::_propTable;
RegexCharClass::`vftable';
RegexCharClass::mpty$initializer$::operator++;
RegexCharClass::mptyClass$initializer$::operator++;
RegexCharClass::ny$initializer$::operator[];
RegexCharClass::nyClass$initializer$::operator[];
RegexCharClass::ord$initializer$::operator||;
RegexCharClass::ot$initializer$::operator*;
RegexCharClass::otClass$initializer$::operator*;
RegexCharClass::otSpace$initializer$::operator<=;
RegexCharClass::otWord$initializer$::operator<=;
RegexCharClass::pace$initializer$::operator~;
RegexCode::`vftable';
RegexFC::`vftable';
RegexFCD::`vftable';
RegexInterpreter::`vftable';
RegexMatch::_empty;
RegexMatch::`vftable';
RegexMatchSparse::`vftable';
RegexNode::`vftable';
RegexPrefix::_empty;
RegexPrefix::`vftable';
RegexRunner::`vftable';
RegexWriter::`vftable';
Resources::s_hInstance;
RttiTypeName_Foundation_NamespaceName;
RttiTypeName_Windows_Foundation_AsyncActionCompletedHandler;
RttiTypeName_Windows_Foundation_AsyncOperationCompletedHandler;
RttiTypeName_Windows_Foundation_IAsyncAction;
RttiTypeName_Windows_Foundation_IAsyncOperation;
RttiTypeName_Windows_NamespaceName;
RuntimeClass_Windows_Data_Xml_Dom_DtdEntity;
RuntimeClass_Windows_Data_Xml_Dom_DtdNotation;
RuntimeClass_Windows_Data_Xml_Dom_XmlAttribute;
RuntimeClass_Windows_Data_Xml_Dom_XmlCDataSection;
RuntimeClass_Windows_Data_Xml_Dom_XmlComment;
RuntimeClass_Windows_Data_Xml_Dom_XmlDocument;
RuntimeClass_Windows_Data_Xml_Dom_XmlDocumentFragment;
RuntimeClass_Windows_Data_Xml_Dom_XmlDocumentType;
RuntimeClass_Windows_Data_Xml_Dom_XmlDomImplementation;
RuntimeClass_Windows_Data_Xml_Dom_XmlElement;
RuntimeClass_Windows_Data_Xml_Dom_XmlEntityReference;
RuntimeClass_Windows_Data_Xml_Dom_XmlLoadSettings;
RuntimeClass_Windows_Data_Xml_Dom_XmlNamedNodeMap;
RuntimeClass_Windows_Data_Xml_Dom_XmlNodeList;
RuntimeClass_Windows_Data_Xml_Dom_XmlProcessingInstruction;
RuntimeClass_Windows_Data_Xml_Dom_XmlText;
RuntimeClass_Windows_Data_Xml_Xsl_XsltProcessor;
RuntimeClass_Windows_Foundation_Diagnostics_AsyncCausalityTracer;
RuntimeClass_Windows_Foundation_PropertyValue;
RuntimeClass_Windows_Foundation_Uri;
RuntimeClass_Windows_Storage_StorageFile;
SAXAttributes::`vftable';
SAXAttributesAdapter::`vftable';
SAXBuilder::`vftable';
SAXCheckedBuilder::`vftable';
SAXHTMLWriter::`vftable';
SAXHandlerDelegate::`vftable';
SAXReader::`vftable';
SAXReaderWrapper::`vftable';
SAXSchemaProxy::`vftable';
SAXWriter::`vftable';
SID_SContainerDispatch;
SID_STopLevelBrowser;
SXPQBuilder::`vftable';
SXPQCompiler::`vftable';
SXPQuery::`vftable';
SXPathNode::`vftable';
SXPathUnion::`vftable';
SXQueryPath::`vftable';
SafeArrayInputSource::`vftable';
SaveToFileAsyncOperationName;
SaveWorkItem::`vftable';
SaveWorkItem::s_uId;
Schema::`vftable';
SchemaAnnotated::`vftable';
SchemaAnnotation::`vftable';
SchemaAny::`vftable';
SchemaAnyAttribute::`vftable';
SchemaAttribute::`vftable';
SchemaAttributeGroup::`vftable';
SchemaAttributeGroupRef::`vftable';
SchemaAttributes;
SchemaCache::`vftable';
SchemaCacheInfo::`vftable';
SchemaCompiler::`vftable';
SchemaComplexContent::`vftable';
SchemaComplexContentExtension::`vftable';
SchemaComplexContentRestriction::`vftable';
SchemaComplexType::_anyType;
SchemaComplexType::`vftable';
SchemaComplexTypeContent::`vftable';
SchemaDatatype::c_ENTITIES;
SchemaDatatype::c_ENTITY;
SchemaDatatype::c_ID;
SchemaDatatype::c_IDREF;
SchemaDatatype::c_IDREFS;
SchemaDatatype::c_NCName;
SchemaDatatype::c_NMTOKEN;
SchemaDatatype::c_NMTOKENS;
SchemaDatatype::c_NOTATION;
SchemaDatatype::c_Name;
SchemaDatatype::c_QName;
SchemaDatatype::c_XsdTypes;
SchemaDatatype::c_anySimpleType;
SchemaDatatype::c_anyURI;
SchemaDatatype::c_base64Binary;
SchemaDatatype::c_boolean;
SchemaDatatype::c_byte;
SchemaDatatype::c_date;
SchemaDatatype::c_dateTime;
SchemaDatatype::c_day;
SchemaDatatype::c_decimal;
SchemaDatatype::c_double;
SchemaDatatype::c_duration;
SchemaDatatype::c_float;
SchemaDatatype::c_hexBinary;
SchemaDatatype::c_int;
SchemaDatatype::c_integer;
SchemaDatatype::c_language;
SchemaDatatype::c_long;
SchemaDatatype::c_map;
SchemaDatatype::c_month;
SchemaDatatype::c_monthDay;
SchemaDatatype::c_negativeInteger;
SchemaDatatype::c_nonNegativeInteger;
SchemaDatatype::c_nonPositiveInteger;
SchemaDatatype::c_normalizedString;
SchemaDatatype::c_positiveInteger;
SchemaDatatype::c_short;
SchemaDatatype::c_string;
SchemaDatatype::c_time;
SchemaDatatype::c_token;
SchemaDatatype::c_unsignedByte;
SchemaDatatype::c_unsignedInt;
SchemaDatatype::c_unsignedLong;
SchemaDatatype::c_unsignedShort;
SchemaDatatype::c_year;
SchemaDatatype::c_yearMonth;
SchemaElement::`vftable';
SchemaEntries;
SchemaFacet::`vftable';
SchemaGroup::`vftable';
SchemaGroupBase::`vftable';
SchemaGroupRef::`vftable';
SchemaIdentityConstraint::`vftable';
SchemaImport::`vftable';
SchemaInclude::`vftable';
SchemaKey::`vftable';
SchemaKeyref::`vftable';
SchemaNamedObject::`vftable';
SchemaNames::c_strAttribute;
SchemaNames::c_strAttributeType;
SchemaNames::c_strAttributeType_pwz;
SchemaNames::c_strAttribute_pwz;
SchemaNames::c_strClosed;
SchemaNames::c_strClosed_pwz;
SchemaNames::c_strContent;
SchemaNames::c_strContent_pwz;
SchemaNames::c_strDTType;
SchemaNames::c_strDTType_pwz;
SchemaNames::c_strDTValues;
SchemaNames::c_strDTValues_pwz;
SchemaNames::c_strDatatype;
SchemaNames::c_strDatatype_pwz;
SchemaNames::c_strDefault;
SchemaNames::c_strDefault_pwz;
SchemaNames::c_strDescription;
SchemaNames::c_strDescription_pwz;
SchemaNames::c_strENTITIES;
SchemaNames::c_strENTITIES_pwz;
SchemaNames::c_strENTITY;
SchemaNames::c_strENTITY_pwz;
SchemaNames::c_strENUMERATION;
SchemaNames::c_strENUMERATION_pwz;
SchemaNames::c_strElement;
SchemaNames::c_strElementType;
SchemaNames::c_strElementType_pwz;
SchemaNames::c_strElement_pwz;
SchemaNames::c_strEltOnly;
SchemaNames::c_strEltOnly_pwz;
SchemaNames::c_strEmpty;
SchemaNames::c_strEmpty_pwz;
SchemaNames::c_strExtends;
SchemaNames::c_strExtends_pwz;
SchemaNames::c_strGroup;
SchemaNames::c_strGroupOrder;
SchemaNames::c_strGroupOrder_pwz;
SchemaNames::c_strGroup_pwz;
SchemaNames::c_strID;
SchemaNames::c_strIDREF;
SchemaNames::c_strIDREFS;
SchemaNames::c_strIDREFS_pwz;
SchemaNames::c_strIDREF_pwz;
SchemaNames::c_strID_pwz;
SchemaNames::c_strInfinite;
SchemaNames::c_strInfinite_pwz;
SchemaNames::c_strMANY;
SchemaNames::c_strMANY_pwz;
SchemaNames::c_strMax;
SchemaNames::c_strMaxExclusive;
SchemaNames::c_strMaxExclusive_pwz;
SchemaNames::c_strMaxLength;
SchemaNames::c_strMaxLength_pwz;
SchemaNames::c_strMaxOccurs;
SchemaNames::c_strMaxOccurs_pwz;
SchemaNames::c_strMax_pwz;
SchemaNames::c_strMin;
SchemaNames::c_strMinExclusive;
SchemaNames::c_strMinExclusive_pwz;
SchemaNames::c_strMinLength;
SchemaNames::c_strMinLength_pwz;
SchemaNames::c_strMinOccurs;
SchemaNames::c_strMinOccurs_pwz;
SchemaNames::c_strMin_pwz;
SchemaNames::c_strMixed;
SchemaNames::c_strMixed_pwz;
SchemaNames::c_strModel;
SchemaNames::c_strModel_pwz;
SchemaNames::c_strNMTOKEN;
SchemaNames::c_strNMTOKENS;
SchemaNames::c_strNMTOKENS_pwz;
SchemaNames::c_strNMTOKEN_pwz;
SchemaNames::c_strName;
SchemaNames::c_strName_pwz;
SchemaNames::c_strNo;
SchemaNames::c_strNo_pwz;
SchemaNames::c_strOR;
SchemaNames::c_strOR_pwz;
SchemaNames::c_strOpen;
SchemaNames::c_strOpen_pwz;
SchemaNames::c_strOrder;
SchemaNames::c_strOrder_pwz;
SchemaNames::c_strRequired;
SchemaNames::c_strRequiredValue;
SchemaNames::c_strRequiredValue_pwz;
SchemaNames::c_strRequired_pwz;
SchemaNames::c_strSEQ;
SchemaNames::c_strSEQ_pwz;
SchemaNames::c_strSchemaRoot;
SchemaNames::c_strSchemaRoot_pwz;
SchemaNames::c_strString;
SchemaNames::c_strString_pwz;
SchemaNames::c_strTextOnly;
SchemaNames::c_strTextOnly_pwz;
SchemaNames::c_strType;
SchemaNames::c_strType_pwz;
SchemaNames::c_strXSDAbstract;
SchemaNames::c_strXSDAbstract_pwz;
SchemaNames::c_strXSDAll;
SchemaNames::c_strXSDAll_pwz;
SchemaNames::c_strXSDAnnotation;
SchemaNames::c_strXSDAnnotation_pwz;
SchemaNames::c_strXSDAny;
SchemaNames::c_strXSDAnyAttribute;
SchemaNames::c_strXSDAnyAttribute_pwz;
SchemaNames::c_strXSDAnyType;
SchemaNames::c_strXSDAnyType_pwz;
SchemaNames::c_strXSDAny_pwz;
SchemaNames::c_strXSDAppinfo;
SchemaNames::c_strXSDAppinfo_pwz;
SchemaNames::c_strXSDAttribute;
SchemaNames::c_strXSDAttributeFormDefault;
SchemaNames::c_strXSDAttributeFormDefault_pwz;
SchemaNames::c_strXSDAttributeGroup;
SchemaNames::c_strXSDAttributeGroup_pwz;
SchemaNames::c_strXSDAttribute_pwz;
SchemaNames::c_strXSDBase;
SchemaNames::c_strXSDBase_pwz;
SchemaNames::c_strXSDBlock;
SchemaNames::c_strXSDBlockDefault;
SchemaNames::c_strXSDBlockDefault_pwz;
SchemaNames::c_strXSDBlock_pwz;
SchemaNames::c_strXSDChoice;
SchemaNames::c_strXSDChoice_pwz;
SchemaNames::c_strXSDComplexContent;
SchemaNames::c_strXSDComplexContent_pwz;
SchemaNames::c_strXSDComplexType;
SchemaNames::c_strXSDComplexType_pwz;
SchemaNames::c_strXSDContent;
SchemaNames::c_strXSDContent_pwz;
SchemaNames::c_strXSDDefault;
SchemaNames::c_strXSDDefault_pwz;
SchemaNames::c_strXSDDerivedBy;
SchemaNames::c_strXSDDerivedBy_pwz;
SchemaNames::c_strXSDDocumentation;
SchemaNames::c_strXSDDocumentation_pwz;
SchemaNames::c_strXSDElement;
SchemaNames::c_strXSDElementFormDefault;
SchemaNames::c_strXSDElementFormDefault_pwz;
SchemaNames::c_strXSDElement_pwz;
SchemaNames::c_strXSDEnumeration;
SchemaNames::c_strXSDEnumeration_pwz;
SchemaNames::c_strXSDEquivClass;
SchemaNames::c_strXSDEquivClass_pwz;
SchemaNames::c_strXSDExtension;
SchemaNames::c_strXSDExtension_pwz;
SchemaNames::c_strXSDField;
SchemaNames::c_strXSDField_pwz;
SchemaNames::c_strXSDFinal;
SchemaNames::c_strXSDFinalDefault;
SchemaNames::c_strXSDFinalDefault_pwz;
SchemaNames::c_strXSDFinal_pwz;
SchemaNames::c_strXSDFixed;
SchemaNames::c_strXSDFixed_pwz;
SchemaNames::c_strXSDForm;
SchemaNames::c_strXSDForm_pwz;
SchemaNames::c_strXSDFractionDigits;
SchemaNames::c_strXSDFractionDigits_pwz;
SchemaNames::c_strXSDGroup;
SchemaNames::c_strXSDGroup_pwz;
SchemaNames::c_strXSDId;
SchemaNames::c_strXSDId_pwz;
SchemaNames::c_strXSDImport;
SchemaNames::c_strXSDImport_pwz;
SchemaNames::c_strXSDInclude;
SchemaNames::c_strXSDInclude_pwz;
SchemaNames::c_strXSDItemType;
SchemaNames::c_strXSDItemType_pwz;
SchemaNames::c_strXSDKey;
SchemaNames::c_strXSDKey_pwz;
SchemaNames::c_strXSDKeyref;
SchemaNames::c_strXSDKeyref_pwz;
SchemaNames::c_strXSDLength;
SchemaNames::c_strXSDLength_pwz;
SchemaNames::c_strXSDMaxExclusive;
SchemaNames::c_strXSDMaxExclusive_pwz;
SchemaNames::c_strXSDMaxInclusive;
SchemaNames::c_strXSDMaxInclusive_pwz;
SchemaNames::c_strXSDMaxLength;
SchemaNames::c_strXSDMaxLength_pwz;
SchemaNames::c_strXSDMaxOccurs;
SchemaNames::c_strXSDMaxOccurs_pwz;
SchemaNames::c_strXSDMemberTypes;
SchemaNames::c_strXSDMemberTypes_pwz;
SchemaNames::c_strXSDMinExclusive;
SchemaNames::c_strXSDMinExclusive_pwz;
SchemaNames::c_strXSDMinInclusive;
SchemaNames::c_strXSDMinInclusive_pwz;
SchemaNames::c_strXSDMinLength;
SchemaNames::c_strXSDMinLength_pwz;
SchemaNames::c_strXSDMinOccurs;
SchemaNames::c_strXSDMinOccurs_pwz;
SchemaNames::c_strXSDMixed;
SchemaNames::c_strXSDMixed_pwz;
SchemaNames::c_strXSDName;
SchemaNames::c_strXSDName_pwz;
SchemaNames::c_strXSDNamespace;
SchemaNames::c_strXSDNamespace_pwz;
SchemaNames::c_strXSDNillable;
SchemaNames::c_strXSDNillable_pwz;
SchemaNames::c_strXSDNotation;
SchemaNames::c_strXSDNotation_pwz;
SchemaNames::c_strXSDPattern;
SchemaNames::c_strXSDPattern_pwz;
SchemaNames::c_strXSDProcessContents;
SchemaNames::c_strXSDProcessContents_pwz;
SchemaNames::c_strXSDPublic;
SchemaNames::c_strXSDPublic_pwz;
SchemaNames::c_strXSDRedefine;
SchemaNames::c_strXSDRedefine_pwz;
SchemaNames::c_strXSDRef;
SchemaNames::c_strXSDRef_pwz;
SchemaNames::c_strXSDRefer;
SchemaNames::c_strXSDRefer_pwz;
SchemaNames::c_strXSDRestriction;
SchemaNames::c_strXSDRestriction_pwz;
SchemaNames::c_strXSDSchema;
SchemaNames::c_strXSDSchemaLocation;
SchemaNames::c_strXSDSchemaLocation_pwz;
SchemaNames::c_strXSDSchema_pwz;
SchemaNames::c_strXSDSelector;
SchemaNames::c_strXSDSelector_pwz;
SchemaNames::c_strXSDSequence;
SchemaNames::c_strXSDSequence_pwz;
SchemaNames::c_strXSDSimpleContent;
SchemaNames::c_strXSDSimpleContent_pwz;
SchemaNames::c_strXSDSimpleType;
SchemaNames::c_strXSDSimpleTypeList;
SchemaNames::c_strXSDSimpleTypeList_pwz;
SchemaNames::c_strXSDSimpleTypeUnion;
SchemaNames::c_strXSDSimpleTypeUnion_pwz;
SchemaNames::c_strXSDSimpleType_pwz;
SchemaNames::c_strXSDSource;
SchemaNames::c_strXSDSource_pwz;
SchemaNames::c_strXSDSubstitutionGroup;
SchemaNames::c_strXSDSubstitutionGroup_pwz;
SchemaNames::c_strXSDSystem;
SchemaNames::c_strXSDSystem_pwz;
SchemaNames::c_strXSDTargetNamespace;
SchemaNames::c_strXSDTargetNamespace_pwz;
SchemaNames::c_strXSDTotalDigits;
SchemaNames::c_strXSDTotalDigits_pwz;
SchemaNames::c_strXSDType;
SchemaNames::c_strXSDType_pwz;
SchemaNames::c_strXSDUnique;
SchemaNames::c_strXSDUnique_pwz;
SchemaNames::c_strXSDUse;
SchemaNames::c_strXSDUse_pwz;
SchemaNames::c_strXSDValue;
SchemaNames::c_strXSDValue_pwz;
SchemaNames::c_strXSDVersion;
SchemaNames::c_strXSDVersion_pwz;
SchemaNames::c_strXSDWhitespace;
SchemaNames::c_strXSDWhitespace_pwz;
SchemaNames::c_strXSDXPath;
SchemaNames::c_strXSDXPath_pwz;
SchemaNames::c_strXmlLang;
SchemaNames::c_strXmlLang_pwz;
SchemaNames::c_strYes;
SchemaNames::c_strYes_pwz;
SchemaNames::cstrings;
SchemaNames::names;
SchemaNamespaceList::`vftable';
SchemaNotation::`vftable';
SchemaObject::`vftable';
SchemaObjectTable::`vftable';
SchemaParticle::_empty;
SchemaParticle::`vftable';
SchemaRedefine::`vftable';
SchemaRootElement;
SchemaSimpleContent::`vftable';
SchemaSimpleContentExtension::`vftable';
SchemaSimpleContentRestriction::`vftable';
SchemaSimpleType::`vftable';
SchemaSimpleTypeList::`vftable';
SchemaSimpleTypeRestriction::`vftable';
SchemaSimpleTypeUnion::`vftable';
SchemaSubelements;
SchemaType::`vftable';
SchemaUnique::`vftable';
SchemaValidator::`vftable';
SchemaWildcard::`vftable';
SchemaXPath::`vftable';
ScriptCompile::`vftable';
ScriptEngine::`vftable';
ScriptHost::s_rgSettings;
ScriptHost::s_triDebugXSLScript;
ScriptManager::`vftable';
ScriptSymbol::`vftable';
SelectorAttributes;
SelfNodeSet::`vftable';
ShareMutex::`vftable';
SimpleContentAttributes;
SimpleContentExtensionAttributes;
SimpleContentExtensionSubelements;
SimpleContentRestrictionAttributes;
SimpleContentRestrictionSubelements;
SimpleContentSubelements;
SimpleParam::`vftable';
SimpleTypeAttributes;
SimpleTypeListAttributes;
SimpleTypeListSubelements;
SimpleTypeRestrictionAttributes;
SimpleTypeRestrictionSubelements;
SimpleTypeSubelements;
SimpleTypeUnionAttributes;
SimpleTypeUnionSubelements;
SimpleUnionMatcher::`vftable';
SingleNavResult::`vftable';
SingleRange::`vftable';
SingletonNodeSet::`vftable';
SortNode::`vftable';
SortNodeSet::`vftable';
Stack::`vftable';
StreamInputSource::`vftable';
StreamWrapper::`vftable';
String::`vftable';
String::s_cstrEmpty;
String::s_cstrEmpty_pwz;
String::s_cstrNewLine;
String::s_cstrNewLine_pwz;
String::s_cstrSpace;
String::s_cstrSpace_pwz;
StringBuffer::`vftable';
StringHashtable::`vftable';
StringInputSource::`vftable';
StringXMLSource::`vftable';
StyleCompile::`vftable';
SymbolRef::`vftable';
TNSTypes;
TailChildMatcher::`vftable';
TemplateCompile::`vftable';
TemplateSymbol::`vftable';
Terminal::`vftable';
TextCompile::`vftable';
TextWriter::`vftable';
TopLevelCompile::`vftable';
TranslateCharsBinary::`vftable';
TranslateCharsLookup::`vftable';
TranslateCharsScan::`vftable';
TypeFilter::`vftable';
TypeNameFilter::`vftable';
TypeString;
TypeURIAttrFilter::`vftable';
TypeURIFilter::`vftable';
TypeWrapper::`vftable';
URIMatcher::`vftable';
URL::g_pSecMgr;
URLMONRequest::URLMONRequestSink::`vftable';
URLMONRequest::`vftable';
URLMONStream::`vftable';
URLMONUploadStream::`vftable';
URLRequest::`vftable';
URLStreamInputSource::`vftable';
Ucs2BCharacterSource::`vftable';
Ucs2CharacterSource::`vftable';
Ucs4BCharacterSource::`vftable';
Ucs4CharacterSource::`vftable';
UnionMatcher::`vftable';
UnionNode::`vftable';
UnionNodeSet::`vftable';
UseStringValues;
UserMarshalRoutines;
Utf16BCharacterSource::`vftable';
Utf16CharacterSource::`vftable';
Utf8CharacterSource::_rgByteCountForLead5Bits;
Utf8CharacterSource::_rgByteCountForLeadNibble;
Utf8CharacterSource::`vftable';
VBSAXTranslator::`vftable';
VBSAXTranslator::s_dispatchinfo;
ValidationCacheInfo::`vftable';
VariableCompile::`vftable';
VariableRefFixup::`vftable';
VariableRefNode::`vftable';
VariableSymbol::`vftable';
Vector::`vftable';
VectorSpaceDelimeted::`vftable';
VisitorFixup::`vftable';
W3CDOMWrapper::`vftable';
WPP_0c1159cbce373fb9e80ea5ea2fac57d5_Traceguids;
WPP_2e9597271dd830a8b69748d2c72f87a2_Traceguids;
WPP_3e439b722f2830a6deac37f0e650d1f7_Traceguids;
WPP_4dbb5e9451343570352ab25f4f215021_Traceguids;
WPP_GLOBAL_Control;
WPP_MAIN_CB;
WPP_REGISTRATION_GUIDS;
WPP_ThisDir_CTLGUID_MsXml6;
WPP_c1b01aaf53bc386faf981979f0876344_Traceguids;
WPP_d5f7b54228a23fd752abc3ddb8d3f5f4_Traceguids;
WPP_ef5d3f93e05f38e48aadc337e40fcd93_Traceguids;
WhiteSpaceValues;
WhitespaceRules::`vftable';
Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>::`vftable';
Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>::`vftable';
Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>::`vftable';
Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>::`vftable';
Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>::`vftable';
Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>::`vftable';
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`vftable';
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`vftable';
Windows::Internal::s_bIsEnvironmentCheckDone;
WinrtFileStream::`vftable';
WinrtTypeSerializationInfo___x_Windows_CData_CXml_CDom_CIXmlDocument;
WinrtTypeSerializationInfo___x_Windows_CData_CXml_CDom_CIXmlDocument__MIDL_TypeFormatString;
WinrtUriStream::`vftable';
XAttributesImpl::`vftable';
XCode::ModeMatcher::`vftable';
XCode::`vftable';
XCompare::s_aRelOpToBool;
XCompare::s_aapfnComp;
XCompare::s_aapfnCompScalar;
XConvert::s_cstrEight;
XConvert::s_cstrEight_pwz;
XConvert::s_cstrFalse;
XConvert::s_cstrFalse_pwz;
XConvert::s_cstrFive;
XConvert::s_cstrFive_pwz;
XConvert::s_cstrFour;
XConvert::s_cstrFour_pwz;
XConvert::s_cstrNaN;
XConvert::s_cstrNaN_pwz;
XConvert::s_cstrNegInfinity;
XConvert::s_cstrNegInfinity_pwz;
XConvert::s_cstrNine;
XConvert::s_cstrNine_pwz;
XConvert::s_cstrOne;
XConvert::s_cstrOne_pwz;
XConvert::s_cstrPosInfinity;
XConvert::s_cstrPosInfinity_pwz;
XConvert::s_cstrSeven;
XConvert::s_cstrSeven_pwz;
XConvert::s_cstrSix;
XConvert::s_cstrSix_pwz;
XConvert::s_cstrThree;
XConvert::s_cstrThree_pwz;
XConvert::s_cstrTrue;
XConvert::s_cstrTrue_pwz;
XConvert::s_cstrTwo;
XConvert::s_cstrTwo_pwz;
XConvert::s_cstrZero;
XConvert::s_cstrZero_pwz;
XConvert::s_digits;
XEngine::CurrentExprEval::`vftable';
XEngine::GlobalExprEval::`vftable';
XEngine::`vftable';
XMLDECLParser::`vftable';
XMLHttp2::`vftable';
XMLHttp::`vftable';
XMLNames::atomDTTYPENS;
XMLNames::atomEmpty;
XMLNames::atomSCHEMA;
XMLNames::atomURNXML;
XMLNames::atomURNXMLNS;
XMLNames::atomXML;
XMLNames::atomXMLNS;
XMLNames::atomXSDSCHEMA;
XMLNames::atomXSI;
XMLNames::cstrings;
XMLNames::names;
XMLNames::s_cstrANY;
XMLNames::s_cstrANY_pwz;
XMLNames::s_cstrATTR;
XMLNames::s_cstrATTR_pwz;
XMLNames::s_cstrCDATA;
XMLNames::s_cstrCDATA_pwz;
XMLNames::s_cstrCHILDNAME;
XMLNames::s_cstrCHILDNAME_pwz;
XMLNames::s_cstrCOLUMN;
XMLNames::s_cstrCOLUMN_pwz;
XMLNames::s_cstrContentType;
XMLNames::s_cstrContentType_pwz;
XMLNames::s_cstrDEFAULT;
XMLNames::s_cstrDEFAULT_pwz;
XMLNames::s_cstrDOCTYPE;
XMLNames::s_cstrDOCTYPE_pwz;
XMLNames::s_cstrDTDT;
XMLNames::s_cstrDTDT_pwz;
XMLNames::s_cstrDTTYPENS;
XMLNames::s_cstrDTTYPENS_pwz;
XMLNames::s_cstrDefault;
XMLNames::s_cstrDefaultVersion;
XMLNames::s_cstrDefaultVersion_pwz;
XMLNames::s_cstrDefault_pwz;
XMLNames::s_cstrEMPTY;
XMLNames::s_cstrEMPTY_pwz;
XMLNames::s_cstrENTITIES;
XMLNames::s_cstrENTITIES_pwz;
XMLNames::s_cstrENTITY;
XMLNames::s_cstrENTITY_pwz;
XMLNames::s_cstrEncoding;
XMLNames::s_cstrEncoding_pwz;
XMLNames::s_cstrID;
XMLNames::s_cstrIDREF;
XMLNames::s_cstrIDREFS;
XMLNames::s_cstrIDREFS_pwz;
XMLNames::s_cstrIDREF_pwz;
XMLNames::s_cstrID_pwz;
XMLNames::s_cstrIMPLIED;
XMLNames::s_cstrIMPLIED_pwz;
XMLNames::s_cstrNAME;
XMLNames::s_cstrNAME2;
XMLNames::s_cstrNAME2_pwz;
XMLNames::s_cstrNAME_pwz;
XMLNames::s_cstrNDATA;
XMLNames::s_cstrNDATA_pwz;
XMLNames::s_cstrNMTOKEN;
XMLNames::s_cstrNMTOKENS;
XMLNames::s_cstrNMTOKENS_pwz;
XMLNames::s_cstrNMTOKEN_pwz;
XMLNames::s_cstrNONAMESPACESCHEMALOCATION;
XMLNames::s_cstrNONAMESPACESCHEMALOCATION_pwz;
XMLNames::s_cstrNOTATION;
XMLNames::s_cstrNOTATION_pwz;
XMLNames::s_cstrNamespace;
XMLNames::s_cstrNamespace_pwz;
XMLNames::s_cstrPCDATA;
XMLNames::s_cstrPCDATA_pwz;
XMLNames::s_cstrPITAGEND;
XMLNames::s_cstrPITAGEND_pwz;
XMLNames::s_cstrPITAGSTART;
XMLNames::s_cstrPITAGSTART_pwz;
XMLNames::s_cstrPUBLIC;
XMLNames::s_cstrPUBLIC_pwz;
XMLNames::s_cstrPreserve;
XMLNames::s_cstrPreserve_pwz;
XMLNames::s_cstrREQUIRED;
XMLNames::s_cstrREQUIRED_pwz;
XMLNames::s_cstrROWSET;
XMLNames::s_cstrROWSET_pwz;
XMLNames::s_cstrSCHEMA;
XMLNames::s_cstrSCHEMALOCATION;
XMLNames::s_cstrSCHEMALOCATION_pwz;
XMLNames::s_cstrSCHEMA_pwz;
XMLNames::s_cstrSYSTEM;
XMLNames::s_cstrSYSTEM_pwz;
XMLNames::s_cstrStandalone;
XMLNames::s_cstrStandalone_pwz;
XMLNames::s_cstrTEXT;
XMLNames::s_cstrTEXT_pwz;
XMLNames::s_cstrURLXML;
XMLNames::s_cstrURLXML_pwz;
XMLNames::s_cstrURNXML;
XMLNames::s_cstrURNXMLNS;
XMLNames::s_cstrURNXMLNS_pwz;
XMLNames::s_cstrURNXML_pwz;
XMLNames::s_cstrVALUES;
XMLNames::s_cstrVALUES_pwz;
XMLNames::s_cstrVersion;
XMLNames::s_cstrVersion_pwz;
XMLNames::s_cstrXML;
XMLNames::s_cstrXMLLang;
XMLNames::s_cstrXMLLang_pwz;
XMLNames::s_cstrXMLNS;
XMLNames::s_cstrXMLNSCOLON;
XMLNames::s_cstrXMLNSCOLON_pwz;
XMLNames::s_cstrXMLNS_pwz;
XMLNames::s_cstrXMLNamespace;
XMLNames::s_cstrXMLNamespace_pwz;
XMLNames::s_cstrXMLSpace;
XMLNames::s_cstrXMLSpace2;
XMLNames::s_cstrXMLSpace2_pwz;
XMLNames::s_cstrXMLSpace_pwz;
XMLNames::s_cstrXML_pwz;
XMLNames::s_cstrXSDSCHEMA;
XMLNames::s_cstrXSDSCHEMA_pwz;
XMLNames::s_cstrXSI;
XMLNames::s_cstrXSINIL;
XMLNames::s_cstrXSINIL_pwz;
XMLNames::s_cstrXSITYPE;
XMLNames::s_cstrXSITYPE_pwz;
XMLNames::s_cstrXSI_pwz;
XMLNavUtils::s_mapNodeTypes;
XMLNavUtils::s_rgpwszNodeTypeName;
XMLOutputHelper::`vftable';
XMLParser::`vftable';
XMLParser::s_MaxElementDepth;
XMLParser::s_MaxElementDepth_pwz;
XMLParser::s_MaxXMLSize_pwz;
XMLSourceWrapper::`vftable';
XMLStream::`vftable';
XMLWriter::`vftable';
XPAttrNav<WhitespaceCheck>::_vtblXPAttrNav;
XPAttrNav<WhitespacePreserve>::_vtblXPAttrNav;
XPChildNav<WhitespaceCheck>::_vtblXPChildNav;
XPChildNav<WhitespacePreserve>::_vtblXPChildNav;
XPNmspNav<WhitespaceCheck>::_vtblXPNmspNav;
XPNmspNav<WhitespacePreserve>::_vtblXPNmspNav;
XPNullNav::_vtblXPNullNav;
XPParser::s_cstrAnd;
XPParser::s_cstrAnd_pwz;
XPParser::s_cstrDiv;
XPParser::s_cstrDiv_pwz;
XPParser::s_cstrMod;
XPParser::s_cstrMod_pwz;
XPParser::s_cstrOr;
XPParser::s_cstrOr_pwz;
XPParser::s_cstrXmlns;
XPParser::s_cstrXmlns_pwz;
XPParser::s_nodeTestAny;
XPSingleTextNav<WhitespaceCheck>::_vtblXPSingleTextNav;
XPSingleTextNav<WhitespacePreserve>::_vtblXPSingleTextNav;
XRuntime::`vftable';
XRuntime::s_knownVarTypes;
XSDContentModel::`vftable';
XSLTCodeGen::`vftable';
XSLTCompiler::`vftable';
XSLTKeywords::s_XSLTElementLookup;
XSLTKeywords::s_atomApplyImports;
XSLTKeywords::s_atomApplyTemplates;
XSLTKeywords::s_atomAttribute;
XSLTKeywords::s_atomAttributeSet;
XSLTKeywords::s_atomCallTemplate;
XSLTKeywords::s_atomChoose;
XSLTKeywords::s_atomComment;
XSLTKeywords::s_atomCopy;
XSLTKeywords::s_atomCopyOf;
XSLTKeywords::s_atomCurrent;
XSLTKeywords::s_atomDecimalFormat;
XSLTKeywords::s_atomDocument;
XSLTKeywords::s_atomElement;
XSLTKeywords::s_atomElementAvailable;
XSLTKeywords::s_atomFallback;
XSLTKeywords::s_atomForEach;
XSLTKeywords::s_atomFormatNumber;
XSLTKeywords::s_atomFormatNumberMSXSL;
XSLTKeywords::s_atomFunctionAvailable;
XSLTKeywords::s_atomGenerateId;
XSLTKeywords::s_atomIf;
XSLTKeywords::s_atomImport;
XSLTKeywords::s_atomInclude;
XSLTKeywords::s_atomKey;
XSLTKeywords::s_atomMessage;
XSLTKeywords::s_atomNSMSXSL;
XSLTKeywords::s_atomNSXSLT;
XSLTKeywords::s_atomNSXTL;
XSLTKeywords::s_atomNamespaceAlias;
XSLTKeywords::s_atomNodeSetMSXSL;
XSLTKeywords::s_atomNumber;
XSLTKeywords::s_atomOtherwise;
XSLTKeywords::s_atomOutput;
XSLTKeywords::s_atomParameter;
XSLTKeywords::s_atomPrefix;
XSLTKeywords::s_atomPreserveSpace;
XSLTKeywords::s_atomProcessInstr;
XSLTKeywords::s_atomScript;
XSLTKeywords::s_atomSort;
XSLTKeywords::s_atomStripSpace;
XSLTKeywords::s_atomStylesheet;
XSLTKeywords::s_atomSystemProperty;
XSLTKeywords::s_atomTemplate;
XSLTKeywords::s_atomText;
XSLTKeywords::s_atomTransform;
XSLTKeywords::s_atomUnparsedEntityUri;
XSLTKeywords::s_atomValueOf;
XSLTKeywords::s_atomVariable;
XSLTKeywords::s_atomWhen;
XSLTKeywords::s_atomWithParam;
XSLTKeywords::s_cstrApplyImports;
XSLTKeywords::s_cstrApplyImports_pwz;
XSLTKeywords::s_cstrApplyTemplates;
XSLTKeywords::s_cstrApplyTemplates_pwz;
XSLTKeywords::s_cstrAttribute;
XSLTKeywords::s_cstrAttributeSet;
XSLTKeywords::s_cstrAttributeSet_pwz;
XSLTKeywords::s_cstrAttribute_pwz;
XSLTKeywords::s_cstrCDATASection;
XSLTKeywords::s_cstrCDATASection_pwz;
XSLTKeywords::s_cstrCallTemplate;
XSLTKeywords::s_cstrCallTemplate_pwz;
XSLTKeywords::s_cstrCaseOrder;
XSLTKeywords::s_cstrCaseOrder_pwz;
XSLTKeywords::s_cstrChoose;
XSLTKeywords::s_cstrChoose_pwz;
XSLTKeywords::s_cstrComment;
XSLTKeywords::s_cstrComment_pwz;
XSLTKeywords::s_cstrContent;
XSLTKeywords::s_cstrContent_pwz;
XSLTKeywords::s_cstrCopy;
XSLTKeywords::s_cstrCopyOf;
XSLTKeywords::s_cstrCopyOf_pwz;
XSLTKeywords::s_cstrCopy_pwz;
XSLTKeywords::s_cstrCount;
XSLTKeywords::s_cstrCount_pwz;
XSLTKeywords::s_cstrCurrent;
XSLTKeywords::s_cstrCurrent_pwz;
XSLTKeywords::s_cstrDataType;
XSLTKeywords::s_cstrDataType_pwz;
XSLTKeywords::s_cstrDecimalFormat;
XSLTKeywords::s_cstrDecimalFormat_pwz;
XSLTKeywords::s_cstrDecimalSeparator;
XSLTKeywords::s_cstrDecimalSeparator_pwz;
XSLTKeywords::s_cstrDefaultLanguage;
XSLTKeywords::s_cstrDefaultLanguage_pwz;
XSLTKeywords::s_cstrDigit;
XSLTKeywords::s_cstrDigit_pwz;
XSLTKeywords::s_cstrDocTypePublic;
XSLTKeywords::s_cstrDocTypePublic_pwz;
XSLTKeywords::s_cstrDocTypeSystem;
XSLTKeywords::s_cstrDocTypeSystem_pwz;
XSLTKeywords::s_cstrDocument;
XSLTKeywords::s_cstrDocument_pwz;
XSLTKeywords::s_cstrElement;
XSLTKeywords::s_cstrElementAvailable;
XSLTKeywords::s_cstrElementAvailable_pwz;
XSLTKeywords::s_cstrElement_pwz;
XSLTKeywords::s_cstrElements;
XSLTKeywords::s_cstrElements_pwz;
XSLTKeywords::s_cstrExclPrefixes;
XSLTKeywords::s_cstrExclPrefixes_pwz;
XSLTKeywords::s_cstrExtElems;
XSLTKeywords::s_cstrExtElems_pwz;
XSLTKeywords::s_cstrFallback;
XSLTKeywords::s_cstrFallback_pwz;
XSLTKeywords::s_cstrForEach;
XSLTKeywords::s_cstrForEach_pwz;
XSLTKeywords::s_cstrFormat;
XSLTKeywords::s_cstrFormatNumber;
XSLTKeywords::s_cstrFormatNumberMSXSL;
XSLTKeywords::s_cstrFormatNumberMSXSL_pwz;
XSLTKeywords::s_cstrFormatNumber_pwz;
XSLTKeywords::s_cstrFormat_pwz;
XSLTKeywords::s_cstrFrom;
XSLTKeywords::s_cstrFrom_pwz;
XSLTKeywords::s_cstrFunctionAvailable;
XSLTKeywords::s_cstrFunctionAvailable_pwz;
XSLTKeywords::s_cstrGenerateId;
XSLTKeywords::s_cstrGenerateId_pwz;
XSLTKeywords::s_cstrGroupSize;
XSLTKeywords::s_cstrGroupSize_pwz;
XSLTKeywords::s_cstrGroupingSeparator;
XSLTKeywords::s_cstrGroupingSeparator_pwz;
XSLTKeywords::s_cstrHRef;
XSLTKeywords::s_cstrHRef_pwz;
XSLTKeywords::s_cstrHTML;
XSLTKeywords::s_cstrHTML_pwz;
XSLTKeywords::s_cstrId;
XSLTKeywords::s_cstrId_pwz;
XSLTKeywords::s_cstrIf;
XSLTKeywords::s_cstrIf_pwz;
XSLTKeywords::s_cstrImplementsPrefix;
XSLTKeywords::s_cstrImplementsPrefix_pwz;
XSLTKeywords::s_cstrImport;
XSLTKeywords::s_cstrImport_pwz;
XSLTKeywords::s_cstrInclude;
XSLTKeywords::s_cstrInclude_pwz;
XSLTKeywords::s_cstrIndent;
XSLTKeywords::s_cstrIndent_pwz;
XSLTKeywords::s_cstrInfinity;
XSLTKeywords::s_cstrInfinity_pwz;
XSLTKeywords::s_cstrKey;
XSLTKeywords::s_cstrKey_pwz;
XSLTKeywords::s_cstrLang;
XSLTKeywords::s_cstrLang_pwz;
XSLTKeywords::s_cstrLanguage;
XSLTKeywords::s_cstrLanguage_pwz;
XSLTKeywords::s_cstrLetterVal;
XSLTKeywords::s_cstrLetterVal_pwz;
XSLTKeywords::s_cstrLevel;
XSLTKeywords::s_cstrLevel_pwz;
XSLTKeywords::s_cstrMatch;
XSLTKeywords::s_cstrMatch_pwz;
XSLTKeywords::s_cstrMediaType;
XSLTKeywords::s_cstrMediaType_pwz;
XSLTKeywords::s_cstrMessage;
XSLTKeywords::s_cstrMessage_pwz;
XSLTKeywords::s_cstrMethod;
XSLTKeywords::s_cstrMethod_pwz;
XSLTKeywords::s_cstrMinusSign;
XSLTKeywords::s_cstrMinusSign_pwz;
XSLTKeywords::s_cstrMode;
XSLTKeywords::s_cstrMode_pwz;
XSLTKeywords::s_cstrNSMSXSL;
XSLTKeywords::s_cstrNSMSXSL_pwz;
XSLTKeywords::s_cstrNSXSLT;
XSLTKeywords::s_cstrNSXSLT_pwz;
XSLTKeywords::s_cstrNSXTL;
XSLTKeywords::s_cstrNSXTL_pwz;
XSLTKeywords::s_cstrNaN;
XSLTKeywords::s_cstrNaN_pwz;
XSLTKeywords::s_cstrName;
XSLTKeywords::s_cstrName_pwz;
XSLTKeywords::s_cstrNamespace;
XSLTKeywords::s_cstrNamespaceAlias;
XSLTKeywords::s_cstrNamespaceAlias_pwz;
XSLTKeywords::s_cstrNamespace_pwz;
XSLTKeywords::s_cstrNoOutputEscaping;
XSLTKeywords::s_cstrNoOutputEscaping_pwz;
XSLTKeywords::s_cstrNodeSetMSXSL;
XSLTKeywords::s_cstrNodeSetMSXSL_pwz;
XSLTKeywords::s_cstrNumber;
XSLTKeywords::s_cstrNumber_pwz;
XSLTKeywords::s_cstrOmitXMLDecl;
XSLTKeywords::s_cstrOmitXMLDecl_pwz;
XSLTKeywords::s_cstrOtherwise;
XSLTKeywords::s_cstrOtherwise_pwz;
XSLTKeywords::s_cstrOutput;
XSLTKeywords::s_cstrOutput_pwz;
XSLTKeywords::s_cstrParameter;
XSLTKeywords::s_cstrParameter_pwz;
XSLTKeywords::s_cstrPatternSeparator;
XSLTKeywords::s_cstrPatternSeparator_pwz;
XSLTKeywords::s_cstrPerMill;
XSLTKeywords::s_cstrPerMill_pwz;
XSLTKeywords::s_cstrPercent;
XSLTKeywords::s_cstrPercent_pwz;
XSLTKeywords::s_cstrPrefix;
XSLTKeywords::s_cstrPrefix_pwz;
XSLTKeywords::s_cstrPreserveSpace;
XSLTKeywords::s_cstrPreserveSpace_pwz;
XSLTKeywords::s_cstrPriority;
XSLTKeywords::s_cstrPriority_pwz;
XSLTKeywords::s_cstrProcessInstr;
XSLTKeywords::s_cstrProcessInstr_pwz;
XSLTKeywords::s_cstrResultPrefix;
XSLTKeywords::s_cstrResultPrefix_pwz;
XSLTKeywords::s_cstrScript;
XSLTKeywords::s_cstrScript_pwz;
XSLTKeywords::s_cstrSelect;
XSLTKeywords::s_cstrSelect_pwz;
XSLTKeywords::s_cstrSeparator;
XSLTKeywords::s_cstrSeparator_pwz;
XSLTKeywords::s_cstrSort;
XSLTKeywords::s_cstrSortOrder;
XSLTKeywords::s_cstrSortOrder_pwz;
XSLTKeywords::s_cstrSort_pwz;
XSLTKeywords::s_cstrStripSpace;
XSLTKeywords::s_cstrStripSpace_pwz;
XSLTKeywords::s_cstrStylesheet;
XSLTKeywords::s_cstrStylesheetPrefix;
XSLTKeywords::s_cstrStylesheetPrefix_pwz;
XSLTKeywords::s_cstrStylesheet_pwz;
XSLTKeywords::s_cstrSystemProperty;
XSLTKeywords::s_cstrSystemProperty_pwz;
XSLTKeywords::s_cstrTemplate;
XSLTKeywords::s_cstrTemplate_pwz;
XSLTKeywords::s_cstrTerminate;
XSLTKeywords::s_cstrTerminate_pwz;
XSLTKeywords::s_cstrTest;
XSLTKeywords::s_cstrTest_pwz;
XSLTKeywords::s_cstrText;
XSLTKeywords::s_cstrTextHtml;
XSLTKeywords::s_cstrTextHtml_pwz;
XSLTKeywords::s_cstrText_pwz;
XSLTKeywords::s_cstrTransform;
XSLTKeywords::s_cstrTransform_pwz;
XSLTKeywords::s_cstrUTF16;
XSLTKeywords::s_cstrUTF16_pwz;
XSLTKeywords::s_cstrUnparsedEntityUri;
XSLTKeywords::s_cstrUnparsedEntityUri_pwz;
XSLTKeywords::s_cstrUse;
XSLTKeywords::s_cstrUseAttrSets;
XSLTKeywords::s_cstrUseAttrSets_pwz;
XSLTKeywords::s_cstrUse_pwz;
XSLTKeywords::s_cstrValue;
XSLTKeywords::s_cstrValueOf;
XSLTKeywords::s_cstrValueOf_pwz;
XSLTKeywords::s_cstrValue_pwz;
XSLTKeywords::s_cstrVariable;
XSLTKeywords::s_cstrVariable_pwz;
XSLTKeywords::s_cstrVendor;
XSLTKeywords::s_cstrVendorURL;
XSLTKeywords::s_cstrVendorURLValue;
XSLTKeywords::s_cstrVendorURLValue_pwz;
XSLTKeywords::s_cstrVendorURL_pwz;
XSLTKeywords::s_cstrVendorValue;
XSLTKeywords::s_cstrVendorValue_pwz;
XSLTKeywords::s_cstrVendor_pwz;
XSLTKeywords::s_cstrVersion;
XSLTKeywords::s_cstrVersion_pwz;
XSLTKeywords::s_cstrWhen;
XSLTKeywords::s_cstrWhen_pwz;
XSLTKeywords::s_cstrWithParam;
XSLTKeywords::s_cstrWithParam_pwz;
XSLTKeywords::s_cstrXML;
XSLTKeywords::s_cstrXML_pwz;
XSLTKeywords::s_cstrZeroDigit;
XSLTKeywords::s_cstrZeroDigit_pwz;
XSLTKeywords::s_ki;
XSLTKeywords::s_nmCDATASection;
XSLTKeywords::s_nmCaseOrder;
XSLTKeywords::s_nmCount;
XSLTKeywords::s_nmDataType;
XSLTKeywords::s_nmDecimalSeparator;
XSLTKeywords::s_nmDigit;
XSLTKeywords::s_nmDocTypePublic;
XSLTKeywords::s_nmDocTypeSystem;
XSLTKeywords::s_nmElements;
XSLTKeywords::s_nmExclPrefixes;
XSLTKeywords::s_nmExtElems;
XSLTKeywords::s_nmFormat;
XSLTKeywords::s_nmFrom;
XSLTKeywords::s_nmGlobalExclPrefixes;
XSLTKeywords::s_nmGlobalExtElems;
XSLTKeywords::s_nmGlobalUseAttrSets;
XSLTKeywords::s_nmGlobalVendor;
XSLTKeywords::s_nmGlobalVendorURL;
XSLTKeywords::s_nmGlobalVersion;
XSLTKeywords::s_nmGlobalVersionMSXSL;
XSLTKeywords::s_nmGroupSize;
XSLTKeywords::s_nmGroupingSeparator;
XSLTKeywords::s_nmHRef;
XSLTKeywords::s_nmHTML;
XSLTKeywords::s_nmId;
XSLTKeywords::s_nmImplementsPrefix;
XSLTKeywords::s_nmIndent;
XSLTKeywords::s_nmInfinity;
XSLTKeywords::s_nmLang;
XSLTKeywords::s_nmLanguage;
XSLTKeywords::s_nmLetterVal;
XSLTKeywords::s_nmLevel;
XSLTKeywords::s_nmMatch;
XSLTKeywords::s_nmMediaType;
XSLTKeywords::s_nmMethod;
XSLTKeywords::s_nmMinusSign;
XSLTKeywords::s_nmMode;
XSLTKeywords::s_nmNaN;
XSLTKeywords::s_nmName;
XSLTKeywords::s_nmNamespace;
XSLTKeywords::s_nmNoOutputEscaping;
XSLTKeywords::s_nmOmitXMLDecl;
XSLTKeywords::s_nmPatternSeparator;
XSLTKeywords::s_nmPerMill;
XSLTKeywords::s_nmPercent;
XSLTKeywords::s_nmPriority;
XSLTKeywords::s_nmResultPrefix;
XSLTKeywords::s_nmSelect;
XSLTKeywords::s_nmSeparator;
XSLTKeywords::s_nmSortOrder;
XSLTKeywords::s_nmStylesheetPrefix;
XSLTKeywords::s_nmTerminate;
XSLTKeywords::s_nmTest;
XSLTKeywords::s_nmText;
XSLTKeywords::s_nmUse;
XSLTKeywords::s_nmUseAttrSets;
XSLTKeywords::s_nmValue;
XSLTKeywords::s_nmVersion;
XSLTKeywords::s_nmXML;
XSLTKeywords::s_nmZeroDigit;
XSLTPreserveVisitor::`vftable';
XSLTTextVisitor::`vftable';
XStreamAdapter::`vftable';
XStreamVerify::`vftable';
XUtility::GenerateIDTbl;
XmlDocumentActivationFactory::`vftable';
XsdBuilder::`vftable';
XsdTextElements;
XsltProcessorFactory::`vftable';
XsltProcessorImpl::`vftable';
_AnyCM;
_AnyCM$initializer$;
_CodebaseException::`vftable';
_CodebaseHashtable::`vftable';
_CodebaseString::`vftable';
_DELAY_IMPORT_DESCRIPTOR_CRYPT32_dll;
_DELAY_IMPORT_DESCRIPTOR_OLEAUT32_dll;
_DELAY_IMPORT_DESCRIPTOR_WINHTTP_dll;
_DELAY_IMPORT_DESCRIPTOR_WININET_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_core_com_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_core_com_l1_1_1_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_shcore_stream_winrt_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_bcrypt_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_core_iuri_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_ntuser_message_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_ntuser_synch_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_ntuser_window_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_ntuser_window_l1_1_4_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_ole32_bindctx_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_ext_ms_win_rtcore_ntuser_cursor_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_urlmon_dll;
_EmptyCM;
_EmptyCM$initializer$;
_IMPORT_DESCRIPTOR_RPCRT4;
_IMPORT_DESCRIPTOR_api-ms-win-core-apiquery-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-datetime-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-debug-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-delayload-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-delayload-l1-1-1;
_IMPORT_DESCRIPTOR_api-ms-win-core-errorhandling-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-file-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-handle-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-heap-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-heap-l2-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-libraryloader-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-localization-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-memory-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-processthreads-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-processthreads-l1-1-1;
_IMPORT_DESCRIPTOR_api-ms-win-core-profile-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-registry-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-shlwapi-legacy-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-shlwapi-obsolete-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-string-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-string-l2-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-synch-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-synch-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-sysinfo-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-threadpool-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-threadpool-legacy-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-timezone-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-url-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-util-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-winrt-error-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-winrt-error-l1-1-1;
_IMPORT_DESCRIPTOR_api-ms-win-core-winrt-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-winrt-string-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-security-base-l1-1-0;
_IMPORT_DESCRIPTOR_combase;
_IMPORT_DESCRIPTOR_msvcrt;
_IMPORT_DESCRIPTOR_ntdll;
_IServerXMLHTTPRequest2ProxyVtbl;
_IServerXMLHTTPRequest2StubVtbl;
_IServerXMLHTTPRequestProxyVtbl;
_IServerXMLHTTPRequestStubVtbl;
_IXMLHTTPRequest2CallbackProxyVtbl;
_IXMLHTTPRequest2CallbackStubVtbl;
_IXMLHTTPRequest2ProxyVtbl;
_IXMLHTTPRequest2StubVtbl;
_IXMLHTTPRequest3CallbackProxyVtbl;
_IXMLHTTPRequest3CallbackStubVtbl;
_IXMLHTTPRequest3ProxyVtbl;
_IXMLHTTPRequest3StubVtbl;
_IXMLHTTPRequestProxyVtbl;
_IXMLHTTPRequestStubVtbl;
_IXmlHttpRequestInternalProxyVtbl;
_IXmlHttpRequestInternalStubVtbl;
_Init_global_epoch;
_Init_thread_epoch;
_MXItem::_wszAnnotations;
_MXItem::`vftable';
_MXItem::s_rAnnotationsNameDef;
_MXType::`vftable';
_NDR64_RpcTransferSyntax;
_NULL_DELAY_IMPORT_DESCRIPTOR;
_NULL_IMPORT_DESCRIPTOR;
_RpcTransferSyntax;
_TextOnlyCM;
_TextOnlyCM$initializer$;
_Tss_cv;
_Tss_mutex;
__DefaultResolveDelayLoadedAPIFlags;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_FormatStringOffsetTable;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_Ndr64ProcTable;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_ProxyInfo;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_Rtti;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_Rtti_Properties;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_ServerInfo;
__FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocument_SyntaxInfo;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_FormatStringOffsetTable;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_Ndr64ProcTable;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_ProxyInfo;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_Rtti;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_Rtti_Properties;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_ServerInfo;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_SyntaxInfo;
__FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocument_table;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_FormatStringOffsetTable;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_Ndr64ProcTable;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_ProxyInfo;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_ServerInfo;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_SyntaxInfo;
__FIIterable_1_Windows__CData__CXml__CDom__CIXmlNode_table;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_FormatStringOffsetTable;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_Ndr64ProcTable;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_ProxyInfo;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_ServerInfo;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_SyntaxInfo;
__FIIterator_1_Windows__CData__CXml__CDom__CIXmlNode_table;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_FormatStringOffsetTable;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_Ndr64ProcTable;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_ProxyInfo;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_ServerInfo;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_SyntaxInfo;
__FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNode_table;
__PchSym_;
__ResolveDelayLoadedAPIFlags;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_1;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_2;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_3;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_1;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_2;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_3;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_4;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_5;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_6;
__WIL_WNF_WIL_FEATURE_USAGE_FOR_SRUM;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_1;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_2;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_3;
__WIL_WNF_WIL_MACHINE_FEATURE_STORE;
__WIL_WNF_WIL_MACHINE_FEATURE_STORE_MODIFIED;
__WIL_WNF_WIL_USER_FEATURE_STORE;
__WIL_WNF_WIL_USER_FEATURE_STORE_MODIFIED;
___FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocumentProxyVtbl;
___FIAsyncOperationCompletedHandler_1_Windows__CData__CXml__CDom__CXmlDocumentStubVtbl;
___FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocumentProxyVtbl;
___FIAsyncOperation_1_Windows__CData__CXml__CDom__CXmlDocumentStubVtbl;
___FIIterable_1_Windows__CData__CXml__CDom__CIXmlNodeProxyVtbl;
___FIIterable_1_Windows__CData__CXml__CDom__CIXmlNodeStubVtbl;
___FIIterator_1_Windows__CData__CXml__CDom__CIXmlNodeProxyVtbl;
___FIIterator_1_Windows__CData__CXml__CDom__CIXmlNodeStubVtbl;
___FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNodeProxyVtbl;
___FIVectorView_1_Windows__CData__CXml__CDom__CIXmlNodeStubVtbl;
___x_Windows_CData_CXml_CDom_CIDtdEntityProxyVtbl;
___x_Windows_CData_CXml_CDom_CIDtdEntityStubVtbl;
___x_Windows_CData_CXml_CDom_CIDtdNotationProxyVtbl;
___x_Windows_CData_CXml_CDom_CIDtdNotationStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlAttributeProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlAttributeStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCDataSectionProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCDataSectionStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCharacterDataProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCharacterDataStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCommentProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlCommentStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentFragmentProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentFragmentStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentIO2ProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentIO2StubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentIOProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentIOStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentStaticsProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentStaticsStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentTypeProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDocumentTypeStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDomImplementationProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlDomImplementationStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlElementProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlElementStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlEntityReferenceProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlEntityReferenceStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlLoadSettingsProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlLoadSettingsStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNamedNodeMapProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNamedNodeMapStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeListProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeListStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeSelectorProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeSelectorStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeSerializerProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeSerializerStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlNodeStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlProcessingInstructionProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlProcessingInstructionStubVtbl;
___x_Windows_CData_CXml_CDom_CIXmlTextProxyVtbl;
___x_Windows_CData_CXml_CDom_CIXmlTextStubVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessor2ProxyVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessor2StubVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessorFactoryProxyVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessorFactoryStubVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessorProxyVtbl;
___x_Windows_CData_CXml_CXsl_CIXsltProcessorStubVtbl;
__dyn_tls_init_callback;
__gitpointer::`vftable';
__guard_check_icall_fptr;
__guard_dispatch_icall_fptr;
__guard_fids_table;
__guard_iat_table;
__imp__onexit;
__midl_frag100;
__midl_frag101;
__midl_frag102;
__midl_frag105;
__midl_frag110;
__midl_frag111;
__midl_frag118;
__midl_frag119;
__midl_frag120;
__midl_frag121;
__midl_frag123;
__midl_frag124;
__midl_frag125;
__midl_frag126;
__midl_frag129;
__midl_frag130;
__midl_frag131;
__midl_frag132;
__midl_frag14;
__midl_frag140;
__midl_frag141;
__midl_frag142;
__midl_frag143;
__midl_frag144;
__midl_frag148;
__midl_frag15;
__midl_frag151;
__midl_frag152;
__midl_frag16;
__midl_frag160;
__midl_frag166;
__midl_frag167;
__midl_frag179;
__midl_frag195;
__midl_frag196;
__midl_frag2;
__midl_frag20;
__midl_frag200;
__midl_frag202;
__midl_frag203;
__midl_frag210;
__midl_frag215;
__midl_frag219;
__midl_frag220;
__midl_frag221;
__midl_frag223;
__midl_frag229;
__midl_frag234;
__midl_frag236;
__midl_frag239;
__midl_frag240;
__midl_frag242;
__midl_frag245;
__midl_frag248;
__midl_frag25;
__midl_frag250;
__midl_frag254;
__midl_frag255;
__midl_frag257;
__midl_frag260;
__midl_frag261;
__midl_frag263;
__midl_frag266;
__midl_frag267;
__midl_frag268;
__midl_frag269;
__midl_frag271;
__midl_frag272;
__midl_frag273;
__midl_frag274;
__midl_frag276;
__midl_frag282;
__midl_frag288;
__midl_frag289;
__midl_frag29;
__midl_frag290;
__midl_frag291;
__midl_frag293;
__midl_frag296;
__midl_frag297;
__midl_frag298;
__midl_frag299;
__midl_frag300;
__midl_frag303;
__midl_frag304;
__midl_frag305;
__midl_frag307;
__midl_frag309;
__midl_frag312;
__midl_frag313;
__midl_frag314;
__midl_frag316;
__midl_frag318;
__midl_frag323;
__midl_frag326;
__midl_frag327;
__midl_frag328;
__midl_frag330;
__midl_frag332;
__midl_frag334;
__midl_frag337;
__midl_frag34;
__midl_frag340;
__midl_frag341;
__midl_frag342;
__midl_frag345;
__midl_frag349;
__midl_frag35;
__midl_frag353;
__midl_frag354;
__midl_frag355;
__midl_frag356;
__midl_frag358;
__midl_frag36;
__midl_frag362;
__midl_frag365;
__midl_frag366;
__midl_frag367;
__midl_frag369;
__midl_frag37;
__midl_frag370;
__midl_frag371;
__midl_frag372;
__midl_frag374;
__midl_frag375;
__midl_frag376;
__midl_frag377;
__midl_frag378;
__midl_frag379;
__midl_frag38;
__midl_frag381;
__midl_frag383;
__midl_frag384;
__midl_frag385;
__midl_frag387;
__midl_frag388;
__midl_frag389;
__midl_frag39;
__midl_frag392;
__midl_frag394;
__midl_frag395;
__midl_frag396;
__midl_frag397;
__midl_frag398;
__midl_frag399;
__midl_frag4;
__midl_frag40;
__midl_frag400;
__midl_frag406;
__midl_frag407;
__midl_frag408;
__midl_frag409;
__midl_frag421;
__midl_frag429;
__midl_frag43;
__midl_frag433;
__midl_frag434;
__midl_frag435;
__midl_frag44;
__midl_frag465;
__midl_frag481;
__midl_frag5;
__midl_frag501;
__midl_frag51;
__midl_frag511;
__midl_frag52;
__midl_frag539;
__midl_frag542;
__midl_frag546;
__midl_frag547;
__midl_frag548;
__midl_frag552;
__midl_frag555;
__midl_frag556;
__midl_frag557;
__midl_frag559;
__midl_frag563;
__midl_frag564;
__midl_frag565;
__midl_frag57;
__midl_frag578;
__midl_frag58;
__midl_frag582;
__midl_frag59;
__midl_frag592;
__midl_frag593;
__midl_frag594;
__midl_frag595;
__midl_frag6;
__midl_frag612;
__midl_frag617;
__midl_frag618;
__midl_frag619;
__midl_frag62;
__midl_frag620;
__midl_frag622;
__midl_frag63;
__midl_frag64;
__midl_frag640;
__midl_frag656;
__midl_frag66;
__midl_frag663;
__midl_frag664;
__midl_frag665;
__midl_frag67;
__midl_frag679;
__midl_frag68;
__midl_frag680;
__midl_frag684;
__midl_frag686;
__midl_frag687;
__midl_frag688;
__midl_frag69;
__midl_frag690;
__midl_frag695;
__midl_frag699;
__midl_frag7;
__midl_frag700;
__midl_frag701;
__midl_frag702;
__midl_frag704;
__midl_frag709;
__midl_frag716;
__midl_frag717;
__midl_frag718;
__midl_frag72;
__midl_frag725;
__midl_frag73;
__midl_frag732;
__midl_frag733;
__midl_frag734;
__midl_frag735;
__midl_frag736;
__midl_frag737;
__midl_frag738;
__midl_frag739;
__midl_frag74;
__midl_frag741;
__midl_frag745;
__midl_frag746;
__midl_frag748;
__midl_frag749;
__midl_frag750;
__midl_frag751;
__midl_frag755;
__midl_frag756;
__midl_frag757;
__midl_frag758;
__midl_frag759;
__midl_frag760;
__midl_frag761;
__midl_frag79;
__midl_frag8;
__midl_frag80;
__midl_frag81;
__midl_frag85;
__midl_frag86;
__midl_frag87;
__midl_frag90;
__midl_frag91;
__midl_frag92;
__midl_frag95;
__midl_frag96;
__midl_frag97;
__midl_frag98;
__minATLObjMap_DOMDocumentWrapper;
__minATLObjMap_LoadSettings;
__minATLObjMap_XsltProcessorImpl;
__native_dllmain_reason;
__native_startup_lock;
__native_startup_state;
__objectFactory__DOMDocumentWrapper;
__objectFactory__LoadSettings;
__objectFactory__XsltProcessorImpl;
__object_DOMDocumentWrapper;
__object_LoadSettings;
__object_XsltProcessorImpl;
__onexitbegin;
__onexitend;
__pobjectentryfirst;
__pobjectentrylast;
__pobjectentrymid;
__proc_attached;
__rawdllmain_called;
__security_cookie;
__security_cookie_complement;
__x_Windows_CData_CXml_CDom_CIDtdEntity_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIDtdEntity_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIDtdEntity_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIDtdEntity_ServerInfo;
__x_Windows_CData_CXml_CDom_CIDtdEntity_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIDtdEntity_table;
__x_Windows_CData_CXml_CDom_CIDtdNotation_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIDtdNotation_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIDtdNotation_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIDtdNotation_ServerInfo;
__x_Windows_CData_CXml_CDom_CIDtdNotation_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIDtdNotation_table;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlAttribute_table;
__x_Windows_CData_CXml_CDom_CIXmlCDataSection_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlCDataSection_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlCDataSection_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlCDataSection_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlCDataSection_table;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlCharacterData_table;
__x_Windows_CData_CXml_CDom_CIXmlComment_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlComment_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlComment_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlComment_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlComment_table;
__x_Windows_CData_CXml_CDom_CIXmlDocumentFragment_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentFragment_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentFragment_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentFragment_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentFragment_table;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO2_table;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_MethodProperties;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_PropertyMapArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_SaveToFileAsync_PropertyArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_SaveToFileAsync_PropertyMap;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentIO_table;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromFileAsync_PropertyArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromFileAsync_PropertyMap;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromFileWithSettingsAsync_PropertyArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromFileWithSettingsAsync_PropertyMap;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromUriAsync_PropertyArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromUriAsync_PropertyMap;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromUriWithSettingsAsync_PropertyArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_LoadFromUriWithSettingsAsync_PropertyMap;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_MethodProperties;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_PropertyMapArray;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentStatics_table;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocumentType_table;
__x_Windows_CData_CXml_CDom_CIXmlDocument_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDocument_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDocument_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocument_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocument_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDocument_table;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlDomImplementation_table;
__x_Windows_CData_CXml_CDom_CIXmlElement_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlElement_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlElement_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlElement_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlElement_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlElement_table;
__x_Windows_CData_CXml_CDom_CIXmlEntityReference_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlEntityReference_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlEntityReference_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlEntityReference_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlEntityReference_table;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlLoadSettings_table;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlNamedNodeMap_table;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeList_table;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSelector_table;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlNodeSerializer_table;
__x_Windows_CData_CXml_CDom_CIXmlNode_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlNode_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlNode_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlNode_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlNode_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlNode_table;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlProcessingInstruction_table;
__x_Windows_CData_CXml_CDom_CIXmlText_FormatStringOffsetTable;
__x_Windows_CData_CXml_CDom_CIXmlText_Ndr64ProcTable;
__x_Windows_CData_CXml_CDom_CIXmlText_ProxyInfo;
__x_Windows_CData_CXml_CDom_CIXmlText_ServerInfo;
__x_Windows_CData_CXml_CDom_CIXmlText_SyntaxInfo;
__x_Windows_CData_CXml_CDom_CIXmlText_table;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_FormatStringOffsetTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_Ndr64ProcTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_ProxyInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_ServerInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_SyntaxInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor2_table;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_FormatStringOffsetTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_Ndr64ProcTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_ProxyInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_ServerInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_SyntaxInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessorFactory_table;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_FormatStringOffsetTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_Ndr64ProcTable;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_ProxyInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_ServerInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_SyntaxInfo;
__x_Windows_CData_CXml_CXsl_CIXsltProcessor_table;
__x_Windows_CFoundation_CAsyncActionCompletedHandler_Rtti;
__x_Windows_CFoundation_CAsyncOperationCompletedHandler_Rtti;
__x_Windows_CFoundation_CIAsyncAction_Rtti;
__x_Windows_CFoundation_CIAsyncAction_Rtti_Properties;
__x_Windows_CFoundation_CIAsyncOperation_Rtti;
__x_Windows_CFoundation_Rtti;
__x_Windows_Rtti;
__xc_a;
__xc_z;
__xi_a;
__xi_z;
__xl_a;
__xl_z;
_array<ImportManager::ImportInfo>::`vftable';
_array<IndexManager::IndexInfo>::`vftable';
_array<KeyNodeSet::MergeList>::`vftable';
_array<MatcherCollection::MatcherPriority>::`vftable';
_array<NodeSet * __ptr64>::`vftable';
_array<SymbolRef * __ptr64>::`vftable';
_array<TemplateSymbol * __ptr64>::`vftable';
_array<WhitespaceRules::NameTest>::`vftable';
_array<XAttributesImpl::AttrNameVal>::`vftable';
_array<XPBuilder::SortKey>::`vftable';
_array<XPNavData>::`vftable';
_array<XPNavHandle>::`vftable';
_array<XSLTAttributes::Attribute>::`vftable';
_array<XSyntaxNode * __ptr64>::`vftable';
_array<_reference<BitSet> >::`vftable';
_array<_reference<Name> >::`vftable';
_array<_reference<RegexFC> >::`vftable';
_array<_reference<String> >::`vftable';
_array<_reference<_array<int> > >::`vftable';
_array<int>::`vftable';
_array<unsigned int>::`vftable';
_array<unsigned short>::`vftable';
_array<void * __ptr64>::`vftable';
_category;
_classAnyNode;
_classBase;
_classContentNode;
_classDatatype_ENTITY;
_classDatatype_ID;
_classDatatype_IDREF;
_classDatatype_NCName;
_classDatatype_NMTOKEN;
_classDatatype_NOTATION;
_classDatatype_Name;
_classDatatype_QName;
_classDatatype_anyType;
_classDatatype_anyURI;
_classDatatype_base64Binary;
_classDatatype_boolean;
_classDatatype_byte;
_classDatatype_date;
_classDatatype_dateTime;
_classDatatype_dateTimeBase;
_classDatatype_day;
_classDatatype_decimal;
_classDatatype_double;
_classDatatype_duration;
_classDatatype_float;
_classDatatype_hexBinary;
_classDatatype_int;
_classDatatype_integer;
_classDatatype_language;
_classDatatype_long;
_classDatatype_month;
_classDatatype_monthDay;
_classDatatype_negativeInteger;
_classDatatype_nonNegativeInteger;
_classDatatype_nonPositiveInteger;
_classDatatype_normalizedString;
_classDatatype_positiveInteger;
_classDatatype_short;
_classDatatype_string;
_classDatatype_time;
_classDatatype_token;
_classDatatype_union;
_classDatatype_unsignedByte;
_classDatatype_unsignedInt;
_classDatatype_unsignedLong;
_classDatatype_unsignedShort;
_classDatatype_year;
_classDatatype_yearMonth;
_classDocument;
_classEmptyParticle;
_classException;
_classGenericBase;
_classHashtable;
_classInteger;
_classIntegerHashtable;
_classInternalNode;
_classMinMaxNode;
_className;
_classNameDef;
_classNoAddRefVector;
_classNode;
_classNullElement;
_classRefString;
_classRegexBase;
_classRegexBoyerMoore;
_classRegexCapture;
_classRegexCharClass;
_classRegexCode;
_classRegexFC;
_classRegexFCD;
_classRegexMatch;
_classRegexMatchSparse;
_classRegexPrefix;
_classRegexWriter;
_classSchema;
_classSchemaAnnotated;
_classSchemaDatatype;
_classSchemaElement;
_classSchemaNamedObject;
_classSchemaObject;
_classSchemaObjectBase;
_classSchemaParticle;
_classSchemaSimpleType;
_classSchemaType;
_classSingleRange;
_classStack;
_classString;
_classStringHashtable;
_classTerminal;
_classTypeWrapper;
_classVector;
_classVectorSpaceDelimeted;
_dispatch<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,1>::s_dispatchinfo;
_dispatch<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1>::s_dispatchinfo;
_dispatch<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,1>::s_dispatchinfo;
_dispatch<IMXXMLFilter,&LIBID_MSXML2,&IID_IMXXMLFilter,1>::s_dispatchinfo;
_dispatch<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,1>::s_dispatchinfo;
_dispatch<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0>::s_dispatchinfo;
_dispatch<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,1>::s_dispatchinfo;
_dispatch<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,1>::s_dispatchinfo;
_dispatch<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,1>::s_dispatchinfo;
_dispatch<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,1>::s_dispatchinfo;
_dispatch<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,1>::s_dispatchinfo;
_dispatch<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1>::s_dispatchinfo;
_dispatch<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,1>::s_dispatchinfo;
_dispatch<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1>::s_dispatchinfo;
_dispatch<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,1>::s_dispatchinfo;
_dispatch<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,1>::s_dispatchinfo;
_dispatch<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,1>::s_dispatchinfo;
_dispatch<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1>::s_dispatchinfo;
_dispatch<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,1>::s_dispatchinfo;
_dispatch<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,1>::s_dispatchinfo;
_dispatchImpl::s_wszSource;
_dispatchexport<Document,IXMLDOMDocument3,&LIBID_MSXML2,1,&IID_IXMLDOMDocument3>::s_dispatchinfo;
_guard_dispatch_icall_nop;
_hmod__CRYPT32_dll;
_hmod__OLEAUT32_dll;
_hmod__WINHTTP_dll;
_hmod__WININET_dll;
_hmod__api_ms_win_core_com_l1_1_0_dll;
_hmod__api_ms_win_core_com_l1_1_1_dll;
_hmod__api_ms_win_shcore_stream_winrt_l1_1_0_dll;
_hmod__bcrypt_dll;
_hmod__ext_ms_win_core_iuri_l1_1_0_dll;
_hmod__ext_ms_win_ntuser_message_l1_1_0_dll;
_hmod__ext_ms_win_ntuser_synch_l1_1_0_dll;
_hmod__ext_ms_win_ntuser_window_l1_1_0_dll;
_hmod__ext_ms_win_ntuser_window_l1_1_4_dll;
_hmod__ext_ms_win_ole32_bindctx_l1_1_0_dll;
_hmod__ext_ms_win_rtcore_ntuser_cursor_l1_1_0_dll;
_hmod__urlmon_dll;
_imp_AcquireSRWLockExclusive;
_imp_AcquireSRWLockShared;
_imp_ApiSetQueryApiSetPresence;
_imp_BCryptCloseAlgorithmProvider;
_imp_BCryptCreateHash;
_imp_BCryptDestroyHash;
_imp_BCryptFinishHash;
_imp_BCryptGenRandom;
_imp_BCryptGetProperty;
_imp_BCryptHashData;
_imp_BCryptOpenAlgorithmProvider;
_imp_BSTR_UserFree;
_imp_BSTR_UserFree64;
_imp_BSTR_UserMarshal;
_imp_BSTR_UserMarshal64;
_imp_BSTR_UserSize;
_imp_BSTR_UserSize64;
_imp_BSTR_UserUnmarshal;
_imp_BSTR_UserUnmarshal64;
_imp_CLSIDFromProgID;
_imp_CStdStubBuffer2_Connect;
_imp_CStdStubBuffer2_CountRefs;
_imp_CStdStubBuffer2_Disconnect;
_imp_CStdStubBuffer2_QueryInterface;
_imp_CStdStubBuffer_AddRef;
_imp_CStdStubBuffer_Connect;
_imp_CStdStubBuffer_CountRefs;
_imp_CStdStubBuffer_DebugServerQueryInterface;
_imp_CStdStubBuffer_DebugServerRelease;
_imp_CStdStubBuffer_Disconnect;
_imp_CStdStubBuffer_Invoke;
_imp_CStdStubBuffer_IsIIDSupported;
_imp_CStdStubBuffer_QueryInterface;
_imp_CallbackMayRunLong;
_imp_CertCloseStore;
_imp_CertFindCertificateInStore;
_imp_CertFreeCertificateChain;
_imp_CertFreeCertificateContext;
_imp_CertNameToStrW;
_imp_CertOpenStore;
_imp_CertSerializeCertificateStoreElement;
_imp_CharLowerW;
_imp_CharUpperBuffW;
_imp_CloseHandle;
_imp_CloseThreadpoolTimer;
_imp_CloseThreadpoolWork;
_imp_CoCreateFreeThreadedMarshaler;
_imp_CoCreateInstance;
_imp_CoDecrementMTAUsage;
_imp_CoGetApartmentType;
_imp_CoIncrementMTAUsage;
_imp_CoInitializeEx;
_imp_CoInternetGetSession;
_imp_CoMarshalInterface;
_imp_CoReleaseMarshalData;
_imp_CoTaskMemAlloc;
_imp_CoTaskMemFree;
_imp_CoUninitialize;
_imp_CoWaitForMultipleHandles;
_imp_CompareStringW;
_imp_CompatFlagsFromClsid;
_imp_CreateBindCtx;
_imp_CreateErrorInfo;
_imp_CreateEventExW;
_imp_CreateEventW;
_imp_CreateFileW;
_imp_CreateMutexExW;
_imp_CreateSemaphoreExW;
_imp_CreateStreamOnHGlobal;
_imp_CreateStreamOverRandomAccessStream;
_imp_CreateThreadpoolTimer;
_imp_CreateThreadpoolWork;
_imp_CreateURLMonikerEx;
_imp_CreateUri;
_imp_CryptProtectData;
_imp_CryptUnprotectData;
_imp_DebugBreak;
_imp_DecodePointer;
_imp_DelayLoadFailureHook;
_imp_DeleteCriticalSection;
_imp_DispatchMessageW;
_imp_EncodePointer;
_imp_EnterCriticalSection;
_imp_EtwGetTraceEnableFlags;
_imp_EtwGetTraceEnableLevel;
_imp_EtwGetTraceLoggerHandle;
_imp_EtwRegisterTraceGuidsW;
_imp_EtwTraceMessageVa;
_imp_EtwUnregisterTraceGuids;
_imp_FileTimeToSystemTime;
_imp_FindResourceExW;
_imp_FlushFileBuffers;
_imp_FormatMessageW;
_imp_FreeLibrary;
_imp_FreeLibraryWhenCallbackReturns;
_imp_GetAcceptLanguagesW;
_imp_GetActiveWindow;
_imp_GetCPInfo;
_imp_GetCurrentProcess;
_imp_GetCurrentProcessId;
_imp_GetCurrentThread;
_imp_GetCurrentThreadId;
_imp_GetDateFormatW;
_imp_GetErrorInfo;
_imp_GetFileType;
_imp_GetForegroundWindow;
_imp_GetLastError;
_imp_GetModuleFileNameA;
_imp_GetModuleFileNameW;
_imp_GetModuleHandleExW;
_imp_GetModuleHandleW;
_imp_GetProcAddress;
_imp_GetProcessHeap;
_imp_GetRestrictedErrorInfo;
_imp_GetSystemDirectoryW;
_imp_GetSystemInfo;
_imp_GetSystemTimeAsFileTime;
_imp_GetThreadLocale;
_imp_GetTickCount;
_imp_GetTimeFormatW;
_imp_GetTokenInformation;
_imp_HSTRING_UserFree;
_imp_HSTRING_UserFree64;
_imp_HSTRING_UserMarshal;
_imp_HSTRING_UserMarshal64;
_imp_HSTRING_UserSize;
_imp_HSTRING_UserSize64;
_imp_HSTRING_UserUnmarshal;
_imp_HSTRING_UserUnmarshal64;
_imp_HeapAlloc;
_imp_HeapCreate;
_imp_HeapDestroy;
_imp_HeapFree;
_imp_IUnknown_AddRef_Proxy;
_imp_IUnknown_QueryInterface_Proxy;
_imp_IUnknown_Release_Proxy;
_imp_InitOnceExecuteOnce;
_imp_InitializeCriticalSection;
_imp_InitializeCriticalSectionEx;
_imp_InitializeSRWLock;
_imp_InternetCrackUrlW;
_imp_InternetCreateUrlW;
_imp_InternetFreeCookies;
_imp_InternetGetCookieEx2;
_imp_InternetSetCookieEx2;
_imp_InternetSetOptionW;
_imp_IsDebuggerPresent;
_imp_IsErrorPropagationEnabled;
_imp_LCMapStringW;
_imp_LeaveCriticalSection;
_imp_LoadCursorW;
_imp_LoadLibraryExW;
_imp_LoadResource;
_imp_LoadTypeLib;
_imp_LocalAlloc;
_imp_LocalFree;
_imp_LockResource;
_imp_MsgWaitForMultipleObjectsEx;
_imp_MultiByteToWideChar;
_imp_NdrCStdStubBuffer2_Release;
_imp_NdrCStdStubBuffer_Release;
_imp_NdrDllCanUnloadNow;
_imp_NdrDllGetClassObject;
_imp_NdrOleAllocate;
_imp_NdrOleFree;
_imp_NdrProxyForwardingFunction3;
_imp_NdrProxyForwardingFunction4;
_imp_NdrProxyForwardingFunction5;
_imp_NdrProxyForwardingFunction6;
_imp_NdrStubCall3;
_imp_NdrStubForwardingFunction;
_imp_NtQuerySecurityAttributesToken;
_imp_NtQuerySecurityPolicy;
_imp_NtQuerySystemInformation;
_imp_ObjectStublessClient10;
_imp_ObjectStublessClient11;
_imp_ObjectStublessClient12;
_imp_ObjectStublessClient13;
_imp_ObjectStublessClient14;
_imp_ObjectStublessClient15;
_imp_ObjectStublessClient16;
_imp_ObjectStublessClient17;
_imp_ObjectStublessClient18;
_imp_ObjectStublessClient19;
_imp_ObjectStublessClient20;
_imp_ObjectStublessClient21;
_imp_ObjectStublessClient22;
_imp_ObjectStublessClient23;
_imp_ObjectStublessClient24;
_imp_ObjectStublessClient25;
_imp_ObjectStublessClient26;
_imp_ObjectStublessClient27;
_imp_ObjectStublessClient28;
_imp_ObjectStublessClient3;
_imp_ObjectStublessClient4;
_imp_ObjectStublessClient5;
_imp_ObjectStublessClient6;
_imp_ObjectStublessClient7;
_imp_ObjectStublessClient8;
_imp_ObjectStublessClient9;
_imp_OpenProcess;
_imp_OpenProcessToken;
_imp_OpenSemaphoreW;
_imp_OpenThreadToken;
_imp_OutputDebugStringW;
_imp_PathCreateFromUrlW;
_imp_PathIsRelativeW;
_imp_PathIsURLW;
_imp_PathSearchAndQualifyW;
_imp_PeekMessageW;
_imp_PostQuitMessage;
_imp_QueryPerformanceCounter;
_imp_QueueUserWorkItem;
_imp_RaiseException;
_imp_ReadFile;
_imp_RegCloseKey;
_imp_RegOpenKeyExW;
_imp_RegQueryValueExW;
_imp_RegisterBindStatusCallback;
_imp_ReleaseMutex;
_imp_ReleaseSRWLockExclusive;
_imp_ReleaseSRWLockShared;
_imp_ReleaseSemaphore;
_imp_ResetEvent;
_imp_ResolveDelayLoadedAPI;
_imp_RevertToSelf;
_imp_RevokeBindStatusCallback;
_imp_RoGetActivationFactory;
_imp_RoGetAgileReference;
_imp_RoGetMatchingRestrictedErrorInfo;
_imp_RoInitialize;
_imp_RoOriginateError;
_imp_RoOriginateErrorW;
_imp_RoReportFailedDelegate;
_imp_RoTransformError;
_imp_RoTransformErrorW;
_imp_RoUninitialize;
_imp_RtlAllocateHeap;
_imp_RtlCaptureContext;
_imp_RtlCompareMemory;
_imp_RtlCopyUnicodeString;
_imp_RtlFreeHeap;
_imp_RtlInitUnicodeString;
_imp_RtlLookupFunctionEntry;
_imp_RtlNtStatusToDosError;
_imp_RtlVirtualUnwind;
_imp_SafeArrayAccessData;
_imp_SafeArrayCopy;
_imp_SafeArrayCreateVector;
_imp_SafeArrayDestroy;
_imp_SafeArrayGetDim;
_imp_SafeArrayGetLBound;
_imp_SafeArrayGetUBound;
_imp_SafeArrayUnaccessData;
_imp_SetCursor;
_imp_SetEndOfFile;
_imp_SetErrorInfo;
_imp_SetEvent;
_imp_SetLastError;
_imp_SetRestrictedErrorInfo;
_imp_SetThreadToken;
_imp_SetThreadpoolTimer;
_imp_SetUnhandledExceptionFilter;
_imp_SizeofResource;
_imp_Sleep;
_imp_SleepConditionVariableSRW;
_imp_SleepEx;
_imp_StrCmpNIW;
_imp_StrCmpNW;
_imp_StrCmpW;
_imp_StrToIntW;
_imp_SubmitThreadpoolWork;
_imp_SwitchToThread;
_imp_SysAllocString;
_imp_SysAllocStringLen;
_imp_SysFreeString;
_imp_SysStringByteLen;
_imp_SysStringLen;
_imp_SystemTimeToFileTime;
_imp_TerminateProcess;
_imp_TlsAlloc;
_imp_TlsFree;
_imp_TlsGetValue;
_imp_TlsSetValue;
_imp_TranslateMessage;
_imp_UnhandledExceptionFilter;
_imp_UrlCanonicalizeW;
_imp_UrlCreateFromPathW;
_imp_UrlGetLocationW;
_imp_UrlIsW;
_imp_UrlMkGetSessionOption;
_imp_UrlUnescapeW;
_imp_VARIANT_UserFree;
_imp_VARIANT_UserFree64;
_imp_VARIANT_UserMarshal;
_imp_VARIANT_UserMarshal64;
_imp_VARIANT_UserSize;
_imp_VARIANT_UserSize64;
_imp_VARIANT_UserUnmarshal;
_imp_VARIANT_UserUnmarshal64;
_imp_VarDateFromUdate;
_imp_VarFormat;
_imp_VarNumFromParseNum;
_imp_VarParseNumFromStr;
_imp_VarUdateFromDate;
_imp_VariantChangeType;
_imp_VariantChangeTypeEx;
_imp_VariantClear;
_imp_VariantCopy;
_imp_VariantInit;
_imp_VirtualQuery;
_imp_WaitForMultipleObjectsEx;
_imp_WaitForSingleObject;
_imp_WaitForSingleObjectEx;
_imp_WaitForThreadpoolTimerCallbacks;
_imp_WakeAllConditionVariable;
_imp_WideCharToMultiByte;
_imp_WinHttpAddRequestHeaders;
_imp_WinHttpCloseHandle;
_imp_WinHttpConnect;
_imp_WinHttpCrackUrl;
_imp_WinHttpCreateUrl;
_imp_WinHttpOpen;
_imp_WinHttpOpenRequest;
_imp_WinHttpQueryDataAvailable;
_imp_WinHttpQueryHeaders;
_imp_WinHttpReadData;
_imp_WinHttpReceiveResponse;
_imp_WinHttpSendRequest;
_imp_WinHttpSetOption;
_imp_WindowsConcatString;
_imp_WindowsCreateString;
_imp_WindowsCreateStringReference;
_imp_WindowsDeleteString;
_imp_WindowsDeleteStringBuffer;
_imp_WindowsGetStringRawBuffer;
_imp_WindowsIsStringEmpty;
_imp_WindowsPreallocateStringBuffer;
_imp_WindowsPromoteStringBuffer;
_imp_WindowsStringHasEmbeddedNull;
_imp_WriteFile;
_imp__XcptFilter;
_imp___C_specific_handler;
_imp___CxxFrameHandler3;
_imp___dllonexit;
_imp__amsg_exit;
_imp__initterm;
_imp__lock;
_imp__purecall;
_imp__resetstkoflw;
_imp__unlock;
_imp__vsnwprintf;
_imp__wtof;
_imp__wtol;
_imp_bsearch;
_imp_ceil;
_imp_floor;
_imp_fmod;
_imp_free;
_imp_malloc;
_imp_memcmp;
_imp_memcpy;
_imp_memcpy_s;
_imp_memmove;
_imp_memmove_s;
_imp_memset;
_imp_qsort;
_imp_wcschr;
_imp_wcscmp;
_imp_wcsncmp;
_imp_wcsrchr;
_lcTable;
_load_config_used;
_msxml6_BaseIIDList;
_msxml6_InterfaceNamesList;
_msxml6_ProxyVtblList;
_msxml6_StubVtblList;
_msxml6i_BaseIIDList;
_msxml6i_InterfaceNamesList;
_msxml6i_ProxyVtblList;
_msxml6i_StubVtblList;
_pRawDllMain;
_real;
_realbfd0000000000000;
_realbfe0000000000000;
_realc1e0000000000000;
_realfff0000000000000;
_rglabArabic;
_rglabHindi;
_rglabJapanese;
_rglabKorean;
_rglabLatin;
_rglabRussian;
_rglabThai;
_rgnfcToLab;
_sz_CRYPT32_dll;
_sz_OLEAUT32_dll;
_sz_WINHTTP_dll;
_sz_WININET_dll;
_sz_api_ms_win_core_com_l1_1_0_dll;
_sz_api_ms_win_core_com_l1_1_1_dll;
_sz_api_ms_win_shcore_stream_winrt_l1_1_0_dll;
_sz_bcrypt_dll;
_sz_ext_ms_win_core_iuri_l1_1_0_dll;
_sz_ext_ms_win_ntuser_message_l1_1_0_dll;
_sz_ext_ms_win_ntuser_synch_l1_1_0_dll;
_sz_ext_ms_win_ntuser_window_l1_1_0_dll;
_sz_ext_ms_win_ntuser_window_l1_1_4_dll;
_sz_ext_ms_win_ole32_bindctx_l1_1_0_dll;
_sz_ext_ms_win_rtcore_ntuser_cursor_l1_1_0_dll;
_sz_urlmon_dll;
_tls_end;
_tls_index;
_tls_start;
_tls_used;
_windows2Edata2Exml_BaseIIDList;
_windows2Edata2Exml_InterfaceNamesList;
_windows2Edata2Exml_ProxyVtblList;
_windows2Edata2Exml_StubVtblList;
_xmm;
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::$TSS0;
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::moduleSingleton;
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate::`vftable';
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate::`vftable';
`wil::SetLastError'::`2'::lastThread;
`wil::SetLastError'::`5'::depth;
`wil::details::GetCurrentModuleName'::`2'::s_fModuleValid;
`wil::details::GetCurrentModuleName'::`2'::s_szModule;
`wil::details::LogFailure'::`2'::s_failureId;
`wil::details::RecordException'::`2'::s_cErrorCount;
`wil::details::RecordException'::`2'::s_hrErrorLast;
`wil::details::RecordFailFast'::`2'::s_hrErrorLast;
`wil::details::RecordLog'::`2'::s_cErrorCount;
`wil::details::RecordLog'::`2'::s_hrErrorLast;
`wil::details::RecordReturn'::`2'::s_cErrorCount;
`wil::details::RecordReturn'::`2'::s_hrErrorLast;
`wil::details::RtlDllShutdownInProgress'::`2'::s_pfnRtlDllShutdownInProgress;
`wil::details::RtlNtStatusToDosErrorNoTeb'::`2'::s_pfnRtlNtStatusToDosErrorNoTeb;
aNodeType2DOMNodeType;
aProxyFileList;
aXMLType2NT;
abIndex;
abType1Alpha;
abType1Digit;
adwData;
c_rgIntegerParse;
createNodeTypeNames;
deadlock_tracing::_fTracing;
failure_tracing::_count;
failure_tracing::_cs;
failure_tracing::_fInitialized;
failure_tracing::_stacks;
gPFactory;
g_AttListTable;
g_ContentModelTable;
g_DOMErrorCollection_dispidinvoketable;
g_DeclarationTable;
g_DocTypeTable;
g_ElementDeclTable;
g_EntityDeclTable;
g_ExternalIDTable;
g_IVBSAXAttributes_dispidinvoketable;
g_IVBSAXLocator_dispidinvoketable;
g_IXMLDOMSelection_dispidinvoketable;
g_IXSLProcessor_dispidinvoketable;
g_IXSLTemplate_dispidinvoketable;
g_IsName;
g_MXItemCollection_dispidinvoketable;
g_MXNamespaceManager_dispidinvoketable;
g_MXNamespacePrefixes_dispidinvoketable;
g_MXStringCollection_dispidinvoketable;
g_MXXMLFilter_dispidinvoketable;
g_MXXMLWriter_dispidinvoketable;
g_MixedModelTable;
g_MuliValued;
g_NamespacesCollection_dispidinvoketable;
g_NotationDeclTable;
g_RegexPropTable;
g_SAXAttributes_dispidinvoketable;
g_SAXReaderWrapper_dispidinvoketable;
g_SavedExceptionRecord;
g_VBSAXTranslator_dispidinvoketable;
g_XMLDeclarationTable;
g_XmlHttp_dispidinvoketable;
g__MXItem_dispidinvoketable;
g_anCharProps;
g_apCharTables;
g_cComponents;
g_cServerLocks;
g_cUnkList;
g_dwNumberProcessors;
g_dwPageSize;
g_dwTlsIndex;
g_fClassInitCalled;
g_fClassInitFailed;
g_fHasExited;
g_fInShutDown;
g_fMultiProcessor;
g_fProcessShutdown;
g_hInstance;
g_hMsxmlHeap;
g_header_init_InitializeResultHeader;
g_header_init_InitializeStagingHeaderInternalApi;
g_header_init_InitializeStagingSRUMFeatureReporting;
g_header_init_WilInitialize_ResultMacros_DesktopOrSystem;
g_lApartmentMutexCount;
g_lCSMutexCount;
g_lClassFactoryExtRefs;
g_lCookieCount;
g_lDocumentCount;
g_lShareMutexCount;
g_nProcessAttachStatus;
g_pCatInfo;
g_pGIT;
g_pMutex;
g_pMutexAtom;
g_pMutexName;
g_pMutexORegion;
g_pMutexPointer;
g_pMutexSR;
g_pMutexXSLTInit;
g_pUnkList;
g_pfnEntry;
g_pfnResultLoggingCallback;
g_pfnThrowPlatformException;
g_ptlsdataExtra;
g_rgFastWppEnabledFlagsPerLevel;
g_rgchHex;
g_rgdblTens;
g_rgnumNeg;
g_rgnumPos;
g_ulAtomsCount;
g_ulNamesCount;
g_wil_details_RecordSRUMFeatureUsage;
g_wil_details_apiRecordFeatureUsage;
g_wil_details_internalRecordFeatureUsage;
g_wil_details_internalSubscribeFeatureStateChangeNotification;
g_wil_details_internalUnsubscribeFeatureStateChangeNotification;
g_wil_details_ntdllModuleHandle;
g_wil_details_pfnNtQueryWnfStateData;
g_wil_details_pfnNtUpdateWnfStateData;
g_wil_details_pfnRtlSubscribeWnfStateChangeNotification;
g_wil_details_pfnRtlUnsubscribeWnfNotificationWaitForCompletion;
g_wil_details_preventOnDemandStagingConfigReads;
gc_mpchhbHalfByteToChar;
initOnce;
leak_tracing::_fTracing;
mpitoAbjad;
mpitoAlpha;
mpitoHebAlpha;
mpitoHindiAlpha1;
mpitoHindiAlpha2;
mpitoThaiAlpha1;
msxml6_ProxyFileInfo;
msxml6__MIDL_ProcFormatString;
msxml6__MIDL_TypeFormatString;
msxml6i_ProxyFileInfo;
msxml6i__MIDL_ProcFormatString;
msxml6i__MIDL_TypeFormatString;
pDataLevel1;
pDataLevel2;
pDataLevel3;
pcinit;
pwszDataTypeNames;
readyStates;
rgIIDs_IXMLDOMNode;
rgIIDs_IXMLDOMSchemaCollection;
rgInheritance;
rgbDecodeBase64;
rgrgwchChnFormalOrder;
rgrgwchDbDigit10Korea;
rgrgwchDbDigit3Korea;
rgrgwchDbOrder3;
rgrgwchTwnFormalOrder;
rgwchAiueoNum;
rgwchAiueoNumSingle;
rgwchBase64;
rgwchChineseCasualDigit4;
rgwchChnFormalDigit;
rgwchChosungNum;
rgwchDbDigits1;
rgwchDbDigits1Korea;
rgwchDbDigits3;
rgwchDbDigits4Kor;
rgwchGanadaNum;
rgwchIrohaNum;
rgwchIrohaNumSingle;
rgwchTwnFormalDigit;
rgwchZodiac1;
rgwchZodiac2;
s_AxisLookup;
s_ByteOrderMark;
s_DOMDocument_DispIdMap;
s_DOMError_DispIdMap;
s_DOMNamedNodeMap_DispIdMap;
s_DOMNodeList_DispIdMap;
s_DOMNode_DispIdMap;
s_FunctionLookup;
s_IXMLDOMElement_DispIdMap;
s_IsAppContainer;
s_aNodeType2AllowedChildTypes;
s_aNodeType2ElementType;
s_aNodeType2Flags;
s_aNodeType2XPType;
s_adtinfo;
s_adtparse;
s_argTypeIIDs_DOMDocument3_importNode;
s_argTypeIIDs_DOMDocument3_validateNode;
s_argTypeIIDs_IMXXMLFilter_contentHandler;
s_argTypeIIDs_IMXXMLFilter_dtdHandler;
s_argTypeIIDs_IMXXMLFilter_entityResolver;
s_argTypeIIDs_IMXXMLFilter_errorHandler;
s_argTypeIIDs_IVBMXNamespaceManager_getURIFromNode;
s_argTypeIIDs_IVBMXNamespaceManager_pushNodeContext;
s_argTypeIIDs_IVBSAXContentHandler_documentLocator;
s_argTypeIIDs_IVBSAXContentHandler_startElement;
s_argTypeIIDs_IVBSAXErrorHandler_error;
s_argTypeIIDs_IVBSAXErrorHandler_fatalError;
s_argTypeIIDs_IVBSAXErrorHandler_ignorableWarning;
s_argTypeIIDs_IVBSAXXMLReader_contentHandler;
s_argTypeIIDs_IVBSAXXMLReader_dtdHandler;
s_argTypeIIDs_IVBSAXXMLReader_entityResolver;
s_argTypeIIDs_IVBSAXXMLReader_errorHandler;
s_argTypeIIDs_IXMLDOMElement_removeAttributeNode;
s_argTypeIIDs_IXMLDOMElement_setAttributeNode;
s_argTypeIIDs_IXMLDOMSelection_context;
s_argTypeIIDs_IXMLDOMSelection_matches;
s_argTypeIIDs_IXMLHTTPRequest_onreadystatechange;
s_argTypeIIDs_IXSLProcessor_addObject;
s_argTypeIIDs_IXSLProcessor_stylesheet;
s_argTypeIIDs_IXSLTemplate_stylesheet;
s_argTypeIds_DOMDocument2_schemas;
s_argTypeIds_DOMDocument_documentElement;
s_argTypeIds_DOMNode_appendChild;
s_argTypeIds_DOMNode_insertBefore;
s_argTypeIds_DOMNode_removeChild;
s_argTypeIds_DOMNode_replaceChild;
s_argTypeIds_DOMNode_transformNode;
s_argTypeIds_DOMNode_transformNodeToObject;
s_argTypesIIDs_DOMNamedNodeMap_setNamedItem;
s_argTypes_BOOL;
s_argTypes_BSTR;
s_argTypes_BSTR_VARIANT;
s_argTypes_DISPATCH;
s_argTypes_DOMDocument2_getProperty;
s_argTypes_DOMDocument2_schemas;
s_argTypes_DOMDocument2_setProperty;
s_argTypes_DOMDocument3_importNode;
s_argTypes_DOMDocument3_validateNode;
s_argTypes_DOMDocument_async;
s_argTypes_DOMDocument_createAttribute;
s_argTypes_DOMDocument_createCDATASection;
s_argTypes_DOMDocument_createComment;
s_argTypes_DOMDocument_createElement;
s_argTypes_DOMDocument_createEntityReference;
s_argTypes_DOMDocument_createNode;
s_argTypes_DOMDocument_createProcessingInstruction;
s_argTypes_DOMDocument_createTextNode;
s_argTypes_DOMDocument_documentElement;
s_argTypes_DOMDocument_getByTagName;
s_argTypes_DOMDocument_load;
s_argTypes_DOMDocument_loadXML;
s_argTypes_DOMDocument_nodeFromID;
s_argTypes_DOMDocument_ondataavailable;
s_argTypes_DOMDocument_onreadystatechange;
s_argTypes_DOMDocument_ontransformnode;
s_argTypes_DOMDocument_preserveWhiteSpace;
s_argTypes_DOMDocument_resolveExternals;
s_argTypes_DOMDocument_save;
s_argTypes_DOMDocument_validateOnParse;
s_argTypes_DOMNamedNodeMap_getNamedItem;
s_argTypes_DOMNamedNodeMap_getQualifiedItem;
s_argTypes_DOMNamedNodeMap_item;
s_argTypes_DOMNamedNodeMap_removeNamedItem;
s_argTypes_DOMNamedNodeMap_removeQualifiedItem;
s_argTypes_DOMNamedNodeMap_setNamedItem;
s_argTypes_DOMNodeList_item;
s_argTypes_DOMNode_appendChild;
s_argTypes_DOMNode_cloneNode;
s_argTypes_DOMNode_dataType;
s_argTypes_DOMNode_insertBefore;
s_argTypes_DOMNode_nodeTypedValue;
s_argTypes_DOMNode_nodeValue;
s_argTypes_DOMNode_removeChild;
s_argTypes_DOMNode_replaceChild;
s_argTypes_DOMNode_selectNodes;
s_argTypes_DOMNode_selectSingleNode;
s_argTypes_DOMNode_text;
s_argTypes_DOMNode_transformNode;
s_argTypes_DOMNode_transformNodeToObject;
s_argTypes_I4;
s_argTypes_IIXMLDOMParseError_errorParameters;
s_argTypes_IMXAttributes_addAttribute;
s_argTypes_IMXAttributes_addAttributeFromIndex;
s_argTypes_IMXAttributes_removeAttribute;
s_argTypes_IMXAttributes_setAttribute;
s_argTypes_IMXAttributes_setAttributes;
s_argTypes_IMXAttributes_setLocalName;
s_argTypes_IMXAttributes_setQName;
s_argTypes_IMXAttributes_setType;
s_argTypes_IMXAttributes_setURI;
s_argTypes_IMXAttributes_setValue;
s_argTypes_IMXWriter_byteOrderMark;
s_argTypes_IMXWriter_disableOutputEscaping;
s_argTypes_IMXWriter_encoding;
s_argTypes_IMXWriter_indent;
s_argTypes_IMXWriter_omitXMLDeclaration;
s_argTypes_IMXWriter_output;
s_argTypes_IMXWriter_standalone;
s_argTypes_IMXWriter_version;
s_argTypes_IMXXMLFilter_contentHandler;
s_argTypes_IMXXMLFilter_dtdHandler;
s_argTypes_IMXXMLFilter_entityResolver;
s_argTypes_IMXXMLFilter_errorHandler;
s_argTypes_IMXXMLFilter_getFeature;
s_argTypes_IMXXMLFilter_getProperty;
s_argTypes_IMXXMLFilter_putFeature;
s_argTypes_IMXXMLFilter_putProperty;
s_argTypes_ISchemaItemCollection_item;
s_argTypes_ISchemaItemCollection_itemByName;
s_argTypes_ISchemaItemCollection_itemByQName;
s_argTypes_ISchemaItem_writeAnnotation;
s_argTypes_ISchemaStringCollection_item;
s_argTypes_ISchemaType_isValid;
s_argTypes_IServerXMLHTTPRequest2_setProxy;
s_argTypes_IServerXMLHTTPRequest2_setProxyCredentials;
s_argTypes_IServerXMLHTTPRequest_getOption;
s_argTypes_IServerXMLHTTPRequest_setOption;
s_argTypes_IServerXMLHTTPRequest_setTimeouts;
s_argTypes_IServerXMLHTTPRequest_waitForResponse;
s_argTypes_IVBMXNamespaceManager_allowOverride;
s_argTypes_IVBMXNamespaceManager_declarePrefix;
s_argTypes_IVBMXNamespaceManager_getPrefixes;
s_argTypes_IVBMXNamespaceManager_getURI;
s_argTypes_IVBMXNamespaceManager_getURIFromNode;
s_argTypes_IVBMXNamespaceManager_pushNodeContext;
s_argTypes_IVBSAXAttributes_getIndexFromName;
s_argTypes_IVBSAXAttributes_getIndexFromQName;
s_argTypes_IVBSAXAttributes_getLocalName;
s_argTypes_IVBSAXAttributes_getQName;
s_argTypes_IVBSAXAttributes_getType;
s_argTypes_IVBSAXAttributes_getTypeFromName;
s_argTypes_IVBSAXAttributes_getTypeFromQName;
s_argTypes_IVBSAXAttributes_getURI;
s_argTypes_IVBSAXAttributes_getValue;
s_argTypes_IVBSAXAttributes_getValueFromName;
s_argTypes_IVBSAXAttributes_getValueFromQName;
s_argTypes_IVBSAXContentHandler_characters;
s_argTypes_IVBSAXContentHandler_documentLocator;
s_argTypes_IVBSAXContentHandler_endElement;
s_argTypes_IVBSAXContentHandler_endPrefixMapping;
s_argTypes_IVBSAXContentHandler_ignorableWhitespace;
s_argTypes_IVBSAXContentHandler_processingInstruction;
s_argTypes_IVBSAXContentHandler_skippedEntity;
s_argTypes_IVBSAXContentHandler_startElement;
s_argTypes_IVBSAXContentHandler_startPrefixMapping;
s_argTypes_IVBSAXDTDHandler_notationDecl;
s_argTypes_IVBSAXDTDHandler_unparsedEntityDecl;
s_argTypes_IVBSAXDeclHandler_attributeDecl;
s_argTypes_IVBSAXDeclHandler_elementDecl;
s_argTypes_IVBSAXDeclHandler_externalEntityDecl;
s_argTypes_IVBSAXDeclHandler_internalEntityDecl;
s_argTypes_IVBSAXErrorHandler_error;
s_argTypes_IVBSAXErrorHandler_fatalError;
s_argTypes_IVBSAXErrorHandler_ignorableWarning;
s_argTypes_IVBSAXLexicalHandler_comment;
s_argTypes_IVBSAXLexicalHandler_endEntity;
s_argTypes_IVBSAXLexicalHandler_startDTD;
s_argTypes_IVBSAXLexicalHandler_startEntity;
s_argTypes_IVBSAXXMLReader_baseURL;
s_argTypes_IVBSAXXMLReader_contentHandler;
s_argTypes_IVBSAXXMLReader_dtdHandler;
s_argTypes_IVBSAXXMLReader_entityResolver;
s_argTypes_IVBSAXXMLReader_errorHandler;
s_argTypes_IVBSAXXMLReader_getFeature;
s_argTypes_IVBSAXXMLReader_getProperty;
s_argTypes_IVBSAXXMLReader_parse;
s_argTypes_IVBSAXXMLReader_parseURL;
s_argTypes_IVBSAXXMLReader_putFeature;
s_argTypes_IVBSAXXMLReader_putProperty;
s_argTypes_IVBSAXXMLReader_secureBaseURL;
s_argTypes_IXMLDOMElement_getAttribute;
s_argTypes_IXMLDOMElement_getAttributeNode;
s_argTypes_IXMLDOMElement_getElementsByTagName;
s_argTypes_IXMLDOMElement_removeAttribute;
s_argTypes_IXMLDOMElement_removeAttributeNode;
s_argTypes_IXMLDOMElement_setAttribute;
s_argTypes_IXMLDOMElement_setAttributeNode;
s_argTypes_IXMLDOMNodeList_item;
s_argTypes_IXMLDOMParseErrorCollection_item;
s_argTypes_IXMLDOMSelection_context;
s_argTypes_IXMLDOMSelection_expr;
s_argTypes_IXMLDOMSelection_getProperty;
s_argTypes_IXMLDOMSelection_matches;
s_argTypes_IXMLDOMSelection_setProperty;
s_argTypes_IXMLHTTPRequest_getResponseHeader;
s_argTypes_IXMLHTTPRequest_onreadystatechange;
s_argTypes_IXMLHTTPRequest_open;
s_argTypes_IXMLHTTPRequest_send;
s_argTypes_IXMLHTTPRequest_setRequestHeader;
s_argTypes_IXSLProcessor_addObject;
s_argTypes_IXSLProcessor_addParameter;
s_argTypes_IXSLProcessor_input;
s_argTypes_IXSLProcessor_output;
s_argTypes_IXSLProcessor_setStartMode;
s_argTypes_IXSLProcessor_stylesheet;
s_argTypes_IXSLTemplate_stylesheet;
s_argTypes_MXNamespacePrefixes_item;
s_awszTypes;
s_cstrHash_cdata_section;
s_cstrHash_cdata_section$initializer$;
s_cstrHash_cdata_section_pwz;
s_cstrHash_comment;
s_cstrHash_comment$initializer$;
s_cstrHash_comment_pwz;
s_cstrHash_document;
s_cstrHash_document$initializer$;
s_cstrHash_document_fragment;
s_cstrHash_document_fragment$initializer$;
s_cstrHash_document_fragment_pwz;
s_cstrHash_document_pwz;
s_cstrHash_text;
s_cstrHash_text$initializer$;
s_cstrHash_text_pwz;
s_iids_attribute;
s_iids_cdata;
s_iids_comment;
s_iids_document;
s_iids_documentfragment;
s_iids_documenttype;
s_iids_element;
s_iids_entity;
s_iids_entityref;
s_iids_notation;
s_iids_pi;
s_iids_text;
s_pMLang;
s_pMLang2;
s_pwcScanTargets;
s_rgDOMDocumentMethods;
s_rgDOMErrorCollectionMethods;
s_rgDOMErrorMethods;
s_rgDOMNamedNodeMapMethods;
s_rgDOMNodeListMethods;
s_rgDOMNodeMethods;
s_rgIVBSAXAttributesMethods;
s_rgIVBSAXLocatorMethods;
s_rgIXMLDOMElementMethods;
s_rgIXMLDOMSelectionMethods;
s_rgIXSLProcessorMethods;
s_rgIXSLTemplateMethods;
s_rgMXItemCollectionMethods;
s_rgMXNamespaceManagerMethods;
s_rgMXNamespacePrefixesMethods;
s_rgMXStringCollectionMethods;
s_rgMXXMLFilterMethods;
s_rgMXXMLWriterMethods;
s_rgNamespacesCollectionMethods;
s_rgSAXAttributesMethods;
s_rgSAXReaderWrapperMethods;
s_rgVBSAXTranslatorMethods;
s_rgXmlHttpMethods;
s_rg_MXItemMethods;
s_wszXPath;
s_wszXSLPattern;
salt;
sha2;
sha2$initializer$;
std::nothrow;
vwzListFmtLabDanNor;
vwzListFmtLabFinSwe;
vwzListFmtLabRus;
wil::details::ThreadFailureCallbackHolder::s_telemetryId;
wil::details::g_featureStateManager;
wil::details::g_featureStateManager$initializer$;
wil::details::g_header_init_InitializeResultHeader$initializer$;
wil::details::g_header_init_InitializeStagingHeaderInternalApi$initializer$;
wil::details::g_header_init_InitializeStagingSRUMFeatureReporting$initializer$;
wil::details::g_header_init_WilInitialize_ResultMacros_DesktopOrSystem$initializer$;
wil::details::g_pThreadFailureCallbacks;
wil::details::g_pfnDebugBreak;
wil::details::g_pfnGetContextAndNotifyFailure;
wil::details::g_pfnGetModuleName;
wil::details::g_pfnLoggingCallback;
wil::details::g_pfnOriginateCallback;
wil::details::g_pfnRaiseFailFastException;
wil::details::g_pfnRtlDllShutdownInProgress;
wil::details::g_pfnRtlNtStatusToDosErrorNoTeb;
wil::details::g_pfnTelemetryCallback;
wil::details::g_pfnThrowResultException;
wil::details::g_processLocalData;
wil::details::g_processLocalData$initializer$;
wil::details::g_processShutdownInProgress;
wil::details::g_resultMessageCallbackSet;
wil::details::g_threadFailureCallbacks;
wil::details::g_threadFailureCallbacks$initializer$;
wil::details_abi::g_pProcessLocalData;
wil::g_fBreakOnFailure;
wil::g_fIsDebuggerPresent;
wil::g_pfnIsDebuggerPresent;
wil::g_pfnWilFailFast;
windows2Edata2Exml_ProxyFileInfo;
windows2Edata2Exml__MIDL_ProcFormatString;
windows2Edata2Exml__MIDL_TypeFormatString;
wistd::_Func_base<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`vftable';
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`vftable';
wszEmpty;
xarray<AttrInfo,xarray_allocator<AttrInfo> >::`vftable';
xarray<Base * __ptr64,xarray_allocator<Base * __ptr64> >::`vftable';
xarray<HTTPHeader,HTTPHeaders>::`vftable';
xarray<MinMaxNode * __ptr64,xarray_allocator<MinMaxNode * __ptr64> >::`vftable';
xarray<NamespaceMgr::Entry,NamespaceMgr::Entry>::`vftable';
xarray<Node * __ptr64,xarray_allocator<Node * __ptr64> >::`vftable';
xarray<NodeDeclPair,xarray_allocator<NodeDeclPair> >::`vftable';
xarray<PosInfo,xarray_allocator<PosInfo> >::`vftable';
xarray<Position,xarray_allocator<Position> >::`vftable';
xarray<unsigned __int64,xarray_allocator<unsigned __int64> >::`vftable';
xarray<xstring,xstrings>::`vftable';
xobject<Object,&IID_IUnknown>::`vftable';
xunknown<ISequentialStream,&IID_ISequentialStream>::`vftable';
xunknown<IStream,&IID_IStream>::`vftable';
xunknown<IUnknown,&IID_IUnknown>::`vftable';
xunknown<Object,&IID_IUnknown>::`vftable';
CRYPT32_NULL_THUNK_DATA_DLA;
CRYPT32_NULL_THUNK_DATA_DLB;
CRYPT32_NULL_THUNK_DATA_DLN;
OLEAUT32_NULL_THUNK_DATA_DLA;
OLEAUT32_NULL_THUNK_DATA_DLB;
OLEAUT32_NULL_THUNK_DATA_DLN;
RPCRT4_NULL_THUNK_DATA;
WINHTTP_NULL_THUNK_DATA_DLA;
WINHTTP_NULL_THUNK_DATA_DLB;
WINHTTP_NULL_THUNK_DATA_DLN;
WININET_NULL_THUNK_DATA_DLA;
WININET_NULL_THUNK_DATA_DLB;
WININET_NULL_THUNK_DATA_DLN;
api-ms-win-core-apiquery-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLA;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLB;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLN;
api-ms-win-core-com-l1-1-1_NULL_THUNK_DATA_DLA;
api-ms-win-core-com-l1-1-1_NULL_THUNK_DATA_DLB;
api-ms-win-core-com-l1-1-1_NULL_THUNK_DATA_DLN;
api-ms-win-core-datetime-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-debug-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-delayload-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-delayload-l1-1-1_NULL_THUNK_DATA;
api-ms-win-core-errorhandling-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-file-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-handle-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-heap-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-heap-l2-1-0_NULL_THUNK_DATA;
api-ms-win-core-libraryloader-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-localization-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-memory-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-processthreads-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-processthreads-l1-1-1_NULL_THUNK_DATA;
api-ms-win-core-profile-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-registry-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-shlwapi-legacy-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-shlwapi-obsolete-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-string-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-string-l2-1-0_NULL_THUNK_DATA;
api-ms-win-core-synch-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-synch-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-sysinfo-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-threadpool-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-threadpool-legacy-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-timezone-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-url-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-util-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-winrt-error-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-winrt-error-l1-1-1_NULL_THUNK_DATA;
api-ms-win-core-winrt-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-winrt-string-l1-1-0_NULL_THUNK_DATA;
api-ms-win-security-base-l1-1-0_NULL_THUNK_DATA;
api-ms-win-shcore-stream-winrt-l1-1-0_NULL_THUNK_DATA_DLA;
api-ms-win-shcore-stream-winrt-l1-1-0_NULL_THUNK_DATA_DLB;
api-ms-win-shcore-stream-winrt-l1-1-0_NULL_THUNK_DATA_DLN;
bcrypt_NULL_THUNK_DATA_DLA;
bcrypt_NULL_THUNK_DATA_DLB;
bcrypt_NULL_THUNK_DATA_DLN;
combase_NULL_THUNK_DATA;
ext-ms-win-core-iuri-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-core-iuri-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-core-iuri-l1-1-0_NULL_THUNK_DATA_DLN;
ext-ms-win-ntuser-message-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-ntuser-message-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-ntuser-message-l1-1-0_NULL_THUNK_DATA_DLN;
ext-ms-win-ntuser-synch-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-ntuser-synch-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-ntuser-synch-l1-1-0_NULL_THUNK_DATA_DLN;
ext-ms-win-ntuser-window-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-ntuser-window-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-ntuser-window-l1-1-0_NULL_THUNK_DATA_DLN;
ext-ms-win-ntuser-window-l1-1-4_NULL_THUNK_DATA_DLA;
ext-ms-win-ntuser-window-l1-1-4_NULL_THUNK_DATA_DLB;
ext-ms-win-ntuser-window-l1-1-4_NULL_THUNK_DATA_DLN;
ext-ms-win-ole32-bindctx-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-ole32-bindctx-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-ole32-bindctx-l1-1-0_NULL_THUNK_DATA_DLN;
ext-ms-win-rtcore-ntuser-cursor-l1-1-0_NULL_THUNK_DATA_DLA;
ext-ms-win-rtcore-ntuser-cursor-l1-1-0_NULL_THUNK_DATA_DLB;
ext-ms-win-rtcore-ntuser-cursor-l1-1-0_NULL_THUNK_DATA_DLN;
msvcrt_NULL_THUNK_DATA;
ntdll_NULL_THUNK_DATA;
urlmon_NULL_THUNK_DATA_DLA;
urlmon_NULL_THUNK_DATA_DLB;
urlmon_NULL_THUNK_DATA_DLN;

<lambda_02deec49ef48fa12c9095208f5992a62>::<lambda_invoker_cdecl>();
<lambda_152aa9d2a3a0648fa2fa7fcef514b376>::<lambda_invoker_cdecl>();
<lambda_2586d60923f8412dce879009b83555c3>::<lambda_invoker_cdecl>();
<lambda_74900582371bb26b135d7f7a3ba0da76>::<lambda_invoker_cdecl>();
APN::APN();
APN::Add();
APN::Compare();
APN::CompareSameScale();
APN::Div10();
APN::Grow();
APN::Infinity();
APN::Mul();
APN::Mul10();
APN::Parse();
APN::ScaleUp();
APN::Shl();
APN::TestFit();
APN::`scalar deleting destructor'();
APN::getUI32();
APN::hashCode();
APN::isZero();
APN::newAPN();
APN::operator*();
APN::operator+();
APN::operator<();
APN::operator=();
APN::operator==();
APN::operator>();
APN::operator>=();
APN::toString();
ASTBuilder::absoluteQuery();
ASTBuilder::ancestorQuery();
ASTBuilder::attributeQuery();
ASTBuilder::booleanLiteral();
ASTBuilder::booleanOperator();
ASTBuilder::checkFunctionArgs();
ASTBuilder::childQuery();
ASTBuilder::compareOperator();
ASTBuilder::concatOperator();
ASTBuilder::descendantQuery();
ASTBuilder::filterOperator();
ASTBuilder::followingQuery();
ASTBuilder::followingSiblingQuery();
ASTBuilder::functionCall();
ASTBuilder::groupOperator();
ASTBuilder::makeName();
ASTBuilder::makeURI();
ASTBuilder::msxslFunctionBuild();
ASTBuilder::namespaceQuery();
ASTBuilder::newPathNode();
ASTBuilder::numericLiteral();
ASTBuilder::numericOperator();
ASTBuilder::onError();
ASTBuilder::parentQuery();
ASTBuilder::parseNameArg();
ASTBuilder::precedingQuery();
ASTBuilder::precedingSiblingQuery();
ASTBuilder::selfQuery();
ASTBuilder::sortOperator();
ASTBuilder::stringLiteral();
ASTBuilder::toOperand();
ASTBuilder::toQuery();
ASTBuilder::unionOperator();
ASTBuilder::variableRef();
ASTBuilder::xpathFunctionBuild();
ASTCodeGen::absoluteNode();
ASTCodeGen::booleanExpressionCode();
ASTCodeGen::booleanNode();
ASTCodeGen::castNode();
ASTCodeGen::compareNode();
ASTCodeGen::contextNode();
ASTCodeGen::errorNode();
ASTCodeGen::evalCode();
ASTCodeGen::expressionCode();
ASTCodeGen::extensionFunctionCode();
ASTCodeGen::filterNode();
ASTCodeGen::groupNode();
ASTCodeGen::literalNode();
ASTCodeGen::locationPathCode();
ASTCodeGen::msxslFunctionCode();
ASTCodeGen::numberArg();
ASTCodeGen::numberExpressionCode();
ASTCodeGen::numericNode();
ASTCodeGen::pathNode();
ASTCodeGen::predicateCode();
ASTCodeGen::sortNode();
ASTCodeGen::stringArg();
ASTCodeGen::stringExpressionCode();
ASTCodeGen::unionNode();
ASTCodeGen::xpathFunctionCode();
AbortParse();
AbsoluteMatcher::`scalar deleting destructor'();
AbsoluteMatcher::getPreFilter();
AbsoluteMatcher::matches();
AbsoluteMatcher::matchesWithNodeTest();
AbsoluteMatcher::visitNodeTests();
AbsoluteNode::AbsoluteNode();
AbsoluteNode::_optimize();
AbsoluteNode::`scalar deleting destructor'();
AbsoluteNode::equals();
AbsoluteNode::getDataType();
AbsoluteNode::getNodeType();
AbsoluteNode::visitTree();
AbsoluteNodeSet::createCache();
AbsoluteNodeSet::getCount();
AbsoluteNodeSet::getIndex();
AbsoluteNodeSet::getNavigator();
AbsoluteNodeSet::moveToNext();
AbsoluteNodeSet::reset();
AliasFixup::`scalar deleting destructor'();
AliasFixup::doFixup();
AliasInfo::`scalar deleting destructor'();
AliasInfo::overrideAliasInfo();
AliasInfo::setAliasInfo();
AllocTlsData();
AllowBaseTagUrl();
AlwaysAttrFilter::AlwaysAttrFilter();
AlwaysAttrFilter::`scalar deleting destructor'();
AlwaysAttrFilter::getMatchLocalName();
AlwaysAttrFilter::getMatchType();
AlwaysAttrFilter::getMatchURI();
AlwaysAttrFilter::matches();
AlwaysAttrFilter::matchesWithAxis();
AlwaysAttrFilter::moveToFirst();
AlwaysAttrFilter::moveToSibling();
AlwaysFilter::AlwaysFilter();
AlwaysFilter::`scalar deleting destructor'();
AlwaysFilter::getMatchLocalName();
AlwaysFilter::getMatchType();
AlwaysFilter::getMatchURI();
AlwaysFilter::matches();
AlwaysFilter::matchesWithAxis();
AlwaysFilter::moveToFirst();
AlwaysFilter::moveToFirstDescendant();
AlwaysFilter::moveToSibling();
AlwaysNmspFilter::AlwaysNmspFilter();
AlwaysNmspFilter::`scalar deleting destructor'();
AlwaysNmspFilter::getMatchLocalName();
AlwaysNmspFilter::getMatchType();
AlwaysNmspFilter::getMatchURI();
AlwaysNmspFilter::matches();
AlwaysNmspFilter::moveToFirst();
AlwaysNmspFilter::moveToSibling();
AncestorNodeSet::createCache();
AncestorNodeSet::getCount();
AncestorNodeSet::getIndex();
AncestorNodeSet::getNavigator();
AncestorNodeSet::initIteration();
AncestorNodeSet::moveToNext();
AncestorNodeSet::reset();
AnyNode::AnyNode();
AnyNode::`scalar deleting destructor'();
AnyNode::clone();
AnyNode::expandTree();
AnyNode::firstpos();
AnyNode::getClass();
AnyNode::isAny();
AnyNode::isTerminal();
AnyNode::lastpos();
AnyNode::nullable();
ApartmentMutex::Enter();
ApartmentMutex::EnterRead();
ApartmentMutex::Leave();
ApartmentMutex::LeaveAndEnterRead();
ApartmentMutex::`scalar deleting destructor'();
ApartmentMutex::`vector deleting destructor'();
ApartmentMutex::newApartmentMutex();
ApiSetQueryApiSetPresence();
AppendNametest();
AppendPublicAndSystem();
AppendQuotedValue();
AppendSchemaXPath();
ApplyCompile::`scalar deleting destructor'();
ApplyCompile::afterCompile();
ApplyCompile::compileExtensionElement();
ApplyCompile::compileInstruction();
ApplyCompile::compileLiteralElement();
ApplyCompile::compileText();
ApplyCompile::newApplyTemplCompile();
ApplyCompile::newCallTemplCompile();
ApplyImportFixup::`scalar deleting destructor'();
ApplyImportFixup::doFixup();
ApplyLoadSettings();
ApplyOptimizer::absoluteNode();
ApplyOptimizer::booleanNode();
ApplyOptimizer::buildMatcher();
ApplyOptimizer::castNode();
ApplyOptimizer::compareNode();
ApplyOptimizer::contextNode();
ApplyOptimizer::errorNode();
ApplyOptimizer::filterNode();
ApplyOptimizer::functionCallNode();
ApplyOptimizer::groupNode();
ApplyOptimizer::literalNode();
ApplyOptimizer::markAllTemplates();
ApplyOptimizer::markMatchingTemplates();
ApplyOptimizer::numericNode();
ApplyOptimizer::pathNode();
ApplyOptimizer::sortNode();
ApplyOptimizer::unionNode();
ApplyOptimizer::variableRefNode();
ApplyOptimizer::visitNodeTest();
ApplyTemplFixup::`scalar deleting destructor'();
ApplyTemplFixup::doFixup();
ArrayString::ArrayString();
ArrayString::`scalar deleting destructor'();
ArrayString::copyChars();
ArrayString::newString();
ArrayString::normalize();
ArrayString::normalizeAttributeValueWhitespaces();
ArrayString::operator new();
AsciiToWide();
Atom2BSTR();
Atom2WCHAR();
Atom::Atom();
Atom::`scalar deleting destructor'();
Atom::create();
Atom::hashCode();
AttDef::AttDef();
AttDef::`scalar deleting destructor'();
AttDef::`vector deleting destructor'();
AttDef::checkComplete();
AttDef::isAttribute();
AttDef::pushNSDecl();
AttrInfo::AttrInfo();
AttrInfo::~AttrInfo();
AttrSetCompile::`scalar deleting destructor'();
AttrSetCompile::afterCompile();
AttrSetCompile::compileExtensionElement();
AttrSetCompile::compileInstruction();
AttrSetCompile::compileLiteralElement();
AttrSetCompile::compileText();
AttrSetCompile::newAttrSetCompile();
AttrSetFixup::`scalar deleting destructor'();
AttrSetFixup::doFixup();
AttrSetSymbol::`scalar deleting destructor'();
AttrSetSymbol::circularReference();
AttrSetSymbol::duplicateGlobal();
AttrSetSymbol::duplicateLocal();
AttrSetSymbol::exitScope();
AttrSetSymbol::newSymbol();
AttrSetSymbol::postProcessSymbol();
AttrSetSymbol::refersTo();
AttrSetSymbol::undefinedSymbol();
AttributeParser::AddRef();
AttributeParser::BeginChildren();
AttributeParser::CreateNode();
AttributeParser::EndChildren();
AttributeParser::Error();
AttributeParser::NotifyEvent();
AttributeParser::QueryInterface();
AttributeParser::Release();
AttributeParser::parse();
Attributes::Attributes();
Attributes::`scalar deleting destructor'();
Attributes::appendAttribute();
Attributes::findByDTDName();
Attributes::findByName();
Attributes::namedef();
Attributes::node();
Attributes::~Attributes();
AttributesWrapper::AttributesWrapper();
AttributesWrapper::_invoke();
AttributesWrapper::`scalar deleting destructor'();
AttributesWrapper::`vector deleting destructor'();
AttributesWrapper::getIndexFromName();
AttributesWrapper::getIndexFromQName();
AttributesWrapper::getLocalName();
AttributesWrapper::getQName();
AttributesWrapper::getType();
AttributesWrapper::getTypeFromName();
AttributesWrapper::getTypeFromQName();
AttributesWrapper::getURI();
AttributesWrapper::getValue();
AttributesWrapper::getValueFromName();
AttributesWrapper::getValueFromQName();
AttributesWrapper::get_length();
AttributesWrapper::newAttributesWrapper();
AttributesWrapper::~AttributesWrapper();
BIGINT::Compare();
BIGINT::DivRem();
BIGINT::FAdd();
BIGINT::FInitFromFloatingDecimal();
BIGINT::FInitFromRglu();
BIGINT::FMulAdd();
BIGINT::FMulPow5();
BIGINT::FResize();
BIGINT::FShiftLeft();
BIGINT::ShiftLusRight();
BIGINT::ShiftRight();
BIGINT::Subtract();
BIGNUM::GetDbl();
BIGNUM::LuMod1();
BIGNUM::MakeLowerBound();
BIGNUM::MakeUpperBound();
BIGNUM::Mul();
BIGNUM::MulTenAdd();
BIGNUM::Normalize();
BIGNUM::SetFromFloatingDecimal();
BSTRToUTF8();
BSTR_UserFree();
BSTR_UserFree64();
BSTR_UserMarshal();
BSTR_UserMarshal64();
BSTR_UserSize();
BSTR_UserSize64();
BSTR_UserUnmarshal();
BSTR_UserUnmarshal64();
BadEventSinkException();
Base::AddRef();
Base::ENoImpl();
Base::NoStackEntry();
Base::QueryInterface();
Base::Release();
Base::StackEntryNormal();
Base::_createInstance();
Base::_delete();
Base::_release();
Base::clone();
Base::equals();
Base::finalize();
Base::freeUnusedObjects();
Base::getClass();
Base::getInternalObject();
Base::hashCode();
Base::toString();
Base::weakAddRef();
Base::weakRelease();
BaseFilter::matchesWithAxis();
BaseFilter::moveToFirstDescendant();
BaseFilter::moveToFollowing();
BaseNode::optimize();
BaseTextAppendVisitor::BaseTextAppendVisitor();
BaseTextAppendVisitor::_appendText();
BaseTextAppendVisitor::_appendWhitespace();
BaseTextAppendVisitor::toString();
BaseTextAppendVisitor::visitCData();
BaseTextAppendVisitor::visitPCData();
BaseTextAppendVisitor::visitParent();
BaseTextAppendVisitor::visitRoot();
BaseTextAppendVisitor::visitStrippedWhitespace();
Bcrypt::destroyHash();
BitSet::BitSet();
BitSet::New();
BitSet::`scalar deleting destructor'();
BitSet::`vector deleting destructor'();
BitSet::and();
BitSet::clone();
BitSet::ensureLength();
BitSet::equals();
BitSet::hashCode();
BitSet::or();
BitSet::set();
BitSet::testIntersect();
BitSet::xor();
BitSetIter::BitSetIter();
BitSetIter::Next();
BitSetIter::advance();
BitStack::popBit();
BitStack::pushBit();
BlockAlloc::AllocData();
BlockAlloc::AllocName();
BlockAlloc::EnqueueBlock();
BlockAlloc::PopScope();
BlockAlloc::ReallocData();
BlockAlloc::RequeueBlock();
BoolExpr::booleanBranch();
BooleanNode::_optimize();
BooleanNode::`scalar deleting destructor'();
BooleanNode::equals();
BooleanNode::getDataType();
BooleanNode::getNodeType();
BooleanNode::visitTree();
BuffString::BuffString();
BuffString::`scalar deleting destructor'();
BuffString::newBuffString();
BufferedStream::AppendData();
BufferedStream::Freeze();
BufferedStream::Load();
BufferedStream::New();
BufferedStream::UnFreeze();
BufferedStream::`scalar deleting destructor'();
BufferedStream::`vector deleting destructor'();
BufferedStream::doSwitchEncoding();
BufferedStream::fillBuffer();
BufferedStream::getLineBuf();
BufferedStream::getNewStart();
BufferedStream::getToken();
BufferedStream::nextChar();
BufferedStream::prepareForInput();
BufferedStream::scanAttrValue();
BufferedStream::scanCData();
BufferedStream::scanPCData();
BufferedStream::switchEncoding();
BufferedStream::~BufferedStream();
BuildXPathToNode();
BuiltInNodeSet::createCache();
BuiltInNodeSet::getCount();
BuiltInNodeSet::getIndex();
BuiltInNodeSet::getNavigator();
BuiltInNodeSet::moveToNext();
BuiltInNodeSet::reset();
BuiltinEntity();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::AddRef();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Clone();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Commit();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::CopyTo();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::LockRegion();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Read();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Release();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Revert();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Seek();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::SetSize();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Stat();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::UnlockRegion();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::Write();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::`scalar deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::`vector deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::CAbortableIStream::~CAbortableIStream();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::DoWorkStub();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::OnCancel();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::OnClose();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::OnStart();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::`scalar deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::`vector deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::get_Completed();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::put_Completed();
CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>::~CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName>();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::AddRef();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Clone();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Commit();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::CopyTo();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::LockRegion();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Read();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Release();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Revert();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Seek();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::SetSize();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Stat();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::UnlockRegion();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::Write();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::`scalar deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::`vector deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAbortableIStream::~CAbortableIStream();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::DoWorkStub();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::OnCancel();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::OnClose();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::OnStart();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::`scalar deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::`vector deleting destructor'();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::get_Completed();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::put_Completed();
CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>::~CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0>();
CCritSec::CreateInstance();
CCritSec::Release();
CMSymbolTable::addName();
CMSymbolTable::addWildcard();
CMSymbolTable::exists();
CMSymbolTable::getMatchingSymbols();
CMSymbolTable::getName();
CMSymbolTable::getParticle();
CMSymbolTable::getSymbol();
CMSymbolTable::nameOf();
CMSymbolTable::~CMSymbolTable();
COMSafeControlInterfaces::GetInterfaceSafetyOptions();
COMSafeControlInterfaces::GetSecureBaseURL();
COMSafeControlInterfaces::GetSecurityManager();
COMSafeControlInterfaces::GetSecuritySetting();
COMSafeControlInterfaces::GetSite();
COMSafeControlInterfaces::QueryInterface();
COMSafeControlInterfaces::SetInterfaceSafetyOptions();
COMSafeControlInterfaces::SetSite();
COMSafeControlRoot::clearSite();
COMSafeControlRoot::copySafeControlRoot();
COMSafeControlRoot::getBaseURLFromSite();
COMSafeControlRoot::getSecureBaseURLFromSite();
COMSafeControlRoot::getSecurityManagerFromSite();
COMSafeControlRoot::setInterfaceSafetyOptions();
COMSafeControlRoot::setSecurityFromSite();
COMSafeControlRoot::setSite();
COMSafeControlRoot::~COMSafeControlRoot();
CRegKey::Close();
CSMutex::Enter();
CSMutex::Leave();
CSMutex::LeaveAndEnterRead();
CSMutex::`scalar deleting destructor'();
CSMutex::`vector deleting destructor'();
CSMutex::newCSMutex();
CStdStubBuffer2_Connect();
CStdStubBuffer2_CountRefs();
CStdStubBuffer2_Disconnect();
CStdStubBuffer2_QueryInterface();
CStdStubBuffer2_Release();
CStdStubBuffer_AddRef();
CStdStubBuffer_Connect();
CStdStubBuffer_CountRefs();
CStdStubBuffer_DebugServerQueryInterface();
CStdStubBuffer_DebugServerRelease();
CStdStubBuffer_Disconnect();
CStdStubBuffer_Invoke();
CStdStubBuffer_IsIIDSupported();
CStdStubBuffer_QueryInterface();
CStdStubBuffer_Release();
CXMLConnectionPt::Advise();
CXMLConnectionPt::CXMLConnectionPt();
CXMLConnectionPt::EnumConnections();
CXMLConnectionPt::GetConnectionInterface();
CXMLConnectionPt::GetConnectionPointContainer();
CXMLConnectionPt::Unadvise();
CXMLConnectionPt::`scalar deleting destructor'();
CXMLConnectionPt::`vector deleting destructor'();
CXMLConnectionPt::~CXMLConnectionPt();
CXMLConnectionPtContainer::CXMLConnectionPtContainer();
CXMLConnectionPtContainer::CreateConnectionPoint();
CXMLConnectionPtContainer::EnumConnectionPoints();
CXMLConnectionPtContainer::FindConnectionPoint();
CXMLConnectionPtContainer::QueryInterface();
CXMLConnectionPtContainer::`scalar deleting destructor'();
CXMLConnectionPtContainer::`vector deleting destructor'();
CXMLConnectionPtContainer::~CXMLConnectionPtContainer();
CXMLEnumConnectionPt::CXMLEnumConnectionPt();
CXMLEnumConnectionPt::Clone();
CXMLEnumConnectionPt::Next();
CXMLEnumConnectionPt::Reset();
CXMLEnumConnectionPt::Skip();
CXMLEnumConnectionPt::`scalar deleting destructor'();
CXMLEnumConnectionPt::`vector deleting destructor'();
CXMLEnumConnectionPt::~CXMLEnumConnectionPt();
CXMLEnumConnections::CXMLEnumConnections();
CXMLEnumConnections::Clone();
CXMLEnumConnections::CopyConnectionList();
CXMLEnumConnections::Next();
CXMLEnumConnections::Reset();
CXMLEnumConnections::Skip();
CXMLEnumConnections::`scalar deleting destructor'();
CXMLEnumConnections::`vector deleting destructor'();
CXMLEnumConnections::~CXMLEnumConnections();
CacheNodeSet::CacheNodeSet();
CacheNodeSet::createCache();
CacheNodeSet::getCount();
CacheNodeSet::getIndex();
CacheNodeSet::getNavigator();
CacheNodeSet::moveToNext();
CacheNodeSet::reset();
CacheRevNodeSet::createCache();
CacheRevNodeSet::getIndex();
CachingStream::CachingStream();
CachingStream::CopyTo();
CachingStream::New();
CachingStream::NewDeleteOnRead();
CachingStream::Read();
CachingStream::Seek();
CachingStream::Stat();
CachingStream::Write();
CachingStream::`scalar deleting destructor'();
CachingStream::`vector deleting destructor'();
CachingStream::reserve();
CachingStream::toBSTR();
CachingStream::toHSTRING();
CachingStream::toSafeArray();
CachingStream::toString();
CachingStream::write_toBuffer();
CachingStream::~CachingStream();
CachingStreamForExternal::New();
CachingStreamForExternal::NewFromStream();
CachingStreamForExternal::`scalar deleting destructor'();
CachingStreamForExternal::`vector deleting destructor'();
CachingStreamForExternal::~CachingStreamForExternal();
CalcEnterpriseIdsBufferSize();
CalcXPathChildPosition();
CallTemplFixup::`scalar deleting destructor'();
CallTemplFixup::doFixup();
CallbackStream::CallbackStream();
CallbackStream::CreateInstance();
CallbackStream::Initialize();
CallbackStream::Read();
CallbackStream::Write();
CallbackStream::`scalar deleting destructor'();
CallbackStream::`vector deleting destructor'();
CallbackStream::~CallbackStream();
CaptureStackContext();
CastNode::_optimize();
CastNode::`scalar deleting destructor'();
CastNode::equals();
CastNode::getDataType();
CastNode::getNodeType();
CastNode::visitTree();
CbitZeroLeft();
CchCheckZero();
CchChineseNum2();
CchHebrewAlphabetic();
CchHebrewTraditional();
CchKanjiNum3();
CchKanjiZodiac1();
CchKanjiZodiac2();
CchKanjiZodiac3();
CchKorDbNum3();
CharEncoder::getCharsetInfo();
CharEncoder::getLcidFromRfc1766();
CharEncoder::getWideCharFromMultiByteInfo();
CharEncoder::getWideCharToMultiByteInfo();
CharEncoder::wideCharFromMultiByteMlang();
CharEncoder::wideCharFromMultiByteMlang2();
CharEncoder::wideCharFromMultiByteWin32();
CharEncoder::wideCharFromUcs2Bigendian();
CharEncoder::wideCharFromUcs2Littleendian();
CharEncoder::wideCharFromUcs4Bigendian();
CharEncoder::wideCharFromUcs4Littleendian();
CharEncoder::wideCharFromUtf16Bigendian();
CharEncoder::wideCharFromUtf16Littleendian();
CharEncoder::wideCharFromUtf8();
CharEncoder::wideCharToMultiByteMlang();
CharEncoder::wideCharToMultiByteMlang2();
CharEncoder::wideCharToMultiByteMlangNoBestFit();
CharEncoder::wideCharToMultiByteWin32();
CharEncoder::wideCharToMultiByteWin32NoBestFit();
CharEncoder::wideCharToUcs2Bigendian();
CharEncoder::wideCharToUcs2Littleendian();
CharEncoder::wideCharToUcs4Bigendian();
CharEncoder::wideCharToUcs4Littleendian();
CharEncoder::wideCharToUtf16Bigendian();
CharEncoder::wideCharToUtf16Littleendian();
CharEncoder::wideCharToUtf8();
CharEntity2Utf16();
CharacterSource::GetByte();
CharacterSource::GetCharacterSize();
CharacterSource::GetInputSource();
CharacterSource::GetLittleEndian();
CharacterSource::Grow();
CharacterSource::Pull();
CharacterSource::SetInputSource();
CharacterSource::Shift();
CharacterSource::operator=();
CharacterSourceFactory::Create();
CharacterSourceFactory::FindCodePage();
CheckID();
ChildMatcher::`scalar deleting destructor'();
ChildMatcher::getPreFilter();
ChildMatcher::matches();
ChildMatcher::matchesWithNodeTest();
ChildMatcher::visitNodeTests();
ChildNodeSet::createCache();
ChildNodeSet::getCount();
ChildNodeSet::getIndex();
ChildNodeSet::getInputChild();
ChildNodeSet::getNavigator();
ChildNodeSet::moveToNext();
ChildNodeSet::reset();
ChildNodeSetStack::createCache();
ChildNodeSetStack::getCount();
ChildNodeSetStack::getIndex();
ChildNodeSetStack::getInputChild();
ChildNodeSetStack::getNavigator();
ChildNodeSetStack::initIteration();
ChildNodeSetStack::moveToNext();
ChildNodeSetStack::reset();
ChooseCompile::`scalar deleting destructor'();
ChooseCompile::afterCompile();
ChooseCompile::compileExtensionElement();
ChooseCompile::compileInstruction();
ChooseCompile::compileLiteralElement();
ChooseCompile::compileOtherwise();
ChooseCompile::compileText();
ChooseCompile::compileWhen();
Class::createObject();
Class::isInstance();
ClassFactory::AddRef();
ClassFactory::CreateInstance();
ClassFactory::LockServer();
ClassFactory::QueryInterface();
ClassFactory::Release();
CloneStringPtr::CloneStringPtr();
CloneStringPtr::assign();
CloneStringPtr::takeOver();
CoTaskDupStr();
CodePageCharacterSource::CodePageCharacterSource();
CodePageCharacterSource::GetCharacter();
CodePageCharacterSource::GetCharacterSize();
CodePageCharacterSource::GetInputSource();
CodePageCharacterSource::Read();
CodePageCharacterSource::SetInputSource();
CodePageCharacterSource::operator=();
CodePageCharacterSource::~CodePageCharacterSource();
CodeSpace::enterCodeSpace();
CodeSpace::exitCodeSpace();
ComCollection::get__aggregatedEnum();
CompareDateTime();
CompareNode::_optimize();
CompareNode::`scalar deleting destructor'();
CompareNode::equals();
CompareNode::getDataType();
CompareNode::getNodeType();
CompareNode::visitTree();
CompiledIdentityConstraint::CompiledIdentityConstraint();
CompiledIdentityConstraint::New();
CompiledIdentityConstraint::`scalar deleting destructor'();
CompiledIdentityConstraint::getQualifiedName();
CompiledIdentityConstraint::getSOMItemType();
ConstraintStruct::ConstraintStruct();
ConstraintStruct::New();
ConstraintStruct::`scalar deleting destructor'();
ConstraintStruct::`vector deleting destructor'();
ConstraintStruct::attribute();
ConstraintStruct::endElement();
ConstraintStruct::startElement();
ConstraintStruct::toString();
ConstraintStruct::verifyTables();
ConstraintStruct::~ConstraintStruct();
ConstraintsManager::ConstraintsManager();
ConstraintsManager::`scalar deleting destructor'();
ConstraintsManager::attribute();
ConstraintsManager::endElement();
ConstraintsManager::newConstraintsManager();
ConstraintsManager::startElement();
ContentHandlerWrapper::ContentHandlerWrapper();
ContentHandlerWrapper::Init();
ContentHandlerWrapper::`scalar deleting destructor'();
ContentHandlerWrapper::`vector deleting destructor'();
ContentHandlerWrapper::characters();
ContentHandlerWrapper::endDocument();
ContentHandlerWrapper::endElement();
ContentHandlerWrapper::endPrefixMapping();
ContentHandlerWrapper::ignorableWhitespace();
ContentHandlerWrapper::newContentHandlerWrapper();
ContentHandlerWrapper::processingInstruction();
ContentHandlerWrapper::putDocumentLocator();
ContentHandlerWrapper::skippedEntity();
ContentHandlerWrapper::startDocument();
ContentHandlerWrapper::startElement();
ContentHandlerWrapper::startPrefixMapping();
ContentModel::ContentModel();
ContentModel::`scalar deleting destructor'();
ContentModel::`vector deleting destructor'();
ContentModel::addChoice();
ContentModel::addSequence();
ContentModel::addTerminal();
ContentModel::buildStateMachine();
ContentModel::checkContent();
ContentModel::checkDFA();
ContentModel::closeGroup();
ContentModel::closure();
ContentModel::expectedElements();
ContentModel::finish();
ContentModel::initContent();
ContentModel::isEmptiable();
ContentModel::isMatched();
ContentModel::start();
ContentModel::storeErrorWithExpectedClause();
ContentModel::throwErrorWithExpectedClause();
ContentModel::toDeclString();
ContentModel::toString();
ContentModel::~ContentModel();
ContentModelAny::ContentModelAny();
ContentModelAny::`scalar deleting destructor'();
ContentModelAny::`vector deleting destructor'();
ContentModelEmpty::ContentModelEmpty();
ContentModelEmpty::`scalar deleting destructor'();
ContentModelEmpty::`vector deleting destructor'();
ContentModelStatic::AddRef();
ContentModelStatic::ContentModelStatic();
ContentModelStatic::Release();
ContentModelStatic::`scalar deleting destructor'();
ContentModelStatic::`vector deleting destructor'();
ContentModelStatic::~ContentModelStatic();
ContentModelTextOnly::ContentModelTextOnly();
ContentModelTextOnly::`scalar deleting destructor'();
ContentModelTextOnly::`vector deleting destructor'();
ContentNode::calcfollowpos();
ContentNode::expandTree();
ContentNode::finalize();
ContentNode::isAny();
ContentNode::isMinMax();
ContentNode::isTerminal();
ContextNode::ContextNode();
ContextNode::_optimize();
ContextNode::`scalar deleting destructor'();
ContextNode::equals();
ContextNode::getDataType();
ContextNode::getNodeType();
ContextNode::visitTree();
CopyAttributes::CopyAttributes();
CopyCompile::CopyCompile();
CopyCompile::`scalar deleting destructor'();
CopyCompile::afterCompile();
CopyCompile::newElementCompile();
CopyIids<4>();
CopyIids<5>();
CopyIids<6>();
CountNodeSet::createCache();
CountNodeSet::getCount();
CountNodeSet::getIndex();
CountNodeSet::getNavigator();
CountNodeSet::moveToNext();
CountNodeSet::reset();
CountRevNodeSet::createCache();
CountRevNodeSet::getCount();
CountRevNodeSet::getIndex();
CountRevNodeSet::getNavigator();
CountRevNodeSet::moveToNext();
CountRevNodeSet::reset();
CrackVarArgList();
CreateCatalogInformation();
CreateDOMDocument();
CreateDOMNode();
CreateDOMNodeNS();
CreateFreeThreadedDOMDocument();
CreateFreeThreadedXMLHTTP();
CreateMXHTMLWriter();
CreateMXNamespaceManager();
CreateMXXMLReader();
CreateMXXMLWriter();
CreateMultiLanguage();
CreateSAXAttributes();
CreateSAXXMLReader();
CreateSecurityManager();
CreateServerXMLHTTP();
CreateUriFromString();
CreateVector();
CreateXMLHTTP();
CreateXMLHTTPHelper();
CreateXMLSchemaCache();
CreateXSLTemplate();
CurrentMatcher::CurrentMatcher();
CurrentMatcher::`scalar deleting destructor'();
CurrentMatcher::getPreFilter();
CurrentMatcher::matches();
CurrentMatcher::matchesWithNodeTest();
CurrentMatcher::visitNodeTests();
CwchFormatRoman();
DOMAttributeValueCollapseVisitor::visitPCData();
DOMAttributeValueCollapseVisitor::visitStrippedWhitespace();
DOMAttributesAdapter::DOMAttributesAdapter();
DOMAttributesAdapter::nextAttribute();
DOMAttributesAdapter::reset();
DOMAttributesAdapter::~DOMAttributesAdapter();
DOMChildList::AddRef();
DOMChildList::DOMChildList();
DOMChildList::First();
DOMChildList::GetAt();
DOMChildList::GetRuntimeClassName();
DOMChildList::GetTrustLevel();
DOMChildList::IndexOf();
DOMChildList::Item();
DOMChildList::QueryInterface();
DOMChildList::Release();
DOMChildList::_invoke();
DOMChildList::_next();
DOMChildList::`scalar deleting destructor'();
DOMChildList::`vector deleting destructor'();
DOMChildList::get_Length();
DOMChildList::get_Size();
DOMChildList::get__newEnum();
DOMChildList::get_item();
DOMChildList::get_length();
DOMChildList::nextNode();
DOMChildList::reset();
DOMDocumentWrapper::AddRef();
DOMDocumentWrapper::CreateAttribute();
DOMDocumentWrapper::CreateAttributeNS();
DOMDocumentWrapper::CreateCDataSection();
DOMDocumentWrapper::CreateComment();
DOMDocumentWrapper::CreateDocumentFragment();
DOMDocumentWrapper::CreateElement();
DOMDocumentWrapper::CreateElementNS();
DOMDocumentWrapper::CreateEntityReference();
DOMDocumentWrapper::CreateProcessingInstruction();
DOMDocumentWrapper::CreateStreamOverIBuffer();
DOMDocumentWrapper::CreateTextNode();
DOMDocumentWrapper::DOMDocumentWrapper();
DOMDocumentWrapper::GetDispID();
DOMDocumentWrapper::GetElementById();
DOMDocumentWrapper::GetElementsByTagName();
DOMDocumentWrapper::GetIDsOfNames();
DOMDocumentWrapper::GetRuntimeClassName();
DOMDocumentWrapper::GetTrustLevel();
DOMDocumentWrapper::GetXml();
DOMDocumentWrapper::GetXmlLoadErrorCode();
DOMDocumentWrapper::ImportNode();
DOMDocumentWrapper::InternalGetRuntimeClassName();
DOMDocumentWrapper::InternalGetTrustLevel();
DOMDocumentWrapper::Invoke();
DOMDocumentWrapper::LoadXml();
DOMDocumentWrapper::LoadXmlFromBuffer();
DOMDocumentWrapper::LoadXmlFromBufferWithSettings();
DOMDocumentWrapper::LoadXmlWithSettings();
DOMDocumentWrapper::QueryInterface();
DOMDocumentWrapper::Release();
DOMDocumentWrapper::SaveToFileAsync();
DOMDocumentWrapper::_createNodeNS();
DOMDocumentWrapper::_createProcessingInstruction();
DOMDocumentWrapper::_getDocType();
DOMDocumentWrapper::_getDocumentElement();
DOMDocumentWrapper::_importNode();
DOMDocumentWrapper::_invoke();
DOMDocumentWrapper::_loadXML();
DOMDocumentWrapper::_nodeFromID();
DOMDocumentWrapper::_validateNode();
DOMDocumentWrapper::`scalar deleting destructor'();
DOMDocumentWrapper::`vector deleting destructor'();
DOMDocumentWrapper::abort();
DOMDocumentWrapper::appendChild();
DOMDocumentWrapper::cloneNode();
DOMDocumentWrapper::createAttribute();
DOMDocumentWrapper::createCDATASection();
DOMDocumentWrapper::createComment();
DOMDocumentWrapper::createDocumentFragment();
DOMDocumentWrapper::createElement();
DOMDocumentWrapper::createEntityReference();
DOMDocumentWrapper::createNode();
DOMDocumentWrapper::createProcessingInstruction();
DOMDocumentWrapper::createTextNode();
DOMDocumentWrapper::getElementsByTagName();
DOMDocumentWrapper::getProperty();
DOMDocumentWrapper::get_Doctype();
DOMDocumentWrapper::get_DocumentElement();
DOMDocumentWrapper::get_DocumentUri();
DOMDocumentWrapper::get_Implementation();
DOMDocumentWrapper::get_InnerText();
DOMDocumentWrapper::get_async();
DOMDocumentWrapper::get_attributes();
DOMDocumentWrapper::get_baseName();
DOMDocumentWrapper::get_childNodes();
DOMDocumentWrapper::get_dataType();
DOMDocumentWrapper::get_definition();
DOMDocumentWrapper::get_doctype();
DOMDocumentWrapper::get_documentElement();
DOMDocumentWrapper::get_firstChild();
DOMDocumentWrapper::get_implementation();
DOMDocumentWrapper::get_lastChild();
DOMDocumentWrapper::get_namespaceURI();
DOMDocumentWrapper::get_namespaces();
DOMDocumentWrapper::get_nextSibling();
DOMDocumentWrapper::get_nodeName();
DOMDocumentWrapper::get_nodeType();
DOMDocumentWrapper::get_nodeTypeString();
DOMDocumentWrapper::get_nodeTypedValue();
DOMDocumentWrapper::get_nodeValue();
DOMDocumentWrapper::get_ownerDocument();
DOMDocumentWrapper::get_parentNode();
DOMDocumentWrapper::get_parseError();
DOMDocumentWrapper::get_parsed();
DOMDocumentWrapper::get_prefix();
DOMDocumentWrapper::get_preserveWhiteSpace();
DOMDocumentWrapper::get_previousSibling();
DOMDocumentWrapper::get_readyState();
DOMDocumentWrapper::get_resolveExternals();
DOMDocumentWrapper::get_schemas();
DOMDocumentWrapper::get_specified();
DOMDocumentWrapper::get_text();
DOMDocumentWrapper::get_url();
DOMDocumentWrapper::get_validateOnParse();
DOMDocumentWrapper::get_xml();
DOMDocumentWrapper::hasChildNodes();
DOMDocumentWrapper::importNode();
DOMDocumentWrapper::insertBefore();
DOMDocumentWrapper::load();
DOMDocumentWrapper::loadXML();
DOMDocumentWrapper::nodeFromID();
DOMDocumentWrapper::put_InnerText();
DOMDocumentWrapper::put_async();
DOMDocumentWrapper::put_dataType();
DOMDocumentWrapper::put_nodeTypedValue();
DOMDocumentWrapper::put_nodeValue();
DOMDocumentWrapper::put_ondataavailable();
DOMDocumentWrapper::put_onreadystatechange();
DOMDocumentWrapper::put_ontransformnode();
DOMDocumentWrapper::put_preserveWhiteSpace();
DOMDocumentWrapper::put_resolveExternals();
DOMDocumentWrapper::put_text();
DOMDocumentWrapper::put_validateOnParse();
DOMDocumentWrapper::putref_documentElement();
DOMDocumentWrapper::putref_schemas();
DOMDocumentWrapper::removeChild();
DOMDocumentWrapper::replaceChild();
DOMDocumentWrapper::save();
DOMDocumentWrapper::selectNodes();
DOMDocumentWrapper::selectSingleNode();
DOMDocumentWrapper::setProperty();
DOMDocumentWrapper::transformNode();
DOMDocumentWrapper::transformNodeToObject();
DOMDocumentWrapper::validate();
DOMDocumentWrapper::validateNode();
DOMDocumentWrapper::~DOMDocumentWrapper();
DOMDocumentWrapperQIHelper<Windows::Data::Xml::Dom::IXmlDocument>();
DOMDocumentWrapperQIHelper<Windows::Data::Xml::Dom::IXmlDocumentIO2>();
DOMDocumentWrapperQIHelper<Windows::Data::Xml::Dom::IXmlDocumentIO>();
DOMError::DOMError();
DOMError::GetError();
DOMError::QueryInterface();
DOMError::_invoke();
DOMError::`scalar deleting destructor'();
DOMError::`vector deleting destructor'();
DOMError::errorParameters();
DOMError::getSuccessObj();
DOMError::get_allErrors();
DOMError::get_errorCode();
DOMError::get_errorParametersCount();
DOMError::get_errorXPath();
DOMError::get_filepos();
DOMError::get_line();
DOMError::get_linepos();
DOMError::get_reason();
DOMError::get_srcText();
DOMError::get_url();
DOMErrorCollection::DOMErrorCollection();
DOMErrorCollection::_invoke();
DOMErrorCollection::`scalar deleting destructor'();
DOMErrorCollection::`vector deleting destructor'();
DOMErrorCollection::getItem();
DOMErrorCollection::get_item();
DOMErrorCollection::get_length();
DOMErrorCollection::get_next();
DOMErrorCollection::reset();
DOMErrorCollection::~DOMErrorCollection();
DOMImplementation::AddRef();
DOMImplementation::DOMImplementation();
DOMImplementation::GetRuntimeClassName();
DOMImplementation::GetTrustLevel();
DOMImplementation::HasFeature();
DOMImplementation::QueryInterface();
DOMImplementation::Release();
DOMImplementation::_hasFeature();
DOMImplementation::`scalar deleting destructor'();
DOMImplementation::`vector deleting destructor'();
DOMImplementation::hasFeature();
DOMNamedNodeMapList::AddRef();
DOMNamedNodeMapList::DOMNamedNodeMapList();
DOMNamedNodeMapList::First();
DOMNamedNodeMapList::GetAt();
DOMNamedNodeMapList::GetNamedItem();
DOMNamedNodeMapList::GetNamedItemNS();
DOMNamedNodeMapList::GetRuntimeClassName();
DOMNamedNodeMapList::GetTrustLevel();
DOMNamedNodeMapList::IndexOf();
DOMNamedNodeMapList::Item();
DOMNamedNodeMapList::QueryInterface();
DOMNamedNodeMapList::Release();
DOMNamedNodeMapList::RemoveNamedItem();
DOMNamedNodeMapList::RemoveNamedItemNS();
DOMNamedNodeMapList::SetNamedItem();
DOMNamedNodeMapList::SetNamedItemNS();
DOMNamedNodeMapList::_getNamedItem();
DOMNamedNodeMapList::_getQualifiedItem();
DOMNamedNodeMapList::_invoke();
DOMNamedNodeMapList::_next();
DOMNamedNodeMapList::_removeNamedItem();
DOMNamedNodeMapList::_removeQualifiedItem();
DOMNamedNodeMapList::_setNamedItem();
DOMNamedNodeMapList::`scalar deleting destructor'();
DOMNamedNodeMapList::`vector deleting destructor'();
DOMNamedNodeMapList::getNamedItem();
DOMNamedNodeMapList::getQualifiedItem();
DOMNamedNodeMapList::get_Length();
DOMNamedNodeMapList::get_Size();
DOMNamedNodeMapList::get__newEnum();
DOMNamedNodeMapList::get_item();
DOMNamedNodeMapList::get_length();
DOMNamedNodeMapList::nextNode();
DOMNamedNodeMapList::removeNamedItem();
DOMNamedNodeMapList::removeQualifiedItem();
DOMNamedNodeMapList::reset();
DOMNamedNodeMapList::setNamedItem();
DOMNode::AddRef();
DOMNode::AppendChild();
DOMNode::CloneNode();
DOMNode::DOMNode();
DOMNode::GetDispID();
DOMNode::GetIDsOfNames();
DOMNode::GetIids();
DOMNode::GetRuntimeClassName();
DOMNode::GetTrustLevel();
DOMNode::GetTypeInfo();
DOMNode::GetTypeInfoCount();
DOMNode::GetXml();
DOMNode::HasChildNodes();
DOMNode::InsertBefore();
DOMNode::Invoke();
DOMNode::Normalize();
DOMNode::QueryInterface();
DOMNode::Release();
DOMNode::RemoveChild();
DOMNode::ReplaceChild();
DOMNode::SelectNodes();
DOMNode::SelectNodesNS();
DOMNode::SelectSingleNode();
DOMNode::SelectSingleNodeNS();
DOMNode::_checkNodeNameAndNamespace();
DOMNode::_constructNamespacesStr();
DOMNode::_getElementsByTagName();
DOMNode::_getOwnerDocument();
DOMNode::_getText();
DOMNode::_get_baseName();
DOMNode::_get_namespaceURI();
DOMNode::_get_nodeName();
DOMNode::_get_nodeValue();
DOMNode::_get_prefix();
DOMNode::_get_xml();
DOMNode::_insertBefore();
DOMNode::_invokeDOMElement();
DOMNode::_invokeDOMNode();
DOMNode::_normalize();
DOMNode::_putText();
DOMNode::_removeChild();
DOMNode::_replaceChild();
DOMNode::_selectNodes();
DOMNode::_selectSingleNode();
DOMNode::_setSelectionNamespaces();
DOMNode::`scalar deleting destructor'();
DOMNode::`vector deleting destructor'();
DOMNode::appendChild();
DOMNode::cloneNode();
DOMNode::getW3CWrapper();
DOMNode::get_Attributes();
DOMNode::get_ChildNodes();
DOMNode::get_FirstChild();
DOMNode::get_InnerText();
DOMNode::get_LastChild();
DOMNode::get_LocalName();
DOMNode::get_NamespaceUri();
DOMNode::get_NextSibling();
DOMNode::get_NodeName();
DOMNode::get_NodeType();
DOMNode::get_NodeValue();
DOMNode::get_OwnerDocument();
DOMNode::get_ParentNode();
DOMNode::get_Prefix();
DOMNode::get_PreviousSibling();
DOMNode::get_attributes();
DOMNode::get_baseName();
DOMNode::get_childNodes();
DOMNode::get_dataType();
DOMNode::get_definition();
DOMNode::get_firstChild();
DOMNode::get_lastChild();
DOMNode::get_namespaceURI();
DOMNode::get_nextSibling();
DOMNode::get_nodeName();
DOMNode::get_nodeType();
DOMNode::get_nodeTypeString();
DOMNode::get_nodeTypedValue();
DOMNode::get_nodeValue();
DOMNode::get_ownerDocument();
DOMNode::get_parentNode();
DOMNode::get_parsed();
DOMNode::get_prefix();
DOMNode::get_previousSibling();
DOMNode::get_specified();
DOMNode::get_text();
DOMNode::get_xml();
DOMNode::hasChildNodes();
DOMNode::insertBefore();
DOMNode::put_InnerText();
DOMNode::put_NodeValue();
DOMNode::put_Prefix();
DOMNode::put_dataType();
DOMNode::put_nodeTypedValue();
DOMNode::put_nodeValue();
DOMNode::put_text();
DOMNode::removeChild();
DOMNode::replaceChild();
DOMNode::selectNodes();
DOMNode::selectSingleNode();
DOMNode::transformNode();
DOMNode::transformNodeToObject();
DOMNode::~DOMNode();
DOMNodeList::DOMNodeList();
DOMNodeList::_GetItem();
DOMNodeList::enumGetIDispatch();
DOMNodeList::enumGetMutex();
DOMNodeList::enumGetNext();
DOMNodeList::enumGetVersion();
DOMNodeList::enumValidate();
DOMNodeList::get__newEnum();
DOMNodeList::get_item();
DOMNodeList::get_length();
DOMNodeList::nextNode();
DOMNodeList::reset();
DOMPreserveVisitor::DOMPreserveVisitor();
DOMPreserveVisitor::visitPCData();
DOMPreserveVisitor::~DOMPreserveVisitor();
DOMProcessor::AddRef();
DOMProcessor::DOMProcessor();
DOMProcessor::GetDispID();
DOMProcessor::GetIDsOfNames();
DOMProcessor::GetTypeInfo();
DOMProcessor::GetTypeInfoCount();
DOMProcessor::Invoke();
DOMProcessor::ProcessorRelease();
DOMProcessor::QueryInterface();
DOMProcessor::Release();
DOMProcessor::_invoke();
DOMProcessor::`scalar deleting destructor'();
DOMProcessor::`vector deleting destructor'();
DOMProcessor::addObject();
DOMProcessor::addParameter();
DOMProcessor::clear();
DOMProcessor::clearRequiredEvent();
DOMProcessor::continueTransform();
DOMProcessor::flush();
DOMProcessor::getFeature();
DOMProcessor::getProperty();
DOMProcessor::get_byteOrderMark();
DOMProcessor::get_contentHandler();
DOMProcessor::get_disableOutputEscaping();
DOMProcessor::get_dtdHandler();
DOMProcessor::get_encoding();
DOMProcessor::get_entityResolver();
DOMProcessor::get_errorHandler();
DOMProcessor::get_indent();
DOMProcessor::get_input();
DOMProcessor::get_omitXMLDeclaration();
DOMProcessor::get_output();
DOMProcessor::get_outputDocument();
DOMProcessor::get_outputHString();
DOMProcessor::get_ownerTemplate();
DOMProcessor::get_readyState();
DOMProcessor::get_standalone();
DOMProcessor::get_startMode();
DOMProcessor::get_startModeURI();
DOMProcessor::get_stylesheet();
DOMProcessor::get_version();
DOMProcessor::init();
DOMProcessor::initTransform();
DOMProcessor::newDOMProcessor();
DOMProcessor::putFeature();
DOMProcessor::putProperty();
DOMProcessor::put_byteOrderMark();
DOMProcessor::put_disableOutputEscaping();
DOMProcessor::put_encoding();
DOMProcessor::put_indent();
DOMProcessor::put_input();
DOMProcessor::put_omitXMLDeclaration();
DOMProcessor::put_output();
DOMProcessor::put_standalone();
DOMProcessor::put_version();
DOMProcessor::putref_contentHandler();
DOMProcessor::putref_dtdHandler();
DOMProcessor::putref_entityResolver();
DOMProcessor::putref_errorHandler();
DOMProcessor::releaseInput();
DOMProcessor::reset();
DOMProcessor::resetEvent();
DOMProcessor::setCompleteState();
DOMProcessor::setPropertyEvent();
DOMProcessor::setStartMode();
DOMProcessor::setStm();
DOMProcessor::transform();
DOMProcessor::~DOMProcessor();
DOMSupportErrorInfoTear::DOMSupportErrorInfoTear();
DOMSupportErrorInfoTear::InterfaceSupportsErrorInfo();
DOMSupportErrorInfoTear::`scalar deleting destructor'();
DOMSupportErrorInfoTear::`vector deleting destructor'();
DOMTemplate::AddRef();
DOMTemplate::CacheProcessor();
DOMTemplate::ClearCache();
DOMTemplate::DOMTemplate();
DOMTemplate::DWORDRegistrySetting();
DOMTemplate::GetProcessor();
DOMTemplate::ProcessorIsDone();
DOMTemplate::QueryInterface();
DOMTemplate::Release();
DOMTemplate::_invoke();
DOMTemplate::`scalar deleting destructor'();
DOMTemplate::`vector deleting destructor'();
DOMTemplate::createProcessor();
DOMTemplate::getRootControl();
DOMTemplate::get_stylesheet();
DOMTemplate::init();
DOMTemplate::putref_stylesheet();
DOMTemplate::setDocumentReadOnly();
DOMTemplate::~DOMTemplate();
DOMTrimVisitor::visitPCData();
DOMXmlSpaceVisitor::visitPCData();
DOMXmlSpaceVisitor::visitParent();
DOMXmlSpaceVisitor::visitRoot();
DTD::CheckAttributeValue();
DTD::CheckElementValue();
DTD::CheckValue();
DTD::DTD();
DTD::New();
DTD::NewAttDef();
DTD::NewElementDecl();
DTD::NewElementDeclClone();
DTD::`scalar deleting destructor'();
DTD::`vector deleting destructor'();
DTD::addEntity();
DTD::addForwardRef();
DTD::addID();
DTD::addNotation();
DTD::addSeenURN();
DTD::checkAttrEntityRef();
DTD::checkContent();
DTD::checkEntity();
DTD::checkEntityRefLoop();
DTD::checkForwardRefs();
DTD::checkID();
DTD::clear();
DTD::clone();
DTD::createDeclaredElementDecl();
DTD::createUndeclaredElementDecl();
DTD::findDTDDecl();
DTD::findElementDecl();
DTD::findElementDeclIncludingUndeclared();
DTD::findEntityGeneral();
DTD::findEntityParameter();
DTD::findID();
DTD::findNewChildDecl();
DTD::findNodeElemDecl();
DTD::findNotation();
DTD::fixupNames();
DTD::getAttribute();
DTD::getDefaultNode();
DTD::getElementDecls();
DTD::getGAttributeType();
DTD::getTypeDecl();
DTD::hasSchema();
DTD::matchElementDecl();
DTD::merge();
DTD::mergeSchemaCache();
DTD::moveUndeclaredElements2ElementDecls();
DTD::processTokenizedType();
DTD::retrieveXsiType();
DTD::setDefaultAttributes();
DTD::setDefaultNode();
DTD::translateName();
DTD::translatedNameStr();
DTD::validate();
DTD::walkContentToChild();
DTD::~DTD();
DTDDecl::DTDDecl();
DTDDecl::addValue();
DTDDecl::checkEnumeration();
DTDDecl::checkValue();
DTDDecl::copy();
DTDDecl::getDataType();
DTDDecl::getNameAsStr();
DTDDecl::isElement();
DTDDecl::setSchemaType();
DTDDecl::typeIs();
DTDDecl::~DTDDecl();
DTDFactory::BeginChildren();
DTDFactory::CreateNode();
DTDFactory::CreateNode_ATTDEF_SUB();
DTDFactory::CreateNode_DTDATTR_SUB();
DTDFactory::CreateNode_DeclWithAttrs();
DTDFactory::CreateNode_ELEMENTDECL();
DTDFactory::CreateNode_ELEMENTDECL_SUB();
DTDFactory::CreateNode_PEREF();
DTDFactory::DTDFactory();
DTDFactory::EndChildren();
DTDFactory::EndChildren_DECL();
DTDFactory::Error();
DTDFactory::New();
DTDFactory::NotifyEvent();
DTDFactory::RevertFactory();
DTDFactory::_trampoline_CreateNode_ATTDEF_SUB();
DTDFactory::_trampoline_CreateNode_ATTLISTDECL();
DTDFactory::_trampoline_CreateNode_DTDATTR_SUB();
DTDFactory::_trampoline_CreateNode_DTDSUBSET();
DTDFactory::_trampoline_CreateNode_DeclWithAttrs();
DTDFactory::_trampoline_CreateNode_ELEMENTDECL();
DTDFactory::_trampoline_CreateNode_ELEMENTDECL_SUB();
DTDFactory::_trampoline_CreateNode_INCLUDESECT();
DTDFactory::_trampoline_CreateNode_PEREF();
DTDFactory::_trampoline_EndChildren_DECL();
DTDFactory::_trampoline_EndChildren_ELEMENTDECL_SUB();
DTDFactory::_trampoline_EndChildren_INCLUDESECT();
DTDFactory::`scalar deleting destructor'();
DTDFactory::`vector deleting destructor'();
DTDFactory::checkAttdef();
DTDFactory::parseEntities();
DTDFactory::parseEntity();
DTDFactory::reset();
DTDFactory::~DTDFactory();
DTDHandlerWrapper::DTDHandlerWrapper();
DTDHandlerWrapper::`scalar deleting destructor'();
DTDHandlerWrapper::`vector deleting destructor'();
DTDHandlerWrapper::newDTDHandlerWrapper();
DTDHandlerWrapper::notationDecl();
DTDHandlerWrapper::unparsedEntityDecl();
DTDValidator::DTDValidator();
DTDValidator::New();
DTDValidator::`scalar deleting destructor'();
DTDValidator::`vector deleting destructor'();
DTDValidator::abort();
DTDValidator::attributeCheckValueDTD();
DTDValidator::checkDFA();
DTDValidator::endDocument();
DTDValidator::endElement();
DTDValidator::getCurrentState();
DTDValidator::get_currentState();
DTDValidator::handleException();
DTDValidator::init();
DTDValidator::noncontent();
DTDValidator::popState();
DTDValidator::pushContextDecl();
DTDValidator::pushNewState();
DTDValidator::reset();
DTDValidator::setMultipleErrors();
DTDValidator::startElement();
DTDValidator::text();
DTDValidator::throwException();
DTDValidator::~DTDValidator();
DTSAttributes::DTSAttributes();
DTSAttributes::EnsureNSDeclD();
DTSAttributes::ProcessAttributes();
DTSAttributes::`scalar deleting destructor'();
DTSAttributes::`vector deleting destructor'();
DTSAttributes::addAttribute();
DTSAttributes::addNamespaceDecl();
DTSAttributes::getIndexFromName();
DTSAttributes::getIndexFromQName();
DTSAttributes::getLength();
DTSAttributes::getLocalName();
DTSAttributes::getName();
DTSAttributes::getQName();
DTSAttributes::getType();
DTSAttributes::getTypeFromName();
DTSAttributes::getTypeFromQName();
DTSAttributes::getURI();
DTSAttributes::getValue();
DTSAttributes::getValueFromName();
DTSAttributes::getValueFromQName();
DTSAttributes::newDTSAttributes();
DTSAttributes::reset();
DTSAttributes::~DTSAttributes();
DTSReader::DTSReader();
DTSReader::DTSSAXLocator::AddRef();
DTSReader::DTSSAXLocator::QueryInterface();
DTSReader::DTSSAXLocator::Release();
DTSReader::DTSSAXLocator::getColumnNumber();
DTSReader::DTSSAXLocator::getLineNumber();
DTSReader::DTSSAXLocator::getPublicId();
DTSReader::DTSSAXLocator::getSystemId();
DTSReader::QueryInterface();
DTSReader::_traverse();
DTSReader::`scalar deleting destructor'();
DTSReader::`vector deleting destructor'();
DTSReader::characters();
DTSReader::dtdElementDecls();
DTSReader::getProperty();
DTSReader::newDTSReader();
DTSReader::recurseChildren();
DTSReader::traverse();
DTSReader::~DTSReader();
Datatype_ENTITY::Datatype_ENTITY();
Datatype_ENTITY::ParseAtomicValue();
Datatype_ENTITY::_createInstance();
Datatype_ENTITY::`scalar deleting destructor'();
Datatype_ENTITY::getClass();
Datatype_ENTITY::getSOMItemType();
Datatype_ENTITY::getTokenizedType();
Datatype_ID::Datatype_ID();
Datatype_ID::ParseAtomicValue();
Datatype_ID::_createInstance();
Datatype_ID::`scalar deleting destructor'();
Datatype_ID::getClass();
Datatype_ID::getSOMItemType();
Datatype_ID::getTokenizedType();
Datatype_IDREF::Datatype_IDREF();
Datatype_IDREF::ParseAtomicValue();
Datatype_IDREF::_createInstance();
Datatype_IDREF::`scalar deleting destructor'();
Datatype_IDREF::getClass();
Datatype_IDREF::getSOMItemType();
Datatype_IDREF::getTokenizedType();
Datatype_NCName::Datatype_NCName();
Datatype_NCName::ParseAtomicValue();
Datatype_NCName::_createInstance();
Datatype_NCName::`scalar deleting destructor'();
Datatype_NCName::getClass();
Datatype_NCName::getSOMItemType();
Datatype_NMTOKEN::Datatype_NMTOKEN();
Datatype_NMTOKEN::ParseAtomicValue();
Datatype_NMTOKEN::_createInstance();
Datatype_NMTOKEN::`scalar deleting destructor'();
Datatype_NMTOKEN::getClass();
Datatype_NMTOKEN::getSOMItemType();
Datatype_NMTOKEN::getTokenizedType();
Datatype_NOTATION::Datatype_NOTATION();
Datatype_NOTATION::ParseAtomicValue();
Datatype_NOTATION::VerifySchemaValid();
Datatype_NOTATION::_createInstance();
Datatype_NOTATION::`scalar deleting destructor'();
Datatype_NOTATION::getClass();
Datatype_NOTATION::getSOMItemType();
Datatype_NOTATION::getTokenizedType();
Datatype_NOTATION::getValidRestrictionFlags();
Datatype_Name::Datatype_Name();
Datatype_Name::ParseAtomicValue();
Datatype_Name::_createInstance();
Datatype_Name::`scalar deleting destructor'();
Datatype_Name::getClass();
Datatype_Name::getSOMItemType();
Datatype_QName::Datatype_QName();
Datatype_QName::ParseAtomicValue();
Datatype_QName::_createInstance();
Datatype_QName::`scalar deleting destructor'();
Datatype_QName::clone();
Datatype_QName::getClass();
Datatype_QName::getSOMItemType();
Datatype_QName::getTokenizedType();
Datatype_QName::getValidRestrictionFlags();
Datatype_anyType::Datatype_anyType();
Datatype_anyType::ParseAtomicValue();
Datatype_anyType::_createInstance();
Datatype_anyType::`scalar deleting destructor'();
Datatype_anyType::getClass();
Datatype_anyType::getIsWhitespaceCollapseFixed();
Datatype_anyType::getSOMItemType();
Datatype_anyType::getTokenizedType();
Datatype_anyType::getValidRestrictionFlags();
Datatype_anyType::getWhiteSpaceHandling();
Datatype_anyURI::Datatype_anyURI();
Datatype_anyURI::ParseAtomicValue();
Datatype_anyURI::_createInstance();
Datatype_anyURI::`scalar deleting destructor'();
Datatype_anyURI::clone();
Datatype_anyURI::getClass();
Datatype_anyURI::getSOMItemType();
Datatype_anyURI::getValidRestrictionFlags();
Datatype_base64Binary::Datatype_base64Binary();
Datatype_base64Binary::ParseAtomicValue();
Datatype_base64Binary::_createInstance();
Datatype_base64Binary::`scalar deleting destructor'();
Datatype_base64Binary::clone();
Datatype_base64Binary::getClass();
Datatype_base64Binary::getSOMItemType();
Datatype_base64Binary::getValidRestrictionFlags();
Datatype_boolean::Datatype_boolean();
Datatype_boolean::ParseAtomicValue();
Datatype_boolean::_createInstance();
Datatype_boolean::`scalar deleting destructor'();
Datatype_boolean::clone();
Datatype_boolean::getClass();
Datatype_boolean::getSOMItemType();
Datatype_boolean::getValidRestrictionFlags();
Datatype_byte::Datatype_byte();
Datatype_byte::ParseAtomicValue();
Datatype_byte::_createInstance();
Datatype_byte::`scalar deleting destructor'();
Datatype_byte::getClass();
Datatype_byte::getSOMItemType();
Datatype_date::Datatype_date();
Datatype_date::_createInstance();
Datatype_date::`scalar deleting destructor'();
Datatype_date::getClass();
Datatype_date::getSOMItemType();
Datatype_dateTime::Datatype_dateTime();
Datatype_dateTime::_createInstance();
Datatype_dateTime::`scalar deleting destructor'();
Datatype_dateTime::getClass();
Datatype_dateTime::getSOMItemType();
Datatype_dateTimeBase::Datatype_dateTimeBase();
Datatype_dateTimeBase::ParseAtomicValue();
Datatype_dateTimeBase::_createInstance();
Datatype_dateTimeBase::`scalar deleting destructor'();
Datatype_dateTimeBase::clone();
Datatype_dateTimeBase::getClass();
Datatype_dateTimeBase::getValidRestrictionFlags();
Datatype_day::Datatype_day();
Datatype_day::_createInstance();
Datatype_day::`scalar deleting destructor'();
Datatype_day::getClass();
Datatype_day::getSOMItemType();
Datatype_decimal::CheckFractionDigits();
Datatype_decimal::CheckTotalDigits();
Datatype_decimal::Datatype_decimal();
Datatype_decimal::ParseAtomicValue();
Datatype_decimal::_createInstance();
Datatype_decimal::`scalar deleting destructor'();
Datatype_decimal::clone();
Datatype_decimal::getClass();
Datatype_decimal::getSOMItemType();
Datatype_decimal::getValidRestrictionFlags();
Datatype_double::Datatype_double();
Datatype_double::ParseAtomicValue();
Datatype_double::_createInstance();
Datatype_double::`scalar deleting destructor'();
Datatype_double::clone();
Datatype_double::getClass();
Datatype_double::getSOMItemType();
Datatype_double::getValidRestrictionFlags();
Datatype_duration::Datatype_duration();
Datatype_duration::ParseAtomicValue();
Datatype_duration::_createInstance();
Datatype_duration::`scalar deleting destructor'();
Datatype_duration::clone();
Datatype_duration::getClass();
Datatype_duration::getSOMItemType();
Datatype_duration::getValidRestrictionFlags();
Datatype_float::Datatype_float();
Datatype_float::ParseAtomicValue();
Datatype_float::_createInstance();
Datatype_float::`scalar deleting destructor'();
Datatype_float::clone();
Datatype_float::getClass();
Datatype_float::getSOMItemType();
Datatype_float::getValidRestrictionFlags();
Datatype_hexBinary::Datatype_hexBinary();
Datatype_hexBinary::ParseAtomicValue();
Datatype_hexBinary::_createInstance();
Datatype_hexBinary::`scalar deleting destructor'();
Datatype_hexBinary::clone();
Datatype_hexBinary::getClass();
Datatype_hexBinary::getSOMItemType();
Datatype_hexBinary::getValidRestrictionFlags();
Datatype_int::Datatype_int();
Datatype_int::ParseAtomicValue();
Datatype_int::_createInstance();
Datatype_int::`scalar deleting destructor'();
Datatype_int::getClass();
Datatype_int::getSOMItemType();
Datatype_integer::Datatype_integer();
Datatype_integer::ParseAtomicValue();
Datatype_integer::ParseIntegralValue();
Datatype_integer::_createInstance();
Datatype_integer::`scalar deleting destructor'();
Datatype_integer::getClass();
Datatype_integer::getSOMItemType();
Datatype_language::Datatype_language();
Datatype_language::ParseAtomicValue();
Datatype_language::VerifyLangID();
Datatype_language::_createInstance();
Datatype_language::`scalar deleting destructor'();
Datatype_language::classInit();
Datatype_language::getClass();
Datatype_language::getSOMItemType();
Datatype_long::Datatype_long();
Datatype_long::ParseAtomicValue();
Datatype_long::_createInstance();
Datatype_long::`scalar deleting destructor'();
Datatype_long::getClass();
Datatype_long::getSOMItemType();
Datatype_month::Datatype_month();
Datatype_month::_createInstance();
Datatype_month::`scalar deleting destructor'();
Datatype_month::getClass();
Datatype_month::getSOMItemType();
Datatype_monthDay::Datatype_monthDay();
Datatype_monthDay::_createInstance();
Datatype_monthDay::`scalar deleting destructor'();
Datatype_monthDay::getClass();
Datatype_monthDay::getSOMItemType();
Datatype_negativeInteger::Datatype_negativeInteger();
Datatype_negativeInteger::ParseAtomicValue();
Datatype_negativeInteger::_createInstance();
Datatype_negativeInteger::`scalar deleting destructor'();
Datatype_negativeInteger::getClass();
Datatype_negativeInteger::getSOMItemType();
Datatype_nonNegativeInteger::Datatype_nonNegativeInteger();
Datatype_nonNegativeInteger::ParseAtomicValue();
Datatype_nonNegativeInteger::_createInstance();
Datatype_nonNegativeInteger::`scalar deleting destructor'();
Datatype_nonNegativeInteger::getClass();
Datatype_nonNegativeInteger::getSOMItemType();
Datatype_nonPositiveInteger::Datatype_nonPositiveInteger();
Datatype_nonPositiveInteger::ParseAtomicValue();
Datatype_nonPositiveInteger::_createInstance();
Datatype_nonPositiveInteger::`scalar deleting destructor'();
Datatype_nonPositiveInteger::getClass();
Datatype_nonPositiveInteger::getSOMItemType();
Datatype_normalizedString::Datatype_normalizedString();
Datatype_normalizedString::_createInstance();
Datatype_normalizedString::`scalar deleting destructor'();
Datatype_normalizedString::getClass();
Datatype_normalizedString::getSOMItemType();
Datatype_normalizedString::getWhiteSpaceHandling();
Datatype_positiveInteger::Datatype_positiveInteger();
Datatype_positiveInteger::ParseAtomicValue();
Datatype_positiveInteger::_createInstance();
Datatype_positiveInteger::`scalar deleting destructor'();
Datatype_positiveInteger::getClass();
Datatype_positiveInteger::getSOMItemType();
Datatype_short::Datatype_short();
Datatype_short::ParseAtomicValue();
Datatype_short::_createInstance();
Datatype_short::`scalar deleting destructor'();
Datatype_short::getClass();
Datatype_short::getSOMItemType();
Datatype_string::Datatype_string();
Datatype_string::ParseAtomicValue();
Datatype_string::_createInstance();
Datatype_string::`scalar deleting destructor'();
Datatype_string::clone();
Datatype_string::getClass();
Datatype_string::getIsWhitespaceCollapseFixed();
Datatype_string::getSOMItemType();
Datatype_string::getTokenizedType();
Datatype_string::getValidRestrictionFlags();
Datatype_string::getWhiteSpaceHandling();
Datatype_time::Datatype_time();
Datatype_time::_createInstance();
Datatype_time::`scalar deleting destructor'();
Datatype_time::getClass();
Datatype_time::getSOMItemType();
Datatype_token::Datatype_token();
Datatype_token::_createInstance();
Datatype_token::`scalar deleting destructor'();
Datatype_token::getClass();
Datatype_token::getSOMItemType();
Datatype_token::getWhiteSpaceHandling();
Datatype_union::HasNoneAtomicMembers();
Datatype_union::IsBaseOf();
Datatype_union::ParseAtomicValue();
Datatype_union::ParseUnion();
Datatype_union::_createInstance();
Datatype_union::`scalar deleting destructor'();
Datatype_union::clone();
Datatype_union::getClass();
Datatype_union::getIsWhitespaceCollapseFixed();
Datatype_union::getValidRestrictionFlags();
Datatype_union::getWhiteSpaceHandling();
Datatype_unsignedByte::Datatype_unsignedByte();
Datatype_unsignedByte::ParseAtomicValue();
Datatype_unsignedByte::_createInstance();
Datatype_unsignedByte::`scalar deleting destructor'();
Datatype_unsignedByte::getClass();
Datatype_unsignedByte::getSOMItemType();
Datatype_unsignedInt::Datatype_unsignedInt();
Datatype_unsignedInt::ParseAtomicValue();
Datatype_unsignedInt::_createInstance();
Datatype_unsignedInt::`scalar deleting destructor'();
Datatype_unsignedInt::getClass();
Datatype_unsignedInt::getSOMItemType();
Datatype_unsignedLong::Datatype_unsignedLong();
Datatype_unsignedLong::ParseAtomicValue();
Datatype_unsignedLong::_createInstance();
Datatype_unsignedLong::`scalar deleting destructor'();
Datatype_unsignedLong::getClass();
Datatype_unsignedLong::getSOMItemType();
Datatype_unsignedShort::Datatype_unsignedShort();
Datatype_unsignedShort::ParseAtomicValue();
Datatype_unsignedShort::_createInstance();
Datatype_unsignedShort::`scalar deleting destructor'();
Datatype_unsignedShort::getClass();
Datatype_unsignedShort::getSOMItemType();
Datatype_year::Datatype_year();
Datatype_year::_createInstance();
Datatype_year::`scalar deleting destructor'();
Datatype_year::getClass();
Datatype_year::getSOMItemType();
Datatype_yearMonth::Datatype_yearMonth();
Datatype_yearMonth::_createInstance();
Datatype_yearMonth::`scalar deleting destructor'();
Datatype_yearMonth::getClass();
Datatype_yearMonth::getSOMItemType();
DateTime::addDateTime();
DateTime::addDays();
DateTime::addOffset();
DateTime::getDaysInMonth();
DateTime::hashCode();
DateTime::isLeapYear();
DateTime::roundToMilliseconds();
DateTime::setDay();
DateTime::setTZ();
DateTime::toUTCTime();
DateTime::validateDay();
DateTimeFormat::parseAsTime();
DateTimeFormat::parseAsTimeZone();
DateTimeFormat::parseAsXSDType();
DateTimeFormat::parseDigits();
DebugRegistrySetting();
DecToUTF16();
DecimalFormat::`scalar deleting destructor'();
DecimalFormat::appendString();
DecimalFormat::applyPattern();
DecimalFormat::copyString();
DecimalFormat::format();
DecimalFormat::init();
DecimalFormat::newDecimalFormat();
DecimalFormat::parse();
DecimalFormat::storeParseError();
DecimalFormatSymbols::DecimalFormatSymbols();
DecimalFormatSymbols::`scalar deleting destructor'();
DecimalFormatSymbols::getDefaultInstance();
DecimalFormatSymbols::newDecimalFormatSymbols();
DeclAttDef::DeclAttDef();
DeclAttDef::GetName();
DeclAttDef::SetName();
DeclAttDef::`scalar deleting destructor'();
DeclDoctype::CacheName();
DeclDoctype::Initialize();
DeclDoctype::InsertElement();
DeclDoctype::InsertEntity();
DeclDoctype::InsertNotation();
DeclDoctype::Reset();
DeclDoctype::`scalar deleting destructor'();
DeclDoctype::`vector deleting destructor'();
DeclDoctype::~DeclDoctype();
DeclElement::InsertAttDef();
DeclElement::LookupAttDef();
DeclElement::`scalar deleting destructor'();
DeclEntity::DeclEntity();
DeclEntity::`scalar deleting destructor'();
DeclEntity::`vector deleting destructor'();
DeclExternalId::DeclExternalId();
DeclExternalId::GetPreservedSystemId();
DeclExternalId::GetPublicId();
DeclExternalId::GetSystemId();
DeclExternalId::SetPreservedSystemId();
DeclExternalId::SetPublicId();
DeclExternalId::SetSystemId();
DeclExternalId::`scalar deleting destructor'();
DeclExternalId::~DeclExternalId();
DeclHandlerWrapper::DeclHandlerWrapper();
DeclHandlerWrapper::`scalar deleting destructor'();
DeclHandlerWrapper::`vector deleting destructor'();
DeclHandlerWrapper::attributeDecl();
DeclHandlerWrapper::elementDecl();
DeclHandlerWrapper::externalEntityDecl();
DeclHandlerWrapper::internalEntityDecl();
DeclHandlerWrapper::newDeclHandlerWrapper();
DeclName::GetName();
DeclName::SetName();
DeclName::`scalar deleting destructor'();
DeclNotation::DeclNotation();
DeclNotation::`scalar deleting destructor'();
DeclNotation::`vector deleting destructor'();
DecrementComponents();
DefaultWriter::DefaultWriter();
DefaultWriter::New();
DefaultWriter::`scalar deleting destructor'();
DefaultWriter::`vector deleting destructor'();
DefaultWriter::addWhitespace();
DefaultWriter::beginChildren();
DefaultWriter::beginComment();
DefaultWriter::beginElement();
DefaultWriter::beginPI();
DefaultWriter::close();
DefaultWriter::closeOutput();
DefaultWriter::createStreamWriter();
DefaultWriter::endComment();
DefaultWriter::endElement();
DefaultWriter::endPI();
DefaultWriter::onError();
DefaultWriter::open();
DefaultWriter::prefixMapping();
DefaultWriter::stringText();
DefaultWriter::wcharText();
DelayLoadFailureHook();
DescendantMatcher::`scalar deleting destructor'();
DescendantMatcher::getPreFilter();
DescendantMatcher::matches();
DescendantMatcher::matchesWithNodeTest();
DescendantMatcher::visitNodeTests();
DescendantNodeSet::DescendantNodeSet();
DescendantNodeSet::createCache();
DescendantNodeSet::getCount();
DescendantNodeSet::getIndex();
DescendantNodeSet::getInput();
DescendantNodeSet::getNavigator();
DescendantNodeSet::initIteration();
DescendantNodeSet::moveToNext();
DescendantNodeSet::reset();
DispatchFunctions::DispatchFunctions();
DispatchFunctions::executeFunction();
DispatchFunctions::functionExists();
DispatchFunctions::implementsNamespace();
DispatchFunctions::invokeDispatch();
DispatchFunctions::lookupFunction();
DispatchFunctions::~DispatchFunctions();
DllCanUnloadNow();
DllGetActivationFactory();
DllGetActivationFactory$filt$0();
DllGetClassObject();
DllGetClassObject$filt$0();
DllMain();
DllRegisterServer();
DllSetProperty();
DllUnregisterServer();
DocStream::Commit();
DocStream::FlushSafeArray();
DocStream::New();
DocStream::QueryInterface();
DocStream::Read();
DocStream::SaveDocument();
DocStream::Seek();
DocStream::Stat();
DocStream::Write();
DocStream::WriteSafeArray();
DocStream::`scalar deleting destructor'();
DocStream::`vector deleting destructor'();
DocStream::~DocStream();
Document::AddRef();
Document::DWORDRegistrySetting();
Document::Document();
Document::Exec();
Document::GetClassID();
Document::GetCurMoniker();
Document::GetSizeMax();
Document::HandleEndDocument();
Document::HandleParseError();
Document::InitNew();
Document::IsDirty();
Document::Load();
Document::NotifyListener();
Document::QIHelper();
Document::QueryInterface();
Document::QueryStatus();
Document::Release();
Document::Save();
Document::SaveCompleted();
Document::_clearDocNode();
Document::_clone();
Document::_createDocNode();
Document::_load();
Document::_release();
Document::`scalar deleting destructor'();
Document::`vector deleting destructor'();
Document::abort();
Document::checkSecureBaseURL();
Document::clear();
Document::createException();
Document::createNamespacesCollection();
Document::createNode();
Document::createOutput();
Document::finalize();
Document::finishDOMLoad();
Document::getAllowXSLTScriptingWithUMCI();
Document::getClass();
Document::getDTD();
Document::getEncoding();
Document::getMutex();
Document::getParser();
Document::getRootControl();
Document::getStandalone();
Document::getXML();
Document::getXMLDeclEncoding();
Document::init();
Document::initDefaultFactory();
Document::isElementLocked();
Document::isUMCIEnforced();
Document::load();
Document::loadXML();
Document::lockElement();
Document::newDocument();
Document::newNode();
Document::newParser();
Document::nodeFromID();
Document::onDataAvailable();
Document::onEndProlog();
Document::onStartDocument();
Document::parseXMLDecl();
Document::prepareDOMLoad();
Document::registerNonReentrant();
Document::removeNonReentrant();
Document::reset();
Document::run();
Document::save();
Document::setLastError();
Document::setMaxElementDepth();
Document::setMaxXmlSizeCch();
Document::setParseError();
Document::setReadyStatus();
Document::setRoot();
Document::setSite();
Document::setURL();
Document::throwError();
Document::throwLastError();
Document::unlockElement();
Document::~Document();
DocumentInfo::DocumentInfo();
DocumentInfo::New();
DocumentInfo::`scalar deleting destructor'();
DocumentInfo::finalize();
DocumentInfo::lockDocument();
DocumentInfo::registerDocument();
DocumentLock::Enter();
DocumentLock::EnterRead();
DocumentLock::Leave();
DocumentLock::LeaveRead();
DocumentLock::lockFailedErrorInfo();
DocumentLock::lockFailedThrow();
DocumentManager::addDocumentInfo();
DocumentManager::calcAbsoluteURI();
DocumentManager::createDocument();
DocumentManager::findDocumentInfo();
DocumentManager::initDocumentManager();
DocumentManager::loadDocument();
DocumentManager::lockNode();
DocumentManager::newDocumentNodeSet();
DocumentManager::registerDocument();
DocumentManager::registerNode();
DocumentReadLock::DocumentReadLock();
DocumentReadLock::~DocumentReadLock();
DocumentSchemaCollection::DocumentSchemaCollection();
DocumentSchemaCollection::QueryInterface();
DocumentSchemaCollection::`scalar deleting destructor'();
DocumentSchemaCollection::`vector deleting destructor'();
DocumentSchemaCollection::add();
DocumentSchemaCollection::addCollection();
DocumentSchemaCollection::get();
DocumentSchemaCollection::getDeclaration();
DocumentSchemaCollection::getItem();
DocumentSchemaCollection::getSchema();
DocumentSchemaCollection::get_length();
DocumentSchemaCollection::get_namespaceURI();
DocumentSchemaCollection::get_validateOnLoad();
DocumentSchemaCollection::put_validateOnLoad();
DocumentSchemaCollection::remove();
DocumentSchemaCollection::validate();
Double::isInteger();
Double::isNaN();
Double::round();
DummyObjectSrvcProvider::AddRef();
DummyObjectSrvcProvider::QueryInterface();
DummyObjectSrvcProvider::QueryService();
DummyObjectSrvcProvider::Read();
DummyObjectSrvcProvider::Release();
DummyObjectSrvcProvider::Write();
ElementDecl::ElementDecl();
ElementDecl::PushDefaultNamespaceDecls();
ElementDecl::`scalar deleting destructor'();
ElementDecl::`vector deleting destructor'();
ElementDecl::addAttDef();
ElementDecl::checkDefaultRequiredAttributes();
ElementDecl::classInit();
ElementDecl::computeDefaultAttributes();
ElementDecl::fixupNames();
ElementDecl::getAttDef();
ElementDecl::getLocalElement();
ElementDecl::isAbstract();
ElementDecl::isAttribute();
ElementDecl::isProhibitedAttribute();
EmptyNodeList::AddRef();
EmptyNodeList::EmptyNodeList();
EmptyNodeList::First();
EmptyNodeList::GetAt();
EmptyNodeList::GetIids();
EmptyNodeList::GetRuntimeClassName();
EmptyNodeList::GetTrustLevel();
EmptyNodeList::IndexOf();
EmptyNodeList::Item();
EmptyNodeList::QueryInterface();
EmptyNodeList::Release();
EmptyNodeList::`scalar deleting destructor'();
EmptyNodeList::createEmptyNodeList();
EmptyNodeList::get_Length();
EmptyNodeList::get_Size();
EmptyNodeSet::createCache();
EmptyNodeSet::getCount();
EmptyNodeSet::getIndex();
EmptyNodeSet::getNavigator();
EmptyNodeSet::moveToNext();
EmptyNodeSet::reset();
EmptyParticle::EmptyParticle();
EmptyParticle::_createInstance();
EmptyParticle::`scalar deleting destructor'();
EmptyParticle::getClass();
EmptyParticle::getIsEmpty();
EmptyParticle::getSOMItemType();
Encoding::`scalar deleting destructor'();
Encoding::newEncoding();
EncodingStream::AppendData();
EncodingStream::BufferData();
EncodingStream::Clone();
EncodingStream::Commit();
EncodingStream::CopyTo();
EncodingStream::EncodingStream();
EncodingStream::LockRegion();
EncodingStream::Read();
EncodingStream::Revert();
EncodingStream::Seek();
EncodingStream::SetCharset();
EncodingStream::SetSize();
EncodingStream::Stat();
EncodingStream::UnlockRegion();
EncodingStream::Write();
EncodingStream::`scalar deleting destructor'();
EncodingStream::`vector deleting destructor'();
EncodingStream::autoDetect();
EncodingStream::newEncodingStream();
EncodingStream::prepareForInput();
EncodingStream::switchEncodingAt();
EncodingStream::~EncodingStream();
EncodingWriter::Flush();
EncodingWriter::Init();
EncodingWriter::ResolveErrors();
EncodingWriter::WriteBOM();
EncodingWriter::WriteString();
EnsureClassInit();
EnsureNSDecl();
EnsureTls::EnsureTls();
EnsureTlsData();
Entity::`scalar deleting destructor'();
Entity::`vector deleting destructor'();
Entity::newEntity();
Entity::setURL();
EntityResolverWrapper::EntityResolverWrapper();
EntityResolverWrapper::`scalar deleting destructor'();
EntityResolverWrapper::`vector deleting destructor'();
EntityResolverWrapper::newEntityResolverWrapper();
EntityResolverWrapper::resolveEntity();
EnumVariant::enumValidate();
EnumVariant::get__aggregatedEnum();
ErrorHandlerWrapper::ErrorHandlerWrapper();
ErrorHandlerWrapper::Init();
ErrorHandlerWrapper::`scalar deleting destructor'();
ErrorHandlerWrapper::`vector deleting destructor'();
ErrorHandlerWrapper::error();
ErrorHandlerWrapper::fatalError();
ErrorHandlerWrapper::ignorableWarning();
ErrorHandlerWrapper::newErrorHandlerWrapper();
ErrorMatcher::`scalar deleting destructor'();
ErrorMatcher::getPreFilter();
ErrorMatcher::matches();
ErrorMatcher::matchesWithNodeTest();
ErrorMatcher::visitNodeTests();
ErrorNode::_optimize();
ErrorNode::`scalar deleting destructor'();
ErrorNode::equals();
ErrorNode::getDataType();
ErrorNode::getNodeType();
ErrorNode::visitTree();
Exception::Exception();
Exception::_addDetail();
Exception::_buildException();
Exception::_storeError();
Exception::`scalar deleting destructor'();
Exception::addDetail();
Exception::addParameters();
Exception::appendDetail();
Exception::attachExceptions();
Exception::buildException();
Exception::classExit();
Exception::classInit();
Exception::exceptionCatch();
Exception::fillException();
Exception::finalize();
Exception::getClass();
Exception::getException();
Exception::getHRESULT();
Exception::getMessage();
Exception::handleExceptionEx();
Exception::newException();
Exception::setErrorSchemaXPath();
Exception::setErrorXPath();
Exception::setException();
Exception::setFilePos();
Exception::setNext();
Exception::setPosInfo();
Exception::setSourceText();
Exception::setUrl();
Exception::storeThis();
Exception::throwAgain();
Exception::throwError();
Exception::throwHR();
Exception::throwStored();
Exception::throwThis();
Exception::throw_E_FAIL();
Exception::throw_E_INTERNAL();
Exception::throw_E_INVALIDARG();
Exception::throw_E_OUTOFMEMORY();
Exception::throw_E_OVERFLOW();
Exception::toString();
Exception::~Exception();
ExecutionHost::AddRef();
ExecutionHost::ExecutionHost();
ExecutionHost::QueryInterface();
ExecutionHost::QueryService();
ExecutionHost::Release();
ExecutionHost::`scalar deleting destructor'();
ExecutionHost::`vector deleting destructor'();
ExecutionHost::cloneExecutionHost();
ExprMatchNodeSet::moveToNext();
ExprMatchNodeSet::reset();
ExpressionCompiler::ExpressionCompiler();
ExpressionCompiler::`scalar deleting destructor'();
ExpressionCompiler::`vector deleting destructor'();
ExpressionCompiler::compileExpression();
ExpressionCompiler::functionCallNode();
ExpressionCompiler::getAllocator();
ExpressionCompiler::onError();
ExpressionCompiler::resolveFunctionCall();
ExpressionCompiler::resolveVariableRef();
ExpressionCompiler::variableRefNode();
ExpressionCompiler::~ExpressionCompiler();
ExtensionCompile::`scalar deleting destructor'();
ExtensionCompile::afterCompile();
ExtensionCompile::compileExtensionElement();
ExtensionCompile::compileFallback();
ExtensionCompile::compileInstruction();
ExtensionCompile::compileLiteralElement();
ExtensionCompile::compileText();
ExtensionCompile::newExtensionCompile();
FDblToRgbFast();
FDblToRgbPrecise();
FakeHTMLDoc::AddRef();
FakeHTMLDoc::GetIDsOfNames();
FakeHTMLDoc::GetTypeInfo();
FakeHTMLDoc::GetTypeInfoCount();
FakeHTMLDoc::Invoke();
FakeHTMLDoc::QueryInterface();
FakeHTMLDoc::Release();
FakeHTMLDoc::clear();
FakeHTMLDoc::close();
FakeHTMLDoc::createElement();
FakeHTMLDoc::createStyleSheet();
FakeHTMLDoc::elementFromPoint();
FakeHTMLDoc::execCommand();
FakeHTMLDoc::execCommandShowHelp();
FakeHTMLDoc::get_Script();
FakeHTMLDoc::get_URL();
FakeHTMLDoc::get_activeElement();
FakeHTMLDoc::get_alinkColor();
FakeHTMLDoc::get_all();
FakeHTMLDoc::get_anchors();
FakeHTMLDoc::get_applets();
FakeHTMLDoc::get_bgColor();
FakeHTMLDoc::get_body();
FakeHTMLDoc::get_charset();
FakeHTMLDoc::get_cookie();
FakeHTMLDoc::get_defaultCharset();
FakeHTMLDoc::get_designMode();
FakeHTMLDoc::get_domain();
FakeHTMLDoc::get_embeds();
FakeHTMLDoc::get_expando();
FakeHTMLDoc::get_fgColor();
FakeHTMLDoc::get_fileCreatedDate();
FakeHTMLDoc::get_fileModifiedDate();
FakeHTMLDoc::get_fileSize();
FakeHTMLDoc::get_fileUpdatedDate();
FakeHTMLDoc::get_forms();
FakeHTMLDoc::get_frames();
FakeHTMLDoc::get_images();
FakeHTMLDoc::get_lastModified();
FakeHTMLDoc::get_linkColor();
FakeHTMLDoc::get_links();
FakeHTMLDoc::get_location();
FakeHTMLDoc::get_mimeType();
FakeHTMLDoc::get_nameProp();
FakeHTMLDoc::get_onafterupdate();
FakeHTMLDoc::get_onbeforeupdate();
FakeHTMLDoc::get_onclick();
FakeHTMLDoc::get_ondblclick();
FakeHTMLDoc::get_ondragstart();
FakeHTMLDoc::get_onerrorupdate();
FakeHTMLDoc::get_onhelp();
FakeHTMLDoc::get_onkeydown();
FakeHTMLDoc::get_onkeypress();
FakeHTMLDoc::get_onkeyup();
FakeHTMLDoc::get_onmousedown();
FakeHTMLDoc::get_onmousemove();
FakeHTMLDoc::get_onmouseout();
FakeHTMLDoc::get_onmouseover();
FakeHTMLDoc::get_onmouseup();
FakeHTMLDoc::get_onreadystatechange();
FakeHTMLDoc::get_onrowenter();
FakeHTMLDoc::get_onrowexit();
FakeHTMLDoc::get_onselectstart();
FakeHTMLDoc::get_parentWindow();
FakeHTMLDoc::get_plugins();
FakeHTMLDoc::get_protocol();
FakeHTMLDoc::get_readyState();
FakeHTMLDoc::get_referrer();
FakeHTMLDoc::get_scripts();
FakeHTMLDoc::get_security();
FakeHTMLDoc::get_selection();
FakeHTMLDoc::get_styleSheets();
FakeHTMLDoc::get_title();
FakeHTMLDoc::get_vlinkColor();
FakeHTMLDoc::open();
FakeHTMLDoc::put_URL();
FakeHTMLDoc::put_alinkColor();
FakeHTMLDoc::put_bgColor();
FakeHTMLDoc::put_charset();
FakeHTMLDoc::put_cookie();
FakeHTMLDoc::put_defaultCharset();
FakeHTMLDoc::put_designMode();
FakeHTMLDoc::put_domain();
FakeHTMLDoc::put_expando();
FakeHTMLDoc::put_fgColor();
FakeHTMLDoc::put_linkColor();
FakeHTMLDoc::put_onafterupdate();
FakeHTMLDoc::put_onbeforeupdate();
FakeHTMLDoc::put_onclick();
FakeHTMLDoc::put_ondblclick();
FakeHTMLDoc::put_ondragstart();
FakeHTMLDoc::put_onerrorupdate();
FakeHTMLDoc::put_onhelp();
FakeHTMLDoc::put_onkeydown();
FakeHTMLDoc::put_onkeypress();
FakeHTMLDoc::put_onkeyup();
FakeHTMLDoc::put_onmousedown();
FakeHTMLDoc::put_onmousemove();
FakeHTMLDoc::put_onmouseout();
FakeHTMLDoc::put_onmouseover();
FakeHTMLDoc::put_onmouseup();
FakeHTMLDoc::put_onreadystatechange();
FakeHTMLDoc::put_onrowenter();
FakeHTMLDoc::put_onrowexit();
FakeHTMLDoc::put_onselectstart();
FakeHTMLDoc::put_title();
FakeHTMLDoc::put_vlinkColor();
FakeHTMLDoc::queryCommandEnabled();
FakeHTMLDoc::queryCommandIndeterm();
FakeHTMLDoc::queryCommandState();
FakeHTMLDoc::queryCommandSupported();
FakeHTMLDoc::queryCommandText();
FakeHTMLDoc::queryCommandValue();
FakeHTMLDoc::toString();
FakeHTMLDoc::write();
FakeHTMLDoc::writeln();
FastWppCallback();
FastWppTraceMessage();
FileStream::AddRef();
FileStream::Commit();
FileStream::FileStream();
FileStream::QueryInterface();
FileStream::Read();
FileStream::Release();
FileStream::Write();
FileStream::`scalar deleting destructor'();
FileStream::deferedOpen();
FileStream::newStream();
FileStream::open();
FillExceptionLocation();
FilterCacheNodeSet::FilterCacheNodeSet();
FilterMatchNodeSet::createCache();
FilterMatchNodeSet::getCount();
FilterMatchNodeSet::getIndex();
FilterMatchNodeSet::getNavigator();
FilterMatcher::FilterMatcher();
FilterMatcher::`scalar deleting destructor'();
FilterMatcher::getPreFilter();
FilterMatcher::matches();
FilterMatcher::matchesWithNodeTest();
FilterMatcher::visitNodeTests();
FilterNode::_optimize();
FilterNode::`scalar deleting destructor'();
FilterNode::equals();
FilterNode::getDataType();
FilterNode::getNodeType();
FilterNode::visitTree();
FilterNodeSet::createCache();
FilterNodeSet::findMatch();
FilterNodeSet::getCount();
FilterNodeSet::getIndex();
FilterNodeSet::getNavigator();
FilterNodeSet::initIteration();
FilterNodeSet::moveToNext();
FilterNodeSet::reset();
FilterRangeNodeSet::createCache();
FilterRangeNodeSet::getCount();
FilterRangeNodeSet::getIndex();
FilterRangeNodeSet::getInput();
FilterRangeNodeSet::getNavigator();
FilterRangeNodeSet::moveToNext();
FilterRangeNodeSet::reset();
FindQualifiedNode();
FireEvent();
FireEventThroughInvoke0();
FireEventWithNoArgsThroughCP();
FloatingDecimal::adjustDbl();
FloatingDecimal::doubleValue();
FloatingDecimal::initFromDouble();
FloatingDecimal::roundTo();
FollowingNodeSet::createCache();
FollowingNodeSet::getCount();
FollowingNodeSet::getIndex();
FollowingNodeSet::getNavigator();
FollowingNodeSet::initIteration();
FollowingNodeSet::moveToNext();
FollowingNodeSet::reset();
FollowingSiblingNodeSet::createCache();
FollowingSiblingNodeSet::getCount();
FollowingSiblingNodeSet::getIndex();
FollowingSiblingNodeSet::getInputSibling();
FollowingSiblingNodeSet::getNavigator();
FollowingSiblingNodeSet::initIteration();
FollowingSiblingNodeSet::moveToNext();
FollowingSiblingNodeSet::reset();
ForEachCompile::ForEachCompile();
ForEachCompile::`scalar deleting destructor'();
ForEachCompile::afterCompile();
ForEachCompile::beginForEach();
ForEachCompile::compileExtensionElement();
ForEachCompile::compileInstruction();
ForEachCompile::compileLiteralElement();
ForEachCompile::compileSort();
ForEachCompile::compileText();
FormatArabicLetter();
FormatAsLetters();
FormatDecimal();
FormatHelper::format();
FormatHindiVowel();
FormatInternalMessage();
FormatLetterArray();
FormatLetterExclude();
FormatLetterExtra();
FormatLetterRollover();
FormatPositiveDecimal();
FormatSimpleDigit();
FormatSymbol::`scalar deleting destructor'();
FormatSymbol::circularReference();
FormatSymbol::duplicateGlobal();
FormatSymbol::duplicateLocal();
FormatSymbol::exitScope();
FormatSymbol::newSymbol();
FormatSymbol::postProcessSymbol();
FormatSymbol::refersTo();
FormatSymbol::undefinedSymbol();
FormatSymbolsFixup::FormatSymbolsFixup();
FormatSymbolsFixup::`scalar deleting destructor'();
FormatSymbolsFixup::doFixup();
FreeThreadedMarshaller::QueryInterfaceForIMarshal();
FuncMatcher::`scalar deleting destructor'();
FuncMatcher::getPreFilter();
FuncMatcher::matches();
FuncMatcher::matchesWithNodeTest();
FuncMatcher::visitNodeTests();
FunctionCallNode::FunctionCallNode();
FunctionCallNode::_optimize();
FunctionCallNode::`scalar deleting destructor'();
FunctionCallNode::addParameters();
FunctionCallNode::equals();
FunctionCallNode::getDataType();
FunctionCallNode::getNodeType();
FunctionCallNode::newFunctionCallNode();
FunctionCallNode::visitTree();
FunctionLookup::lookupMSXSLFunction();
FunctionLookup::lookupXPathFunction();
FunctionLookup::lookupXSLTFunction();
GenerateSalt();
GenericBase::GenericBase();
GenericBase::weakAddRef();
GenericBase::weakRelease();
GetAppContainerInfo();
GetAttributeValueCollapsing();
GetAttributeValueNormalizing();
GetBaseURL();
GetDOMDocumentWrapper();
GetDOMNode();
GetElement();
GetEnterpriseId();
GetEntityResolvedURL();
GetGlobalInterfaceTable();
GetInterfaceFromGlobal();
GetPointersOfAttributesValues();
GetW3CDOMWrapper();
GroupNode::_optimize();
GroupNode::`scalar deleting destructor'();
GroupNode::equals();
GroupNode::getDataType();
GroupNode::getNodeType();
GroupNode::visitTree();
GrowAllocator::Alloc();
GrowAllocator::newPage();
Guard::AddRef();
Guard::QueryInterface();
Guard::Release();
Guard::attributeDecl();
Guard::characters();
Guard::comment();
Guard::elementDecl();
Guard::endCDATA();
Guard::endDTD();
Guard::endDocument();
Guard::endElement();
Guard::endEmptyElement();
Guard::endEntity();
Guard::endPrefixMapping();
Guard::error();
Guard::externalEntityDecl();
Guard::fatalError();
Guard::ignorableWarning();
Guard::ignorableWhitespace();
Guard::internalEntityDecl();
Guard::notationDecl();
Guard::processingInstruction();
Guard::putDocumentLocator();
Guard::skippedEntity();
Guard::startCDATA();
Guard::startDTD();
Guard::startDocument();
Guard::startElement();
Guard::startEmptyElement();
Guard::startEntity();
Guard::startPrefixMapping();
Guard::unparsedEntityDecl();
Guard::whitespace();
HSTRING_UserFree();
HSTRING_UserFree64();
HSTRING_UserMarshal();
HSTRING_UserMarshal64();
HSTRING_UserSize();
HSTRING_UserSize64();
HSTRING_UserUnmarshal();
HSTRING_UserUnmarshal64();
HTMLOutputHelper::HTMLOutputHelper();
HTMLOutputHelper::New();
HTMLOutputHelper::_escapeURIChar();
HTMLOutputHelper::`scalar deleting destructor'();
HTMLOutputHelper::`vector deleting destructor'();
HTMLOutputHelper::attributeText();
HTMLOutputHelper::uriAttributeText();
HTMLWriter::HTMLWriter();
HTMLWriter::New();
HTMLWriter::`scalar deleting destructor'();
HTMLWriter::`vector deleting destructor'();
HTMLWriter::addWhitespace();
HTMLWriter::beginChildren();
HTMLWriter::beginComment();
HTMLWriter::beginElement();
HTMLWriter::beginPI();
HTMLWriter::close();
HTMLWriter::closeOutput();
HTMLWriter::endComment();
HTMLWriter::endElement();
HTMLWriter::endPI();
HTMLWriter::getPrefix();
HTMLWriter::onError();
HTMLWriter::open();
HTMLWriter::outputAttributes();
HTMLWriter::outputWS();
HTMLWriter::prefixMapping();
HTMLWriter::stringText();
HTMLWriter::wcharText();
HTMLWriter::~HTMLWriter();
HTTPHeader::HTTPHeader();
HTTPHeader::alloc();
HTTPHeader::appendValue();
HTTPHeader::replaceValue();
HTTPHeader::reset();
HTTPHeader::~HTTPHeader();
HTTPHeaders::HTTPHeaders();
HTTPHeaders::IsNonScriptableCookie();
HTTPHeaders::ParseToken();
HTTPHeaders::additionalHeaders();
HTTPHeaders::find();
HTTPHeaders::get();
HTTPHeaders::parseContentType();
HTTPHeaders::parseHeaders();
HTTPHeaders::replace();
HTTPHeaders::reset();
HTTPHeaders::set();
HTTPHeaders::setAll();
HTTPHeaders::~HTTPHeaders();
HTTPRequest::AbortEx();
HTTPRequest::HTTPRequest();
HTTPRequest::HTTPRequestSink::AddRef();
HTTPRequest::HTTPRequestSink::OnError();
HTTPRequest::HTTPRequestSink::OnResponseDataAvailable();
HTTPRequest::HTTPRequestSink::OnResponseFinished();
HTTPRequest::HTTPRequestSink::OnResponseStart();
HTTPRequest::HTTPRequestSink::QueryInterface();
HTTPRequest::HTTPRequestSink::Release();
HTTPRequest::_Abort();
HTTPRequest::_onError();
HTTPRequest::_onResponseDataAvailable();
HTTPRequest::_onResponseFinished();
HTTPRequest::_onResponseStart();
HTTPRequest::`scalar deleting destructor'();
HTTPRequest::abort();
HTTPRequest::checkRedirectLocation();
HTTPRequest::crackURL();
HTTPRequest::get_allResponseHeaders();
HTTPRequest::get_option();
HTTPRequest::get_responseBody();
HTTPRequest::get_responseHeader();
HTTPRequest::get_responseStream();
HTTPRequest::get_responseStreamVARIANT();
HTTPRequest::get_responseText();
HTTPRequest::get_status();
HTTPRequest::get_statusText();
HTTPRequest::init();
HTTPRequest::open();
HTTPRequest::openWithCredentials();
HTTPRequest::recycle();
HTTPRequest::send();
HTTPRequest::setProxy();
HTTPRequest::set_EDPClaim();
HTTPRequest::set_clientCert();
HTTPRequest::set_clientProxyCredentials();
HTTPRequest::set_customStream();
HTTPRequest::set_option();
HTTPRequest::set_property();
HTTPRequest::set_proxy();
HTTPRequest::set_proxyCredentials();
HTTPRequest::set_requestHeader();
HTTPRequest::set_timeouts();
HTTPRequest::waitForResponse();
HTTPRequest::~HTTPRequest();
HTTPStream::AddRef();
HTTPStream::GetContentLength();
HTTPStream::HTTPStream();
HTTPStream::OpenRequest();
HTTPStream::QueryInterface();
HTTPStream::ReadResponse();
HTTPStream::Release();
HTTPStream::SelectCertificate();
HTTPStream::`scalar deleting destructor'();
HTTPStream::abort();
HTTPStream::deferedOpen();
HTTPStream::reset();
HTTPStream::~HTTPStream();
HandleList::clearHandles();
HandleList::initHandles();
HandleList::removeHandle();
HashEntry::assign();
HashEntry::clear();
Hashtable::Hashtable();
Hashtable::__set();
Hashtable::_createInstance();
Hashtable::_get();
Hashtable::_remove();
Hashtable::_set();
Hashtable::`scalar deleting destructor'();
Hashtable::clear();
Hashtable::clone();
Hashtable::containsKey();
Hashtable::finalize();
Hashtable::getClass();
Hashtable::init();
Hashtable::newHashtable();
Hashtable::rehash();
Hashtable::~Hashtable();
HashtableIter::nextEntry();
HexCharEntity2Utf16();
HexToUTF16();
HostSecurityMgrDispatchWrapper::GetIDsOfNames();
HostSecurityMgrDispatchWrapper::GetTypeInfo();
HostSecurityMgrDispatchWrapper::GetTypeInfoCount();
HostSecurityMgrDispatchWrapper::Invoke();
HostSecurityMgrDispatchWrapper::`scalar deleting destructor'();
HostSecurityMgrDispatchWrapper::`vector deleting destructor'();
HostSecurityMgrWrapper::GetSecurityId();
HostSecurityMgrWrapper::HostSecurityMgrWrapper();
HostSecurityMgrWrapper::ProcessUrlAction();
HostSecurityMgrWrapper::QueryCustomPolicy();
HostSecurityMgrWrapper::Release();
HostSecurityMgrWrapper::`scalar deleting destructor'();
HostSecurityMgrWrapper::`vector deleting destructor'();
HostSecurityMgrWrapper::getDispWrapper();
HostSecurityMgrWrapper::~HostSecurityMgrWrapper();
IDCheck::`scalar deleting destructor'();
IDCheck::check();
IDNodeSet::IDNodeSet();
IDNodeSet::addIDs();
IEnumVARIANTImpl::Clone();
IEnumVARIANTImpl::IEnumVARIANTImpl();
IEnumVARIANTImpl::Next();
IEnumVARIANTImpl::QueryInterface();
IEnumVARIANTImpl::Reset();
IEnumVARIANTImpl::Skip();
IEnumVARIANTImpl::`scalar deleting destructor'();
IEnumVARIANTImpl::`vector deleting destructor'();
IEnumVARIANTImpl::newIEnumVARIANTImpl();
IEnumVARIANTWrapper::Clone();
IEnumVARIANTWrapper::IEnumVARIANTWrapper();
IEnumVARIANTWrapper::Next();
IEnumVARIANTWrapper::QueryInterface();
IEnumVARIANTWrapper::Reset();
IEnumVARIANTWrapper::Skip();
IEnumVARIANTWrapper::`scalar deleting destructor'();
IEnumVARIANTWrapper::`vector deleting destructor'();
IEnumVARIANTWrapper::newIEnumVARIANTWrapper();
IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<Windows::Data::Xml::Dom::IXmlNode> >();
IMXRContentHandler::`vcall'{112}'();
IMXRContentHandler::`vcall'{120}'();
IMXRContentHandler::`vcall'{128}'();
ISAXContentHandler::`vcall'{64}'();
ISAXContentHandler::`vcall'{72}'();
ISAXContentHandler::`vcall'{80}'();
IUnknown_AddRef_Proxy();
IUnknown_QueryInterface_Proxy();
IUnknown_Release_Proxy();
IfCompile::`scalar deleting destructor'();
IfCompile::afterCompile();
IfCompile::newOtherwiseCompile();
ImportManager::enterImport();
ImportManager::exitImport();
IndexManager::`scalar deleting destructor'();
IndexManager::addKeyValue();
IndexManager::buildIndex();
IndexManager::initIndexManager();
IndexManager::newIndexManager();
IndexManager::newKeyNodeSet();
InitDllMain();
InitSaltCallback();
InlineIsEqualGUID();
InputSource::GetEncoding();
InputSource::GetEntity();
InputSource::InputSource();
InputSource::SetEncoding();
InputSource::SetEntity();
InsChineseNum2();
InsKanjiNum3();
InstrCompile::`scalar deleting destructor'();
InstrCompile::afterCompile();
InstrCompile::characters();
InstrCompile::checkNoAttrs();
InstrCompile::checkWhitespace();
InstrCompile::compileApplyImports();
InstrCompile::compileApplyTemplates();
InstrCompile::compileAttribute();
InstrCompile::compileCallTemplate();
InstrCompile::compileChoose();
InstrCompile::compileCopy();
InstrCompile::compileCopyOf();
InstrCompile::compileElement();
InstrCompile::compileExtensionElement();
InstrCompile::compileIf();
InstrCompile::compileInstruction();
InstrCompile::compileLiteralAttrs();
InstrCompile::compileLiteralElement();
InstrCompile::compileMessage();
InstrCompile::compileNumber();
InstrCompile::compilePI();
InstrCompile::compileTestAttr();
InstrCompile::compileText();
InstrCompile::compileUseAttrSets();
InstrCompile::compileVariableType();
InstrCompile::endElement();
InstrCompile::startElement();
InstrCompile::throwMayNotContainError();
IntToStr();
IntToULongLong();
Integer::_createInstance();
Integer::`scalar deleting destructor'();
Integer::clone();
Integer::equals();
Integer::getClass();
Integer::hashCode();
Integer::newInteger();
Integer::toString();
IntegerHashtable::IntegerHashtable();
IntegerHashtable::_createInstance();
IntegerHashtable::_set();
IntegerHashtable::`scalar deleting destructor'();
IntegerHashtable::getClass();
InternalNode::InternalNode();
InternalNode::`scalar deleting destructor'();
InternalNode::calcfollowpos();
InternalNode::clone();
InternalNode::expandTree();
InternalNode::finalize();
InternalNode::firstpos();
InternalNode::getClass();
InternalNode::lastpos();
InternalNode::newInternalNode();
InternalNode::nullable();
InternetHost::CheckSafety();
InternetHost::CreateMoniker();
InternetHost::GetSecurityId();
InternetHost::IsAllowableAction();
InternetHost::MonikerBindToObject();
InternetHost::MonikerBindToStorage();
InternetHost::ProcessUrlAction();
InternetHost::QueryCustomPolicy();
InternetHost::ThisFakeHTMLDoc::getContainer();
InternetHost::getFakeHTMLDocument();
IsBuiltInEntity();
IsCreateBindCtxPresent();
IsGetActiveWindowPresent();
IsMSXMLObject();
IsNonCDataAttributeType();
IsQIRestrictionOff();
IsWhiteSpace();
KeyDefinitions::getKeyInfoByName();
KeyNode::appendKeyNode();
KeyNode::insertKeyNode();
KeyNodeSet::addKeyNode();
KeyNodeSet::createCache();
KeyNodeSet::getCount();
KeyNodeSet::getIndex();
KeyNodeSet::getNavigator();
KeyNodeSet::insertMergeList();
KeyNodeSet::moveToNext();
KeyNodeSet::reset();
KeySeqInProgress::init();
KeySequence::KeySequence();
KeySequence::`scalar deleting destructor'();
KeySequence::equals();
KeySequence::hashCode();
KeySequence::init();
KeySequence::newKeySequence();
KeySequence::setKey();
KeySequence::toString();
KeyStorage::Page::operator new();
KeyStorage::allocKey();
KeyStorage::clear();
KeySymbol::`scalar deleting destructor'();
KeySymbol::circularReference();
KeySymbol::duplicateGlobal();
KeySymbol::duplicateLocal();
KeySymbol::exitScope();
KeySymbol::newSymbol();
KeySymbol::postProcessSymbol();
KeySymbol::refersTo();
KeySymbol::undefinedSymbol();
LLStack<ValidationState,16>::empty();
LLStack<ValidationState,16>::pop();
LLStack<ValidationState,16>::push();
LexicalHandlerWrapper::LexicalHandlerWrapper();
LexicalHandlerWrapper::`scalar deleting destructor'();
LexicalHandlerWrapper::`vector deleting destructor'();
LexicalHandlerWrapper::comment();
LexicalHandlerWrapper::endCDATA();
LexicalHandlerWrapper::endDTD();
LexicalHandlerWrapper::endEntity();
LexicalHandlerWrapper::newLexicalHandlerWrapper();
LexicalHandlerWrapper::startCDATA();
LexicalHandlerWrapper::startDTD();
LexicalHandlerWrapper::startEntity();
LiteralNode::LiteralNode();
LiteralNode::_optimize();
LiteralNode::`scalar deleting destructor'();
LiteralNode::equals();
LiteralNode::getDataType();
LiteralNode::getNodeType();
LiteralNode::visitTree();
LiveQuerySelection::CheckVersionAndRepopulateNodeList();
LiveQuerySelection::LiveQuerySelection();
LiveQuerySelection::`scalar deleting destructor'();
LiveQuerySelection::`vector deleting destructor'();
LiveQuerySelection::get__newEnum();
LiveQuerySelection::get_item();
LiveQuerySelection::get_length();
LiveQuerySelection::nextNode();
LoadSettings::AddRef();
LoadSettings::GetIids();
LoadSettings::GetRuntimeClassName();
LoadSettings::GetTrustLevel();
LoadSettings::InternalGetRuntimeClassName();
LoadSettings::InternalGetTrustLevel();
LoadSettings::LoadSettings();
LoadSettings::QueryInterface();
LoadSettings::Release();
LoadSettings::`scalar deleting destructor'();
LoadSettings::get_ElementContentWhiteSpace();
LoadSettings::get_MaxElementDepth();
LoadSettings::get_ProhibitDtd();
LoadSettings::get_ResolveExternals();
LoadSettings::get_ValidateOnParse();
LoadSettings::put_ElementContentWhiteSpace();
LoadSettings::put_MaxElementDepth();
LoadSettings::put_ProhibitDtd();
LoadSettings::put_ResolveExternals();
LoadSettings::put_ValidateOnParse();
LoadSettingsFactory::ActivateInstance();
LoadSettingsFactory::LoadSettingsFactory();
LoadSettingsFactory::`scalar deleting destructor'();
LoadWorkItem::AddRef();
LoadWorkItem::CancelOperation<Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >();
LoadWorkItem::CancelOperation<Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >();
LoadWorkItem::DoWork();
LoadWorkItem::FireCompletion();
LoadWorkItem::GetIids();
LoadWorkItem::GetResults();
LoadWorkItem::GetRuntimeClassName();
LoadWorkItem::GetTrustLevel();
LoadWorkItem::Initialize();
LoadWorkItem::LoadDocumentFromStream();
LoadWorkItem::LoadWorkItem();
LoadWorkItem::OnCancel();
LoadWorkItem::OnClose();
LoadWorkItem::QueryInterface();
LoadWorkItem::Release();
LoadWorkItem::RuntimeClassInitialize();
LoadWorkItem::SetBaseUrlHelper();
LoadWorkItem::`scalar deleting destructor'();
LoadWorkItem::`vector deleting destructor'();
LoadWorkItem::~LoadWorkItem();
LocatorWrapper::LocatorWrapper();
LocatorWrapper::QueryInterface();
LocatorWrapper::_invoke();
LocatorWrapper::`scalar deleting destructor'();
LocatorWrapper::`vector deleting destructor'();
LocatorWrapper::get_columnNumber();
LocatorWrapper::get_lineNumber();
LocatorWrapper::get_publicId();
LocatorWrapper::get_systemId();
LocatorWrapper::newLocatorWrapper();
LookasideCache::add();
LookupDataType();
LookupURIAtom();
MTExit();
MTInit();
MXAny::QueryInterface();
MXAny::`scalar deleting destructor'();
MXAny::`vector deleting destructor'();
MXAny::newMXAny();
MXAnyAttribute::QueryInterface();
MXAnyAttribute::`scalar deleting destructor'();
MXAnyAttribute::`vector deleting destructor'();
MXAnyAttribute::get_maxOccurs();
MXAnyAttribute::get_minOccurs();
MXAnyAttribute::newMXAnyAttribute();
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::`scalar deleting destructor'();
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::`vector deleting destructor'();
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::get_namespaces();
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::get_processContents();
MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::~MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >();
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::`scalar deleting destructor'();
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::`vector deleting destructor'();
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::get_namespaces();
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::get_processContents();
MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::~MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >();
MXAttribute::QueryInterface();
MXAttribute::`scalar deleting destructor'();
MXAttribute::`vector deleting destructor'();
MXAttribute::getWrappedAttribute();
MXAttribute::get_defaultValue();
MXAttribute::get_fixedValue();
MXAttribute::get_isReference();
MXAttribute::get_scope();
MXAttribute::get_type();
MXAttribute::get_use();
MXAttribute::newMXAttribute();
MXAttributeGroup::QueryInterface();
MXAttributeGroup::`scalar deleting destructor'();
MXAttributeGroup::`vector deleting destructor'();
MXAttributeGroup::get_anyAttribute();
MXAttributeGroup::get_attributes();
MXAttributeGroup::newMXAttributeGroup();
MXAttributeGroup::~MXAttributeGroup();
MXComplexType::QueryInterface();
MXComplexType::`scalar deleting destructor'();
MXComplexType::`vector deleting destructor'();
MXComplexType::get_anyAttribute();
MXComplexType::get_attributes();
MXComplexType::get_baseTypes();
MXComplexType::get_contentModel();
MXComplexType::get_contentType();
MXComplexType::get_isAbstract();
MXComplexType::get_prohibitedSubstitutions();
MXComplexType::newMXComplexType();
MXComplexType::~MXComplexType();
MXDataType::QueryInterface();
MXDataType::`scalar deleting destructor'();
MXDataType::`vector deleting destructor'();
MXDataType::get_baseTypes();
MXDataType::newMXDataType();
MXElement::QueryInterface();
MXElement::`scalar deleting destructor'();
MXElement::`vector deleting destructor'();
MXElement::getWrappedElement();
MXElement::get_defaultValue();
MXElement::get_disallowedSubstitutions();
MXElement::get_fixedValue();
MXElement::get_identityConstraints();
MXElement::get_isAbstract();
MXElement::get_isNillable();
MXElement::get_isReference();
MXElement::get_scope();
MXElement::get_substitutionGroup();
MXElement::get_substitutionGroupExclusions();
MXElement::get_type();
MXElement::newMXElement();
MXElement::~MXElement();
MXHTMLWriter::MXHTMLWriter();
MXHTMLWriter::`scalar deleting destructor'();
MXHTMLWriter::`vector deleting destructor'();
MXHTMLWriter::newMXHTMLWriter();
MXHTMLWriter::put_output();
MXHTMLWriter::setHandlers();
MXIdentityConstraint::QueryInterface();
MXIdentityConstraint::`scalar deleting destructor'();
MXIdentityConstraint::`vector deleting destructor'();
MXIdentityConstraint::get_fields();
MXIdentityConstraint::get_referencedKey();
MXIdentityConstraint::get_selector();
MXIdentityConstraint::newMXIdentityConstraint();
MXIdentityConstraint::~MXIdentityConstraint();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::AddRef();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::Release();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::getWrapped();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_id();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_itemType();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_name();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_namespaceURI();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_schema();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::get_unhandledAttributes();
MXItem<CompiledIdentityConstraint,ISchemaIdentityConstraint,_MXItem>::writeAnnotation();
MXItem<Schema,ISchema,_MXItem>::AddRef();
MXItem<Schema,ISchema,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<Schema,ISchema,_MXItem>::Release();
MXItem<Schema,ISchema,_MXItem>::getWrapped();
MXItem<Schema,ISchema,_MXItem>::get_id();
MXItem<Schema,ISchema,_MXItem>::get_itemType();
MXItem<Schema,ISchema,_MXItem>::get_name();
MXItem<Schema,ISchema,_MXItem>::get_namespaceURI();
MXItem<Schema,ISchema,_MXItem>::get_schema();
MXItem<Schema,ISchema,_MXItem>::get_unhandledAttributes();
MXItem<Schema,ISchema,_MXItem>::writeAnnotation();
MXItem<SchemaAny,ISchemaAny,_MXItem>::AddRef();
MXItem<SchemaAny,ISchemaAny,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaAny,ISchemaAny,_MXItem>::Release();
MXItem<SchemaAny,ISchemaAny,_MXItem>::getWrapped();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_id();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_itemType();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_name();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_namespaceURI();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_schema();
MXItem<SchemaAny,ISchemaAny,_MXItem>::get_unhandledAttributes();
MXItem<SchemaAny,ISchemaAny,_MXItem>::writeAnnotation();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::AddRef();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::Release();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::getWrapped();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_id();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_itemType();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_name();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_namespaceURI();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_schema();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::get_unhandledAttributes();
MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem>::writeAnnotation();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::AddRef();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::Release();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::getWrapped();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_id();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_itemType();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_name();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_namespaceURI();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_schema();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::get_unhandledAttributes();
MXItem<SchemaAttribute,ISchemaAttribute,_MXItem>::writeAnnotation();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::AddRef();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::Release();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::getWrapped();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_id();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_itemType();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_name();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_namespaceURI();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_schema();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::get_unhandledAttributes();
MXItem<SchemaAttributeGroup,ISchemaAttributeGroup,_MXItem>::writeAnnotation();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::AddRef();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::InterfaceSupportsErrorInfo();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::Release();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::getWrapped();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_id();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_itemType();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_name();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_namespaceURI();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_schema();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::get_unhandledAttributes();
MXItem<SchemaComplexType,ISchemaComplexType,_MXType>::writeAnnotation();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::AddRef();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::InterfaceSupportsErrorInfo();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::Release();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::getWrapped();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_id();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_itemType();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_name();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_namespaceURI();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_schema();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::get_unhandledAttributes();
MXItem<SchemaDatatype,ISchemaType,_MXDataType>::writeAnnotation();
MXItem<SchemaElement,ISchemaElement,_MXItem>::AddRef();
MXItem<SchemaElement,ISchemaElement,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaElement,ISchemaElement,_MXItem>::Release();
MXItem<SchemaElement,ISchemaElement,_MXItem>::getWrapped();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_id();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_itemType();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_name();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_namespaceURI();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_schema();
MXItem<SchemaElement,ISchemaElement,_MXItem>::get_unhandledAttributes();
MXItem<SchemaElement,ISchemaElement,_MXItem>::writeAnnotation();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::AddRef();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::Release();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::getWrapped();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::get_id();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::get_name();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::get_namespaceURI();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::get_unhandledAttributes();
MXItem<SchemaGroupBase,ISchemaModelGroup,_MXItem>::writeAnnotation();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::AddRef();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::InterfaceSupportsErrorInfo();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::Release();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::getWrapped();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::get_id();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::get_itemType();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::get_namespaceURI();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::get_schema();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::get_unhandledAttributes();
MXItem<SchemaNotation,ISchemaNotation,_MXItem>::writeAnnotation();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::AddRef();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::InterfaceSupportsErrorInfo();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::Release();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::getWrapped();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_id();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_itemType();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_name();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_namespaceURI();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_schema();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::get_unhandledAttributes();
MXItem<SchemaSimpleType,ISchemaType,_MXType>::writeAnnotation();
MXItemCollection::AddRef();
MXItemCollection::MXItemCollection();
MXItemCollection::Release();
MXItemCollection::_invoke();
MXItemCollection::`scalar deleting destructor'();
MXItemCollection::`vector deleting destructor'();
MXItemCollection::getItem();
MXItemCollection::get_item();
MXItemCollection::get_length();
MXItemCollection::itemByName();
MXItemCollection::itemByQName();
MXItemCollection::newMXItemCollection();
MXItemCollection::~MXItemCollection();
MXModelGroup::QueryInterface();
MXModelGroup::`scalar deleting destructor'();
MXModelGroup::`vector deleting destructor'();
MXModelGroup::getWrappedGroupBase();
MXModelGroup::get_itemType();
MXModelGroup::get_maxOccurs();
MXModelGroup::get_minOccurs();
MXModelGroup::get_particles();
MXModelGroup::get_schema();
MXModelGroup::newMXModelGroup();
MXModelGroup::~MXModelGroup();
MXNamespaceManager::AddRef();
MXNamespaceManager::Initialize();
MXNamespaceManager::MXNamespaceManager();
MXNamespaceManager::QueryInterface();
MXNamespaceManager::Release();
MXNamespaceManager::_invoke();
MXNamespaceManager::`scalar deleting destructor'();
MXNamespaceManager::`vector deleting destructor'();
MXNamespaceManager::declarePrefix();
MXNamespaceManager::getAllowOverride();
MXNamespaceManager::getDeclaredPrefix();
MXNamespaceManager::getDeclaredPrefixes();
MXNamespaceManager::getPrefix();
MXNamespaceManager::getPrefixbyIndex();
MXNamespaceManager::getPrefixes();
MXNamespaceManager::getPrefixesVector();
MXNamespaceManager::getURI();
MXNamespaceManager::getURIFromNode();
MXNamespaceManager::getURIFromPrefix();
MXNamespaceManager::get_allowOverride();
MXNamespaceManager::popContext();
MXNamespaceManager::pushContext();
MXNamespaceManager::pushDecl();
MXNamespaceManager::pushNodeContext();
MXNamespaceManager::pushNodeNamespaces();
MXNamespaceManager::putAllowOverride();
MXNamespaceManager::put_allowOverride();
MXNamespaceManager::reset();
MXNamespaceManager::~MXNamespaceManager();
MXNamespacePrefixes::MXNamespacePrefixes();
MXNamespacePrefixes::_invoke();
MXNamespacePrefixes::`scalar deleting destructor'();
MXNamespacePrefixes::`vector deleting destructor'();
MXNamespacePrefixes::getItem();
MXNamespacePrefixes::get_item();
MXNamespacePrefixes::get_length();
MXNamespacePrefixes::~MXNamespacePrefixes();
MXNotation::QueryInterface();
MXNotation::`scalar deleting destructor'();
MXNotation::`vector deleting destructor'();
MXNotation::get_name();
MXNotation::get_publicIdentifier();
MXNotation::get_systemIdentifier();
MXNotation::newMXNotation();
MXParticle<SchemaAny,ISchemaAny>::get_maxOccurs();
MXParticle<SchemaAny,ISchemaAny>::get_minOccurs();
MXParticle<SchemaElement,ISchemaElement>::get_maxOccurs();
MXParticle<SchemaElement,ISchemaElement>::get_minOccurs();
MXRExceptionFilter();
MXRRaiseException();
MXSOMNavigator::getSchemaItemWrapper();
MXSOMNavigator::getXSIElement();
MXSchema::MXSchema();
MXSchema::QueryInterface();
MXSchema::`scalar deleting destructor'();
MXSchema::`vector deleting destructor'();
MXSchema::get_attributeGroups();
MXSchema::get_attributes();
MXSchema::get_elements();
MXSchema::get_modelGroups();
MXSchema::get_notations();
MXSchema::get_schemaLocations();
MXSchema::get_targetNamespace();
MXSchema::get_types();
MXSchema::get_version();
MXSchema::includedSchemas();
MXSchema::~MXSchema();
MXSimpleType::QueryInterface();
MXSimpleType::`scalar deleting destructor'();
MXSimpleType::`vector deleting destructor'();
MXSimpleType::get_baseTypes();
MXSimpleType::newMXSimpleType();
MXStringCollection::MXStringCollection();
MXStringCollection::_invoke();
MXStringCollection::`scalar deleting destructor'();
MXStringCollection::`vector deleting destructor'();
MXStringCollection::getItem();
MXStringCollection::get_item();
MXStringCollection::get_length();
MXStringCollection::newMXStringCollection();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_derivedBy();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_enumeration();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_final();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_fractionDigits();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_length();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_maxExclusive();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_maxInclusive();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_maxLength();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_minExclusive();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_minInclusive();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_minLength();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_patterns();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_totalDigits();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_variety();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::get_whitespace();
MXType<SchemaComplexType,ISchemaComplexType,_MXType>::isValid();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_derivedBy();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_enumeration();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_final();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_fractionDigits();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_length();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_maxExclusive();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_maxInclusive();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_maxLength();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_minExclusive();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_minInclusive();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_minLength();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_patterns();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_totalDigits();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_variety();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::get_whitespace();
MXType<SchemaDatatype,ISchemaType,_MXDataType>::isValid();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_derivedBy();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_enumeration();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_final();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_fractionDigits();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_length();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_maxExclusive();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_maxInclusive();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_maxLength();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_minExclusive();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_minInclusive();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_minLength();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_patterns();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_totalDigits();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_variety();
MXType<SchemaSimpleType,ISchemaType,_MXType>::get_whitespace();
MXType<SchemaSimpleType,ISchemaType,_MXType>::isValid();
MXUnhandledAttributes::MXUnhandledAttributes();
MXUnhandledAttributes::`scalar deleting destructor'();
MXUnhandledAttributes::`vector deleting destructor'();
MXUnhandledAttributes::newMXUnhandledAttributes();
MXUnhandledAttributes::~MXUnhandledAttributes();
MXXMLFilter__invoke();
MXXMLWriter::AddRef();
MXXMLWriter::GetDispID();
MXXMLWriter::GetIDsOfNames();
MXXMLWriter::GetTypeInfo();
MXXMLWriter::GetTypeInfoCount();
MXXMLWriter::InterfaceSupportsErrorInfo();
MXXMLWriter::Invoke();
MXXMLWriter::MXXMLWriter();
MXXMLWriter::QueryInterface();
MXXMLWriter::Release();
MXXMLWriter::_invoke();
MXXMLWriter::`scalar deleting destructor'();
MXXMLWriter::`vector deleting destructor'();
MXXMLWriter::attributeDecl();
MXXMLWriter::characters();
MXXMLWriter::comment();
MXXMLWriter::elementDecl();
MXXMLWriter::endCDATA();
MXXMLWriter::endDTD();
MXXMLWriter::endDocument();
MXXMLWriter::endElement();
MXXMLWriter::endEntity();
MXXMLWriter::endPrefixMapping();
MXXMLWriter::error();
MXXMLWriter::externalEntityDecl();
MXXMLWriter::fatalError();
MXXMLWriter::flush();
MXXMLWriter::getRootControl();
MXXMLWriter::get_byteOrderMark();
MXXMLWriter::get_disableOutputEscaping();
MXXMLWriter::get_encoding();
MXXMLWriter::get_indent();
MXXMLWriter::get_omitXMLDeclaration();
MXXMLWriter::get_output();
MXXMLWriter::get_standalone();
MXXMLWriter::get_version();
MXXMLWriter::ignorableWarning();
MXXMLWriter::ignorableWhitespace();
MXXMLWriter::internalEntityDecl();
MXXMLWriter::newMXXMLWriter();
MXXMLWriter::notDOM();
MXXMLWriter::notationDecl();
MXXMLWriter::processingInstruction();
MXXMLWriter::putDocumentLocator();
MXXMLWriter::put_byteOrderMark();
MXXMLWriter::put_disableOutputEscaping();
MXXMLWriter::put_encoding();
MXXMLWriter::put_indent();
MXXMLWriter::put_omitXMLDeclaration();
MXXMLWriter::put_output();
MXXMLWriter::put_standalone();
MXXMLWriter::put_version();
MXXMLWriter::setHandlers();
MXXMLWriter::skippedEntity();
MXXMLWriter::startCDATA();
MXXMLWriter::startDTD();
MXXMLWriter::startDocument();
MXXMLWriter::startElement();
MXXMLWriter::startEntity();
MXXMLWriter::startPrefixMapping();
MXXMLWriter::unparsedEntityDecl();
MXXMLWriter::~MXXMLWriter();
MatchChars();
MatchNameLookup::MatchNameLookup();
MatchNameLookup::NameCollection::NameCollection();
MatchNameLookup::NameCollection::~NameCollection();
MatchNameLookup::addMatcher();
MatchNameLookup::lookupName();
MatchNameLookup::~MatchNameLookup();
MatcherBuilder::absoluteNode();
MatcherBuilder::booleanNode();
MatcherBuilder::buildMatcher();
MatcherBuilder::castNode();
MatcherBuilder::compareNode();
MatcherBuilder::contextNode();
MatcherBuilder::errorNode();
MatcherBuilder::filterNode();
MatcherBuilder::functionCallNode();
MatcherBuilder::groupNode();
MatcherBuilder::literalNode();
MatcherBuilder::numericNode();
MatcherBuilder::pathNode();
MatcherBuilder::sortNode();
MatcherBuilder::unionNode();
MatcherBuilder::variableRefNode();
MatcherCollection::MatcherCollection();
MatcherCollection::`scalar deleting destructor'();
MatcherCollection::addMatcher();
MbyteCharacterSource::Convert();
MbyteCharacterSource::`scalar deleting destructor'();
MbyteCharacterSource::`vector deleting destructor'();
MemFree();
MemoryStream::New();
MemoryStream::Read();
MemoryStream::`scalar deleting destructor'();
MemoryStream::`vector deleting destructor'();
MemoryStream::bytes_remain();
MemoryStream::read_bytes();
MemoryStream::reset();
MemoryStream::~MemoryStream();
MemoryStreamForExternal::New();
MemoryStreamForExternal::`scalar deleting destructor'();
MemoryStreamForExternal::`vector deleting destructor'();
MemoryStreamForExternal::~MemoryStreamForExternal();
MemoryStreamForStrings::MemoryStreamForStrings();
MemoryStreamForStrings::`scalar deleting destructor'();
MemoryStreamForStrings::`vector deleting destructor'();
MemoryStreamForStrings::bytes_remain();
MemoryStreamForStrings::read_bytes();
Memory_init();
MessageCompile::`scalar deleting destructor'();
MessageCompile::afterCompile();
MessageCompile::newMessageCompile();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::ActivateInstance();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::AddRef();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::GetIids();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::GetRuntimeClassName();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::GetTrustLevel();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::QueryInterface();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::Release();
Microsoft::WRL::ActivationFactory<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::`scalar deleting destructor'();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::ActivateInstance();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::AddRef();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetIids();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetRuntimeClassName();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetTrustLevel();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::QueryInterface();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::Release();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`scalar deleting destructor'();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::ActivateInstance();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::AddRef();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetIids();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetRuntimeClassName();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetTrustLevel();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::QueryInterface();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::Release();
Microsoft::WRL::ActivationFactory<Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`scalar deleting destructor'();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Cancel();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckValidStateForAsyncInfoCall();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckValidStateForDelegateCall();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Close();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::ErrorCode();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::FireCompletion();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::GetOnComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::InitCausality();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::PutOnComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Start();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceCompletionNotificationComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceCompletionNotificationStart();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceDelegateAssigned();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceOperationComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceOperationStart();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TransitionToState();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TryTransitionToError();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`scalar deleting destructor'();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_ErrorCode();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_Id();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_Status();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::put_Id();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::~AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Cancel();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckValidStateForAsyncInfoCall();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckValidStateForDelegateCall();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Close();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::ErrorCode();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::FireCompletion();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::GetOnComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::InitCausality();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::PutOnComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Start();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceCompletionNotificationComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceCompletionNotificationStart();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceDelegateAssigned();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceOperationComplete();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TraceOperationStart();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TransitionToState();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::TryTransitionToError();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`scalar deleting destructor'();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_ErrorCode();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_Id();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::get_Status();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::put_Id();
Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::~AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >();
Microsoft::WRL::ComPtr<IAgileReference>::InternalRelease();
Microsoft::WRL::ComPtr<IAsyncInfo>::As<Windows::Foundation::IAsyncAction>();
Microsoft::WRL::ComPtr<IAsyncInfo>::As<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >();
Microsoft::WRL::ComPtr<IAsyncInfo>::InternalAddRef();
Microsoft::WRL::ComPtr<IAsyncInfo>::InternalRelease();
Microsoft::WRL::ComPtr<IInspectable>::InternalRelease();
Microsoft::WRL::ComPtr<IMarshal>::InternalRelease();
Microsoft::WRL::ComPtr<IStream>::InternalRelease();
Microsoft::WRL::ComPtr<IUnknown>::InternalRelease();
Microsoft::WRL::ComPtr<IXSLProcessor>::InternalRelease();
Microsoft::WRL::ComPtr<IXSLTemplate>::InternalRelease();
Microsoft::WRL::ComPtr<LoadWorkItem>::Attach();
Microsoft::WRL::ComPtr<LoadWorkItem>::InternalRelease();
Microsoft::WRL::ComPtr<NodeIterator>::Attach();
Microsoft::WRL::ComPtr<SaveWorkItem>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Data::Xml::Dom::IXmlNode>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Data::Xml::Dom::IXmlNode>::~ComPtr<Windows::Data::Xml::Dom::IXmlNode>();
Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ * __ptr64,IInspectable * __ptr64> * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ * __ptr64,IInspectable * __ptr64> * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ * __ptr64,IInspectable * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler>::InternalAddRef();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >::InternalAddRef();
Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IClosable>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IPropertyValueStatics>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IUriRuntimeClass>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Foundation::IUriRuntimeClassFactory>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Storage::IStorageFile>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Storage::IStorageFileStatics>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Storage::IStorageItem>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::Storage::Streams::IRandomAccessStream>::InternalRelease();
Microsoft::WRL::ComPtr<`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate>::InternalRelease();
Microsoft::WRL::ComPtr<`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate>::InternalRelease();
Microsoft::WRL::Details::CreateActivationFactory<LoadSettingsFactory>();
Microsoft::WRL::Details::CreateActivationFactory<XmlDocumentActivationFactory>();
Microsoft::WRL::Details::CreateActivationFactory<XsltProcessorFactory>();
Microsoft::WRL::Details::CreateWeakReference();
Microsoft::WRL::Details::DefaultModule<1>::`scalar deleting destructor'();
Microsoft::WRL::Details::GetActivationFactory<1>();
Microsoft::WRL::Details::GetCacheEntry();
Microsoft::WRL::Details::GetClassObject<1>();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Dom::IXmlDocumentStatics,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::Data::Xml::Xsl::IXsltProcessorFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,0,Microsoft::WRL::Details::ImplementsMarker<CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >,IWeakReferenceSource>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IWeakReferenceSource>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<7>,1,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >::CanCastTo();
Microsoft::WRL::Details::Make<EmptyNodeList>();
Microsoft::WRL::Details::Make<NodeIterator,EnumVariant * __ptr64 & __ptr64,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64> * __ptr64 & __ptr64>();
Microsoft::WRL::Details::Make<NodeIterator,QuerySelection * __ptr64,QuerySelection * __ptr64>();
Microsoft::WRL::Details::Make<XsltProcessorImpl,IXSLProcessor * __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<LoadSettingsFactory,LoadSettingsFactory>();
Microsoft::WRL::Details::MakeAndInitialize<LoadWorkItem,LoadWorkItem,_reference<DOMDocumentWrapper> & __ptr64,Windows::Foundation::IUriRuntimeClass * __ptr64 & __ptr64,Windows::Data::Xml::Dom::IXmlLoadSettings * __ptr64 & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<LoadWorkItem,LoadWorkItem,_reference<DOMDocumentWrapper> & __ptr64,Windows::Storage::IStorageFile * __ptr64 & __ptr64,Windows::Data::Xml::Dom::IXmlLoadSettings * __ptr64 & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<SaveWorkItem,SaveWorkItem,DOMDocumentWrapper * __ptr64,Windows::Storage::IStorageFile * __ptr64 & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<XmlDocumentActivationFactory,XmlDocumentActivationFactory>();
Microsoft::WRL::Details::MakeAndInitialize<XsltProcessorFactory,XsltProcessorFactory>();
Microsoft::WRL::Details::MakeAndInitialize<`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate,`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate>();
Microsoft::WRL::Details::MakeAndInitialize<`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate,`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate>();
Microsoft::WRL::Details::ModuleBase::GetFirstEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetLastEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetLock();
Microsoft::WRL::Details::ModuleBase::GetMidEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetObjectCount();
Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceListHelper<Microsoft::WRL::ChainInterfaces<Windows::Data::Xml::Dom::IXmlDocument,Windows::Data::Xml::Dom::IXmlNode,Windows::Data::Xml::Dom::IXmlNodeSelector,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,Windows::Data::Xml::Dom::IXmlNodeSerializer,Windows::Data::Xml::Dom::IXmlDocumentIO,Windows::Data::Xml::Dom::IXmlDocumentIO2>,Microsoft::WRL::RuntimeClassFlags<4103>,0,1,0>::GetIids();
Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlDomImplementation>,Microsoft::WRL::RuntimeClassFlags<4103>,0,1,0>::GetIids();
Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNamedNodeMap,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >,Microsoft::WRL::RuntimeClassFlags<4103>,0,1,0>::GetIids();
Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceListHelper<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >,Microsoft::WRL::RuntimeClassFlags<4103>,0,1,0>::GetIids();
Microsoft::WRL::Details::RuntimeClassBaseT<1>::AsIID<Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase> >();
Microsoft::WRL::Details::RuntimeClassBaseT<7>::AsIID<DOMChildList>();
Microsoft::WRL::Details::RuntimeClassBaseT<7>::AsIID<DOMImplementation>();
Microsoft::WRL::Details::RuntimeClassBaseT<7>::AsIID<DOMNamedNodeMapList>();
Microsoft::WRL::Details::RuntimeClassBaseT<7>::AsIID<QuerySelection>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<3>,1,1,0,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >();
Microsoft::WRL::Details::TerminateMap();
Microsoft::WRL::Details::WeakReferenceImpl::Resolve();
Microsoft::WRL::Details::WeakReferenceImpl::WeakReferenceImpl();
Microsoft::WRL::Details::WeakReferenceImpl::`scalar deleting destructor'();
Microsoft::WRL::ErrorPropagationPolicyTraits<-1>::FireCompletionErrorPropagationPolicyFilter();
Microsoft::WRL::FtmBase::CanCastTo();
Microsoft::WRL::FtmBase::DisconnectObject();
Microsoft::WRL::FtmBase::FtmBase();
Microsoft::WRL::FtmBase::GetMarshalSizeMax();
Microsoft::WRL::FtmBase::GetUnmarshalClass();
Microsoft::WRL::FtmBase::MarshalInterface();
Microsoft::WRL::FtmBase::ReleaseMarshalData();
Microsoft::WRL::FtmBase::UnmarshalInterface();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::DecrementObjectCount();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::IncrementObjectCount();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::RegisterCOMObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::RegisterWinRTObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::StaticInitialize();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::UnregisterCOMObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::UnregisterWinRTObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::`scalar deleting destructor'();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::~Module<1,Microsoft::WRL::Details::DefaultModule<1> >();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncAction,Windows::Foundation::IAsyncActionCompletedHandler,&SaveToFileAsyncOperationName> >::`vector deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<3>,CAsyncOperationBase<Windows::Foundation::IAsyncOperation<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,0> >::`vector deleting destructor'();
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Dom::IXmlLoadSettings,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Dom::IXmlNodeList,Windows::Foundation::Collections::IIterable<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::IVectorView<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Windows::Data::Xml::Xsl::IXsltProcessor,Windows::Data::Xml::Xsl::IXsltProcessor2,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IIterator<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::Wrappers::HStringReference::CreateReference();
Microsoft::WRL::Wrappers::HStringReference::HStringReference<unsigned short const * __ptr64>();
MinMaxNode::MinMaxNode();
MinMaxNode::`scalar deleting destructor'();
MinMaxNode::clone();
MinMaxNode::getClass();
MinMaxNode::isMinMax();
MlangCharacterSource::Convert();
MlangCharacterSource::MlangCharacterSource();
MlangCharacterSource::SetEncoding();
MlangCharacterSource::`scalar deleting destructor'();
MlangCharacterSource::`vector deleting destructor'();
ModeSymbol::`scalar deleting destructor'();
ModeSymbol::addTemplateSymbol();
ModeSymbol::circularReference();
ModeSymbol::compare();
ModeSymbol::duplicateGlobal();
ModeSymbol::duplicateLocal();
ModeSymbol::exitScope();
ModeSymbol::getTemplates();
ModeSymbol::newSymbol();
ModeSymbol::postProcessSymbol();
ModeSymbol::refersTo();
ModeSymbol::undefinedSymbol();
MsoCchFormatDecimalNfc();
MsoCchFormatLongNfc();
MsxmlHeapInit();
MsxmlInternetSecurityMgrSite::AddRef();
MsxmlInternetSecurityMgrSite::EnableModeless();
MsxmlInternetSecurityMgrSite::GetWindow();
MsxmlInternetSecurityMgrSite::QueryInterface();
MsxmlInternetSecurityMgrSite::QueryService();
MsxmlInternetSecurityMgrSite::Release();
MsxmlOriginateError();
Mutex::EnterRead();
Mutex::LeaveRead();
MutexLock::MutexLock();
MutexLock::Release();
MutexReadLock::MutexReadLock();
Name::Name();
Name::`scalar deleting destructor'();
Name::classExit();
Name::classInit();
Name::create();
Name::equals();
Name::getClass();
Name::hashCode();
Name::toDTDString();
Name::toString();
NameAttrFilter::NameAttrFilter();
NameAttrFilter::`scalar deleting destructor'();
NameAttrFilter::getMatchLocalName();
NameAttrFilter::getMatchType();
NameAttrFilter::getMatchURI();
NameAttrFilter::matches();
NameAttrFilter::matchesWithAxis();
NameAttrFilter::moveToFirst();
NameAttrFilter::moveToSibling();
NameDef::NameDef();
NameDef::`scalar deleting destructor'();
NameDef::equals();
NameDef::getClass();
NameDef::hashCode();
NameDef::newNameDef();
NameDef::toString();
NameDefLength();
NameNmspFilter::NameNmspFilter();
NameNmspFilter::`scalar deleting destructor'();
NameNmspFilter::getMatchLocalName();
NameNmspFilter::getMatchType();
NameNmspFilter::getMatchURI();
NameNmspFilter::matches();
NameNmspFilter::moveToFirst();
NameNmspFilter::moveToSibling();
NamespaceMgr::NamespaceMgr();
NamespaceMgr::New();
NamespaceMgr::_createNameDef();
NamespaceMgr::`scalar deleting destructor'();
NamespaceMgr::`vector deleting destructor'();
NamespaceMgr::calcHashIndex();
NamespaceMgr::clone();
NamespaceMgr::createAtom();
NamespaceMgr::createNameDef();
NamespaceMgr::createNameDefX();
NamespaceMgr::createPrefix();
NamespaceMgr::ensureGlobalURNExists();
NamespaceMgr::ensureURNExists();
NamespaceMgr::findEntry();
NamespaceMgr::findEntryInTopContext();
NamespaceMgr::findPrefix();
NamespaceMgr::findPrefixInTopContext();
NamespaceMgr::findURN();
NamespaceMgr::growPrefixHashtable();
NamespaceMgr::isReservedNameSpace();
NamespaceMgr::isReservedNameSpacePrefix();
NamespaceMgr::nodeTypeHasName();
NamespaceMgr::parseNames();
NamespaceMgr::peekScope();
NamespaceMgr::popAllScopes();
NamespaceMgr::popEntry();
NamespaceMgr::popScope();
NamespaceMgr::prefixDefined();
NamespaceMgr::pushDeepScope();
NamespaceMgr::pushEntry();
NamespaceMgr::pushScope();
NamespaceMgr::removeEntryFromHashtable();
NamespaceMgr::removeScope();
NamespaceMgr::reset();
NamespaceMgr::validateNameDef();
NamespaceNodeSet::createCache();
NamespaceNodeSet::getCount();
NamespaceNodeSet::getIndex();
NamespaceNodeSet::getNavigator();
NamespaceNodeSet::moveToNext();
NamespaceNodeSet::reset();
NamespaceParser::`scalar deleting destructor'();
NamespaceParser::cloneFrom();
NamespaceParser::getNamespaceText();
NamespaceParser::parseNamespaces();
NamespaceParser::parsedAttribute();
NamespaceParser::unhandledNodeInfo();
NamespaceParser::~NamespaceParser();
NamespaceSupport::FindMap();
NamespaceSupport::Map::~Map();
NamespaceSupport::PatchPrefix();
NamespaceSupport::PopMap();
NamespaceSupport::ProcessAttribute();
NamespaceSupport::PushPrefix();
NamespaceSupport::Reset();
NavCache::addCachedNavData();
NavCache::compare();
NavCache::reverseNavs();
NavCache::sortAndRemoveDuplicates();
NavCache::startCaching();
NavFilterMem::clear();
NavStack::peek();
NavStack::push();
NdrOleAllocate();
NdrOleFree();
NdrProxyForwardingFunction3();
NdrProxyForwardingFunction4();
NdrProxyForwardingFunction5();
NdrProxyForwardingFunction6();
NdrStubCall3();
NdrStubForwardingFunction();
NestedVariableRef::`scalar deleting destructor'();
NestedVariableRef::`vector deleting destructor'();
NestedVariableRef::doFixup();
NeverFilter::NeverFilter();
NeverFilter::`scalar deleting destructor'();
NeverFilter::getMatchLocalName();
NeverFilter::getMatchType();
NeverFilter::getMatchURI();
NeverFilter::matches();
NeverFilter::matchesWithAxis();
NeverFilter::moveToFirst();
NeverFilter::moveToFirstDescendant();
NeverFilter::moveToFollowing();
NeverFilter::moveToSibling();
NeverMatcher::NeverMatcher();
NeverMatcher::`scalar deleting destructor'();
NeverMatcher::getPreFilter();
NeverMatcher::matches();
NeverMatcher::matchesWithNodeTest();
NeverMatcher::visitNodeTests();
NewParserCallbackFailureTrackingRegistry::DebugBreakEnabledRegistrySetting();
NewParserCallbackFailureTrackingRegistry::TracingEnabledRegistrySetting();
NoAddRefVector::NoAddRefVector();
NoAddRefVector::_createInstance();
NoAddRefVector::_set();
NoAddRefVector::`scalar deleting destructor'();
NoAddRefVector::getClass();
NoAddRefVector::newVector();
Node::AddRef();
Node::CreatePrefixHelper();
Node::IUnk2Node();
Node::Node();
Node::NodeTypeAsString();
Node::QIHelper();
Node::QueryInterface();
Node::Release();
Node::Variant2Node();
Node::__delete();
Node::_addRef();
Node::_append();
Node::_clone();
Node::_dtText();
Node::_expandEntityRef();
Node::_findByNodeName();
Node::_getAttDef();
Node::_getElemDecl();
Node::_getText();
Node::_insert();
Node::_normalize();
Node::_putPrefix();
Node::_release();
Node::_releaseLocked();
Node::_remove();
Node::_save();
Node::_saveAttributes();
Node::_setText();
Node::`scalar deleting destructor'();
Node::addID();
Node::canContainInvalidCharacter();
Node::checkPutNodeValue();
Node::checkReadOnly();
Node::clone();
Node::cloneChildren();
Node::cloneExpandEntRef();
Node::copyNamespaces();
Node::deleteChildren();
Node::finalize();
Node::find();
Node::findAttribute();
Node::findByNameDef();
Node::findByNodeName();
Node::findByNodeNameNoThrow();
Node::findNamespaceURN();
Node::getAttributeText();
Node::getAttributesXML();
Node::getClass();
Node::getContentAsName();
Node::getDOMNodeWrapper();
Node::getDecl();
Node::getDefinition();
Node::getFirstAttribute();
Node::getFirstChild();
Node::getFirstNode();
Node::getFirstNodeNoExpand();
Node::getInnerText();
Node::getInnerTextCollapsed();
Node::getInnerTextPreserve();
Node::getInnerTextStrip();
Node::getInnerTextXmlSpace();
Node::getLastChild();
Node::getName();
Node::getNextAttribute();
Node::getNextChild();
Node::getNextSibling();
Node::getPrevSibling();
Node::getType();
Node::getTypedValue();
Node::getURL();
Node::getXML();
Node::getXmlSpace();
Node::hasChildren();
Node::innerTextCheck();
Node::insertDefaultAttr();
Node::insertDefaultAttrs();
Node::insertDefaultAttrs_Recursive();
Node::isAttributePrefixConflicted();
Node::isDefaultAttribute();
Node::isElementPrefixConflicted();
Node::moveNode();
Node::moveNodeCheck();
Node::moveNodeUpdate();
Node::moveNodeUpdateContentXSD();
Node::newNode();
Node::notifyChangeContent();
Node::notifyNew();
Node::notifyRemove();
Node::parseQName();
Node::removeDefaultAttrs_Recursive();
Node::removeID();
Node::removeNode();
Node::resolveEntityRef();
Node::save();
Node::saveQuotedValue();
Node::saveQuotedValueConformant();
Node::setAttribute();
Node::setDataType();
Node::setFloatingRec();
Node::setInnerText();
Node::setParent();
Node::setReadOnly();
Node::setTypedValue();
Node::testNotify();
Node::uncollapse();
Node::visitText();
Node::visitTextHelper();
Node::xmlSpacePreserve();
NodeBuilder::DecrementElementDepth();
NodeBuilder::IncrementElementDepth();
NodeBuilder::NodeBuilder();
NodeBuilder::ParserCallbacks::getText();
NodeBuilder::_bufferAttach();
NodeBuilder::attrCharacters();
NodeBuilder::attrEntityRef();
NodeBuilder::bufferAppend();
NodeBuilder::cdata();
NodeBuilder::characters();
NodeBuilder::declareNamespace();
NodeBuilder::endAttribute();
NodeBuilder::endDocument();
NodeBuilder::endElement();
NodeBuilder::endProlog();
NodeBuilder::entityRef();
NodeBuilder::hasDTD();
NodeBuilder::nonContent();
NodeBuilder::processXmlSpace();
NodeBuilder::reset();
NodeBuilder::startAttribute();
NodeBuilder::startDocument();
NodeBuilder::startDocumentInstance();
NodeBuilder::startElementContent();
NodeBuilder::whitespace();
NodeBuilder::xmldecl();
NodeBuilder::~NodeBuilder();
NodeFactory::BeginChildren();
NodeFactory::CreateAttributeSubNode();
NodeFactory::CreateNode();
NodeFactory::EndChildren();
NodeFactory::Error();
NodeFactory::FindXmlDeclAttributeValue();
NodeFactory::HandleAttributes();
NodeFactory::New();
NodeFactory::NotifyEvent();
NodeFactory::ProcessName();
NodeFactory::ProcessQualifiedName();
NodeFactory::ProcessXMLNSAttributes();
NodeFactory::ScanForAttribute();
NodeFactory::`scalar deleting destructor'();
NodeFactory::`vector deleting destructor'();
NodeFactory::abort();
NodeFactory::getLineNumber();
NodeFactory::getLinePosition();
NodeFactory::reset();
NodeFactory::~NodeFactory();
NodeIterator::AddRef();
NodeIterator::CreateNodeIterator();
NodeIterator::EnsureVersionMatches();
NodeIterator::GetIids();
NodeIterator::GetRuntimeClassName();
NodeIterator::GetTrustLevel();
NodeIterator::MoveNext();
NodeIterator::NodeIterator();
NodeIterator::QueryInterface();
NodeIterator::Release();
NodeIterator::`scalar deleting destructor'();
NodeIterator::get_Current();
NodeIterator::get_HasCurrent();
NodeIterator::~NodeIterator();
NodeIteratorState::enumGetNext();
NodeIteratorState::getNext();
NodeIteratorState::init();
NodeLocation::compareDefaultNamespaces();
NodeLocation::compareLocation();
NodeLocation::compareNamespaces();
NodeLocation::compareNodes();
NodeSource::getLineNumber();
NodeSource::getLinePosition();
NodeTestMatchNodeSet::moveToNext();
NodeTestMatchNodeSet::reset();
NodeXMLSource::getLineNumber();
NodeXMLSource::getLinePosition();
NodeXMLSource::getText();
NonMultSimpleIUnknown::AddRef();
NonMultSimpleIUnknown::QueryInterface();
NonMultSimpleIUnknown::Release();
NonMultSimpleIUnknown::`scalar deleting destructor'();
NonValidatingDTDValidator::New();
NonValidatingDTDValidator::NonValidatingDTDValidator();
NonValidatingDTDValidator::`scalar deleting destructor'();
NonValidatingDTDValidator::`vector deleting destructor'();
NonValidatingDTDValidator::endElement();
NonValidatingDTDValidator::startElement();
NonValidatingValidator::abort();
NonValidatingValidator::endDocument();
NonValidatingValidator::noncontent();
NonValidatingValidator::pushContextDecl();
NonValidatingValidator::setMultipleErrors();
NonValidatingValidator::text();
Notation::Notation();
Notation::`scalar deleting destructor'();
Notation::`vector deleting destructor'();
Notation::~Notation();
NullElement::NullElement();
NullElement::`scalar deleting destructor'();
NullElement::getClass();
NullElement::getNullElement();
NullElement::getSOMItemType();
NullWriter::NullWriter();
NullWriter::`scalar deleting destructor'();
NullWriter::`vector deleting destructor'();
NullWriter::addWhitespace();
NullWriter::beginChildren();
NullWriter::beginComment();
NullWriter::beginElement();
NullWriter::beginPI();
NullWriter::close();
NullWriter::endComment();
NullWriter::endElement();
NullWriter::endPI();
NullWriter::onError();
NullWriter::open();
NullWriter::prefixMapping();
NullWriter::stringText();
NullWriter::wcharText();
Number::ParseDouble();
Number::ParseSingle();
NumberToDouble();
NumberingCount::countAny();
NumberingCount::countPrecedingSiblings();
NumberingCount::countSingleMultiple();
NumberingCount::findCounts();
NumberingFormat::NumberingFormat();
NumberingFormat::`scalar deleting destructor'();
NumberingFormat::applyFormat();
NumberingFormat::applyPattern();
NumberingFormat::ensureCapacity();
NumberingFormat::format();
NumberingFormat::mapFormatToken();
NumberingFormat::newNumberingFormat();
NumberingOptions::NumberingOptions();
NumberingOptions::r8ToGroupSize();
NumberingOptions::stringToLetterValue();
NumberingOptions::stringToLevelType();
NumberingOptions::~NumberingOptions();
NumericNode::_optimize();
NumericNode::`scalar deleting destructor'();
NumericNode::equals();
NumericNode::getDataType();
NumericNode::getNodeType();
NumericNode::visitTree();
OMReadLock::OMReadLock();
OMReadLock::~OMReadLock();
OMWriteLock::OMWriteLock();
OMWriteLock::~OMWriteLock();
OMWriteToReadLock::OMWriteToReadLock();
Object::getObjectFromIUnk();
ObjectFromVariant();
ObjectParam::ObjectParam();
ObjectParam::`scalar deleting destructor'();
ObjectParam::`vector deleting destructor'();
ObjectParam::setObject();
ObjectPool::addToPool();
ObjectPool::finalize();
ObjectPool::getFromPool();
ObjectStublessClient10();
ObjectStublessClient11();
ObjectStublessClient12();
ObjectStublessClient13();
ObjectStublessClient14();
ObjectStublessClient15();
ObjectStublessClient16();
ObjectStublessClient17();
ObjectStublessClient18();
ObjectStublessClient19();
ObjectStublessClient20();
ObjectStublessClient21();
ObjectStublessClient22();
ObjectStublessClient23();
ObjectStublessClient24();
ObjectStublessClient25();
ObjectStublessClient26();
ObjectStublessClient27();
ObjectStublessClient28();
ObjectStublessClient3();
ObjectStublessClient4();
ObjectStublessClient5();
ObjectStublessClient6();
ObjectStublessClient7();
ObjectStublessClient8();
ObjectStublessClient9();
OutputHelper::EncodingError();
OutputHelper::FlushBuffer();
OutputHelper::New();
OutputHelper::OutputHelper();
OutputHelper::_actuallyWriteWS();
OutputHelper::_hardWrite();
OutputHelper::_write();
OutputHelper::`scalar deleting destructor'();
OutputHelper::`vector deleting destructor'();
OutputHelper::close();
OutputHelper::flush();
OutputHelper::forceNewline();
OutputHelper::init();
OutputHelper::onHardWrite();
OutputHelper::setEncoding();
OutputHelper::write();
OutputHelper::~OutputHelper();
OutputProperties::OutputProperties();
OutputProperties::`scalar deleting destructor'();
OutputProperties::createCDATAElements();
OutputProperties::mergeWithLowerPriority();
OutputProperties::newOutputProperties();
OutputSymbol::`scalar deleting destructor'();
OutputSymbol::circularReference();
OutputSymbol::duplicateGlobal();
OutputSymbol::duplicateLocal();
OutputSymbol::exitScope();
OutputSymbol::newSymbol();
OutputSymbol::postProcessSymbol();
OutputSymbol::refersTo();
OutputSymbol::undefinedSymbol();
ParameterCache::New();
ParameterCache::`scalar deleting destructor'();
ParameterCache::`vector deleting destructor'();
ParameterCache::addObjectParam();
ParameterCache::addSimpleParam();
ParameterCache::getExtensionFunctions();
ParameterCache::getExtensionsCount();
ParameterCache::getParameter();
ParameterCache::getParameterCount();
ParentCacheNodeSet::ParentCacheNodeSet();
ParentNodeSet::ParentNodeSet();
ParentNodeSet::reset();
ParseAsAPN();
ParseBase64();
ParseBinHex();
ParseDatatypeE();
ParseDecimal();
ParseI8();
ParseISO8601();
ParseNames::_createName();
ParseNames::_resolvePrefix();
ParseNames::_skipWhitespace();
ParseNames::_throwBadNameChar();
ParseNames::addQNamesToHashtable();
ParseNames::addQNamesToVector();
ParseNames::atomizeNameTest();
ParseNames::createNCNameThrow();
ParseNames::createPrefixThrow();
ParseNames::createQNameThrow();
ParseNames::nextNCName();
ParseNames::nextPrefix();
ParseNames::nextQName();
ParseNames::nextQNameTest();
ParseNames::parseNCName();
ParseNames::parseNCNameThrow();
ParseNames::parsePrefix();
ParseNames::parsePrefixListThrow();
ParseNames::parseQName();
ParseNames::parseQNameTest();
ParseNames::parseQNameThrow();
ParseNames::tryParseQName();
ParseNumber();
ParseNumeric();
ParseStreamBySaxReader();
ParseUuid();
PathDeclCache::PathDeclCache();
PathDeclCache::`scalar deleting destructor'();
PathNode::NodeTest::NodeTest();
PathNode::PathNode();
PathNode::_optimize();
PathNode::`scalar deleting destructor'();
PathNode::equals();
PathNode::getDataType();
PathNode::getNodeType();
PathNode::visitTree();
PeepholeOptimize::checkNoEscaping();
PeepholeOptimize::flush();
PeepholeOptimize::frag_e();
PeepholeOptimize::stringExpression();
PeepholeOptimize::textOut();
PeepholeOptimize::txtout();
PeepholeOptimize::txtout_s();
PosInfo::PosInfo();
PositionMatchNodeSet::PositionMatchNodeSet();
PositionMatchNodeSet::createCache();
PositionMatchNodeSet::getCount();
PositionMatchNodeSet::getIndex();
PositionMatchNodeSet::getNavigator();
PositionMatchNodeSet::moveToNext();
PositionMatchNodeSet::reset();
PositionalFixup::`scalar deleting destructor'();
PositionalFixup::doFixup();
PositiveIntAdd();
PreSibCacheNodeSet::PreSibCacheNodeSet();
PreSibNodeSet::createCache();
PreSibNodeSet::getCount();
PreSibNodeSet::getIndex();
PreSibNodeSet::getNavigator();
PreSibNodeSet::initIteration();
PreSibNodeSet::moveToNext();
PreSibNodeSet::reset();
PrecedingNodeSet::createCache();
PrecedingNodeSet::getCount();
PrecedingNodeSet::getIndex();
PrecedingNodeSet::getNavigator();
PrecedingNodeSet::initIteration();
PrecedingNodeSet::moveToNext();
PrecedingNodeSet::reset();
ProcessXmlSpace();
PropertyHelper::findProperty();
PropertyHelper::getBSTRProperty();
PropertyValueFactory::GetInstance();
PropertyValueFactory::PropertyValueFromString();
PropertyValueToHSTRING();
PropertyValueToString();
ProvideClassInfo::AddRef();
ProvideClassInfo::GetClassInfoW();
ProvideClassInfo::ProvideClassInfo();
ProvideClassInfo::QueryInterface();
ProvideClassInfo::Release();
QueryAttributes();
QueryEnterpriseIds();
QueryNodeList::AddRef();
QueryNodeList::QueryInterface();
QueryNodeList::QueryNodeList();
QueryNodeList::Release();
QueryNodeList::`scalar deleting destructor'();
QueryNodeList::`vector deleting destructor'();
QueryNodeList::createQueryNodeList();
QueryNodeList::enumGetIDispatch();
QueryNodeList::enumGetNext();
QueryNodeList::getDerivedNodeList();
QueryNodeList::get__newEnum();
QueryNodeList::get_item();
QueryNodeList::get_length();
QueryNodeList::nextNode();
QueryNodeList::populateNodeList();
QueryNodeList::reset();
QueryNodeListImpl::QIHelper();
QueryNodeListImpl::QueryNodeListImpl();
QueryNodeListImpl::enumGetIDispatch();
QueryNodeListImpl::enumGetMutex();
QueryNodeListImpl::enumGetNext();
QueryNodeListImpl::enumGetVersion();
QueryNodeListImpl::getIDOMNode();
QueryNodeListImpl::getLockedHandleList();
QueryNodeListImpl::get__newEnum();
QueryNodeListImpl::get_item();
QueryNodeListImpl::get_length();
QueryNodeListImpl::moveTo();
QueryNodeListImpl::moveToNode();
QueryNodeListImpl::nextNode();
QueryNodeListImpl::reset();
QueryNodeListImpl::returnLockedHandleList();
QueryNodeListImpl::~QueryNodeListImpl();
QuerySelection::AddRef();
QuerySelection::First();
QuerySelection::GetAt();
QuerySelection::GetRuntimeClassName();
QuerySelection::GetTrustLevel();
QuerySelection::IndexOf();
QuerySelection::Item();
QuerySelection::QueryInterface();
QuerySelection::QuerySelection();
QuerySelection::Release();
QuerySelection::_GetItem();
QuerySelection::_invoke();
QuerySelection::`scalar deleting destructor'();
QuerySelection::`vector deleting destructor'();
QuerySelection::clone();
QuerySelection::compileSelection();
QuerySelection::createQuerySelection();
QuerySelection::enumGetVersion();
QuerySelection::expressionResult();
QuerySelection::getDerivedNodeList();
QuerySelection::getProperty();
QuerySelection::getXParameters();
QuerySelection::get_Length();
QuerySelection::get_Size();
QuerySelection::get__newEnum();
QuerySelection::get_context();
QuerySelection::get_expr();
QuerySelection::get_item();
QuerySelection::get_length();
QuerySelection::matches();
QuerySelection::nextNode();
QuerySelection::peekNode();
QuerySelection::populateNodeList();
QuerySelection::put_expr();
QuerySelection::putref_context();
QuerySelection::removeAll();
QuerySelection::removeNext();
QuerySelection::reset();
QuerySelection::setProperty();
QuerySelection::~QuerySelection();
QueueSchema();
RTF::RTF();
RTF::`scalar deleting destructor'();
RTF::constructNavigator();
RTF::constructText();
RTF::copyOf();
RTF::getCollapsedText();
RTF::getNavigator();
RTF::getText();
RTF::newRTF();
RTFBuilder::New();
RTFBuilder::RTFBuilder();
RTFBuilder::`scalar deleting destructor'();
RTFBuilder::`vector deleting destructor'();
RTFBuilder::addTextNode();
RTFBuilder::addWhitespace();
RTFBuilder::beginChildren();
RTFBuilder::beginComment();
RTFBuilder::beginElement();
RTFBuilder::beginPI();
RTFBuilder::close();
RTFBuilder::closeOutput();
RTFBuilder::endComment();
RTFBuilder::endElement();
RTFBuilder::endPI();
RTFBuilder::initXStream();
RTFBuilder::onError();
RTFBuilder::open();
RTFBuilder::prefixMapping();
RTFBuilder::stringText();
RTFBuilder::wcharText();
RTFBuilder::~RTFBuilder();
RTFNodeSet::RTFNodeSet();
RawStack::__push();
RawStack::_pop();
RawStack::_popPeek();
RawStack::_push();
ReFormatNumber();
ReachableSchemas();
Reader::AddRef();
Reader::CheckCharEntity();
Reader::CheckEntity();
Reader::CheckNsAttribute();
Reader::ExpandAttributeValue();
Reader::FillAttributeValue();
Reader::FindAttribute();
Reader::GetContentHandler();
Reader::GetDeclHandler();
Reader::GetLexicalHandler();
Reader::GetTokenDeclInner();
Reader::GetTokenDeclLiteral();
Reader::GetTokenDeclOuter();
Reader::GraftAttDefs();
Reader::GraftNsAttDefsN();
Reader::HandleEntity();
Reader::HandleEntityEnd();
Reader::HashDupCheckAttributes();
Reader::Initialize();
Reader::NoColonAttributeValue();
Reader::NormalizeAttribute();
Reader::NormalizeEntityValue();
Reader::OnCallbackFailure();
Reader::Parse();
Reader::ParseAttributes();
Reader::ParseAttributesN();
Reader::ParseCdSect();
Reader::ParseCharRef();
Reader::ParseComment();
Reader::ParseCommentSubset();
Reader::ParseDeclAttlist();
Reader::ParseDeclAttlistDefault();
Reader::ParseDeclAttlistEnumeratedType();
Reader::ParseDeclAttlistType();
Reader::ParseDeclDoctype();
Reader::ParseDeclElement();
Reader::ParseDeclElementCp();
Reader::ParseDeclElementCpEnd();
Reader::ParseDeclEntity();
Reader::ParseDeclEntityValue();
Reader::ParseDeclExternalId();
Reader::ParseDeclNotation();
Reader::ParseDtdExternal();
Reader::ParseElement();
Reader::ParseElementN();
Reader::ParseElementND();
Reader::ParseEntityRef();
Reader::ParseEntityRefEnd();
Reader::ParseMisc();
Reader::ParsePi();
Reader::ParsePiSubset();
Reader::ParseSubsetExternal();
Reader::ParseSubsetIgnore();
Reader::ParseSubsetInternal();
Reader::ParseTextDecl();
Reader::ParseXmlDecl();
Reader::ProcessAttributes();
Reader::QueryInterface();
Reader::Reader();
Reader::Release();
Reader::Reset();
Reader::SetContentHandler();
Reader::SetDeclHandler();
Reader::SetLexicalHandler();
Reader::TrimAndCollapseAttributeValue();
Reader::`scalar deleting destructor'();
Reader::getBaseURL();
Reader::getColumnNumber();
Reader::getContentHandler();
Reader::getDTDHandler();
Reader::getEntityResolver();
Reader::getErrorHandler();
Reader::getFeature();
Reader::getGrafted();
Reader::getIndexFromName();
Reader::getIndexFromQName();
Reader::getLength();
Reader::getLineNumber();
Reader::getLocalName();
Reader::getName();
Reader::getProperty();
Reader::getPublicId();
Reader::getQName();
Reader::getSecureBaseURL();
Reader::getSystemId();
Reader::getToken();
Reader::getTokensLength();
Reader::getType();
Reader::getTypeFromName();
Reader::getTypeFromQName();
Reader::getURI();
Reader::getValue();
Reader::getValueFromName();
Reader::getValueFromQName();
Reader::parse();
Reader::parseURL();
Reader::popInputSources();
Reader::pushInputSource();
Reader::putBaseURL();
Reader::putContentHandler();
Reader::putDTDHandler();
Reader::putEntityResolver();
Reader::putErrorHandler();
Reader::putFeature();
Reader::putProperty();
Reader::putSecureBaseURL();
Reader::~Reader();
RefString::RefString();
RefString::`scalar deleting destructor'();
RefString::getClass();
Regex::IsMatch();
Regex::New();
Regex::Regex();
Regex::Run();
Regex::`scalar deleting destructor'();
Regex::`vector deleting destructor'();
Regex::classInit();
Regex::toString();
RegexBoyerMoore::Init();
RegexBoyerMoore::IsMatch();
RegexBoyerMoore::New();
RegexBoyerMoore::RegexBoyerMoore();
RegexBoyerMoore::Scan();
RegexBoyerMoore::`scalar deleting destructor'();
RegexBoyerMoore::compareString();
RegexBoyerMoore::getClass();
RegexBoyerMoore::toString();
RegexBoyerMoore::~RegexBoyerMoore();
RegexCapture::`scalar deleting destructor'();
RegexCapture::getClass();
RegexCapture::toString();
RegexCharClass::AddCategoryFromName();
RegexCharClass::AddCharClass();
RegexCharClass::AddLowercase();
RegexCharClass::AddLowercaseImpl();
RegexCharClass::AddRange();
RegexCharClass::AddSet();
RegexCharClass::Canonicalize();
RegexCharClass::CategoryUnion();
RegexCharClass::CharInCategory();
RegexCharClass::CharInCategoryGroup();
RegexCharClass::CharInSet();
RegexCharClass::CharInSetInternal();
RegexCharClass::CreateFromCategory();
RegexCharClass::Init();
RegexCharClass::NegateCategory();
RegexCharClass::New();
RegexCharClass::RegexCharClass();
RegexCharClass::SetFromChar();
RegexCharClass::SetFromProperty();
RegexCharClass::SetInverse();
RegexCharClass::SetSize();
RegexCharClass::SetUnion();
RegexCharClass::ToSet();
RegexCharClass::`scalar deleting destructor'();
RegexCharClass::classExit();
RegexCharClass::classInit();
RegexCharClass::getClass();
RegexCode::Init();
RegexCode::New();
RegexCode::OpcodeBacktracks();
RegexCode::RegexCode();
RegexCode::`scalar deleting destructor'();
RegexCode::finalize();
RegexCode::getClass();
RegexFC::AddFC();
RegexFC::New();
RegexFC::RegexFC();
RegexFC::`scalar deleting destructor'();
RegexFC::getClass();
RegexFCD::Anchors();
RegexFCD::CalculateFC();
RegexFCD::FirstChars();
RegexFCD::Init();
RegexFCD::New();
RegexFCD::PopFC();
RegexFCD::Prefix();
RegexFCD::PushFC();
RegexFCD::PushInt();
RegexFCD::RegexFCD();
RegexFCD::RegexFCFromRegexTree();
RegexFCD::`scalar deleting destructor'();
RegexFCD::finalize();
RegexFCD::getClass();
RegexInterpreter::Advance();
RegexInterpreter::Backtrack();
RegexInterpreter::FindFirstChar();
RegexInterpreter::Forwardcharnext();
RegexInterpreter::Forwardchars();
RegexInterpreter::Go();
RegexInterpreter::Goto();
RegexInterpreter::InitTrackCount();
RegexInterpreter::Refmatch();
RegexInterpreter::Stack();
RegexInterpreter::Stringmatch();
RegexInterpreter::Track();
RegexInterpreter::Track2();
RegexInterpreter::`scalar deleting destructor'();
RegexInterpreter::newRegexInterpreter();
RegexInterpreter::~RegexInterpreter();
RegexMatch::AddMatch();
RegexMatch::BalanceMatch();
RegexMatch::Init();
RegexMatch::IsMatched();
RegexMatch::MatchIndex();
RegexMatch::MatchLength();
RegexMatch::New();
RegexMatch::RegexMatch();
RegexMatch::RemoveMatch();
RegexMatch::Reset();
RegexMatch::Tidy();
RegexMatch::`scalar deleting destructor'();
RegexMatch::getClass();
RegexMatch::~RegexMatch();
RegexMatchSparse::New();
RegexMatchSparse::RegexMatchSparse();
RegexMatchSparse::`scalar deleting destructor'();
RegexMatchSparse::getClass();
RegexNode::AddChild();
RegexNode::MakeQuantifier();
RegexNode::New();
RegexNode::ReduceAlternation();
RegexNode::ReduceConcatenation();
RegexNode::ReduceRep();
RegexNode::ReduceSet();
RegexNode::ReverseLeft();
RegexNode::StripEnation();
RegexNode::`scalar deleting destructor'();
RegexParser::AddAlternate();
RegexParser::AddConcatenate();
RegexParser::AddGroup();
RegexParser::AddUnitOne();
RegexParser::AddUnitSet();
RegexParser::AssignNameSlots();
RegexParser::CompareNumlist();
RegexParser::CountCaptures();
RegexParser::IsCaptureSlot();
RegexParser::IsTrueQuantifier();
RegexParser::NoteCaptureName();
RegexParser::NoteCaptureSlot();
RegexParser::Parse();
RegexParser::ParseProperty();
RegexParser::PopOptions();
RegexParser::PushOptions();
RegexParser::RegexParser();
RegexParser::RightChar();
RegexParser::ScanBackslash();
RegexParser::ScanBasicBackslash();
RegexParser::ScanBlank();
RegexParser::ScanCapname();
RegexParser::ScanCharClass();
RegexParser::ScanCharEscape();
RegexParser::ScanControl();
RegexParser::ScanDecimal();
RegexParser::ScanGroupOpen();
RegexParser::ScanHex();
RegexParser::ScanOctal();
RegexParser::ScanOptions();
RegexParser::ScanRegex();
RegexParser::StartGroup();
RegexParser::TypeFromCode();
RegexParser::`scalar deleting destructor'();
RegexParser::throwError();
RegexPrefix::New();
RegexPrefix::`scalar deleting destructor'();
RegexPrefix::getClass();
RegexRunner::Capture();
RegexRunner::Crawl();
RegexRunner::DoubleCrawl();
RegexRunner::DoubleStack();
RegexRunner::DoubleTrack();
RegexRunner::EnsureStorage();
RegexRunner::FindFirstChar();
RegexRunner::Go();
RegexRunner::InitMatch();
RegexRunner::InitTrackCount();
RegexRunner::IsBoundary();
RegexRunner::Scan();
RegexRunner::TransferCapture();
RegexRunner::Uncapture();
RegexRunner::`scalar deleting destructor'();
RegexRunner::~RegexRunner();
RegexTree::RegexTree();
RegexTree::~RegexTree();
RegexWriter::Emit();
RegexWriter::EmitFragment();
RegexWriter::Init();
RegexWriter::MapCapnum();
RegexWriter::New();
RegexWriter::PopInt();
RegexWriter::PushInt();
RegexWriter::RegexCodeFromRegexTree();
RegexWriter::RegexWriter();
RegexWriter::StringCode();
RegexWriter::Write();
RegexWriter::`scalar deleting destructor'();
RegexWriter::getClass();
RegisterInterfaceInGlobal();
RegisterStaticUnknown();
Registry::readMultipleSettings();
ReleaseAllUnknowns();
ReleaseCPNODEList();
ReportSwallowedFatalException();
Resources::FormatMessageHelper();
Resources::FormatSystemMessage();
Resources::GetUserResource();
Resources::GetVersion();
Resources::SafeFormatMessage();
Resources::classInit();
Resources::formatMessage();
RevokeInterfaceFromGlobal();
RoVariant::Accessor::GetString();
RoVariant::Wrap();
RoVariant::~RoVariant();
RuntimeValidator::RuntimeValidator();
RuntimeValidator::`scalar deleting destructor'();
RuntimeValidator::buildAttributes();
RuntimeValidator::handleException();
RuntimeValidator::validateAttribute();
RuntimeValidator::validateChildNodes();
RuntimeValidator::validateElement();
RuntimeValidator::validateEntity();
RuntimeValidator::validateNode();
RuntimeValidator::validateTree();
RuntimeValidator::~RuntimeValidator();
Runtime_exit();
Runtime_exit$filt$0();
Runtime_init();
Runtime_init$filt$0();
SAXAttributes::AddRef();
SAXAttributes::GetIDsOfNames();
SAXAttributes::GetTypeInfo();
SAXAttributes::GetTypeInfoCount();
SAXAttributes::Init();
SAXAttributes::Invoke();
SAXAttributes::QueryInterface();
SAXAttributes::Release();
SAXAttributes::SAXAttributes();
SAXAttributes::_invoke();
SAXAttributes::`scalar deleting destructor'();
SAXAttributes::`vector deleting destructor'();
SAXAttributes::addAttribute();
SAXAttributes::addAttributeFromIndex();
SAXAttributes::allocWCHAR();
SAXAttributes::clear();
SAXAttributes::ensureCapacity();
SAXAttributes::equals();
SAXAttributes::getIndexFromName();
SAXAttributes::getIndexFromQName();
SAXAttributes::getLength();
SAXAttributes::getLocalName();
SAXAttributes::getName();
SAXAttributes::getQName();
SAXAttributes::getRootControl();
SAXAttributes::getType();
SAXAttributes::getTypeFromName();
SAXAttributes::getTypeFromQName();
SAXAttributes::getURI();
SAXAttributes::getValue();
SAXAttributes::getValueFromName();
SAXAttributes::getValueFromQName();
SAXAttributes::getWCHAR();
SAXAttributes::newSAXAttributes();
SAXAttributes::removeAttribute();
SAXAttributes::setAttribute();
SAXAttributes::setAttributes();
SAXAttributes::setLocalName();
SAXAttributes::setQName();
SAXAttributes::setType();
SAXAttributes::setURI();
SAXAttributes::setValue();
SAXAttributes::~SAXAttributes();
SAXAttributesAdapter::SAXAttributesAdapter();
SAXAttributesAdapter::nextAttribute();
SAXAttributesAdapter::reset();
SAXAttributesAdapter::~SAXAttributesAdapter();
SAXBuilder::AddRef();
SAXBuilder::NewAttribute();
SAXBuilder::NewEntity();
SAXBuilder::QueryInterface();
SAXBuilder::Release();
SAXBuilder::SAXBuilder();
SAXBuilder::_characters();
SAXBuilder::_endElement();
SAXBuilder::_ignorableWhitespace();
SAXBuilder::_startElement();
SAXBuilder::`scalar deleting destructor'();
SAXBuilder::abort();
SAXBuilder::attributeDecl();
SAXBuilder::characters();
SAXBuilder::comment();
SAXBuilder::elementDecl();
SAXBuilder::endCDATA();
SAXBuilder::endDTD();
SAXBuilder::endDocument();
SAXBuilder::endElement();
SAXBuilder::endEmptyElement();
SAXBuilder::endEntity();
SAXBuilder::endPrefixMapping();
SAXBuilder::error();
SAXBuilder::externalEntityDecl();
SAXBuilder::fatalError();
SAXBuilder::flush();
SAXBuilder::getLineNumber();
SAXBuilder::getLinePosition();
SAXBuilder::handleException();
SAXBuilder::ignorableWarning();
SAXBuilder::ignorableWhitespace();
SAXBuilder::internalEntityDecl();
SAXBuilder::notationDecl();
SAXBuilder::processingInstruction();
SAXBuilder::putDocumentLocator();
SAXBuilder::reset();
SAXBuilder::skippedEntity();
SAXBuilder::startCDATA();
SAXBuilder::startDTD();
SAXBuilder::startDocument();
SAXBuilder::startElement();
SAXBuilder::startEmptyElement();
SAXBuilder::startEntity();
SAXBuilder::startPrefixMapping();
SAXBuilder::unparsedEntityDecl();
SAXBuilder::whitespace();
SAXBuilder::~SAXBuilder();
SAXCheckedBuilder::CheckAllowDecl();
SAXCheckedBuilder::ExpectedEndEvent();
SAXCheckedBuilder::New();
SAXCheckedBuilder::SAXCheckedBuilder();
SAXCheckedBuilder::_abort_();
SAXCheckedBuilder::`scalar deleting destructor'();
SAXCheckedBuilder::attributeDecl();
SAXCheckedBuilder::characters();
SAXCheckedBuilder::comment();
SAXCheckedBuilder::elementDecl();
SAXCheckedBuilder::endCDATA();
SAXCheckedBuilder::endDTD();
SAXCheckedBuilder::endDocument();
SAXCheckedBuilder::endElement();
SAXCheckedBuilder::endEmptyElement();
SAXCheckedBuilder::endEntity();
SAXCheckedBuilder::endPrefixMapping();
SAXCheckedBuilder::externalEntityDecl();
SAXCheckedBuilder::ignorableWhitespace();
SAXCheckedBuilder::internalEntityDecl();
SAXCheckedBuilder::notationDecl();
SAXCheckedBuilder::processingInstruction();
SAXCheckedBuilder::putDocumentLocator();
SAXCheckedBuilder::skippedEntity();
SAXCheckedBuilder::startCDATA();
SAXCheckedBuilder::startDTD();
SAXCheckedBuilder::startDocument();
SAXCheckedBuilder::startElement();
SAXCheckedBuilder::startEmptyElement();
SAXCheckedBuilder::startEntity();
SAXCheckedBuilder::startPrefixMapping();
SAXCheckedBuilder::unparsedEntityDecl();
SAXCheckedBuilder::whitespace();
SAXHTMLWriter::Init();
SAXHTMLWriter::SAXHTMLWriter();
SAXHTMLWriter::`scalar deleting destructor'();
SAXHTMLWriter::attributeDecl();
SAXHTMLWriter::characters();
SAXHTMLWriter::comment();
SAXHTMLWriter::elementDecl();
SAXHTMLWriter::endCDATA();
SAXHTMLWriter::endDTD();
SAXHTMLWriter::endElement();
SAXHTMLWriter::externalEntityDecl();
SAXHTMLWriter::internalEntityDecl();
SAXHTMLWriter::newOutputHelper();
SAXHTMLWriter::notationDecl();
SAXHTMLWriter::processingInstruction();
SAXHTMLWriter::resolveState();
SAXHTMLWriter::startCDATA();
SAXHTMLWriter::startDTD();
SAXHTMLWriter::startDocument();
SAXHTMLWriter::startElement();
SAXHTMLWriter::unparsedEntityDecl();
SAXHandlerDelegate::AddRef();
SAXHandlerDelegate::NonDelegatingQueryInterface();
SAXHandlerDelegate::NonDelegatingRelease();
SAXHandlerDelegate::QueryInterface();
SAXHandlerDelegate::Release();
SAXHandlerDelegate::`scalar deleting destructor'();
SAXReader::AddRef();
SAXReader::CreateDTSReader();
SAXReader::CreateSAXSchemaProxy();
SAXReader::NondelegatingQueryInterface();
SAXReader::QueryInterface();
SAXReader::Release();
SAXReader::SAXReader();
SAXReader::SetInterfaceSafetyOptions();
SAXReader::SetSite();
SAXReader::`scalar deleting destructor'();
SAXReader::`vector deleting destructor'();
SAXReader::getBaseURL();
SAXReader::getContentHandler();
SAXReader::getDTDHandler();
SAXReader::getEntityResolver();
SAXReader::getErrorHandler();
SAXReader::getFeature();
SAXReader::getProperty();
SAXReader::getRootControl();
SAXReader::getSecureBaseURL();
SAXReader::newSAXReader();
SAXReader::parse();
SAXReader::parseURL();
SAXReader::putBaseURL();
SAXReader::putContentHandler();
SAXReader::putDTDHandler();
SAXReader::putEntityResolver();
SAXReader::putErrorHandler();
SAXReader::putFeature();
SAXReader::putProperty();
SAXReader::putSecureBaseURL();
SAXReader::~SAXReader();
SAXReaderWrapper::AddRef();
SAXReaderWrapper::Init();
SAXReaderWrapper::InterfaceSupportsErrorInfo();
SAXReaderWrapper::QueryInterface();
SAXReaderWrapper::Release();
SAXReaderWrapper::_invoke();
SAXReaderWrapper::`scalar deleting destructor'();
SAXReaderWrapper::`vector deleting destructor'();
SAXReaderWrapper::getFeature();
SAXReaderWrapper::getProperty();
SAXReaderWrapper::get_baseURL();
SAXReaderWrapper::get_contentHandler();
SAXReaderWrapper::get_dtdHandler();
SAXReaderWrapper::get_entityResolver();
SAXReaderWrapper::get_errorHandler();
SAXReaderWrapper::get_secureBaseURL();
SAXReaderWrapper::newSAXReaderWrapper();
SAXReaderWrapper::parse();
SAXReaderWrapper::parseURL();
SAXReaderWrapper::putFeature();
SAXReaderWrapper::putProperty();
SAXReaderWrapper::put_baseURL();
SAXReaderWrapper::put_secureBaseURL();
SAXReaderWrapper::putref_contentHandler();
SAXReaderWrapper::putref_dtdHandler();
SAXReaderWrapper::putref_entityResolver();
SAXReaderWrapper::putref_errorHandler();
SAXReaderWrapper::setErrorInfo();
SAXReaderWrapper::~SAXReaderWrapper();
SAXSchemaProxy::AddRef();
SAXSchemaProxy::EnsureNSDecl();
SAXSchemaProxy::GetIndexFromName();
SAXSchemaProxy::GetIndexFromQName();
SAXSchemaProxy::GetSchemaCache();
SAXSchemaProxy::GetSchemaDeclHandler();
SAXSchemaProxy::HandleException();
SAXSchemaProxy::QueryInterface();
SAXSchemaProxy::Release();
SAXSchemaProxy::SAXSchemaProxy();
SAXSchemaProxy::SetSchemaCache();
SAXSchemaProxy::`scalar deleting destructor'();
SAXSchemaProxy::`vector deleting destructor'();
SAXSchemaProxy::attributeDecl();
SAXSchemaProxy::characters();
SAXSchemaProxy::elementDecl();
SAXSchemaProxy::endDocument();
SAXSchemaProxy::endElement();
SAXSchemaProxy::endEmptyElement();
SAXSchemaProxy::endPrefixMapping();
SAXSchemaProxy::error();
SAXSchemaProxy::externalEntityDecl();
SAXSchemaProxy::fatalError();
SAXSchemaProxy::getGraftedValueAt();
SAXSchemaProxy::getIndexFromName();
SAXSchemaProxy::getIndexFromQName();
SAXSchemaProxy::getLength();
SAXSchemaProxy::getLineNumber();
SAXSchemaProxy::getLinePosition();
SAXSchemaProxy::getLocalName();
SAXSchemaProxy::getName();
SAXSchemaProxy::getQName();
SAXSchemaProxy::getText();
SAXSchemaProxy::getType();
SAXSchemaProxy::getTypeFromName();
SAXSchemaProxy::getTypeFromQName();
SAXSchemaProxy::getURI();
SAXSchemaProxy::getValue();
SAXSchemaProxy::getValueFromName();
SAXSchemaProxy::getValueFromQName();
SAXSchemaProxy::ignorableWarning();
SAXSchemaProxy::ignorableWhitespace();
SAXSchemaProxy::internalEntityDecl();
SAXSchemaProxy::newSAXSchemaProxy();
SAXSchemaProxy::notationDecl();
SAXSchemaProxy::processingInstruction();
SAXSchemaProxy::putDocumentLocator();
SAXSchemaProxy::skippedEntity();
SAXSchemaProxy::startDocument();
SAXSchemaProxy::startElement();
SAXSchemaProxy::startEmptyElement();
SAXSchemaProxy::startPrefixMapping();
SAXSchemaProxy::unparsedEntityDecl();
SAXSchemaProxy::whitespace();
SAXSchemaProxy::~SAXSchemaProxy();
SAXWriter::Init();
SAXWriter::SAXWriter();
SAXWriter::`scalar deleting destructor'();
SAXWriter::attributeDecl();
SAXWriter::characters();
SAXWriter::comment();
SAXWriter::elementDecl();
SAXWriter::endCDATA();
SAXWriter::endDTD();
SAXWriter::endDocument();
SAXWriter::endElement();
SAXWriter::endEntity();
SAXWriter::endPrefixMapping();
SAXWriter::error();
SAXWriter::externalEntityDecl();
SAXWriter::fatalError();
SAXWriter::flush();
SAXWriter::ignorableWarning();
SAXWriter::ignorableWhitespace();
SAXWriter::internalEntityDecl();
SAXWriter::newOutputHelper();
SAXWriter::notationDecl();
SAXWriter::processingInstruction();
SAXWriter::putDocumentLocator();
SAXWriter::resolveState();
SAXWriter::setEncoding();
SAXWriter::setStream();
SAXWriter::skippedEntity();
SAXWriter::startCDATA();
SAXWriter::startDTD();
SAXWriter::startDocument();
SAXWriter::startElement();
SAXWriter::startEntity();
SAXWriter::startPrefixMapping();
SAXWriter::unparsedEntityDecl();
SAXWriter::writeAttributes();
SAXWriter::writeBOM();
SAXWriter::writeDTDQuoted();
SAXWriter::writeError();
SAXWriter::writeExternalID();
SAXWriter::xout_addIndent();
SAXWriter::xout_attribute();
SAXWriter::xout_beginCData();
SAXWriter::xout_beginElement();
SAXWriter::xout_beginElementChildren();
SAXWriter::xout_cdataText();
SAXWriter::xout_comment();
SAXWriter::xout_endCData();
SAXWriter::xout_endElement();
SAXWriter::xout_endElementNoChildren();
SAXWriter::xout_flush();
SAXWriter::xout_forceNewline();
SAXWriter::xout_getIndent();
SAXWriter::xout_pcdataText();
SAXWriter::xout_pcdataTextNoEntities();
SAXWriter::xout_pi();
SAXWriter::xout_setEncoding();
SAXWriter::xout_setOutputStyle();
SAXWriter::xout_setStream();
SAXWriter::xout_write();
SAXWriter::xout_writeDecimal();
SAXWriter::xout_writeNewline();
SAXWriter::xout_xmlDecl();
SAXWriter::~SAXWriter();
SHA2::Hash();
SHA2::SHA2();
SHA2::~SHA2();
SHProcessMessagesUntilEventsEx();
SXActiveQuery::SXActiveQuery();
SXActiveQuery::attribute();
SXActiveQuery::endElement();
SXActiveQuery::init();
SXActiveQuery::startElement();
SXActiveQuery::~SXActiveQuery();
SXPQBuilder::absoluteQuery();
SXPQBuilder::ancestorQuery();
SXPQBuilder::attributeQuery();
SXPQBuilder::booleanLiteral();
SXPQBuilder::booleanOperator();
SXPQBuilder::childQuery();
SXPQBuilder::compareOperator();
SXPQBuilder::concatOperator();
SXPQBuilder::descendantQuery();
SXPQBuilder::filterOperator();
SXPQBuilder::followingQuery();
SXPQBuilder::followingSiblingQuery();
SXPQBuilder::functionCall();
SXPQBuilder::groupOperator();
SXPQBuilder::makeURI();
SXPQBuilder::namespaceQuery();
SXPQBuilder::newPathNode();
SXPQBuilder::numericLiteral();
SXPQBuilder::numericOperator();
SXPQBuilder::onError();
SXPQBuilder::parentQuery();
SXPQBuilder::precedingQuery();
SXPQBuilder::precedingSiblingQuery();
SXPQBuilder::selfQuery();
SXPQBuilder::sortOperator();
SXPQBuilder::stringLiteral();
SXPQBuilder::toOperand();
SXPQBuilder::toQuery();
SXPQBuilder::unionOperator();
SXPQBuilder::variableRef();
SXPQCompiler::New();
SXPQCompiler::`scalar deleting destructor'();
SXPQCompiler::`vector deleting destructor'();
SXPQCompiler::compileQuery();
SXPQuery::SXPQuery();
SXPQuery::`scalar deleting destructor'();
SXPQuery::getAllocator();
SXPQuery::isField();
SXPQuery::onError();
SXPQuery::setQuery();
SXPQuery::toString();
SXPathNode::NodeTest::equal();
SXPathNode::SXPathNode();
SXPathNode::_optimize();
SXPathNode::`scalar deleting destructor'();
SXPathNode::getNodeType();
SXPathUnion::SXPathUnion();
SXPathUnion::_optimize();
SXPathUnion::`scalar deleting destructor'();
SXPathUnion::getNodeType();
SXPathUnion::toUnion();
SXQueryPath::SXQueryPath();
SXQueryPath::`scalar deleting destructor'();
SXWalker::moveToChild();
SXWalkerStack::SXWalkerStack();
SXWalkerStack::moveToChild();
SXWalkerStack::moveToParent();
SXWalkerStack::push();
SXWalkerStack::~SXWalkerStack();
SafeArrayInputSource::Read();
SafeArrayInputSource::SafeArrayInputSource();
SafeArrayInputSource::`scalar deleting destructor'();
SafeInitializeCriticalSection();
SaveDocument();
SaveExceptionFilter();
SaveWorkItem::AddRef();
SaveWorkItem::DoWork();
SaveWorkItem::FireCompletion();
SaveWorkItem::GetIids();
SaveWorkItem::GetResults();
SaveWorkItem::GetRuntimeClassName();
SaveWorkItem::GetTrustLevel();
SaveWorkItem::OnCancel();
SaveWorkItem::QueryInterface();
SaveWorkItem::Release();
SaveWorkItem::RuntimeClassInitialize();
SaveWorkItem::SaveWorkItem();
SaveWorkItem::`scalar deleting destructor'();
SaveWorkItem::`vector deleting destructor'();
SaveWorkItem::~SaveWorkItem();
Scanner::CheckAlpha();
Scanner::CheckCheck();
Scanner::CheckEndOfInput();
Scanner::CheckOmega();
Scanner::CheckPsi();
Scanner::CheckWhitespace();
Scanner::GetTokenDeclInner();
Scanner::PopInputSource();
Scanner::PushInputSource();
Scanner::ScanAnd();
Scanner::ScanAttribute();
Scanner::ScanAttributeEqual();
Scanner::ScanAttributeValue();
Scanner::ScanCarriageReturn();
Scanner::ScanCdSect();
Scanner::ScanCdSectData();
Scanner::ScanCdSectEnd();
Scanner::ScanCharRef();
Scanner::ScanComment();
Scanner::ScanCommentData();
Scanner::ScanCommentEnd();
Scanner::ScanCondSect1();
Scanner::ScanCondSect2();
Scanner::ScanContent();
Scanner::ScanDeclAttlist();
Scanner::ScanDeclAttlist1();
Scanner::ScanDeclAttlist2();
Scanner::ScanDeclAttlist3();
Scanner::ScanDeclAttlist4();
Scanner::ScanDeclAttlist5();
Scanner::ScanDeclAttlist6();
Scanner::ScanDeclAttlist7();
Scanner::ScanDeclDoctype();
Scanner::ScanDeclDoctype1();
Scanner::ScanDeclDoctype2();
Scanner::ScanDeclDoctype3();
Scanner::ScanDeclDoctype4();
Scanner::ScanDeclElement();
Scanner::ScanDeclElement1();
Scanner::ScanDeclElement2();
Scanner::ScanDeclElement3();
Scanner::ScanDeclEnd();
Scanner::ScanDeclEntity();
Scanner::ScanDeclEntity1();
Scanner::ScanDeclEntity2();
Scanner::ScanDeclEntity3();
Scanner::ScanDeclName();
Scanner::ScanDeclNameQualified();
Scanner::ScanDeclNotation();
Scanner::ScanDeclNotation1();
Scanner::ScanDeclNotation2();
Scanner::ScanEntityValue();
Scanner::ScanIgnoreSect();
Scanner::ScanLessThan();
Scanner::ScanLiteral();
Scanner::ScanLiteralValue();
Scanner::ScanNameN();
Scanner::ScanNameNN();
Scanner::ScanNameQualifiedN();
Scanner::ScanNdataDecl();
Scanner::ScanNmtoken();
Scanner::ScanPercentEntityValue();
Scanner::ScanPercentSubset();
Scanner::ScanPi();
Scanner::ScanPiData();
Scanner::ScanPiEnd();
Scanner::ScanPiWhitespace();
Scanner::ScanPublicId();
Scanner::ScanQuoteEnd();
Scanner::ScanRightBracketSubset();
Scanner::ScanSpace();
Scanner::ScanSubset();
Scanner::ScanSystemId();
Scanner::ScanXmlDecl();
Scanner::ScanXmlDeclAttribute();
Scanner::SetEncoding();
Schema::LoadIncluded();
Schema::New();
Schema::Schema();
Schema::SchemaID();
Schema::`scalar deleting destructor'();
Schema::buildXMLSchema();
Schema::getClass();
Schema::getSOMItemType();
Schema::getTargetNamespace();
Schema::init();
Schema::loadSchema();
Schema::process();
Schema::setDocument();
Schema::~Schema();
SchemaAnnotated::_createInstance();
SchemaAnnotated::`scalar deleting destructor'();
SchemaAnnotated::clone();
SchemaAnnotated::getClass();
SchemaAnnotated::isRef();
SchemaAnnotated::~SchemaAnnotated();
SchemaAnnotation::SchemaAnnotation();
SchemaAnnotation::`scalar deleting destructor'();
SchemaAnnotation::getSOMItemType();
SchemaAny::New();
SchemaAny::`scalar deleting destructor'();
SchemaAny::getSOMItemType();
SchemaAny::isAny();
SchemaAnyAttribute::Intersection();
SchemaAnyAttribute::New();
SchemaAnyAttribute::SchemaAnyAttribute();
SchemaAnyAttribute::Union();
SchemaAnyAttribute::`scalar deleting destructor'();
SchemaAnyAttribute::getSOMItemType();
SchemaAnyAttribute::resetWrapper();
SchemaAttribute::New();
SchemaAttribute::SchemaAttribute();
SchemaAttribute::`scalar deleting destructor'();
SchemaAttribute::getSOMItemType();
SchemaAttribute::~SchemaAttribute();
SchemaAttributeGroup::New();
SchemaAttributeGroup::SchemaAttributeGroup();
SchemaAttributeGroup::`scalar deleting destructor'();
SchemaAttributeGroup::getSOMItemType();
SchemaAttributeGroupRef::SchemaAttributeGroupRef();
SchemaAttributeGroupRef::`scalar deleting destructor'();
SchemaCache::InterfaceSupportsErrorInfo();
SchemaCache::Invoke();
SchemaCache::QueryInterface();
SchemaCache::SchemaCache();
SchemaCache::_addWorker();
SchemaCache::_invoke();
SchemaCache::`scalar deleting destructor'();
SchemaCache::`vector deleting destructor'();
SchemaCache::add();
SchemaCache::addCollection();
SchemaCache::copyTo();
SchemaCache::get();
SchemaCache::getDeclaration();
SchemaCache::getItem();
SchemaCache::getSchema();
SchemaCache::get_length();
SchemaCache::get_namespaceURI();
SchemaCache::get_validateOnLoad();
SchemaCache::newSchemaCache();
SchemaCache::put_validateOnLoad();
SchemaCache::remove();
SchemaCache::validate();
SchemaCache::~SchemaCache();
SchemaCacheInfo::addCachedSchema();
SchemaCacheInfo::addCachedSchemas();
SchemaCacheInfo::checkAddAllowed();
SchemaCacheInfo::compile();
SchemaCacheInfo::getSubstitutionGroup();
SchemaCacheInfo::getSubstitutionGroups();
SchemaCacheInfo::init();
SchemaCacheInfo::merge();
SchemaCacheInfo::validate();
SchemaCacheInfo::~SchemaCacheInfo();
SchemaCompiler::AddXPathToError();
SchemaCompiler::CalculateEffectiveTotalRange();
SchemaCompiler::CannonicalizeAll();
SchemaCompiler::CannonicalizeChoice();
SchemaCompiler::CannonicalizeGroup();
SchemaCompiler::CannonicalizeGroupRef();
SchemaCompiler::CannonicalizeParticle();
SchemaCompiler::CannonicalizeSequence();
SchemaCompiler::CheckAttributeDerivations();
SchemaCompiler::CheckForPointlessSubstGroups();
SchemaCompiler::CheckKeyref();
SchemaCompiler::CheckParticleDerivation();
SchemaCompiler::CheckReference();
SchemaCompiler::CheckRefinedComplexType();
SchemaCompiler::CheckRefinedGroup();
SchemaCompiler::CheckRefinedSimpleType();
SchemaCompiler::CheckSubstitutionGroup();
SchemaCompiler::CheckTable();
SchemaCompiler::Compile();
SchemaCompiler::CompileAnyAttributeIntersection();
SchemaCompiler::CompileAttribute();
SchemaCompiler::CompileAttributeGroup();
SchemaCompiler::CompileComplexContent();
SchemaCompiler::CompileComplexContentExtension();
SchemaCompiler::CompileComplexContentRestriction();
SchemaCompiler::CompileComplexType();
SchemaCompiler::CompileComplexTypeElements();
SchemaCompiler::CompileContentModel();
SchemaCompiler::CompileElement();
SchemaCompiler::CompileGroup();
SchemaCompiler::CompileIdentityConstraint();
SchemaCompiler::CompileLocalAttributes();
SchemaCompiler::CompileParticleElements();
SchemaCompiler::CompileSimpleContentExtension();
SchemaCompiler::CompileSimpleContentRestriction();
SchemaCompiler::CompileSimpleType();
SchemaCompiler::CopyAnnotatedProperties();
SchemaCompiler::CountGroupSelfReference();
SchemaCompiler::GetAnySchemaType();
SchemaCompiler::GetComplexType();
SchemaCompiler::GetDataType();
SchemaCompiler::GetMappingParticle();
SchemaCompiler::GetSchemaContentType();
SchemaCompiler::GetSimpleType();
SchemaCompiler::IsAnyFromAny();
SchemaCompiler::IsElementFromAny();
SchemaCompiler::IsElementFromGroupBase();
SchemaCompiler::IsGroupBaseFromAny();
SchemaCompiler::IsGroupBaseFromGroupBase();
SchemaCompiler::IsParticleEmptiable();
SchemaCompiler::IsSequenceFromAll();
SchemaCompiler::IsSequenceFromChoice();
SchemaCompiler::IsValidOccurrenceRangeRestriction();
SchemaCompiler::IsValidRestriction();
SchemaCompiler::MarkSubstitutionGroupHeads();
SchemaCompiler::New();
SchemaCompiler::OverlayXMLSchema();
SchemaCompiler::Preprocess();
SchemaCompiler::PreprocessAttribute();
SchemaCompiler::PreprocessAttributeContent();
SchemaCompiler::PreprocessAttributeGroup();
SchemaCompiler::PreprocessAttributes();
SchemaCompiler::PreprocessComplexType();
SchemaCompiler::PreprocessElement();
SchemaCompiler::PreprocessElementContent();
SchemaCompiler::PreprocessGroup();
SchemaCompiler::PreprocessLocalAttribute();
SchemaCompiler::PreprocessLocalElement();
SchemaCompiler::PreprocessNotation();
SchemaCompiler::PreprocessParticle();
SchemaCompiler::PreprocessRedefine();
SchemaCompiler::PreprocessRedefines();
SchemaCompiler::PreprocessSimpleType();
SchemaCompiler::SchemaCompiler();
SchemaCompiler::StripPointlessParticle();
SchemaCompiler::ValidateIdAttribute();
SchemaCompiler::_Preprocess();
SchemaCompiler::`scalar deleting destructor'();
SchemaCompiler::`vector deleting destructor'();
SchemaCompiler::getAttributeGroup();
SchemaCompiler::getElement();
SchemaCompiler::getGroup();
SchemaCompiler::getType();
SchemaCompiler::init();
SchemaCompiler::newElementDecl();
SchemaCompiler::setParametersFor();
SchemaCompiler::storeError();
SchemaCompiler::throwError();
SchemaCompiler::~SchemaCompiler();
SchemaComplexContent::`scalar deleting destructor'();
SchemaComplexContent::isComplexContent();
SchemaComplexContentExtension::SchemaComplexContentExtension();
SchemaComplexContentExtension::`scalar deleting destructor'();
SchemaComplexContentExtension::getContentType();
SchemaComplexContentRestriction::`scalar deleting destructor'();
SchemaComplexContentRestriction::getContentType();
SchemaComplexType::IsDerivedFromBaseType();
SchemaComplexType::New();
SchemaComplexType::SchemaComplexType();
SchemaComplexType::`scalar deleting destructor'();
SchemaComplexType::classInit();
SchemaComplexType::getSOMItemType();
SchemaComplexTypeContent::SchemaComplexTypeContent();
SchemaComplexTypeContent::`scalar deleting destructor'();
SchemaComplexTypeContent::~SchemaComplexTypeContent();
SchemaDatatype::CheckMaxExValue();
SchemaDatatype::CheckMaxIncValue();
SchemaDatatype::CheckMinExValue();
SchemaDatatype::CheckMinIncValue();
SchemaDatatype::CheckPattern();
SchemaDatatype::CheckTrueZero();
SchemaDatatype::ConstrainAtomicValue();
SchemaDatatype::ConstrainList();
SchemaDatatype::ConstructRestriction();
SchemaDatatype::DeriveByList();
SchemaDatatype::DeriveByRestriction();
SchemaDatatype::DeriveByUnion();
SchemaDatatype::FromCompare();
SchemaDatatype::FromTypeName();
SchemaDatatype::IsDerivedFromBaseType();
SchemaDatatype::ParseNCName();
SchemaDatatype::ParseNMToken();
SchemaDatatype::ParseName();
SchemaDatatype::ParseQName();
SchemaDatatype::ParseValue();
SchemaDatatype::ParseValueWithoutRestriction();
SchemaDatatype::Preprocess();
SchemaDatatype::RestrictionFacets::RestrictionFacets();
SchemaDatatype::RestrictionFacets::`scalar deleting destructor'();
SchemaDatatype::RestrictionFacets::~RestrictionFacets();
SchemaDatatype::VerifySchemaValid();
SchemaDatatype::classExit();
SchemaDatatype::classInit();
SchemaDatatype::getDatatype();
SchemaDatatype::getSOMItemType();
SchemaDatatype::getTokenizedType();
SchemaDatatype::getTypeName();
SchemaDatatype::~SchemaDatatype();
SchemaElement::SchemaElement();
SchemaElement::_createInstance();
SchemaElement::`scalar deleting destructor'();
SchemaElement::clone();
SchemaElement::getClass();
SchemaElement::getConstraints();
SchemaElement::getHasConstraints();
SchemaElement::getQualifiedName();
SchemaElement::getSOMItemType();
SchemaElement::toString();
SchemaElement::~SchemaElement();
SchemaExternal::isImport();
SchemaExternal::isInclude();
SchemaExternal::isRedefine();
SchemaFacet::New();
SchemaFacet::`scalar deleting destructor'();
SchemaGroup::`scalar deleting destructor'();
SchemaGroup::getSOMItemType();
SchemaGroupBase::New();
SchemaGroupBase::SchemaGroupBase();
SchemaGroupBase::`scalar deleting destructor'();
SchemaGroupBase::getIsEmpty();
SchemaGroupBase::getSOMItemType();
SchemaGroupBase::isGroupBase();
SchemaGroupRef::`scalar deleting destructor'();
SchemaGroupRef::getSOMItemType();
SchemaGroupRef::isRef();
SchemaIdentityConstraint::SchemaIdentityConstraint();
SchemaIdentityConstraint::`scalar deleting destructor'();
SchemaIdentityConstraint::getQualifiedName();
SchemaIdentityConstraint::getSOMItemType();
SchemaIdentityConstraint::~SchemaIdentityConstraint();
SchemaImport::New();
SchemaImport::`scalar deleting destructor'();
SchemaImport::isImport();
SchemaImport::setNamespace();
SchemaInclude::New();
SchemaInclude::`scalar deleting destructor'();
SchemaInclude::isInclude();
SchemaKey::`scalar deleting destructor'();
SchemaKey::getSOMItemType();
SchemaKeyref::New();
SchemaKeyref::`scalar deleting destructor'();
SchemaKeyref::getSOMItemType();
SchemaNamedObject::SchemaNamedObject();
SchemaNamedObject::_createInstance();
SchemaNamedObject::`scalar deleting destructor'();
SchemaNamedObject::getClass();
SchemaNamedObject::getQualifiedName();
SchemaNamedObject::~SchemaNamedObject();
SchemaNames::classInit();
SchemaNamespaceList::Allows();
SchemaNamespaceList::Intersection();
SchemaNamespaceList::IsSubset();
SchemaNamespaceList::SchemaNamespaceList();
SchemaNamespaceList::Union();
SchemaNamespaceList::UnionofSetAndOther();
SchemaNamespaceList::`scalar deleting destructor'();
SchemaNamespaceList::copy();
SchemaNamespaceList::init();
SchemaNamespaceList::toString();
SchemaNamespaceList::toVector();
SchemaNamespaceList::~SchemaNamespaceList();
SchemaNotation::SchemaNotation();
SchemaNotation::`scalar deleting destructor'();
SchemaNotation::getQualifiedName();
SchemaNotation::getSOMItemType();
SchemaObject::_createInstance();
SchemaObject::`scalar deleting destructor'();
SchemaObject::clone();
SchemaObject::getClass();
SchemaObject::getParentSchema();
SchemaObject::getQualifiedName();
SchemaObject::getSOMItemType();
SchemaObject::getWrapper();
SchemaObject::~SchemaObject();
SchemaObjectBase::Release();
SchemaObjectTable::SchemaObjectTable();
SchemaObjectTable::`scalar deleting destructor'();
SchemaParticle::SchemaParticle();
SchemaParticle::_createInstance();
SchemaParticle::`scalar deleting destructor'();
SchemaParticle::classInit();
SchemaParticle::clone();
SchemaParticle::getClass();
SchemaParticle::getIsEmpty();
SchemaParticle::getMaxOccursString();
SchemaParticle::getSOMItemType();
SchemaParticle::isAll();
SchemaParticle::isAny();
SchemaParticle::isChoice();
SchemaParticle::isElement();
SchemaParticle::isGroupBase();
SchemaParticle::isGroupRef();
SchemaParticle::isPointlessCandidate();
SchemaParticle::isSequence();
SchemaParticle::setMaxOccurs();
SchemaParticle::setMaxOccursString();
SchemaParticle::setMinOccurs();
SchemaParticle::setMinOccursString();
SchemaParticle::~SchemaParticle();
SchemaRedefine::SchemaRedefine();
SchemaRedefine::`scalar deleting destructor'();
SchemaRedefine::isRedefine();
SchemaSimpleContent::New();
SchemaSimpleContent::`scalar deleting destructor'();
SchemaSimpleContent::isComplexContent();
SchemaSimpleContentExtension::`scalar deleting destructor'();
SchemaSimpleContentExtension::getContentType();
SchemaSimpleContentRestriction::SchemaSimpleContentRestriction();
SchemaSimpleContentRestriction::`scalar deleting destructor'();
SchemaSimpleContentRestriction::getContentType();
SchemaSimpleType::IsDerivedFromBaseType();
SchemaSimpleType::New();
SchemaSimpleType::`scalar deleting destructor'();
SchemaSimpleType::getClass();
SchemaSimpleType::getSOMItemType();
SchemaSimpleTypeContent::isList();
SchemaSimpleTypeContent::isRestriction();
SchemaSimpleTypeContent::isUnion();
SchemaSimpleTypeList::SchemaSimpleTypeList();
SchemaSimpleTypeList::`scalar deleting destructor'();
SchemaSimpleTypeList::isList();
SchemaSimpleTypeRestriction::New();
SchemaSimpleTypeRestriction::SchemaSimpleTypeRestriction();
SchemaSimpleTypeRestriction::`scalar deleting destructor'();
SchemaSimpleTypeRestriction::isRestriction();
SchemaSimpleTypeUnion::SchemaSimpleTypeUnion();
SchemaSimpleTypeUnion::`scalar deleting destructor'();
SchemaSimpleTypeUnion::isUnion();
SchemaType::IsDerivedFrom();
SchemaType::IsDerivedFromBaseType();
SchemaType::SchemaType();
SchemaType::_createInstance();
SchemaType::`scalar deleting destructor'();
SchemaType::clone();
SchemaType::getClass();
SchemaType::getDatatype();
SchemaType::getSOMItemType();
SchemaType::isComplexType();
SchemaType::isDatatype();
SchemaType::isSimpleType();
SchemaType::~SchemaType();
SchemaUnique::`scalar deleting destructor'();
SchemaUnique::getSOMItemType();
SchemaValidator::New();
SchemaValidator::SchemaValidator();
SchemaValidator::`scalar deleting destructor'();
SchemaValidator::`vector deleting destructor'();
SchemaValidator::attributesPass1();
SchemaValidator::attributesPass2();
SchemaValidator::checkValue();
SchemaValidator::endElement();
SchemaValidator::endInlineSchema();
SchemaValidator::getTextOnlyDecl();
SchemaValidator::handleXSI();
SchemaValidator::isXSD();
SchemaValidator::noncontent();
SchemaValidator::startElement();
SchemaValidator::startInlineSchema();
SchemaValidator::text();
SchemaWildcard::SchemaWildcard();
SchemaWildcard::`scalar deleting destructor'();
SchemaWildcard::~SchemaWildcard();
SchemaXPath::New();
SchemaXPath::`scalar deleting destructor'();
SchemaXPath::toString();
ScopedAllocator::AllocObject();
ScopedAllocator::ObjectDestruct();
ScopedAllocator::ScopedAllocator();
ScopedAllocator::`scalar deleting destructor'();
ScopedAllocator::~ScopedAllocator();
ScopedObject::AddRef();
ScopedObject::QueryInterface();
ScopedObject::Release();
ScopedObject::clone();
ScopedObject::equals();
ScopedObject::getClass();
ScopedObject::getInternalObject();
ScopedObject::hashCode();
ScopedObject::toString();
ScopedObject::weakAddRef();
ScopedObject::weakRelease();
ScriptCompile::`scalar deleting destructor'();
ScriptCompile::compileExtensionElement();
ScriptCompile::compileInstruction();
ScriptCompile::compileLiteralElement();
ScriptCompile::compileText();
ScriptCompile::newScriptCompile();
ScriptEngine::New();
ScriptEngine::`scalar deleting destructor'();
ScriptEngine::`vector deleting destructor'();
ScriptEngine::addScriptText();
ScriptEngine::close();
ScriptEngine::reset();
ScriptEngine::setExecutionHost();
ScriptEngine::setSecurity();
ScriptEngine::startScript();
ScriptHost::AllowXSLScriptDebug();
ScriptHost::DoDebugXSLScript();
ScriptHost::GetApplication();
ScriptHost::GetDocVersionString();
ScriptHost::GetDocumentContextFromPosition();
ScriptHost::GetItemInfo();
ScriptHost::GetLCID();
ScriptHost::GetRootApplicationNode();
ScriptHost::OnEnterScript();
ScriptHost::OnLeaveScript();
ScriptHost::OnScriptError();
ScriptHost::OnScriptErrorDebug();
ScriptHost::OnScriptTerminate();
ScriptHost::OnStateChange();
ScriptManager::ScriptManager();
ScriptManager::`scalar deleting destructor'();
ScriptManager::`vector deleting destructor'();
ScriptManager::checkSecurity();
ScriptManager::close();
ScriptManager::resetScripts();
ScriptManager::startScripts();
ScriptSymbol::`scalar deleting destructor'();
ScriptSymbol::addScriptText();
ScriptSymbol::circularReference();
ScriptSymbol::duplicateGlobal();
ScriptSymbol::duplicateLocal();
ScriptSymbol::exitScope();
ScriptSymbol::mergeScriptBlocks();
ScriptSymbol::newSymbol();
ScriptSymbol::postProcessSymbol();
ScriptSymbol::refersTo();
ScriptSymbol::retrieve_clsid();
ScriptSymbol::undefinedSymbol();
SecureBlobHelper();
SecureString::init();
SecureString::reset();
SecureString::toBSTR();
SecureString::toString();
SecureString::toString_CoTaskMemAlloc();
SecureString::toString_alloc();
SecurityInfo::clearSecurityInfo();
SecurityInfo::copySecurityInfo();
SecurityInfo::getHostSecurityManager();
SecurityInfo::makeSecurityChecks();
SecurityInfo::~SecurityInfo();
SelfNodeSet::createCache();
SelfNodeSet::getCount();
SelfNodeSet::getIndex();
SelfNodeSet::getNavigator();
SelfNodeSet::moveToNext();
SelfNodeSet::reset();
ShareMutex::ClaimExclusiveLock();
ShareMutex::Downgrade();
ShareMutex::Enter();
ShareMutex::EnterRead();
ShareMutex::Leave();
ShareMutex::LeaveAndEnterRead();
ShareMutex::LeaveRead();
ShareMutex::ShareMutex();
ShareMutex::SleepWaitingForLock();
ShareMutex::WaitForExclusiveLock();
ShareMutex::WaitForShareLock();
ShareMutex::WakeAllSleepers();
ShareMutex::`scalar deleting destructor'();
ShareMutex::`vector deleting destructor'();
ShareMutex::newShareMutex();
ShareMutex::~ShareMutex();
ShortIsEqualGUID();
SimpleParam::New();
SimpleParam::`scalar deleting destructor'();
SimpleParam::`vector deleting destructor'();
SimpleUnionMatcher::`scalar deleting destructor'();
SimpleUnionMatcher::getPreFilter();
SimpleUnionMatcher::matches();
SimpleUnionMatcher::matchesWithNodeTest();
SimpleUnionMatcher::visitNodeTests();
SingleNavResult::expressionResult();
SingleNavResult::getXParameters();
SingleRange::New();
SingleRange::SingleRange();
SingleRange::`scalar deleting destructor'();
SingleRange::compare();
SingleRange::getClass();
SingletonNodeSet::createCache();
SingletonNodeSet::getCount();
SingletonNodeSet::getIndex();
SingletonNodeSet::getNavigator();
SingletonNodeSet::moveToNext();
SingletonNodeSet::reset();
SkipWhiteSpace();
SortNode::SortNode();
SortNode::_optimize();
SortNode::`scalar deleting destructor'();
SortNode::addSortKey();
SortNode::equals();
SortNode::getDataType();
SortNode::getNodeType();
SortNode::visitTree();
SortNodeSet::SortNodeSet();
SortNodeSet::compare();
SortNodeSet::computeKeyValue();
SortNodeSet::createCache();
SortNodeSet::generateStringKey();
SortNodeSet::getCount();
SortNodeSet::getIndex();
SortNodeSet::getNavigator();
SortNodeSet::moveToNext();
SortNodeSet::reset();
SpinLock();
Stack::Stack();
Stack::_createInstance();
Stack::`scalar deleting destructor'();
Stack::empty();
Stack::getClass();
Stack::newStack();
Stack::peek();
Stack::pop();
Stack::push();
Stack::search();
StartEntityDecl();
StreamInputSource::Read();
StreamInputSource::StreamInputSource();
StreamInputSource::`scalar deleting destructor'();
StreamInputSource::~StreamInputSource();
StreamWrapper::New();
StreamWrapper::Read();
StreamWrapper::Write();
StreamWrapper::`scalar deleting destructor'();
StreamWrapper::`vector deleting destructor'();
StreamWrapper::~StreamWrapper();
String::String();
String::`scalar deleting destructor'();
String::add();
String::charAt();
String::compare();
String::equals();
String::equalsIgnoreCase();
String::getClass();
String::getData();
String::getWCHARBuffer();
String::hashCode();
String::indexOf();
String::length();
String::lengthUTF32();
String::newConstString();
String::newString();
String::normalize();
String::normalizeAttributeValueWhitespaces();
String::substring();
String::toLowerCase();
String::toString();
String::trim();
StringBuffer::StringBuffer();
StringBuffer::`scalar deleting destructor'();
StringBuffer::append();
StringBuffer::close();
StringBuffer::copy();
StringBuffer::ensureCapacity();
StringBuffer::newStringBuffer();
StringBuffer::toString();
StringCbCopyW();
StringCchCatExW();
StringCchCopyA();
StringCchCopyNExW();
StringCchCopyW();
StringCchPrintfW();
StringCopyWorkerW();
StringEquals();
StringHashtable::StringHashtable();
StringHashtable::_createInstance();
StringHashtable::`scalar deleting destructor'();
StringHashtable::get();
StringHashtable::getClass();
StringHashtable::newStringHashtable();
StringInputSource::GetEncoding();
StringInputSource::Read();
StringInputSource::SetEncoding();
StringInputSource::StringInputSource();
StringInputSource::`scalar deleting destructor'();
StringInputSource::initString();
StringInputSource::~StringInputSource();
StringLengthWorkerW();
StringRef::FromHSTRING();
StringRef::FromPCWSTR();
StringReverse();
StringTable::search();
StringToBSTR();
StringVPrintfWorkerW();
StringXMLSource::getLineNumber();
StringXMLSource::getLinePosition();
StringXMLSource::getText();
StyleCompile::StyleCompile();
StyleCompile::`scalar deleting destructor'();
StyleCompile::compileExtensionElement();
StyleCompile::compileInstruction();
StyleCompile::compileLiteralElement();
StyleCompile::compileText();
Symbol::Symbol();
Symbol::_trackDependencies();
Symbol::insertNewGlobal();
Symbol::visitSymbol();
Symbol::~Symbol();
SymbolManager::beginDefinition();
SymbolManager::endDefinition();
SymbolManager::popSymbols();
SymbolManager::resolveRef();
SymbolManager::visitSymbols();
SymbolRef::`scalar deleting destructor'();
SymbolRef::isResolved();
SymbolTable::addFixup();
SymbolTable::beginVariable();
SymbolTable::defineFormat();
SymbolTable::defineKey();
SymbolTable::defineNamespaceAlias();
SymbolTable::defineOutput();
SymbolTable::defineScript();
SymbolTable::defineTemplate();
SymbolTable::defineWhitespaceRule();
SymbolTable::freeSymbolTable();
SymbolTable::initSymbolTable();
SymbolTable::~SymbolTable();
TLSDATA::`scalar deleting destructor'();
TLSDATA::init();
TailChildMatcher::`scalar deleting destructor'();
TailChildMatcher::getPreFilter();
TailChildMatcher::matches();
TailChildMatcher::matchesWithNodeTest();
TailChildMatcher::visitNodeTests();
TemplateCompile::TemplateCompile();
TemplateCompile::`scalar deleting destructor'();
TemplateCompile::afterCompile();
TemplateCompile::compileInstruction();
TemplateSymbol::`scalar deleting destructor'();
TemplateSymbol::circularReference();
TemplateSymbol::duplicateGlobal();
TemplateSymbol::duplicateLocal();
TemplateSymbol::exitScope();
TemplateSymbol::newSymbol();
TemplateSymbol::postProcessSymbol();
TemplateSymbol::refersTo();
TemplateSymbol::splitSymbol();
TemplateSymbol::undefinedSymbol();
Terminal::Terminal();
Terminal::`scalar deleting destructor'();
Terminal::calcfollowpos();
Terminal::clone();
Terminal::firstpos();
Terminal::getClass();
Terminal::isTerminal();
Terminal::lastpos();
Terminal::newTerminal();
Terminal::nullable();
TernaryTreeRO::findStringI();
TextCompile::`scalar deleting destructor'();
TextCompile::compileExtensionElement();
TextCompile::compileInstruction();
TextCompile::compileLiteralElement();
TextCompile::compileText();
TextCompile::newTextCompile();
TextWriter::New();
TextWriter::TextWriter();
TextWriter::`scalar deleting destructor'();
TextWriter::`vector deleting destructor'();
TextWriter::addWhitespace();
TextWriter::beginChildren();
TextWriter::beginComment();
TextWriter::beginElement();
TextWriter::beginPI();
TextWriter::close();
TextWriter::closeOutput();
TextWriter::endComment();
TextWriter::endElement();
TextWriter::endPI();
TextWriter::onError();
TextWriter::open();
TextWriter::prefixMapping();
TextWriter::stringText();
TextWriter::wcharText();
TextWriter::~TextWriter();
ThrowBadNameCharException();
ThrowIfMSXMLObject();
ThrowNodeInvalidType();
TimeSpan::Parse();
TimeSpan::TimeToTicks();
TimeSpan::_parseCount();
TlsInit();
TopLevelCompile::`scalar deleting destructor'();
TopLevelCompile::checkCharSymbol();
TopLevelCompile::checkStringSymbol();
TopLevelCompile::compileAttributeSet();
TopLevelCompile::compileDecimalFormat();
TopLevelCompile::compileExtensionElement();
TopLevelCompile::compileInclude();
TopLevelCompile::compileInstruction();
TopLevelCompile::compileKey();
TopLevelCompile::compileLiteralElement();
TopLevelCompile::compileNamespaceAlias();
TopLevelCompile::compileOutput();
TopLevelCompile::compileScript();
TopLevelCompile::compileSpaceRules();
TopLevelCompile::compileTemplate();
TopLevelCompile::compileText();
TracingInit();
TracingSettings();
TranslateChars::createTranslateChars();
TranslateCharsBase::ensureTableSize();
TranslateCharsBase::fillTable();
TranslateCharsBinary::TranslateCharsBinary();
TranslateCharsBinary::`scalar deleting destructor'();
TranslateCharsBinary::translate();
TranslateCharsLookup::TranslateCharsLookup();
TranslateCharsLookup::`scalar deleting destructor'();
TranslateCharsLookup::newTranslateCharsLookup();
TranslateCharsLookup::translate();
TranslateCharsScan::TranslateCharsScan();
TranslateCharsScan::`scalar deleting destructor'();
TranslateCharsScan::initTranslate();
TranslateCharsScan::newTranslateCharsScan();
TranslateCharsScan::translate();
TypeFilter::TypeFilter();
TypeFilter::`scalar deleting destructor'();
TypeFilter::getMatchLocalName();
TypeFilter::getMatchType();
TypeFilter::getMatchURI();
TypeFilter::matches();
TypeFilter::matchesWithAxis();
TypeFilter::moveToFirst();
TypeFilter::moveToFirstDescendant();
TypeFilter::moveToSibling();
TypeNameFilter::TypeNameFilter();
TypeNameFilter::`scalar deleting destructor'();
TypeNameFilter::getMatchLocalName();
TypeNameFilter::getMatchType();
TypeNameFilter::getMatchURI();
TypeNameFilter::matches();
TypeNameFilter::matchesWithAxis();
TypeNameFilter::moveToFirst();
TypeNameFilter::moveToFirstDescendant();
TypeNameFilter::moveToSibling();
TypeURIAttrFilter::TypeURIAttrFilter();
TypeURIAttrFilter::`scalar deleting destructor'();
TypeURIAttrFilter::getMatchLocalName();
TypeURIAttrFilter::getMatchType();
TypeURIAttrFilter::getMatchURI();
TypeURIAttrFilter::matches();
TypeURIAttrFilter::matchesWithAxis();
TypeURIAttrFilter::moveToFirst();
TypeURIAttrFilter::moveToSibling();
TypeURIFilter::TypeURIFilter();
TypeURIFilter::`scalar deleting destructor'();
TypeURIFilter::getMatchLocalName();
TypeURIFilter::getMatchType();
TypeURIFilter::getMatchURI();
TypeURIFilter::matches();
TypeURIFilter::matchesWithAxis();
TypeURIFilter::moveToFirst();
TypeURIFilter::moveToFirstDescendant();
TypeURIFilter::moveToSibling();
TypeWrapper::Compare();
TypeWrapper::Length();
TypeWrapper::TypeWrapper();
TypeWrapper::`scalar deleting destructor'();
TypeWrapper::equals();
TypeWrapper::getClass();
TypeWrapper::hashCode();
TypeWrapper::isComparable();
TypeWrapper::newAPNWrapper();
TypeWrapper::newTypeWrapper();
TypeWrapper::toString();
ULongLongMult();
URIMatcher::URIMatcher();
URIMatcher::`scalar deleting destructor'();
URIMatcher::getPreFilter();
URIMatcher::matches();
URIMatcher::matchesWithNodeTest();
URIMatcher::visitNodeTests();
URL::EscapeChars();
URL::IsSafeByZone();
URL::accessAllowed();
URL::allowTargetFromReferer();
URL::canonicalizeURL();
URL::getFilePath();
URL::getHostName();
URL::getScheme();
URL::isLocalFile();
URL::isRelative();
URL::isSafeScheme();
URL::resolveURL();
URLMONRequest::AbortEx();
URLMONRequest::ApplySetting();
URLMONRequest::Authenticate();
URLMONRequest::AuthenticateEx();
URLMONRequest::BeginningTransaction();
URLMONRequest::ClearXHRObject();
URLMONRequest::CompleteDelivery();
URLMONRequest::Flush();
URLMONRequest::GetBindInfo();
URLMONRequest::GetBindInfoEx();
URLMONRequest::GetBindString();
URLMONRequest::GetIgnoreCertMask();
URLMONRequest::GetRequestTimeouts();
URLMONRequest::GetRootSecurityId();
URLMONRequest::GetSerializedClientCertContext();
URLMONRequest::GetXHRObject();
URLMONRequest::Lock();
URLMONRequest::OnResponse();
URLMONRequest::OnSecurityProblem();
URLMONRequest::QuerySetting();
URLMONRequest::ReportData();
URLMONRequest::ReportProgress();
URLMONRequest::ReportResult();
URLMONRequest::Switch();
URLMONRequest::URLMONRequest();
URLMONRequest::URLMONRequestSink::AddRef();
URLMONRequest::URLMONRequestSink::Authenticate();
URLMONRequest::URLMONRequestSink::AuthenticateEx();
URLMONRequest::URLMONRequestSink::BeginningTransaction();
URLMONRequest::URLMONRequestSink::GetBindInfo();
URLMONRequest::URLMONRequestSink::GetBindInfoEx();
URLMONRequest::URLMONRequestSink::GetBindString();
URLMONRequest::URLMONRequestSink::GetIgnoreCertMask();
URLMONRequest::URLMONRequestSink::GetRequestTimeouts();
URLMONRequest::URLMONRequestSink::GetRootSecurityId();
URLMONRequest::URLMONRequestSink::GetSerializedClientCertContext();
URLMONRequest::URLMONRequestSink::GetWindow();
URLMONRequest::URLMONRequestSink::OnResponse();
URLMONRequest::URLMONRequestSink::OnSecurityProblem();
URLMONRequest::URLMONRequestSink::QueryInterface();
URLMONRequest::URLMONRequestSink::QueryService();
URLMONRequest::URLMONRequestSink::Release();
URLMONRequest::URLMONRequestSink::ReportData();
URLMONRequest::URLMONRequestSink::ReportProgress();
URLMONRequest::URLMONRequestSink::ReportResult();
URLMONRequest::URLMONRequestSink::Switch();
URLMONRequest::Unlock();
URLMONRequest::_Abort();
URLMONRequest::_AbortBadPushRequest();
URLMONRequest::_ApplySettingToProtocol();
URLMONRequest::_CallOnClientCert();
URLMONRequest::_CallOnDataAvailable();
URLMONRequest::_CallOnError();
URLMONRequest::_CallOnHeadersAvailable();
URLMONRequest::_CallOnRedirect();
URLMONRequest::_CallOnResponseReceived();
URLMONRequest::_CallOnServerCert();
URLMONRequest::_CallUrlMonStart();
URLMONRequest::_CheckConcurrentResultCallback();
URLMONRequest::_ConvertCertChainToXhrCertArray();
URLMONRequest::_ConvertIssuerListToStringArray();
URLMONRequest::_FreeIssuerListStringArray();
URLMONRequest::_FreeTransportSettings();
URLMONRequest::_FreeXhrCertArray();
URLMONRequest::_LeaveUrlMonCall();
URLMONRequest::_MtaAsyncCallUrlMonStart();
URLMONRequest::_OnClientCert();
URLMONRequest::_OnResponse();
URLMONRequest::_OnServerCert();
URLMONRequest::_ProcessPendingCallbacks();
URLMONRequest::_ReportData();
URLMONRequest::_ReportProgress();
URLMONRequest::_ReportResult();
URLMONRequest::_StaAsyncCallUrlMonStart();
URLMONRequest::`scalar deleting destructor'();
URLMONRequest::abort();
URLMONRequest::crackURL();
URLMONRequest::createUrl();
URLMONRequest::get_allResponseHeaders();
URLMONRequest::get_option();
URLMONRequest::get_responseBody();
URLMONRequest::get_responseHeader();
URLMONRequest::get_responseStream();
URLMONRequest::get_responseStreamVARIANT();
URLMONRequest::get_responseText();
URLMONRequest::get_responseXML();
URLMONRequest::get_status();
URLMONRequest::get_statusText();
URLMONRequest::init();
URLMONRequest::open();
URLMONRequest::put_onreadystatechange();
URLMONRequest::recycle();
URLMONRequest::s_MtaWorkItemCallUrlMonStart();
URLMONRequest::send();
URLMONRequest::sendContinue();
URLMONRequest::set_EDPClaim();
URLMONRequest::set_MaxConnections();
URLMONRequest::set_clientCert();
URLMONRequest::set_clientProxyCredentials();
URLMONRequest::set_customStream();
URLMONRequest::set_option();
URLMONRequest::set_property();
URLMONRequest::set_proxy();
URLMONRequest::set_proxyCredentials();
URLMONRequest::set_requestHeader();
URLMONRequest::set_statusCallback();
URLMONRequest::set_timeouts();
URLMONRequest::waitForResponse();
URLMONRequest::~URLMONRequest();
URLMONStream::AddRef();
URLMONStream::BeginningTransaction();
URLMONStream::GetBindInfo();
URLMONStream::GetBindString();
URLMONStream::GetPriority();
URLMONStream::GetStatus();
URLMONStream::OnDataAvailable();
URLMONStream::OnLowResource();
URLMONStream::OnObjectAvailable();
URLMONStream::OnProgress();
URLMONStream::OnResponse();
URLMONStream::OnStartBinding();
URLMONStream::OnStopBinding();
URLMONStream::QueryInterface();
URLMONStream::Release();
URLMONStream::SetStatus();
URLMONStream::URLMONStream();
URLMONStream::`scalar deleting destructor'();
URLMONStream::abort();
URLMONStream::deferedOpen();
URLMONStream::refererHeader();
URLMONStream::reset();
URLMONStream::setContentType();
URLMONStream::~URLMONStream();
URLMONUploadStream::CreateInstance();
URLMONUploadStream::Initialize();
URLMONUploadStream::Read();
URLMONUploadStream::Seek();
URLMONUploadStream::Stat();
URLMONUploadStream::URLMONUploadStream();
URLMONUploadStream::Write();
URLMONUploadStream::`scalar deleting destructor'();
URLMONUploadStream::`vector deleting destructor'();
URLMONUploadStream::~URLMONUploadStream();
URLRequest::AbortEx();
URLRequest::ApplySetting();
URLRequest::ClearXHRObject();
URLRequest::CompleteDelivery();
URLRequest::Flush();
URLRequest::GetXHRObject();
URLRequest::Lock();
URLRequest::OnError();
URLRequest::OnResponseDataAvailable();
URLRequest::OnResponseFinished();
URLRequest::OnResponseStart();
URLRequest::QuerySetting();
URLRequest::URLRequest();
URLRequest::Unlock();
URLRequest::_getBaseURL();
URLRequest::_getSecureBaseURL();
URLRequest::`scalar deleting destructor'();
URLRequest::abort();
URLRequest::canonicalizeBestFitChars();
URLRequest::check_requestHeader();
URLRequest::decode_responseText();
URLRequest::get_readyState();
URLRequest::get_responseXML();
URLRequest::init();
URLRequest::open();
URLRequest::prepareXMLParser();
URLRequest::put_onreadystatechange();
URLRequest::recycle();
URLRequest::send();
URLRequest::sendContinue();
URLRequest::setRequestHeaderSucceeded();
URLRequest::setState();
URLRequest::set_method();
URLRequest::set_requestBody();
URLRequest::set_requiredRequestHeaders();
URLRequest::set_statusCallback();
URLRequest::set_url();
URLRequest::set_usernamePassword();
URLRequest::~URLRequest();
URLStream::AddRef();
URLStream::Clone();
URLStream::Commit();
URLStream::CopyTo();
URLStream::HandleData();
URLStream::LockRegion();
URLStream::NeedSkipForcedResync();
URLStream::OpenPreloadResource();
URLStream::Read();
URLStream::Release();
URLStream::Revert();
URLStream::Seek();
URLStream::SetCharset();
URLStream::SetSize();
URLStream::Stat();
URLStream::URLStream();
URLStream::UnlockRegion();
URLStream::Write();
URLStream::abort();
URLStream::getCharset();
URLStream::getResolvedURL();
URLStream::newStream();
URLStream::newStreamDefered();
URLStream::reset();
URLStream::resetURL();
URLStream::setContentType();
URLStream::setURL();
URLStream::~URLStream();
URLStreamInputSource::URLStreamInputSource();
URLStreamInputSource::`scalar deleting destructor'();
Ucs2BCharacterSource::GetCharacter();
Ucs2BCharacterSource::`scalar deleting destructor'();
Ucs2CharacterSource::GetCharacter();
Ucs2CharacterSource::`scalar deleting destructor'();
Ucs4BCharacterSource::GetCharacter();
Ucs4BCharacterSource::GetCharacterOffset();
Ucs4BCharacterSource::GetCharacterSize();
Ucs4BCharacterSource::GetLittleEndian();
Ucs4BCharacterSource::GetSegmentSize();
Ucs4BCharacterSource::GetSegmentValue();
Ucs4BCharacterSource::`scalar deleting destructor'();
Ucs4CharacterSource::GetCharacter();
Ucs4CharacterSource::GetCharacterOffset();
Ucs4CharacterSource::GetCharacterSize();
Ucs4CharacterSource::GetSegmentSize();
Ucs4CharacterSource::GetSegmentValue();
Ucs4CharacterSource::`scalar deleting destructor'();
UniCharacter::isCharAlphaNumeric();
UniCharacter::isWhitespace();
UniCharacter::toUTF32();
UnicodeChar2Utf16();
UnicodeToUTF16();
UnionMatcher::UnionMatcher();
UnionMatcher::`scalar deleting destructor'();
UnionMatcher::addMatcher();
UnionMatcher::getPreFilter();
UnionMatcher::matches();
UnionMatcher::matchesWithNodeTest();
UnionMatcher::visitNodeTest();
UnionMatcher::visitNodeTests();
UnionNode::_optimize();
UnionNode::`scalar deleting destructor'();
UnionNode::addQueries();
UnionNode::equals();
UnionNode::getDataType();
UnionNode::getNodeType();
UnionNode::visitTree();
UnionNodeSet::UnionNodeSet();
UnionNodeSet::createCache();
UnionNodeSet::getCount();
UnionNodeSet::getIndex();
UnionNodeSet::getNavigator();
UnionNodeSet::initIteration();
UnionNodeSet::insertNodeSet();
UnionNodeSet::moveToNext();
UnionNodeSet::reset();
UnparseBase64();
UnparseBinHex();
UnparseDatatype();
UnparseDecimal();
UnparseISO8601();
UnparseISO8601Ex();
Utf16BCharacterSource::GetCharacter();
Utf16BCharacterSource::GetCharacterOffset();
Utf16BCharacterSource::GetCharacterSize();
Utf16BCharacterSource::GetLittleEndian();
Utf16BCharacterSource::GetSegmentSize();
Utf16BCharacterSource::GetSegmentValue();
Utf16BCharacterSource::`scalar deleting destructor'();
Utf16CharacterSource::GetCharacter();
Utf16CharacterSource::GetCharacterOffset();
Utf16CharacterSource::GetCharacterSize();
Utf16CharacterSource::GetSegmentSize();
Utf16CharacterSource::GetSegmentValue();
Utf16CharacterSource::`scalar deleting destructor'();
Utf8CharacterSource::GetCharacter();
Utf8CharacterSource::GetCharacterOffset();
Utf8CharacterSource::GetSegmentSize();
Utf8CharacterSource::GetSegmentValue();
Utf8CharacterSource::Utf8CharacterSource();
Utf8CharacterSource::`scalar deleting destructor'();
VARIANT_UserFree();
VARIANT_UserFree64();
VARIANT_UserMarshal();
VARIANT_UserMarshal64();
VARIANT_UserSize();
VARIANT_UserSize64();
VARIANT_UserUnmarshal();
VARIANT_UserUnmarshal64();
VBSAXTranslator::AddRef();
VBSAXTranslator::DeleteMemberByDispID();
VBSAXTranslator::DeleteMemberByName();
VBSAXTranslator::GetDispID();
VBSAXTranslator::GetIDsOfNames();
VBSAXTranslator::GetMemberName();
VBSAXTranslator::GetMemberProperties();
VBSAXTranslator::GetNameSpaceParent();
VBSAXTranslator::GetNextDispID();
VBSAXTranslator::GetTypeInfo();
VBSAXTranslator::GetTypeInfoCount();
VBSAXTranslator::Invoke();
VBSAXTranslator::InvokeEx();
VBSAXTranslator::New();
VBSAXTranslator::QueryInterface();
VBSAXTranslator::Release();
VBSAXTranslator::VBSAXTranslator();
VBSAXTranslator::_invoke();
VBSAXTranslator::_invoke_IVBSAXContentHandler();
VBSAXTranslator::_invoke_IVBSAXDTDHandler();
VBSAXTranslator::_invoke_IVBSAXDeclHandler();
VBSAXTranslator::_invoke_IVBSAXErrorHandler();
VBSAXTranslator::_invoke_IVBSAXLexicalHandler();
VBSAXTranslator::`scalar deleting destructor'();
VBSAXTranslator::attributeDecl();
VBSAXTranslator::characters();
VBSAXTranslator::comment();
VBSAXTranslator::elementDecl();
VBSAXTranslator::endCDATA();
VBSAXTranslator::endDTD();
VBSAXTranslator::endDocument();
VBSAXTranslator::endElement();
VBSAXTranslator::endEntity();
VBSAXTranslator::endPrefixMapping();
VBSAXTranslator::error();
VBSAXTranslator::externalEntityDecl();
VBSAXTranslator::fatalError();
VBSAXTranslator::getColumnNumber();
VBSAXTranslator::getIndexFromName();
VBSAXTranslator::getIndexFromQName();
VBSAXTranslator::getLength();
VBSAXTranslator::getLineNumber();
VBSAXTranslator::getLocalName();
VBSAXTranslator::getName();
VBSAXTranslator::getPublicId();
VBSAXTranslator::getQName();
VBSAXTranslator::getSystemId();
VBSAXTranslator::getType();
VBSAXTranslator::getTypeFromName();
VBSAXTranslator::getTypeFromQName();
VBSAXTranslator::getURI();
VBSAXTranslator::getValue();
VBSAXTranslator::getValueFromName();
VBSAXTranslator::getValueFromQName();
VBSAXTranslator::ignorableWarning();
VBSAXTranslator::ignorableWhitespace();
VBSAXTranslator::internalEntityDecl();
VBSAXTranslator::notationDecl();
VBSAXTranslator::processingInstruction();
VBSAXTranslator::putref_documentLocator();
VBSAXTranslator::resetBSTRs();
VBSAXTranslator::skippedEntity();
VBSAXTranslator::startCDATA();
VBSAXTranslator::startDTD();
VBSAXTranslator::startDocument();
VBSAXTranslator::startElement();
VBSAXTranslator::startEntity();
VBSAXTranslator::startPrefixMapping();
VBSAXTranslator::unparsedEntityDecl();
ValidateInsertNodeTypes();
ValidateXmlChar();
ValidationCacheInfo::addUsedNS();
ValidationCacheInfo::checkAddAllowed();
ValidationCacheInfo::startTrackingNS();
ValidationState::ValidationState();
ValidationState::~ValidationState();
VariableCompile::VariableCompile();
VariableCompile::`scalar deleting destructor'();
VariableCompile::afterCompile();
VariableCompile::characters();
VariableCompile::startElement();
VariableRefFixup::VariableRefFixup();
VariableRefFixup::`scalar deleting destructor'();
VariableRefFixup::doFixup();
VariableRefNode::_optimize();
VariableRefNode::`scalar deleting destructor'();
VariableRefNode::equals();
VariableRefNode::getDataType();
VariableRefNode::getNodeType();
VariableRefNode::visitTree();
VariableSymbol::`scalar deleting destructor'();
VariableSymbol::circularReference();
VariableSymbol::duplicateGlobal();
VariableSymbol::duplicateLocal();
VariableSymbol::exitScope();
VariableSymbol::newSymbol();
VariableSymbol::postProcessSymbol();
VariableSymbol::refersTo();
VariableSymbol::undefinedSymbol();
Variant::QIForIID();
Variant::getBaseType();
Variant::getBaseVariant();
Variant::getUnknown();
Variant::toBSTR();
Variant::toBoolean();
Variant::toBuffer();
Variant::toDWORD();
Variant::toStream();
Variant::toULONGLONG();
Vector::Vector();
Vector::_alloc();
Vector::_createInstance();
Vector::_set();
Vector::`scalar deleting destructor'();
Vector::addElement();
Vector::clone();
Vector::ensureCapacity();
Vector::equals();
Vector::finalize();
Vector::getClass();
Vector::hashCode();
Vector::indexOf();
Vector::insertRange();
Vector::newVector();
Vector::removeElement();
Vector::removeElementAt();
Vector::removeRange();
Vector::reverse();
Vector::setSize();
Vector::toString();
Vector::toStringWithDelimeter();
VectorSpaceDelimeted::_createInstance();
VectorSpaceDelimeted::`scalar deleting destructor'();
VectorSpaceDelimeted::getClass();
VectorSpaceDelimeted::newVector();
VectorSpaceDelimeted::toString();
VerifyXmlChar();
VisitorFixup::`scalar deleting destructor'();
VisitorFixup::doFixup();
W3CCastAttribute();
W3CCastCDATA();
W3CCastComment();
W3CCastDocFrag();
W3CCastDocType();
W3CCastElement();
W3CCastEntity();
W3CCastEntityRef();
W3CCastNotation();
W3CCastPI();
W3CCastText();
W3CDOMWrapper::AddRef();
W3CDOMWrapper::AppendData();
W3CDOMWrapper::DeleteData();
W3CDOMWrapper::GetAttribute();
W3CDOMWrapper::GetAttributeNS();
W3CDOMWrapper::GetAttributeNode();
W3CDOMWrapper::GetAttributeNodeNS();
W3CDOMWrapper::GetElementsByTagName();
W3CDOMWrapper::GetIDsOfNames();
W3CDOMWrapper::GetIids();
W3CDOMWrapper::GetRuntimeClassName();
W3CDOMWrapper::GetTrustLevel();
W3CDOMWrapper::GetTypeInfo();
W3CDOMWrapper::GetTypeInfoCount();
W3CDOMWrapper::GetXml();
W3CDOMWrapper::InsertData();
W3CDOMWrapper::Invoke();
W3CDOMWrapper::Normalize();
W3CDOMWrapper::QueryInterface();
W3CDOMWrapper::Release();
W3CDOMWrapper::RemoveAttribute();
W3CDOMWrapper::RemoveAttributeNS();
W3CDOMWrapper::RemoveAttributeNode();
W3CDOMWrapper::ReplaceData();
W3CDOMWrapper::SetAttribute();
W3CDOMWrapper::SetAttributeNS();
W3CDOMWrapper::SetAttributeNode();
W3CDOMWrapper::SetAttributeNodeNS();
W3CDOMWrapper::SplitText();
W3CDOMWrapper::SubstringData();
W3CDOMWrapper::W3CDOMWrapper();
W3CDOMWrapper::_appendData();
W3CDOMWrapper::_getActualLength();
W3CDOMWrapper::_getAttrValue();
W3CDOMWrapper::_getAttribute();
W3CDOMWrapper::_getAttributeNode();
W3CDOMWrapper::_getNormalizedLength();
W3CDOMWrapper::_invokeDOMElement();
W3CDOMWrapper::_removeAttribute();
W3CDOMWrapper::_removeAttributeNode();
W3CDOMWrapper::_replaceData();
W3CDOMWrapper::_setAttribute();
W3CDOMWrapper::_splitText();
W3CDOMWrapper::_substringData();
W3CDOMWrapper::appendChild();
W3CDOMWrapper::appendData();
W3CDOMWrapper::cloneNode();
W3CDOMWrapper::deleteData();
W3CDOMWrapper::getAttribute();
W3CDOMWrapper::getAttributeNode();
W3CDOMWrapper::getElementsByTagName();
W3CDOMWrapper::get_Data();
W3CDOMWrapper::get_Entities();
W3CDOMWrapper::get_InnerText();
W3CDOMWrapper::get_Length();
W3CDOMWrapper::get_Name();
W3CDOMWrapper::get_NotationName();
W3CDOMWrapper::get_Notations();
W3CDOMWrapper::get_PublicId();
W3CDOMWrapper::get_Specified();
W3CDOMWrapper::get_SystemId();
W3CDOMWrapper::get_TagName();
W3CDOMWrapper::get_Target();
W3CDOMWrapper::get_Value();
W3CDOMWrapper::get_attributes();
W3CDOMWrapper::get_baseName();
W3CDOMWrapper::get_childNodes();
W3CDOMWrapper::get_data();
W3CDOMWrapper::get_dataType();
W3CDOMWrapper::get_definition();
W3CDOMWrapper::get_entities();
W3CDOMWrapper::get_firstChild();
W3CDOMWrapper::get_lastChild();
W3CDOMWrapper::get_length();
W3CDOMWrapper::get_name();
W3CDOMWrapper::get_namespaceURI();
W3CDOMWrapper::get_nextSibling();
W3CDOMWrapper::get_nodeName();
W3CDOMWrapper::get_nodeType();
W3CDOMWrapper::get_nodeTypeString();
W3CDOMWrapper::get_nodeTypedValue();
W3CDOMWrapper::get_nodeValue();
W3CDOMWrapper::get_notationName();
W3CDOMWrapper::get_notations();
W3CDOMWrapper::get_ownerDocument();
W3CDOMWrapper::get_parentNode();
W3CDOMWrapper::get_parsed();
W3CDOMWrapper::get_prefix();
W3CDOMWrapper::get_previousSibling();
W3CDOMWrapper::get_publicId();
W3CDOMWrapper::get_specified();
W3CDOMWrapper::get_systemId();
W3CDOMWrapper::get_tagName();
W3CDOMWrapper::get_target();
W3CDOMWrapper::get_text();
W3CDOMWrapper::get_value();
W3CDOMWrapper::get_xml();
W3CDOMWrapper::hasChildNodes();
W3CDOMWrapper::insertBefore();
W3CDOMWrapper::insertData();
W3CDOMWrapper::normalize();
W3CDOMWrapper::put_Data();
W3CDOMWrapper::put_InnerText();
W3CDOMWrapper::put_Value();
W3CDOMWrapper::put_data();
W3CDOMWrapper::put_dataType();
W3CDOMWrapper::put_nodeTypedValue();
W3CDOMWrapper::put_nodeValue();
W3CDOMWrapper::put_text();
W3CDOMWrapper::put_value();
W3CDOMWrapper::removeAttribute();
W3CDOMWrapper::removeAttributeNode();
W3CDOMWrapper::removeChild();
W3CDOMWrapper::replaceChild();
W3CDOMWrapper::replaceData();
W3CDOMWrapper::selectNodes();
W3CDOMWrapper::selectSingleNode();
W3CDOMWrapper::setAttribute();
W3CDOMWrapper::setAttributeNode();
W3CDOMWrapper::splitText();
W3CDOMWrapper::substringData();
W3CDOMWrapper::transformNode();
W3CDOMWrapper::transformNodeToObject();
W3CDOMWrapper::~W3CDOMWrapper();
W3CDOMWrapperQIHelper<Windows::Data::Xml::Dom::IXmlText>();
WPP_SF_();
WPP_SF_D();
WPP_SF_DDDDDdDqD();
WPP_SF_DDDDdDqD();
WPP_SF_Dll();
WPP_SF_I();
WPP_SF_Ldd();
WPP_SF_S();
WPP_SF_SSq();
WPP_SF_Sd();
WPP_SF_Sqd();
WPP_SF__guid_q();
WPP_SF_d();
WPP_SF_dD();
WPP_SF_dd();
WPP_SF_dq();
WPP_SF_l();
WPP_SF_l_guid_q();
WPP_SF_ll();
WPP_SF_lld();
WPP_SF_lllq();
WPP_SF_q();
WPP_SF_qD();
WPP_SF_qDdd();
WPP_SF_qDdq();
WPP_SF_qS();
WPP_SF_qSS();
WPP_SF_qSSDq();
WPP_SF_qSSDqq();
WPP_SF_qSSdDdSdS();
WPP_SF_qSSq();
WPP_SF_qSSqSSSS();
WPP_SF_qSdSdl();
WPP_SF_qSl();
WPP_SF_qSq();
WPP_SF_q_guid__guid_q();
WPP_SF_q_guid_dqqq();
WPP_SF_q_guid_q();
WPP_SF_qd();
WPP_SF_qdD();
WPP_SF_qdDS();
WPP_SF_qdI();
WPP_SF_qdS();
WPP_SF_qdSS();
WPP_SF_qdSSq();
WPP_SF_qdSd();
WPP_SF_qdSdS();
WPP_SF_qdd();
WPP_SF_qddd();
WPP_SF_qdddd();
WPP_SF_qddq();
WPP_SF_qdl();
WPP_SF_qdq();
WPP_SF_qdqS();
WPP_SF_qdqdq();
WPP_SF_qdqq();
WPP_SF_qidq();
WPP_SF_qiq();
WPP_SF_qllq();
WPP_SF_qllqq();
WPP_SF_qq();
WPP_SF_qqDdqd();
WPP_SF_qqDq();
WPP_SF_qqDqqDq();
WPP_SF_qqI();
WPP_SF_qqIqq();
WPP_SF_qqSSSSDq();
WPP_SF_qqd();
WPP_SF_qqdl();
WPP_SF_qqdq();
WPP_SF_qqi();
WPP_SF_qqq();
WPP_SF_qqqq();
WPP_SF_qqqqqD();
WPP_SF_s();
WSStringBuffer::WSStringBuffer();
WSStringBuffer::_collapsingAppend();
WSStringBuffer::_normalizingAppend();
WSStringBuffer::append();
WSStringBuffer::clear();
WSStringBuffer::ensureCapacity();
WSStringBuffer::init();
WSStringBuffer::normalize();
WSStringBuffer::toString();
WSStringBuffer::~WSStringBuffer();
WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >();
WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >();
WaitForCompletionAndGetResults<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64>,Windows::Storage::IStorageFile * __ptr64>();
WaitForCompletionAndGetResults<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Storage::Streams::IRandomAccessStream * __ptr64>();
WaitForCompletionAndGetResults<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Storage::Streams::IRandomAccessStream>();
WhitespaceCheck::getAdjacentText();
WhitespaceCheck::getElement();
WhitespaceCheck::shouldStripNode();
WhitespaceCheck::shouldStripText();
WhitespaceCheck::xmlSpacePreserve();
WhitespaceRules::_compare();
WhitespaceRules::_getRelativeSpecificity();
WhitespaceRules::`scalar deleting destructor'();
WhitespaceRules::addRule();
WhitespaceRules::processRules();
WhitespaceRules::shouldStripWhitespace();
Windows::Foundation::Collections::Detail::_Cleanup<Windows::Data::Xml::Dom::IXmlNode,unsigned int>();
Windows::Foundation::Collections::Detail::_IteratorGetMany<Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode * __ptr64,1>,Windows::Data::Xml::Dom::IXmlNode * __ptr64>();
Windows::Foundation::Collections::Detail::_VectorGetMany<Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode * __ptr64,1>,Windows::Data::Xml::Dom::IXmlNode * __ptr64>();
Windows::Foundation::Collections::IIterator_impl<Windows::Data::Xml::Dom::IXmlNode * __ptr64,1>::GetMany();
Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Xml::Dom::IXmlNode * __ptr64,1>::GetMany();
Windows::Foundation::Collections::Internal::VectorIndexOf<DOMChildList,Windows::Data::Xml::Dom::IXmlNode * __ptr64,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >();
Windows::Foundation::Collections::Internal::VectorIndexOf<DOMNamedNodeMapList,Windows::Data::Xml::Dom::IXmlNode * __ptr64,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >();
Windows::Foundation::Collections::Internal::VectorIndexOf<QuerySelection,Windows::Data::Xml::Dom::IXmlNode * __ptr64,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<Windows::Data::Xml::Dom::IXmlNode * __ptr64>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<Windows::Data::Xml::Dom::IXmlNode * __ptr64> >();
Windows::Foundation::GetActivationFactory<Microsoft::WRL::ComPtr<Windows::Storage::IStorageFileStatics> >();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckExecutionEnvironment();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::FireCompletion();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::GetOnComplete();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::PutOnComplete();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`scalar deleting destructor'();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::v_MustDoNoWake();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&SaveToFileAsyncOperationName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::v_ShouldSetNoWake();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::CheckExecutionEnvironment();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::FireCompletion();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::GetOnComplete();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::PutOnComplete();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::`scalar deleting destructor'();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::v_MustDoNoWake();
Windows::Internal::AsyncBaseFTM<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64>,1,Microsoft::WRL::AsyncCausalityOptions<0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::v_ShouldSetNoWake();
Windows::Internal::GitPtrSupportsAgile<Windows::Foundation::IAsyncActionCompletedHandler>::CopyLocal();
Windows::Internal::GitPtrSupportsAgile<Windows::Foundation::IAsyncActionCompletedHandler>::Initialize<Windows::Foundation::IAsyncActionCompletedHandler>();
Windows::Internal::GitPtrSupportsAgile<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >::CopyLocal();
Windows::Internal::GitPtrSupportsAgile<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >::Initialize<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Data::Xml::Dom::XmlDocument * __ptr64> >();
Windows::Internal::String::Concat();
Windows::Internal::String::Initialize();
Windows::Internal::String::Release();
Windows::Internal::StringReference::StringReference<13>();
Windows::Internal::StringReference::StringReference<28>();
Windows::Internal::StringReference::StringReference<2>();
WinrtBaseStream::QueryInterface();
WinrtBaseStream::openStorageFile();
WinrtFileStream::WinrtFileStream();
WinrtFileStream::`scalar deleting destructor'();
WinrtFileStream::deferedOpen();
WinrtFileStream::openFile();
WinrtUriStream::WinrtUriStream();
WinrtUriStream::`scalar deleting destructor'();
WinrtUriStream::deferedOpen();
WppCleanupUm();
WppControlCallback();
WriteAttribute();
WriteNameToBuf();
XAttributesImpl::addText();
XAttributesImpl::beginAttribute();
XAttributesImpl::clearAttributes();
XAttributesImpl::close();
XAttributesImpl::nextAttribute();
XAttributesImpl::reset();
XCode::ModeMatcher::ModeMatcher();
XCode::ModeMatcher::`vector deleting destructor'();
XCode::ModeMatcher::~ModeMatcher();
XCode::New();
XCode::XCode();
XCode::`scalar deleting destructor'();
XCode::`vector deleting destructor'();
XCode::getModeMatcher();
XCodeGen::anc();
XCodeGen::attout_s();
XCodeGen::beginFrame();
XCodeGen::beginLoop();
XCodeGen::booleanBranch();
XCodeGen::booleanEnd();
XCodeGen::cache();
XCodeGen::cacherev();
XCodeGen::callext();
XCodeGen::ch();
XCodeGen::ch_b();
XCodeGen::ch_s();
XCodeGen::chchk();
XCodeGen::chkns();
XCodeGen::cnt();
XCodeGen::cntrev();
XCodeGen::conv_ns();
XCodeGen::cpyof();
XCodeGen::ctxt();
XCodeGen::desc();
XCodeGen::descchk();
XCodeGen::elout();
XCodeGen::elout_s();
XCodeGen::endFrame();
XCodeGen::endIf();
XCodeGen::endLoop();
XCodeGen::endParams();
XCodeGen::ensureCapacity();
XCodeGen::fixupBranches();
XCodeGen::fixupLoop();
XCodeGen::fltr();
XCodeGen::fltrmrg();
XCodeGen::fltrrng();
XCodeGen::foll();
XCodeGen::follsib();
XCodeGen::frag_b();
XCodeGen::ifTest();
XCodeGen::last();
XCodeGen::ldc_b();
XCodeGen::ldc_i();
XCodeGen::ldc_o();
XCodeGen::ldc_r8();
XCodeGen::ldc_rtf();
XCodeGen::ldc_s();
XCodeGen::ldgbl();
XCodeGen::ldloc();
XCodeGen::ldns();
XCodeGen::match();
XCodeGen::newXCodePage();
XCodeGen::nmsp();
XCodeGen::nodeSetOut();
XCodeGen::pop();
XCodeGen::pos();
XCodeGen::pre();
XCodeGen::presib();
XCodeGen::presibchk();
XCodeGen::prnt();
XCodeGen::prntchk();
XCodeGen::reserveCall();
XCodeGen::self();
XCodeGen::sngl();
XCodeGen::stloc();
XCodeGen::stmod();
XCodeGen::throw_();
XCodeGen::txtout();
XCodeGen::txtout_s();
XCompare::compAsFirst();
XCompare::compAsScalar();
XCompare::compAsSecond();
XCompare::compAsStrings();
XCompare::compAssert();
XCompare::compAssert2();
XCompare::compBoolBool();
XCompare::compBoolNodeSet();
XCompare::compNodeSetBool();
XCompare::compNodeSetScalar();
XCompare::compNodeSets();
XCompare::compR8R8();
XCompare::compScalarNodeSet();
XCompare::compStringString();
XCompare::compStringStringLex();
XConvert::bstrToString();
XConvert::intToString();
XConvert::nodeSetToBoolean();
XConvert::nodeSetToR8();
XConvert::nodeSetToString();
XConvert::r8ToInt();
XConvert::r8ToString();
XConvert::variantToBoolean();
XConvert::variantToR8();
XConvert::variantToString();
XConvert::variantToType();
XEngine::CurrentExprEval::evaluate();
XEngine::CurrentExprEval::getCurrentNodeSet();
XEngine::GlobalExprEval::evaluate();
XEngine::GlobalExprEval::getCurrentNodeSet();
XEngine::New();
XEngine::XEngine();
XEngine::`scalar deleting destructor'();
XEngine::abs();
XEngine::add();
XEngine::anc();
XEngine::apply();
XEngine::attout();
XEngine::attout_b();
XEngine::attout_b_nm();
XEngine::attout_e();
XEngine::attout_e_nm();
XEngine::attout_s();
XEngine::beq();
XEngine::bge();
XEngine::bgt();
XEngine::ble();
XEngine::blt();
XEngine::bne();
XEngine::br();
XEngine::brarg();
XEngine::brfalse();
XEngine::brif();
XEngine::brns();
XEngine::brtrue();
XEngine::builtInTemplate();
XEngine::cache();
XEngine::cacherev();
XEngine::call();
XEngine::callext();
XEngine::ceq();
XEngine::cge();
XEngine::cgt();
XEngine::ch();
XEngine::ch_b();
XEngine::ch_s();
XEngine::chchk();
XEngine::checkStack();
XEngine::chkns();
XEngine::chkrtf();
XEngine::cle();
XEngine::clt();
XEngine::cmtout_b();
XEngine::cmtout_e();
XEngine::cne();
XEngine::cnt();
XEngine::cntrev();
XEngine::comp();
XEngine::conv_b();
XEngine::conv_ns();
XEngine::conv_r8();
XEngine::conv_s();
XEngine::cpy_b();
XEngine::cpy_e();
XEngine::cpyof();
XEngine::createStreamWriter();
XEngine::ctxt();
XEngine::desc();
XEngine::descchk();
XEngine::div();
XEngine::elout();
XEngine::elout_b();
XEngine::elout_b_nm();
XEngine::elout_e();
XEngine::elout_e_nm();
XEngine::elout_s();
XEngine::evaluate();
XEngine::evaluateExpression();
XEngine::execute();
XEngine::fltr();
XEngine::fltrmrg();
XEngine::fltrrng();
XEngine::foll();
XEngine::follsib();
XEngine::frag_b();
XEngine::frag_e();
XEngine::frame();
XEngine::frame_empty();
XEngine::initgbl();
XEngine::last();
XEngine::ldc_b();
XEngine::ldc_i();
XEngine::ldc_o();
XEngine::ldc_r8();
XEngine::ldc_rtf();
XEngine::ldc_s();
XEngine::ldftn();
XEngine::ldgbl();
XEngine::ldloc();
XEngine::ldloca();
XEngine::ldmod();
XEngine::ldns();
XEngine::locldns();
XEngine::locstns();
XEngine::match();
XEngine::match_tmpl();
XEngine::mul();
XEngine::neg();
XEngine::nextns();
XEngine::nmsp();
XEngine::noent_();
XEngine::noshortcut_();
XEngine::nsout_nm();
XEngine::piout_b();
XEngine::piout_b_nm();
XEngine::piout_e();
XEngine::piout_e_nm();
XEngine::pop();
XEngine::pos();
XEngine::pre();
XEngine::presib();
XEngine::presibchk();
XEngine::prnt();
XEngine::prntchk();
XEngine::recycle();
XEngine::rem();
XEngine::reset();
XEngine::ret();
XEngine::self();
XEngine::selfor_();
XEngine::sngl();
XEngine::sort();
XEngine::stloc();
XEngine::stmod();
XEngine::stns();
XEngine::sub();
XEngine::templateMatch();
XEngine::throw_();
XEngine::txtout();
XEngine::txtout_ctxt();
XEngine::txtout_s();
XEngine::un();
XEngine::wsout();
XFunctions::addExtensionFunctions();
XFunctions::average();
XFunctions::ceiling();
XFunctions::concat();
XFunctions::contains();
XFunctions::convertToCaseOrder();
XFunctions::convertToCompOptions();
XFunctions::convertToDataType();
XFunctions::convertToGroupSeparator();
XFunctions::convertToGroupSize();
XFunctions::convertToLCID();
XFunctions::convertToLetterValue();
XFunctions::convertToSortOrder();
XFunctions::count();
XFunctions::crackQName();
XFunctions::createNameDef();
XFunctions::documentOneArg();
XFunctions::documentTwoArgs();
XFunctions::elementAvailable();
XFunctions::executeExtensionFunction();
XFunctions::expressionResult();
XFunctions::fillFormat();
XFunctions::floor();
XFunctions::formatDate();
XFunctions::formatDateTime();
XFunctions::formatNumberDynamic();
XFunctions::formatNumberMSXSL();
XFunctions::formatNumberStatic();
XFunctions::formatTime();
XFunctions::functionAvailable();
XFunctions::generateID();
XFunctions::id();
XFunctions::isExtensionFunction();
XFunctions::key();
XFunctions::lang();
XFunctions::localName();
XFunctions::localNameMSXSL();
XFunctions::name();
XFunctions::namespaceURI();
XFunctions::namespaceURIMSXSL();
XFunctions::normalizeSpace();
XFunctions::numberMSXSL();
XFunctions::numberingCount();
XFunctions::numberingValue();
XFunctions::reset();
XFunctions::resolveFormatSymbols();
XFunctions::resolveNCName();
XFunctions::resolveQName();
XFunctions::reuseStringBuffer();
XFunctions::round();
XFunctions::schemaAvailable();
XFunctions::startsWith();
XFunctions::stringCompare();
XFunctions::stringLength();
XFunctions::substring();
XFunctions::substringAfter();
XFunctions::substringBefore();
XFunctions::sum();
XFunctions::systemProperty();
XFunctions::translate();
XFunctions::typeIs();
XFunctions::typeLocalName();
XFunctions::typeNamespaceURI();
XFunctions::typeQName();
XFunctions::unparsedEntityURI();
XFunctions::utc();
XFunctions::writeDatePart();
XMLDECLParser::XMLDECLParser();
XMLDECLParser::`scalar deleting destructor'();
XMLDECLParser::parseAttributes();
XMLDECLParser::parsedAttribute();
XMLDECLParser::unhandledNodeInfo();
XMLDECLParser::~XMLDECLParser();
XMLHttp2::Abort();
XMLHttp2::AddRef();
XMLHttp2::ApplySetting();
XMLHttp2::CompleteDelivery();
XMLHttp2::CreateInstance();
XMLHttp2::Flush();
XMLHttp2::GetAllResponseHeaders();
XMLHttp2::GetCookie();
XMLHttp2::GetIids();
XMLHttp2::GetResponseHeader();
XMLHttp2::GetRuntimeClassName();
XMLHttp2::GetTrustLevel();
XMLHttp2::Initialize();
XMLHttp2::Open();
XMLHttp2::QueryInterface();
XMLHttp2::QuerySetting();
XMLHttp2::Release();
XMLHttp2::Send();
XMLHttp2::SetClientCertificate();
XMLHttp2::SetCookie();
XMLHttp2::SetCustomResponseStream();
XMLHttp2::SetProperty();
XMLHttp2::SetRequestHeader();
XMLHttp2::_Abort();
XMLHttp2::_ApplySetting();
XMLHttp2::_CompleteDelivery();
XMLHttp2::_CreateInstance();
XMLHttp2::_Flush();
XMLHttp2::_GetAllResponseHeaders();
XMLHttp2::_GetCookie();
XMLHttp2::_GetIids();
XMLHttp2::_GetResponseHeader();
XMLHttp2::_GetRuntimeClassName();
XMLHttp2::_GetTrustLevel();
XMLHttp2::_LockedRelease();
XMLHttp2::_Open();
XMLHttp2::_QuerySetting();
XMLHttp2::_Send();
XMLHttp2::_SetClientCert();
XMLHttp2::_SetCookie();
XMLHttp2::_SetCustomResponseStream();
XMLHttp2::_SetProperty();
XMLHttp2::_SetRequestHeader();
XMLHttp2::`scalar deleting destructor'();
XMLHttp::AbortEx();
XMLHttp::AddRef();
XMLHttp::ApplySetting();
XMLHttp::CompleteDelivery();
XMLHttp::CreateInstance();
XMLHttp::Flush();
XMLHttp::GetIDsOfNames();
XMLHttp::GetTypeInfo();
XMLHttp::GetTypeInfoCount();
XMLHttp::Invoke();
XMLHttp::QueryInterface();
XMLHttp::QueryService();
XMLHttp::QuerySetting();
XMLHttp::Release();
XMLHttp::SendContinue();
XMLHttp::Unlock();
XMLHttp::XMLHttp();
XMLHttp::_invoke();
XMLHttp::_setErrorInfo();
XMLHttp::`scalar deleting destructor'();
XMLHttp::`vector deleting destructor'();
XMLHttp::abort();
XMLHttp::createXMLDocument();
XMLHttp::getAllResponseHeaders();
XMLHttp::getCookie();
XMLHttp::getOption();
XMLHttp::getResponseHeader();
XMLHttp::getRootControl();
XMLHttp::get_baseURL();
XMLHttp::get_readyState();
XMLHttp::get_responseBody();
XMLHttp::get_responseStream();
XMLHttp::get_responseText();
XMLHttp::get_responseXML();
XMLHttp::get_secureBaseURL();
XMLHttp::get_securityManager();
XMLHttp::get_status();
XMLHttp::get_statusText();
XMLHttp::get_window();
XMLHttp::isHostSecure();
XMLHttp::isSecure();
XMLHttp::open();
XMLHttp::put_onreadystatechange();
XMLHttp::send();
XMLHttp::setClientCert();
XMLHttp::setCookie();
XMLHttp::setCustomStream();
XMLHttp::setOption();
XMLHttp::setProperty();
XMLHttp::setProxy();
XMLHttp::setProxyCredentials();
XMLHttp::setRequestHeader();
XMLHttp::setStatusCallback();
XMLHttp::setTimeouts();
XMLHttp::waitForResponse();
XMLHttp::~XMLHttp();
XMLNames::classExit();
XMLNames::classInit();
XMLOutputHelper::EncodingError();
XMLOutputHelper::New();
XMLOutputHelper::XMLOutputHelper();
XMLOutputHelper::`scalar deleting destructor'();
XMLOutputHelper::`vector deleting destructor'();
XMLOutputHelper::attributeText();
XMLOutputHelper::attributeTextConformant();
XMLOutputHelper::attributeTextNoWhitespaceEntitization();
XMLOutputHelper::beginAttribute();
XMLOutputHelper::beginCData();
XMLOutputHelper::beginComment();
XMLOutputHelper::beginDocType();
XMLOutputHelper::beginElement();
XMLOutputHelper::beginPI();
XMLOutputHelper::cdataText();
XMLOutputHelper::commentText();
XMLOutputHelper::docTypeIdentifiers();
XMLOutputHelper::endComment();
XMLOutputHelper::endElement();
XMLOutputHelper::entitizeUniChar();
XMLOutputHelper::init();
XMLOutputHelper::markBeginText();
XMLOutputHelper::markEndText();
XMLOutputHelper::onHardWrite();
XMLOutputHelper::pcdataText();
XMLOutputHelper::pcdataTextNoEntities();
XMLOutputHelper::piText();
XMLOutputHelper::writeName();
XMLOutputHelper::xmlDecl();
XMLParser::Abort();
XMLParser::AddRef();
XMLParser::AllocNodeInfo();
XMLParser::CheckXmlSize_();
XMLParser::CopyText();
XMLParser::ExpandEntity();
XMLParser::FindDownload();
XMLParser::GetAbsolutePosition();
XMLParser::GetErrorInfo();
XMLParser::GetFactory();
XMLParser::GetFlags();
XMLParser::GetLastError();
XMLParser::GetLineBuffer();
XMLParser::GetLineNumber();
XMLParser::GetLinePosition();
XMLParser::GetMaxXmlSize();
XMLParser::GetParserState();
XMLParser::GetProperty();
XMLParser::GetRoot();
XMLParser::GetSecureBaseURL();
XMLParser::GetURL();
XMLParser::GrowBuffer();
XMLParser::GrowNodeInfo();
XMLParser::HandleData();
XMLParser::HashCheckDupAttributes();
XMLParser::Load();
XMLParser::LoadDTD();
XMLParser::LoadEntity();
XMLParser::New();
XMLParser::ParseEntity();
XMLParser::PopDownload();
XMLParser::PopNodeInfo();
XMLParser::PushData();
XMLParser::PushDownload();
XMLParser::PushStream();
XMLParser::PushTokenizer();
XMLParser::PushURL();
XMLParser::QueryInterface();
XMLParser::Release();
XMLParser::ReportUnclosedTags();
XMLParser::Reset();
XMLParser::Run();
XMLParser::SetBaseURL();
XMLParser::SetCharset();
XMLParser::SetCurrentURL();
XMLParser::SetFactory();
XMLParser::SetFlags();
XMLParser::SetInput();
XMLParser::SetMaxXmlSize();
XMLParser::SetProperty();
XMLParser::SetRoot();
XMLParser::SetSecureBaseURL();
XMLParser::SetURL();
XMLParser::SimpleCheckDupAttributes();
XMLParser::Suspend();
XMLParser::XMLParser();
XMLParser::`scalar deleting destructor'();
XMLParser::getSecureBaseURL();
XMLParser::getURLStreamFlags();
XMLParser::init();
XMLParser::pop();
XMLParser::popAttributes();
XMLParser::popDTDAttribute();
XMLParser::push();
XMLParser::pushAttributeValue();
XMLParser::~XMLParser();
XMLSourceWrapper::getLineNumber();
XMLSourceWrapper::getLinePosition();
XMLSourceWrapper::getText();
XMLStream::AdjustStateForError();
XMLStream::AdvanceTo();
XMLStream::AppendData();
XMLStream::ContinueDTDAdvance();
XMLStream::DTDAdvance();
XMLStream::ErrorCallback();
XMLStream::GetLineBuffer();
XMLStream::GetNextTokenInDTD();
XMLStream::InsertData();
XMLStream::PopStream();
XMLStream::PreEntityText();
XMLStream::PushChar();
XMLStream::PushStream();
XMLStream::ScanDecimalDigits();
XMLStream::ScanHexDigits();
XMLStream::XMLStream();
XMLStream::_PushChar();
XMLStream::_init();
XMLStream::`scalar deleting destructor'();
XMLStream::`vector deleting destructor'();
XMLStream::firstAdvance();
XMLStream::getCurrentStream();
XMLStream::init();
XMLStream::parseAttrValue();
XMLStream::parseAttributes();
XMLStream::parseCData();
XMLStream::parseComment();
XMLStream::parseCondSect();
XMLStream::parseContent();
XMLStream::parseDTDContent();
XMLStream::parseElement();
XMLStream::parseEndTag();
XMLStream::parseEntityRef();
XMLStream::parseEquals();
XMLStream::parseError();
XMLStream::parseExternalIdValue();
XMLStream::parseIgnoreSect();
XMLStream::parseIncludeSect();
XMLStream::parseNMString();
XMLStream::parseName();
XMLStream::parseNmToken();
XMLStream::parsePCData();
XMLStream::parsePEDecl();
XMLStream::parsePERef();
XMLStream::parsePI();
XMLStream::parseString();
XMLStream::parseTable();
XMLStream::pop();
XMLStream::push();
XMLStream::pushTable();
XMLStream::skipInternalSubset();
XMLStream::skipWhiteSpace();
XMLStream::switchTo();
XMLStream::switchToTable();
XMLStream::~XMLStream();
XMLValidator::New();
XMLValidator::ValidateElement();
XMLValidator::isXSD();
XMLWriter::New();
XMLWriter::XMLWriter();
XMLWriter::`scalar deleting destructor'();
XMLWriter::`vector deleting destructor'();
XMLWriter::addWhitespace();
XMLWriter::beginChildren();
XMLWriter::beginComment();
XMLWriter::beginElement();
XMLWriter::beginPI();
XMLWriter::close();
XMLWriter::closeOutput();
XMLWriter::endComment();
XMLWriter::endElement();
XMLWriter::endPI();
XMLWriter::onError();
XMLWriter::open();
XMLWriter::outputAttributes();
XMLWriter::prefixMapping();
XMLWriter::stringText();
XMLWriter::wcharText();
XPAttrNav<WhitespaceCheck>::_trampoline__cacheInScopeNamespaces();
XPAttrNav<WhitespaceCheck>::_trampoline__getAdjacentText();
XPAttrNav<WhitespaceCheck>::_trampoline__getFlag();
XPAttrNav<WhitespaceCheck>::_trampoline__getNodeLocation();
XPAttrNav<WhitespaceCheck>::_trampoline__getParent();
XPAttrNav<WhitespaceCheck>::_trampoline__getType();
XPAttrNav<WhitespaceCheck>::_trampoline__isAdjacentText();
XPAttrNav<WhitespaceCheck>::_trampoline__moveToAttribute();
XPAttrNav<WhitespaceCheck>::_trampoline__moveToChild();
XPAttrNav<WhitespaceCheck>::_trampoline__moveToNamespace();
XPAttrNav<WhitespaceCheck>::_trampoline__moveToParent();
XPAttrNav<WhitespaceCheck>::_trampoline__moveToSibling();
XPAttrNav<WhitespaceCheck>::_trampoline__releaseHandle();
XPAttrNav<WhitespaceCheck>::_trampoline__skipToAttribute();
XPAttrNav<WhitespaceCheck>::_trampoline__skipToChild();
XPAttrNav<WhitespaceCheck>::_trampoline__skipToDescendant();
XPAttrNav<WhitespaceCheck>::_trampoline__skipToSibling();
XPAttrNav<WhitespaceCheck>::_trampoline__toHandle();
XPAttrNav<WhitespaceCheck>::_trampoline__toXPNav();
XPAttrNav<WhitespaceCheck>::_trampoline__toggleWhitespaceCheck();
XPAttrNav<WhitespacePreserve>::_trampoline__cacheInScopeNamespaces();
XPAttrNav<WhitespacePreserve>::_trampoline__getAdjacentText();
XPAttrNav<WhitespacePreserve>::_trampoline__getFlag();
XPAttrNav<WhitespacePreserve>::_trampoline__getNodeLocation();
XPAttrNav<WhitespacePreserve>::_trampoline__getParent();
XPAttrNav<WhitespacePreserve>::_trampoline__getType();
XPAttrNav<WhitespacePreserve>::_trampoline__isAdjacentText();
XPAttrNav<WhitespacePreserve>::_trampoline__moveToAttribute();
XPAttrNav<WhitespacePreserve>::_trampoline__moveToChild();
XPAttrNav<WhitespacePreserve>::_trampoline__moveToNamespace();
XPAttrNav<WhitespacePreserve>::_trampoline__moveToParent();
XPAttrNav<WhitespacePreserve>::_trampoline__moveToSibling();
XPAttrNav<WhitespacePreserve>::_trampoline__releaseHandle();
XPAttrNav<WhitespacePreserve>::_trampoline__skipToAttribute();
XPAttrNav<WhitespacePreserve>::_trampoline__skipToChild();
XPAttrNav<WhitespacePreserve>::_trampoline__skipToDescendant();
XPAttrNav<WhitespacePreserve>::_trampoline__skipToSibling();
XPAttrNav<WhitespacePreserve>::_trampoline__toHandle();
XPAttrNav<WhitespacePreserve>::_trampoline__toXPNav();
XPAttrNav<WhitespacePreserve>::_trampoline__toggleWhitespaceCheck();
XPChildNav<WhitespaceCheck>::_cacheInScopeNamespaces();
XPChildNav<WhitespaceCheck>::_getText();
XPChildNav<WhitespaceCheck>::_getUniqueID();
XPChildNav<WhitespaceCheck>::_isInSubtree();
XPChildNav<WhitespaceCheck>::_moveToChild();
XPChildNav<WhitespaceCheck>::_moveToSibling();
XPChildNav<WhitespaceCheck>::_skipToChild();
XPChildNav<WhitespaceCheck>::_skipToDescendant();
XPChildNav<WhitespaceCheck>::_skipToSibling();
XPChildNav<WhitespaceCheck>::_trampoline__cacheInScopeNamespaces();
XPChildNav<WhitespaceCheck>::_trampoline__compareLocation();
XPChildNav<WhitespaceCheck>::_trampoline__copyHandle();
XPChildNav<WhitespaceCheck>::_trampoline__getAdjacentText();
XPChildNav<WhitespaceCheck>::_trampoline__getBaseURI();
XPChildNav<WhitespaceCheck>::_trampoline__getDocument();
XPChildNav<WhitespaceCheck>::_trampoline__getFlag();
XPChildNav<WhitespaceCheck>::_trampoline__getHandleDocument();
XPChildNav<WhitespaceCheck>::_trampoline__getName();
XPChildNav<WhitespaceCheck>::_trampoline__getNavType();
XPChildNav<WhitespaceCheck>::_trampoline__getNodeLocation();
XPChildNav<WhitespaceCheck>::_trampoline__getParent();
XPChildNav<WhitespaceCheck>::_trampoline__getText();
XPChildNav<WhitespaceCheck>::_trampoline__getType();
XPChildNav<WhitespaceCheck>::_trampoline__getUniqueID();
XPChildNav<WhitespaceCheck>::_trampoline__isAdjacentText();
XPChildNav<WhitespaceCheck>::_trampoline__isInSubtree();
XPChildNav<WhitespaceCheck>::_trampoline__isSameLocation();
XPChildNav<WhitespaceCheck>::_trampoline__moveToAttribute();
XPChildNav<WhitespaceCheck>::_trampoline__moveToChild();
XPChildNav<WhitespaceCheck>::_trampoline__moveToNamespace();
XPChildNav<WhitespaceCheck>::_trampoline__moveToParent();
XPChildNav<WhitespaceCheck>::_trampoline__moveToSibling();
XPChildNav<WhitespaceCheck>::_trampoline__releaseHandle();
XPChildNav<WhitespaceCheck>::_trampoline__setContext();
XPChildNav<WhitespaceCheck>::_trampoline__skipToAttribute();
XPChildNav<WhitespaceCheck>::_trampoline__skipToChild();
XPChildNav<WhitespaceCheck>::_trampoline__skipToDescendant();
XPChildNav<WhitespaceCheck>::_trampoline__skipToSibling();
XPChildNav<WhitespaceCheck>::_trampoline__toHandle();
XPChildNav<WhitespaceCheck>::_trampoline__toNode();
XPChildNav<WhitespaceCheck>::_trampoline__toXPNav();
XPChildNav<WhitespaceCheck>::_trampoline__toggleWhitespaceCheck();
XPChildNav<WhitespacePreserve>::_cacheInScopeNamespaces();
XPChildNav<WhitespacePreserve>::_getText();
XPChildNav<WhitespacePreserve>::_getUniqueID();
XPChildNav<WhitespacePreserve>::_isInSubtree();
XPChildNav<WhitespacePreserve>::_moveToChild();
XPChildNav<WhitespacePreserve>::_skipToDescendant();
XPChildNav<WhitespacePreserve>::_trampoline__cacheInScopeNamespaces();
XPChildNav<WhitespacePreserve>::_trampoline__compareLocation();
XPChildNav<WhitespacePreserve>::_trampoline__copyHandle();
XPChildNav<WhitespacePreserve>::_trampoline__getAdjacentText();
XPChildNav<WhitespacePreserve>::_trampoline__getBaseURI();
XPChildNav<WhitespacePreserve>::_trampoline__getDocument();
XPChildNav<WhitespacePreserve>::_trampoline__getFlag();
XPChildNav<WhitespacePreserve>::_trampoline__getHandleDocument();
XPChildNav<WhitespacePreserve>::_trampoline__getName();
XPChildNav<WhitespacePreserve>::_trampoline__getNavType();
XPChildNav<WhitespacePreserve>::_trampoline__getNodeLocation();
XPChildNav<WhitespacePreserve>::_trampoline__getParent();
XPChildNav<WhitespacePreserve>::_trampoline__getText();
XPChildNav<WhitespacePreserve>::_trampoline__getType();
XPChildNav<WhitespacePreserve>::_trampoline__getUniqueID();
XPChildNav<WhitespacePreserve>::_trampoline__isAdjacentText();
XPChildNav<WhitespacePreserve>::_trampoline__isInSubtree();
XPChildNav<WhitespacePreserve>::_trampoline__isSameLocation();
XPChildNav<WhitespacePreserve>::_trampoline__moveToAttribute();
XPChildNav<WhitespacePreserve>::_trampoline__moveToChild();
XPChildNav<WhitespacePreserve>::_trampoline__moveToNamespace();
XPChildNav<WhitespacePreserve>::_trampoline__moveToParent();
XPChildNav<WhitespacePreserve>::_trampoline__moveToSibling();
XPChildNav<WhitespacePreserve>::_trampoline__releaseHandle();
XPChildNav<WhitespacePreserve>::_trampoline__setContext();
XPChildNav<WhitespacePreserve>::_trampoline__skipToAttribute();
XPChildNav<WhitespacePreserve>::_trampoline__skipToChild();
XPChildNav<WhitespacePreserve>::_trampoline__skipToDescendant();
XPChildNav<WhitespacePreserve>::_trampoline__skipToSibling();
XPChildNav<WhitespacePreserve>::_trampoline__toHandle();
XPChildNav<WhitespacePreserve>::_trampoline__toNode();
XPChildNav<WhitespacePreserve>::_trampoline__toXPNav();
XPChildNav<WhitespacePreserve>::_trampoline__toggleWhitespaceCheck();
XPNavHandle::operator=();
XPNmspNav<WhitespaceCheck>::_trampoline__getNodeLocation();
XPNmspNav<WhitespaceCheck>::_trampoline__moveToSibling();
XPNmspNav<WhitespaceCheck>::_trampoline__toggleWhitespaceCheck();
XPNmspNav<WhitespacePreserve>::_trampoline__getNodeLocation();
XPNmspNav<WhitespacePreserve>::_trampoline__moveToSibling();
XPNmspNav<WhitespacePreserve>::_trampoline__toggleWhitespaceCheck();
XPNodeNav::create();
XPNullNav::_trampoline__cacheInScopeNamespaces();
XPNullNav::_trampoline__compareLocation();
XPNullNav::_trampoline__copyHandle();
XPNullNav::_trampoline__getBaseURI();
XPNullNav::_trampoline__getDocument();
XPNullNav::_trampoline__getFlag();
XPNullNav::_trampoline__getHandleDocument();
XPNullNav::_trampoline__getName();
XPNullNav::_trampoline__getNavType();
XPNullNav::_trampoline__getText();
XPNullNav::_trampoline__getType();
XPNullNav::_trampoline__getUniqueID();
XPNullNav::_trampoline__isInSubtree();
XPNullNav::_trampoline__isSameLocation();
XPNullNav::_trampoline__moveToAttribute();
XPNullNav::_trampoline__moveToChild();
XPNullNav::_trampoline__moveToNamespace();
XPNullNav::_trampoline__moveToParent();
XPNullNav::_trampoline__moveToSibling();
XPNullNav::_trampoline__releaseHandle();
XPNullNav::_trampoline__setContext();
XPNullNav::_trampoline__skipToAttribute();
XPNullNav::_trampoline__skipToChild();
XPNullNav::_trampoline__skipToDescendant();
XPNullNav::_trampoline__skipToSibling();
XPNullNav::_trampoline__toHandle();
XPNullNav::_trampoline__toNode();
XPNullNav::_trampoline__toXPNav();
XPParser::advance();
XPParser::concatOperands();
XPParser::constructAxisQuery();
XPParser::errorMsg();
XPParser::getQuery();
XPParser::lookupAxis();
XPParser::lookupFunction();
XPParser::nextToken();
XPParser::parse();
XPParser::parseAVT();
XPParser::parseAdditiveExpr();
XPParser::parseAndExpr();
XPParser::parseBasis();
XPParser::parseEqualityExpr();
XPParser::parseExpr();
XPParser::parseFilterExpr();
XPParser::parseFunctionCall();
XPParser::parseIdKeyPattern();
XPParser::parseLocationPath();
XPParser::parseLocationPathPattern();
XPParser::parseMultiplicativeExpr();
XPParser::parseNodeTest();
XPParser::parsePathExpr();
XPParser::parsePattern();
XPParser::parsePredicate();
XPParser::parsePredicates();
XPParser::parsePrimaryExpr();
XPParser::parseRelationalExpr();
XPParser::parseRelativeLocationPath();
XPParser::parseRelativeLocationPathTail();
XPParser::parseStep();
XPParser::parseUnaryExpr();
XPParser::parseUnionExpr();
XPParser::parseXSDBasis();
XPParser::parseXSDPath();
XPParser::parseXSDPattern();
XPParser::parseXSDStep();
XPParser::prepareToParse();
XPParser::scanName();
XPParser::scanNumber();
XPParser::scanString();
XPParser::skipSpace();
XPParser::storeE();
XPParser::storeError();
XPParser::throwError();
XPParser::tokenChars();
XPParser::tokenError();
XPParser::tokenIsKeyword();
XPParser::tokenString();
XPSingleTextNav<WhitespaceCheck>::_trampoline__cacheInScopeNamespaces();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getAdjacentText();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getFlag();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getName();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getNodeLocation();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getParent();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getText();
XPSingleTextNav<WhitespaceCheck>::_trampoline__getType();
XPSingleTextNav<WhitespaceCheck>::_trampoline__isAdjacentText();
XPSingleTextNav<WhitespaceCheck>::_trampoline__moveToAttribute();
XPSingleTextNav<WhitespaceCheck>::_trampoline__moveToChild();
XPSingleTextNav<WhitespaceCheck>::_trampoline__moveToNamespace();
XPSingleTextNav<WhitespaceCheck>::_trampoline__moveToParent();
XPSingleTextNav<WhitespaceCheck>::_trampoline__moveToSibling();
XPSingleTextNav<WhitespaceCheck>::_trampoline__releaseHandle();
XPSingleTextNav<WhitespaceCheck>::_trampoline__skipToAttribute();
XPSingleTextNav<WhitespaceCheck>::_trampoline__skipToChild();
XPSingleTextNav<WhitespaceCheck>::_trampoline__skipToDescendant();
XPSingleTextNav<WhitespaceCheck>::_trampoline__skipToSibling();
XPSingleTextNav<WhitespaceCheck>::_trampoline__toHandle();
XPSingleTextNav<WhitespaceCheck>::_trampoline__toNode();
XPSingleTextNav<WhitespaceCheck>::_trampoline__toggleWhitespaceCheck();
XPSingleTextNav<WhitespacePreserve>::_trampoline__cacheInScopeNamespaces();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getAdjacentText();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getFlag();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getName();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getNodeLocation();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getParent();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getText();
XPSingleTextNav<WhitespacePreserve>::_trampoline__getType();
XPSingleTextNav<WhitespacePreserve>::_trampoline__isAdjacentText();
XPSingleTextNav<WhitespacePreserve>::_trampoline__moveToAttribute();
XPSingleTextNav<WhitespacePreserve>::_trampoline__moveToChild();
XPSingleTextNav<WhitespacePreserve>::_trampoline__moveToNamespace();
XPSingleTextNav<WhitespacePreserve>::_trampoline__moveToParent();
XPSingleTextNav<WhitespacePreserve>::_trampoline__moveToSibling();
XPSingleTextNav<WhitespacePreserve>::_trampoline__releaseHandle();
XPSingleTextNav<WhitespacePreserve>::_trampoline__skipToAttribute();
XPSingleTextNav<WhitespacePreserve>::_trampoline__skipToChild();
XPSingleTextNav<WhitespacePreserve>::_trampoline__skipToDescendant();
XPSingleTextNav<WhitespacePreserve>::_trampoline__skipToSibling();
XPSingleTextNav<WhitespacePreserve>::_trampoline__toHandle();
XPSingleTextNav<WhitespacePreserve>::_trampoline__toNode();
XPSingleTextNav<WhitespacePreserve>::_trampoline__toggleWhitespaceCheck();
XRuntime::VARIANTToVariant();
XRuntime::XRuntime();
XRuntime::addDelayedReleaseArray();
XRuntime::addDelayedReleaseObject();
XRuntime::beginCopy();
XRuntime::beginFragment();
XRuntime::canConvert();
XRuntime::copyNamespaceNodes();
XRuntime::copyOneNamespaceNode();
XRuntime::copySubTree();
XRuntime::endCopy();
XRuntime::getBaseURI();
XRuntime::getDocument();
XRuntime::getIndexManager();
XRuntime::getNamespaceMgr();
XRuntime::getSiblingIndex();
XRuntime::handlesToNodeSet();
XRuntime::openXStreamVerify();
XRuntime::replaceXStream();
XRuntime::reset();
XRuntime::resultTree();
XRuntime::variantToVARIANT();
XRuntime::~XRuntime();
XSDContentModel::MinMax();
XSDContentModel::New();
XSDContentModel::XSDContentModel();
XSDContentModel::`scalar deleting destructor'();
XSDContentModel::`vector deleting destructor'();
XSDContentModel::addAllElement();
XSDContentModel::addAny();
XSDContentModel::buildStateMachine();
XSDContentModel::checkContent();
XSDContentModel::checkNFA();
XSDContentModel::checkUPA();
XSDContentModel::expectedElements();
XSDContentModel::initContent();
XSDContentModel::isEmptiable();
XSDContentModel::isMatched();
XSDContentModel::throwUPAError();
XSLTAttributes::Attribute::Attribute();
XSLTAttributes::Attribute::`scalar deleting destructor'();
XSLTAttributes::Attribute::setAttribute();
XSLTAttributes::Attribute::~Attribute();
XSLTAttributes::XSLTAttributes();
XSLTAttributes::getCaseOrderAttribute();
XSLTAttributes::getChar();
XSLTAttributes::getDataTypeAttribute();
XSLTAttributes::getLanguageAttribute();
XSLTAttributes::getSortOrderAttribute();
XSLTAttributes::getYesNoAttribute();
XSLTAttributes::nextLocalAttribute();
XSLTAttributes::parseAsAVT();
XSLTAttributes::parseAsExpression();
XSLTAttributes::parseAsLocationPath();
XSLTAttributes::parseAsMatchPattern();
XSLTAttributes::parseAsPrefix();
XSLTAttributes::parseAsQName();
XSLTAttributes::parseAsQNameList();
XSLTAttributes::parsePrefixList();
XSLTAttributes::releaseAttributes();
XSLTAttributes::~XSLTAttributes();
XSLTCodeGen::XSLTCodeGen();
XSLTCodeGen::`scalar deleting destructor'();
XSLTCodeGen::`vector deleting destructor'();
XSLTCodeGen::addAliasLocation();
XSLTCodeGen::applyImportMatcher();
XSLTCodeGen::applyImports();
XSLTCodeGen::applyTemplMatcher();
XSLTCodeGen::beginApplyTemplates();
XSLTCodeGen::beginAttrSet();
XSLTCodeGen::beginAttribute();
XSLTCodeGen::beginCall();
XSLTCodeGen::beginChoose();
XSLTCodeGen::beginComment();
XSLTCodeGen::beginCopy();
XSLTCodeGen::beginElement();
XSLTCodeGen::beginForEach();
XSLTCodeGen::beginIf();
XSLTCodeGen::beginMessage();
XSLTCodeGen::beginOtherwise();
XSLTCodeGen::beginPI();
XSLTCodeGen::beginTemplate();
XSLTCodeGen::beginVariable();
XSLTCodeGen::beginWhen();
XSLTCodeGen::buildTemplMatcher();
XSLTCodeGen::copyOf();
XSLTCodeGen::createNameDef();
XSLTCodeGen::endApplyTemplates();
XSLTCodeGen::endAttrSet();
XSLTCodeGen::endAttribute();
XSLTCodeGen::endCall();
XSLTCodeGen::endChoose();
XSLTCodeGen::endComment();
XSLTCodeGen::endCompile();
XSLTCodeGen::endCopy();
XSLTCodeGen::endElement();
XSLTCodeGen::endForEach();
XSLTCodeGen::endIf();
XSLTCodeGen::endMessage();
XSLTCodeGen::endOtherwise();
XSLTCodeGen::endPI();
XSLTCodeGen::endTemplate();
XSLTCodeGen::endVariable();
XSLTCodeGen::endWhen();
XSLTCodeGen::exitVariableScope();
XSLTCodeGen::fixupLoop();
XSLTCodeGen::functionCallNode();
XSLTCodeGen::generateNameDef();
XSLTCodeGen::getAllocator();
XSLTCodeGen::getDefaultPriority();
XSLTCodeGen::getXPBuilder();
XSLTCodeGen::missingFallback();
XSLTCodeGen::namespaceLiteral();
XSLTCodeGen::numbering();
XSLTCodeGen::onError();
XSLTCodeGen::parseAVT();
XSLTCodeGen::parseExpression();
XSLTCodeGen::parseLocationPath();
XSLTCodeGen::parseMatchPattern();
XSLTCodeGen::resolveFunctionCall();
XSLTCodeGen::resolveVariableRef();
XSLTCodeGen::startCompile();
XSLTCodeGen::strippedWhitespace();
XSLTCodeGen::textLiteral();
XSLTCodeGen::useAttrSet();
XSLTCodeGen::valueOf();
XSLTCodeGen::variableRefNode();
XSLTCodeGen::xsltFunctionBuild();
XSLTCodeGen::xsltFunctionCode();
XSLTCodeGen::~XSLTCodeGen();
XSLTCompiler::XSLTCompiler();
XSLTCompiler::`scalar deleting destructor'();
XSLTCompiler::`vector deleting destructor'();
XSLTCompiler::addWhitespace();
XSLTCompiler::beginChildren();
XSLTCompiler::beginComment();
XSLTCompiler::beginElement();
XSLTCompiler::beginPI();
XSLTCompiler::cachedChars();
XSLTCompiler::close();
XSLTCompiler::createExecutionHost();
XSLTCompiler::endComment();
XSLTCompiler::endElement();
XSLTCompiler::endPI();
XSLTCompiler::getBaseURI();
XSLTCompiler::getNamespaceMgr();
XSLTCompiler::getStylesheetDocument();
XSLTCompiler::getSymbolTable();
XSLTCompiler::onError();
XSLTCompiler::open();
XSLTCompiler::prefixMapping();
XSLTCompiler::reset();
XSLTCompiler::stringText();
XSLTCompiler::wcharText();
XSLTCompiler::~XSLTCompiler();
XSLTInheritAttrs::_compileExcludePrefixes();
XSLTInheritAttrs::_compileExtensionPrefixes();
XSLTInheritAttrs::_convertVersion();
XSLTInheritAttrs::enterScope();
XSLTInheritAttrs::isExtensionURI();
XSLTInheritAttrs::styleAttributes();
XSLTKeywords::classExit();
XSLTKeywords::classInit();
XSLTKeywords::isValidElement();
XSLTPreserveVisitor::XSLTPreserveVisitor();
XSLTPreserveVisitor::visitPCData();
XSLTPreserveVisitor::visitStrippedWhitespace();
XSLTPreserveVisitor::~XSLTPreserveVisitor();
XSLTTextVisitor::visitCData();
XSLTTextVisitor::visitPCData();
XSLTTextVisitor::visitParent();
XSLTTextVisitor::visitRoot();
XSLTTextVisitor::visitStrippedWhitespace();
XStreamAdapter::AddRef();
XStreamAdapter::QueryInterface();
XStreamAdapter::Release();
XStreamAdapter::XStreamAdapter();
XStreamAdapter::beginEvent();
XStreamAdapter::characters();
XStreamAdapter::clear();
XStreamAdapter::comment();
XStreamAdapter::endCDATA();
XStreamAdapter::endDTD();
XStreamAdapter::endDocument();
XStreamAdapter::endElement();
XStreamAdapter::endEmptyElement();
XStreamAdapter::endEntity();
XStreamAdapter::endEvent();
XStreamAdapter::endPrefixMapping();
XStreamAdapter::error();
XStreamAdapter::fatalError();
XStreamAdapter::getBaseURI();
XStreamAdapter::getDocument();
XStreamAdapter::getNamespaceMgr();
XStreamAdapter::ignorableWarning();
XStreamAdapter::ignorableWhitespace();
XStreamAdapter::parseURL();
XStreamAdapter::processingInstruction();
XStreamAdapter::putDocumentLocator();
XStreamAdapter::replaceXStream();
XStreamAdapter::resultTree();
XStreamAdapter::serializeDOM();
XStreamAdapter::skippedEntity();
XStreamAdapter::startCDATA();
XStreamAdapter::startDTD();
XStreamAdapter::startDocument();
XStreamAdapter::startElement();
XStreamAdapter::startEmptyElement();
XStreamAdapter::startEntity();
XStreamAdapter::startPrefixMapping();
XStreamAdapter::whitespace();
XStreamAdapter::~XStreamAdapter();
XStreamFactory::createOutputHelper();
XStreamVerify::`scalar deleting destructor'();
XStreamVerify::beforeText();
XStreamVerify::beginAttribute();
XStreamVerify::beginChildren();
XStreamVerify::beginComment();
XStreamVerify::beginElement();
XStreamVerify::beginPI();
XStreamVerify::close();
XStreamVerify::closeOutput();
XStreamVerify::elementWithText();
XStreamVerify::endAttribute();
XStreamVerify::endComment();
XStreamVerify::endElement();
XStreamVerify::endPI();
XStreamVerify::ensureValidPrefix();
XStreamVerify::finalize();
XStreamVerify::generatePrefix();
XStreamVerify::initXStream();
XStreamVerify::newXStreamVerify();
XStreamVerify::open();
XStreamVerify::outputNamespace();
XStreamVerify::stringText();
XSyntaxNode::_optimize_safe();
XSyntaxNodeHelper::getPositionRange();
XSyntaxNodeHelper::makeAttrFilter();
XSyntaxNodeHelper::makeNmspFilter();
XSyntaxNodeHelper::makeNonAttrFilter();
XSyntaxNodeHelper::toFunctionCall();
XSyntaxNodeHelper::toLiteral();
XSyntaxNodeHelper::toNumeric();
XSyntaxNodeHelper::toPath();
XUtility::compileLocationPath();
XUtility::compileMatchPattern();
XUtility::compileStylesheet();
XUtility::createNameDef();
XUtility::executeXCode();
XUtility::formatDateTime();
XUtility::generateID();
XUtility::getExceptionText();
XUtility::predicateIsTrue();
XUtility::scanForSimpleQuery();
XUtility::selectSingleNode();
XUtility::storeError();
XUtility::sysTimeFromXSDDateTime();
XUtility::throwError();
XUtility::transformNode();
XVariant::getNodeSet();
XWinRT::InterfaceEquals::operator()<Windows::Data::Xml::Dom::IXmlNode>();
X_CRITICAL_SECTION::Initialize();
XcptFilter();
XmlCharacter::isHexDigit();
XmlDefaultText();
XmlDocumentActivationFactory::ActivateInstance();
XmlDocumentActivationFactory::CreateDocument();
XmlDocumentActivationFactory::LoadFromFileAsync();
XmlDocumentActivationFactory::LoadFromFileWithSettingsAsync();
XmlDocumentActivationFactory::LoadFromUriAsync();
XmlDocumentActivationFactory::LoadFromUriWithSettingsAsync();
XmlDocumentActivationFactory::LoadWithSettingsAsync<Windows::Foundation::IUriRuntimeClass>();
XmlDocumentActivationFactory::LoadWithSettingsAsync<Windows::Storage::IStorageFile>();
XmlDocumentActivationFactory::XmlDocumentActivationFactory();
XmlDocumentActivationFactory::`scalar deleting destructor'();
XmlEvent::~XmlEvent();
XmlEventCache::XmlEventCache();
XmlEventCache::XmlEventPage::`scalar deleting destructor'();
XmlEventCache::XmlEventPage::~XmlEventPage();
XmlEventCache::addEvent();
XmlEventCache::clearCache();
XmlEventCache::destructCache();
XmlEventCache::getNextEvent();
XmlEventCache::newPage();
XmlParseTask::XmlParseTask();
XmlParseTask::_parse();
XmlParseTask::init();
XmlParseTask::reset();
XmlParseTask::~XmlParseTask();
XsdBuilder::AddAttribute();
XsdBuilder::AddErrorDetail();
XsdBuilder::AddParticle();
XsdBuilder::BuildDocumentation_XmlLang();
XsdBuilder::BuildFacet_Value();
XsdBuilder::BuildField_XPath();
XsdBuilder::BuildImport_Namespace();
XsdBuilder::BuildNotation_Public();
XsdBuilder::BuildNotation_System();
XsdBuilder::BuildSchema_TargetNamespace();
XsdBuilder::BuildSelector_XPath();
XsdBuilder::BuildSimpleTypeUnion_MemberTypes();
XsdBuilder::InitAll();
XsdBuilder::InitAny();
XsdBuilder::InitAnyAttribute();
XsdBuilder::InitAttribute();
XsdBuilder::InitAttributeGroup();
XsdBuilder::InitAttributeGroupRef();
XsdBuilder::InitComplexContent();
XsdBuilder::InitComplexContentExtension();
XsdBuilder::InitComplexType();
XsdBuilder::InitFacet();
XsdBuilder::InitGroup();
XsdBuilder::InitGroupRef();
XsdBuilder::InitIdentityConstraint();
XsdBuilder::InitImport();
XsdBuilder::InitInclude();
XsdBuilder::InitNotation();
XsdBuilder::InitRedefine();
XsdBuilder::InitSequence();
XsdBuilder::InitSimpleContent();
XsdBuilder::InitSimpleContentExtension();
XsdBuilder::InitSimpleContentRestriction();
XsdBuilder::InitSimpleType();
XsdBuilder::InitSimpleTypeList();
XsdBuilder::InitSimpleTypeRestriction();
XsdBuilder::InitSimpleTypeUnion();
XsdBuilder::New();
XsdBuilder::NodeWalk();
XsdBuilder::ParseBoolean();
XsdBuilder::ParseEnum();
XsdBuilder::ParseEnumFlags();
XsdBuilder::PopContainer();
XsdBuilder::ProcessAttributes();
XsdBuilder::ProcessElementNode();
XsdBuilder::ProcessEndChildren();
XsdBuilder::ProcessPCDATA();
XsdBuilder::ProcessStartChildren();
XsdBuilder::PushContainer();
XsdBuilder::SetMaxOccurs();
XsdBuilder::SetMinOccurs();
XsdBuilder::XsdBuilder();
XsdBuilder::_trampoline_BeginAttribute();
XsdBuilder::_trampoline_BeginAttributeGroup();
XsdBuilder::_trampoline_BeginAttributeGroupRef();
XsdBuilder::_trampoline_BeginComplexContentExtension();
XsdBuilder::_trampoline_BeginComplexContentRestriction();
XsdBuilder::_trampoline_BeginComplexType();
XsdBuilder::_trampoline_BeginElement();
XsdBuilder::_trampoline_BeginField();
XsdBuilder::_trampoline_BeginGroup();
XsdBuilder::_trampoline_BeginGroupRef();
XsdBuilder::_trampoline_BeginIdentityConstraint();
XsdBuilder::_trampoline_BeginSchema();
XsdBuilder::_trampoline_BeginSelector();
XsdBuilder::_trampoline_BeginSimpleContentExtension();
XsdBuilder::_trampoline_BeginSimpleContentRestriction();
XsdBuilder::_trampoline_BeginSimpleType();
XsdBuilder::_trampoline_BuildAnnotated_Id();
XsdBuilder::_trampoline_BuildAnnotation_Id();
XsdBuilder::_trampoline_BuildAnyAttribute_Namespace();
XsdBuilder::_trampoline_BuildAnyAttribute_ProcessContents();
XsdBuilder::_trampoline_BuildAny_Namespace();
XsdBuilder::_trampoline_BuildAny_ProcessContents();
XsdBuilder::_trampoline_BuildAppinfo_Source();
XsdBuilder::_trampoline_BuildAttributeGroupRef_Ref();
XsdBuilder::_trampoline_BuildAttributeGroup_Name();
XsdBuilder::_trampoline_BuildAttribute_Default();
XsdBuilder::_trampoline_BuildAttribute_Fixed();
XsdBuilder::_trampoline_BuildAttribute_Form();
XsdBuilder::_trampoline_BuildAttribute_Name();
XsdBuilder::_trampoline_BuildAttribute_Ref();
XsdBuilder::_trampoline_BuildAttribute_Type();
XsdBuilder::_trampoline_BuildAttribute_Use();
XsdBuilder::_trampoline_BuildComplexContentExtension_Base();
XsdBuilder::_trampoline_BuildComplexContentRestriction_Base();
XsdBuilder::_trampoline_BuildComplexContent_Mixed();
XsdBuilder::_trampoline_BuildComplexType_Abstract();
XsdBuilder::_trampoline_BuildComplexType_Block();
XsdBuilder::_trampoline_BuildComplexType_Final();
XsdBuilder::_trampoline_BuildComplexType_Mixed();
XsdBuilder::_trampoline_BuildComplexType_Name();
XsdBuilder::_trampoline_BuildDocumentation_Source();
XsdBuilder::_trampoline_BuildDocumentation_XmlLang();
XsdBuilder::_trampoline_BuildElement_Abstract();
XsdBuilder::_trampoline_BuildElement_Block();
XsdBuilder::_trampoline_BuildElement_Default();
XsdBuilder::_trampoline_BuildElement_Final();
XsdBuilder::_trampoline_BuildElement_Fixed();
XsdBuilder::_trampoline_BuildElement_Form();
XsdBuilder::_trampoline_BuildElement_MaxOccurs();
XsdBuilder::_trampoline_BuildElement_MinOccurs();
XsdBuilder::_trampoline_BuildElement_Name();
XsdBuilder::_trampoline_BuildElement_Nillable();
XsdBuilder::_trampoline_BuildElement_Ref();
XsdBuilder::_trampoline_BuildElement_SubstitutionGroup();
XsdBuilder::_trampoline_BuildElement_Type();
XsdBuilder::_trampoline_BuildFacet_Fixed();
XsdBuilder::_trampoline_BuildFacet_Value();
XsdBuilder::_trampoline_BuildField_XPath();
XsdBuilder::_trampoline_BuildGroupRef_Ref();
XsdBuilder::_trampoline_BuildGroup_Name();
XsdBuilder::_trampoline_BuildIdentityConstraint_Name();
XsdBuilder::_trampoline_BuildIdentityConstraint_Refer();
XsdBuilder::_trampoline_BuildImport_Namespace();
XsdBuilder::_trampoline_BuildImport_SchemaLocation();
XsdBuilder::_trampoline_BuildInclude_SchemaLocation();
XsdBuilder::_trampoline_BuildNotation_Name();
XsdBuilder::_trampoline_BuildNotation_Public();
XsdBuilder::_trampoline_BuildNotation_System();
XsdBuilder::_trampoline_BuildParticle_MaxOccurs();
XsdBuilder::_trampoline_BuildParticle_MinOccurs();
XsdBuilder::_trampoline_BuildRedefine_SchemaLocation();
XsdBuilder::_trampoline_BuildSchema_AttributeFormDefault();
XsdBuilder::_trampoline_BuildSchema_BlockDefault();
XsdBuilder::_trampoline_BuildSchema_ElementFormDefault();
XsdBuilder::_trampoline_BuildSchema_FinalDefault();
XsdBuilder::_trampoline_BuildSchema_TargetNamespace();
XsdBuilder::_trampoline_BuildSchema_Version();
XsdBuilder::_trampoline_BuildSelector_XPath();
XsdBuilder::_trampoline_BuildSimpleContentExtension_Base();
XsdBuilder::_trampoline_BuildSimpleContentRestriction_Base();
XsdBuilder::_trampoline_BuildSimpleTypeList_ItemType();
XsdBuilder::_trampoline_BuildSimpleTypeRestriction_Base();
XsdBuilder::_trampoline_BuildSimpleTypeUnion_MemberTypes();
XsdBuilder::_trampoline_BuildSimpleType_Final();
XsdBuilder::_trampoline_BuildSimpleType_Name();
XsdBuilder::_trampoline_EndAll();
XsdBuilder::_trampoline_EndAnnotation();
XsdBuilder::_trampoline_EndAny();
XsdBuilder::_trampoline_EndAnyAttribute();
XsdBuilder::_trampoline_EndAppinfo();
XsdBuilder::_trampoline_EndAttribute();
XsdBuilder::_trampoline_EndAttributeGroup();
XsdBuilder::_trampoline_EndAttributeGroupRef();
XsdBuilder::_trampoline_EndChoice();
XsdBuilder::_trampoline_EndComplexContent();
XsdBuilder::_trampoline_EndComplexContentExtension();
XsdBuilder::_trampoline_EndComplexContentRestriction();
XsdBuilder::_trampoline_EndComplexType();
XsdBuilder::_trampoline_EndDocumentation();
XsdBuilder::_trampoline_EndElement();
XsdBuilder::_trampoline_EndFacet();
XsdBuilder::_trampoline_EndField();
XsdBuilder::_trampoline_EndGroup();
XsdBuilder::_trampoline_EndGroupRef();
XsdBuilder::_trampoline_EndIdentityConstraint();
XsdBuilder::_trampoline_EndImport();
XsdBuilder::_trampoline_EndInclude();
XsdBuilder::_trampoline_EndNotation();
XsdBuilder::_trampoline_EndRedefine();
XsdBuilder::_trampoline_EndSchema();
XsdBuilder::_trampoline_EndSelector();
XsdBuilder::_trampoline_EndSequence();
XsdBuilder::_trampoline_EndSimpleContent();
XsdBuilder::_trampoline_EndSimpleContentExtension();
XsdBuilder::_trampoline_EndSimpleContentRestriction();
XsdBuilder::_trampoline_EndSimpleType();
XsdBuilder::_trampoline_EndSimpleTypeList();
XsdBuilder::_trampoline_EndSimpleTypeRestriction();
XsdBuilder::_trampoline_EndSimpleTypeUnion();
XsdBuilder::_trampoline_InitAll();
XsdBuilder::_trampoline_InitAnnotation();
XsdBuilder::_trampoline_InitAny();
XsdBuilder::_trampoline_InitAnyAttribute();
XsdBuilder::_trampoline_InitAppinfo();
XsdBuilder::_trampoline_InitAttribute();
XsdBuilder::_trampoline_InitAttributeGroup();
XsdBuilder::_trampoline_InitAttributeGroupRef();
XsdBuilder::_trampoline_InitChoice();
XsdBuilder::_trampoline_InitComplexContent();
XsdBuilder::_trampoline_InitComplexContentExtension();
XsdBuilder::_trampoline_InitComplexContentRestriction();
XsdBuilder::_trampoline_InitComplexType();
XsdBuilder::_trampoline_InitDocumentation();
XsdBuilder::_trampoline_InitElement();
XsdBuilder::_trampoline_InitFacet();
XsdBuilder::_trampoline_InitField();
XsdBuilder::_trampoline_InitGroup();
XsdBuilder::_trampoline_InitGroupRef();
XsdBuilder::_trampoline_InitIdentityConstraint();
XsdBuilder::_trampoline_InitImport();
XsdBuilder::_trampoline_InitInclude();
XsdBuilder::_trampoline_InitNotation();
XsdBuilder::_trampoline_InitRedefine();
XsdBuilder::_trampoline_InitSchema();
XsdBuilder::_trampoline_InitSelector();
XsdBuilder::_trampoline_InitSequence();
XsdBuilder::_trampoline_InitSimpleContent();
XsdBuilder::_trampoline_InitSimpleContentExtension();
XsdBuilder::_trampoline_InitSimpleContentRestriction();
XsdBuilder::_trampoline_InitSimpleType();
XsdBuilder::_trampoline_InitSimpleTypeList();
XsdBuilder::_trampoline_InitSimpleTypeRestriction();
XsdBuilder::_trampoline_InitSimpleTypeUnion();
XsdBuilder::`scalar deleting destructor'();
XsdBuilder::`vector deleting destructor'();
XsdBuilder::classInit();
XsdBuilder::finish();
XsdBuilder::getParentContainer();
XsdBuilder::getParentElement();
XsdBuilder::isSkipableAttribute();
XsdBuilder::matchRoot();
XsdBuilder::start();
XsdBuilder::~XsdBuilder();
XsltProcessorFactory::CreateInstance();
XsltProcessorFactory::XsltProcessorFactory();
XsltProcessorFactory::`scalar deleting destructor'();
XsltProcessorImpl::AddRef();
XsltProcessorImpl::GetIids();
XsltProcessorImpl::GetRuntimeClassName();
XsltProcessorImpl::GetTrustLevel();
XsltProcessorImpl::InternalGetRuntimeClassName();
XsltProcessorImpl::InternalGetTrustLevel();
XsltProcessorImpl::QueryInterface();
XsltProcessorImpl::Release();
XsltProcessorImpl::TransformToDocument();
XsltProcessorImpl::TransformToString();
XsltProcessorImpl::XsltProcessorImpl();
XsltProcessorImpl::`scalar deleting destructor'();
_Atom2WCHAR();
_CRT_INIT();
_C_specific_handler();
_CodebaseException::AddRef();
_CodebaseException::Release();
_CodebaseException::_addDetail();
_CodebaseException::`scalar deleting destructor'();
_CodebaseException::addDetail();
_CodebaseException::addParameters1();
_CodebaseException::addParameters2();
_CodebaseException::finalize();
_CodebaseException::getHRESULT();
_CodebaseException::getMessage();
_CodebaseException::setErrorSchemaXPath();
_CodebaseException::setErrorXPath();
_CodebaseException::setFilePos();
_CodebaseException::setNext();
_CodebaseException::setPosInfo();
_CodebaseException::setSourceText();
_CodebaseException::setUrl();
_CodebaseHashtable::AddRef();
_CodebaseHashtable::Release();
_CodebaseHashtable::_CodebaseHashtable();
_CodebaseHashtable::_set();
_CodebaseHashtable::`scalar deleting destructor'();
_CodebaseHashtable::finalize();
_CodebaseString::AddRef();
_CodebaseString::Release();
_CodebaseString::`scalar deleting destructor'();
_ComCollection<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1>::QueryInterface();
_ComCollection<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1>::get__newEnum();
_ComCollection<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_ComCollection<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1>::get__newEnum();
_ComCollection<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_ComCollection<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1>::get__newEnum();
_ComCollection<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0>::QueryInterface();
_ComCollection<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0>::get__newEnum();
_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0>::get__newEnum();
_CreateStaPrepareContext();
_CxxFrameHandler3();
_DeleteStaPrepareContext();
_DllMainCRTStartup();
_FAddKanjiOrder();
_FindPESection();
_GetWindowHelper();
_Init_thread_footer();
_Init_thread_header();
_InsertWch();
_IsNonwritableInCurrentImage();
_IsNonwritableInCurrentImage$filt$0();
_MXDataType::get_name();
_MXDataType::get_namespaceURI();
_MXDataType::get_schema();
_MXItem::_invoke();
_MXItem::`scalar deleting destructor'();
_MXItem::annotation2DOM();
_MXItem::annotation2SAX();
_MXItem::copyAnnotation();
_MXItem::createSchemaWrapper();
_MXItem::get_Null_MXElement();
_MXItem::get_id();
_MXItem::get_itemType();
_MXItem::get_maxOccurs();
_MXItem::get_minOccurs();
_MXItem::get_name();
_MXItem::get_namespaceURI();
_MXItem::get_schema();
_MXItem::get_unhandledAttributes();
_MXItem::refAdd();
_MXItem::refRelease();
_MXItem::writeAnnotation();
_MXItem::~_MXItem();
_MXType::`scalar deleting destructor'();
_MXType::getFacet();
_MXType::getWrappedType();
_MXType::getWrappedType2();
_MXType::get_derivedBy();
_MXType::get_enumeration();
_MXType::get_final();
_MXType::get_fractionDigits();
_MXType::get_length();
_MXType::get_maxExclusive();
_MXType::get_maxInclusive();
_MXType::get_maxLength();
_MXType::get_minExclusive();
_MXType::get_minInclusive();
_MXType::get_minLength();
_MXType::get_patterns();
_MXType::get_totalDigits();
_MXType::get_variety();
_MXType::get_whitespace();
_MXType::isValid();
_MXType::~_MXType();
_MemAlloc();
_PrepareSecurityManager();
_SYS_EXCEPTION_RECORD::assign();
_StaPrepareUrlMon();
_ValidateImageBase();
__DllMainCRTStartup();
__DllMainCRTStartup$filt$0();
__DllMainCRTStartup$filt$1();
__DllMainCRTStartup$filt$2();
__DllMainCRTStartup$filt$3();
__DllMainCRTStartup$filt$4();
__DllMainCRTStartup$filt$5();
__DllMainCRTStartup$filt$6();
__DllMainCRTStartup$filt$7();
__DllMainCRTStartup$fin$8();
__GSHandlerCheck();
__GSHandlerCheckCommon();
__GSHandlerCheck_SEH();
__array::copy();
__chkstk();
__delayLoadHelper2();
__dispatch::InterfaceSupportsErrorInfo();
__dispatch::QueryInterface();
__gitpointer::AddRef();
__gitpointer::QueryInterface();
__gitpointer::Release();
__gitpointer::_getPointer();
__gitpointer::`scalar deleting destructor'();
__gitpointer::new__gitpointer();
__gitpointer::new__gitpointerHr();
__raise_securityfailure();
__report_gsfailure();
__report_rangecheckfailure();
__security_check_cookie();
__security_init_cookie();
__unknown::QueryInterface();
_aggunknown<Reader>::NondelegatingAddRef();
_aggunknown<Reader>::NondelegatingQueryInterface();
_aggunknown<Reader>::NondelegatingRelease();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::AddRef();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::NondelegatingAddRef();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::NondelegatingQueryInterface();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::NondelegatingRelease();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::QueryInterface();
_aggunknown<_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1> >::Release();
_array<ImportManager::ImportInfo>::`scalar deleting destructor'();
_array<ImportManager::ImportInfo>::assign();
_array<ImportManager::ImportInfo>::finalize();
_array<ImportManager::ImportInfo>::getDataSize();
_array<ImportManager::ImportInfo>::operator new();
_array<IndexManager::IndexInfo>::`scalar deleting destructor'();
_array<IndexManager::IndexInfo>::assign();
_array<IndexManager::IndexInfo>::finalize();
_array<IndexManager::IndexInfo>::getDataSize();
_array<IndexManager::IndexInfo>::operator new();
_array<IndexManager::IndexInfo>::resize();
_array<KeyNodeSet::MergeList>::`scalar deleting destructor'();
_array<KeyNodeSet::MergeList>::assign();
_array<KeyNodeSet::MergeList>::finalize();
_array<KeyNodeSet::MergeList>::getDataSize();
_array<KeyNodeSet::MergeList>::operator new();
_array<MatcherCollection::MatcherPriority>::`scalar deleting destructor'();
_array<MatcherCollection::MatcherPriority>::assign();
_array<MatcherCollection::MatcherPriority>::finalize();
_array<MatcherCollection::MatcherPriority>::getDataSize();
_array<MatcherCollection::MatcherPriority>::operator new();
_array<NodeSet * __ptr64>::`scalar deleting destructor'();
_array<NodeSet * __ptr64>::assign();
_array<NodeSet * __ptr64>::finalize();
_array<NodeSet * __ptr64>::getDataSize();
_array<NodeSet * __ptr64>::operator new();
_array<SymbolRef * __ptr64>::`scalar deleting destructor'();
_array<SymbolRef * __ptr64>::assign();
_array<SymbolRef * __ptr64>::finalize();
_array<SymbolRef * __ptr64>::getDataSize();
_array<SymbolRef * __ptr64>::operator new();
_array<TemplateSymbol * __ptr64>::`scalar deleting destructor'();
_array<TemplateSymbol * __ptr64>::assign();
_array<TemplateSymbol * __ptr64>::finalize();
_array<TemplateSymbol * __ptr64>::getDataSize();
_array<TemplateSymbol * __ptr64>::operator new();
_array<WhitespaceRules::NameTest>::`scalar deleting destructor'();
_array<WhitespaceRules::NameTest>::assign();
_array<WhitespaceRules::NameTest>::finalize();
_array<WhitespaceRules::NameTest>::getDataSize();
_array<WhitespaceRules::NameTest>::operator new();
_array<XAttributesImpl::AttrNameVal>::_array<XAttributesImpl::AttrNameVal>();
_array<XAttributesImpl::AttrNameVal>::`scalar deleting destructor'();
_array<XAttributesImpl::AttrNameVal>::assign();
_array<XAttributesImpl::AttrNameVal>::finalize();
_array<XAttributesImpl::AttrNameVal>::getDataSize();
_array<XAttributesImpl::AttrNameVal>::operator new();
_array<XPBuilder::SortKey>::`scalar deleting destructor'();
_array<XPBuilder::SortKey>::assign();
_array<XPBuilder::SortKey>::finalize();
_array<XPBuilder::SortKey>::getDataSize();
_array<XPBuilder::SortKey>::operator new();
_array<XPNavData>::`scalar deleting destructor'();
_array<XPNavData>::assign();
_array<XPNavData>::finalize();
_array<XPNavData>::getDataSize();
_array<XPNavData>::operator new();
_array<XPNavHandle>::_array<XPNavHandle>();
_array<XPNavHandle>::`scalar deleting destructor'();
_array<XPNavHandle>::assign();
_array<XPNavHandle>::finalize();
_array<XPNavHandle>::getDataSize();
_array<XPNavHandle>::operator new();
_array<XSLTAttributes::Attribute>::_array<XSLTAttributes::Attribute>();
_array<XSLTAttributes::Attribute>::`scalar deleting destructor'();
_array<XSLTAttributes::Attribute>::assign();
_array<XSLTAttributes::Attribute>::finalize();
_array<XSLTAttributes::Attribute>::getDataSize();
_array<XSLTAttributes::Attribute>::operator new();
_array<XSyntaxNode * __ptr64>::`scalar deleting destructor'();
_array<XSyntaxNode * __ptr64>::assign();
_array<XSyntaxNode * __ptr64>::finalize();
_array<XSyntaxNode * __ptr64>::getDataSize();
_array<XSyntaxNode * __ptr64>::operator new();
_array<_reference<BitSet> >::_array<_reference<BitSet> >();
_array<_reference<BitSet> >::`scalar deleting destructor'();
_array<_reference<BitSet> >::assign();
_array<_reference<BitSet> >::finalize();
_array<_reference<BitSet> >::getDataSize();
_array<_reference<BitSet> >::operator new();
_array<_reference<Name> >::_array<_reference<Name> >();
_array<_reference<Name> >::`scalar deleting destructor'();
_array<_reference<Name> >::assign();
_array<_reference<Name> >::finalize();
_array<_reference<Name> >::getDataSize();
_array<_reference<Name> >::operator new();
_array<_reference<RegexFC> >::_array<_reference<RegexFC> >();
_array<_reference<RegexFC> >::`scalar deleting destructor'();
_array<_reference<RegexFC> >::assign();
_array<_reference<RegexFC> >::finalize();
_array<_reference<RegexFC> >::getDataSize();
_array<_reference<RegexFC> >::operator new();
_array<_reference<String> >::_array<_reference<String> >();
_array<_reference<String> >::`scalar deleting destructor'();
_array<_reference<String> >::append();
_array<_reference<String> >::assign();
_array<_reference<String> >::finalize();
_array<_reference<String> >::getDataSize();
_array<_reference<String> >::item();
_array<_reference<String> >::operator new();
_array<_reference<_array<int> > >::_array<_reference<_array<int> > >();
_array<_reference<_array<int> > >::`scalar deleting destructor'();
_array<_reference<_array<int> > >::assign();
_array<_reference<_array<int> > >::finalize();
_array<_reference<_array<int> > >::getDataSize();
_array<_reference<_array<int> > >::operator new();
_array<int>::_array<int>();
_array<int>::`scalar deleting destructor'();
_array<int>::assign();
_array<int>::finalize();
_array<int>::getDataSize();
_array<int>::operator new();
_array<unsigned int>::_array<unsigned int>();
_array<unsigned int>::`scalar deleting destructor'();
_array<unsigned int>::assign();
_array<unsigned int>::finalize();
_array<unsigned int>::getDataSize();
_array<unsigned int>::operator new();
_array<unsigned short>::_array<unsigned short>();
_array<unsigned short>::`scalar deleting destructor'();
_array<unsigned short>::assign();
_array<unsigned short>::finalize();
_array<unsigned short>::getDataSize();
_array<unsigned short>::operator new();
_array<void * __ptr64>::_array<void * __ptr64>();
_array<void * __ptr64>::`scalar deleting destructor'();
_array<void * __ptr64>::assign();
_array<void * __ptr64>::finalize();
_array<void * __ptr64>::getDataSize();
_array<void * __ptr64>::operator new();
_createDOMDocument();
_dispatch<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,1>::QueryInterface();
_dispatch<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1>::QueryInterface();
_dispatch<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,1>::QueryInterface();
_dispatch<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface();
_dispatch<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,1>::QueryInterface();
_dispatch<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,1>::QueryInterface();
_dispatch<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,1>::QueryInterface();
_dispatch<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,1>::QueryInterface();
_dispatch<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,1>::QueryInterface();
_dispatch<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1>::QueryInterface();
_dispatch<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1>::QueryInterface();
_dispatch<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,1>::QueryInterface();
_dispatch<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,1>::QueryInterface();
_dispatch<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,1>::QueryInterface();
_dispatch<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,1>::QueryInterface();
_dispatch<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,1>::QueryInterface();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::DeleteMemberByDispID();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::DeleteMemberByName();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::GetDispID();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::GetMemberName();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::GetMemberProperties();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::GetNameSpaceParent();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::GetNextDispID();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::InvokeEx();
_dispatchEx<IMXAttributes,&LIBID_MSXML2,&IID_IMXAttributes,0,1>::QueryInterface();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::AddRef();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::DeleteMemberByDispID();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::DeleteMemberByName();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetDispID();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetIDsOfNames();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetMemberName();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetMemberProperties();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetNameSpaceParent();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetNextDispID();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetTypeInfo();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::GetTypeInfoCount();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::Invoke();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::InvokeEx();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::QueryInterface();
_dispatchEx<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1,1>::Release();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::DeleteMemberByDispID();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::DeleteMemberByName();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::GetMemberName();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::GetMemberProperties();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::GetNameSpaceParent();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::GetNextDispID();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::InvokeEx();
_dispatchEx<IMXWriter,&LIBID_MSXML2,&IID_IMXWriter,0,1>::QueryInterface();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchema,&LIBID_MSXML2,&_GUID_50ea08b4_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaAny,&LIBID_MSXML2,&_GUID_50ea08bc_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaAttribute,&LIBID_MSXML2,&_GUID_50ea08b6_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaAttributeGroup,&LIBID_MSXML2,&_GUID_50ea08ba_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaComplexType,&LIBID_MSXML2,&_GUID_50ea08b9_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaElement,&LIBID_MSXML2,&_GUID_50ea08b7_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaIdentityConstraint,&LIBID_MSXML2,&_GUID_50ea08bd_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::DeleteMemberByName();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetDispID();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetIDsOfNames();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetMemberName();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetMemberProperties();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetNameSpaceParent();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetNextDispID();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetTypeInfo();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetTypeInfoCount();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::Invoke();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::InvokeEx();
_dispatchEx<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1,1>::QueryInterface();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaModelGroup,&LIBID_MSXML2,&_GUID_50ea08bb_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaNotation,&LIBID_MSXML2,&_GUID_50ea08be_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::AddRef();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::DeleteMemberByName();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetDispID();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetIDsOfNames();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetMemberName();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetMemberProperties();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetNameSpaceParent();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetNextDispID();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetTypeInfo();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::GetTypeInfoCount();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::Invoke();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::InvokeEx();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::QueryInterface();
_dispatchEx<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1,1>::Release();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByDispID();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::DeleteMemberByName();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetDispID();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetIDsOfNames();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberName();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetMemberProperties();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNameSpaceParent();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetNextDispID();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfo();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::GetTypeInfoCount();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::Invoke();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::InvokeEx();
_dispatchEx<ISchemaType,&LIBID_MSXML2,&_GUID_50ea08b8_dd1b_4664_9a50_c2f40f4bd79a,0,1>::QueryInterface();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::DeleteMemberByDispID();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::DeleteMemberByName();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::GetDispID();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::GetMemberName();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::GetMemberProperties();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::GetNameSpaceParent();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::GetNextDispID();
_dispatchEx<IServerXMLHTTPRequest2,&LIBID_MSXML2,&IID_IServerXMLHTTPRequest2,0,0>::InvokeEx();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::DeleteMemberByDispID();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::DeleteMemberByName();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetDispID();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetIDsOfNames();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetMemberName();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetMemberProperties();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetNameSpaceParent();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetNextDispID();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetTypeInfo();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::GetTypeInfoCount();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::Invoke();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::InvokeEx();
_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1>::QueryInterface();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::DeleteMemberByDispID();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::DeleteMemberByName();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetDispID();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetIDsOfNames();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetMemberName();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetMemberProperties();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetNameSpaceParent();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetNextDispID();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetTypeInfo();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::GetTypeInfoCount();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::Invoke();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::InvokeEx();
_dispatchEx<IVBSAXAttributes,&LIBID_MSXML2,&IID_IVBSAXAttributes,0,1>::QueryInterface();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::AddRef();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::DeleteMemberByDispID();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::DeleteMemberByName();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetDispID();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetIDsOfNames();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetMemberName();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetMemberProperties();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetNameSpaceParent();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetNextDispID();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetTypeInfo();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::GetTypeInfoCount();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::Invoke();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::InvokeEx();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::QueryInterface();
_dispatchEx<IVBSAXLocator,&LIBID_MSXML2,&IID_IVBSAXLocator,0,1>::Release();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::DeleteMemberByDispID();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::DeleteMemberByName();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetDispID();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetIDsOfNames();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetMemberName();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetMemberProperties();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetNameSpaceParent();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetNextDispID();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetTypeInfo();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::GetTypeInfoCount();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::Invoke();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::InvokeEx();
_dispatchEx<IVBSAXXMLReader,&LIBID_MSXML2,&IID_IVBSAXXMLReader,0,1>::QueryInterface();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetDispID();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetMemberName();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetMemberProperties();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetNextDispID();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetTypeInfo();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::Invoke();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::InvokeEx();
_dispatchEx<IXMLDOMImplementation,&LIBID_MSXML2,&IID_IXMLDOMImplementation,0,1>::QueryInterface();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetDispID();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetMemberName();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetMemberProperties();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetNextDispID();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetTypeInfo();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::Invoke();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::InvokeEx();
_dispatchEx<IXMLDOMNamedNodeMap,&LIBID_MSXML2,&IID_IXMLDOMNamedNodeMap,1,1>::QueryInterface();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::GetMemberName();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::GetMemberProperties();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::GetNextDispID();
_dispatchEx<IXMLDOMNode,&LIBID_MSXML2,&IID_IXMLDOMNode,0,1>::InvokeEx();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetDispID();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetMemberName();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetMemberProperties();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetNextDispID();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetTypeInfo();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::Invoke();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::InvokeEx();
_dispatchEx<IXMLDOMNodeList,&LIBID_MSXML2,&IID_IXMLDOMNodeList,1,1>::QueryInterface();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::AddRef();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetDispID();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetMemberName();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetMemberProperties();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetNextDispID();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetTypeInfo();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::Invoke();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::InvokeEx();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::QueryInterface();
_dispatchEx<IXMLDOMParseError2,&LIBID_MSXML2,&IID_IXMLDOMParseError2,0,1>::Release();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::AddRef();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetDispID();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetMemberName();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetMemberProperties();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetNextDispID();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetTypeInfo();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::Invoke();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::InvokeEx();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::QueryInterface();
_dispatchEx<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0,1>::Release();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::AddRef();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetDispID();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetMemberName();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetMemberProperties();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetNextDispID();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetTypeInfo();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::Invoke();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::InvokeEx();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::QueryInterface();
_dispatchEx<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0,1>::Release();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::DeleteMemberByDispID();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::DeleteMemberByName();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetDispID();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetIDsOfNames();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetMemberName();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetMemberProperties();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetNameSpaceParent();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetNextDispID();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetTypeInfo();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::GetTypeInfoCount();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::Invoke();
_dispatchEx<IXMLDOMSelection,&LIBID_MSXML2,&IID_IXMLDOMSelection,1,1>::InvokeEx();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::DeleteMemberByDispID();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::DeleteMemberByName();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::GetMemberName();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::GetMemberProperties();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::GetNameSpaceParent();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::GetNextDispID();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::InvokeEx();
_dispatchEx<IXSLProcessor,&LIBID_MSXML2,&IID_IXSLProcessor,0,1>::QueryInterface();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::DeleteMemberByDispID();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::DeleteMemberByName();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetDispID();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetIDsOfNames();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetMemberName();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetMemberProperties();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetNameSpaceParent();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetNextDispID();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetTypeInfo();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::GetTypeInfoCount();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::Invoke();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::InvokeEx();
_dispatchEx<IXSLTemplate,&LIBID_MSXML2,&IID_IXSLTemplate,0,1>::QueryInterface();
_dispatchImpl::FailedInvoke();
_dispatchImpl::FindIdsOfNames();
_dispatchImpl::GetDispID();
_dispatchImpl::GetIDsOfNames();
_dispatchImpl::GetSource();
_dispatchImpl::GetTypeInfo();
_dispatchImpl::Invoke();
_dispatchImpl::InvokeEx();
_dispatchImpl::InvokeHelper();
_dispatchImpl::PrepareInvokeArgs();
_dispatchImpl::PrepareInvokeArgsAndResult();
_dispatchImpl::ensureTypeInfo();
_dispatchImpl::setErrorInfo();
_dispatchImpl::setErrorInfo1();
_dispatchImpl::setErrorInfo2();
_dispatchImpl::setErrorInfoAndGetHR();
_dispatchexport<Document,IXMLDOMDocument3,&LIBID_MSXML2,1,&IID_IXMLDOMDocument3>::GetTypeInfo();
_dispatchexport<Document,IXMLDOMDocument3,&LIBID_MSXML2,1,&IID_IXMLDOMDocument3>::GetTypeInfoCount();
_dllonexit();
_fi_compare();
_findWinRT();
_gitpointer<IDispatch,&IID_IDispatch>::setPointer();
_gitpointer<IInternetSecurityManager,&IID_IInternetSecurityManager>::getPointer();
_gitpointer<IInternetSecurityManager,&IID_IInternetSecurityManager>::setPointer();
_gitpointer<IPropertyNotifySink,&IID_IPropertyNotifySink>::setPointer();
_gitpointer<IUnknown,&IID_IUnknown>::setPointer();
_gitpointer<Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64>,&Windows::Storage::IID_IStorageFileRetrievalOperation>::HrSetPointer();
_gitpointer<Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,&Windows::Storage::IID_IStreamRetrievalOperation>::HrSetPointer();
_gitpointer<Windows::Foundation::IUriRuntimeClass,&Windows::Foundation::IID_IUriRuntimeClass>::HrSetPointer();
_gitpointer<Windows::Storage::IStorageFile,&Windows::Storage::IID_IStorageFile>::HrSetPointer();
_guard_check_icall_nop();
_guard_dispatch_icall_nop();
_htable<DeclElement>::grow();
_htable<DeclElement>::hash();
_htable<DeclElement>::lookup();
_htable<DeclElement>::reset();
_htable<DeclElement>::set();
_htable<DeclEntity>::grow();
_htable<DeclEntity>::hash();
_htable<DeclEntity>::insert();
_htable<DeclEntity>::lookup();
_htable<DeclEntity>::reset();
_htable<DeclEntity>::set();
_htable<DeclEntity>::~_htable<DeclEntity>();
_htable<DeclNotation>::grow();
_htable<DeclNotation>::hash();
_htable<DeclNotation>::lookup();
_htable<DeclNotation>::reset();
_htable<DeclNotation>::set();
_imp_load_BCryptCloseAlgorithmProvider();
_imp_load_BCryptCreateHash();
_imp_load_BCryptDestroyHash();
_imp_load_BCryptFinishHash();
_imp_load_BCryptGenRandom();
_imp_load_BCryptGetProperty();
_imp_load_BCryptHashData();
_imp_load_BCryptOpenAlgorithmProvider();
_imp_load_BSTR_UserFree();
_imp_load_BSTR_UserFree64();
_imp_load_BSTR_UserMarshal();
_imp_load_BSTR_UserMarshal64();
_imp_load_BSTR_UserSize();
_imp_load_BSTR_UserSize64();
_imp_load_BSTR_UserUnmarshal();
_imp_load_BSTR_UserUnmarshal64();
_imp_load_CLSIDFromProgID();
_imp_load_CertCloseStore();
_imp_load_CertFindCertificateInStore();
_imp_load_CertFreeCertificateChain();
_imp_load_CertFreeCertificateContext();
_imp_load_CertNameToStrW();
_imp_load_CertOpenStore();
_imp_load_CertSerializeCertificateStoreElement();
_imp_load_CoCreateFreeThreadedMarshaler();
_imp_load_CoCreateInstance();
_imp_load_CoDecrementMTAUsage();
_imp_load_CoGetApartmentType();
_imp_load_CoIncrementMTAUsage();
_imp_load_CoInitializeEx();
_imp_load_CoInternetGetSession();
_imp_load_CoMarshalInterface();
_imp_load_CoReleaseMarshalData();
_imp_load_CoTaskMemAlloc();
_imp_load_CoTaskMemFree();
_imp_load_CoUninitialize();
_imp_load_CoWaitForMultipleHandles();
_imp_load_CompatFlagsFromClsid();
_imp_load_CreateBindCtx();
_imp_load_CreateStreamOnHGlobal();
_imp_load_CreateStreamOverRandomAccessStream();
_imp_load_CreateURLMonikerEx();
_imp_load_CreateUri();
_imp_load_CryptProtectData();
_imp_load_CryptUnprotectData();
_imp_load_DispatchMessageW();
_imp_load_GetActiveWindow();
_imp_load_GetForegroundWindow();
_imp_load_InternetCrackUrlW();
_imp_load_InternetCreateUrlW();
_imp_load_InternetFreeCookies();
_imp_load_InternetGetCookieEx2();
_imp_load_InternetSetCookieEx2();
_imp_load_InternetSetOptionW();
_imp_load_LoadCursorW();
_imp_load_LoadTypeLib();
_imp_load_MsgWaitForMultipleObjectsEx();
_imp_load_PeekMessageW();
_imp_load_PostQuitMessage();
_imp_load_RegisterBindStatusCallback();
_imp_load_RevokeBindStatusCallback();
_imp_load_RoGetAgileReference();
_imp_load_SafeArrayAccessData();
_imp_load_SafeArrayCopy();
_imp_load_SafeArrayCreateVector();
_imp_load_SafeArrayDestroy();
_imp_load_SafeArrayGetDim();
_imp_load_SafeArrayGetLBound();
_imp_load_SafeArrayGetUBound();
_imp_load_SafeArrayUnaccessData();
_imp_load_SetCursor();
_imp_load_SysAllocString();
_imp_load_SysAllocStringLen();
_imp_load_SysFreeString();
_imp_load_SysStringByteLen();
_imp_load_SysStringLen();
_imp_load_TranslateMessage();
_imp_load_UrlMkGetSessionOption();
_imp_load_VARIANT_UserFree();
_imp_load_VARIANT_UserFree64();
_imp_load_VARIANT_UserMarshal();
_imp_load_VARIANT_UserMarshal64();
_imp_load_VARIANT_UserSize();
_imp_load_VARIANT_UserSize64();
_imp_load_VARIANT_UserUnmarshal();
_imp_load_VARIANT_UserUnmarshal64();
_imp_load_VarDateFromUdate();
_imp_load_VarFormat();
_imp_load_VarNumFromParseNum();
_imp_load_VarParseNumFromStr();
_imp_load_VarUdateFromDate();
_imp_load_VariantChangeType();
_imp_load_VariantChangeTypeEx();
_imp_load_VariantClear();
_imp_load_VariantCopy();
_imp_load_VariantInit();
_imp_load_WinHttpAddRequestHeaders();
_imp_load_WinHttpCloseHandle();
_imp_load_WinHttpConnect();
_imp_load_WinHttpCrackUrl();
_imp_load_WinHttpCreateUrl();
_imp_load_WinHttpOpen();
_imp_load_WinHttpOpenRequest();
_imp_load_WinHttpQueryDataAvailable();
_imp_load_WinHttpQueryHeaders();
_imp_load_WinHttpReadData();
_imp_load_WinHttpReceiveResponse();
_imp_load_WinHttpSendRequest();
_imp_load_WinHttpSetOption();
_msxml6_IID_Lookup();
_msxml6i_IID_Lookup();
_nondelegating_assign();
_normalizeCR();
_onexit();
_onexit$fin$0();
_rawstack<Node * __ptr64>::_rawstack<Node * __ptr64>();
_rawstack<Node * __ptr64>::~_rawstack<Node * __ptr64>();
_rawstack<XsdBuilder::ContainerState>::_rawstack<XsdBuilder::ContainerState>();
_rawstack<XsdEntry const * __ptr64>::_rawstack<XsdEntry const * __ptr64>();
_reference<Atom>::_reference<Atom>();
_reference<DOMDocumentWrapper>::~_reference<DOMDocumentWrapper>();
_reference<DTD>::_reference<DTD>();
_reference<Document>::_reference<Document>();
_reference<Exception>::_reference<Exception>();
_reference<Exception>::attach();
_reference<Exception>::~_reference<Exception>();
_reference<IDispatch>::operator=();
_reference<IDispatch>::reset();
_reference<IDispatch>::~_reference<IDispatch>();
_reference<IPersistStream>::operator=();
_reference<IVBSAXLocator>::_reference<IVBSAXLocator>();
_reference<Name>::_reference<Name>();
_reference<Node>::_reference<Node>();
_reference<Object>::_reference<Object>();
_reference<OutputProperties>::_reference<OutputProperties>();
_reference<ScriptEngine>::operator->();
_reference<ScriptEngine>::operator=();
_reference<String>::_reference<String>();
_reference<String>::attach();
_reference<String>::operator=();
_reference<String>::~_reference<String>();
_reference<W3CDOMWrapper>::~_reference<W3CDOMWrapper>();
_reference<XEngine>::operator=();
_reference<XMLValidator>::operator=();
_safety<_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0> >::AddRef();
_safety<_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0> >::Release();
_safety<_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1> >::QueryInterface();
_safetyRoot<_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0> >::getRootControl();
_safetyRoot<_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0> >::~_safetyRoot<_ComCollection<IXMLDOMSchemaCollection2,&LIBID_MSXML2,&IID_IXMLDOMSchemaCollection2,0> >();
_safetyRoot<_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1> >::getRootControl();
_safetyRoot<_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1> >::~_safetyRoot<_dispatchEx<IVBMXNamespaceManager,&LIBID_MSXML2,&IID_IVBMXNamespaceManager,0,1> >();
_stack<AttValueToken>::grow();
_stack<AttValueToken>::push();
_stack<Attribute>::grow();
_stack<Attribute>::push();
_stack<CharacterSource * __ptr64>::grow();
_stack<DeclAttDef * __ptr64>::grow();
_stack<ElementDecl * __ptr64>::grow();
_stack<InputSource * __ptr64>::grow();
_stack<NamespaceSupport::Map>::grow();
_stack<Reader::ParseElementContext>::grow();
_stack<Reader::ParseElementNContext>::grow();
_stack<Reader::ParseElementNContext>::push();
_stack<`Node::_save'::`2'::SaveContext>::grow();
_stack<`Node::_save'::`2'::SaveContext>::push();
_stack<unsigned short>::grow();
_stack<void (__cdecl Scanner::*)(void) __ptr64>::grow();
_stack<void (__cdecl Scanner::*)(void) __ptr64>::push();
_tailMerge_api_ms_win_core_com_l1_1_0_dll();
_tailMerge_api_ms_win_core_com_l1_1_1_dll();
_tailMerge_api_ms_win_shcore_stream_winrt_l1_1_0_dll();
_tailMerge_bcrypt_dll();
_tailMerge_crypt32_dll();
_tailMerge_ext_ms_win_core_iuri_l1_1_0_dll();
_tailMerge_ext_ms_win_ntuser_message_l1_1_0_dll();
_tailMerge_ext_ms_win_ntuser_synch_l1_1_0_dll();
_tailMerge_ext_ms_win_ntuser_window_l1_1_0_dll();
_tailMerge_ext_ms_win_ntuser_window_l1_1_4_dll();
_tailMerge_ext_ms_win_ole32_bindctx_l1_1_0_dll();
_tailMerge_ext_ms_win_rtcore_ntuser_cursor_l1_1_0_dll();
_tailMerge_oleaut32_dll();
_tailMerge_urlmon_dll();
_tailMerge_winhttp_dll();
_tailMerge_wininet_dll();
_unknown<IConnectionPoint,&IID_IConnectionPoint>::AddRef();
_unknown<IConnectionPoint,&IID_IConnectionPoint>::QueryInterface();
_unknown<IConnectionPoint,&IID_IConnectionPoint>::Release();
_unknown<IConnectionPointContainer,&IID_IConnectionPointContainer>::AddRef();
_unknown<IConnectionPointContainer,&IID_IConnectionPointContainer>::Release();
_unknown<IDTSReader,&IID_IDTSReader>::AddRef();
_unknown<IDTSReader,&IID_IDTSReader>::Release();
_unknown<IDispatch,&IID_IDispatch>::AddRef();
_unknown<IDispatch,&IID_IDispatch>::QueryInterface();
_unknown<IDispatch,&IID_IDispatch>::Release();
_unknown<IEnumConnectionPoints,&IID_IEnumConnectionPoints>::AddRef();
_unknown<IEnumConnectionPoints,&IID_IEnumConnectionPoints>::QueryInterface();
_unknown<IEnumConnectionPoints,&IID_IEnumConnectionPoints>::Release();
_unknown<IEnumConnections,&IID_IEnumConnections>::AddRef();
_unknown<IEnumConnections,&IID_IEnumConnections>::QueryInterface();
_unknown<IEnumConnections,&IID_IEnumConnections>::Release();
_unknown<IEnumVARIANT,&IID_IEnumVARIANT>::AddRef();
_unknown<IEnumVARIANT,&IID_IEnumVARIANT>::Release();
_unknown<IInternetHostSecurityManager,&IID_IInternetHostSecurityManager>::AddRef();
_unknown<IInternetHostSecurityManager,&IID_IInternetHostSecurityManager>::QueryInterface();
_unknown<ISAXAttributes,&IID_ISAXAttributes>::AddRef();
_unknown<ISAXAttributes,&IID_ISAXAttributes>::QueryInterface();
_unknown<ISAXAttributes,&IID_ISAXAttributes>::Release();
_unknown<ISAXContentHandler,&IID_ISAXContentHandler>::AddRef();
_unknown<ISAXContentHandler,&IID_ISAXContentHandler>::QueryInterface();
_unknown<ISAXContentHandler,&IID_ISAXContentHandler>::Release();
_unknown<ISAXDTDHandler,&IID_ISAXDTDHandler>::AddRef();
_unknown<ISAXDTDHandler,&IID_ISAXDTDHandler>::QueryInterface();
_unknown<ISAXDTDHandler,&IID_ISAXDTDHandler>::Release();
_unknown<ISAXDeclHandler,&IID_ISAXDeclHandler>::AddRef();
_unknown<ISAXDeclHandler,&IID_ISAXDeclHandler>::QueryInterface();
_unknown<ISAXDeclHandler,&IID_ISAXDeclHandler>::Release();
_unknown<ISAXEntityResolver,&IID_ISAXEntityResolver>::AddRef();
_unknown<ISAXEntityResolver,&IID_ISAXEntityResolver>::QueryInterface();
_unknown<ISAXEntityResolver,&IID_ISAXEntityResolver>::Release();
_unknown<ISAXErrorHandler,&IID_ISAXErrorHandler>::AddRef();
_unknown<ISAXErrorHandler,&IID_ISAXErrorHandler>::QueryInterface();
_unknown<ISAXErrorHandler,&IID_ISAXErrorHandler>::Release();
_unknown<ISAXLexicalHandler,&IID_ISAXLexicalHandler>::AddRef();
_unknown<ISAXLexicalHandler,&IID_ISAXLexicalHandler>::QueryInterface();
_unknown<ISAXLexicalHandler,&IID_ISAXLexicalHandler>::Release();
_unknown<IStream,&IID_IStream>::AddRef();
_unknown<IStream,&IID_IStream>::QueryInterface();
_unknown<IStream,&IID_IStream>::Release();
_unknown<ISupportErrorInfo,&IID_ISupportErrorInfo>::AddRef();
_unknown<ISupportErrorInfo,&IID_ISupportErrorInfo>::QueryInterface();
_unknown<ISupportErrorInfo,&IID_ISupportErrorInfo>::Release();
_unknown<IXMLNodeFactory,&IID_IXMLNodeFactory>::AddRef();
_unknown<IXMLNodeFactory,&IID_IXMLNodeFactory>::QueryInterface();
_unknown<IXMLNodeFactory,&IID_IXMLNodeFactory>::Release();
_weakreference<Document>::_weakreference<Document>();
_weakreference<Node>::_weakreference<Node>();
_windows2Edata2Exml_IID_Lookup();
_xunknown::Decrement();
_xunknown::Release();
`APN::Mul10'::`1'::filt$0();
`APN::Parse'::`1'::fin$0();
`APN::newAPN'::`1'::filt$0();
`APN::toString'::`1'::filt$0();
`ASTBuilder::checkFunctionArgs'::`1'::fin$0();
`ASTBuilder::checkFunctionArgs'::`1'::fin$1();
`ASTBuilder::checkFunctionArgs'::`1'::fin$2();
`ASTBuilder::functionCall'::`1'::fin$0();
`ASTBuilder::makeName'::`1'::fin$0();
`ASTBuilder::makeURI'::`1'::filt$0();
`ASTBuilder::newPathNode'::`1'::fin$0();
`ASTBuilder::parseNameArg'::`1'::filt$0();
`ASTBuilder::stringLiteral'::`1'::filt$0();
`ASTBuilder::variableRef'::`1'::fin$0();
`ASTCodeGen::errorNode'::`1'::fin$0();
`ASTCodeGen::extensionFunctionCode'::`1'::fin$0();
`ASTCodeGen::xpathFunctionCode'::`1'::fin$0();
`AbortParse'::`1'::filt$0();
`AnyNode::expandTree'::`1'::filt$0();
`AppendNametest'::`1'::fin$0();
`AppendSchemaXPath'::`1'::fin$0();
`Atom2BSTR'::`1'::fin$0();
`Atom::create'::`1'::filt$0();
`AttDef::pushNSDecl'::`1'::fin$0();
`AttributeParser::CreateNode'::`1'::filt$0();
`AttributeParser::CreateNode'::`1'::fin$1();
`AttributesWrapper::newAttributesWrapper'::`1'::filt$0();
`BadEventSinkException'::`1'::filt$0();
`Base::_delete'::`1'::filt$0();
`Base::_delete'::`1'::filt$1();
`Base::freeUnusedObjects'::`1'::filt$0();
`Base::freeUnusedObjects'::`1'::fin$1();
`BaseTextAppendVisitor::toString'::`1'::filt$0();
`BaseTextAppendVisitor::visitPCData'::`1'::fin$0();
`BitSet::New'::`1'::filt$0();
`BitSet::clone'::`1'::filt$0();
`BuffString::newBuffString'::`1'::filt$0();
`BuildXPathToNode'::`1'::fin$0();
`CMSymbolTable::getSymbol'::`1'::fin$0();
`CMSymbolTable::nameOf'::`1'::filt$0();
`COMSafeControlInterfaces::GetInterfaceSafetyOptions'::`1'::filt$0();
`COMSafeControlInterfaces::GetSite'::`1'::filt$0();
`COMSafeControlInterfaces::SetInterfaceSafetyOptions'::`1'::filt$0();
`COMSafeControlInterfaces::SetSite'::`1'::filt$0();
`COMSafeControlRoot::getBaseURLFromSite'::`1'::filt$0();
`COMSafeControlRoot::getSecureBaseURLFromSite'::`1'::filt$0();
`COMSafeControlRoot::setInterfaceSafetyOptions'::`1'::filt$0();
`COMSafeControlRoot::setSecurityFromSite'::`1'::filt$0();
`CXMLConnectionPt::Advise'::`1'::filt$0();
`CachingStream::Write'::`1'::filt$0();
`CachingStream::reserve'::`1'::filt$0();
`CastNode::_optimize'::`1'::filt$0();
`CharacterSourceFactory::Create'::`1'::filt$0();
`ConstraintStruct::New'::`1'::filt$0();
`ConstraintStruct::attribute'::`1'::filt$0();
`ConstraintStruct::endElement'::`1'::filt$0();
`ConstraintStruct::startElement'::`1'::filt$0();
`ConstraintStruct::verifyTables'::`1'::filt$0();
`ConstraintsManager::attribute'::`1'::fin$0();
`ConstraintsManager::endElement'::`1'::fin$0();
`ConstraintsManager::newConstraintsManager'::`1'::filt$0();
`ConstraintsManager::startElement'::`1'::fin$0();
`ConstraintsManager::startElement'::`1'::fin$1();
`ContentHandlerWrapper::newContentHandlerWrapper'::`1'::filt$0();
`ContentModel::addChoice'::`1'::fin$0();
`ContentModel::addSequence'::`1'::fin$0();
`ContentModel::addTerminal'::`1'::fin$0();
`ContentModel::addTerminal'::`1'::fin$1();
`ContentModel::buildStateMachine'::`1'::filt$0();
`ContentModel::checkContent'::`1'::fin$0();
`ContentModel::closeGroup'::`1'::fin$0();
`ContentModel::closure'::`1'::filt$0();
`ContentModel::expectedElements'::`1'::filt$0();
`ContentModel::finish'::`1'::fin$0();
`ContentModel::storeErrorWithExpectedClause'::`1'::fin$0();
`ContentModel::toDeclString'::`1'::filt$0();
`CreateDOMNode'::`1'::filt$0();
`CreateDOMNodeNS'::`1'::filt$0();
`CreateMXHTMLWriter'::`1'::filt$0();
`CreateMXNamespaceManager'::`1'::filt$0();
`CreateMXXMLReader'::`1'::filt$0();
`CreateMXXMLWriter'::`1'::filt$0();
`CreateSAXAttributes'::`1'::filt$0();
`CreateSAXXMLReader'::`1'::filt$0();
`CreateXMLSchemaCache'::`1'::filt$0();
`CreateXSLTemplate'::`1'::filt$0();
`DOMChildList::QueryInterface'::`1'::filt$0();
`DOMDocumentWrapper::ImportNode'::`1'::filt$0();
`DOMDocumentWrapper::LoadXmlFromBufferWithSettings'::`1'::filt$0();
`DOMDocumentWrapper::_createProcessingInstruction'::`1'::filt$0();
`DOMDocumentWrapper::_getDocType'::`1'::filt$0();
`DOMDocumentWrapper::_getDocumentElement'::`1'::filt$0();
`DOMDocumentWrapper::_importNode'::`1'::filt$0();
`DOMDocumentWrapper::_loadXML'::`1'::filt$0();
`DOMDocumentWrapper::_loadXML'::`1'::filt$1();
`DOMDocumentWrapper::_nodeFromID'::`1'::filt$0();
`DOMDocumentWrapper::_validateNode'::`1'::filt$0();
`DOMDocumentWrapper::_validateNode'::`1'::fin$1();
`DOMDocumentWrapper::abort'::`1'::filt$0();
`DOMDocumentWrapper::cloneNode'::`1'::filt$0();
`DOMDocumentWrapper::getProperty'::`1'::filt$0();
`DOMDocumentWrapper::get_DocumentUri'::`1'::filt$0();
`DOMDocumentWrapper::get_async'::`1'::filt$0();
`DOMDocumentWrapper::get_implementation'::`1'::filt$0();
`DOMDocumentWrapper::get_namespaces'::`1'::filt$0();
`DOMDocumentWrapper::get_parseError'::`1'::filt$0();
`DOMDocumentWrapper::get_preserveWhiteSpace'::`1'::filt$0();
`DOMDocumentWrapper::get_readyState'::`1'::filt$0();
`DOMDocumentWrapper::get_resolveExternals'::`1'::filt$0();
`DOMDocumentWrapper::get_schemas'::`1'::filt$0();
`DOMDocumentWrapper::get_url'::`1'::filt$0();
`DOMDocumentWrapper::get_validateOnParse'::`1'::filt$0();
`DOMDocumentWrapper::importNode'::`1'::filt$0();
`DOMDocumentWrapper::load'::`1'::filt$1();
`DOMDocumentWrapper::load'::`1'::filt$2();
`DOMDocumentWrapper::load'::`1'::fin$0();
`DOMDocumentWrapper::put_async'::`1'::filt$0();
`DOMDocumentWrapper::put_ondataavailable'::`1'::filt$0();
`DOMDocumentWrapper::put_onreadystatechange'::`1'::filt$0();
`DOMDocumentWrapper::put_ontransformnode'::`1'::filt$0();
`DOMDocumentWrapper::put_preserveWhiteSpace'::`1'::filt$0();
`DOMDocumentWrapper::put_resolveExternals'::`1'::filt$0();
`DOMDocumentWrapper::put_validateOnParse'::`1'::filt$0();
`DOMDocumentWrapper::putref_documentElement'::`1'::filt$0();
`DOMDocumentWrapper::putref_schemas'::`1'::filt$0();
`DOMDocumentWrapper::save'::`1'::filt$1();
`DOMDocumentWrapper::save'::`1'::fin$0();
`DOMDocumentWrapper::setProperty'::`1'::filt$0();
`DOMError::GetError'::`1'::filt$0();
`DOMError::errorParameters'::`1'::filt$0();
`DOMError::get_allErrors'::`1'::filt$0();
`DOMError::get_errorCode'::`1'::filt$0();
`DOMError::get_errorXPath'::`1'::filt$0();
`DOMError::get_filepos'::`1'::filt$0();
`DOMError::get_line'::`1'::filt$0();
`DOMError::get_linepos'::`1'::filt$0();
`DOMError::get_reason'::`1'::filt$0();
`DOMError::get_srcText'::`1'::filt$0();
`DOMError::get_url'::`1'::filt$0();
`DOMErrorCollection::get_item'::`1'::filt$0();
`DOMNamedNodeMapList::QueryInterface'::`1'::filt$0();
`DOMNamedNodeMapList::RemoveNamedItem'::`1'::filt$0();
`DOMNamedNodeMapList::RemoveNamedItemNS'::`1'::filt$0();
`DOMNamedNodeMapList::SetNamedItem'::`1'::filt$0();
`DOMNamedNodeMapList::SetNamedItemNS'::`1'::filt$0();
`DOMNamedNodeMapList::_getNamedItem'::`1'::filt$0();
`DOMNamedNodeMapList::_getQualifiedItem'::`1'::filt$0();
`DOMNamedNodeMapList::_removeNamedItem'::`1'::filt$0();
`DOMNamedNodeMapList::_removeQualifiedItem'::`1'::filt$0();
`DOMNamedNodeMapList::_setNamedItem'::`1'::filt$0();
`DOMNamedNodeMapList::setNamedItem'::`1'::filt$0();
`DOMNode::HasChildNodes'::`1'::filt$0();
`DOMNode::InsertBefore'::`1'::filt$0();
`DOMNode::RemoveChild'::`1'::filt$0();
`DOMNode::ReplaceChild'::`1'::filt$0();
`DOMNode::_checkNodeNameAndNamespace'::`1'::filt$0();
`DOMNode::_getElementsByTagName'::`1'::filt$0();
`DOMNode::_getOwnerDocument'::`1'::filt$0();
`DOMNode::_getText'::`1'::filt$0();
`DOMNode::_get_baseName'::`1'::filt$0();
`DOMNode::_get_namespaceURI'::`1'::filt$0();
`DOMNode::_get_nodeName'::`1'::filt$0();
`DOMNode::_get_nodeValue'::`1'::filt$0();
`DOMNode::_get_prefix'::`1'::filt$0();
`DOMNode::_get_xml'::`1'::filt$0();
`DOMNode::_normalize'::`1'::filt$0();
`DOMNode::_putText'::`1'::filt$0();
`DOMNode::_selectNodes'::`1'::filt$0();
`DOMNode::_selectSingleNode'::`1'::filt$0();
`DOMNode::_setSelectionNamespaces'::`1'::filt$0();
`DOMNode::cloneNode'::`1'::filt$0();
`DOMNode::cloneNode'::`1'::filt$1();
`DOMNode::get_attributes'::`1'::filt$0();
`DOMNode::get_childNodes'::`1'::filt$0();
`DOMNode::get_dataType'::`1'::filt$0();
`DOMNode::get_definition'::`1'::filt$0();
`DOMNode::get_firstChild'::`1'::filt$0();
`DOMNode::get_lastChild'::`1'::filt$0();
`DOMNode::get_nextSibling'::`1'::filt$0();
`DOMNode::get_nodeTypeString'::`1'::filt$0();
`DOMNode::get_nodeTypedValue'::`1'::filt$0();
`DOMNode::get_parentNode'::`1'::filt$0();
`DOMNode::get_parsed'::`1'::filt$0();
`DOMNode::get_previousSibling'::`1'::filt$0();
`DOMNode::get_specified'::`1'::filt$0();
`DOMNode::hasChildNodes'::`1'::filt$0();
`DOMNode::insertBefore'::`1'::filt$0();
`DOMNode::put_InnerText'::`1'::filt$0();
`DOMNode::put_NodeValue'::`1'::filt$0();
`DOMNode::put_Prefix'::`1'::filt$0();
`DOMNode::put_dataType'::`1'::filt$1();
`DOMNode::put_dataType'::`1'::fin$0();
`DOMNode::put_nodeTypedValue'::`1'::filt$0();
`DOMNode::put_nodeValue'::`1'::filt$0();
`DOMNode::removeChild'::`1'::filt$0();
`DOMNode::replaceChild'::`1'::filt$0();
`DOMNode::transformNode'::`1'::filt$0();
`DOMNode::transformNodeToObject'::`1'::filt$0();
`DOMNodeList::get__newEnum'::`1'::filt$0();
`DOMNodeList::get_item'::`1'::filt$0();
`DOMNodeList::get_length'::`1'::filt$0();
`DOMNodeList::nextNode'::`1'::filt$0();
`DOMNodeList::reset'::`1'::filt$0();
`DOMProcessor::ProcessorRelease'::`1'::filt$0();
`DOMProcessor::addObject'::`1'::filt$0();
`DOMProcessor::addParameter'::`1'::filt$0();
`DOMProcessor::continueTransform'::`1'::filt$0();
`DOMProcessor::get_output'::`1'::filt$0();
`DOMProcessor::get_startMode'::`1'::filt$0();
`DOMProcessor::get_startModeURI'::`1'::filt$0();
`DOMProcessor::initTransform'::`1'::filt$0();
`DOMProcessor::newDOMProcessor'::`1'::filt$0();
`DOMProcessor::putFeature'::`1'::filt$0();
`DOMProcessor::put_byteOrderMark'::`1'::filt$0();
`DOMProcessor::put_encoding'::`1'::filt$0();
`DOMProcessor::put_input'::`1'::filt$0();
`DOMProcessor::put_omitXMLDeclaration'::`1'::filt$0();
`DOMProcessor::put_output'::`1'::filt$0();
`DOMProcessor::reset'::`1'::filt$0();
`DOMProcessor::setStartMode'::`1'::filt$0();
`DOMProcessor::transform'::`1'::filt$0();
`DOMTemplate::createProcessor'::`1'::filt$0();
`DOMTemplate::get_stylesheet'::`1'::filt$0();
`DOMTemplate::putref_stylesheet'::`1'::filt$0();
`DTD::CheckElementValue'::`1'::fin$0();
`DTD::CheckValue'::`1'::fin$0();
`DTD::NewAttDef'::`1'::filt$0();
`DTD::addEntity'::`1'::filt$0();
`DTD::addNotation'::`1'::filt$0();
`DTD::checkAttrEntityRef'::`1'::fin$0();
`DTD::checkContent'::`1'::filt$0();
`DTD::checkEntity'::`1'::fin$0();
`DTD::checkEntityRefLoop'::`1'::fin$0();
`DTD::checkForwardRefs'::`1'::filt$0();
`DTD::checkID'::`1'::fin$0();
`DTD::clone'::`1'::filt$0();
`DTD::createDeclaredElementDecl'::`1'::fin$0();
`DTD::createUndeclaredElementDecl'::`1'::filt$0();
`DTD::findElementDecl'::`1'::fin$0();
`DTD::findElementDeclIncludingUndeclared'::`1'::fin$0();
`DTD::findNodeElemDecl'::`1'::filt$0();
`DTD::fixupNames'::`1'::fin$0();
`DTD::getAttribute'::`1'::fin$0();
`DTD::getAttribute'::`1'::fin$1();
`DTD::getAttribute'::`1'::fin$2();
`DTD::matchElementDecl'::`1'::fin$0();
`DTD::retrieveXsiType'::`1'::fin$0();
`DTD::setDefaultAttributes'::`1'::fin$0();
`DTD::validate'::`1'::filt$1();
`DTD::validate'::`1'::fin$0();
`DTD::walkContentToChild'::`1'::filt$0();
`DTDDecl::addValue'::`1'::fin$0();
`DTDDecl::checkEnumeration'::`1'::fin$0();
`DTDFactory::CreateNode'::`1'::filt$0();
`DTDFactory::CreateNode'::`1'::fin$1();
`DTDFactory::CreateNode_ATTDEF_SUB'::`1'::filt$0();
`DTDFactory::CreateNode_DTDATTR_SUB'::`1'::filt$1();
`DTDFactory::CreateNode_DTDATTR_SUB'::`1'::fin$0();
`DTDFactory::CreateNode_DeclWithAttrs'::`1'::fin$0();
`DTDFactory::CreateNode_ELEMENTDECL'::`1'::fin$0();
`DTDFactory::CreateNode_PEREF'::`1'::fin$0();
`DTDFactory::EndChildren'::`1'::filt$0();
`DTDFactory::EndChildren'::`1'::fin$1();
`DTDFactory::NotifyEvent'::`1'::filt$0();
`DTDFactory::NotifyEvent'::`1'::fin$1();
`DTDFactory::checkAttdef'::`1'::fin$0();
`DTDFactory::parseEntity'::`1'::fin$0();
`DTDHandlerWrapper::newDTDHandlerWrapper'::`1'::filt$0();
`DTDValidator::New'::`1'::filt$0();
`DTDValidator::attributeCheckValueDTD'::`1'::fin$0();
`DTDValidator::checkDFA'::`1'::fin$0();
`DTDValidator::endDocument'::`1'::filt$0();
`DTDValidator::endElement'::`1'::filt$0();
`DTDValidator::endElement'::`1'::fin$1();
`DTDValidator::handleException'::`1'::fin$0();
`DTDValidator::startElement'::`1'::filt$0();
`DTDValidator::startElement'::`1'::filt$1();
`DTDValidator::startElement'::`1'::fin$2();
`DTDValidator::throwException'::`1'::fin$0();
`DTSAttributes::EnsureNSDeclD'::`1'::fin$0();
`DTSAttributes::addAttribute'::`1'::fin$0();
`DTSAttributes::addNamespaceDecl'::`1'::fin$0();
`DTSAttributes::getIndexFromName'::`1'::filt$0();
`DTSAttributes::getIndexFromQName'::`1'::filt$0();
`DTSAttributes::getLength'::`1'::filt$0();
`DTSAttributes::getLocalName'::`1'::filt$0();
`DTSAttributes::getQName'::`1'::filt$0();
`DTSAttributes::getType'::`1'::filt$0();
`DTSAttributes::getTypeFromName'::`1'::filt$0();
`DTSAttributes::getTypeFromQName'::`1'::filt$0();
`DTSAttributes::getURI'::`1'::filt$0();
`DTSAttributes::getValue'::`1'::filt$0();
`DTSAttributes::getValueFromName'::`1'::filt$0();
`DTSAttributes::getValueFromQName'::`1'::filt$0();
`DTSAttributes::newDTSAttributes'::`1'::filt$0();
`DTSReader::_traverse'::`1'::filt$0();
`DTSReader::_traverse'::`1'::filt$1();
`DTSReader::dtdElementDecls'::`1'::filt$0();
`DTSReader::getProperty'::`1'::filt$0();
`DTSReader::traverse'::`1'::fin$0();
`Datatype_ENTITY::ParseAtomicValue'::`1'::filt$0();
`Datatype_ID::ParseAtomicValue'::`1'::filt$0();
`Datatype_IDREF::ParseAtomicValue'::`1'::filt$0();
`Datatype_NCName::ParseAtomicValue'::`1'::filt$0();
`Datatype_NMTOKEN::ParseAtomicValue'::`1'::filt$0();
`Datatype_NOTATION::ParseAtomicValue'::`1'::filt$0();
`Datatype_Name::ParseAtomicValue'::`1'::filt$0();
`Datatype_QName::ParseAtomicValue'::`1'::filt$0();
`Datatype_anyType::ParseAtomicValue'::`1'::filt$0();
`Datatype_anyURI::ParseAtomicValue'::`1'::filt$0();
`Datatype_base64Binary::ParseAtomicValue'::`1'::filt$0();
`Datatype_boolean::ParseAtomicValue'::`1'::filt$0();
`Datatype_dateTimeBase::ParseAtomicValue'::`1'::filt$0();
`Datatype_decimal::CheckFractionDigits'::`1'::fin$0();
`Datatype_decimal::CheckTotalDigits'::`1'::fin$0();
`Datatype_decimal::ParseAtomicValue'::`1'::filt$0();
`Datatype_decimal::ParseAtomicValue'::`1'::filt$1();
`Datatype_double::ParseAtomicValue'::`1'::filt$0();
`Datatype_duration::ParseAtomicValue'::`1'::filt$0();
`Datatype_float::ParseAtomicValue'::`1'::filt$0();
`Datatype_hexBinary::ParseAtomicValue'::`1'::filt$0();
`Datatype_integer::ParseIntegralValue'::`1'::filt$0();
`Datatype_integer::ParseIntegralValue'::`1'::filt$2();
`Datatype_integer::ParseIntegralValue'::`1'::fin$1();
`Datatype_integer::ParseIntegralValue'::`1'::fin$3();
`Datatype_language::VerifyLangID'::`1'::fin$0();
`Datatype_language::classInit'::`1'::filt$0();
`Datatype_string::ParseAtomicValue'::`1'::filt$0();
`Datatype_union::ParseUnion'::`1'::filt$0();
`DecimalFormat::appendString'::`1'::fin$0();
`DecimalFormat::applyPattern'::`1'::fin$0();
`DecimalFormat::applyPattern'::`1'::fin$1();
`DecimalFormat::format'::`1'::filt$0();
`DecimalFormat::format'::`1'::filt$1();
`DecimalFormat::storeParseError'::`1'::fin$0();
`DeclElement::InsertAttDef'::`1'::filt$0();
`DeclHandlerWrapper::newDeclHandlerWrapper'::`1'::filt$0();
`DefaultWriter::New'::`1'::filt$0();
`DefaultWriter::beginElement'::`1'::filt$0();
`DefaultWriter::closeOutput'::`1'::filt$0();
`DefaultWriter::createStreamWriter'::`1'::filt$0();
`DefaultWriter::stringText'::`1'::filt$0();
`DefaultWriter::wcharText'::`1'::fin$0();
`DispatchFunctions::executeFunction'::`1'::fin$0();
`DispatchFunctions::invokeDispatch'::`1'::fin$0();
`DocStream::Stat'::`1'::filt$0();
`DocStream::Write'::`1'::filt$0();
`DocStream::Write'::`1'::filt$1();
`Document::GetCurMoniker'::`1'::filt$0();
`Document::HandleEndDocument'::`1'::filt$2();
`Document::HandleEndDocument'::`1'::fin$0();
`Document::HandleEndDocument'::`1'::fin$1();
`Document::HandleEndDocument'::`1'::fin$3();
`Document::HandleParseError'::`1'::fin$0();
`Document::Load'::`1'::filt$0();
`Document::QIHelper'::`1'::filt$0();
`Document::Release'::`1'::filt$0();
`Document::Save'::`1'::filt$0();
`Document::_clone'::`1'::filt$0();
`Document::_createDocNode'::`1'::filt$0();
`Document::_load'::`1'::filt$0();
`Document::abort'::`1'::filt$1();
`Document::abort'::`1'::fin$0();
`Document::createException'::`1'::filt$0();
`Document::createException'::`1'::filt$1();
`Document::createOutput'::`1'::fin$0();
`Document::getParser'::`1'::filt$0();
`Document::initDefaultFactory'::`1'::filt$0();
`Document::load'::`1'::filt$0();
`Document::load'::`1'::filt$1();
`Document::loadXML'::`1'::filt$0();
`Document::lockElement'::`1'::filt$0();
`Document::newDocument'::`1'::filt$0();
`Document::parseXMLDecl'::`1'::filt$0();
`Document::prepareDOMLoad'::`1'::filt$0();
`Document::run'::`1'::filt$0();
`Document::save'::`1'::filt$0();
`Document::save'::`1'::fin$0();
`Document::setLastError'::`1'::filt$0();
`Document::throwError'::`1'::fin$0();
`Document::unlockElement'::`1'::filt$0();
`DocumentManager::calcAbsoluteURI'::`1'::filt$0();
`DocumentManager::createDocument'::`1'::filt$0();
`DocumentManager::initDocumentManager'::`1'::fin$0();
`DocumentManager::loadDocument'::`1'::filt$0();
`DocumentManager::lockNode'::`1'::filt$0();
`DocumentManager::newDocumentNodeSet'::`1'::fin$0();
`DocumentManager::registerDocument'::`1'::fin$0();
`DocumentManager::registerNode'::`1'::fin$0();
`DocumentSchemaCollection::getDeclaration'::`1'::filt$0();
`DocumentSchemaCollection::getSchema'::`1'::filt$0();
`ElementDecl::checkDefaultRequiredAttributes'::`1'::filt$0();
`ElementDecl::classInit'::`1'::filt$0();
`ElementDecl::fixupNames'::`1'::fin$0();
`EnsureClassInit'::`1'::filt$0();
`EnsureNSDecl'::`1'::fin$0();
`EntityResolverWrapper::newEntityResolverWrapper'::`1'::filt$0();
`ErrorHandlerWrapper::newErrorHandlerWrapper'::`1'::filt$0();
`Exception::_addDetail'::`1'::fin$0();
`Exception::_buildException'::`1'::filt$0();
`Exception::_storeError'::`1'::fin$0();
`Exception::addDetail'::`1'::fin$0();
`Exception::addParameters'::`1'::fin$0();
`Exception::handleExceptionEx'::`1'::fin$0();
`Exception::setErrorSchemaXPath'::`1'::filt$1();
`Exception::setErrorSchemaXPath'::`1'::fin$0();
`Exception::setErrorXPath'::`1'::filt$0();
`ExpressionCompiler::compileExpression'::`1'::filt$0();
`ExpressionCompiler::resolveFunctionCall'::`1'::fin$0();
`FillExceptionLocation'::`1'::fin$0();
`FindQualifiedNode'::`1'::fin$0();
`ForEachCompile::beginForEach'::`1'::fin$0();
`ForEachCompile::compileText'::`1'::fin$0();
`FormatInternalMessage'::`1'::filt$0();
`FunctionCallNode::newFunctionCallNode'::`1'::fin$0();
`FunctionLookup::lookupMSXSLFunction'::`1'::fin$0();
`FunctionLookup::lookupXPathFunction'::`1'::fin$0();
`FunctionLookup::lookupXSLTFunction'::`1'::fin$0();
`GetAttributeValueCollapsing'::`1'::filt$0();
`GetAttributeValueNormalizing'::`1'::fin$0();
`GetAttributeValueNormalizing'::`1'::fin$1();
`GetElement'::`1'::filt$0();
`GetEntityResolvedURL'::`1'::filt$0();
`HTMLOutputHelper::New'::`1'::filt$0();
`HTMLWriter::New'::`1'::filt$0();
`HTMLWriter::beginElement'::`1'::fin$0();
`HTMLWriter::beginPI'::`1'::fin$0();
`HTMLWriter::closeOutput'::`1'::filt$0();
`HTMLWriter::endElement'::`1'::fin$0();
`HTMLWriter::outputAttributes'::`1'::fin$0();
`HTMLWriter::prefixMapping'::`1'::fin$0();
`HTTPHeaders::additionalHeaders'::`1'::filt$0();
`HTTPHeaders::parseHeaders'::`1'::filt$0();
`HTTPHeaders::set'::`1'::filt$0();
`HTTPHeaders::setAll'::`1'::filt$0();
`HandleList::initHandles'::`1'::fin$0();
`Hashtable::_get'::`1'::filt$0();
`Hashtable::_remove'::`1'::filt$0();
`Hashtable::_remove'::`1'::filt$1();
`Hashtable::_set'::`1'::filt$0();
`Hashtable::clone'::`1'::filt$0();
`IDCheck::check'::`1'::fin$0();
`IDNodeSet::IDNodeSet'::`1'::fin$0();
`IDNodeSet::addIDs'::`1'::fin$0();
`IEnumVARIANTImpl::newIEnumVARIANTImpl'::`1'::filt$0();
`IEnumVARIANTWrapper::Clone'::`1'::filt$0();
`IEnumVARIANTWrapper::Next'::`1'::filt$0();
`IEnumVARIANTWrapper::Reset'::`1'::filt$0();
`IEnumVARIANTWrapper::Skip'::`1'::filt$0();
`IndexManager::buildIndex'::`1'::filt$1();
`IndexManager::buildIndex'::`1'::fin$0();
`IndexManager::newKeyNodeSet'::`1'::fin$0();
`InstrCompile::compileApplyTemplates'::`1'::fin$0();
`InstrCompile::compileAttribute'::`1'::fin$0();
`InstrCompile::compileCallTemplate'::`1'::fin$0();
`InstrCompile::compileElement'::`1'::fin$0();
`InstrCompile::compileExtensionElement'::`1'::fin$0();
`InstrCompile::compileInstruction'::`1'::fin$0();
`InstrCompile::compileNumber'::`1'::fin$0();
`InstrCompile::compileText'::`1'::fin$0();
`InstrCompile::compileUseAttrSets'::`1'::filt$0();
`InstrCompile::compileVariableType'::`1'::fin$0();
`InstrCompile::throwMayNotContainError'::`1'::fin$0();
`IntegerHashtable::_set'::`1'::filt$0();
`InternalNode::clone'::`1'::filt$0();
`InternetHost::CreateMoniker'::`1'::filt$0();
`KeySequence::newKeySequence'::`1'::filt$0();
`KeySequence::setKey'::`1'::filt$0();
`KeySequence::toString'::`1'::filt$0();
`LexicalHandlerWrapper::newLexicalHandlerWrapper'::`1'::filt$0();
`LiveQuerySelection::CheckVersionAndRepopulateNodeList'::`1'::filt$0();
`LoadWorkItem::FireCompletion'::`1'::fin$0();
`LoadWorkItem::SetBaseUrlHelper'::`1'::filt$0();
`LocatorWrapper::newLocatorWrapper'::`1'::filt$0();
`LookupDataType'::`1'::filt$0();
`LookupURIAtom'::`1'::filt$0();
`MTInit'::`1'::filt$0();
`MXAny::QueryInterface'::`1'::filt$0();
`MXAnyAttribute::QueryInterface'::`1'::filt$0();
`MXAnyItem<MXItem<SchemaAnyAttribute,ISchemaAny,_MXItem> >::get_namespaces'::`1'::filt$0();
`MXAnyItem<MXParticle<SchemaAny,ISchemaAny> >::get_namespaces'::`1'::filt$0();
`MXAttribute::QueryInterface'::`1'::filt$0();
`MXAttribute::get_defaultValue'::`1'::filt$0();
`MXAttribute::get_fixedValue'::`1'::filt$0();
`MXAttribute::get_scope'::`1'::filt$0();
`MXAttribute::get_type'::`1'::filt$0();
`MXAttributeGroup::QueryInterface'::`1'::filt$0();
`MXAttributeGroup::get_anyAttribute'::`1'::filt$0();
`MXAttributeGroup::get_attributes'::`1'::filt$0();
`MXComplexType::QueryInterface'::`1'::filt$0();
`MXComplexType::get_anyAttribute'::`1'::filt$0();
`MXComplexType::get_attributes'::`1'::filt$0();
`MXComplexType::get_baseTypes'::`1'::filt$0();
`MXComplexType::get_contentModel'::`1'::filt$0();
`MXDataType::QueryInterface'::`1'::filt$0();
`MXDataType::get_baseTypes'::`1'::filt$0();
`MXElement::QueryInterface'::`1'::filt$0();
`MXElement::get_defaultValue'::`1'::filt$0();
`MXElement::get_fixedValue'::`1'::filt$0();
`MXElement::get_identityConstraints'::`1'::filt$0();
`MXElement::get_scope'::`1'::filt$0();
`MXElement::get_substitutionGroup'::`1'::filt$0();
`MXElement::get_type'::`1'::filt$0();
`MXHTMLWriter::newMXHTMLWriter'::`1'::filt$0();
`MXHTMLWriter::put_output'::`1'::filt$0();
`MXIdentityConstraint::QueryInterface'::`1'::filt$0();
`MXIdentityConstraint::get_fields'::`1'::filt$0();
`MXIdentityConstraint::get_referencedKey'::`1'::filt$0();
`MXIdentityConstraint::get_selector'::`1'::filt$0();
`MXItemCollection::get_item'::`1'::filt$0();
`MXItemCollection::itemByName'::`1'::fin$0();
`MXItemCollection::itemByQName'::`1'::filt$0();
`MXItemCollection::newMXItemCollection'::`1'::fin$0();
`MXModelGroup::QueryInterface'::`1'::filt$0();
`MXModelGroup::get_itemType'::`1'::filt$0();
`MXModelGroup::get_particles'::`1'::filt$0();
`MXModelGroup::get_schema'::`1'::filt$0();
`MXNamespaceManager::QueryInterface'::`1'::filt$0();
`MXNamespaceManager::declarePrefix'::`1'::filt$0();
`MXNamespaceManager::getDeclaredPrefix'::`1'::filt$0();
`MXNamespaceManager::getDeclaredPrefixes'::`1'::filt$0();
`MXNamespaceManager::getPrefix'::`1'::filt$0();
`MXNamespaceManager::getPrefixes'::`1'::filt$0();
`MXNamespaceManager::getPrefixesVector'::`1'::filt$0();
`MXNamespaceManager::getURI'::`1'::filt$0();
`MXNamespaceManager::getURI'::`1'::filt$1();
`MXNamespaceManager::getURIFromNode'::`1'::filt$0();
`MXNamespaceManager::getURIFromPrefix'::`1'::fin$0();
`MXNamespaceManager::popContext'::`1'::filt$0();
`MXNamespaceManager::pushNodeContext'::`1'::filt$0();
`MXNamespaceManager::pushNodeNamespaces'::`1'::fin$0();
`MXNamespaceManager::reset'::`1'::filt$0();
`MXNamespacePrefixes::get_item'::`1'::filt$0();
`MXNotation::QueryInterface'::`1'::filt$0();
`MXNotation::get_name'::`1'::filt$0();
`MXNotation::get_publicIdentifier'::`1'::filt$0();
`MXNotation::get_systemIdentifier'::`1'::filt$0();
`MXSOMNavigator::getXSIElement'::`1'::fin$0();
`MXSchema::QueryInterface'::`1'::filt$0();
`MXSchema::get_attributeGroups'::`1'::filt$0();
`MXSchema::get_attributes'::`1'::filt$0();
`MXSchema::get_elements'::`1'::filt$0();
`MXSchema::get_modelGroups'::`1'::filt$0();
`MXSchema::get_notations'::`1'::filt$0();
`MXSchema::get_schemaLocations'::`1'::filt$0();
`MXSchema::get_targetNamespace'::`1'::filt$0();
`MXSchema::get_types'::`1'::filt$0();
`MXSchema::get_version'::`1'::filt$0();
`MXSimpleType::QueryInterface'::`1'::filt$0();
`MXSimpleType::get_baseTypes'::`1'::filt$0();
`MXStringCollection::get_item'::`1'::filt$0();
`MXUnhandledAttributes::newMXUnhandledAttributes'::`1'::filt$0();
`MXXMLWriter::QueryInterface'::`1'::filt$0();
`MXXMLWriter::endDocument'::`1'::filt$0();
`MXXMLWriter::flush'::`1'::filt$0();
`MXXMLWriter::get_output'::`1'::filt$0();
`MXXMLWriter::newMXXMLWriter'::`1'::filt$0();
`MXXMLWriter::put_encoding'::`1'::filt$0();
`MXXMLWriter::put_output'::`1'::filt$0();
`MXXMLWriter::put_version'::`1'::filt$0();
`MXXMLWriter::startDocument'::`1'::filt$0();
`MatchNameLookup::addMatcher'::`1'::fin$0();
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::`dynamic atexit destructor for 'moduleSingleton''();
`MsxmlOriginateError'::`1'::filt$0();
`Name::create'::`1'::filt$0();
`Name::create'::`1'::fin$0();
`Name::toDTDString'::`1'::filt$0();
`Name::toString'::`1'::filt$0();
`NameDef::newNameDef'::`1'::filt$0();
`NameDef::toString'::`1'::fin$0();
`NamespaceMgr::New'::`1'::filt$0();
`NamespaceMgr::_createNameDef'::`1'::filt$0();
`NamespaceMgr::clone'::`1'::filt$0();
`NamespaceMgr::createAtom'::`1'::filt$0();
`NamespaceMgr::createNameDef'::`1'::filt$0();
`NamespaceMgr::createNameDef'::`1'::fin$0();
`NamespaceMgr::createNameDef'::`1'::fin$1();
`NamespaceMgr::createPrefix'::`1'::filt$0();
`NamespaceMgr::ensureGlobalURNExists'::`1'::fin$0();
`NamespaceMgr::ensureURNExists'::`1'::fin$0();
`NamespaceMgr::findURN'::`1'::fin$0();
`NamespaceMgr::parseNames'::`1'::filt$0();
`NamespaceMgr::pushScope'::`1'::fin$0();
`NamespaceMgr::validateNameDef'::`1'::fin$0();
`NamespaceParser::parsedAttribute'::`1'::fin$0();
`Node::CreatePrefixHelper'::`1'::filt$0();
`Node::Node'::`1'::fin$0();
`Node::QIHelper'::`1'::filt$0();
`Node::__delete'::`1'::filt$0();
`Node::__delete'::`1'::filt$1();
`Node::_dtText'::`1'::filt$0();
`Node::_expandEntityRef'::`1'::fin$0();
`Node::_findByNodeName'::`1'::fin$0();
`Node::_getAttDef'::`1'::fin$0();
`Node::_normalize'::`1'::fin$0();
`Node::_putPrefix'::`1'::filt$0();
`Node::_putPrefix'::`1'::filt$1();
`Node::_save'::`1'::fin$0();
`Node::_save'::`2'::SaveContext::cleanup();
`Node::_saveAttributes'::`1'::fin$0();
`Node::addID'::`1'::fin$0();
`Node::cloneChildren'::`1'::filt$0();
`Node::cloneExpandEntRef'::`1'::filt$2();
`Node::cloneExpandEntRef'::`1'::fin$0();
`Node::cloneExpandEntRef'::`1'::fin$1();
`Node::copyNamespaces'::`1'::fin$0();
`Node::findNamespaceURN'::`1'::filt$0();
`Node::getAttributeText'::`1'::filt$0();
`Node::getAttributesXML'::`1'::filt$0();
`Node::getContentAsName'::`1'::filt$0();
`Node::getDefinition'::`1'::fin$0();
`Node::getTypedValue'::`1'::fin$0();
`Node::getXML'::`1'::filt$0();
`Node::innerTextCheck'::`1'::filt$0();
`Node::innerTextCheck'::`1'::fin$1();
`Node::insertDefaultAttr'::`1'::filt$0();
`Node::insertDefaultAttr'::`1'::fin$1();
`Node::isElementPrefixConflicted'::`1'::fin$0();
`Node::moveNode'::`1'::filt$0();
`Node::moveNode'::`1'::filt$1();
`Node::moveNode'::`1'::filt$2();
`Node::moveNode'::`1'::fin$3();
`Node::moveNodeCheck'::`1'::filt$0();
`Node::moveNodeCheck'::`1'::fin$1();
`Node::moveNodeUpdate'::`1'::fin$0();
`Node::newNode'::`1'::fin$0();
`Node::notifyChangeContent'::`1'::fin$0();
`Node::notifyNew'::`1'::fin$0();
`Node::parseQName'::`1'::fin$0();
`Node::removeDefaultAttrs_Recursive'::`1'::fin$0();
`Node::removeID'::`1'::fin$0();
`Node::save'::`1'::fin$0();
`Node::saveQuotedValue'::`1'::fin$0();
`Node::saveQuotedValueConformant'::`1'::fin$0();
`Node::setAttribute'::`1'::filt$0();
`Node::setInnerText'::`1'::filt$0();
`Node::setInnerText'::`1'::fin$0();
`Node::setTypedValue'::`1'::fin$0();
`Node::visitText'::`1'::fin$0();
`NodeBuilder::IncrementElementDepth'::`1'::fin$0();
`NodeBuilder::_bufferAttach'::`1'::fin$0();
`NodeBuilder::cdata'::`1'::filt$0();
`NodeBuilder::characters'::`1'::filt$0();
`NodeBuilder::endElement'::`1'::filt$0();
`NodeBuilder::entityRef'::`1'::filt$0();
`NodeBuilder::nonContent'::`1'::filt$0();
`NodeBuilder::nonContent'::`1'::fin$1();
`NodeBuilder::processXmlSpace'::`1'::filt$0();
`NodeBuilder::startElementContent'::`1'::filt$0();
`NodeBuilder::whitespace'::`1'::filt$0();
`NodeBuilder::xmldecl'::`1'::fin$0();
`NodeFactory::CreateNode'::`1'::filt$2();
`NodeFactory::CreateNode'::`1'::fin$0();
`NodeFactory::CreateNode'::`1'::fin$1();
`NodeFactory::CreateNode'::`1'::fin$3();
`NodeFactory::EndChildren'::`1'::filt$0();
`NodeFactory::EndChildren'::`1'::fin$1();
`NodeFactory::FindXmlDeclAttributeValue'::`1'::filt$0();
`NodeFactory::NotifyEvent'::`1'::filt$0();
`NodeFactory::NotifyEvent'::`1'::fin$1();
`NodeFactory::ProcessName'::`1'::filt$0();
`NodeFactory::ProcessXMLNSAttributes'::`1'::fin$0();
`NodeFactory::abort'::`1'::filt$0();
`NodeFactory::reset'::`1'::filt$0();
`NonMultSimpleIUnknown::Release'::`1'::filt$0();
`NonValidatingDTDValidator::New'::`1'::filt$0();
`NonValidatingDTDValidator::startElement'::`1'::fin$0();
`NullElement::getNullElement'::`1'::filt$0();
`ObjectFromVariant'::`1'::filt$0();
`OutputHelper::New'::`1'::filt$0();
`OutputHelper::close'::`1'::filt$0();
`ParameterCache::addObjectParam'::`1'::fin$0();
`ParameterCache::addSimpleParam'::`1'::fin$0();
`ParseAsAPN'::`1'::fin$0();
`ParseDatatypeE'::`1'::fin$0();
`ParseNames::_createName'::`1'::fin$0();
`ParseNames::_throwBadNameChar'::`1'::fin$0();
`ParseNames::addQNamesToHashtable'::`1'::fin$0();
`ParseNames::addQNamesToVector'::`1'::fin$0();
`ParseNames::createPrefixThrow'::`1'::fin$0();
`ParseNames::createPrefixThrow'::`1'::fin$1();
`ParseNames::nextPrefix'::`1'::fin$0();
`ParseNames::parsePrefixListThrow'::`1'::fin$0();
`ParseStreamBySaxReader'::`1'::filt$0();
`PeepholeOptimize::frag_e'::`1'::fin$0();
`ProcessXmlSpace'::`1'::filt$0();
`PropertyValueToString'::`1'::filt$0();
`QueryNodeList::createQueryNodeList'::`1'::filt$0();
`QueryNodeListImpl::QIHelper'::`1'::filt$0();
`QueryNodeListImpl::get__newEnum'::`1'::filt$0();
`QueryNodeListImpl::get_length'::`1'::filt$0();
`QueryNodeListImpl::moveTo'::`1'::filt$0();
`QuerySelection::clone'::`1'::filt$0();
`QuerySelection::compileSelection'::`1'::filt$0();
`QuerySelection::compileSelection'::`1'::fin$1();
`QuerySelection::createQuerySelection'::`1'::filt$0();
`QuerySelection::getProperty'::`1'::filt$0();
`QuerySelection::get_context'::`1'::filt$0();
`QuerySelection::matches'::`1'::filt$0();
`QuerySelection::populateNodeList'::`1'::filt$0();
`QuerySelection::put_expr'::`1'::filt$0();
`QuerySelection::putref_context'::`1'::filt$0();
`QuerySelection::removeAll'::`1'::filt$0();
`QuerySelection::removeNext'::`1'::filt$0();
`RTF::constructNavigator'::`1'::fin$0();
`RTF::constructText'::`1'::filt$0();
`RTF::getNavigator'::`1'::fin$0();
`RTFBuilder::New'::`1'::filt$0();
`RTFBuilder::addTextNode'::`1'::fin$0();
`RTFBuilder::beginChildren'::`1'::fin$0();
`RTFBuilder::prefixMapping'::`1'::fin$0();
`ReachableSchemas'::`1'::filt$0();
`Reader::HandleEntity'::`1'::filt$0();
`Reader::Initialize'::`1'::filt$0();
`Reader::Parse'::`1'::filt$0();
`Reader::parse'::`1'::filt$0();
`Reader::parseURL'::`1'::filt$0();
`Reader::pushInputSource'::`1'::filt$0();
`Reader::putProperty'::`1'::filt$0();
`Regex::New'::`1'::filt$0();
`Regex::Run'::`1'::fin$0();
`RegexBoyerMoore::Init'::`1'::fin$0();
`RegexBoyerMoore::New'::`1'::filt$0();
`RegexCharClass::AddCategoryFromName'::`1'::fin$0();
`RegexCharClass::AddCharClass'::`1'::fin$0();
`RegexCharClass::AddRange'::`1'::fin$0();
`RegexCharClass::AddSet'::`1'::filt$0();
`RegexCharClass::CreateFromCategory'::`1'::filt$0();
`RegexCharClass::NegateCategory'::`1'::filt$0();
`RegexCharClass::New'::`1'::filt$0();
`RegexCharClass::SetFromChar'::`1'::filt$0();
`RegexCharClass::SetUnion'::`1'::filt$0();
`RegexCharClass::ToSet'::`1'::filt$0();
`RegexCharClass::classInit'::`1'::filt$0();
`RegexCode::New'::`1'::filt$0();
`RegexFC::New'::`1'::filt$0();
`RegexFCD::CalculateFC'::`1'::filt$0();
`RegexFCD::FirstChars'::`1'::filt$0();
`RegexFCD::New'::`1'::filt$0();
`RegexFCD::Prefix'::`1'::fin$0();
`RegexFCD::PushFC'::`1'::fin$0();
`RegexFCD::PushInt'::`1'::fin$0();
`RegexMatch::AddMatch'::`1'::fin$0();
`RegexMatch::New'::`1'::filt$0();
`RegexMatchSparse::New'::`1'::filt$0();
`RegexNode::ReduceAlternation'::`1'::fin$0();
`RegexNode::ReduceConcatenation'::`1'::fin$0();
`RegexParser::AddConcatenate'::`1'::fin$0();
`RegexParser::AddUnitSet'::`1'::fin$0();
`RegexParser::AssignNameSlots'::`1'::fin$0();
`RegexParser::AssignNameSlots'::`1'::fin$1();
`RegexParser::CountCaptures'::`1'::fin$0();
`RegexParser::CountCaptures'::`1'::fin$1();
`RegexParser::IsCaptureSlot'::`1'::filt$0();
`RegexParser::NoteCaptureName'::`1'::fin$0();
`RegexParser::NoteCaptureSlot'::`1'::fin$0();
`RegexParser::Parse'::`1'::filt$0();
`RegexParser::ScanBackslash'::`1'::filt$0();
`RegexParser::ScanBasicBackslash'::`1'::filt$0();
`RegexParser::ScanCharClass'::`1'::filt$0();
`RegexParser::ScanGroupOpen'::`1'::filt$0();
`RegexParser::ScanGroupOpen'::`1'::filt$2();
`RegexParser::ScanGroupOpen'::`1'::fin$1();
`RegexParser::ScanRegex'::`1'::fin$0();
`RegexParser::throwError'::`1'::fin$0();
`RegexRunner::DoubleCrawl'::`1'::fin$0();
`RegexRunner::DoubleStack'::`1'::fin$0();
`RegexRunner::DoubleTrack'::`1'::fin$0();
`RegexWriter::MapCapnum'::`1'::filt$0();
`RegexWriter::New'::`1'::filt$0();
`RegexWriter::PushInt'::`1'::fin$0();
`RegexWriter::RegexCodeFromRegexTree'::`1'::filt$0();
`RegexWriter::RegexCodeFromRegexTree'::`1'::fin$1();
`RegexWriter::StringCode'::`1'::fin$0();
`RegexWriter::Write'::`1'::filt$0();
`Resources::FormatMessageHelper'::`1'::filt$0();
`Resources::FormatSystemMessage'::`1'::filt$0();
`Resources::formatMessage'::`1'::filt$0();
`RuntimeValidator::buildAttributes'::`1'::fin$0();
`RuntimeValidator::handleException'::`1'::fin$0();
`RuntimeValidator::validateAttribute'::`1'::filt$0();
`RuntimeValidator::validateChildNodes'::`1'::filt$1();
`RuntimeValidator::validateChildNodes'::`1'::fin$0();
`RuntimeValidator::validateElement'::`1'::filt$0();
`RuntimeValidator::validateEntity'::`1'::filt$0();
`RuntimeValidator::validateNode'::`1'::filt$0();
`RuntimeValidator::validateNode'::`1'::filt$1();
`RuntimeValidator::validateNode'::`1'::filt$2();
`RuntimeValidator::validateTree'::`1'::filt$1();
`RuntimeValidator::validateTree'::`1'::fin$0();
`RuntimeValidator::validateTree'::`1'::fin$2();
`SAXAttributes::Init'::`1'::filt$0();
`SAXAttributes::addAttribute'::`1'::fin$0();
`SAXAttributes::allocWCHAR'::`1'::filt$0();
`SAXAttributes::ensureCapacity'::`1'::filt$0();
`SAXAttributes::newSAXAttributes'::`1'::filt$0();
`SAXAttributes::removeAttribute'::`1'::filt$0();
`SAXBuilder::NewAttribute'::`1'::filt$0();
`SAXBuilder::NewEntity'::`1'::fin$0();
`SAXBuilder::_characters'::`1'::filt$0();
`SAXBuilder::_endElement'::`1'::filt$0();
`SAXBuilder::_ignorableWhitespace'::`1'::filt$0();
`SAXBuilder::_startElement'::`1'::filt$0();
`SAXBuilder::abort'::`1'::filt$0();
`SAXBuilder::attributeDecl'::`1'::filt$0();
`SAXBuilder::comment'::`1'::filt$0();
`SAXBuilder::elementDecl'::`1'::filt$0();
`SAXBuilder::endCDATA'::`1'::filt$0();
`SAXBuilder::endDTD'::`1'::filt$0();
`SAXBuilder::endDocument'::`1'::filt$0();
`SAXBuilder::endDocument'::`1'::filt$1();
`SAXBuilder::endEntity'::`1'::filt$0();
`SAXBuilder::error'::`1'::filt$0();
`SAXBuilder::externalEntityDecl'::`1'::filt$0();
`SAXBuilder::handleException'::`1'::fin$0();
`SAXBuilder::internalEntityDecl'::`1'::filt$0();
`SAXBuilder::notationDecl'::`1'::filt$0();
`SAXBuilder::processingInstruction'::`1'::filt$0();
`SAXBuilder::skippedEntity'::`1'::filt$0();
`SAXBuilder::startCDATA'::`1'::filt$0();
`SAXBuilder::startDTD'::`1'::filt$0();
`SAXBuilder::startDocument'::`1'::filt$0();
`SAXBuilder::startDocument'::`1'::filt$1();
`SAXBuilder::startEntity'::`1'::filt$0();
`SAXBuilder::startPrefixMapping'::`1'::filt$0();
`SAXBuilder::unparsedEntityDecl'::`1'::filt$0();
`SAXCheckedBuilder::_abort_'::`1'::filt$0();
`SAXHTMLWriter::characters'::`1'::filt$0();
`SAXHTMLWriter::comment'::`1'::filt$0();
`SAXHTMLWriter::endElement'::`1'::filt$0();
`SAXHTMLWriter::processingInstruction'::`1'::filt$0();
`SAXHTMLWriter::resolveState'::`1'::filt$0();
`SAXHTMLWriter::startDTD'::`1'::filt$0();
`SAXHTMLWriter::startElement'::`1'::filt$0();
`SAXReader::CreateDTSReader'::`1'::filt$0();
`SAXReader::CreateSAXSchemaProxy'::`1'::filt$0();
`SAXReader::SetInterfaceSafetyOptions'::`1'::filt$0();
`SAXReader::SetSite'::`1'::filt$0();
`SAXReader::getBaseURL'::`1'::filt$0();
`SAXReader::getContentHandler'::`1'::filt$0();
`SAXReader::getDTDHandler'::`1'::filt$0();
`SAXReader::getEntityResolver'::`1'::filt$0();
`SAXReader::getErrorHandler'::`1'::filt$0();
`SAXReader::getFeature'::`1'::filt$0();
`SAXReader::getProperty'::`1'::filt$0();
`SAXReader::getSecureBaseURL'::`1'::filt$0();
`SAXReader::parse'::`1'::filt$0();
`SAXReader::parseURL'::`1'::filt$0();
`SAXReader::putBaseURL'::`1'::filt$0();
`SAXReader::putContentHandler'::`1'::filt$0();
`SAXReader::putDTDHandler'::`1'::filt$0();
`SAXReader::putEntityResolver'::`1'::filt$0();
`SAXReader::putErrorHandler'::`1'::filt$0();
`SAXReader::putFeature'::`1'::filt$0();
`SAXReader::putProperty'::`1'::filt$0();
`SAXReader::putSecureBaseURL'::`1'::filt$0();
`SAXReaderWrapper::getProperty'::`1'::filt$0();
`SAXReaderWrapper::get_contentHandler'::`1'::filt$0();
`SAXReaderWrapper::get_dtdHandler'::`1'::filt$0();
`SAXReaderWrapper::get_entityResolver'::`1'::filt$0();
`SAXReaderWrapper::get_errorHandler'::`1'::filt$0();
`SAXReaderWrapper::putProperty'::`1'::filt$0();
`SAXReaderWrapper::putref_contentHandler'::`1'::filt$0();
`SAXReaderWrapper::putref_dtdHandler'::`1'::filt$0();
`SAXReaderWrapper::putref_entityResolver'::`1'::filt$0();
`SAXReaderWrapper::putref_errorHandler'::`1'::filt$0();
`SAXSchemaProxy::EnsureNSDecl'::`1'::fin$0();
`SAXSchemaProxy::GetIndexFromName'::`1'::filt$0();
`SAXSchemaProxy::GetIndexFromQName'::`1'::filt$0();
`SAXSchemaProxy::HandleException'::`1'::fin$0();
`SAXSchemaProxy::characters'::`1'::filt$0();
`SAXSchemaProxy::endDocument'::`1'::filt$0();
`SAXSchemaProxy::endElement'::`1'::filt$0();
`SAXSchemaProxy::externalEntityDecl'::`1'::filt$0();
`SAXSchemaProxy::getGraftedValueAt'::`1'::filt$0();
`SAXSchemaProxy::getLocalName'::`1'::filt$0();
`SAXSchemaProxy::getName'::`1'::filt$0();
`SAXSchemaProxy::getQName'::`1'::filt$0();
`SAXSchemaProxy::getTypeFromQName'::`1'::filt$0();
`SAXSchemaProxy::getURI'::`1'::filt$0();
`SAXSchemaProxy::ignorableWhitespace'::`1'::filt$0();
`SAXSchemaProxy::internalEntityDecl'::`1'::filt$0();
`SAXSchemaProxy::newSAXSchemaProxy'::`1'::filt$0();
`SAXSchemaProxy::startDocument'::`1'::filt$0();
`SAXSchemaProxy::startElement'::`1'::filt$0();
`SAXSchemaProxy::startElement'::`1'::filt$1();
`SAXSchemaProxy::startPrefixMapping'::`1'::filt$0();
`SAXSchemaProxy::unparsedEntityDecl'::`1'::filt$0();
`SAXSchemaProxy::whitespace'::`1'::filt$0();
`SAXWriter::Init'::`1'::filt$0();
`SAXWriter::attributeDecl'::`1'::filt$0();
`SAXWriter::characters'::`1'::filt$0();
`SAXWriter::comment'::`1'::filt$0();
`SAXWriter::elementDecl'::`1'::filt$0();
`SAXWriter::endCDATA'::`1'::filt$0();
`SAXWriter::endDTD'::`1'::filt$0();
`SAXWriter::endDocument'::`1'::filt$0();
`SAXWriter::endElement'::`1'::filt$0();
`SAXWriter::externalEntityDecl'::`1'::filt$0();
`SAXWriter::ignorableWhitespace'::`1'::filt$0();
`SAXWriter::internalEntityDecl'::`1'::filt$0();
`SAXWriter::notationDecl'::`1'::filt$0();
`SAXWriter::processingInstruction'::`1'::filt$0();
`SAXWriter::resolveState'::`1'::filt$0();
`SAXWriter::skippedEntity'::`1'::filt$0();
`SAXWriter::startCDATA'::`1'::filt$0();
`SAXWriter::startDTD'::`1'::filt$0();
`SAXWriter::startDocument'::`1'::filt$0();
`SAXWriter::startElement'::`1'::filt$0();
`SAXWriter::unparsedEntityDecl'::`1'::filt$0();
`SAXWriter::writeAttributes'::`1'::filt$0();
`SAXWriter::writeBOM'::`1'::filt$0();
`SAXWriter::writeDTDQuoted'::`1'::filt$0();
`SAXWriter::writeError'::`1'::filt$0();
`SAXWriter::writeError'::`1'::filt$1();
`SAXWriter::writeExternalID'::`1'::filt$0();
`SAXWriter::~SAXWriter'::`1'::filt$0();
`SHA2::Hash'::`1'::fin$0();
`SXPQBuilder::absoluteQuery'::`1'::filt$0();
`SXPQBuilder::ancestorQuery'::`1'::filt$0();
`SXPQBuilder::attributeQuery'::`1'::filt$0();
`SXPQBuilder::booleanLiteral'::`1'::filt$0();
`SXPQBuilder::booleanOperator'::`1'::filt$0();
`SXPQBuilder::compareOperator'::`1'::filt$0();
`SXPQBuilder::concatOperator'::`1'::filt$0();
`SXPQBuilder::descendantQuery'::`1'::filt$0();
`SXPQBuilder::descendantQuery'::`1'::filt$1();
`SXPQBuilder::filterOperator'::`1'::filt$0();
`SXPQBuilder::followingQuery'::`1'::filt$0();
`SXPQBuilder::followingSiblingQuery'::`1'::filt$0();
`SXPQBuilder::functionCall'::`1'::filt$0();
`SXPQBuilder::groupOperator'::`1'::filt$0();
`SXPQBuilder::makeURI'::`1'::filt$0();
`SXPQBuilder::namespaceQuery'::`1'::filt$0();
`SXPQBuilder::newPathNode'::`1'::filt$0();
`SXPQBuilder::newPathNode'::`1'::fin$1();
`SXPQBuilder::numericLiteral'::`1'::filt$0();
`SXPQBuilder::numericOperator'::`1'::filt$0();
`SXPQBuilder::parentQuery'::`1'::filt$0();
`SXPQBuilder::precedingQuery'::`1'::filt$0();
`SXPQBuilder::precedingSiblingQuery'::`1'::filt$0();
`SXPQBuilder::selfQuery'::`1'::filt$0();
`SXPQBuilder::sortOperator'::`1'::filt$0();
`SXPQBuilder::stringLiteral'::`1'::filt$0();
`SXPQBuilder::variableRef'::`1'::filt$0();
`SXPQCompiler::compileQuery'::`1'::filt$0();
`SafeInitializeCriticalSection'::`1'::filt$0();
`SaveWorkItem::FireCompletion'::`1'::fin$0();
`Scanner::PushInputSource'::`1'::filt$0();
`Schema::LoadIncluded'::`1'::fin$0();
`Schema::SchemaID'::`1'::filt$0();
`Schema::SchemaID'::`1'::fin$0();
`Schema::SchemaID'::`1'::fin$1();
`Schema::buildXMLSchema'::`1'::filt$0();
`Schema::loadSchema'::`1'::filt$0();
`Schema::loadSchema'::`1'::filt$1();
`Schema::process'::`1'::filt$0();
`SchemaAnyAttribute::Intersection'::`1'::filt$0();
`SchemaAnyAttribute::Union'::`1'::filt$0();
`SchemaCache::_addWorker'::`1'::filt$0();
`SchemaCache::add'::`1'::filt$0();
`SchemaCache::addCollection'::`1'::filt$0();
`SchemaCache::addCollection'::`1'::filt$1();
`SchemaCache::copyTo'::`1'::filt$0();
`SchemaCache::getSchema'::`1'::filt$0();
`SchemaCache::newSchemaCache'::`1'::filt$0();
`SchemaCache::validate'::`1'::filt$0();
`SchemaCacheInfo::addCachedSchema'::`1'::filt$0();
`SchemaCacheInfo::compile'::`1'::fin$0();
`SchemaCacheInfo::validate'::`1'::fin$0();
`SchemaCompiler::CannonicalizeAll'::`1'::fin$0();
`SchemaCompiler::CannonicalizeChoice'::`1'::fin$0();
`SchemaCompiler::CannonicalizeGroup'::`1'::fin$0();
`SchemaCompiler::CannonicalizeGroupRef'::`1'::fin$0();
`SchemaCompiler::CannonicalizeGroupRef'::`1'::fin$1();
`SchemaCompiler::CannonicalizeParticle'::`1'::filt$0();
`SchemaCompiler::CannonicalizeSequence'::`1'::fin$0();
`SchemaCompiler::CheckAttributeDerivations'::`1'::fin$0();
`SchemaCompiler::CheckKeyref'::`1'::fin$0();
`SchemaCompiler::CheckParticleDerivation'::`1'::fin$0();
`SchemaCompiler::CheckReference'::`1'::fin$0();
`SchemaCompiler::CheckSubstitutionGroup'::`1'::fin$0();
`SchemaCompiler::CheckSubstitutionGroup'::`1'::fin$1();
`SchemaCompiler::CheckSubstitutionGroup'::`1'::fin$2();
`SchemaCompiler::CheckTable'::`1'::fin$0();
`SchemaCompiler::CompileAttribute'::`1'::filt$0();
`SchemaCompiler::CompileAttribute'::`1'::filt$1();
`SchemaCompiler::CompileAttribute'::`1'::fin$2();
`SchemaCompiler::CompileAttribute'::`1'::fin$3();
`SchemaCompiler::CompileAttribute'::`1'::fin$4();
`SchemaCompiler::CompileAttribute'::`1'::fin$5();
`SchemaCompiler::CompileAttributeGroup'::`1'::fin$0();
`SchemaCompiler::CompileAttributeGroup'::`1'::fin$1();
`SchemaCompiler::CompileComplexContent'::`1'::filt$0();
`SchemaCompiler::CompileComplexContentExtension'::`1'::fin$0();
`SchemaCompiler::CompileComplexContentExtension'::`1'::fin$1();
`SchemaCompiler::CompileComplexContentExtension'::`1'::fin$2();
`SchemaCompiler::CompileComplexContentRestriction'::`1'::fin$0();
`SchemaCompiler::CompileComplexContentRestriction'::`1'::fin$1();
`SchemaCompiler::CompileComplexContentRestriction'::`1'::fin$2();
`SchemaCompiler::CompileComplexType'::`1'::fin$0();
`SchemaCompiler::CompileComplexType'::`1'::fin$1();
`SchemaCompiler::CompileComplexType'::`1'::fin$2();
`SchemaCompiler::CompileComplexTypeElements'::`1'::fin$0();
`SchemaCompiler::CompileElement'::`1'::filt$0();
`SchemaCompiler::CompileElement'::`1'::filt$1();
`SchemaCompiler::CompileElement'::`1'::fin$2();
`SchemaCompiler::CompileElement'::`1'::fin$3();
`SchemaCompiler::CompileElement'::`1'::fin$4();
`SchemaCompiler::CompileIdentityConstraint'::`1'::fin$0();
`SchemaCompiler::CompileLocalAttributes'::`1'::fin$0();
`SchemaCompiler::CompileParticleElements'::`1'::fin$0();
`SchemaCompiler::CompileParticleElements'::`1'::fin$1();
`SchemaCompiler::CompileSimpleContentExtension'::`1'::fin$0();
`SchemaCompiler::CompileSimpleContentExtension'::`1'::fin$1();
`SchemaCompiler::CompileSimpleContentExtension'::`1'::fin$2();
`SchemaCompiler::CompileSimpleContentRestriction'::`1'::filt$3();
`SchemaCompiler::CompileSimpleContentRestriction'::`1'::fin$0();
`SchemaCompiler::CompileSimpleContentRestriction'::`1'::fin$1();
`SchemaCompiler::CompileSimpleContentRestriction'::`1'::fin$2();
`SchemaCompiler::CompileSimpleContentRestriction'::`1'::fin$4();
`SchemaCompiler::CompileSimpleType'::`1'::filt$0();
`SchemaCompiler::CompileSimpleType'::`1'::filt$5();
`SchemaCompiler::CompileSimpleType'::`1'::fin$1();
`SchemaCompiler::CompileSimpleType'::`1'::fin$10();
`SchemaCompiler::CompileSimpleType'::`1'::fin$11();
`SchemaCompiler::CompileSimpleType'::`1'::fin$12();
`SchemaCompiler::CompileSimpleType'::`1'::fin$2();
`SchemaCompiler::CompileSimpleType'::`1'::fin$3();
`SchemaCompiler::CompileSimpleType'::`1'::fin$4();
`SchemaCompiler::CompileSimpleType'::`1'::fin$6();
`SchemaCompiler::CompileSimpleType'::`1'::fin$7();
`SchemaCompiler::CompileSimpleType'::`1'::fin$8();
`SchemaCompiler::CompileSimpleType'::`1'::fin$9();
`SchemaCompiler::IsValidRestriction'::`1'::filt$0();
`SchemaCompiler::MarkSubstitutionGroupHeads'::`1'::fin$0();
`SchemaCompiler::OverlayXMLSchema'::`1'::fin$0();
`SchemaCompiler::PreprocessAttribute'::`1'::fin$0();
`SchemaCompiler::PreprocessAttributeContent'::`1'::fin$0();
`SchemaCompiler::PreprocessAttributeGroup'::`1'::fin$0();
`SchemaCompiler::PreprocessAttributes'::`1'::filt$0();
`SchemaCompiler::PreprocessComplexType'::`1'::fin$0();
`SchemaCompiler::PreprocessElement'::`1'::fin$0();
`SchemaCompiler::PreprocessElementContent'::`1'::fin$0();
`SchemaCompiler::PreprocessGroup'::`1'::fin$0();
`SchemaCompiler::PreprocessLocalAttribute'::`1'::fin$0();
`SchemaCompiler::PreprocessLocalAttribute'::`1'::fin$1();
`SchemaCompiler::PreprocessLocalElement'::`1'::fin$0();
`SchemaCompiler::PreprocessLocalElement'::`1'::fin$1();
`SchemaCompiler::PreprocessLocalElement'::`1'::fin$2();
`SchemaCompiler::PreprocessLocalElement'::`1'::fin$3();
`SchemaCompiler::PreprocessNotation'::`1'::fin$0();
`SchemaCompiler::PreprocessParticle'::`1'::filt$0();
`SchemaCompiler::PreprocessRedefine'::`1'::fin$0();
`SchemaCompiler::PreprocessRedefines'::`1'::fin$0();
`SchemaCompiler::PreprocessSimpleType'::`1'::fin$0();
`SchemaCompiler::ValidateIdAttribute'::`1'::fin$0();
`SchemaCompiler::_Preprocess'::`1'::fin$0();
`SchemaCompiler::storeError'::`1'::fin$0();
`SchemaComplexType::classInit'::`1'::filt$0();
`SchemaDatatype::CheckMaxExValue'::`1'::fin$0();
`SchemaDatatype::CheckMaxExValue'::`1'::fin$1();
`SchemaDatatype::CheckMaxExValue'::`1'::fin$2();
`SchemaDatatype::CheckMaxIncValue'::`1'::fin$0();
`SchemaDatatype::CheckMaxIncValue'::`1'::fin$1();
`SchemaDatatype::CheckMaxIncValue'::`1'::fin$2();
`SchemaDatatype::CheckMinExValue'::`1'::fin$0();
`SchemaDatatype::CheckMinExValue'::`1'::fin$1();
`SchemaDatatype::CheckMinExValue'::`1'::fin$2();
`SchemaDatatype::CheckMinIncValue'::`1'::fin$0();
`SchemaDatatype::CheckMinIncValue'::`1'::fin$1();
`SchemaDatatype::CheckMinIncValue'::`1'::fin$2();
`SchemaDatatype::CheckPattern'::`1'::fin$0();
`SchemaDatatype::ConstrainAtomicValue'::`1'::filt$0();
`SchemaDatatype::ConstrainAtomicValue'::`1'::fin$1();
`SchemaDatatype::ConstrainList'::`1'::fin$0();
`SchemaDatatype::ConstructRestriction'::`1'::filt$2();
`SchemaDatatype::ConstructRestriction'::`1'::fin$0();
`SchemaDatatype::ConstructRestriction'::`1'::fin$1();
`SchemaDatatype::ConstructRestriction'::`1'::fin$3();
`SchemaDatatype::DeriveByRestriction'::`1'::filt$0();
`SchemaDatatype::ParseQName'::`1'::filt$0();
`SchemaDatatype::ParseValue'::`1'::fin$0();
`SchemaDatatype::ParseValueWithoutRestriction'::`1'::filt$0();
`SchemaDatatype::Preprocess'::`1'::filt$0();
`SchemaDatatype::classInit'::`1'::filt$0();
`SchemaImport::setNamespace'::`1'::fin$0();
`SchemaNames::classInit'::`1'::filt$0();
`SchemaNamespaceList::Allows'::`1'::filt$0();
`SchemaNamespaceList::Intersection'::`1'::fin$0();
`SchemaNamespaceList::Intersection'::`1'::fin$1();
`SchemaNamespaceList::Intersection'::`1'::fin$2();
`SchemaNamespaceList::Union'::`1'::fin$0();
`SchemaNamespaceList::init'::`1'::fin$0();
`SchemaNamespaceList::toString'::`1'::filt$0();
`SchemaNamespaceList::toVector'::`1'::filt$0();
`SchemaParticle::classInit'::`1'::filt$0();
`SchemaParticle::setMaxOccursString'::`1'::filt$0();
`SchemaParticle::setMinOccursString'::`1'::filt$0();
`SchemaValidator::New'::`1'::filt$0();
`SchemaValidator::attributesPass1'::`1'::filt$0();
`SchemaValidator::attributesPass1'::`1'::filt$1();
`SchemaValidator::attributesPass1'::`1'::filt$2();
`SchemaValidator::attributesPass1'::`1'::fin$3();
`SchemaValidator::attributesPass2'::`1'::filt$1();
`SchemaValidator::attributesPass2'::`1'::fin$0();
`SchemaValidator::attributesPass2'::`1'::fin$2();
`SchemaValidator::checkValue'::`1'::filt$0();
`SchemaValidator::checkValue'::`1'::filt$2();
`SchemaValidator::checkValue'::`1'::fin$1();
`SchemaValidator::endElement'::`1'::filt$0();
`SchemaValidator::endElement'::`1'::filt$1();
`SchemaValidator::endElement'::`1'::filt$2();
`SchemaValidator::endInlineSchema'::`1'::fin$0();
`SchemaValidator::handleXSI'::`1'::filt$0();
`SchemaValidator::startElement'::`1'::filt$0();
`SchemaValidator::startElement'::`1'::filt$1();
`SchemaValidator::startElement'::`1'::filt$2();
`SchemaValidator::startElement'::`1'::fin$3();
`SchemaValidator::startInlineSchema'::`1'::fin$0();
`ScriptCompile::compileText'::`1'::fin$0();
`ScriptEngine::addScriptText'::`1'::fin$0();
`ScriptEngine::startScript'::`1'::fin$0();
`ScriptHost::OnScriptError'::`1'::filt$0();
`ScriptSymbol::mergeScriptBlocks'::`1'::filt$0();
`SortNodeSet::SortNodeSet'::`1'::filt$0();
`String::add'::`1'::filt$0();
`String::toLowerCase'::`1'::filt$0();
`StringBuffer::copy'::`1'::fin$0();
`StringHashtable::get'::`1'::filt$0();
`SymbolTable::defineScript'::`1'::fin$0();
`TextCompile::compileText'::`1'::fin$0();
`TextWriter::New'::`1'::filt$0();
`ThrowBadNameCharException'::`1'::fin$0();
`ThrowNodeInvalidType'::`1'::fin$0();
`TopLevelCompile::checkCharSymbol'::`1'::fin$0();
`TopLevelCompile::compileAttributeSet'::`1'::fin$0();
`TopLevelCompile::compileDecimalFormat'::`1'::fin$0();
`TopLevelCompile::compileInclude'::`1'::filt$0();
`TopLevelCompile::compileInclude'::`1'::fin$1();
`TopLevelCompile::compileKey'::`1'::fin$0();
`TopLevelCompile::compileNamespaceAlias'::`1'::fin$0();
`TopLevelCompile::compileOutput'::`1'::fin$0();
`TopLevelCompile::compileSpaceRules'::`1'::fin$0();
`TopLevelCompile::compileTemplate'::`1'::fin$0();
`TypeWrapper::Compare'::`1'::filt$0();
`TypeWrapper::equals'::`1'::filt$0();
`TypeWrapper::newAPNWrapper'::`1'::filt$0();
`URLMONRequest::_CallOnClientCert'::`1'::filt$0();
`URLMONRequest::_CallOnClientCert'::`1'::fin$1();
`URLMONRequest::_CallOnDataAvailable'::`1'::filt$0();
`URLMONRequest::_CallOnDataAvailable'::`1'::fin$1();
`URLMONRequest::_CallOnError'::`1'::filt$0();
`URLMONRequest::_CallOnError'::`1'::fin$1();
`URLMONRequest::_CallOnHeadersAvailable'::`1'::filt$0();
`URLMONRequest::_CallOnHeadersAvailable'::`1'::fin$1();
`URLMONRequest::_CallOnRedirect'::`1'::filt$0();
`URLMONRequest::_CallOnRedirect'::`1'::fin$1();
`URLMONRequest::_CallOnResponseReceived'::`1'::filt$0();
`URLMONRequest::_CallOnResponseReceived'::`1'::fin$1();
`URLMONRequest::_CallOnServerCert'::`1'::filt$0();
`URLMONRequest::_CallOnServerCert'::`1'::fin$1();
`URLMONRequest::_OnResponse'::`1'::filt$0();
`URLRequest::AbortEx'::`1'::fin$0();
`URLRequest::OnResponseFinished'::`1'::filt$0();
`URLRequest::decode_responseText'::`1'::filt$0();
`URLRequest::prepareXMLParser'::`1'::filt$0();
`URLStream::newStreamDefered'::`1'::filt$0();
`UnparseBinHex'::`1'::filt$0();
`UnparseDatatype'::`1'::filt$0();
`UnparseDatatype'::`1'::filt$1();
`UnparseISO8601Ex'::`1'::filt$0();
`ValidationCacheInfo::checkAddAllowed'::`1'::fin$0();
`Variant::toStream'::`1'::filt$0();
`Vector::clone'::`1'::filt$0();
`Vector::toStringWithDelimeter'::`1'::filt$0();
`W3CDOMWrapper::GetAttributeNS'::`1'::filt$0();
`W3CDOMWrapper::GetAttributeNodeNS'::`1'::filt$0();
`W3CDOMWrapper::RemoveAttributeNS'::`1'::filt$0();
`W3CDOMWrapper::RemoveAttributeNode'::`1'::filt$0();
`W3CDOMWrapper::SetAttributeNS'::`1'::filt$0();
`W3CDOMWrapper::SetAttributeNS'::`1'::filt$1();
`W3CDOMWrapper::SetAttributeNode'::`1'::filt$0();
`W3CDOMWrapper::SetAttributeNodeNS'::`1'::filt$0();
`W3CDOMWrapper::_appendData'::`1'::filt$0();
`W3CDOMWrapper::_getAttrValue'::`1'::filt$0();
`W3CDOMWrapper::_getAttribute'::`1'::filt$0();
`W3CDOMWrapper::_getAttributeNode'::`1'::filt$0();
`W3CDOMWrapper::_removeAttribute'::`1'::filt$0();
`W3CDOMWrapper::_replaceData'::`1'::filt$0();
`W3CDOMWrapper::_setAttribute'::`1'::filt$0();
`W3CDOMWrapper::_splitText'::`1'::filt$0();
`W3CDOMWrapper::_substringData'::`1'::filt$0();
`W3CDOMWrapper::get_entities'::`1'::filt$0();
`W3CDOMWrapper::get_length'::`1'::filt$0();
`W3CDOMWrapper::get_notationName'::`1'::fin$0();
`W3CDOMWrapper::get_notations'::`1'::filt$0();
`W3CDOMWrapper::get_ownerDocument'::`1'::filt$0();
`W3CDOMWrapper::put_Value'::`1'::filt$0();
`W3CDOMWrapper::removeAttributeNode'::`1'::filt$0();
`W3CDOMWrapper::setAttributeNode'::`1'::filt$0();
`WSStringBuffer::ensureCapacity'::`1'::fin$0();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate::FTMEventDelegate();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate::Invoke();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile * __ptr64> >'::`2'::FTMEventDelegate::`scalar deleting destructor'();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate::FTMEventDelegate();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate::Invoke();
`WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream * __ptr64> >'::`2'::FTMEventDelegate::`scalar deleting destructor'();
`WriteNameToBuf'::`1'::fin$0();
`XCode::New'::`1'::filt$0();
`XCompare::compAsFirst'::`1'::filt$0();
`XCompare::compAsSecond'::`1'::filt$0();
`XCompare::compAsStrings'::`1'::fin$0();
`XConvert::bstrToString'::`1'::filt$0();
`XConvert::nodeSetToR8'::`1'::filt$0();
`XConvert::r8ToString'::`1'::fin$0();
`XEngine::attout'::`1'::fin$0();
`XEngine::builtInTemplate'::`1'::fin$0();
`XEngine::ch_s'::`1'::fin$0();
`XEngine::chkrtf'::`1'::fin$0();
`XEngine::chkrtf'::`1'::fin$1();
`XEngine::conv_ns'::`1'::fin$0();
`XEngine::conv_s'::`1'::fin$0();
`XEngine::cpyof'::`1'::fin$0();
`XEngine::createStreamWriter'::`1'::filt$0();
`XEngine::elout'::`1'::fin$0();
`XEngine::evaluateExpression'::`1'::filt$0();
`XEngine::execute'::`1'::filt$0();
`XEngine::frag_b'::`1'::fin$0();
`XEngine::frag_e'::`1'::fin$0();
`XEngine::frame'::`1'::filt$0();
`XEngine::throw_'::`1'::fin$0();
`XEngine::txtout'::`1'::fin$0();
`XEngine::txtout_ctxt'::`1'::fin$0();
`XFunctions::average'::`1'::fin$0();
`XFunctions::concat'::`1'::fin$0();
`XFunctions::contains'::`1'::fin$0();
`XFunctions::convertToCaseOrder'::`1'::fin$0();
`XFunctions::convertToCompOptions'::`1'::fin$0();
`XFunctions::convertToDataType'::`1'::fin$0();
`XFunctions::convertToGroupSeparator'::`1'::fin$0();
`XFunctions::convertToLCID'::`1'::fin$0();
`XFunctions::convertToLetterValue'::`1'::fin$0();
`XFunctions::convertToSortOrder'::`1'::fin$0();
`XFunctions::crackQName'::`1'::filt$0();
`XFunctions::createNameDef'::`1'::fin$0();
`XFunctions::documentOneArg'::`1'::fin$0();
`XFunctions::documentOneArg'::`1'::fin$1();
`XFunctions::documentTwoArgs'::`1'::fin$0();
`XFunctions::documentTwoArgs'::`1'::fin$1();
`XFunctions::fillFormat'::`1'::fin$0();
`XFunctions::formatDateTime'::`1'::fin$0();
`XFunctions::formatNumberDynamic'::`1'::fin$0();
`XFunctions::formatNumberMSXSL'::`1'::fin$0();
`XFunctions::formatNumberStatic'::`1'::fin$0();
`XFunctions::generateID'::`1'::fin$0();
`XFunctions::id'::`1'::fin$0();
`XFunctions::isExtensionFunction'::`1'::filt$0();
`XFunctions::key'::`1'::fin$0();
`XFunctions::lang'::`1'::fin$0();
`XFunctions::localName'::`1'::fin$0();
`XFunctions::name'::`1'::fin$0();
`XFunctions::namespaceURI'::`1'::fin$0();
`XFunctions::normalizeSpace'::`1'::fin$0();
`XFunctions::numberMSXSL'::`1'::fin$0();
`XFunctions::numberingCount'::`1'::fin$0();
`XFunctions::numberingValue'::`1'::fin$0();
`XFunctions::reset'::`1'::filt$0();
`XFunctions::resolveNCName'::`1'::fin$0();
`XFunctions::resolveQName'::`1'::fin$0();
`XFunctions::startsWith'::`1'::fin$0();
`XFunctions::stringCompare'::`1'::fin$0();
`XFunctions::stringLength'::`1'::fin$0();
`XFunctions::substring'::`1'::fin$0();
`XFunctions::substringAfter'::`1'::fin$0();
`XFunctions::substringBefore'::`1'::fin$0();
`XFunctions::sum'::`1'::fin$0();
`XFunctions::translate'::`1'::fin$0();
`XFunctions::typeIs'::`1'::fin$0();
`XFunctions::typeQName'::`1'::fin$0();
`XFunctions::utc'::`1'::filt$1();
`XFunctions::utc'::`1'::fin$0();
`XMLDECLParser::parseAttributes'::`1'::fin$0();
`XMLDECLParser::parsedAttribute'::`1'::fin$0();
`XMLDECLParser::unhandledNodeInfo'::`1'::fin$0();
`XMLHttp2::Abort'::`1'::filt$0();
`XMLHttp2::Abort'::`1'::fin$1();
`XMLHttp2::ApplySetting'::`1'::filt$0();
`XMLHttp2::ApplySetting'::`1'::fin$1();
`XMLHttp2::CompleteDelivery'::`1'::filt$0();
`XMLHttp2::CompleteDelivery'::`1'::fin$1();
`XMLHttp2::CreateInstance'::`1'::filt$0();
`XMLHttp2::CreateInstance'::`1'::fin$1();
`XMLHttp2::Flush'::`1'::filt$0();
`XMLHttp2::Flush'::`1'::fin$1();
`XMLHttp2::GetAllResponseHeaders'::`1'::filt$0();
`XMLHttp2::GetAllResponseHeaders'::`1'::fin$1();
`XMLHttp2::GetCookie'::`1'::filt$0();
`XMLHttp2::GetCookie'::`1'::fin$1();
`XMLHttp2::GetIids'::`1'::filt$0();
`XMLHttp2::GetIids'::`1'::fin$1();
`XMLHttp2::GetResponseHeader'::`1'::filt$0();
`XMLHttp2::GetResponseHeader'::`1'::fin$1();
`XMLHttp2::GetRuntimeClassName'::`1'::filt$0();
`XMLHttp2::GetRuntimeClassName'::`1'::fin$1();
`XMLHttp2::GetTrustLevel'::`1'::filt$0();
`XMLHttp2::GetTrustLevel'::`1'::fin$1();
`XMLHttp2::Open'::`1'::filt$0();
`XMLHttp2::Open'::`1'::fin$1();
`XMLHttp2::QuerySetting'::`1'::filt$0();
`XMLHttp2::QuerySetting'::`1'::fin$1();
`XMLHttp2::Send'::`1'::filt$0();
`XMLHttp2::Send'::`1'::fin$1();
`XMLHttp2::SetClientCertificate'::`1'::filt$0();
`XMLHttp2::SetClientCertificate'::`1'::fin$1();
`XMLHttp2::SetCookie'::`1'::filt$0();
`XMLHttp2::SetCookie'::`1'::fin$1();
`XMLHttp2::SetCustomResponseStream'::`1'::filt$0();
`XMLHttp2::SetCustomResponseStream'::`1'::fin$1();
`XMLHttp2::SetProperty'::`1'::filt$0();
`XMLHttp2::SetProperty'::`1'::fin$1();
`XMLHttp2::SetRequestHeader'::`1'::filt$0();
`XMLHttp2::SetRequestHeader'::`1'::fin$1();
`XMLHttp::AbortEx'::`1'::filt$0();
`XMLHttp::CreateInstance'::`1'::filt$0();
`XMLHttp::_setErrorInfo'::`1'::filt$0();
`XMLHttp::_setErrorInfo'::`1'::fin$1();
`XMLHttp::createXMLDocument'::`1'::filt$0();
`XMLHttp::getAllResponseHeaders'::`1'::filt$0();
`XMLHttp::getOption'::`1'::filt$0();
`XMLHttp::getResponseHeader'::`1'::filt$0();
`XMLHttp::get_readyState'::`1'::filt$0();
`XMLHttp::get_responseBody'::`1'::filt$0();
`XMLHttp::get_responseStream'::`1'::filt$0();
`XMLHttp::get_responseText'::`1'::filt$0();
`XMLHttp::get_responseXML'::`1'::filt$0();
`XMLHttp::get_status'::`1'::filt$0();
`XMLHttp::get_statusText'::`1'::filt$0();
`XMLHttp::open'::`1'::filt$0();
`XMLHttp::put_onreadystatechange'::`1'::filt$0();
`XMLHttp::send'::`1'::filt$0();
`XMLHttp::setOption'::`1'::filt$0();
`XMLHttp::setProxy'::`1'::filt$0();
`XMLHttp::setProxyCredentials'::`1'::filt$0();
`XMLHttp::setRequestHeader'::`1'::filt$0();
`XMLHttp::setTimeouts'::`1'::filt$0();
`XMLHttp::waitForResponse'::`1'::filt$0();
`XMLNames::classInit'::`1'::filt$0();
`XMLOutputHelper::New'::`1'::filt$0();
`XMLParser::CheckXmlSize_'::`1'::filt$0();
`XMLParser::GetErrorInfo'::`1'::filt$0();
`XMLParser::GetErrorInfo'::`1'::filt$1();
`XMLParser::ReportUnclosedTags'::`1'::filt$0();
`XMLParser::Run'::`1'::filt$0();
`XMLParser::pop'::`1'::filt$0();
`XMLParser::push'::`1'::filt$0();
`XMLValidator::ValidateElement'::`1'::fin$0();
`XMLWriter::New'::`1'::filt$0();
`XMLWriter::beginElement'::`1'::fin$0();
`XMLWriter::beginPI'::`1'::fin$0();
`XMLWriter::endElement'::`1'::fin$0();
`XMLWriter::outputAttributes'::`1'::fin$0();
`XMLWriter::prefixMapping'::`1'::fin$0();
`XPChildNav<WhitespacePreserve>::_getText'::`1'::filt$0();
`XPNodeNav::create'::`1'::fin$0();
`XPNodeNav::create'::`1'::fin$1();
`XPParser::errorMsg'::`1'::filt$0();
`XPParser::parse'::`1'::filt$0();
`XPParser::parseAVT'::`1'::filt$0();
`XPParser::parseFunctionCall'::`1'::filt$0();
`XPParser::parseFunctionCall'::`1'::fin$1();
`XPParser::parseLocationPathPattern'::`1'::fin$0();
`XPParser::parsePrimaryExpr'::`1'::filt$0();
`XPParser::parsePrimaryExpr'::`1'::fin$1();
`XPParser::parseUnionExpr'::`1'::fin$0();
`XPParser::parseXSDPath'::`1'::fin$0();
`XPParser::parseXSDPath'::`1'::fin$1();
`XPParser::parseXSDPath'::`1'::fin$2();
`XPParser::parseXSDStep'::`1'::fin$0();
`XPParser::parseXSDStep'::`1'::fin$1();
`XPParser::storeE'::`1'::fin$0();
`XPParser::storeError'::`1'::fin$0();
`XPParser::tokenError'::`1'::fin$0();
`XPParser::tokenString'::`1'::filt$0();
`XRuntime::VARIANTToVariant'::`1'::filt$0();
`XRuntime::addDelayedReleaseArray'::`1'::filt$0();
`XRuntime::beginCopy'::`1'::fin$0();
`XRuntime::beginFragment'::`1'::fin$0();
`XRuntime::copyOneNamespaceNode'::`1'::fin$0();
`XRuntime::handlesToNodeSet'::`1'::filt$0();
`XSDContentModel::MinMax'::`1'::filt$0();
`XSDContentModel::addAllElement'::`1'::fin$0();
`XSDContentModel::addAny'::`1'::fin$0();
`XSDContentModel::checkContent'::`1'::fin$0();
`XSDContentModel::checkUPA'::`1'::fin$0();
`XSDContentModel::expectedElements'::`1'::filt$0();
`XSDContentModel::isMatched'::`1'::fin$0();
`XSDContentModel::throwUPAError'::`1'::fin$0();
`XSLTAttributes::XSLTAttributes'::`1'::fin$0();
`XSLTAttributes::getCaseOrderAttribute'::`1'::fin$0();
`XSLTAttributes::getDataTypeAttribute'::`1'::fin$0();
`XSLTAttributes::getSortOrderAttribute'::`1'::fin$0();
`XSLTAttributes::getYesNoAttribute'::`1'::fin$0();
`XSLTAttributes::parseAsQName'::`1'::filt$0();
`XSLTAttributes::parseAsQNameList'::`1'::filt$0();
`XSLTAttributes::parsePrefixList'::`1'::filt$0();
`XSLTCodeGen::createNameDef'::`1'::fin$0();
`XSLTCodeGen::endCompile'::`1'::filt$0();
`XSLTCodeGen::numbering'::`1'::fin$0();
`XSLTCodeGen::resolveFunctionCall'::`1'::fin$0();
`XSLTCodeGen::variableRefNode'::`1'::fin$0();
`XSLTCodeGen::xsltFunctionCode'::`1'::fin$0();
`XSLTCodeGen::xsltFunctionCode'::`1'::fin$1();
`XSLTCompiler::beginElement'::`1'::fin$0();
`XSLTCompiler::createExecutionHost'::`1'::fin$0();
`XSLTCompiler::createExecutionHost'::`1'::fin$1();
`XSLTInheritAttrs::enterScope'::`1'::fin$0();
`XSLTKeywords::classInit'::`1'::filt$0();
`XSLTKeywords::isValidElement'::`1'::fin$0();
`XStreamAdapter::beginEvent'::`1'::fin$0();
`XStreamAdapter::characters'::`1'::filt$0();
`XStreamAdapter::comment'::`1'::filt$0();
`XStreamAdapter::endDocument'::`1'::filt$0();
`XStreamAdapter::endElement'::`1'::filt$0();
`XStreamAdapter::fatalError'::`1'::filt$0();
`XStreamAdapter::parseURL'::`1'::fin$0();
`XStreamAdapter::processingInstruction'::`1'::filt$0();
`XStreamAdapter::serializeDOM'::`1'::filt$0();
`XStreamAdapter::startDocument'::`1'::filt$0();
`XStreamAdapter::startElement'::`1'::filt$0();
`XStreamAdapter::startEmptyElement'::`1'::filt$0();
`XStreamAdapter::startPrefixMapping'::`1'::filt$0();
`XStreamVerify::ensureValidPrefix'::`1'::fin$0();
`XStreamVerify::generatePrefix'::`1'::filt$0();
`XSyntaxNodeHelper::makeAttrFilter'::`1'::fin$0();
`XSyntaxNodeHelper::makeNmspFilter'::`1'::fin$0();
`XSyntaxNodeHelper::makeNonAttrFilter'::`1'::fin$0();
`XUtility::compileLocationPath'::`1'::filt$0();
`XUtility::compileMatchPattern'::`1'::filt$0();
`XUtility::compileStylesheet'::`1'::filt$0();
`XUtility::createNameDef'::`1'::fin$0();
`XUtility::executeXCode'::`1'::filt$0();
`XUtility::formatDateTime'::`1'::filt$0();
`XUtility::getExceptionText'::`1'::filt$0();
`XUtility::scanForSimpleQuery'::`1'::filt$0();
`XUtility::selectSingleNode'::`1'::filt$0();
`XUtility::storeError'::`1'::fin$0();
`XUtility::transformNode'::`1'::filt$0();
`XmlDocumentActivationFactory::CreateDocument'::`1'::filt$0();
`XmlDocumentActivationFactory::LoadWithSettingsAsync<Windows::Foundation::IUriRuntimeClass>'::`1'::filt$0();
`XmlDocumentActivationFactory::LoadWithSettingsAsync<Windows::Storage::IStorageFile>'::`1'::filt$0();
`XmlParseTask::_parse'::`1'::filt$0();
`XmlParseTask::init'::`1'::filt$0();
`XsdBuilder::AddErrorDetail'::`1'::fin$0();
`XsdBuilder::BuildDocumentation_XmlLang'::`1'::fin$0();
`XsdBuilder::BuildFacet_Value'::`1'::fin$0();
`XsdBuilder::BuildField_XPath'::`1'::fin$0();
`XsdBuilder::BuildImport_Namespace'::`1'::fin$0();
`XsdBuilder::BuildNotation_Public'::`1'::fin$0();
`XsdBuilder::BuildNotation_System'::`1'::fin$0();
`XsdBuilder::BuildSchema_TargetNamespace'::`1'::fin$0();
`XsdBuilder::BuildSelector_XPath'::`1'::fin$0();
`XsdBuilder::BuildSimpleTypeUnion_MemberTypes'::`1'::fin$0();
`XsdBuilder::NodeWalk'::`1'::filt$0();
`XsdBuilder::NodeWalk'::`1'::filt$2();
`XsdBuilder::NodeWalk'::`1'::fin$1();
`XsdBuilder::ParseBoolean'::`1'::filt$0();
`XsdBuilder::ParseEnum'::`1'::filt$0();
`XsdBuilder::ParseEnumFlags'::`1'::filt$0();
`XsdBuilder::ProcessAttributes'::`1'::fin$0();
`XsdBuilder::ProcessElementNode'::`1'::filt$0();
`XsdBuilder::ProcessElementNode'::`1'::fin$0();
`XsdBuilder::ProcessPCDATA'::`1'::fin$0();
`XsdBuilder::SetMaxOccurs'::`1'::filt$0();
`XsdBuilder::SetMinOccurs'::`1'::filt$0();
`XsdBuilder::XsdBuilder'::`1'::fin$0();
`_ComCollection<IMXNamespacePrefixes,&LIBID_MSXML2,&IID_IMXNamespacePrefixes,1>::QueryInterface'::`1'::filt$0();
`_ComCollection<ISchemaItemCollection,&LIBID_MSXML2,&_GUID_50ea08b2_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface'::`1'::filt$0();
`_ComCollection<ISchemaStringCollection,&LIBID_MSXML2,&_GUID_50ea08b1_dd1b_4664_9a50_c2f40f4bd79a,1>::QueryInterface'::`1'::filt$0();
`_ComCollection<IXMLDOMParseErrorCollection,&LIBID_MSXML2,&IID_IXMLDOMParseErrorCollection,0>::QueryInterface'::`1'::filt$0();
`_MXDataType::get_name'::`1'::filt$0();
`_MXDataType::get_namespaceURI'::`1'::filt$0();
`_MXDataType::get_schema'::`1'::filt$0();
`_MXItem::annotation2DOM'::`1'::filt$0();
`_MXItem::copyAnnotation'::`1'::filt$0();
`_MXItem::get_id'::`1'::filt$0();
`_MXItem::get_maxOccurs'::`1'::filt$0();
`_MXItem::get_minOccurs'::`1'::filt$0();
`_MXItem::get_name'::`1'::filt$0();
`_MXItem::get_namespaceURI'::`1'::filt$0();
`_MXItem::get_schema'::`1'::filt$0();
`_MXItem::get_unhandledAttributes'::`1'::filt$0();
`_MXItem::writeAnnotation'::`1'::filt$0();
`_MXType::get_enumeration'::`1'::filt$0();
`_MXType::get_fractionDigits'::`1'::filt$0();
`_MXType::get_length'::`1'::filt$0();
`_MXType::get_maxExclusive'::`1'::filt$0();
`_MXType::get_maxInclusive'::`1'::filt$0();
`_MXType::get_maxLength'::`1'::filt$0();
`_MXType::get_minExclusive'::`1'::filt$0();
`_MXType::get_minInclusive'::`1'::filt$0();
`_MXType::get_minLength'::`1'::filt$0();
`_MXType::get_patterns'::`1'::filt$0();
`_MXType::get_totalDigits'::`1'::filt$0();
`_MXType::isValid'::`1'::filt$0();
`_MXType::isValid'::`1'::filt$1();
`_createDOMDocument'::`1'::filt$0();
`_dispatchImpl::setErrorInfo'::`1'::filt$0();
`_dispatchImpl::setErrorInfo1'::`1'::filt$0();
`_dispatchImpl::setErrorInfo2'::`1'::filt$0();
`_findWinRT'::`1'::fin$0();
`_xunknown::Release'::`1'::filt$0();
`createAttributeDeclName'::`1'::fin$0();
`createElementDeclName'::`1'::fin$0();
`createNameDef'::`1'::fin$0();
`dynamic atexit destructor for 'AbsoluteNode::_ndAbs''();
`dynamic atexit destructor for 'AlwaysAttrFilter::_filter''();
`dynamic atexit destructor for 'AlwaysFilter::_filter''();
`dynamic atexit destructor for 'AlwaysNmspFilter::_filter''();
`dynamic atexit destructor for 'Atom::s_emptyAtom''();
`dynamic atexit destructor for 'Atom::s_pAtoms''();
`dynamic atexit destructor for 'ContextNode::_ndCtxt''();
`dynamic atexit destructor for 'CurrentMatcher::_matcher''();
`dynamic atexit destructor for 'DOMError::s_pSuccessParseErrorObj''();
`dynamic atexit destructor for 'Datatype_language::s_languagePattern''();
`dynamic atexit destructor for 'DecimalFormatSymbols::s_cstrNaN''();
`dynamic atexit destructor for 'DecimalFormatSymbols::s_cstrPosInfinity''();
`dynamic atexit destructor for 'DecimalFormatSymbols::s_defaultInstance''();
`dynamic atexit destructor for 'DispatchFunctions::s_cstrGet''();
`dynamic atexit destructor for 'ElementDecl::_AnyTypeElementDecl''();
`dynamic atexit destructor for 'ElementDecl::_Empty''();
`dynamic atexit destructor for 'Exception::s_cexpOutOfMem''();
`dynamic atexit destructor for 'Exception::s_cexpOutOfStack''();
`dynamic atexit destructor for 'Exception::s_cexpSystemError''();
`dynamic atexit destructor for 'Exception::s_cstrException''();
`dynamic atexit destructor for 'Exception::s_pstrOutOfMem''();
`dynamic atexit destructor for 'Exception::s_pstrOutOfStack''();
`dynamic atexit destructor for 'HashHashAny''();
`dynamic atexit destructor for 'HashHashLocal''();
`dynamic atexit destructor for 'HashHashOther''();
`dynamic atexit destructor for 'HashHashTargetNamespace''();
`dynamic atexit destructor for 'HashtableIter::s_emptyHashtable''();
`dynamic atexit destructor for 'MXItemCollection::s_rEmpty''();
`dynamic atexit destructor for 'MXStringCollection::s_rEmpty''();
`dynamic atexit destructor for 'MXUnhandledAttributes::s_rEmpty''();
`dynamic atexit destructor for 'Name::s_emptyName''();
`dynamic atexit destructor for 'Name::s_pNames''();
`dynamic atexit destructor for 'NeverFilter::_filter''();
`dynamic atexit destructor for 'NeverMatcher::_matcher''();
`dynamic atexit destructor for 'NullElement::s_rNullElement''();
`dynamic atexit destructor for 'RegexCharClass::Any''();
`dynamic atexit destructor for 'RegexCharClass::AnyClass''();
`dynamic atexit destructor for 'RegexCharClass::Dot''();
`dynamic atexit destructor for 'RegexCharClass::DotClass''();
`dynamic atexit destructor for 'RegexCharClass::Empty''();
`dynamic atexit destructor for 'RegexCharClass::EmptyClass''();
`dynamic atexit destructor for 'RegexCharClass::NotSpace''();
`dynamic atexit destructor for 'RegexCharClass::NotWord''();
`dynamic atexit destructor for 'RegexCharClass::Space''();
`dynamic atexit destructor for 'RegexCharClass::Word''();
`dynamic atexit destructor for 'RegexCharClass::_definedCategories''();
`dynamic atexit destructor for 'RegexCharClass::_propTable''();
`dynamic atexit destructor for 'RegexMatch::_empty''();
`dynamic atexit destructor for 'RegexPrefix::_empty''();
`dynamic atexit destructor for 'SchemaComplexType::_anyType''();
`dynamic atexit destructor for 'SchemaDatatype::c_ENTITIES''();
`dynamic atexit destructor for 'SchemaDatatype::c_ENTITY''();
`dynamic atexit destructor for 'SchemaDatatype::c_ID''();
`dynamic atexit destructor for 'SchemaDatatype::c_IDREF''();
`dynamic atexit destructor for 'SchemaDatatype::c_IDREFS''();
`dynamic atexit destructor for 'SchemaDatatype::c_NCName''();
`dynamic atexit destructor for 'SchemaDatatype::c_NMTOKEN''();
`dynamic atexit destructor for 'SchemaDatatype::c_NMTOKENS''();
`dynamic atexit destructor for 'SchemaDatatype::c_NOTATION''();
`dynamic atexit destructor for 'SchemaDatatype::c_Name''();
`dynamic atexit destructor for 'SchemaDatatype::c_QName''();
`dynamic atexit destructor for 'SchemaDatatype::c_anySimpleType''();
`dynamic atexit destructor for 'SchemaDatatype::c_anyURI''();
`dynamic atexit destructor for 'SchemaDatatype::c_base64Binary''();
`dynamic atexit destructor for 'SchemaDatatype::c_boolean''();
`dynamic atexit destructor for 'SchemaDatatype::c_byte''();
`dynamic atexit destructor for 'SchemaDatatype::c_date''();
`dynamic atexit destructor for 'SchemaDatatype::c_dateTime''();
`dynamic atexit destructor for 'SchemaDatatype::c_day''();
`dynamic atexit destructor for 'SchemaDatatype::c_decimal''();
`dynamic atexit destructor for 'SchemaDatatype::c_double''();
`dynamic atexit destructor for 'SchemaDatatype::c_duration''();
`dynamic atexit destructor for 'SchemaDatatype::c_float''();
`dynamic atexit destructor for 'SchemaDatatype::c_hexBinary''();
`dynamic atexit destructor for 'SchemaDatatype::c_int''();
`dynamic atexit destructor for 'SchemaDatatype::c_integer''();
`dynamic atexit destructor for 'SchemaDatatype::c_language''();
`dynamic atexit destructor for 'SchemaDatatype::c_long''();
`dynamic atexit destructor for 'SchemaDatatype::c_month''();
`dynamic atexit destructor for 'SchemaDatatype::c_monthDay''();
`dynamic atexit destructor for 'SchemaDatatype::c_negativeInteger''();
`dynamic atexit destructor for 'SchemaDatatype::c_nonNegativeInteger''();
`dynamic atexit destructor for 'SchemaDatatype::c_nonPositiveInteger''();
`dynamic atexit destructor for 'SchemaDatatype::c_normalizedString''();
`dynamic atexit destructor for 'SchemaDatatype::c_positiveInteger''();
`dynamic atexit destructor for 'SchemaDatatype::c_short''();
`dynamic atexit destructor for 'SchemaDatatype::c_string''();
`dynamic atexit destructor for 'SchemaDatatype::c_time''();
`dynamic atexit destructor for 'SchemaDatatype::c_token''();
`dynamic atexit destructor for 'SchemaDatatype::c_unsignedByte''();
`dynamic atexit destructor for 'SchemaDatatype::c_unsignedInt''();
`dynamic atexit destructor for 'SchemaDatatype::c_unsignedLong''();
`dynamic atexit destructor for 'SchemaDatatype::c_unsignedShort''();
`dynamic atexit destructor for 'SchemaDatatype::c_year''();
`dynamic atexit destructor for 'SchemaDatatype::c_yearMonth''();
`dynamic atexit destructor for 'SchemaNames::c_strAttribute''();
`dynamic atexit destructor for 'SchemaNames::c_strAttributeType''();
`dynamic atexit destructor for 'SchemaNames::c_strClosed''();
`dynamic atexit destructor for 'SchemaNames::c_strContent''();
`dynamic atexit destructor for 'SchemaNames::c_strDTType''();
`dynamic atexit destructor for 'SchemaNames::c_strDTValues''();
`dynamic atexit destructor for 'SchemaNames::c_strDatatype''();
`dynamic atexit destructor for 'SchemaNames::c_strDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strDescription''();
`dynamic atexit destructor for 'SchemaNames::c_strENTITIES''();
`dynamic atexit destructor for 'SchemaNames::c_strENTITY''();
`dynamic atexit destructor for 'SchemaNames::c_strENUMERATION''();
`dynamic atexit destructor for 'SchemaNames::c_strElement''();
`dynamic atexit destructor for 'SchemaNames::c_strElementType''();
`dynamic atexit destructor for 'SchemaNames::c_strEltOnly''();
`dynamic atexit destructor for 'SchemaNames::c_strEmpty''();
`dynamic atexit destructor for 'SchemaNames::c_strExtends''();
`dynamic atexit destructor for 'SchemaNames::c_strGroup''();
`dynamic atexit destructor for 'SchemaNames::c_strGroupOrder''();
`dynamic atexit destructor for 'SchemaNames::c_strID''();
`dynamic atexit destructor for 'SchemaNames::c_strIDREF''();
`dynamic atexit destructor for 'SchemaNames::c_strIDREFS''();
`dynamic atexit destructor for 'SchemaNames::c_strInfinite''();
`dynamic atexit destructor for 'SchemaNames::c_strMANY''();
`dynamic atexit destructor for 'SchemaNames::c_strMax''();
`dynamic atexit destructor for 'SchemaNames::c_strMaxExclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strMaxLength''();
`dynamic atexit destructor for 'SchemaNames::c_strMaxOccurs''();
`dynamic atexit destructor for 'SchemaNames::c_strMin''();
`dynamic atexit destructor for 'SchemaNames::c_strMinExclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strMinLength''();
`dynamic atexit destructor for 'SchemaNames::c_strMinOccurs''();
`dynamic atexit destructor for 'SchemaNames::c_strMixed''();
`dynamic atexit destructor for 'SchemaNames::c_strModel''();
`dynamic atexit destructor for 'SchemaNames::c_strNMTOKEN''();
`dynamic atexit destructor for 'SchemaNames::c_strNMTOKENS''();
`dynamic atexit destructor for 'SchemaNames::c_strName''();
`dynamic atexit destructor for 'SchemaNames::c_strNo''();
`dynamic atexit destructor for 'SchemaNames::c_strOR''();
`dynamic atexit destructor for 'SchemaNames::c_strOpen''();
`dynamic atexit destructor for 'SchemaNames::c_strOrder''();
`dynamic atexit destructor for 'SchemaNames::c_strRequired''();
`dynamic atexit destructor for 'SchemaNames::c_strRequiredValue''();
`dynamic atexit destructor for 'SchemaNames::c_strSEQ''();
`dynamic atexit destructor for 'SchemaNames::c_strSchemaRoot''();
`dynamic atexit destructor for 'SchemaNames::c_strString''();
`dynamic atexit destructor for 'SchemaNames::c_strTextOnly''();
`dynamic atexit destructor for 'SchemaNames::c_strType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAbstract''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAll''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAnnotation''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAny''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAnyAttribute''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAnyType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAppinfo''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAttribute''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAttributeFormDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDAttributeGroup''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDBase''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDBlock''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDBlockDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDChoice''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDComplexContent''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDComplexType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDContent''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDDerivedBy''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDDocumentation''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDElement''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDElementFormDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDEnumeration''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDEquivClass''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDExtension''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDField''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDFinal''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDFinalDefault''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDFixed''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDForm''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDFractionDigits''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDGroup''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDId''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDImport''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDInclude''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDItemType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDKey''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDKeyref''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDLength''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMaxExclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMaxInclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMaxLength''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMaxOccurs''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMemberTypes''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMinExclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMinInclusive''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMinLength''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMinOccurs''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDMixed''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDName''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDNamespace''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDNillable''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDNotation''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDPattern''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDProcessContents''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDPublic''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDRedefine''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDRef''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDRefer''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDRestriction''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSchema''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSchemaLocation''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSelector''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSequence''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSimpleContent''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSimpleType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSimpleTypeList''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSimpleTypeUnion''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSource''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSubstitutionGroup''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDSystem''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDTargetNamespace''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDTotalDigits''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDType''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDUnique''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDUse''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDValue''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDVersion''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDWhitespace''();
`dynamic atexit destructor for 'SchemaNames::c_strXSDXPath''();
`dynamic atexit destructor for 'SchemaNames::c_strXmlLang''();
`dynamic atexit destructor for 'SchemaNames::c_strYes''();
`dynamic atexit destructor for 'SchemaNames::names''();
`dynamic atexit destructor for 'SchemaParticle::_empty''();
`dynamic atexit destructor for 'String::s_cstrEmpty''();
`dynamic atexit destructor for 'String::s_cstrNewLine''();
`dynamic atexit destructor for 'String::s_cstrNull''();
`dynamic atexit destructor for 'String::s_cstrSpace''();
`dynamic atexit destructor for 'XConvert::s_cstrEight''();
`dynamic atexit destructor for 'XConvert::s_cstrFalse''();
`dynamic atexit destructor for 'XConvert::s_cstrFive''();
`dynamic atexit destructor for 'XConvert::s_cstrFour''();
`dynamic atexit destructor for 'XConvert::s_cstrNaN''();
`dynamic atexit destructor for 'XConvert::s_cstrNegInfinity''();
`dynamic atexit destructor for 'XConvert::s_cstrNine''();
`dynamic atexit destructor for 'XConvert::s_cstrOne''();
`dynamic atexit destructor for 'XConvert::s_cstrPosInfinity''();
`dynamic atexit destructor for 'XConvert::s_cstrSeven''();
`dynamic atexit destructor for 'XConvert::s_cstrSix''();
`dynamic atexit destructor for 'XConvert::s_cstrThree''();
`dynamic atexit destructor for 'XConvert::s_cstrTrue''();
`dynamic atexit destructor for 'XConvert::s_cstrTwo''();
`dynamic atexit destructor for 'XConvert::s_cstrZero''();
`dynamic atexit destructor for 'XMLNames::atomDTTYPENS''();
`dynamic atexit destructor for 'XMLNames::atomEmpty''();
`dynamic atexit destructor for 'XMLNames::atomSCHEMA''();
`dynamic atexit destructor for 'XMLNames::atomURNXML''();
`dynamic atexit destructor for 'XMLNames::atomURNXMLNS''();
`dynamic atexit destructor for 'XMLNames::atomXML''();
`dynamic atexit destructor for 'XMLNames::atomXMLNS''();
`dynamic atexit destructor for 'XMLNames::atomXSDSCHEMA''();
`dynamic atexit destructor for 'XMLNames::atomXSI''();
`dynamic atexit destructor for 'XMLNames::names''();
`dynamic atexit destructor for 'XMLNames::s_cstrANY''();
`dynamic atexit destructor for 'XMLNames::s_cstrATTR''();
`dynamic atexit destructor for 'XMLNames::s_cstrCDATA''();
`dynamic atexit destructor for 'XMLNames::s_cstrCDATA2''();
`dynamic atexit destructor for 'XMLNames::s_cstrCDEND''();
`dynamic atexit destructor for 'XMLNames::s_cstrCHILDNAME''();
`dynamic atexit destructor for 'XMLNames::s_cstrCLOSETAGSTART''();
`dynamic atexit destructor for 'XMLNames::s_cstrCOLUMN''();
`dynamic atexit destructor for 'XMLNames::s_cstrCOMMENT''();
`dynamic atexit destructor for 'XMLNames::s_cstrContentType''();
`dynamic atexit destructor for 'XMLNames::s_cstrDECLTAGSTART''();
`dynamic atexit destructor for 'XMLNames::s_cstrDEFAULT''();
`dynamic atexit destructor for 'XMLNames::s_cstrDOCTYPE''();
`dynamic atexit destructor for 'XMLNames::s_cstrDTDT''();
`dynamic atexit destructor for 'XMLNames::s_cstrDTTYPENS''();
`dynamic atexit destructor for 'XMLNames::s_cstrDefault''();
`dynamic atexit destructor for 'XMLNames::s_cstrDefaultVersion''();
`dynamic atexit destructor for 'XMLNames::s_cstrELTONLY''();
`dynamic atexit destructor for 'XMLNames::s_cstrEMPTY''();
`dynamic atexit destructor for 'XMLNames::s_cstrEMPTYTAGEND''();
`dynamic atexit destructor for 'XMLNames::s_cstrENDCOMMENT''();
`dynamic atexit destructor for 'XMLNames::s_cstrENTITIES''();
`dynamic atexit destructor for 'XMLNames::s_cstrENTITY''();
`dynamic atexit destructor for 'XMLNames::s_cstrENUMERATION''();
`dynamic atexit destructor for 'XMLNames::s_cstrEncoding''();
`dynamic atexit destructor for 'XMLNames::s_cstrFIXED''();
`dynamic atexit destructor for 'XMLNames::s_cstrID''();
`dynamic atexit destructor for 'XMLNames::s_cstrIDREF''();
`dynamic atexit destructor for 'XMLNames::s_cstrIDREFS''();
`dynamic atexit destructor for 'XMLNames::s_cstrIMPLIED''();
`dynamic atexit destructor for 'XMLNames::s_cstrIgnoreStart''();
`dynamic atexit destructor for 'XMLNames::s_cstrIncludeStart''();
`dynamic atexit destructor for 'XMLNames::s_cstrMIXED''();
`dynamic atexit destructor for 'XMLNames::s_cstrNAME''();
`dynamic atexit destructor for 'XMLNames::s_cstrNAME2''();
`dynamic atexit destructor for 'XMLNames::s_cstrNDATA''();
`dynamic atexit destructor for 'XMLNames::s_cstrNMTOKEN''();
`dynamic atexit destructor for 'XMLNames::s_cstrNMTOKENS''();
`dynamic atexit destructor for 'XMLNames::s_cstrNONAMESPACESCHEMALOCATION''();
`dynamic atexit destructor for 'XMLNames::s_cstrNOTATION''();
`dynamic atexit destructor for 'XMLNames::s_cstrNamespace''();
`dynamic atexit destructor for 'XMLNames::s_cstrPCDATA''();
`dynamic atexit destructor for 'XMLNames::s_cstrPITAGEND''();
`dynamic atexit destructor for 'XMLNames::s_cstrPITAGSTART''();
`dynamic atexit destructor for 'XMLNames::s_cstrPUBLIC''();
`dynamic atexit destructor for 'XMLNames::s_cstrPreserve''();
`dynamic atexit destructor for 'XMLNames::s_cstrREQUIRED''();
`dynamic atexit destructor for 'XMLNames::s_cstrROWSET''();
`dynamic atexit destructor for 'XMLNames::s_cstrSCHEMA''();
`dynamic atexit destructor for 'XMLNames::s_cstrSCHEMALOCATION''();
`dynamic atexit destructor for 'XMLNames::s_cstrSYSTEM''();
`dynamic atexit destructor for 'XMLNames::s_cstrSchemaURLPrefix''();
`dynamic atexit destructor for 'XMLNames::s_cstrStandalone''();
`dynamic atexit destructor for 'XMLNames::s_cstrTEXT''();
`dynamic atexit destructor for 'XMLNames::s_cstrTEXTONLY''();
`dynamic atexit destructor for 'XMLNames::s_cstrURLXML''();
`dynamic atexit destructor for 'XMLNames::s_cstrURNXML''();
`dynamic atexit destructor for 'XMLNames::s_cstrURNXMLNS''();
`dynamic atexit destructor for 'XMLNames::s_cstrUnknown''();
`dynamic atexit destructor for 'XMLNames::s_cstrVALUES''();
`dynamic atexit destructor for 'XMLNames::s_cstrVersion''();
`dynamic atexit destructor for 'XMLNames::s_cstrXML''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLLang''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLNS''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLNSCOLON''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLNamespace''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLSpace''();
`dynamic atexit destructor for 'XMLNames::s_cstrXMLSpace2''();
`dynamic atexit destructor for 'XMLNames::s_cstrXSDSCHEMA''();
`dynamic atexit destructor for 'XMLNames::s_cstrXSI''();
`dynamic atexit destructor for 'XMLNames::s_cstrXSINIL''();
`dynamic atexit destructor for 'XMLNames::s_cstrXSITYPE''();
`dynamic atexit destructor for 'XMLParser::s_MaxElementDepth''();
`dynamic atexit destructor for 'XMLParser::s_MaxXMLSize''();
`dynamic atexit destructor for 'XPParser::s_cstrAnd''();
`dynamic atexit destructor for 'XPParser::s_cstrDiv''();
`dynamic atexit destructor for 'XPParser::s_cstrMod''();
`dynamic atexit destructor for 'XPParser::s_cstrOr''();
`dynamic atexit destructor for 'XPParser::s_cstrXmlns''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomApplyImports''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomApplyTemplates''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomAttribute''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomAttributeSet''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomCallTemplate''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomChoose''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomComment''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomCopy''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomCopyOf''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomCurrent''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomDecimalFormat''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomDocument''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomElement''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomElementAvailable''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomFallback''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomForEach''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomFormatNumber''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomFormatNumberMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomFunctionAvailable''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomGenerateId''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomIf''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomImport''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomInclude''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomKey''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomMessage''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNSMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNSXSLT''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNSXTL''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNamespaceAlias''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNodeSetMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomNumber''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomOtherwise''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomOutput''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomParameter''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomPreserveSpace''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomProcessInstr''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomScript''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomSort''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomStripSpace''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomStylesheet''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomSystemProperty''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomTemplate''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomText''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomTransform''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomUnparsedEntityUri''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomValueOf''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomVariable''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomWhen''();
`dynamic atexit destructor for 'XSLTKeywords::s_atomWithParam''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrApplyImports''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrApplyTemplates''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrAttribute''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrAttributeSet''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCDATASection''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCallTemplate''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCaseOrder''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrChoose''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrComment''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrContent''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCopy''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCopyOf''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCount''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrCurrent''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDataType''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDecimalFormat''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDecimalSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDefaultLanguage''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDigit''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDocTypePublic''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDocTypeSystem''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrDocument''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrElement''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrElementAvailable''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrElements''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrExclPrefixes''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrExtElems''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFallback''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrForEach''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFormat''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFormatNumber''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFormatNumberMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFrom''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrFunctionAvailable''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrGenerateId''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrGroupSize''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrGroupingSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrHRef''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrHTML''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrId''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrIf''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrImplementsPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrImport''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrInclude''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrIndent''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrInfinity''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrKey''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrLang''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrLanguage''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrLetterVal''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrLevel''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMatch''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMediaType''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMessage''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMethod''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMinusSign''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrMode''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNSMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNSXSLT''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNSXTL''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNaN''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrName''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNamespace''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNamespaceAlias''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNoOutputEscaping''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNodeSetMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrNumber''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrOmitXMLDecl''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrOtherwise''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrOutput''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrParameter''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPatternSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPerMill''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPercent''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPreserveSpace''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrPriority''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrProcessInstr''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrResultPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrScript''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrSelect''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrSort''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrSortOrder''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrStripSpace''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrStylesheet''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrStylesheetPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrSystemProperty''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrTemplate''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrTerminate''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrTest''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrText''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrTextHtml''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrTransform''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrUTF16''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrUnparsedEntityUri''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrUse''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrUseAttrSets''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrValue''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrValueOf''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVariable''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVendor''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVendorURL''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVendorURLValue''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVendorValue''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrVersion''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrWhen''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrWithParam''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrXML''();
`dynamic atexit destructor for 'XSLTKeywords::s_cstrZeroDigit''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmCDATASection''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmCaseOrder''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmCount''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmDataType''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmDecimalSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmDigit''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmDocTypePublic''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmDocTypeSystem''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmElements''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmExclPrefixes''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmExtElems''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmFormat''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmFrom''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalExclPrefixes''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalExtElems''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalUseAttrSets''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalVendor''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalVendorURL''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalVersion''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGlobalVersionMSXSL''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGroupSize''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmGroupingSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmHRef''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmHTML''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmId''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmImplementsPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmIndent''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmInfinity''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmLang''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmLanguage''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmLetterVal''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmLevel''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmMatch''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmMediaType''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmMethod''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmMinusSign''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmMode''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmNaN''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmName''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmNamespace''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmNoOutputEscaping''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmOmitXMLDecl''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmPatternSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmPerMill''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmPercent''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmPriority''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmResultPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmSelect''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmSeparator''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmSortOrder''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmStylesheetPrefix''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmTerminate''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmTest''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmText''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmUse''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmUseAttrSets''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmValue''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmVersion''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmXML''();
`dynamic atexit destructor for 'XSLTKeywords::s_nmZeroDigit''();
`dynamic atexit destructor for '_AnyCM''();
`dynamic atexit destructor for '_EmptyCM''();
`dynamic atexit destructor for '_MXItem::s_rAnnotationsNameDef''();
`dynamic atexit destructor for '_TextOnlyCM''();
`dynamic atexit destructor for 's_cstrHash_cdata_section''();
`dynamic atexit destructor for 's_cstrHash_comment''();
`dynamic atexit destructor for 's_cstrHash_document''();
`dynamic atexit destructor for 's_cstrHash_document_fragment''();
`dynamic atexit destructor for 's_cstrHash_text''();
`dynamic atexit destructor for 'sha2''();
`dynamic initializer for 'AbsoluteNode::_ndAbs''();
`dynamic initializer for 'AlwaysAttrFilter::_filter''();
`dynamic initializer for 'AlwaysFilter::_filter''();
`dynamic initializer for 'AlwaysNmspFilter::_filter''();
`dynamic initializer for 'Atom::s_emptyAtom''();
`dynamic initializer for 'Atom::s_pAtoms''();
`dynamic initializer for 'ContextNode::_ndCtxt''();
`dynamic initializer for 'CurrentMatcher::_matcher''();
`dynamic initializer for 'DOMError::s_pSuccessParseErrorObj''();
`dynamic initializer for 'Datatype_language::s_languagePattern''();
`dynamic initializer for 'DecimalFormatSymbols::s_cstrNaN''();
`dynamic initializer for 'DecimalFormatSymbols::s_cstrPosInfinity''();
`dynamic initializer for 'DecimalFormatSymbols::s_defaultInstance''();
`dynamic initializer for 'DispatchFunctions::s_cstrGet''();
`dynamic initializer for 'ElementDecl::_AnyTypeElementDecl''();
`dynamic initializer for 'ElementDecl::_Empty''();
`dynamic initializer for 'Exception::s_cexpOutOfMem''();
`dynamic initializer for 'Exception::s_cexpOutOfStack''();
`dynamic initializer for 'Exception::s_cexpSystemError''();
`dynamic initializer for 'Exception::s_cstrException''();
`dynamic initializer for 'Exception::s_pstrOutOfMem''();
`dynamic initializer for 'Exception::s_pstrOutOfStack''();
`dynamic initializer for 'HashHashAny''();
`dynamic initializer for 'HashHashLocal''();
`dynamic initializer for 'HashHashOther''();
`dynamic initializer for 'HashHashTargetNamespace''();
`dynamic initializer for 'HashtableIter::s_emptyHashtable''();
`dynamic initializer for 'MSXMLRegistry::s_rgSettings''();
`dynamic initializer for 'MXItemCollection::s_rEmpty''();
`dynamic initializer for 'MXStringCollection::s_rEmpty''();
`dynamic initializer for 'MXUnhandledAttributes::s_rEmpty''();
`dynamic initializer for 'Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::isInitialized''();
`dynamic initializer for 'Name::s_emptyName''();
`dynamic initializer for 'Name::s_pNames''();
`dynamic initializer for 'NeverFilter::_filter''();
`dynamic initializer for 'NeverMatcher::_matcher''();
`dynamic initializer for 'NewParserCallbackFailureTrackingRegistry::s_rgSettings''();
`dynamic initializer for 'NullElement::s_rNullElement''();
`dynamic initializer for 'RegexCharClass::Any''();
`dynamic initializer for 'RegexCharClass::AnyClass''();
`dynamic initializer for 'RegexCharClass::Dot''();
`dynamic initializer for 'RegexCharClass::DotClass''();
`dynamic initializer for 'RegexCharClass::Empty''();
`dynamic initializer for 'RegexCharClass::EmptyClass''();
`dynamic initializer for 'RegexCharClass::NotSpace''();
`dynamic initializer for 'RegexCharClass::NotWord''();
`dynamic initializer for 'RegexCharClass::Space''();
`dynamic initializer for 'RegexCharClass::Word''();
`dynamic initializer for 'RegexCharClass::_definedCategories''();
`dynamic initializer for 'RegexCharClass::_propTable''();
`dynamic initializer for 'RegexMatch::_empty''();
`dynamic initializer for 'RegexPrefix::_empty''();
`dynamic initializer for 'SchemaComplexType::_anyType''();
`dynamic initializer for 'SchemaDatatype::c_ENTITIES''();
`dynamic initializer for 'SchemaDatatype::c_ENTITY''();
`dynamic initializer for 'SchemaDatatype::c_ID''();
`dynamic initializer for 'SchemaDatatype::c_IDREF''();
`dynamic initializer for 'SchemaDatatype::c_IDREFS''();
`dynamic initializer for 'SchemaDatatype::c_NCName''();
`dynamic initializer for 'SchemaDatatype::c_NMTOKEN''();
`dynamic initializer for 'SchemaDatatype::c_NMTOKENS''();
`dynamic initializer for 'SchemaDatatype::c_NOTATION''();
`dynamic initializer for 'SchemaDatatype::c_Name''();
`dynamic initializer for 'SchemaDatatype::c_QName''();
`dynamic initializer for 'SchemaDatatype::c_XsdTypes''();
`dynamic initializer for 'SchemaDatatype::c_anySimpleType''();
`dynamic initializer for 'SchemaDatatype::c_anyURI''();
`dynamic initializer for 'SchemaDatatype::c_base64Binary''();
`dynamic initializer for 'SchemaDatatype::c_boolean''();
`dynamic initializer for 'SchemaDatatype::c_byte''();
`dynamic initializer for 'SchemaDatatype::c_date''();
`dynamic initializer for 'SchemaDatatype::c_dateTime''();
`dynamic initializer for 'SchemaDatatype::c_day''();
`dynamic initializer for 'SchemaDatatype::c_decimal''();
`dynamic initializer for 'SchemaDatatype::c_double''();
`dynamic initializer for 'SchemaDatatype::c_duration''();
`dynamic initializer for 'SchemaDatatype::c_float''();
`dynamic initializer for 'SchemaDatatype::c_hexBinary''();
`dynamic initializer for 'SchemaDatatype::c_int''();
`dynamic initializer for 'SchemaDatatype::c_integer''();
`dynamic initializer for 'SchemaDatatype::c_language''();
`dynamic initializer for 'SchemaDatatype::c_long''();
`dynamic initializer for 'SchemaDatatype::c_month''();
`dynamic initializer for 'SchemaDatatype::c_monthDay''();
`dynamic initializer for 'SchemaDatatype::c_negativeInteger''();
`dynamic initializer for 'SchemaDatatype::c_nonNegativeInteger''();
`dynamic initializer for 'SchemaDatatype::c_nonPositiveInteger''();
`dynamic initializer for 'SchemaDatatype::c_normalizedString''();
`dynamic initializer for 'SchemaDatatype::c_positiveInteger''();
`dynamic initializer for 'SchemaDatatype::c_short''();
`dynamic initializer for 'SchemaDatatype::c_string''();
`dynamic initializer for 'SchemaDatatype::c_time''();
`dynamic initializer for 'SchemaDatatype::c_token''();
`dynamic initializer for 'SchemaDatatype::c_unsignedByte''();
`dynamic initializer for 'SchemaDatatype::c_unsignedInt''();
`dynamic initializer for 'SchemaDatatype::c_unsignedLong''();
`dynamic initializer for 'SchemaDatatype::c_unsignedShort''();
`dynamic initializer for 'SchemaDatatype::c_year''();
`dynamic initializer for 'SchemaDatatype::c_yearMonth''();
`dynamic initializer for 'SchemaNames::c_strAttribute''();
`dynamic initializer for 'SchemaNames::c_strAttributeType''();
`dynamic initializer for 'SchemaNames::c_strClosed''();
`dynamic initializer for 'SchemaNames::c_strContent''();
`dynamic initializer for 'SchemaNames::c_strDTType''();
`dynamic initializer for 'SchemaNames::c_strDTValues''();
`dynamic initializer for 'SchemaNames::c_strDatatype''();
`dynamic initializer for 'SchemaNames::c_strDefault''();
`dynamic initializer for 'SchemaNames::c_strDescription''();
`dynamic initializer for 'SchemaNames::c_strENTITIES''();
`dynamic initializer for 'SchemaNames::c_strENTITY''();
`dynamic initializer for 'SchemaNames::c_strENUMERATION''();
`dynamic initializer for 'SchemaNames::c_strElement''();
`dynamic initializer for 'SchemaNames::c_strElementType''();
`dynamic initializer for 'SchemaNames::c_strEltOnly''();
`dynamic initializer for 'SchemaNames::c_strEmpty''();
`dynamic initializer for 'SchemaNames::c_strExtends''();
`dynamic initializer for 'SchemaNames::c_strGroup''();
`dynamic initializer for 'SchemaNames::c_strGroupOrder''();
`dynamic initializer for 'SchemaNames::c_strID''();
`dynamic initializer for 'SchemaNames::c_strIDREF''();
`dynamic initializer for 'SchemaNames::c_strIDREFS''();
`dynamic initializer for 'SchemaNames::c_strInfinite''();
`dynamic initializer for 'SchemaNames::c_strMANY''();
`dynamic initializer for 'SchemaNames::c_strMax''();
`dynamic initializer for 'SchemaNames::c_strMaxExclusive''();
`dynamic initializer for 'SchemaNames::c_strMaxLength''();
`dynamic initializer for 'SchemaNames::c_strMaxOccurs''();
`dynamic initializer for 'SchemaNames::c_strMin''();
`dynamic initializer for 'SchemaNames::c_strMinExclusive''();
`dynamic initializer for 'SchemaNames::c_strMinLength''();
`dynamic initializer for 'SchemaNames::c_strMinOccurs''();
`dynamic initializer for 'SchemaNames::c_strMixed''();
`dynamic initializer for 'SchemaNames::c_strModel''();
`dynamic initializer for 'SchemaNames::c_strNMTOKEN''();
`dynamic initializer for 'SchemaNames::c_strNMTOKENS''();
`dynamic initializer for 'SchemaNames::c_strName''();
`dynamic initializer for 'SchemaNames::c_strNo''();
`dynamic initializer for 'SchemaNames::c_strOR''();
`dynamic initializer for 'SchemaNames::c_strOpen''();
`dynamic initializer for 'SchemaNames::c_strOrder''();
`dynamic initializer for 'SchemaNames::c_strRequired''();
`dynamic initializer for 'SchemaNames::c_strRequiredValue''();
`dynamic initializer for 'SchemaNames::c_strSEQ''();
`dynamic initializer for 'SchemaNames::c_strSchemaRoot''();
`dynamic initializer for 'SchemaNames::c_strString''();
`dynamic initializer for 'SchemaNames::c_strTextOnly''();
`dynamic initializer for 'SchemaNames::c_strType''();
`dynamic initializer for 'SchemaNames::c_strXSDAbstract''();
`dynamic initializer for 'SchemaNames::c_strXSDAll''();
`dynamic initializer for 'SchemaNames::c_strXSDAnnotation''();
`dynamic initializer for 'SchemaNames::c_strXSDAny''();
`dynamic initializer for 'SchemaNames::c_strXSDAnyAttribute''();
`dynamic initializer for 'SchemaNames::c_strXSDAnyType''();
`dynamic initializer for 'SchemaNames::c_strXSDAppinfo''();
`dynamic initializer for 'SchemaNames::c_strXSDAttribute''();
`dynamic initializer for 'SchemaNames::c_strXSDAttributeFormDefault''();
`dynamic initializer for 'SchemaNames::c_strXSDAttributeGroup''();
`dynamic initializer for 'SchemaNames::c_strXSDBase''();
`dynamic initializer for 'SchemaNames::c_strXSDBlock''();
`dynamic initializer for 'SchemaNames::c_strXSDBlockDefault''();
`dynamic initializer for 'SchemaNames::c_strXSDChoice''();
`dynamic initializer for 'SchemaNames::c_strXSDComplexContent''();
`dynamic initializer for 'SchemaNames::c_strXSDComplexType''();
`dynamic initializer for 'SchemaNames::c_strXSDContent''();
`dynamic initializer for 'SchemaNames::c_strXSDDefault''();
`dynamic initializer for 'SchemaNames::c_strXSDDerivedBy''();
`dynamic initializer for 'SchemaNames::c_strXSDDocumentation''();
`dynamic initializer for 'SchemaNames::c_strXSDElement''();
`dynamic initializer for 'SchemaNames::c_strXSDElementFormDefault''();
`dynamic initializer for 'SchemaNames::c_strXSDEnumeration''();
`dynamic initializer for 'SchemaNames::c_strXSDEquivClass''();
`dynamic initializer for 'SchemaNames::c_strXSDExtension''();
`dynamic initializer for 'SchemaNames::c_strXSDField''();
`dynamic initializer for 'SchemaNames::c_strXSDFinal''();
`dynamic initializer for 'SchemaNames::c_strXSDFinalDefault''();
`dynamic initializer for 'SchemaNames::c_strXSDFixed''();
`dynamic initializer for 'SchemaNames::c_strXSDForm''();
`dynamic initializer for 'SchemaNames::c_strXSDFractionDigits''();
`dynamic initializer for 'SchemaNames::c_strXSDGroup''();
`dynamic initializer for 'SchemaNames::c_strXSDId''();
`dynamic initializer for 'SchemaNames::c_strXSDImport''();
`dynamic initializer for 'SchemaNames::c_strXSDInclude''();
`dynamic initializer for 'SchemaNames::c_strXSDItemType''();
`dynamic initializer for 'SchemaNames::c_strXSDKey''();
`dynamic initializer for 'SchemaNames::c_strXSDKeyref''();
`dynamic initializer for 'SchemaNames::c_strXSDLength''();
`dynamic initializer for 'SchemaNames::c_strXSDMaxExclusive''();
`dynamic initializer for 'SchemaNames::c_strXSDMaxInclusive''();
`dynamic initializer for 'SchemaNames::c_strXSDMaxLength''();
`dynamic initializer for 'SchemaNames::c_strXSDMaxOccurs''();
`dynamic initializer for 'SchemaNames::c_strXSDMemberTypes''();
`dynamic initializer for 'SchemaNames::c_strXSDMinExclusive''();
`dynamic initializer for 'SchemaNames::c_strXSDMinInclusive''();
`dynamic initializer for 'SchemaNames::c_strXSDMinLength''();
`dynamic initializer for 'SchemaNames::c_strXSDMinOccurs''();
`dynamic initializer for 'SchemaNames::c_strXSDMixed''();
`dynamic initializer for 'SchemaNames::c_strXSDName''();
`dynamic initializer for 'SchemaNames::c_strXSDNamespace''();
`dynamic initializer for 'SchemaNames::c_strXSDNillable''();
`dynamic initializer for 'SchemaNames::c_strXSDNotation''();
`dynamic initializer for 'SchemaNames::c_strXSDPattern''();
`dynamic initializer for 'SchemaNames::c_strXSDProcessContents''();
`dynamic initializer for 'SchemaNames::c_strXSDPublic''();
`dynamic initializer for 'SchemaNames::c_strXSDRedefine''();
`dynamic initializer for 'SchemaNames::c_strXSDRef''();
`dynamic initializer for 'SchemaNames::c_strXSDRefer''();
`dynamic initializer for 'SchemaNames::c_strXSDRestriction''();
`dynamic initializer for 'SchemaNames::c_strXSDSchema''();
`dynamic initializer for 'SchemaNames::c_strXSDSchemaLocation''();
`dynamic initializer for 'SchemaNames::c_strXSDSelector''();
`dynamic initializer for 'SchemaNames::c_strXSDSequence''();
`dynamic initializer for 'SchemaNames::c_strXSDSimpleContent''();
`dynamic initializer for 'SchemaNames::c_strXSDSimpleType''();
`dynamic initializer for 'SchemaNames::c_strXSDSimpleTypeList''();
`dynamic initializer for 'SchemaNames::c_strXSDSimpleTypeUnion''();
`dynamic initializer for 'SchemaNames::c_strXSDSource''();
`dynamic initializer for 'SchemaNames::c_strXSDSubstitutionGroup''();
`dynamic initializer for 'SchemaNames::c_strXSDSystem''();
`dynamic initializer for 'SchemaNames::c_strXSDTargetNamespace''();
`dynamic initializer for 'SchemaNames::c_strXSDTotalDigits''();
`dynamic initializer for 'SchemaNames::c_strXSDType''();
`dynamic initializer for 'SchemaNames::c_strXSDUnique''();
`dynamic initializer for 'SchemaNames::c_strXSDUse''();
`dynamic initializer for 'SchemaNames::c_strXSDValue''();
`dynamic initializer for 'SchemaNames::c_strXSDVersion''();
`dynamic initializer for 'SchemaNames::c_strXSDWhitespace''();
`dynamic initializer for 'SchemaNames::c_strXSDXPath''();
`dynamic initializer for 'SchemaNames::c_strXmlLang''();
`dynamic initializer for 'SchemaNames::c_strYes''();
`dynamic initializer for 'SchemaNames::names''();
`dynamic initializer for 'SchemaParticle::_empty''();
`dynamic initializer for 'ScriptHost::s_rgSettings''();
`dynamic initializer for 'String::s_cstrEmpty''();
`dynamic initializer for 'String::s_cstrNewLine''();
`dynamic initializer for 'String::s_cstrNull''();
`dynamic initializer for 'String::s_cstrSpace''();
`dynamic initializer for 'XConvert::s_cstrEight''();
`dynamic initializer for 'XConvert::s_cstrFalse''();
`dynamic initializer for 'XConvert::s_cstrFive''();
`dynamic initializer for 'XConvert::s_cstrFour''();
`dynamic initializer for 'XConvert::s_cstrNaN''();
`dynamic initializer for 'XConvert::s_cstrNegInfinity''();
`dynamic initializer for 'XConvert::s_cstrNine''();
`dynamic initializer for 'XConvert::s_cstrOne''();
`dynamic initializer for 'XConvert::s_cstrPosInfinity''();
`dynamic initializer for 'XConvert::s_cstrSeven''();
`dynamic initializer for 'XConvert::s_cstrSix''();
`dynamic initializer for 'XConvert::s_cstrThree''();
`dynamic initializer for 'XConvert::s_cstrTrue''();
`dynamic initializer for 'XConvert::s_cstrTwo''();
`dynamic initializer for 'XConvert::s_cstrZero''();
`dynamic initializer for 'XMLNames::atomDTTYPENS''();
`dynamic initializer for 'XMLNames::atomEmpty''();
`dynamic initializer for 'XMLNames::atomSCHEMA''();
`dynamic initializer for 'XMLNames::atomURNXML''();
`dynamic initializer for 'XMLNames::atomURNXMLNS''();
`dynamic initializer for 'XMLNames::atomXML''();
`dynamic initializer for 'XMLNames::atomXMLNS''();
`dynamic initializer for 'XMLNames::atomXSDSCHEMA''();
`dynamic initializer for 'XMLNames::atomXSI''();
`dynamic initializer for 'XMLNames::names''();
`dynamic initializer for 'XMLNames::s_cstrANY''();
`dynamic initializer for 'XMLNames::s_cstrATTR''();
`dynamic initializer for 'XMLNames::s_cstrCDATA''();
`dynamic initializer for 'XMLNames::s_cstrCDATA2''();
`dynamic initializer for 'XMLNames::s_cstrCDEND''();
`dynamic initializer for 'XMLNames::s_cstrCHILDNAME''();
`dynamic initializer for 'XMLNames::s_cstrCLOSETAGSTART''();
`dynamic initializer for 'XMLNames::s_cstrCOLUMN''();
`dynamic initializer for 'XMLNames::s_cstrCOMMENT''();
`dynamic initializer for 'XMLNames::s_cstrContentType''();
`dynamic initializer for 'XMLNames::s_cstrDECLTAGSTART''();
`dynamic initializer for 'XMLNames::s_cstrDEFAULT''();
`dynamic initializer for 'XMLNames::s_cstrDOCTYPE''();
`dynamic initializer for 'XMLNames::s_cstrDTDT''();
`dynamic initializer for 'XMLNames::s_cstrDTTYPENS''();
`dynamic initializer for 'XMLNames::s_cstrDefault''();
`dynamic initializer for 'XMLNames::s_cstrDefaultVersion''();
`dynamic initializer for 'XMLNames::s_cstrELTONLY''();
`dynamic initializer for 'XMLNames::s_cstrEMPTY''();
`dynamic initializer for 'XMLNames::s_cstrEMPTYTAGEND''();
`dynamic initializer for 'XMLNames::s_cstrENDCOMMENT''();
`dynamic initializer for 'XMLNames::s_cstrENTITIES''();
`dynamic initializer for 'XMLNames::s_cstrENTITY''();
`dynamic initializer for 'XMLNames::s_cstrENUMERATION''();
`dynamic initializer for 'XMLNames::s_cstrEncoding''();
`dynamic initializer for 'XMLNames::s_cstrFIXED''();
`dynamic initializer for 'XMLNames::s_cstrID''();
`dynamic initializer for 'XMLNames::s_cstrIDREF''();
`dynamic initializer for 'XMLNames::s_cstrIDREFS''();
`dynamic initializer for 'XMLNames::s_cstrIMPLIED''();
`dynamic initializer for 'XMLNames::s_cstrIgnoreStart''();
`dynamic initializer for 'XMLNames::s_cstrIncludeStart''();
`dynamic initializer for 'XMLNames::s_cstrMIXED''();
`dynamic initializer for 'XMLNames::s_cstrNAME''();
`dynamic initializer for 'XMLNames::s_cstrNAME2''();
`dynamic initializer for 'XMLNames::s_cstrNDATA''();
`dynamic initializer for 'XMLNames::s_cstrNMTOKEN''();
`dynamic initializer for 'XMLNames::s_cstrNMTOKENS''();
`dynamic initializer for 'XMLNames::s_cstrNONAMESPACESCHEMALOCATION''();
`dynamic initializer for 'XMLNames::s_cstrNOTATION''();
`dynamic initializer for 'XMLNames::s_cstrNamespace''();
`dynamic initializer for 'XMLNames::s_cstrPCDATA''();
`dynamic initializer for 'XMLNames::s_cstrPITAGEND''();
`dynamic initializer for 'XMLNames::s_cstrPITAGSTART''();
`dynamic initializer for 'XMLNames::s_cstrPUBLIC''();
`dynamic initializer for 'XMLNames::s_cstrPreserve''();
`dynamic initializer for 'XMLNames::s_cstrREQUIRED''();
`dynamic initializer for 'XMLNames::s_cstrROWSET''();
`dynamic initializer for 'XMLNames::s_cstrSCHEMA''();
`dynamic initializer for 'XMLNames::s_cstrSCHEMALOCATION''();
`dynamic initializer for 'XMLNames::s_cstrSYSTEM''();
`dynamic initializer for 'XMLNames::s_cstrSchemaURLPrefix''();
`dynamic initializer for 'XMLNames::s_cstrStandalone''();
`dynamic initializer for 'XMLNames::s_cstrTEXT''();
`dynamic initializer for 'XMLNames::s_cstrTEXTONLY''();
`dynamic initializer for 'XMLNames::s_cstrURLXML''();
`dynamic initializer for 'XMLNames::s_cstrURNXML''();
`dynamic initializer for 'XMLNames::s_cstrURNXMLNS''();
`dynamic initializer for 'XMLNames::s_cstrUnknown''();
`dynamic initializer for 'XMLNames::s_cstrVALUES''();
`dynamic initializer for 'XMLNames::s_cstrVersion''();
`dynamic initializer for 'XMLNames::s_cstrXML''();
`dynamic initializer for 'XMLNames::s_cstrXMLLang''();
`dynamic initializer for 'XMLNames::s_cstrXMLNS''();
`dynamic initializer for 'XMLNames::s_cstrXMLNSCOLON''();
`dynamic initializer for 'XMLNames::s_cstrXMLNamespace''();
`dynamic initializer for 'XMLNames::s_cstrXMLSpace''();
`dynamic initializer for 'XMLNames::s_cstrXMLSpace2''();
`dynamic initializer for 'XMLNames::s_cstrXSDSCHEMA''();
`dynamic initializer for 'XMLNames::s_cstrXSI''();
`dynamic initializer for 'XMLNames::s_cstrXSINIL''();
`dynamic initializer for 'XMLNames::s_cstrXSITYPE''();
`dynamic initializer for 'XMLParser::s_MaxElementDepth''();
`dynamic initializer for 'XMLParser::s_MaxXMLSize''();
`dynamic initializer for 'XPParser::s_cstrAnd''();
`dynamic initializer for 'XPParser::s_cstrDiv''();
`dynamic initializer for 'XPParser::s_cstrMod''();
`dynamic initializer for 'XPParser::s_cstrOr''();
`dynamic initializer for 'XPParser::s_cstrXmlns''();
`dynamic initializer for 'XSLTKeywords::s_XSLTElementLookup''();
`dynamic initializer for 'XSLTKeywords::s_atomApplyImports''();
`dynamic initializer for 'XSLTKeywords::s_atomApplyTemplates''();
`dynamic initializer for 'XSLTKeywords::s_atomAttribute''();
`dynamic initializer for 'XSLTKeywords::s_atomAttributeSet''();
`dynamic initializer for 'XSLTKeywords::s_atomCallTemplate''();
`dynamic initializer for 'XSLTKeywords::s_atomChoose''();
`dynamic initializer for 'XSLTKeywords::s_atomComment''();
`dynamic initializer for 'XSLTKeywords::s_atomCopy''();
`dynamic initializer for 'XSLTKeywords::s_atomCopyOf''();
`dynamic initializer for 'XSLTKeywords::s_atomCurrent''();
`dynamic initializer for 'XSLTKeywords::s_atomDecimalFormat''();
`dynamic initializer for 'XSLTKeywords::s_atomDocument''();
`dynamic initializer for 'XSLTKeywords::s_atomElement''();
`dynamic initializer for 'XSLTKeywords::s_atomElementAvailable''();
`dynamic initializer for 'XSLTKeywords::s_atomFallback''();
`dynamic initializer for 'XSLTKeywords::s_atomForEach''();
`dynamic initializer for 'XSLTKeywords::s_atomFormatNumber''();
`dynamic initializer for 'XSLTKeywords::s_atomFormatNumberMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_atomFunctionAvailable''();
`dynamic initializer for 'XSLTKeywords::s_atomGenerateId''();
`dynamic initializer for 'XSLTKeywords::s_atomIf''();
`dynamic initializer for 'XSLTKeywords::s_atomImport''();
`dynamic initializer for 'XSLTKeywords::s_atomInclude''();
`dynamic initializer for 'XSLTKeywords::s_atomKey''();
`dynamic initializer for 'XSLTKeywords::s_atomMessage''();
`dynamic initializer for 'XSLTKeywords::s_atomNSMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_atomNSXSLT''();
`dynamic initializer for 'XSLTKeywords::s_atomNSXTL''();
`dynamic initializer for 'XSLTKeywords::s_atomNamespaceAlias''();
`dynamic initializer for 'XSLTKeywords::s_atomNodeSetMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_atomNumber''();
`dynamic initializer for 'XSLTKeywords::s_atomOtherwise''();
`dynamic initializer for 'XSLTKeywords::s_atomOutput''();
`dynamic initializer for 'XSLTKeywords::s_atomParameter''();
`dynamic initializer for 'XSLTKeywords::s_atomPrefix''();
`dynamic initializer for 'XSLTKeywords::s_atomPreserveSpace''();
`dynamic initializer for 'XSLTKeywords::s_atomProcessInstr''();
`dynamic initializer for 'XSLTKeywords::s_atomScript''();
`dynamic initializer for 'XSLTKeywords::s_atomSort''();
`dynamic initializer for 'XSLTKeywords::s_atomStripSpace''();
`dynamic initializer for 'XSLTKeywords::s_atomStylesheet''();
`dynamic initializer for 'XSLTKeywords::s_atomSystemProperty''();
`dynamic initializer for 'XSLTKeywords::s_atomTemplate''();
`dynamic initializer for 'XSLTKeywords::s_atomText''();
`dynamic initializer for 'XSLTKeywords::s_atomTransform''();
`dynamic initializer for 'XSLTKeywords::s_atomUnparsedEntityUri''();
`dynamic initializer for 'XSLTKeywords::s_atomValueOf''();
`dynamic initializer for 'XSLTKeywords::s_atomVariable''();
`dynamic initializer for 'XSLTKeywords::s_atomWhen''();
`dynamic initializer for 'XSLTKeywords::s_atomWithParam''();
`dynamic initializer for 'XSLTKeywords::s_cstrApplyImports''();
`dynamic initializer for 'XSLTKeywords::s_cstrApplyTemplates''();
`dynamic initializer for 'XSLTKeywords::s_cstrAttribute''();
`dynamic initializer for 'XSLTKeywords::s_cstrAttributeSet''();
`dynamic initializer for 'XSLTKeywords::s_cstrCDATASection''();
`dynamic initializer for 'XSLTKeywords::s_cstrCallTemplate''();
`dynamic initializer for 'XSLTKeywords::s_cstrCaseOrder''();
`dynamic initializer for 'XSLTKeywords::s_cstrChoose''();
`dynamic initializer for 'XSLTKeywords::s_cstrComment''();
`dynamic initializer for 'XSLTKeywords::s_cstrContent''();
`dynamic initializer for 'XSLTKeywords::s_cstrCopy''();
`dynamic initializer for 'XSLTKeywords::s_cstrCopyOf''();
`dynamic initializer for 'XSLTKeywords::s_cstrCount''();
`dynamic initializer for 'XSLTKeywords::s_cstrCurrent''();
`dynamic initializer for 'XSLTKeywords::s_cstrDataType''();
`dynamic initializer for 'XSLTKeywords::s_cstrDecimalFormat''();
`dynamic initializer for 'XSLTKeywords::s_cstrDecimalSeparator''();
`dynamic initializer for 'XSLTKeywords::s_cstrDefaultLanguage''();
`dynamic initializer for 'XSLTKeywords::s_cstrDigit''();
`dynamic initializer for 'XSLTKeywords::s_cstrDocTypePublic''();
`dynamic initializer for 'XSLTKeywords::s_cstrDocTypeSystem''();
`dynamic initializer for 'XSLTKeywords::s_cstrDocument''();
`dynamic initializer for 'XSLTKeywords::s_cstrElement''();
`dynamic initializer for 'XSLTKeywords::s_cstrElementAvailable''();
`dynamic initializer for 'XSLTKeywords::s_cstrElements''();
`dynamic initializer for 'XSLTKeywords::s_cstrExclPrefixes''();
`dynamic initializer for 'XSLTKeywords::s_cstrExtElems''();
`dynamic initializer for 'XSLTKeywords::s_cstrFallback''();
`dynamic initializer for 'XSLTKeywords::s_cstrForEach''();
`dynamic initializer for 'XSLTKeywords::s_cstrFormat''();
`dynamic initializer for 'XSLTKeywords::s_cstrFormatNumber''();
`dynamic initializer for 'XSLTKeywords::s_cstrFormatNumberMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_cstrFrom''();
`dynamic initializer for 'XSLTKeywords::s_cstrFunctionAvailable''();
`dynamic initializer for 'XSLTKeywords::s_cstrGenerateId''();
`dynamic initializer for 'XSLTKeywords::s_cstrGroupSize''();
`dynamic initializer for 'XSLTKeywords::s_cstrGroupingSeparator''();
`dynamic initializer for 'XSLTKeywords::s_cstrHRef''();
`dynamic initializer for 'XSLTKeywords::s_cstrHTML''();
`dynamic initializer for 'XSLTKeywords::s_cstrId''();
`dynamic initializer for 'XSLTKeywords::s_cstrIf''();
`dynamic initializer for 'XSLTKeywords::s_cstrImplementsPrefix''();
`dynamic initializer for 'XSLTKeywords::s_cstrImport''();
`dynamic initializer for 'XSLTKeywords::s_cstrInclude''();
`dynamic initializer for 'XSLTKeywords::s_cstrIndent''();
`dynamic initializer for 'XSLTKeywords::s_cstrInfinity''();
`dynamic initializer for 'XSLTKeywords::s_cstrKey''();
`dynamic initializer for 'XSLTKeywords::s_cstrLang''();
`dynamic initializer for 'XSLTKeywords::s_cstrLanguage''();
`dynamic initializer for 'XSLTKeywords::s_cstrLetterVal''();
`dynamic initializer for 'XSLTKeywords::s_cstrLevel''();
`dynamic initializer for 'XSLTKeywords::s_cstrMatch''();
`dynamic initializer for 'XSLTKeywords::s_cstrMediaType''();
`dynamic initializer for 'XSLTKeywords::s_cstrMessage''();
`dynamic initializer for 'XSLTKeywords::s_cstrMethod''();
`dynamic initializer for 'XSLTKeywords::s_cstrMinusSign''();
`dynamic initializer for 'XSLTKeywords::s_cstrMode''();
`dynamic initializer for 'XSLTKeywords::s_cstrNSMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_cstrNSXSLT''();
`dynamic initializer for 'XSLTKeywords::s_cstrNSXTL''();
`dynamic initializer for 'XSLTKeywords::s_cstrNaN''();
`dynamic initializer for 'XSLTKeywords::s_cstrName''();
`dynamic initializer for 'XSLTKeywords::s_cstrNamespace''();
`dynamic initializer for 'XSLTKeywords::s_cstrNamespaceAlias''();
`dynamic initializer for 'XSLTKeywords::s_cstrNoOutputEscaping''();
`dynamic initializer for 'XSLTKeywords::s_cstrNodeSetMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_cstrNumber''();
`dynamic initializer for 'XSLTKeywords::s_cstrOmitXMLDecl''();
`dynamic initializer for 'XSLTKeywords::s_cstrOtherwise''();
`dynamic initializer for 'XSLTKeywords::s_cstrOutput''();
`dynamic initializer for 'XSLTKeywords::s_cstrParameter''();
`dynamic initializer for 'XSLTKeywords::s_cstrPatternSeparator''();
`dynamic initializer for 'XSLTKeywords::s_cstrPerMill''();
`dynamic initializer for 'XSLTKeywords::s_cstrPercent''();
`dynamic initializer for 'XSLTKeywords::s_cstrPrefix''();
`dynamic initializer for 'XSLTKeywords::s_cstrPreserveSpace''();
`dynamic initializer for 'XSLTKeywords::s_cstrPriority''();
`dynamic initializer for 'XSLTKeywords::s_cstrProcessInstr''();
`dynamic initializer for 'XSLTKeywords::s_cstrResultPrefix''();
`dynamic initializer for 'XSLTKeywords::s_cstrScript''();
`dynamic initializer for 'XSLTKeywords::s_cstrSelect''();
`dynamic initializer for 'XSLTKeywords::s_cstrSeparator''();
`dynamic initializer for 'XSLTKeywords::s_cstrSort''();
`dynamic initializer for 'XSLTKeywords::s_cstrSortOrder''();
`dynamic initializer for 'XSLTKeywords::s_cstrStripSpace''();
`dynamic initializer for 'XSLTKeywords::s_cstrStylesheet''();
`dynamic initializer for 'XSLTKeywords::s_cstrStylesheetPrefix''();
`dynamic initializer for 'XSLTKeywords::s_cstrSystemProperty''();
`dynamic initializer for 'XSLTKeywords::s_cstrTemplate''();
`dynamic initializer for 'XSLTKeywords::s_cstrTerminate''();
`dynamic initializer for 'XSLTKeywords::s_cstrTest''();
`dynamic initializer for 'XSLTKeywords::s_cstrText''();
`dynamic initializer for 'XSLTKeywords::s_cstrTextHtml''();
`dynamic initializer for 'XSLTKeywords::s_cstrTransform''();
`dynamic initializer for 'XSLTKeywords::s_cstrUTF16''();
`dynamic initializer for 'XSLTKeywords::s_cstrUnparsedEntityUri''();
`dynamic initializer for 'XSLTKeywords::s_cstrUse''();
`dynamic initializer for 'XSLTKeywords::s_cstrUseAttrSets''();
`dynamic initializer for 'XSLTKeywords::s_cstrValue''();
`dynamic initializer for 'XSLTKeywords::s_cstrValueOf''();
`dynamic initializer for 'XSLTKeywords::s_cstrVariable''();
`dynamic initializer for 'XSLTKeywords::s_cstrVendor''();
`dynamic initializer for 'XSLTKeywords::s_cstrVendorURL''();
`dynamic initializer for 'XSLTKeywords::s_cstrVendorURLValue''();
`dynamic initializer for 'XSLTKeywords::s_cstrVendorValue''();
`dynamic initializer for 'XSLTKeywords::s_cstrVersion''();
`dynamic initializer for 'XSLTKeywords::s_cstrWhen''();
`dynamic initializer for 'XSLTKeywords::s_cstrWithParam''();
`dynamic initializer for 'XSLTKeywords::s_cstrXML''();
`dynamic initializer for 'XSLTKeywords::s_cstrZeroDigit''();
`dynamic initializer for 'XSLTKeywords::s_ki''();
`dynamic initializer for 'XSLTKeywords::s_nmCDATASection''();
`dynamic initializer for 'XSLTKeywords::s_nmCaseOrder''();
`dynamic initializer for 'XSLTKeywords::s_nmCount''();
`dynamic initializer for 'XSLTKeywords::s_nmDataType''();
`dynamic initializer for 'XSLTKeywords::s_nmDecimalSeparator''();
`dynamic initializer for 'XSLTKeywords::s_nmDigit''();
`dynamic initializer for 'XSLTKeywords::s_nmDocTypePublic''();
`dynamic initializer for 'XSLTKeywords::s_nmDocTypeSystem''();
`dynamic initializer for 'XSLTKeywords::s_nmElements''();
`dynamic initializer for 'XSLTKeywords::s_nmExclPrefixes''();
`dynamic initializer for 'XSLTKeywords::s_nmExtElems''();
`dynamic initializer for 'XSLTKeywords::s_nmFormat''();
`dynamic initializer for 'XSLTKeywords::s_nmFrom''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalExclPrefixes''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalExtElems''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalUseAttrSets''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalVendor''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalVendorURL''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalVersion''();
`dynamic initializer for 'XSLTKeywords::s_nmGlobalVersionMSXSL''();
`dynamic initializer for 'XSLTKeywords::s_nmGroupSize''();
`dynamic initializer for 'XSLTKeywords::s_nmGroupingSeparator''();
`dynamic initializer for 'XSLTKeywords::s_nmHRef''();
`dynamic initializer for 'XSLTKeywords::s_nmHTML''();
`dynamic initializer for 'XSLTKeywords::s_nmId''();
`dynamic initializer for 'XSLTKeywords::s_nmImplementsPrefix''();
`dynamic initializer for 'XSLTKeywords::s_nmIndent''();
`dynamic initializer for 'XSLTKeywords::s_nmInfinity''();
`dynamic initializer for 'XSLTKeywords::s_nmLang''();
`dynamic initializer for 'XSLTKeywords::s_nmLanguage''();
`dynamic initializer for 'XSLTKeywords::s_nmLetterVal''();
`dynamic initializer for 'XSLTKeywords::s_nmLevel''();
`dynamic initializer for 'XSLTKeywords::s_nmMatch''();
`dynamic initializer for 'XSLTKeywords::s_nmMediaType''();
`dynamic initializer for 'XSLTKeywords::s_nmMethod''();
`dynamic initializer for 'XSLTKeywords::s_nmMinusSign''();
`dynamic initializer for 'XSLTKeywords::s_nmMode''();
`dynamic initializer for 'XSLTKeywords::s_nmNaN''();
`dynamic initializer for 'XSLTKeywords::s_nmName''();
`dynamic initializer for 'XSLTKeywords::s_nmNamespace''();
`dynamic initializer for 'XSLTKeywords::s_nmNoOutputEscaping''();
`dynamic initializer for 'XSLTKeywords::s_nmOmitXMLDecl''();
`dynamic initializer for 'XSLTKeywords::s_nmPatternSeparator''();
`dynamic initializer for 'XSLTKeywords::s_nmPerMill''();
`dynamic initializer for 'XSLTKeywords::s_nmPercent''();
`dynamic initializer for 'XSLTKeywords::s_nmPriority''();
`dynamic initializer for 'XSLTKeywords::s_nmResultPrefix''();
`dynamic initializer for 'XSLTKeywords::s_nmSelect''();
`dynamic initializer for 'XSLTKeywords::s_nmSeparator''();
`dynamic initializer for 'XSLTKeywords::s_nmSortOrder''();
`dynamic initializer for 'XSLTKeywords::s_nmStylesheetPrefix''();
`dynamic initializer for 'XSLTKeywords::s_nmTerminate''();
`dynamic initializer for 'XSLTKeywords::s_nmTest''();
`dynamic initializer for 'XSLTKeywords::s_nmText''();
`dynamic initializer for 'XSLTKeywords::s_nmUse''();
`dynamic initializer for 'XSLTKeywords::s_nmUseAttrSets''();
`dynamic initializer for 'XSLTKeywords::s_nmValue''();
`dynamic initializer for 'XSLTKeywords::s_nmVersion''();
`dynamic initializer for 'XSLTKeywords::s_nmXML''();
`dynamic initializer for 'XSLTKeywords::s_nmZeroDigit''();
`dynamic initializer for '_AnyCM''();
`dynamic initializer for '_EmptyCM''();
`dynamic initializer for '_MXItem::s_rAnnotationsNameDef''();
`dynamic initializer for '_TextOnlyCM''();
`dynamic initializer for 's_cstrHash_cdata_section''();
`dynamic initializer for 's_cstrHash_comment''();
`dynamic initializer for 's_cstrHash_document''();
`dynamic initializer for 's_cstrHash_document_fragment''();
`dynamic initializer for 's_cstrHash_text''();
`dynamic initializer for 'sha2''();
`normalizeAttributeText'::`1'::filt$0();
`operator new'::`1'::catch$0();
`subStrings'::`1'::filt$0();
`vector constructor iterator'();
`vector destructor iterator'();
allocStrW();
allocStrWHR();
amsg_exit();
assign();
atexit();
bscmp();
bscmpi();
bstrCmp();
ceil();
checkCData();
compareMap();
copyHashtable();
createAttributeDeclName();
createElementDeclName();
createNameDef();
failure_tracing::record();
fastcmpi();
fastcmpni();
floor();
fmod();
getParser();
hasCommonElements();
hash();
initterm();
isValidEncName();
isValidPublicID();
isValidSystemID();
isXmlWhitespace();
lock();
mapTT();
memcmp();
memcpy();
memmove();
memset();
mywcharcmp();
newCodePageCharacterSource();
newUcs2beCharacterSource();
newUcs2leCharacterSource();
newUcs4beCharacterSource();
newUcs4leCharacterSource();
newUtf16beCharacterSource();
newUtf16leCharacterSource();
newUtf8CharacterSource();
new_UI32();
new_array_ne<char>();
new_array_ne<unsigned char>();
new_array_ne<unsigned short>();
new_array_ne_zero<_htable<DeclElement>::_hentry<DeclElement> >();
new_array_ne_zero<_htable<DeclEntity>::_hentry<DeclEntity> >();
new_array_ne_zero<_htable<DeclNotation>::_hentry<DeclNotation> >();
new_array_ne_zero<unsigned short>();
normalizeAttributeText();
normalizeNewlines();
operator new();
operator==();
pre_c_init();
preperaHashtableForMerge();
purecall();
qsortex();
release();
s_StaPrepareUrlMon();
safeRelease<DOMDocumentWrapper>();
safeRelease<Windows::Data::Xml::Dom::IXmlLoadSettings>();
shortsort();
skipWhitespace();
strGetToken();
subStrings();
succeeded();
swap();
tagCPNode::MarkDeleted();
tagCPNode::`scalar deleting destructor'();
tagCPNode::tagCPNode();
unlock();
validatePrefix();
wcscmp();
weakAssign();
weakRelease();
wil::GetFailureLogString();
wil::ProcessShutdownInProgress();
wil::ThrowResultException();
wil::details::CloseHandle();
wil::details::DebugBreak();
wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy();
wil::details::EnsureCoalescedTimer_SetTimer();
wil::details::FeatureStateManager::EnsureStateData();
wil::details::FeatureStateManager::EnsureSubscribedToProcessWideUsageFlushUnderLock();
wil::details::FeatureStateManager::EnsureSubscribedToStateChangesUnderLock();
wil::details::FeatureStateManager::QueueBackgroundSRUMUsageReporting();
wil::details::FeatureStateManager::RecordFeatureUsage();
wil::details::FeatureStateManager::SubscribeToEnabledStateChanges();
wil::details::FeatureStateManager::SubscribeToUsageFlush();
wil::details::FeatureStateManager::~FeatureStateManager();
wil::details::FreeProcessHeap();
wil::details::GetContextAndNotifyFailure();
wil::details::GetCurrentModuleName();
wil::details::GetLastErrorFail();
wil::details::GetLastErrorFailHr();
wil::details::GetModuleInformation();
wil::details::LogFailure();
wil::details::LogStringPrintf();
wil::details::NtStatusToHr();
wil::details::RecordException();
wil::details::RecordFailFast();
wil::details::RecordLog();
wil::details::RecordReturn();
wil::details::RecordSRUMFeatureUsage();
wil::details::ReleaseMutex();
wil::details::ReportFailure();
wil::details::ReportFailure_GetLastError();
wil::details::ReportFailure_GetLastErrorHr();
wil::details::ReportFailure_Hr();
wil::details::ResultStringSize();
wil::details::RtlDllShutdownInProgress();
wil::details::RtlNtStatusToDosErrorNoTeb();
wil::details::ThreadFailureCallbackHolder::GetContextAndNotifyFailure();
wil::details::ThreadFailureCallbackHolder::GetThreadContext();
wil::details::UnsubscribeProcessWideUsageFlush();
wil::details::WilApiImpl_RecordFeatureUsage();
wil::details::WilApiImpl_SubscribeFeatureStateChangeNotification();
wil::details::WilApiImpl_UnsubscribeFeatureStateChangeNotification();
wil::details::WilApi_RecordFeatureUsage();
wil::details::WilDynamicLoadRaiseFailFastException();
wil::details::WilFailFast();
wil::details::WilRaiseFailFastException();
wil::details::WriteResultString<char const * __ptr64>();
wil::details::WriteResultString<unsigned short const * __ptr64>();
wil::details::`dynamic atexit destructor for 'g_featureStateManager''();
wil::details::`dynamic atexit destructor for 'g_processLocalData''();
wil::details::`dynamic atexit destructor for 'g_threadFailureCallbacks''();
wil::details::`dynamic initializer for 'g_featureStateManager''();
wil::details::`dynamic initializer for 'g_header_init_InitializeResultHeader''();
wil::details::`dynamic initializer for 'g_header_init_InitializeStagingHeaderInternalApi''();
wil::details::`dynamic initializer for 'g_header_init_InitializeStagingSRUMFeatureReporting''();
wil::details::`dynamic initializer for 'g_header_init_WilInitialize_ResultMacros_DesktopOrSystem''();
wil::details::`dynamic initializer for 'g_processLocalData''();
wil::details::`dynamic initializer for 'g_threadFailureCallbacks''();
wil::details::in1diag3::FailFast_Unexpected();
wil::details::in1diag3::Return_GetLastError();
wil::details::in1diag3::Return_Hr();
wil::details::in1diag3::_FailFastImmediate_Unexpected();
wil::details::in1diag3::_FailFast_GetLastError();
wil::details::in1diag3::_FailFast_Unexpected();
wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION * __ptr64,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION * __ptr64),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION * __ptr64,0,std::nullptr_t>::close_reset();
wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER * __ptr64,void (__cdecl*)(_TP_TIMER * __ptr64),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER * __ptr64,0,std::nullptr_t> >::reset();
wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void * __ptr64,0,std::nullptr_t> >::reset();
wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void * __ptr64,0,std::nullptr_t> >::reset();
wil::details_abi::FeatureStateData::ProcessShutdown();
wil::details_abi::FeatureStateData::RecordFeatureUsage();
wil::details_abi::FeatureStateData::RecordUsage();
wil::details_abi::FeatureStateData::RetrieveUsageUnderLock();
wil::details_abi::GetThreadLocalDataCache();
wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>::GetShared();
wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>::~ProcessLocalStorage<wil::details_abi::ProcessLocalData>();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::Acquire();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::MakeAndInitialize();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::ProcessLocalStorageData<wil::details_abi::FeatureStateData>();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::Release();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::`scalar deleting destructor'();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::Acquire();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::MakeAndInitialize();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::Release();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::~ProcessLocalStorageData<wil::details_abi::ProcessLocalData>();
wil::details_abi::RawUsageIndex::FindInsertionPointOrIncrement();
wil::details_abi::RawUsageIndex::Iterate();
wil::details_abi::RawUsageIndex::LowerBound();
wil::details_abi::RawUsageIndex::RawUsageIndex();
wil::details_abi::RawUsageIndex::RecordUsage();
wil::details_abi::RawUsageIndex::RecordUsageInternal();
wil::details_abi::RawUsageIndex::SetBuffer();
wil::details_abi::RawUsageIndex::SkipValues();
wil::details_abi::RawUsageIndex::Swap();
wil::details_abi::RecordWnfUsageIndex();
wil::details_abi::SemaphoreValue::CreateFromValueInternal();
wil::details_abi::SemaphoreValue::Destroy();
wil::details_abi::SemaphoreValue::GetValueFromSemaphore();
wil::details_abi::SemaphoreValue::TryGetPointer();
wil::details_abi::SemaphoreValue::TryGetValueInternal();
wil::details_abi::SemaphoreValue::~SemaphoreValue();
wil::details_abi::SubscriptionList::OnSignaled();
wil::details_abi::SubscriptionList::SubscribeUnderLock();
wil::details_abi::SubscriptionList::SubscriptionList();
wil::details_abi::SubscriptionList::Unsubscribe();
wil::details_abi::SubscriptionList::~SubscriptionList();
wil::details_abi::ThreadLocalData::Clear();
wil::details_abi::ThreadLocalData::SetLastError();
wil::details_abi::ThreadLocalFailureInfo::Set();
wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder * __ptr64>::~ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder * __ptr64>();
wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0>::RecordUsage();
wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2>::RecordUsage();
wil::details_abi::UsageIndexProperty::AddToCount();
wil::details_abi::UsageIndexProperty::Compare();
wil::details_abi::UsageIndexProperty::GetSize();
wil::details_abi::UsageIndexProperty::Read();
wil::details_abi::UsageIndexProperty::UpdateCount();
wil::details_abi::UsageIndexProperty::Write();
wil::details_abi::UsageIndexes::Record();
wil::details_abi::UsageIndexes::UsageIndexes();
wil::details_abi::UsageIndexes::~UsageIndexes();
wil::details_abi::heap_buffer::ensure();
wil::details_abi::heap_buffer::push_back();
wil::details_abi::heap_buffer::reserve();
wil::last_error_context::~last_error_context();
wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>::Construct();
wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>::Destroy();
wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void * __ptr64,0,std::nullptr_t> >,wil::err_returncode_policy>::acquire();
wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void * __ptr64,0,std::nullptr_t> >,wil::err_returncode_policy>::create();
wil_details_GetNtDllModuleHandle();
wil_details_NtQueryWnfStateData();
wil_details_NtUpdateWnfStateData();
wil_details_RtlSubscribeWnfStateChangeNotification();
wil_details_StagingConfig_FireNotification();
wil_details_StagingConfig_Free();
wil_details_StagingConfig_Load();
wil_details_WriteSRUMWnfUsageBuffer();
wistd::_Func_base<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`scalar deleting destructor'();
wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Tidy();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Copy();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Delete_this();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Do_call();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Get();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Move();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`scalar deleting destructor'();
wistd::_Xbad_function_call();
wistd::function<bool __cdecl(void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int)>::~function<bool __cdecl(void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int)>();
wistd::unique_ptr<void,wil::process_heap_deleter>::operator=();
wistd::unique_ptr<void,wil::process_heap_deleter>::reset();
xarray<AttrInfo,xarray_allocator<AttrInfo> >::`scalar deleting destructor'();
xarray<AttrInfo,xarray_allocator<AttrInfo> >::append();
xarray<AttrInfo,xarray_allocator<AttrInfo> >::ensureSize();
xarray<Base * __ptr64,xarray_allocator<Base * __ptr64> >::`scalar deleting destructor'();
xarray<Base * __ptr64,xarray_allocator<Base * __ptr64> >::append();
xarray<Base * __ptr64,xarray_allocator<Base * __ptr64> >::ensureSize();
xarray<HTTPHeader,HTTPHeaders>::`scalar deleting destructor'();
xarray<HTTPHeader,HTTPHeaders>::ensureSize();
xarray<HTTPHeader,HTTPHeaders>::remove();
xarray<MinMaxNode * __ptr64,xarray_allocator<MinMaxNode * __ptr64> >::`scalar deleting destructor'();
xarray<MinMaxNode * __ptr64,xarray_allocator<MinMaxNode * __ptr64> >::ensureSize();
xarray<NamespaceMgr::Entry,NamespaceMgr::Entry>::`scalar deleting destructor'();
xarray<Node * __ptr64,xarray_allocator<Node * __ptr64> >::`scalar deleting destructor'();
xarray<Node * __ptr64,xarray_allocator<Node * __ptr64> >::ensureSize();
xarray<NodeDeclPair,xarray_allocator<NodeDeclPair> >::`scalar deleting destructor'();
xarray<NodeDeclPair,xarray_allocator<NodeDeclPair> >::ensureSize();
xarray<PosInfo,xarray_allocator<PosInfo> >::`scalar deleting destructor'();
xarray<PosInfo,xarray_allocator<PosInfo> >::append();
xarray<PosInfo,xarray_allocator<PosInfo> >::ensureSize();
xarray<Position,xarray_allocator<Position> >::`scalar deleting destructor'();
xarray<Position,xarray_allocator<Position> >::append();
xarray<Position,xarray_allocator<Position> >::ensureSize();
xarray<unsigned __int64,xarray_allocator<unsigned __int64> >::`scalar deleting destructor'();
xarray<unsigned __int64,xarray_allocator<unsigned __int64> >::append();
xarray<unsigned __int64,xarray_allocator<unsigned __int64> >::ensureSize();
xarray<xstring,xstrings>::`scalar deleting destructor'();
xarray<xstring,xstrings>::ensureSize();
xarray<xstring,xstrings>::prealloc();
xobject<Object,&IID_IUnknown>::`scalar deleting destructor'();
xobject<Object,&IID_IUnknown>::`vector deleting destructor'();
xobject<Object,&IID_IUnknown>::clone();
xobject<Object,&IID_IUnknown>::equals();
xobject<Object,&IID_IUnknown>::getClass();
xobject<Object,&IID_IUnknown>::getInternalObject();
xobject<Object,&IID_IUnknown>::hashCode();
xobject<Object,&IID_IUnknown>::toString();
xobject<Object,&IID_IUnknown>::weakAddRef();
xobject<Object,&IID_IUnknown>::weakRelease();
xstrTrim();
xstream<IStream,&IID_IStream>::Clone();
xstream<IStream,&IID_IStream>::Commit();
xstream<IStream,&IID_IStream>::CopyTo();
xstream<IStream,&IID_IStream>::LockRegion();
xstream<IStream,&IID_IStream>::QueryInterface();
xstream<IStream,&IID_IStream>::Revert();
xstream<IStream,&IID_IStream>::Seek();
xstream<IStream,&IID_IStream>::SetSize();
xstream<IStream,&IID_IStream>::Stat();
xstream<IStream,&IID_IStream>::UnlockRegion();
xstream<IStream,&IID_IStream>::Write();
xstring::xstring();
xstring::~xstring();
xstrings::copyTo();
xstrings::xstrings();
xstrings::~xstrings();
xstrlenw();
xunknown<ISequentialStream,&IID_ISequentialStream>::AddRef();
xunknown<ISequentialStream,&IID_ISequentialStream>::QueryInterface();
xunknown<ISequentialStream,&IID_ISequentialStream>::Release();
xunknown<ISequentialStream,&IID_ISequentialStream>::`scalar deleting destructor'();
xunknown<ISequentialStream,&IID_ISequentialStream>::`vector deleting destructor'();
xunknown<IStream,&IID_IStream>::AddRef();
xunknown<IStream,&IID_IStream>::QueryInterface();
xunknown<IStream,&IID_IStream>::Release();
xunknown<IStream,&IID_IStream>::`scalar deleting destructor'();
xunknown<IStream,&IID_IStream>::`vector deleting destructor'();
xunknown<IUnknown,&IID_IUnknown>::AddRef();
xunknown<IUnknown,&IID_IUnknown>::QueryInterface();
xunknown<IUnknown,&IID_IUnknown>::Release();
xunknown<IUnknown,&IID_IUnknown>::`scalar deleting destructor'();
xunknown<IUnknown,&IID_IUnknown>::`vector deleting destructor'();
xunknown<IUnknown,&IID_IUnknown>::xunknown<IUnknown,&IID_IUnknown>();
xunknown<Object,&IID_IUnknown>::AddRef();
xunknown<Object,&IID_IUnknown>::QueryInterface();
xunknown<Object,&IID_IUnknown>::Release();
xunknown<Object,&IID_IUnknown>::`scalar deleting destructor'();
xunknown<Object,&IID_IUnknown>::`vector deleting destructor'();
