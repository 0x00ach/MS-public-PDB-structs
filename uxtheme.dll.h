struct $_INTERNAL_SWITCHBRANCH_MODULE_TABLE$_extraBytes_8;
struct $_SWITCHBRANCH_CACHED_MODULE_TABLE$_extraBytes_8;
struct $_SWITCHBRANCH_MODULE_TABLE_ENTRY$_extraBytes_384;
struct $_TypeDescriptor$_extraBytes_16;
struct $_TypeDescriptor$_extraBytes_20;
struct $_TypeDescriptor$_extraBytes_24;
struct $_s__CatchableTypeArray$_extraBytes_16;
struct ACCENT_POLICY;
struct ANON_OBJECT_HEADER;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct ANON_OBJECT_HEADER_V2;
struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__;
struct API_THEMES;
struct API_THEMES_ACQUIREORADDTHEME_IN;
struct API_THEMES_ACQUIREORADDTHEME_OUT;
struct API_THEMES_GETCURRENTCHANGENUMBER_IN;
struct API_THEMES_GETCURRENTCHANGENUMBER_OUT;
struct API_THEMES_GETSTATUSFLAGS_IN;
struct API_THEMES_GETSTATUSFLAGS_OUT;
struct API_THEMES_PING_IN;
struct API_THEMES_PING_OUT;
struct API_THEMES_PROCESSASSIGNSECTION_IN;
struct API_THEMES_PROCESSASSIGNSECTION_OUT;
struct API_THEMES_PROCESSLOADTHEME_IN;
struct API_THEMES_PROCESSLOADTHEME_OUT;
struct API_THEMES_RELEASETHEME_IN;
struct API_THEMES_RELEASETHEME_OUT;
struct API_THEMES_SESSIONCREATE_IN;
struct API_THEMES_SESSIONCREATE_OUT;
struct API_THEMES_SESSIONDESTROY_IN;
struct API_THEMES_SESSIONDESTROY_OUT;
struct API_THEMES_USERLOGOFF_IN;
struct API_THEMES_USERLOGOFF_OUT;
struct API_THEMES_USERLOGON_IN;
struct API_THEMES_USERLOGON_OUT;
struct APPCLASSINFO;
struct APPCLASSLIVE;
struct APPCLASSLOCAL;
struct ARRAY_INFO;
struct ASSOCIATIONELEMENT;
struct ATL::CExpansionVector::EXPANDER;
struct ATL::_ATL_CATMAP_ENTRY;
struct ATL::_ATL_INTMAP_ENTRY;
struct ATL::_ATL_MODULE;
struct ATL::_ATL_MODULE20;
struct ATL::_ATL_MODULE_21;
struct ATL::_ATL_MODULE_30;
struct ATL::_ATL_OBJMAP_ENTRY;
struct ATL::_ATL_OBJMAP_ENTRY20;
struct ATL::_ATL_REGMAP_ENTRY;
struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::_ATL_SAFE_ALLOCA_IMPL::_CCRTAllocator>::CAtlSafeAllocBufferNode;
struct ATL::_ATL_TERMFUNC_ELEM;
struct ATL::_AtlCreateWndData;
struct AUTO_SCROLL_DATA;
struct AnimationProperty;
struct ApiData;
struct AsyncIAdviseSink;
struct AsyncIAdviseSink2;
struct AsyncIMultiQI;
struct AsyncIPipeByte;
struct AsyncIPipeDouble;
struct AsyncIPipeLong;
struct AsyncIUnknown;
struct AtlThunkData_t;
struct BATTERY_REPORTING_SCALE;
struct BEGINANIMATIONPARAMS;
struct BINDCTX_PARAM;
struct BITMAPV4HEADER;
struct BITMAPV5HEADER;
struct BREAK_ON_STATUS_BUFFER;
struct BRIGHTNESS_SENSOR_DATA;
struct BRIGHTNESS_SENSOR_DATA_CHROMATICITY;
struct BSMINFO;
struct BULK_SECURITY_TEST_DATA;
struct BUTTON_IMAGELIST;
struct CABINETSTATE;
struct CACHE_STATISTICS;
struct CALDATETIME;
struct CATEGORY_INFO;
struct CAtlSafeAllocBufferNode;
struct CDpiCache<CInternalNonclientMetrics>;
struct CDpiCache<_NCTHEMEMET>;
struct CGamma::GammaTable;
struct CGamma::GammaTable::Row;
struct CInternalNonclientMetrics;
struct CM_COLUMNINFO;
struct CM_Power_Data_s;
struct CMdiBtns::MDIBTN;
struct CONFIRMSAFETY;
struct CONFIRM_CONFLICT_ITEM;
struct CONFLICT_ITEM_METADATA;
struct COPYFILE2_EXTENDED_PARAMETERS;
struct COPYFILE2_MESSAGE;
struct CORRELATION_VECTOR;
struct CO_MTA_USAGE_COOKIE__;
struct COffScreenBuffer::_CreateNewBuffer::__l26::BMI;
struct CREATE_USN_JOURNAL_DATA;
struct CShakeWnd::_SHAKETHRESHOLD;
struct CStateIdObjectCache;
struct CThemeMenuBar::DRAWITEMMETRICS;
struct CThemeMenuPopup::DRAWITEMMETRICS;
struct CThreadObjectManager<CPaintBufferPool>::_TLSDATA;
struct CTimeZoneInformationCache::TZI_FOR_YEAR;
struct CTransformSerializer::Header;
struct CachedFeaturePropertyData;
struct CachedUsageData;
struct Completer;
struct CreateScaledDDB::__l8::BITMAPHEADER;
struct CsFrame;
struct D3DDISPLAYMODEEX;
struct D3DDISPLAYMODEFILTER;
struct DDEACK;
struct DDEADVISE;
struct DDEDATA;
struct DDELN;
struct DDEPOKE;
struct DDEUP;
struct DEFCONTEXTMENU;
struct DELEGATEITEMID;
struct DELETE_USN_JOURNAL_DATA;
struct DESKBANDINFO;
struct DETACHALL;
struct DFConstraint;
struct DFMICS;
struct DIBDATA;
struct DIBINFO;
struct DIBREUSEDATA;
struct DISK_SPACE_INFORMATION;
struct DISPLAYCONFIG_2DREGION;
struct DISPLAYCONFIG_ADAPTER_NAME;
struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO;
struct DISPLAYCONFIG_DEVICE_INFO_HEADER;
struct DISPLAYCONFIG_FUNCTIONALIZE_ARGS;
struct DISPLAYCONFIG_GET_SOURCE_INFO_INTERNAL;
struct DISPLAYCONFIG_GET_TARGET_INFO_INTERNAL;
struct DISPLAYCONFIG_GRAPHICS_RENDERING_FORMAT;
struct DISPLAYCONFIG_MODE_ENUM_RESULT;
struct DISPLAYCONFIG_MODE_INFO;
struct DISPLAYCONFIG_PATH_INFO;
struct DISPLAYCONFIG_PATH_INFO_INTERNAL;
struct DISPLAYCONFIG_PATH_SOURCE_INFO;
struct DISPLAYCONFIG_PATH_TARGET_INFO;
struct DISPLAYCONFIG_RATIONAL;
struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE;
struct DISPLAYCONFIG_SOURCE_DEVICE_NAME;
struct DISPLAYCONFIG_SOURCE_MODE;
struct DISPLAYCONFIG_STATE_TOKEN;
struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION;
struct DISPLAYCONFIG_TARGET_BASE_TYPE;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;
struct DISPLAYCONFIG_TARGET_MODE;
struct DISPLAYCONFIG_TARGET_PREFERRED_MODE;
struct DISPLAYCONFIG_TARGET_VIRTUAL_TYPE;
struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO;
struct DISPLAYCONFIG_WIRE_FORMAT;
struct DLGITEMTEMPLATE;
struct DLGITEMTEMPLATE2;
struct DLGTEMPLATE;
struct DLGTEMPLATE2;
struct DPI_AWARENESS_CONTEXT__;
struct DRAWITEMMETRICS;
struct DROPDESCRIPTION;
struct DRVCONFIGINFOEX;
struct DShellFolderViewEvents;
struct DShellNameSpaceEvents;
struct DShellWindowsEvents;
struct DWM_CAPTURE_TOKEN;
struct DWebBrowserEvents;
struct DWebBrowserEvents2;
struct ENTRYHDR;
struct EPW;
struct EXPANDER;
struct EXP_DARWIN_LINK;
struct EXP_HEADER;
struct EXP_IDLIST_FOR_VISTA_AND_ABOVE;
struct EXP_KNOWN_FOLDER;
struct EXP_PROPERTYSTORAGE;
struct EXP_SHIMLAYER;
struct EXP_SPECIAL_FOLDER;
struct EXP_SZ_LINK;
struct EXP_TRACKER;
struct EXTRASEARCH;
struct EventRegistrationToken;
struct FEATURE_ERROR;
struct FEATURE_LOGGED_TRAITS;
struct FEATURE_STATE_CHANGE_SUBSCRIPTION__;
struct FILE_ATTRIBUTES_ARRAY;
struct FILE_ID_DESCRIPTOR;
struct FIND_BY_SID_DATA;
struct FIND_BY_SID_OUTPUT;
struct FLASHWINFO;
struct FOLDERSETTINGS;
struct FRAME_MARGIN;
struct Folder;
struct Folder2;
struct Folder3;
struct FolderItem;
struct FolderItem2;
struct FolderItemVerb;
struct FolderItemVerbs;
struct FolderItems;
struct FolderItems2;
struct FolderItems3;
struct GRADIENTPART;
struct GammaTable;
struct GlobalOptionNameValue;
struct HACCEL__;
struct HBITMAP__;
struct HBRUSH__;
struct HCOLORSPACE__;
struct HCONVLIST__;
struct HCONV__;
struct HDC__;
struct HDDEDATA__;
struct HDESK__;
struct HDROP__;
struct HDRVR__;
struct HENHMETAFILE__;
struct HFONT__;
struct HGESTUREINFO__;
struct HGLRC__;
struct HHOOK__;
struct HICON__;
struct HIMCC__;
struct HIMC__;
struct HINSTANCE__;
struct HKEY__;
struct HKL__;
struct HLP;
struct HLSURF__;
struct HMENU__;
struct HMETAFILE__;
struct HMIDIIN__;
struct HMIDIOUT__;
struct HMIDISTRM__;
struct HMIDI__;
struct HMIXEROBJ__;
struct HMIXER__;
struct HMMIO__;
struct HMONITOR__;
struct HPALETTE__;
struct HPEN__;
struct HPSXA__;
struct HRAWINPUT__;
struct HRGN__;
struct HRSRC__;
struct HSPRITE__;
struct HSTRING_BUFFER__;
struct HSTRING_HEADER;
struct HSTRING__;
struct HSTR__;
struct HSYNTHETICPOINTERDEVICE__;
struct HSZ__;
struct HTASK__;
struct HTOUCHINPUT__;
struct HUMPD__;
struct HWAVEIN__;
struct HWAVEOUT__;
struct HWAVE__;
struct HWINEVENTHOOK__;
struct HWINSTA__;
struct HWND__;
struct Header;
struct IACList;
struct IACList2;
struct IActionProgress;
struct IActionProgressDialog;
struct IActivationFactory;
struct IActivationFilter;
struct IAddrExclusionControl;
struct IAddrTrackingControl;
struct IAdviseSink;
struct IAdviseSink2;
struct IAdviseSinkEx;
struct IAggregateMultipleValues;
struct IAgileObject;
struct IAgileReference;
struct IApartmentShutdown;
struct IAppActivationUIInfo;
struct IAppListItem;
struct IAppVisibility;
struct IAppVisibilityEvents;
struct IApplicationActivationManager;
struct IApplicationAssociationRegistration;
struct IApplicationDesignModeSettings;
struct IApplicationDesignModeSettings2;
struct IApplicationDestinations;
struct IApplicationDocumentLists;
struct IAssocHandler;
struct IAssocHandlerInvoker;
struct IAsyncManager;
struct IAsyncRpcChannelBuffer;
struct IAttachmentExecute;
struct IAugmentedShellFolder;
struct IAuthenticate;
struct IAuthenticateEx;
struct IAutoComplete;
struct IAutoComplete2;
struct IAxWinAmbientDispatch;
struct IAxWinHostWindow;
struct IBandSite;
struct IBindCallbackRedirect;
struct IBindCtx;
struct IBindHost;
struct IBindHttpSecurity;
struct IBindProtocol;
struct IBindStatusCallback;
struct IBindStatusCallbackEx;
struct IBinding;
struct IBlockingLock;
struct IBrowserFrameOptions;
struct ICallFactory;
struct ICancelMethodCalls;
struct ICatInformation;
struct ICatRegister;
struct ICatalogFileInfo;
struct ICategorizer;
struct ICategoryProvider;
struct IChannelHook;
struct IClassActivator;
struct IClassFactory;
struct IClassFactory2;
struct IClientSecurity;
struct ICodeInstall;
struct IColumnManager;
struct IComThreadingInfo;
struct ICommDlgBrowser;
struct ICommDlgBrowser2;
struct ICondition;
struct ICondition2;
struct IConnectionPoint;
struct IConnectionPointContainer;
struct IContactManagerInterop;
struct IContentSnippetBuilder;
struct IContextMenu;
struct IContextMenu2;
struct IContextMenu3;
struct IContextMenuCB;
struct IContextMenuSite;
struct IContinue;
struct IContinueCallback;
struct ICreateErrorInfo;
struct ICreateObject;
struct ICreateObjectEx;
struct ICreateProcessInputs;
struct ICreateTypeInfo;
struct ICreateTypeInfo2;
struct ICreateTypeLib;
struct ICreateTypeLib2;
struct ICreatingProcess;
struct ICurrentItem;
struct ICustomDestinationList;
struct ICustomDrawing;
struct IDataAdviseHolder;
struct IDataFilter;
struct IDataObject;
struct IDataObjectAsyncCapability;
struct IDataObjectProvider;
struct IDataTransferManagerInterop;
struct IDefaultExtractIconInit;
struct IDefaultFolderMenuInitialize;
struct IDelayedPropertyStoreFactory;
struct IDelegateFolder;
struct IDelegateItem;
struct IDeskBand;
struct IDeskBandInfo;
struct IDeskBar;
struct IDesktopWallpaper;
struct IDestinationStreamFactory;
struct IDirect3D9;
struct IDirect3D9Ex;
struct IDirect3D9ExOverlayExtension;
struct IDirect3DAuthenticatedChannel9;
struct IDirect3DBaseTexture9;
struct IDirect3DCryptoSession9;
struct IDirect3DCubeTexture9;
struct IDirect3DDevice9;
struct IDirect3DDevice9Ex;
struct IDirect3DDevice9Video;
struct IDirect3DIndexBuffer9;
struct IDirect3DPixelShader9;
struct IDirect3DQuery9;
struct IDirect3DResource9;
struct IDirect3DStateBlock9;
struct IDirect3DSurface9;
struct IDirect3DSwapChain9;
struct IDirect3DSwapChain9Ex;
struct IDirect3DTexture9;
struct IDirect3DVertexBuffer9;
struct IDirect3DVertexDeclaration9;
struct IDirect3DVertexShader9;
struct IDirect3DVolume9;
struct IDirect3DVolumeTexture9;
struct IDirectWriterLock;
struct IDispatch;
struct IDisplayItem;
struct IDocHostUIHandlerDispatch;
struct IDockingWindow;
struct IDockingWindowSite;
struct IDragSourceHelper;
struct IDropSource;
struct IDropSourceNotify;
struct IDropTarget;
struct IDropTargetHelper;
struct IDummyHICONIncluder;
struct IDwnCodePage;
struct IEncodingFilterFactory;
struct IEnforceGrfMode;
struct IEnterpriseDropTarget;
struct IEnumACString;
struct IEnumAssocHandlers;
struct IEnumCATEGORYINFO;
struct IEnumConnectionPoints;
struct IEnumConnections;
struct IEnumExplorerCommand;
struct IEnumExtraSearch;
struct IEnumFORMATETC;
struct IEnumFullIDList;
struct IEnumGUID;
struct IEnumIDList;
struct IEnumMoniker;
struct IEnumOLEVERB;
struct IEnumObjects;
struct IEnumOleDocumentViews;
struct IEnumOleUndoUnits;
struct IEnumResources;
struct IEnumSTATDATA;
struct IEnumSTATPROPSETSTG;
struct IEnumSTATPROPSTG;
struct IEnumSTATSTG;
struct IEnumShellItems;
struct IEnumString;
struct IEnumUICommand;
struct IEnumUnknown;
struct IEnumVARIANT;
struct IErrorInfo;
struct IErrorLog;
struct IExecuteCommand;
struct IExecuteCommandApplicationHostEnvironment;
struct IExecuteCommandHost;
struct IExplorerBrowser;
struct IExplorerBrowserEvents;
struct IExplorerCommand;
struct IExplorerCommandProvider;
struct IExplorerCommandState;
struct IExplorerPaneVisibility;
struct IExtensionList;
struct IExtensionListItem;
struct IExternalConnection;
struct IExtractIconA;
struct IExtractIconW;
struct IExtractImage;
struct IExtractImage2;
struct IFC_HIDE_INK_CURSOR_START_DATA;
struct IFC_HIDE_INK_CURSOR_STOP_DATA;
struct IFC_SUPERWET_INK_START_DATA;
struct IFC_SUPERWET_INK_STOP_DATA;
struct IFastRundown;
struct IFileDialog;
struct IFileDialogCustomize;
struct IFileDialogEvents;
struct IFileIsInUse;
struct IFileOpenDialog;
struct IFileOperation;
struct IFileOperation2;
struct IFileOperationProgressSink;
struct IFileSaveDialog;
struct IFileSearchBand;
struct IFileSyncMergeHandler;
struct IFileSystemBindData;
struct IFileSystemBindData2;
struct IFillLockBytes;
struct IFolderFilter;
struct IFolderFilterSite;
struct IFolderView;
struct IFolderView2;
struct IFolderViewOC;
struct IFolderViewSettings;
struct IFont;
struct IFontDisp;
struct IFontEventsDisp;
struct IForegroundTransfer;
struct IFormatForDisplayHelper;
struct IFrameworkInputPane;
struct IFrameworkInputPaneHandler;
struct IFunctionDiscoveryNotification;
struct IFunctionInstance;
struct IGetBindHandle;
struct IGlobalInterfaceTable;
struct IGlobalOptions;
struct IHandlerActivationHost;
struct IHandlerInfo;
struct IHandlerInfo2;
struct IHomeGroup;
struct IHttpNegotiate;
struct IHttpNegotiate2;
struct IHttpNegotiate3;
struct IHttpSecurity;
struct IIOCancelInformation;
struct IIdentityName;
struct IImageList;
struct IInitializeCommand;
struct IInitializePropertyStore;
struct IInitializeSpy;
struct IInitializeWithBindCtx;
struct IInitializeWithDelegate;
struct IInitializeWithFile;
struct IInitializeWithItem;
struct IInitializeWithItemArrayAndGPSFlags;
struct IInitializeWithPropertyFactory;
struct IInitializeWithPropertyKeys;
struct IInitializeWithPropertyStore;
struct IInitializeWithPropertyStores;
struct IInitializeWithStream;
struct IInitializeWithWindow;
struct IInputObject;
struct IInputObject2;
struct IInputObjectSite;
struct IInspectable;
struct IInternalConnection;
struct IInternalUnknown;
struct IInternet;
struct IInternetBindInfo;
struct IInternetBindInfoEx;
struct IInternetHostSecurityManager;
struct IInternetPriority;
struct IInternetProtocol;
struct IInternetProtocolEx;
struct IInternetProtocolInfo;
struct IInternetProtocolRoot;
struct IInternetProtocolSink;
struct IInternetProtocolSinkStackable;
struct IInternetSecurityManager;
struct IInternetSecurityManagerEx;
struct IInternetSecurityManagerEx2;
struct IInternetSecurityMgrSite;
struct IInternetSession;
struct IInternetThreadSwitch;
struct IInternetZoneManager;
struct IInternetZoneManagerEx;
struct IInternetZoneManagerEx2;
struct IItemNameLimits;
struct IKnownFolder;
struct IKnownFolderManager;
struct ILanguageExceptionErrorInfo;
struct ILanguageExceptionErrorInfo2;
struct ILanguageExceptionStackBackTrace;
struct ILanguageExceptionTransform;
struct ILaunchSourceAppUserModelId;
struct ILaunchSourceViewSizePreference;
struct ILaunchTargetMonitor;
struct ILaunchTargetViewSizePreference;
struct ILaunchUIContext;
struct ILaunchUIContextProvider;
struct ILayoutStorage;
struct ILockBytes;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
struct IMAGE_COR20_HEADER;
struct IMCLR_DERIVATION_RULE;
struct IMCLR_HUE_PROPERTY_VARIANCE;
struct IMCLR_RANGE_RULE;
struct IMMERSIVE_COLOR_NAMED_TYPES;
struct IMMERSIVE_COLOR_PREFERENCE;
struct IMMERSIVE_COLOR_XAML_INFO;
struct IMPORT_OBJECT_HEADER;
struct IMalloc;
struct IMallocSpy;
struct IMarshal;
struct IMarshal2;
struct IMarshalingStream;
struct IMenuBand;
struct IMenuPopup;
struct IMessageFilter;
struct IMnemonics;
struct IModalWindow;
struct IMoniker;
struct IMonikerProp;
struct IMultiQI;
struct IMultipleValues;
struct INERTIA_INFO;
struct INERTIA_REGION;
struct INPUT_SPACE;
struct INPUT_SPACE_PAYLOAD;
struct INPUT_SPACE_REGION;
struct INPUT_SPACE_REGION_DISPLAY;
struct INTERNALTHEMEENUM;
struct INameSpaceTreeControl;
struct INameSpaceTreeControlFolderCapabilities;
struct INamedPropertyBag;
struct INamedPropertyStore;
struct INamespaceWalk;
struct INamespaceWalkCB;
struct INamespaceWalkCB2;
struct INewMenuClient;
struct INewWDEvents;
struct INewWindowManager;
struct INoMarshal;
struct IObjMgr;
struct IObjectArray;
struct IObjectCollection;
struct IObjectProvider;
struct IObjectWithAppUserModelID;
struct IObjectWithBackReferences;
struct IObjectWithCancelEvent;
struct IObjectWithClassIdentity;
struct IObjectWithFolderEnumMode;
struct IObjectWithProgID;
struct IObjectWithPropertyKey;
struct IObjectWithSelection;
struct IObjectWithSite;
struct IOleAdviseHolder;
struct IOleCache;
struct IOleCache2;
struct IOleCacheControl;
struct IOleClientSite;
struct IOleCommandTarget;
struct IOleContainer;
struct IOleControl;
struct IOleControlSite;
struct IOleDocument;
struct IOleDocumentSite;
struct IOleDocumentView;
struct IOleInPlaceActiveObject;
struct IOleInPlaceFrame;
struct IOleInPlaceObject;
struct IOleInPlaceObjectWindowless;
struct IOleInPlaceSite;
struct IOleInPlaceSiteEx;
struct IOleInPlaceSiteWindowless;
struct IOleInPlaceUIWindow;
struct IOleItemContainer;
struct IOleLink;
struct IOleObject;
struct IOleParentUndoUnit;
struct IOleUndoManager;
struct IOleUndoUnit;
struct IOleWindow;
struct IOpenControlPanel;
struct IOpenSearchSource;
struct IOperationsProgressDialog;
struct IOplockStorage;
struct IOrderList;
struct IOrderList2;
struct IPSFactoryBuffer;
struct IPackageDebugSettings;
struct IPackageDebugSettings2;
struct IPackageExecutionStateChangeNotification;
struct IPaintBuffer;
struct IParentAndItem;
struct IParseAndCreateItem;
struct IParseDisplayName;
struct IPerPropertyBrowsing;
struct IPersist;
struct IPersistFile;
struct IPersistFolder;
struct IPersistFolder2;
struct IPersistFolder3;
struct IPersistIDList;
struct IPersistMemory;
struct IPersistMoniker;
struct IPersistPropertyBag;
struct IPersistPropertyBag2;
struct IPersistSerializedPropStorage;
struct IPersistSerializedPropStorage2;
struct IPersistSerializedPropStoragePriv;
struct IPersistStorage;
struct IPersistStream;
struct IPersistStreamInit;
struct IPicture;
struct IPicture2;
struct IPictureDisp;
struct IPipeByte;
struct IPipeDouble;
struct IPipeLong;
struct IPointerInactive;
struct IPreviewHandler;
struct IPreviewHandlerFrame;
struct IPreviewHandlerVisuals;
struct IPreviewItem;
struct IPrint;
struct IPrintDialogCallback;
struct IPrintDialogServices;
struct IProcessInitControl;
struct IProcessLock;
struct IProduceAggregateMultipleValues;
struct IProfferService;
struct IProgressDialog;
struct IProgressNotify;
struct IPropertyBag;
struct IPropertyBag2;
struct IPropertyChange;
struct IPropertyChangeArray;
struct IPropertyChangePriv;
struct IPropertyDescription;
struct IPropertyDescription2;
struct IPropertyDescriptionAliasInfo;
struct IPropertyDescriptionList;
struct IPropertyDescriptionListInit;
struct IPropertyDescriptionPriv;
struct IPropertyDescriptionRelatedPropertyInfo;
struct IPropertyDescriptionSearchInfo;
struct IPropertyDescriptionSearchInfoPriv;
struct IPropertyEnumType;
struct IPropertyEnumType2;
struct IPropertyEnumTypeList;
struct IPropertyEnumTypePriv;
struct IPropertyInfoProvider;
struct IPropertyKeyStore;
struct IPropertyNotifySink;
struct IPropertyPage;
struct IPropertyPage2;
struct IPropertyPageSite;
struct IPropertyProvider;
struct IPropertySetStorage;
struct IPropertyStorage;
struct IPropertyStore;
struct IPropertyStoreCache;
struct IPropertyStoreCapabilities;
struct IPropertyStoreContainer;
struct IPropertyStoreFactory;
struct IPropertyStoreFlagAccess;
struct IPropertyStoreInit;
struct IPropertyStorePriv;
struct IPropertyStoreWithDiagnostic;
struct IPropertySystem;
struct IPropertySystemChangeNotify;
struct IPropertySystemPriv;
struct IPropertyUI;
struct IPropertyValue;
struct IProtectFocus;
struct IProtectedModeMenuServices;
struct IProvideClassInfo;
struct IProvideClassInfo2;
struct IProvideMultipleClassInfo;
struct IQueryAssociations;
struct IQueryContinue;
struct IQueryInfo;
struct IQuickActivate;
struct IROTData;
struct IRecordInfo;
struct IRegTreeItem;
struct IRegistrar;
struct IRelatedItem;
struct IReleaseMarshalBuffers;
struct IRemoteComputer;
struct IResolveShellLink;
struct IRestrict;
struct IRestrictedErrorInfo;
struct IRichChunk;
struct IRootStorage;
struct IRpcChannelBuffer;
struct IRpcChannelBuffer2;
struct IRpcChannelBuffer3;
struct IRpcHelper;
struct IRpcOptions;
struct IRpcProxyBuffer;
struct IRpcStubBuffer;
struct IRpcSyntaxNegotiate;
struct IRunnableObject;
struct IRunnableTask;
struct IRunningObjectTable;
struct ISchemaCache;
struct ISchemaView;
struct IScriptErrorList;
struct ISearchContext;
struct ISearchFolderItemFactory;
struct ISemanticNamedEntity;
struct ISemanticType;
struct ISequentialStream;
struct IServerSecurity;
struct IServiceProvider;
struct ISetPropertyDescription;
struct ISetPropertyDescriptionList;
struct ISharingConfigurationManager;
struct IShellBrowser;
struct IShellChangeNotify;
struct IShellDetails;
struct IShellDispatch;
struct IShellDispatch2;
struct IShellDispatch3;
struct IShellDispatch4;
struct IShellDispatch5;
struct IShellDispatch6;
struct IShellExecuteHookA;
struct IShellExecuteHookW;
struct IShellExtInit;
struct IShellFavoritesNameSpace;
struct IShellFolder;
struct IShellFolder2;
struct IShellFolderView;
struct IShellFolderViewCB;
struct IShellFolderViewDual;
struct IShellFolderViewDual2;
struct IShellFolderViewDual3;
struct IShellIcon;
struct IShellIconOverlay;
struct IShellIconOverlayIdentifier;
struct IShellIconOverlayManager;
struct IShellItem;
struct IShellItem2;
struct IShellItemArray;
struct IShellItemFilter;
struct IShellItemImageFactory;
struct IShellItemResources;
struct IShellLibrary;
struct IShellLinkA;
struct IShellLinkDataList;
struct IShellLinkDual;
struct IShellLinkDual2;
struct IShellLinkW;
struct IShellMenu;
struct IShellMenuCallback;
struct IShellNameSpace;
struct IShellPropSheetExt;
struct IShellTaskScheduler;
struct IShellUIHelper;
struct IShellUIHelper2;
struct IShellUIHelper3;
struct IShellUIHelper4;
struct IShellUIHelper5;
struct IShellUIHelper6;
struct IShellUIHelper7;
struct IShellUIHelper8;
struct IShellUIHelper9;
struct IShellView;
struct IShellView2;
struct IShellWindows;
struct ISimpleFrameSite;
struct ISimplePropertyChangeInit;
struct ISoftDistExt;
struct ISpecifyPropertyPages;
struct IStdMarshalInfo;
struct IStorage;
struct IStream;
struct ISupportErrorInfo;
struct ISurrogate;
struct ISurrogateService;
struct ISuspensionDependencyManager;
struct ISynchronize;
struct ISynchronizeContainer;
struct ISynchronizeEvent;
struct ISynchronizeHandle;
struct ISynchronizeMutex;
struct ITaskbarList;
struct ITaskbarList2;
struct ITaskbarList3;
struct ITaskbarList4;
struct IThumbnailExtractor;
struct IThumbnailHandlerFactory;
struct ITimeAndNoticeControl;
struct ITransferAdviseSink;
struct ITransferDestination;
struct ITransferMediumItem;
struct ITransferSource;
struct ITypeChangeEvents;
struct ITypeComp;
struct ITypeFactory;
struct ITypeInfo;
struct ITypeInfo2;
struct ITypeLib;
struct ITypeLib2;
struct ITypeLibRegistration;
struct ITypeLibRegistrationReader;
struct ITypeMarshal;
struct IUICommand;
struct IUIElement;
struct IURLSearchHook;
struct IURLSearchHook2;
struct IUnknown;
struct IUpdateIDList;
struct IUri;
struct IUriBuilder;
struct IUriBuilderFactory;
struct IUriContainer;
struct IUrlMon;
struct IUserNotification;
struct IViewObject;
struct IViewObject2;
struct IViewObjectEx;
struct IViewStateIdentityItem;
struct IVirtualDesktopManager;
struct IWICBitmap;
struct IWICBitmapClipper;
struct IWICBitmapCodecInfo;
struct IWICBitmapDecoder;
struct IWICBitmapDecoderInfo;
struct IWICBitmapEncoder;
struct IWICBitmapEncoderInfo;
struct IWICBitmapFlipRotator;
struct IWICBitmapFrameDecode;
struct IWICBitmapFrameEncode;
struct IWICBitmapLock;
struct IWICBitmapScaler;
struct IWICBitmapSource;
struct IWICColorContext;
struct IWICColorTransform;
struct IWICComponentInfo;
struct IWICFastMetadataEncoder;
struct IWICFormatConverter;
struct IWICImagingFactory;
struct IWICMetadataQueryReader;
struct IWICMetadataQueryWriter;
struct IWICPalette;
struct IWICStream;
struct IWaitMultiple;
struct IWeakReference;
struct IWeakReferenceSource;
struct IWebBrowser;
struct IWebBrowser2;
struct IWebBrowserApp;
struct IWebWizardHost;
struct IWebWizardHost2;
struct IWinInetCacheHints;
struct IWinInetCacheHints2;
struct IWinInetFileStream;
struct IWinInetHttpInfo;
struct IWinInetHttpTimeouts;
struct IWinInetInfo;
struct IWindowForBindingUI;
struct IWrappedProtocol;
struct IXMLAttribute;
struct IXMLDOMAttribute;
struct IXMLDOMCDATASection;
struct IXMLDOMCharacterData;
struct IXMLDOMComment;
struct IXMLDOMDocument;
struct IXMLDOMDocumentFragment;
struct IXMLDOMDocumentType;
struct IXMLDOMElement;
struct IXMLDOMEntity;
struct IXMLDOMEntityReference;
struct IXMLDOMImplementation;
struct IXMLDOMNamedNodeMap;
struct IXMLDOMNode;
struct IXMLDOMNodeList;
struct IXMLDOMNotation;
struct IXMLDOMParseError;
struct IXMLDOMProcessingInstruction;
struct IXMLDOMText;
struct IXMLDSOControl;
struct IXMLDocument;
struct IXMLDocument2;
struct IXMLElement;
struct IXMLElement2;
struct IXMLElementCollection;
struct IXMLError;
struct IXMLHttpRequest;
struct IXTLRuntime;
struct IZoneIdentifier;
struct IZoneIdentifier2;
struct IZoomEvents;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3;
struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2;
struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION;
struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2;
struct JUMPTOPARENTHDR;
struct KERB_CRYPTO_KEY;
struct KERB_CRYPTO_KEY32;
struct KEY_PID_ARRAY;
struct KNOWNFOLDER_DEFINITION;
struct LCPOLICYINFOGENERIC;
struct LCPOLICYINFO_V1A;
struct LCPOLICYINFO_V1W;
struct LIST_ENTRY32;
struct LIST_ENTRY64;
struct LOADTHEMEFORTESTPARAMS;
struct LOADTHEMEMETRICS;
struct LVINSERTMARK;
struct MAPTOIMAGELISTINDEXPARAMS;
struct MARK_HANDLE_INFO;
struct MARK_HANDLE_INFO32;
struct MCHITTESTINFO;
struct MDIBTN;
struct MEM_EXTENDED_PARAMETER;
struct MENUITEMTEMPLATE;
struct MENUITEMTEMPLATE2;
struct MENUITEMTEMPLATEHEADER;
struct MFT_ENUM_DATA_V0;
struct MFT_ENUM_DATA_V1;
struct MOVE_FILE_DATA;
struct MOVE_FILE_RECORD_DATA;
struct Microsoft::WRL::CloakedIid<IMarshal>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,1>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1>;
struct Microsoft::WRL::Details::AreAllNil<Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::BoolStruct;
struct Microsoft::WRL::Details::CreatorMap;
struct Microsoft::WRL::Details::EnableIf<1,void *>;
struct Microsoft::WRL::Details::FactoryCache;
struct Microsoft::WRL::Details::Identity<IUnknown * &>;
struct Microsoft::WRL::Details::ImplementsBase;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>;
struct Microsoft::WRL::Details::IsSame<IAgileReference,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IAgileReference,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IInspectable,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IInspectable,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IMarshal,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IMarshal,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IUnknown,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IUnknown,IUnknown>;
struct Microsoft::WRL::Details::IsSame<IWeakReference,IInspectable>;
struct Microsoft::WRL::Details::IsSame<IWeakReference,IUnknown>;
struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IInspectable>;
struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IUnknown>;
struct Microsoft::WRL::Details::MarkImplements<IMarshal,0>;
struct Microsoft::WRL::Details::MarkImplements<IWeakReference,0>;
struct Microsoft::WRL::Details::MarkImplements<Microsoft::WRL::CloakedIid<IMarshal>,0>;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IActivationFactory,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::FtmBase,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,WinRTAnimationBase,0,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IReference<float>,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IAnimationDescription,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IScaleAnimation,1,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>;
struct Microsoft::WRL::ErrorHelper<0>;
struct Microsoft::WRL::ErrorHelper<16>;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Microsoft::WRL::RuntimeClassFlags<13>;
struct Microsoft::WRL::RuntimeClassFlags<1>;
struct Microsoft::WRL::RuntimeClassFlags<2>;
struct Microsoft::WRL::RuntimeClassFlags<3>;
struct Microsoft::WRL::RuntimeClassFlags<4>;
struct Microsoft::WRL::RuntimeClassFlags<5>;
struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits;
struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits;
struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits;
struct NCADORNMENT_INFO;
struct NCRYPT_ALLOC_PARA;
struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;
struct NCTRANSPARENCY;
struct NCryptKeyName;
struct NCryptProviderName;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
struct NDR_POINTER_QUEUE_STATE;
struct NET_ADDRESS_INFO_;
struct NINEGRIDPOS;
struct NMCBEDRAGBEGINA;
struct NMCBEDRAGBEGINW;
struct NMCBEENDEDITA;
struct NMCBEENDEDITW;
struct NMCOMBOBOXEXA;
struct NMCOMBOBOXEXW;
struct NMPGCALCSIZE;
struct NMPGSCROLL;
struct NMSEARCHWEB;
struct NMTBDISPINFOA;
struct NMTBDISPINFOW;
struct NONSHARABLEDATAHDR;
struct NOTIFY_USER_POWER_SETTING;
struct NTFS_EXTENDED_VOLUME_DATA;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
struct NTFS_VOLUME_DATA_BUFFER;
struct NT_CONSOLE_PROPS;
struct NT_FE_CONSOLE_PROPS;
struct NUMPARSE;
struct Node;
struct OPENCARDNAMEA;
struct OPENCARDNAMEW;
struct OPENCARDNAME_EXA;
struct OPENCARDNAME_EXW;
struct OPENCARD_SEARCH_CRITERIAA;
struct OPENCARD_SEARCH_CRITERIAW;
struct ORDERITEM;
struct PARSETABLE;
struct PARTJUMPTABLEHDR;
struct PARTOBJHDR;
struct PART_STATE_INDEX;
struct PBRANGE;
struct PFNS;
struct PFNSUXCTRL::PFNS;
struct POWERBROADCAST_SETTING;
struct POWER_ACTION_POLICY;
struct POWER_STATE_HANDLER;
struct POWER_STATE_NOTIFY_HANDLER;
struct PPM_IDLESTATE_EVENT;
struct PPM_IDLE_ACCOUNTING;
struct PPM_IDLE_ACCOUNTING_EX;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_IDLE_STATE_ACCOUNTING_EX;
struct PPM_IDLE_STATE_BUCKET_EX;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct PPM_PERFSTATE_EVENT;
struct PPM_THERMALCHANGE_EVENT;
struct PPM_THERMAL_POLICY_EVENT;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES;
struct PPM_WMI_IDLE_STATES_EX;
struct PPM_WMI_LEGACY_PERFSTATE;
struct PPM_WMI_PERF_STATE;
struct PPM_WMI_PERF_STATES;
struct PPM_WMI_PERF_STATES_EX;
struct PREVIEWHANDLERFRAMEINFO;
struct PRINT_EXECUTION_DATA;
struct PROCESSOR_IDLESTATE_INFO;
struct PROCESSOR_IDLESTATE_POLICY;
struct PROCESSOR_IDLE_TIMES;
struct PROCESSOR_PERFSTATE_POLICY;
struct PROCESS_PROTECTION_LEVEL_INFORMATION;
struct PROCESS_UICONTEXT_INFORMATION;
struct PROPERTYMAP;
struct PROPERTY_MAP;
struct PROPPRG;
struct PVLCustomTimingFunction;
struct PVLCustomTransform;
struct PrintNamedProperty;
struct PrintPropertiesCollection;
struct PrintPropertyValue;
struct PropertyFieldTable;
struct QITAB;
struct QUERYNAMESPACEINFO;
struct READER_SEL_REQUEST;
struct READER_SEL_RESPONSE;
struct READ_FILE_USN_DATA;
struct READ_USN_JOURNAL_DATA_V0;
struct READ_USN_JOURNAL_DATA_V1;
struct REFS_VOLUME_DATA_BUFFER;
struct REGIONLISTHDR;
struct RENDER_OBJ_ENTRY;
struct RESOURCECOMMENTTABLE;
struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER;
struct RETRIEVAL_POINTERS_BUFFER;
struct RETRIEVAL_POINTER_COUNT;
struct REUSEDATAHDR;
struct RGBA;
struct ROOTSECTION;
struct RPC_CLIENT_INFORMATION1;
struct RPC_DISPATCH_TABLE;
struct RPC_ENDPOINT_TEMPLATEA;
struct RPC_ENDPOINT_TEMPLATEW;
struct RPC_IF_ID_VECTOR;
struct RPC_IMPORT_CONTEXT_P;
struct RPC_INTERFACE_TEMPLATEA;
struct RPC_INTERFACE_TEMPLATEW;
struct RPC_STATS_VECTOR;
struct RTLWOW64_CROSSPROCESS_WORK_HEAD;
struct RTLWOW64_CROSSPROCESS_WORK_ITEM;
struct RTL_ACE_DATA;
struct RefAndObject;
struct Row;
struct SCARD_READERSTATEA;
struct SCARD_READERSTATEW;
struct SC_HANDLE__;
struct SChannelHookCallInfo;
struct SERVICE_STATUS_HANDLE__;
struct SERVICE_TRIGGER_CUSTOM_STATE_ID;
struct SET_POWER_SETTING_VALUE;
struct SFVM_DEFERRED_VIEW_SETTINGS;
struct SFVM_WEBVIEW_TASKSECTION_DATA;
struct SHAKETHRESHOLD;
struct SHARDAPPIDINFO;
struct SHARDAPPIDINFOIDLIST;
struct SHARDAPPIDINFOLINK;
struct SHCSCHANGENOTIFYSTRUCT;
struct SHDRAGIMAGE;
struct SHELLFLAGSTATE;
struct SHELLHOOKINFO;
struct SHELLSTATEA;
struct SHELLSTATEW;
struct SHELL_ITEM_RESOURCE;
struct SHELL_LINK_DATA;
struct SHFOLDERCUSTOMSETTINGS;
struct SHINVOKEPARAMS;
struct SHRESTRICTIONITEMS;
struct SIGNATURE;
struct SIGNATURE_BLOB_TAIL;
struct SORTCOLUMN;
struct STARTING_LCN_INPUT_BUFFER;
struct STARTING_LCN_INPUT_BUFFER_EX;
struct STARTING_VCN_INPUT_BUFFER;
struct STATEJUMPTABLEHDR;
struct STORAGE_BREAK_RESERVATION_REQUEST;
struct SYMBOLTOKEN;
struct SYMBOL_PRIMITIVE;
struct SYSTEM_BATTERY_STATE;
struct SYSTEM_POWER_CAPABILITIES;
struct SYSTEM_POWER_LEVEL;
struct SaturationModifiersForHues;
struct StaticHandle;
struct Subscription;
struct SymTypeConvertTable;
struct TARGETMAPPING;
struct TA_CUBIC_BEZIER;
struct TA_TIMINGFUNCTION;
struct TA_TRANSFORM;
struct TA_TRANSFORM_2D;
struct TA_TRANSFORM_3D;
struct TA_TRANSFORM_CLIP;
struct TA_TRANSFORM_OPACITY;
struct TBBUTTONINFOA;
struct TBBUTTONINFOW;
struct TBINSERTMARK;
struct TBMETRICS;
struct TBREPLACEBITMAP;
struct THEMEHDR;
struct THEMEMETRICS;
struct THEMEMETRICS_THREADINFO;
struct THEMESAPI_PORT_MESSAGE;
struct THEME_FILE_ENTRY;
struct THUMBBUTTON;
struct TMBITMAPHEADER;
struct TMERRINFO;
struct TRUESTRETCHINFO;
struct TZI_FOR_YEAR;
struct ThemeLogging::StaticHandle;
struct ThemeMapDpiKey<HMENU__ *>;
struct ThemeMapDpiKey<HWND__ *>;
struct ThemeSettingsLogging::StaticHandle;
struct ThreadData;
struct UDATE;
struct USN_JOURNAL_DATA_V0;
struct USN_JOURNAL_DATA_V1;
struct USN_JOURNAL_DATA_V2;
struct USN_RANGE_TRACK_OUTPUT;
struct USN_RECORD_COMMON_HEADER;
struct USN_RECORD_EXTENT;
struct USN_RECORD_V2;
struct USN_RECORD_V3;
struct USN_RECORD_V4;
struct USN_TRACK_MODIFIED_RANGES;
struct UXTHEMEHOOKS;
struct UxThemeTelemetry::StaticHandle;
struct VOLUME_BITMAP_BUFFER;
struct VSCOLORPROPENTRY;
struct VSDOCPROPENTRY;
struct VisualPoint;
struct WICBitmapPattern;
struct WICRect;
struct WIN32_MEMORY_REGION_INFORMATION;
struct WINDOWCOMPOSITIONINFO;
struct WINDOW_GROUP_ID;
struct WINSTATIONREMOTEADDRESS;
struct WSAData;
struct Windows::Foundation::Collections::IIterable<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterable<IInspectable *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::IIterable<_GUID>;
struct Windows::Foundation::Collections::IIterable<__int64>;
struct Windows::Foundation::Collections::IIterable<bool>;
struct Windows::Foundation::Collections::IIterable<double>;
struct Windows::Foundation::Collections::IIterable<float>;
struct Windows::Foundation::Collections::IIterable<int>;
struct Windows::Foundation::Collections::IIterable<short>;
struct Windows::Foundation::Collections::IIterable<unsigned __int64>;
struct Windows::Foundation::Collections::IIterable<unsigned char>;
struct Windows::Foundation::Collections::IIterable<unsigned int>;
struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterable_impl<IInspectable *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::IIterable_impl<_GUID>;
struct Windows::Foundation::Collections::IIterable_impl<__int64>;
struct Windows::Foundation::Collections::IIterable_impl<double>;
struct Windows::Foundation::Collections::IIterable_impl<float>;
struct Windows::Foundation::Collections::IIterable_impl<int>;
struct Windows::Foundation::Collections::IIterable_impl<short>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned char>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned int>;
struct Windows::Foundation::Collections::IIterator<HSTRING__ *>;
struct Windows::Foundation::Collections::IIterator<IInspectable *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::IIterator<_GUID>;
struct Windows::Foundation::Collections::IIterator<__int64>;
struct Windows::Foundation::Collections::IIterator<bool>;
struct Windows::Foundation::Collections::IIterator<double>;
struct Windows::Foundation::Collections::IIterator<float>;
struct Windows::Foundation::Collections::IIterator<int>;
struct Windows::Foundation::Collections::IIterator<short>;
struct Windows::Foundation::Collections::IIterator<unsigned __int64>;
struct Windows::Foundation::Collections::IIterator<unsigned char>;
struct Windows::Foundation::Collections::IIterator<unsigned int>;
struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
struct Windows::Foundation::Collections::IIterator_impl<_GUID,1>;
struct Windows::Foundation::Collections::IIterator_impl<__int64,1>;
struct Windows::Foundation::Collections::IIterator_impl<double,1>;
struct Windows::Foundation::Collections::IIterator_impl<float,1>;
struct Windows::Foundation::Collections::IIterator_impl<int,1>;
struct Windows::Foundation::Collections::IIterator_impl<short,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1>;
struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,double>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,float>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMap<_GUID,bool>;
struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<__int64,__int64>;
struct Windows::Foundation::Collections::IMap<__int64,double>;
struct Windows::Foundation::Collections::IMap<__int64,float>;
struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID>;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>;
struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<_GUID,bool>;
struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<__int64,__int64>;
struct Windows::Foundation::Collections::IMapView<__int64,double>;
struct Windows::Foundation::Collections::IMapView<__int64,float>;
struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,double>;
struct Windows::Foundation::Collections::IMapView_impl<__int64,float>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IMap_impl<__int64,double>;
struct Windows::Foundation::Collections::IMap_impl<__int64,float>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableVector<IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector<float>;
struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector_impl<float>;
struct Windows::Foundation::Collections::IPropertySet;
struct Windows::Foundation::Collections::IVector<HSTRING__ *>;
struct Windows::Foundation::Collections::IVector<IInspectable *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IVector<_GUID>;
struct Windows::Foundation::Collections::IVector<__int64>;
struct Windows::Foundation::Collections::IVector<bool>;
struct Windows::Foundation::Collections::IVector<double>;
struct Windows::Foundation::Collections::IVector<float>;
struct Windows::Foundation::Collections::IVector<int>;
struct Windows::Foundation::Collections::IVector<short>;
struct Windows::Foundation::Collections::IVector<unsigned __int64>;
struct Windows::Foundation::Collections::IVector<unsigned char>;
struct Windows::Foundation::Collections::IVector<unsigned int>;
struct Windows::Foundation::Collections::IVectorChangedEventArgs;
struct Windows::Foundation::Collections::IVectorView<HSTRING__ *>;
struct Windows::Foundation::Collections::IVectorView<IInspectable *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::IVectorView<_GUID>;
struct Windows::Foundation::Collections::IVectorView<__int64>;
struct Windows::Foundation::Collections::IVectorView<bool>;
struct Windows::Foundation::Collections::IVectorView<double>;
struct Windows::Foundation::Collections::IVectorView<float>;
struct Windows::Foundation::Collections::IVectorView<int>;
struct Windows::Foundation::Collections::IVectorView<short>;
struct Windows::Foundation::Collections::IVectorView<unsigned __int64>;
struct Windows::Foundation::Collections::IVectorView<unsigned char>;
struct Windows::Foundation::Collections::IVectorView<unsigned int>;
struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1>;
struct Windows::Foundation::Collections::IVectorView_impl<__int64,1>;
struct Windows::Foundation::Collections::IVectorView_impl<double,1>;
struct Windows::Foundation::Collections::IVectorView_impl<float,1>;
struct Windows::Foundation::Collections::IVectorView_impl<int,1>;
struct Windows::Foundation::Collections::IVectorView_impl<short,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>;
struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>;
struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>;
struct Windows::Foundation::Collections::IVector_impl<_GUID,1>;
struct Windows::Foundation::Collections::IVector_impl<__int64,1>;
struct Windows::Foundation::Collections::IVector_impl<double,1>;
struct Windows::Foundation::Collections::IVector_impl<float,1>;
struct Windows::Foundation::Collections::IVector_impl<int,1>;
struct Windows::Foundation::Collections::IVector_impl<short,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned char,1>;
struct Windows::Foundation::Collections::IVector_impl<unsigned int,1>;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<float>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>;
struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *>;
struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::is_foundation_struct<_GUID>;
struct Windows::Foundation::Collections::is_foundation_struct<__int64>;
struct Windows::Foundation::Collections::is_foundation_struct<double>;
struct Windows::Foundation::Collections::is_foundation_struct<float>;
struct Windows::Foundation::Collections::is_foundation_struct<int>;
struct Windows::Foundation::Collections::is_foundation_struct<short>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned char>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned int>;
struct Windows::Foundation::Collections::is_pointer<HSTRING__ *>;
struct Windows::Foundation::Collections::is_pointer<IInspectable *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::is_pointer<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::is_pointer<_GUID>;
struct Windows::Foundation::Collections::is_pointer<__int64>;
struct Windows::Foundation::Collections::is_pointer<double>;
struct Windows::Foundation::Collections::is_pointer<float>;
struct Windows::Foundation::Collections::is_pointer<int>;
struct Windows::Foundation::Collections::is_pointer<short>;
struct Windows::Foundation::Collections::is_pointer<unsigned __int64>;
struct Windows::Foundation::Collections::is_pointer<unsigned char>;
struct Windows::Foundation::Collections::is_pointer<unsigned int>;
struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *>;
struct Windows::Foundation::Collections::supports_cleanup<IInspectable *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
struct Windows::Foundation::Collections::supports_cleanup<_GUID>;
struct Windows::Foundation::Collections::supports_cleanup<__int64>;
struct Windows::Foundation::Collections::supports_cleanup<double>;
struct Windows::Foundation::Collections::supports_cleanup<float>;
struct Windows::Foundation::Collections::supports_cleanup<int>;
struct Windows::Foundation::Collections::supports_cleanup<short>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned char>;
struct Windows::Foundation::Collections::supports_cleanup<unsigned int>;
struct Windows::Foundation::DateTime;
struct Windows::Foundation::IAsyncActionProgressHandler<double>;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<double>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgress<double>;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<double>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>;
struct Windows::Foundation::IAsyncOperation<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation<IInspectable *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperation<_GUID>;
struct Windows::Foundation::IAsyncOperation<__int64>;
struct Windows::Foundation::IAsyncOperation<bool>;
struct Windows::Foundation::IAsyncOperation<int>;
struct Windows::Foundation::IAsyncOperation<unsigned __int64>;
struct Windows::Foundation::IAsyncOperation<unsigned int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<bool>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<int,int>;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation_impl<IInspectable *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IAsyncOperation_impl<_GUID>;
struct Windows::Foundation::IAsyncOperation_impl<__int64>;
struct Windows::Foundation::IAsyncOperation_impl<int>;
struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64>;
struct Windows::Foundation::IAsyncOperation_impl<unsigned int>;
struct Windows::Foundation::IEventHandler<HSTRING__ *>;
struct Windows::Foundation::IEventHandler<IInspectable *>;
struct Windows::Foundation::IEventHandler<bool>;
struct Windows::Foundation::IEventHandler_impl<HSTRING__ *>;
struct Windows::Foundation::IEventHandler_impl<IInspectable *>;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IExtensionRegistration;
struct Windows::Foundation::IMemoryBufferReference;
struct Windows::Foundation::IPropertyValue;
struct Windows::Foundation::IReference<HSTRING__ *>;
struct Windows::Foundation::IReference<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReference<Windows::Foundation::Point>;
struct Windows::Foundation::IReference<Windows::Foundation::Rect>;
struct Windows::Foundation::IReference<Windows::Foundation::Size>;
struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReference<_GUID>;
struct Windows::Foundation::IReference<__int64>;
struct Windows::Foundation::IReference<bool>;
struct Windows::Foundation::IReference<double>;
struct Windows::Foundation::IReference<float>;
struct Windows::Foundation::IReference<int>;
struct Windows::Foundation::IReference<short>;
struct Windows::Foundation::IReference<unsigned __int64>;
struct Windows::Foundation::IReference<unsigned char>;
struct Windows::Foundation::IReference<unsigned int>;
struct Windows::Foundation::IReferenceArray<HSTRING__ *>;
struct Windows::Foundation::IReferenceArray<IInspectable *>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size>;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReferenceArray<_GUID>;
struct Windows::Foundation::IReferenceArray<__int64>;
struct Windows::Foundation::IReferenceArray<bool>;
struct Windows::Foundation::IReferenceArray<double>;
struct Windows::Foundation::IReferenceArray<float>;
struct Windows::Foundation::IReferenceArray<int>;
struct Windows::Foundation::IReferenceArray<short>;
struct Windows::Foundation::IReferenceArray<unsigned __int64>;
struct Windows::Foundation::IReferenceArray<unsigned char>;
struct Windows::Foundation::IReferenceArray<unsigned int>;
struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *>;
struct Windows::Foundation::IReferenceArray_impl<IInspectable *>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReferenceArray_impl<_GUID>;
struct Windows::Foundation::IReferenceArray_impl<__int64>;
struct Windows::Foundation::IReferenceArray_impl<double>;
struct Windows::Foundation::IReferenceArray_impl<float>;
struct Windows::Foundation::IReferenceArray_impl<int>;
struct Windows::Foundation::IReferenceArray_impl<short>;
struct Windows::Foundation::IReferenceArray_impl<unsigned __int64>;
struct Windows::Foundation::IReferenceArray_impl<unsigned char>;
struct Windows::Foundation::IReferenceArray_impl<unsigned int>;
struct Windows::Foundation::IReference_impl<HSTRING__ *>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Point>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Size>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::IReference_impl<_GUID>;
struct Windows::Foundation::IReference_impl<__int64>;
struct Windows::Foundation::IReference_impl<double>;
struct Windows::Foundation::IReference_impl<float>;
struct Windows::Foundation::IReference_impl<int>;
struct Windows::Foundation::IReference_impl<short>;
struct Windows::Foundation::IReference_impl<unsigned __int64>;
struct Windows::Foundation::IReference_impl<unsigned char>;
struct Windows::Foundation::IReference_impl<unsigned int>;
struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
struct Windows::Foundation::Internal::AggregateType<bool,unsigned char>;
struct Windows::Foundation::Point;
struct Windows::Foundation::Rect;
struct Windows::Foundation::Size;
struct Windows::Foundation::TimeSpan;
struct Windows::UI::Core::AnimationMetrics::IAnimationDescription;
struct Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory;
struct Windows::UI::Core::AnimationMetrics::IOpacityAnimation;
struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation;
struct Windows::UI::Core::AnimationMetrics::IScaleAnimation;
struct XMLDOMDocumentEvents;
struct XSAVE_CPU_ERRATA;
struct XSAVE_CPU_INFO;
struct _ABC;
struct _ABCFLOAT;
struct _ACCESS_ALLOWED_ACE;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_ACE;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE;
struct _ACCESS_REASONS;
struct _ACE_HEADER;
struct _ACL;
struct _ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION;
struct _ACTION_HEADER;
struct _ACTIVATION_CONTEXT;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
struct _ACTIVATION_CONTEXT_DATA;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct _ACTIVATION_CONTEXT_STACK;
struct _ADAPTER_STATUS;
struct _ADDJOB_INFO_1A;
struct _ADDJOB_INFO_1W;
struct _ADMINISTRATOR_POWER_POLICY;
struct _ALPC_BASIC_INFORMATION;
struct _ALPC_CONTEXT_ATTR;
struct _ALPC_DATA_VIEW_ATTR;
struct _ALPC_DIRECT_ATTR;
struct _ALPC_HANDLE_ATTR;
struct _ALPC_HANDLE_ATTR32;
struct _ALPC_MESSAGE_ATTRIBUTES;
struct _ALPC_MESSAGE_HANDLE_INFORMATION;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _ALPC_PORT_ATTRIBUTES;
struct _ALPC_PORT_CALLBACK_INFORMATION;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct _ALPC_SECURITY_ATTR;
struct _ALPC_SERVER_INFORMATION;
struct _ALPC_TOKEN_ATTR;
struct _ALPC_WORK_ON_BEHALF_ATTR;
struct _ALPC_WORK_ON_BEHALF_TICKET;
struct _AMD64_CONTEXT;
struct _ANIHEADER;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _APP_MEMORY_INFORMATION;
struct _ARM64_CONTEXT;
struct _ARM_CONTEXT;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct _ASSEMBLY_STORAGE_MAP;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
struct _ASYNCCONFIGA;
struct _ASYNCCONFIGW;
struct _ATOM_BASIC_INFORMATION;
struct _ATOM_TABLE_INFORMATION;
struct _AUDIT_POLICY_INFORMATION;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _AppBarData;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _BCRYPT_DH_KEY_BLOB;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct _BCRYPT_DSA_KEY_BLOB;
struct _BCRYPT_DSA_KEY_BLOB_V2;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct _BCRYPT_DSA_PARAMETER_HEADER_V2;
struct _BCRYPT_ECCFULLKEY_BLOB;
struct _BCRYPT_ECCKEY_BLOB;
struct _BCRYPT_ECC_CURVE_NAMES;
struct _BCRYPT_INTERFACE_VERSION;
struct _BCRYPT_KEY_BLOB;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct _BCRYPT_MULTI_HASH_OPERATION;
struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT;
struct _BCRYPT_OAEP_PADDING_INFO;
struct _BCRYPT_OID;
struct _BCRYPT_OID_LIST;
struct _BCRYPT_PKCS1_PADDING_INFO;
struct _BCRYPT_PROVIDER_NAME;
struct _BCRYPT_PSS_PADDING_INFO;
struct _BCRYPT_RSAKEY_BLOB;
struct _BCryptBuffer;
struct _BCryptBufferDesc;
struct _BEEPINPUT;
struct _BIDI_DATA;
struct _BIDI_REQUEST_CONTAINER;
struct _BIDI_REQUEST_DATA;
struct _BIDI_RESPONSE_CONTAINER;
struct _BIDI_RESPONSE_DATA;
struct _BINARY_CONTAINER;
struct _BIN_COUNT;
struct _BIN_RANGE;
struct _BIN_RESULTS;
struct _BITMAPHEADER;
struct _BITMAPREF;
struct _BLENDFUNCTION;
struct _BOOT_AREA_INFO;
struct _BOOT_ENTROPY_NT_RESULT;
struct _BOOT_ENTROPY_SOURCE_NT_RESULT;
struct _BOOT_ENTRY;
struct _BOOT_ENTRY_LIST;
struct _BOOT_OPTIONS;
struct _BP_ANIMATIONPARAMS;
struct _BP_PAINTPARAMS;
struct _BYTE_BLOB;
struct _BYTE_SIZEDARR;
struct _BY_HANDLE_FILE_INFORMATION;
struct _CACHE_DESCRIPTOR;
struct _CACHE_RELATIONSHIP;
struct _CALL_FRAME;
struct _CDCONFIGA;
struct _CDCONFIGW;
struct _CD_HLSURF_CREATIONCONTEXT;
struct _CD_NOTIFY_COMPOSITORREF_TRACKING;
struct _CD_NOTIFY_LSURFACE;
struct _CD_NOTIFY_REDIR_ASSOC_LSURFACE;
struct _CD_NOTIFY_REDIR_CREATED;
struct _CD_NOTIFY_REDIR_DESTROY;
struct _CENTRAL_ACCESS_POLICY;
struct _CENTRAL_ACCESS_POLICY_ENTRY;
struct _CERTIFICATE_BLOB;
struct _CERT_ACCESS_DESCRIPTION;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_ALT_NAME_INFO;
struct _CERT_AUTHORITY_INFO_ACCESS;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct _CERT_BIOMETRIC_DATA;
struct _CERT_BIOMETRIC_EXT_INFO;
struct _CERT_CHAIN;
struct _CERT_CHAIN_CONTEXT;
struct _CERT_CHAIN_ELEMENT;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct _CERT_CHAIN_PARA;
struct _CERT_CHAIN_POLICY_PARA;
struct _CERT_CHAIN_POLICY_STATUS;
struct _CERT_CONTEXT;
struct _CERT_CREATE_CONTEXT_PARA;
struct _CERT_CRL_CONTEXT_PAIR;
struct _CERT_DH_PARAMETERS;
struct _CERT_DSS_PARAMETERS;
struct _CERT_ECC_SIGNATURE;
struct _CERT_EXTENSION;
struct _CERT_EXTENSIONS;
struct _CERT_FORTEZZA_DATA_PROP;
struct _CERT_GENERAL_SUBTREE;
struct _CERT_HASHED_URL;
struct _CERT_ID;
struct _CERT_INFO;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_KEYGEN_REQUEST_INFO;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct _CERT_KEY_CONTEXT;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct _CERT_LOGOTYPE_AUDIO;
struct _CERT_LOGOTYPE_AUDIO_INFO;
struct _CERT_LOGOTYPE_DATA;
struct _CERT_LOGOTYPE_DETAILS;
struct _CERT_LOGOTYPE_EXT_INFO;
struct _CERT_LOGOTYPE_IMAGE;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct _CERT_LOGOTYPE_INFO;
struct _CERT_LOGOTYPE_REFERENCE;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct _CERT_NAME_INFO;
struct _CERT_NAME_VALUE;
struct _CERT_OR_CRL_BLOB;
struct _CERT_OR_CRL_BUNDLE;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct _CERT_OTHER_NAME;
struct _CERT_PAIR;
struct _CERT_PHYSICAL_STORE_INFO;
struct _CERT_POLICIES_INFO;
struct _CERT_POLICY95_QUALIFIER1;
struct _CERT_POLICY_CONSTRAINTS_INFO;
struct _CERT_POLICY_ID;
struct _CERT_POLICY_INFO;
struct _CERT_POLICY_MAPPING;
struct _CERT_POLICY_MAPPINGS_INFO;
struct _CERT_POLICY_QUALIFIER_INFO;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
struct _CERT_PRIVATE_KEY_VALIDITY;
struct _CERT_PUBLIC_KEY_INFO;
struct _CERT_QC_STATEMENT;
struct _CERT_QC_STATEMENTS_EXT_INFO;
struct _CERT_RDN;
struct _CERT_RDN_ATTR;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct _CERT_REQUEST_INFO;
struct _CERT_REVOCATION_CHAIN_PARA;
struct _CERT_REVOCATION_CRL_INFO;
struct _CERT_REVOCATION_INFO;
struct _CERT_REVOCATION_PARA;
struct _CERT_REVOCATION_STATUS;
struct _CERT_SELECT_CHAIN_PARA;
struct _CERT_SELECT_CRITERIA;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA;
struct _CERT_SIGNED_CONTENT_INFO;
struct _CERT_SIMPLE_CHAIN;
struct _CERT_STORE_PROV_FIND_INFO;
struct _CERT_STORE_PROV_INFO;
struct _CERT_STRONG_SIGN_PARA;
struct _CERT_STRONG_SIGN_SERIALIZED_INFO;
struct _CERT_SUPPORTED_ALGORITHM_INFO;
struct _CERT_SYSTEM_STORE_INFO;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
struct _CERT_TEMPLATE_EXT;
struct _CERT_TPM_SPECIFICATION_INFO;
struct _CERT_TRUST_LIST_INFO;
struct _CERT_TRUST_STATUS;
struct _CERT_USAGE_MATCH;
struct _CERT_X942_DH_PARAMETERS;
struct _CERT_X942_DH_VALIDATION_PARAMS;
struct _CFG_CALL_TARGET_INFO;
struct _CFG_CALL_TARGET_LIST_INFORMATION;
struct _CHANGER_ELEMENT;
struct _CHANGER_ELEMENT_LIST;
struct _CHANGER_ELEMENT_STATUS;
struct _CHANGER_ELEMENT_STATUS_EX;
struct _CHANGER_EXCHANGE_MEDIUM;
struct _CHANGER_INITIALIZE_ELEMENT_STATUS;
struct _CHANGER_MOVE_MEDIUM;
struct _CHANGER_PRODUCT_DATA;
struct _CHANGER_READ_ELEMENT_STATUS;
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION;
struct _CHANGER_SET_ACCESS;
struct _CHANGER_SET_POSITION;
struct _CHAR_INFO;
struct _CHWIDTHINFO;
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _CLAIM_SECURITY_ATTRIBUTE_V1;
struct _CLASS_MEDIA_CHANGE_CONTEXT;
struct _CLIENT_DEVICE_NOTIFICATION;
struct _CLIENT_ID;
struct _CLIENT_ID64;
struct _CLUSTER_RANGE;
struct _CMC_ADD_ATTRIBUTES_INFO;
struct _CMC_ADD_EXTENSIONS_INFO;
struct _CMC_DATA_INFO;
struct _CMC_PEND_INFO;
struct _CMC_RESPONSE_INFO;
struct _CMC_STATUS_INFO;
struct _CMC_TAGGED_ATTRIBUTE;
struct _CMC_TAGGED_CERT_REQUEST;
struct _CMC_TAGGED_CONTENT_INFO;
struct _CMC_TAGGED_OTHER_MSG;
struct _CMC_TAGGED_REQUEST;
struct _CMINVOKECOMMANDINFO;
struct _CMINVOKECOMMANDINFOEX;
struct _CMSG_CMS_RECIPIENT_INFO;
struct _CMSG_CMS_SIGNER_INFO;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_DECRYPT_PARA;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
struct _CMSG_ENVELOPED_ENCODE_INFO;
struct _CMSG_HASHED_ENCODE_INFO;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
struct _CMSG_RC2_AUX_INFO;
struct _CMSG_RC4_AUX_INFO;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _CMSG_SIGNED_ENCODE_INFO;
struct _CMSG_SIGNER_ENCODE_INFO;
struct _CMSG_SIGNER_INFO;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
struct _CMSG_STREAM_INFO;
struct _CMS_DH_KEY_INFO;
struct _CMS_KEY_INFO;
struct _CM_COMPONENT_INFORMATION;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _CM_EISA_FUNCTION_INFORMATION;
struct _CM_EISA_SLOT_INFORMATION;
struct _CM_FLOPPY_DEVICE_DATA;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_INT13_DRIVE_PARAMETER;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _CM_MCA_POS_DATA;
struct _CM_MONITOR_DEVICE_DATA;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CM_PCCARD_DEVICE_DATA;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct _CM_RESOURCE_LIST;
struct _CM_ROM_BLOCK;
struct _CM_SCSI_DEVICE_DATA;
struct _CM_SERIAL_DEVICE_DATA;
struct _CM_SONIC_DEVICE_DATA;
struct _CM_VIDEO_DEVICE_DATA;
struct _COAUTHIDENTITY;
struct _COAUTHINFO;
struct _COLORMAP;
struct _COMDLG_FILTERSPEC;
struct _COMMCONFIG;
struct _COMMPROP;
struct _COMMTIMEOUTS;
struct _COMM_FAULT_OFFSETS;
struct _COMPATIBILITY_CONTEXT_ELEMENT;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
struct _COMPRESSED_DATA_INFO;
struct _COMSTAT;
struct _CONNECTCONFIG;
struct _CONNECTDLGSTRUCTA;
struct _CONNECTDLGSTRUCTW;
struct _CONSOLE_CURSOR_INFO;
struct _CONSOLE_FONT_INFO;
struct _CONSOLE_FONT_INFOEX;
struct _CONSOLE_HISTORY_INFO;
struct _CONSOLE_READCONSOLE_CONTROL;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
struct _CONSOLE_SELECTION_INFO;
struct _CONTAINER_ROOT_INFO_INPUT;
struct _CONTAINER_ROOT_INFO_OUTPUT;
struct _CONTAINER_VOLUME_STATE;
struct _CONTEXT;
struct _CONTEXT_CHUNK;
struct _CONTEXT_EX;
struct _COORD;
struct _CORE_PRINTER_DRIVERA;
struct _CORE_PRINTER_DRIVERW;
struct _COSERVERINFO;
struct _COUNTED_REASON_CONTEXT;
struct _COUNTER_READING;
struct _COVERAGE_MODULES;
struct _COVERAGE_MODULE_INFO;
struct _COVERAGE_MODULE_REQUEST;
struct _COVERAGE_SECTION_HEADER;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
struct _CPS_URLS;
struct _CPTABLEINFO;
struct _CREATEFILE2_EXTENDED_PARAMETERS;
struct _CREATE_DISK;
struct _CREATE_DISK_GPT;
struct _CREATE_DISK_MBR;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO;
struct _CREDENTIALS_INFO;
struct _CRITICAL_PROCESS_EXCEPTION_DATA;
struct _CRL_CONTEXT;
struct _CRL_DIST_POINT;
struct _CRL_DIST_POINTS_INFO;
struct _CRL_DIST_POINT_NAME;
struct _CRL_ENTRY;
struct _CRL_FIND_ISSUED_FOR_PARA;
struct _CRL_INFO;
struct _CRL_ISSUING_DIST_POINT;
struct _CRL_REVOCATION_INFO;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct _CRT_DOUBLE;
struct _CRT_FLOAT;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
struct _CRYPTOAPI_BLOB;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct _CRYPT_3DES_KEY_STATE;
struct _CRYPT_AES_128_KEY_STATE;
struct _CRYPT_AES_256_KEY_STATE;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _CRYPT_ATTRIBUTE;
struct _CRYPT_ATTRIBUTES;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct _CRYPT_BIT_BLOB;
struct _CRYPT_BLOB_ARRAY;
struct _CRYPT_CONTENT_INFO;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
struct _CRYPT_CONTEXTS;
struct _CRYPT_CONTEXT_CONFIG;
struct _CRYPT_CONTEXT_FUNCTIONS;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
struct _CRYPT_CREDENTIALS;
struct _CRYPT_CSP_PROVIDER;
struct _CRYPT_DECODE_PARA;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
struct _CRYPT_DES_KEY_STATE;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct _CRYPT_ECC_PRIVATE_KEY_INFO;
struct _CRYPT_ENCODE_PARA;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _CRYPT_HASH_INFO;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _CRYPT_IMAGE_REF;
struct _CRYPT_IMAGE_REG;
struct _CRYPT_INTERFACE_REG;
struct _CRYPT_KEY_PROV_INFO;
struct _CRYPT_KEY_PROV_PARAM;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct _CRYPT_MASK_GEN_ALGORITHM;
struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
struct _CRYPT_OBJID_TABLE;
struct _CRYPT_OID_FUNC_ENTRY;
struct _CRYPT_OID_INFO;
struct _CRYPT_PASSWORD_CREDENTIALSA;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct _CRYPT_PRIVATE_KEY_INFO;
struct _CRYPT_PROPERTY_REF;
struct _CRYPT_PROVIDERS;
struct _CRYPT_PROVIDER_REF;
struct _CRYPT_PROVIDER_REFS;
struct _CRYPT_PROVIDER_REG;
struct _CRYPT_PSOURCE_ALGORITHM;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct _CRYPT_RC4_KEY_STATE;
struct _CRYPT_RETRIEVE_AUX_INFO;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct _CRYPT_SEQUENCE_OF_ANY;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _CRYPT_SMART_CARD_ROOT_INFO;
struct _CRYPT_SMIME_CAPABILITIES;
struct _CRYPT_SMIME_CAPABILITY;
struct _CRYPT_TIMESTAMP_ACCURACY;
struct _CRYPT_TIMESTAMP_CONTEXT;
struct _CRYPT_TIMESTAMP_INFO;
struct _CRYPT_TIMESTAMP_PARA;
struct _CRYPT_TIMESTAMP_REQUEST;
struct _CRYPT_TIMESTAMP_RESPONSE;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
struct _CRYPT_URL_ARRAY;
struct _CRYPT_URL_INFO;
struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;
struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct _CRYPT_X942_OTHER_INFO;
struct _CSFV;
struct _CSTRING;
struct _CSV_CONTROL_PARAM;
struct _CSV_IS_OWNED_BY_CSVFS;
struct _CSV_MGMT_LOCK;
struct _CSV_NAMESPACE_INFO;
struct _CSV_QUERY_FILE_REVISION;
struct _CSV_QUERY_FILE_REVISION_FILE_ID_128;
struct _CSV_QUERY_MDS_PATH;
struct _CSV_QUERY_MDS_PATH_V2;
struct _CSV_QUERY_REDIRECT_STATE;
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
struct _CSV_QUERY_VOLUME_REDIRECT_STATE;
struct _CTL_ANY_SUBJECT_INFO;
struct _CTL_CONTEXT;
struct _CTL_ENTRY;
struct _CTL_FIND_SUBJECT_PARA;
struct _CTL_FIND_USAGE_PARA;
struct _CTL_INFO;
struct _CTL_USAGE;
struct _CTL_USAGE_MATCH;
struct _CTL_VERIFY_USAGE_PARA;
struct _CTL_VERIFY_USAGE_STATUS;
struct _CURDIR;
struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;
struct _CrtMemBlockHeader;
struct _CrtMemState;
struct _CursorPositionNotification;
struct _D3DADAPTER_IDENTIFIER9;
struct _D3DAES_CTR_IV;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS;
struct _D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT;
struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT;
struct _D3DBOX;
struct _D3DCAPS9;
struct _D3DCLIPSTATUS9;
struct _D3DCOLORVALUE;
struct _D3DCOMPOSERECTDESC;
struct _D3DCOMPOSERECTDESTINATION;
struct _D3DCONTENTPROTECTIONCAPS;
struct _D3DDEVICE_CREATION_PARAMETERS;
struct _D3DDEVINFO_D3D9BANDWIDTHTIMINGS;
struct _D3DDEVINFO_D3D9CACHEUTILIZATION;
struct _D3DDEVINFO_D3D9INTERFACETIMINGS;
struct _D3DDEVINFO_D3D9PIPELINETIMINGS;
struct _D3DDEVINFO_D3D9STAGETIMINGS;
struct _D3DDEVINFO_D3DVERTEXSTATS;
struct _D3DDEVINFO_RESOURCEMANAGER;
struct _D3DDEVINFO_VCACHE;
struct _D3DDISPLAYMODE;
struct _D3DENCRYPTED_BLOCK_INFO;
struct _D3DGAMMARAMP;
struct _D3DINDEXBUFFER_DESC;
struct _D3DLIGHT9;
struct _D3DLOCKED_BOX;
struct _D3DLOCKED_RECT;
struct _D3DMATERIAL9;
struct _D3DMATRIX;
struct _D3DMEMORYPRESSURE;
struct _D3DOVERLAYCAPS;
struct _D3DPRESENTSTATS;
struct _D3DPRESENT_PARAMETERS_;
struct _D3DPSHADERCAPS2_0;
struct _D3DRANGE;
struct _D3DRASTER_STATUS;
struct _D3DRECT;
struct _D3DRECTPATCH_INFO;
struct _D3DRESOURCESTATS;
struct _D3DSURFACE_DESC;
struct _D3DTRIPATCH_INFO;
struct _D3DVECTOR;
struct _D3DVERTEXBUFFER_DESC;
struct _D3DVERTEXELEMENT9;
struct _D3DVIEWPORT9;
struct _D3DVOLUME_DESC;
struct _D3DVSHADERCAPS2_0;
struct _D3D_OMAC;
struct _DATATYPES_INFO_1A;
struct _DATATYPES_INFO_1W;
struct _DCB;
struct _DEBUG_EVENT;
struct _DECRYPTION_STATUS_BUFFER;
struct _DEDUP_CHUNK_INFORMATION_HASH32;
struct _DEDUP_FILE_OPERATION;
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
struct _DEFINE_STORAGE_RESERVE_INPUT;
struct _DELAYLOAD_INFO;
struct _DELAYLOAD_PROC_DESCRIPTOR;
struct _DELETE_STORAGE_RESERVE_INPUT;
struct _DETAILSINFO;
struct _DEVICEDUMP_PRIVATE_SUBSECTION;
struct _DEVICEDUMP_PUBLIC_SUBSECTION;
struct _DEVICEDUMP_RESTRICTED_SUBSECTION;
struct _DEVICEDUMP_SECTION_HEADER;
struct _DEVICEDUMP_STORAGEDEVICE_DATA;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
struct _DEVICEDUMP_STRUCTURE_VERSION;
struct _DEVICEDUMP_SUBSECTION_POINTER;
struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR;
struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS;
struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE;
struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2;
struct _DEVICE_DATA_SET_RANGE;
struct _DEVICE_DATA_SET_REPAIR_OUTPUT;
struct _DEVICE_DATA_SET_REPAIR_PARAMETERS;
struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT;
struct _DEVICE_DATA_SET_SCRUB_OUTPUT;
struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT;
struct _DEVICE_DSM_DEFINITION;
struct _DEVICE_DSM_FREE_SPACE_OUTPUT;
struct _DEVICE_DSM_LOST_QUERY_OUTPUT;
struct _DEVICE_DSM_LOST_QUERY_PARAMETERS;
struct _DEVICE_DSM_NOTIFICATION_PARAMETERS;
struct _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS;
struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS;
struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
struct _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT;
struct _DEVICE_DSM_RANGE_ERROR_INFO;
struct _DEVICE_DSM_REPORT_ZONES_DATA;
struct _DEVICE_DSM_REPORT_ZONES_PARAMETERS;
struct _DEVICE_DSM_TIERING_QUERY_INPUT;
struct _DEVICE_DSM_TIERING_QUERY_OUTPUT;
struct _DEVICE_FLAGS;
struct _DEVICE_LB_PROVISIONING_DESCRIPTOR;
struct _DEVICE_LOCATION;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
struct _DEVICE_MEDIA_INFO;
struct _DEVICE_POWER_DESCRIPTOR;
struct _DEVICE_SEEK_PENALTY_DESCRIPTOR;
struct _DEVICE_STORAGE_ADDRESS_RANGE;
struct _DEVICE_STORAGE_RANGE_ATTRIBUTES;
struct _DEVICE_TRIM_DESCRIPTOR;
struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR;
struct _DEV_BROADCAST_POWERSETTING;
struct _DIAGNOSTIC_BUFFER;
struct _DISCDLGSTRUCTA;
struct _DISCDLGSTRUCTW;
struct _DISK_CACHE_INFORMATION;
struct _DISK_CONTROLLER_NUMBER;
struct _DISK_DETECTION_INFO;
struct _DISK_EXTENT;
struct _DISK_EX_INT13_INFO;
struct _DISK_GEOMETRY;
struct _DISK_GEOMETRY_EX;
struct _DISK_GROW_PARTITION;
struct _DISK_HISTOGRAM;
struct _DISK_INT13_INFO;
struct _DISK_LOGGING;
struct _DISK_PARTITION_INFO;
struct _DISK_PERFORMANCE;
struct _DISK_RECORD;
struct _DISPATCHER_CONTEXT;
struct _DISPLAYCONFIG_BRIGHTNESS_CAPS;
struct _DISPLAYCONFIG_BRIGHTNESS_NIT_RANGE;
struct _DISPLAYCONFIG_COLORIMETRICCONTROL;
struct _DISPLAYCONFIG_DEVICEDESC;
struct _DISPLAYCONFIG_DEVICEID;
struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO;
struct _DISPLAYCONFIG_GET_DISPLAY_INFO;
struct _DISPLAYCONFIG_GET_MONITOR_DISPLAYID;
struct _DISPLAYCONFIG_GET_MONITOR_EDID;
struct _DISPLAYCONFIG_GET_MONITOR_INTERNAL_INFO;
struct _DISPLAYCONFIG_GET_MONITOR_INVERTED;
struct _DISPLAYCONFIG_GET_RENDER_ADAPTER;
struct _DISPLAYCONFIG_GET_SCALE_FACTOR_OVERRIDES;
struct _DISPLAYCONFIG_GET_TARGET_COLORSPACETRANSFORM_CAPS;
struct _DISPLAYCONFIG_INTERNAL_DISPLAY_ROTATION_MODE;
struct _DISPLAYCONFIG_SDR_WHITE_LEVEL;
struct _DISPLAYCONFIG_SESSION_INFO;
struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_PARAM;
struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE;
struct _DISPLAYCONFIG_SET_SCALE_FACTOR_OVERRIDE;
struct _DISPLAYCONFIG_SET_SDR_WHITE_LEVEL;
struct _DISPLAY_DEVICEA;
struct _DISPLAY_DEVICEW;
struct _DLLVERSIONINFO;
struct _DLLVERSIONINFO2;
struct _DMA_CONFIGURATION_BYTE0;
struct _DMA_CONFIGURATION_BYTE1;
struct _DOCINFOA;
struct _DOCINFOW;
struct _DOC_INFO_1A;
struct _DOC_INFO_1W;
struct _DOC_INFO_2A;
struct _DOC_INFO_2W;
struct _DOC_INFO_3A;
struct _DOC_INFO_3W;
struct _DOMAIN_PASSWORD_INFORMATION;
struct _DPA;
struct _DPASTREAMINFO;
struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK;
struct _DPI_INFORMATION;
struct _DPI_OVERRIDE_RANGE;
struct _DRAGINFOA;
struct _DRAGINFOW;
struct _DRAWPATRECT;
struct _DRIVERSTATUS;
struct _DRIVER_INFO_1A;
struct _DRIVER_INFO_1W;
struct _DRIVER_INFO_2A;
struct _DRIVER_INFO_2W;
struct _DRIVER_INFO_3A;
struct _DRIVER_INFO_3W;
struct _DRIVER_INFO_4A;
struct _DRIVER_INFO_4W;
struct _DRIVER_INFO_5A;
struct _DRIVER_INFO_5W;
struct _DRIVER_INFO_6A;
struct _DRIVER_INFO_6W;
struct _DRIVER_INFO_8A;
struct _DRIVER_INFO_8W;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct _DRIVE_LAYOUT_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION_EX;
struct _DRIVE_LAYOUT_INFORMATION_GPT;
struct _DRIVE_LAYOUT_INFORMATION_MBR;
struct _DROPFILES;
struct _DROPFILES16;
struct _DSA;
struct _DSSSEED;
struct _DS_HEADER;
struct _DS_NINEGRID;
struct _DS_NINEGRIDINFO;
struct _DS_SETSOURCE;
struct _DS_SETTARGET;
struct _DTBGOPTS;
struct _DTTOPTS;
struct _DUPLICATE_EXTENTS_DATA;
struct _DUPLICATE_EXTENTS_DATA32;
struct _DUPLICATE_EXTENTS_DATA_EX;
struct _DUPLICATE_EXTENTS_DATA_EX32;
struct _DWMREDIR_SPRITEFLAGS;
struct _DWM_BLURBEHIND;
struct _DWM_COLORIZATION_PARAMETERS;
struct _DWM_GLOBAL_STATE;
struct _DWM_NCADORNMENT_INFO;
struct _DWM_PRESENT_PARAMETERS;
struct _DWM_SWAPCHAINRENDERTARGET_METADATA_DATA_FRAMETIME;
struct _DWM_THUMBNAIL_PROPERTIES;
struct _DWM_TIMING_INFO;
struct _DWM_TIMING_INFO_EX;
struct _DWORD_BLOB;
struct _DYNAMIC_FUNCTION_TABLE;
struct _DesiredStorageClass;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
struct _EFS_COMPATIBILITY_INFO;
struct _EFS_DECRYPTION_STATUS_INFO;
struct _EFS_ENCRYPTION_STATUS_INFO;
struct _EFS_HASH_BLOB;
struct _EFS_KEY_INFO;
struct _EFS_PIN_BLOB;
struct _EFS_RPC_BLOB;
struct _EFS_VERSION_INFO;
struct _EISA_DMA_CONFIGURATION;
struct _EISA_IRQ_CONFIGURATION;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_MEMORY_CONFIGURATION;
struct _EISA_MEMORY_TYPE;
struct _EISA_PORT_CONFIGURATION;
struct _EISA_PORT_DESCRIPTOR;
struct _ENCLAVE_CREATE_INFO_SGX;
struct _ENCLAVE_CREATE_INFO_VBS;
struct _ENCLAVE_INIT_INFO_SGX;
struct _ENCLAVE_INIT_INFO_VBS;
struct _ENCLAVE_LOAD_INFO_VBS;
struct _ENCRYPTED_DATA_INFO;
struct _ENCRYPTED_FILE_METADATA_SIGNATURE;
struct _ENCRYPTION_BUFFER;
struct _ENCRYPTION_CERTIFICATE;
struct _ENCRYPTION_CERTIFICATE_HASH;
struct _ENCRYPTION_CERTIFICATE_HASH_LIST;
struct _ENCRYPTION_CERTIFICATE_LIST;
struct _ENCRYPTION_KEY_CTRL_INPUT;
struct _ENCRYPTION_PROTECTOR;
struct _ENCRYPTION_PROTECTOR_LIST;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _ENLISTMENT_CRM_INFORMATION;
struct _ENUMTHEMEPROPERTIES;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<1>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<2>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<4>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<8>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ACTIVATEOPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ADJACENT_DISPLAY_EDGES>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ASSOC_FILTER>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CATEGORYINFO_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CATSORT_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CDCONTROLSTATEF>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CM_ENUM_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CM_MASK>;
struct _ENUM_FLAG_SIZED_INTEGER<enum CM_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DATAOBJ_GET_ITEM_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DEFAULT_FOLDER_MENU_RESTRICTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DESKTOP_SLIDESHOW_OPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DESKTOP_SLIDESHOW_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIT_HITTESTATTRIBUTES>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DWMTRANSITION_TARGET>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DWM_SHOWCONTACT>;
struct _ENUM_FLAG_SIZED_INTEGER<enum DWM_TAB_WINDOW_REQUIREMENTS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum EXPLORER_BROWSER_FILL_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum EXPLORER_BROWSER_OPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum EXTCOCREATEFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ExtensionListStalenessFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FILETYPEATTRIBUTEFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FILE_OPERATION_FLAGS2>;
struct _ENUM_FLAG_SIZED_INTEGER<enum FOLDERFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum GETPROPERTYSTOREFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum GROUP_WINDOW_MANAGEMENT_POLICY>;
struct _ENUM_FLAG_SIZED_INTEGER<enum HOMEGROUPSHARINGCHOICES>;
struct _ENUM_FLAG_SIZED_INTEGER<enum INPUTDELEGATION_MODE_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_DESTINATION_IDENTITY>;
struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_SPACE_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_SPACE_REGION_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum KNOWN_FOLDER_FLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYMANAGEDIALOGOPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYOPTIONFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYSAVEFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum MCFFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum NAMESPACEWALKFLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum NSTCFOLDERCAPABILITIES>;
struct _ENUM_FLAG_SIZED_INTEGER<enum NWMF>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PERSIST_SPROPSTORE_FLAGS_PRIV>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PLACEHOLDER_STATES>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROCESS_UI_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_FORMAT_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_SEARCHINFO_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_TYPE_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_TYPE_FLAGS_EX>;
struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_VIEW_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum RO_ERROR_REPORTING_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SCALE_CHANGE_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SCHEMAVIEW_AGGREGATIONRULE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SET_WINDOW_GROUP_OPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SHELL_EXEC_CMD_LINE_OPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SHELL_LINK_DATA_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SIATTRIBFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SIMPLE_IDLIST_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SLGP_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SLR_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SPATIAL_INPUT_ACTIVATION_POLICY>;
struct _ENUM_FLAG_SIZED_INTEGER<enum STORAGE_PROVIDER_FILE_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum STPFLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum SYNC_TRANSFER_STATUS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum TA_PROPERTY_FLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum TA_TRANSFORM_FLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum TA_TRANSFORM_FLAG_EXT>;
struct _ENUM_FLAG_SIZED_INTEGER<enum TBPFLAG>;
struct _ENUM_FLAG_SIZED_INTEGER<enum THREADFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum THUMBBUTTONFLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum THUMBBUTTONMASK>;
struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::RoErrorReportingFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _INTERCEPTOR_MOUSE_SYSTEM_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _InputMessageNotificationFlags>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _MOUSEPROCESSOR_PROCESSING_OPTIONS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _MOUSE_PREINTERCEPT_BEHAVIOR>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _SVGIO>;
struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::ActivityOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::EventOptions>;
struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::ReportFailureOptions>;
struct _ENUM_SERVICE_STATUSA;
struct _ENUM_SERVICE_STATUSW;
struct _ENUM_SERVICE_STATUS_PROCESSA;
struct _ENUM_SERVICE_STATUS_PROCESSW;
struct _ERROR_CODES_INFO;
struct _ETW_BUFFER_CONTEXT;
struct _EVENTLOGRECORD;
struct _EVENTLOG_FULL_INFORMATION;
struct _EVENTSFORLOGFILE;
struct _EVENT_BASIC_INFORMATION;
struct _EVENT_DATA_DESCRIPTOR;
struct _EVENT_DESCRIPTOR;
struct _EVENT_FILTER_DESCRIPTOR;
struct _EVENT_FILTER_EVENT_ID;
struct _EVENT_FILTER_EVENT_NAME;
struct _EVENT_FILTER_HEADER;
struct _EVENT_FILTER_LEVEL_KW;
struct _EVENT_HEADER;
struct _EVENT_HEADER_EXTENDED_DATA_ITEM;
struct _EVENT_RECORD;
struct _EVENT_TRACE_HEADER;
struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _EXCEPTION_DEBUG_INFO;
struct _EXCEPTION_LOG;
struct _EXCEPTION_POINTERS;
struct _EXCEPTION_RECORD;
struct _EXCEPTION_RECORD32;
struct _EXCEPTION_RECORD64;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _EXECENVDATAEX;
struct _EXECENVDATAEX_LEVEL1;
struct _EXECENV_ENUMINFOW;
struct _EXFAT_STATISTICS;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct _EXTENT_READ_CACHE_INFO_BUFFER;
struct _EXTTEXTMETRIC;
struct _EX_WNF_SUBSCRIPTION;
struct _ExtendedClientCredentials;
struct _ExtensibilityMouseInputData;
struct _FAT_STATISTICS;
struct _FDSA;
struct _FIBER;
struct _FILEDESCRIPTORA;
struct _FILEDESCRIPTORW;
struct _FILEGROUPDESCRIPTORA;
struct _FILEGROUPDESCRIPTORW;
struct _FILEMUIINFO;
struct _FILEOFFSET_INFORMATION;
struct _FILESYSTEM_STATISTICS;
struct _FILESYSTEM_STATISTICS_EX;
struct _FILETIME;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_ALIGNMENT_INFO;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _FILE_ALLOCATION_INFO;
struct _FILE_ALLOCATION_INFORMATION;
struct _FILE_ALL_INFORMATION;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _FILE_BASIC_INFO;
struct _FILE_BASIC_INFORMATION;
struct _FILE_BOTH_DIR_INFORMATION;
struct _FILE_CASE_SENSITIVE_INFORMATION;
struct _FILE_COMPLETION_INFORMATION;
struct _FILE_COMPRESSION_INFO;
struct _FILE_COMPRESSION_INFORMATION;
struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION;
struct _FILE_DIRECTORY_INFORMATION;
struct _FILE_DISPOSITION_INFO;
struct _FILE_DISPOSITION_INFORMATION;
struct _FILE_DISPOSITION_INFORMATION_EX;
struct _FILE_DISPOSITION_INFO_EX;
struct _FILE_EA_INFORMATION;
struct _FILE_END_OF_FILE_INFO;
struct _FILE_END_OF_FILE_INFORMATION;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _FILE_FS_CONTROL_INFORMATION;
struct _FILE_FS_DATA_COPY_INFORMATION;
struct _FILE_FS_DEVICE_INFORMATION;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION_EX;
struct _FILE_FS_LABEL_INFORMATION;
struct _FILE_FS_METADATA_SIZE_INFORMATION;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
struct _FILE_FS_SECTOR_SIZE_INFORMATION;
struct _FILE_FS_SIZE_INFORMATION;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _FILE_FS_VOLUME_INFORMATION;
struct _FILE_FULL_DIR_INFO;
struct _FILE_FULL_DIR_INFORMATION;
struct _FILE_FULL_EA_INFORMATION;
struct _FILE_GET_EA_INFORMATION;
struct _FILE_GET_QUOTA_INFORMATION;
struct _FILE_ID_128;
struct _FILE_ID_BOTH_DIR_INFO;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION;
struct _FILE_ID_EXTD_DIR_INFO;
struct _FILE_ID_EXTD_DIR_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
struct _FILE_ID_INFO;
struct _FILE_ID_INFORMATION;
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _FILE_IO_COMPLETION_INFORMATION;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFO;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct _FILE_LAYOUT_ENTRY;
struct _FILE_LAYOUT_INFO_ENTRY;
struct _FILE_LAYOUT_NAME_ENTRY;
struct _FILE_LEVEL_TRIM;
struct _FILE_LEVEL_TRIM_OUTPUT;
struct _FILE_LEVEL_TRIM_RANGE;
struct _FILE_LINKS_FULL_ID_INFORMATION;
struct _FILE_LINKS_INFORMATION;
struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINK_INFORMATION;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _FILE_MEMORY_PARTITION_INFORMATION;
struct _FILE_MODE_INFORMATION;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _FILE_NAMES_INFORMATION;
struct _FILE_NAME_INFO;
struct _FILE_NAME_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _FILE_NOTIFY_EXTENDED_INFORMATION;
struct _FILE_NOTIFY_INFORMATION;
struct _FILE_NUMA_NODE_INFORMATION;
struct _FILE_OBJECTID_BUFFER;
struct _FILE_OBJECTID_INFORMATION;
struct _FILE_PATH;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _FILE_PIPE_CREATE_SYMLINK_INPUT;
struct _FILE_PIPE_DELETE_SYMLINK_INPUT;
struct _FILE_PIPE_EVENT_BUFFER;
struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER;
struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER;
struct _FILE_PIPE_EVENT_SELECT_BUFFER;
struct _FILE_PIPE_INFORMATION;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct _FILE_PIPE_PEEK_BUFFER;
struct _FILE_PIPE_REMOTE_INFORMATION;
struct _FILE_PIPE_SILO_ARRIVAL_INPUT;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _FILE_POSITION_INFORMATION;
struct _FILE_PREFETCH;
struct _FILE_PREFETCH_EX;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct _FILE_PROVIDER_EXTERNAL_INFO_V0;
struct _FILE_PROVIDER_EXTERNAL_INFO_V1;
struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _FILE_QUERY_SPARING_BUFFER;
struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX;
struct _FILE_QUOTA_INFORMATION;
struct _FILE_REFERENCE_RANGE;
struct _FILE_REGION_INFO;
struct _FILE_REGION_INPUT;
struct _FILE_REGION_OUTPUT;
struct _FILE_REMOTE_PROTOCOL_INFO;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct _FILE_RENAME_INFO;
struct _FILE_RENAME_INFORMATION;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _FILE_SET_SPARSE_BUFFER;
struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _FILE_STANDARD_INFO;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_STANDARD_INFORMATION_EX;
struct _FILE_STANDARD_LINK_INFORMATION;
struct _FILE_STAT_INFORMATION;
struct _FILE_STAT_LX_INFORMATION;
struct _FILE_STORAGE_INFO;
struct _FILE_STORAGE_RESERVE_ID_INFORMATION;
struct _FILE_STORAGE_TIER;
struct _FILE_STORAGE_TIER_REGION;
struct _FILE_STREAM_INFO;
struct _FILE_STREAM_INFORMATION;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _FILE_TRACKING_INFORMATION;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
struct _FILE_VOLUME_NAME_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION_EX;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct _FIND_NAME_BUFFER;
struct _FIND_NAME_HEADER;
struct _FIXED;
struct _FLAGGED_BYTE_BLOB;
struct _FLAGGED_WORD_BLOB;
struct _FLAG_STGMEDIUM;
struct _FLOAT128;
struct _FLOWCONTROLCONFIG;
struct _FLS_CALLBACK_INFO;
struct _FLS_DATA;
struct _FNSAVE_FORMAT;
struct _FOCUS_EVENT_RECORD;
struct _FORMAT_EX_PARAMETERS;
struct _FORMAT_PARAMETERS;
struct _FORM_INFO_1A;
struct _FORM_INFO_1W;
struct _FORM_INFO_2A;
struct _FORM_INFO_2W;
struct _FPO_DATA;
struct _FP_128;
struct _FP_32;
struct _FP_64;
struct _FP_80;
struct _FP_IEEE_RECORD;
struct _FP_IEEE_VALUE;
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER;
struct _FSCTL_OFFLOAD_READ_INPUT;
struct _FSCTL_OFFLOAD_READ_OUTPUT;
struct _FSCTL_OFFLOAD_WRITE_INPUT;
struct _FSCTL_OFFLOAD_WRITE_OUTPUT;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT;
struct _FSCTL_QUERY_REGION_INFO_INPUT;
struct _FSCTL_QUERY_REGION_INFO_OUTPUT;
struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT;
struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX;
struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER;
struct _FSCTL_UNMAP_SPACE_OUTPUT;
struct _FSTEXTMODE;
struct _FULL_PTR_XLAT_TABLES;
struct _GDI_NONREMOTE;
struct _GDI_OBJECT;
struct _GDI_TEB_BATCH;
struct _GENERATE_NAME_CONTEXT;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct _GENERIC_MAPPING;
struct _GETVERSIONINPARAMS;
struct _GET_CHANGER_PARAMETERS;
struct _GET_DISK_ATTRIBUTES;
struct _GET_FILTER_FILE_IDENTIFIER_INPUT;
struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT;
struct _GET_LENGTH_INFORMATION;
struct _GET_MEDIA_TYPES;
struct _GHOSTED_FILE_EXTENT;
struct _GHOSTINFO;
struct _GLYPHMETRICS;
struct _GLYPHMETRICSFLOAT;
struct _GP_LOG_PAGE_DESCRIPTOR;
struct _GRADIENT_RECT;
struct _GRADIENT_TRIANGLE;
struct _GROUP_AFFINITY;
struct _GROUP_RELATIONSHIP;
struct _GS_HANDLER_DATA;
struct _GUID;
struct _HARDERROR_MSG;
struct _HARDWARE_COUNTER;
struct _HARDWARE_COUNTER_DATA;
struct _HCIMAGEPROPERTIES;
struct _HD_HITTESTINFO;
struct _HD_ITEMA;
struct _HD_ITEMW;
struct _HD_LAYOUT;
struct _HD_TEXTFILTERA;
struct _HD_TEXTFILTERW;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_SUMMARY;
struct _HIBERFILE_BUCKET;
struct _HISTOGRAM_BUCKET;
struct _HLSURF_INFORMATION_DIRTYREGIONS;
struct _HLSURF_INFORMATION_PRESENTFLAGS;
struct _HLSURF_INFORMATION_REDIRSTYLE;
struct _HLSURF_INFORMATION_SET_GERNERATE_MOVE_DATA;
struct _HLSURF_INFORMATION_SET_SIGNALING;
struct _HLSURF_INFORMATION_SURFACE;
struct _HLSURF_INFORMATION_TOKENUPDATEID;
struct _HMAC_Info;
struct _HMDSTATUS;
struct _HOT_PATCH_IMAGE_INFO;
struct _HOVER_INPUT_INFO;
struct _HSM_OPCODE;
struct _HTTPSPolicyCallbackData;
struct _HV_DETAILS;
struct _HWND_LOGSURF_CREATECONTEXT;
struct _HWND_REDIRECTION_DXREGION;
struct _HWND_REDIRECTION_DXUPDATERECT;
struct _HWND_REDIRECTION_SURFACE;
struct _HWND_REDIRECTION_TOKENUPDATEID;
struct _HYPER_SIZEDARR;
struct _ICA_CACHE;
struct _ICA_COUNTERS;
struct _ICA_STACK_ADDRESS;
struct _ICONINFO;
struct _ICONINFOEXA;
struct _ICONINFOEXW;
struct _IDA;
struct _IDEREGS;
struct _IMAGEINFO;
struct _IMAGELIST;
struct _IMAGELISTDRAWPARAMS;
struct _IMAGEPROPERTIES;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_BASE_RELOCATION;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_CHPE_METADATA_X86;
struct _IMAGE_CHPE_RANGE_ENTRY;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_DEBUG_DIRECTORY;
struct _IMAGE_DEBUG_MISC;
struct _IMAGE_DELAYLOAD_DESCRIPTOR;
struct _IMAGE_DOS_HEADER;
struct _IMAGE_DYNAMIC_RELOCATION32;
struct _IMAGE_DYNAMIC_RELOCATION32_V2;
struct _IMAGE_DYNAMIC_RELOCATION64;
struct _IMAGE_DYNAMIC_RELOCATION64_V2;
struct _IMAGE_DYNAMIC_RELOCATION_TABLE;
struct _IMAGE_ENCLAVE_CONFIG32;
struct _IMAGE_ENCLAVE_CONFIG64;
struct _IMAGE_ENCLAVE_IMPORT;
struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER;
struct _IMAGE_EXPORT_DIRECTORY;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64;
struct _IMAGE_HOT_PATCH_BASE;
struct _IMAGE_HOT_PATCH_HASHES;
struct _IMAGE_HOT_PATCH_INFO;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
struct _IMAGE_LINENUMBER;
struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _IMAGE_LOAD_CONFIG_DIRECTORY64;
struct _IMAGE_NT_HEADERS;
struct _IMAGE_NT_HEADERS64;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IMAGE_OS2_HEADER;
struct _IMAGE_POLICY_ENTRY;
struct _IMAGE_POLICY_METADATA;
struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER;
struct _IMAGE_RELOCATION;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_ROM_HEADERS;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_SECTION_HEADER;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION;
struct _IMAGE_SYMBOL;
struct _IMAGE_SYMBOL_EX;
struct _IMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64;
struct _IMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64;
struct _IMAGE_VXD_HEADER;
struct _INITIAL_TEB;
struct _INPUT_RECORD;
struct _INTERNAL_SWITCHBRANCH_MODULE_TABLE;
struct _INTLIST;
struct _INVERTED_FUNCTION_TABLE;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct _IO_COMPLETION_BASIC_INFORMATION;
struct _IO_COUNTERS;
struct _IO_ERROR_LOG_MESSAGE;
struct _IO_ERROR_LOG_PACKET;
struct _IO_IRP_EXT_TRACK_OFFSET_HEADER;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _IO_SESSION_CONNECT_INFO;
struct _IO_STATUS_BLOCK;
struct _IO_STATUS_BLOCK32;
struct _IR_TIMER_EXTRA_CREATE_PARAMETER;
struct _ITEMIDLIST;
struct _ITEMIDLIST_ABSOLUTE;
struct _ITEMIDLIST_RELATIVE;
struct _ITEMID_CHILD;
struct _ITEMSPACING;
struct _ImageArchitectureEntry;
struct _ImageArchitectureHeader;
struct _InputHitTestRequest;
struct _InputHitTestResult;
struct _InputMessageNotification;
struct _InputNotificationBuffer;
struct _JIT_DEBUG_INFO;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2;
struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2;
struct _JOBOBJECT_FREEZE_INFORMATION;
struct _JOBOBJECT_INTERFERENCE_INFORMATION;
struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION;
struct _JOBOBJECT_IO_ATTRIBUTION_STATS;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOBOBJECT_WAKE_FILTER;
struct _JOBOBJECT_WAKE_INFORMATION;
struct _JOBOBJECT_WAKE_INFORMATION_V1;
struct _JOB_INFO_1A;
struct _JOB_INFO_1W;
struct _JOB_INFO_2A;
struct _JOB_INFO_2W;
struct _JOB_INFO_3;
struct _JOB_INFO_4A;
struct _JOB_INFO_4W;
struct _JOB_SET_ARRAY;
struct _JOURNAL_ABSOLUTE_INFORMATION;
struct _JOURNAL_CLIENT_INFORMATION;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct _JUMP_BUFFER;
struct _KAFFINITY_ENUMERATION_CONTEXT;
struct _KAFFINITY_EX;
struct _KCRM_MARSHAL_HEADER;
struct _KCRM_PROTOCOL_BLOB;
struct _KCRM_TRANSACTION_BLOB;
struct _KDC_PROXY_CACHE_ENTRY_DATA;
struct _KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST;
struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST;
struct _KERB_ADD_CREDENTIALS_REQUEST;
struct _KERB_ADD_CREDENTIALS_REQUEST_EX;
struct _KERB_AUTH_DATA;
struct _KERB_BINDING_CACHE_ENTRY_DATA;
struct _KERB_CERTIFICATE_HASHINFO;
struct _KERB_CERTIFICATE_INFO;
struct _KERB_CERTIFICATE_LOGON;
struct _KERB_CERTIFICATE_S4U_LOGON;
struct _KERB_CERTIFICATE_UNLOCK_LOGON;
struct _KERB_CHANGEPASSWORD_REQUEST;
struct _KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST;
struct _KERB_DECRYPT_REQUEST;
struct _KERB_DECRYPT_RESPONSE;
struct _KERB_EXTERNAL_NAME;
struct _KERB_EXTERNAL_TICKET;
struct _KERB_INTERACTIVE_LOGON;
struct _KERB_INTERACTIVE_PROFILE;
struct _KERB_INTERACTIVE_UNLOCK_LOGON;
struct _KERB_NET_ADDRESS;
struct _KERB_NET_ADDRESSES;
struct _KERB_PURGE_BINDING_CACHE_REQUEST;
struct _KERB_PURGE_KDC_PROXY_CACHE_REQUEST;
struct _KERB_PURGE_KDC_PROXY_CACHE_RESPONSE;
struct _KERB_PURGE_TKT_CACHE_EX_REQUEST;
struct _KERB_PURGE_TKT_CACHE_REQUEST;
struct _KERB_QUERY_BINDING_CACHE_REQUEST;
struct _KERB_QUERY_BINDING_CACHE_RESPONSE;
struct _KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST;
struct _KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE;
struct _KERB_QUERY_KDC_PROXY_CACHE_REQUEST;
struct _KERB_QUERY_KDC_PROXY_CACHE_RESPONSE;
struct _KERB_QUERY_S4U2PROXY_CACHE_REQUEST;
struct _KERB_QUERY_S4U2PROXY_CACHE_RESPONSE;
struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE;
struct _KERB_QUERY_TKT_CACHE_EX3_RESPONSE;
struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE;
struct _KERB_QUERY_TKT_CACHE_REQUEST;
struct _KERB_QUERY_TKT_CACHE_RESPONSE;
struct _KERB_REFRESH_SCCRED_REQUEST;
struct _KERB_RETRIEVE_TKT_REQUEST;
struct _KERB_RETRIEVE_TKT_RESPONSE;
struct _KERB_S4U2PROXY_CACHE_ENTRY_INFO;
struct _KERB_S4U2PROXY_CRED;
struct _KERB_S4U_LOGON;
struct _KERB_SETPASSWORD_EX_REQUEST;
struct _KERB_SETPASSWORD_REQUEST;
struct _KERB_SMART_CARD_LOGON;
struct _KERB_SMART_CARD_PROFILE;
struct _KERB_SMART_CARD_UNLOCK_LOGON;
struct _KERB_SUBMIT_TKT_REQUEST;
struct _KERB_TICKET_CACHE_INFO;
struct _KERB_TICKET_CACHE_INFO_EX;
struct _KERB_TICKET_CACHE_INFO_EX2;
struct _KERB_TICKET_CACHE_INFO_EX3;
struct _KERB_TICKET_LOGON;
struct _KERB_TICKET_PROFILE;
struct _KERB_TICKET_UNLOCK_LOGON;
struct _KERB_TRANSFER_CRED_REQUEST;
struct _KERNEL_USER_TIMES;
struct _KERNPAIR;
struct _KEYBOARD_CORRECTION_INFO;
struct _KEY_BASIC_INFORMATION;
struct _KEY_CACHED_INFORMATION;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _KEY_EVENT_RECORD;
struct _KEY_FLAGS_INFORMATION;
struct _KEY_FULL_INFORMATION;
struct _KEY_HANDLE_TAGS_INFORMATION;
struct _KEY_LAYER_INFORMATION;
struct _KEY_NAME_INFORMATION;
struct _KEY_NODE_INFORMATION;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
struct _KEY_SET_LAYER_INFORMATION;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct _KEY_TRUST_INFORMATION;
struct _KEY_TYPE_SUBTYPE;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _KEY_VALUE_ENTRY;
struct _KEY_VALUE_FULL_INFORMATION;
struct _KEY_VALUE_LAYER_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct _KEY_WRITE_TIME_INFORMATION;
struct _KLDR_DATA_TABLE_ENTRY;
struct _KLDR_DATA_TABLE_ENTRY32;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _KLOCK_QUEUE_HANDLE;
struct _KNONVOLATILE_CONTEXT_POINTERS;
struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64;
struct _KSPIN_LOCK_QUEUE;
struct _KSYSTEM_TIME;
struct _KTMOBJECT_CURSOR;
struct _KUSER_SHARED_DATA;
struct _LANA_ENUM;
struct _LAST_EXCEPTION_LOG;
struct _LBLOB;
struct _LDBL12;
struct _LDOUBLE;
struct _LDRP_CSLIST;
struct _LDRP_LOAD_CONTEXT;
struct _LDR_DATA_TABLE_ENTRY;
struct _LDR_DATA_TABLE_ENTRY32;
struct _LDR_DATA_TABLE_ENTRY64;
struct _LDR_DDAG_NODE;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct _LDR_FAILURE_DATA;
struct _LDR_IMPORT_CALLBACK_INFO;
struct _LDR_RESLOADER_RET;
struct _LDR_SECTION_INFO;
struct _LDR_SERVICE_TAG_RECORD;
struct _LDR_VERIFY_IMAGE_INFO;
struct _LDT_ENTRY;
struct _LEAP_SECOND_DATA;
struct _LEAP_SECOND_DATA_REGISTRY_ENTRY;
struct _LEARNING_MODE_OBJECT_INFORMATION;
struct _LINK_TRACKING_INFORMATION;
struct _LIST_ENTRY;
struct _LOAD_ASDATA_TABLE;
struct _LOAD_DLL_DEBUG_INFO;
struct _LONGDOUBLE;
struct _LONG_SIZEDARR;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct _LPC_CLIENT_DIED_MSG;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct _LSA_AUTH_INFORMATION;
struct _LSA_ENUMERATION_INFORMATION;
struct _LSA_FOREST_TRUST_BINARY_DATA;
struct _LSA_FOREST_TRUST_COLLISION_INFORMATION;
struct _LSA_FOREST_TRUST_COLLISION_RECORD;
struct _LSA_FOREST_TRUST_DOMAIN_INFO;
struct _LSA_FOREST_TRUST_INFORMATION;
struct _LSA_FOREST_TRUST_RECORD;
struct _LSA_LAST_INTER_LOGON_INFO;
struct _LSA_REFERENCED_DOMAIN_LIST;
struct _LSA_TRANSLATED_NAME;
struct _LSA_TRANSLATED_SID;
struct _LSA_TRANSLATED_SID2;
struct _LSA_TRUST_INFORMATION;
struct _LUID;
struct _LUID_AND_ATTRIBUTES;
struct _LUNICODE_STRING;
struct _LUTF8_STRING;
struct _M128A;
struct _MAGN_COLOR_TRANSFORM;
struct _MAGN_DEST_TRANSFORM;
struct _MAGN_INPUT_TRANSFORM;
struct _MAGN_LENS_FLAGS;
struct _MAGN_OFFSET_TEXTURE;
struct _MAGN_SHARED_TEXTURE;
struct _MAGN_SHARED_TEXTURES;
struct _MAGN_SHARED_TEXTURES_P;
struct _MAGN_SOURCE_TRANSFORM;
struct _MAGN_UPDATED_TEXTURES;
struct _MAGN_WINDOW_FILTERLIST;
struct _MAGN_WINDOW_FILTERLIST_P;
struct _MALLOC_FREE_STRUCT;
struct _MANAGE_HOT_PATCH_LOAD_PATCH;
struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES;
struct _MANAGE_HOT_PATCH_QUERY_PATCHES;
struct _MANAGE_HOT_PATCH_UNLOAD_PATCH;
struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY;
struct _MARGINS;
struct _MAT2;
struct _MCA_EXCEPTION;
struct _MCGEN_TRACE_CONTEXT;
struct _MEMORYSTATUS;
struct _MEMORYSTATUSEX;
struct _MEMORY_BASIC_INFORMATION;
struct _MEMORY_BASIC_INFORMATION32;
struct _MEMORY_BASIC_INFORMATION64;
struct _MEMORY_COMBINE_INFORMATION;
struct _MEMORY_COMBINE_INFORMATION_EX;
struct _MEMORY_COMBINE_INFORMATION_EX2;
struct _MEMORY_ENCLAVE_IMAGE_INFORMATION;
struct _MEMORY_EXHAUSTION_INFORMATION;
struct _MEMORY_FRAME_INFORMATION;
struct _MEMORY_IMAGE_INFORMATION;
struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION;
struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION;
struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION;
struct _MEMORY_PARTITION_PAGEFILE_INFORMATION;
struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION;
struct _MEMORY_PARTITION_PAGE_RANGE;
struct _MEMORY_PARTITION_TRANSFER_INFORMATION;
struct _MEMORY_PRIORITY_INFORMATION;
struct _MEMORY_RANGE_ENTRY;
struct _MEMORY_REGION_INFORMATION;
struct _MEMORY_SCRUB_INFORMATION;
struct _MEMORY_SHARED_COMMIT_INFORMATION;
struct _MEMORY_WORKING_SET_BLOCK;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
struct _MEMORY_WORKING_SET_INFORMATION;
struct _MEM_ADDRESS_REQUIREMENTS;
struct _MENU_EVENT_RECORD;
struct _MESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA;
struct _MESSAGE_RESOURCE_ENTRY;
struct _MIDL_FORMAT_STRING;
struct _MIDL_INTERCEPTION_INFO;
struct _MIDL_INTERFACE_METHOD_PROPERTIES;
struct _MIDL_METHOD_PROPERTY;
struct _MIDL_METHOD_PROPERTY_MAP;
struct _MIDL_SERVER_INFO_;
struct _MIDL_STUBLESS_PROXY_INFO;
struct _MIDL_STUB_DESC;
struct _MIDL_STUB_MESSAGE;
struct _MIDL_SYNTAX_INFO;
struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO;
struct _MIT_CURSOR_MANAGEMENT_MESSAGE;
struct _MIT_CURSOR_MANAGEMENT_POSITIONINFO;
struct _MIT_CURSOR_MANAGEMENT_SHELLCLIPINFO;
struct _MIT_CURSOR_MANAGEMENT_SUPPRESSCURSORINFO;
struct _MIT_DEVICE_IDENTIFICATION_MESSAGE;
struct _MIT_DEVICE_IDENTITY_CREATED;
struct _MIT_DEVICE_IDENTITY_EXTRA_INFO;
struct _MIT_INPUT_CONFIG_MESSAGE;
struct _MIT_INPUT_FOCUS_MESSAGE;
struct _MIT_INPUT_INTEROP_MESSAGE;
struct _MIT_INVALIDATE_INPUT_MESSAGE;
struct _MIT_KEYBOARD_INPUT_ATTEMPTED_MESSAGE;
struct _MIT_KEYBOARD_INPUT_MESSAGE;
struct _MIT_POINTER_INPUT_DOWN_MESSAGE;
struct _MMCKINFO;
struct _MMIOINFO;
struct _MMPFN_IDENTITY;
struct _MM_ETW_PAGE_INFO;
struct _MM_ETW_PAGE_INFO_EX;
struct _MM_ETW_WORKING_SET_PFN_RUNDOWN;
struct _MODEMDEVCAPS;
struct _MODEMSETTINGS;
struct _MONITORCONFIG;
struct _MONITOR_INFO_1A;
struct _MONITOR_INFO_1W;
struct _MONITOR_INFO_2A;
struct _MONITOR_INFO_2W;
struct _MONITOR_THERMAL_BRIGHTNESS_LIMIT;
struct _MONITOR_THERMAL_BRIGHTNESS_LIMIT_LIST;
struct _MOUSE_EVENT_RECORD;
struct _MOVE_FILE_DATA32;
struct _MSGENTRY;
struct _MSV1_0_AV_PAIR;
struct _MSV1_0_CHANGEPASSWORD_REQUEST;
struct _MSV1_0_CHANGEPASSWORD_RESPONSE;
struct _MSV1_0_CREDENTIAL_KEY;
struct _MSV1_0_INTERACTIVE_LOGON;
struct _MSV1_0_INTERACTIVE_PROFILE;
struct _MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL;
struct _MSV1_0_LM20_LOGON;
struct _MSV1_0_LM20_LOGON_PROFILE;
struct _MSV1_0_NTLM3_RESPONSE;
struct _MSV1_0_PASSTHROUGH_REQUEST;
struct _MSV1_0_PASSTHROUGH_RESPONSE;
struct _MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL;
struct _MSV1_0_S4U_LOGON;
struct _MSV1_0_SUBAUTH_LOGON;
struct _MSV1_0_SUBAUTH_REQUEST;
struct _MSV1_0_SUBAUTH_RESPONSE;
struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL;
struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2;
struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3;
struct _MUICCENTRY;
struct _MUICCHEADER;
struct _MUILANGCFGLIST;
struct _MUILANGCFGNODE;
struct _MUILANGINFO;
struct _MUILANGLIST;
struct _MUILANGLISTNODE;
struct _MUILANGUAGES;
struct _MUIREGISTRYINFO;
struct _MUISTRINGPOOL;
struct _MULTIMEDIACONFIG;
struct _MULTI_TIME;
struct _MUTANT_BASIC_INFORMATION;
struct _MUTANT_OWNER_INFORMATION;
struct _MilMatrix3x2D;
struct _MouseInterceptorData;
struct _MouseProcessorData;
struct _MouseProcessorInterceptionCallout;
struct _NAME_BUFFER;
struct _NASICONFIGA;
struct _NASICONFIGW;
struct _NCB;
struct _NCEVALUATE;
struct _NCPAINTOVERIDE;
struct _NCRYPT_CIPHER_PADDING_INFO;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER;
struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;
struct _NCRYPT_KEY_ATTEST_PADDING_INFO;
struct _NCRYPT_KEY_BLOB_HEADER;
struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO;
struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;
struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS;
struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT;
struct _NCTHEMEMET;
struct _NCWNDMET;
struct _NCryptAlgorithmName;
struct _NDR_ASYNC_MESSAGE;
struct _NDR_CORRELATION_INFO;
struct _NDR_CS_ROUTINES;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct _NDR_EXPR_DESC;
struct _NDR_PROC_CONTEXT;
struct _NDR_USER_MARSHAL_INFO;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct _NEGOTIATE_CALLER_NAME_REQUEST;
struct _NEGOTIATE_CALLER_NAME_RESPONSE;
struct _NEGOTIATE_PACKAGE_PREFIX;
struct _NEGOTIATE_PACKAGE_PREFIXES;
struct _NETCONNECTINFOSTRUCT;
struct _NETINFOSTRUCT;
struct _NETRESOURCEA;
struct _NETRESOURCEW;
struct _NETWORKCONFIGA;
struct _NETWORKCONFIGW;
struct _NETWORK_APP_INSTANCE_EA;
struct _NLSTABLEINFO;
struct _NMTBCUSTOMDRAW;
struct _NM_UPDOWN;
struct _NON_PAGED_DEBUG_INFO;
struct _NOTIFYICONDATAA;
struct _NOTIFYICONDATAW;
struct _NOTIFYICONIDENTIFIER;
struct _NRESARRAY;
struct _NTFS_STATISTICS;
struct _NTFS_STATISTICS_EX;
struct _NTMW_INTERNAL;
struct _NT_TIB;
struct _NT_TIB32;
struct _NT_TIB64;
struct _NUMA_NODE_RELATIONSHIP;
struct _NV_MEMORY_RANGE;
struct _NWLOGONADMIN;
struct _OBJECTID;
struct _OBJECT_ATTRIBUTES;
struct _OBJECT_ATTRIBUTES32;
struct _OBJECT_ATTRIBUTES64;
struct _OBJECT_BASIC_INFORMATION;
struct _OBJECT_DIRECTORY_INFORMATION;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct _OBJECT_NAME_INFORMATION;
struct _OBJECT_TYPES_INFORMATION;
struct _OBJECT_TYPE_INFORMATION;
struct _OBJECT_TYPE_LIST;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct _OCSP_BASIC_RESPONSE_INFO;
struct _OCSP_BASIC_REVOKED_INFO;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
struct _OCSP_CERT_ID;
struct _OCSP_REQUEST_ENTRY;
struct _OCSP_REQUEST_INFO;
struct _OCSP_RESPONSE_INFO;
struct _OCSP_SIGNATURE_INFO;
struct _OCSP_SIGNED_REQUEST_INFO;
struct _OEMTDCONFIGA;
struct _OEMTDCONFIGW;
struct _OFNOTIFYA;
struct _OFNOTIFYEXA;
struct _OFNOTIFYEXW;
struct _OFNOTIFYW;
struct _OFSTRUCT;
struct _OLESTREAM;
struct _OLESTREAMVTBL;
struct _OPEN_PRINTER_PROPS_INFOA;
struct _OPEN_PRINTER_PROPS_INFOW;
struct _OPERATION_END_PARAMETERS;
struct _OPERATION_START_PARAMETERS;
struct _OSVERSIONINFOA;
struct _OSVERSIONINFOEX2A;
struct _OSVERSIONINFOEX2W;
struct _OSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW;
struct _OSVERSIONINFOW;
struct _OUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _OVERLAPPED;
struct _OVERLAPPED_ENTRY;
struct _PACKEDEVENTINFO;
struct _PAGEDIR_INFORMATION;
struct _PAGE_PRIORITY_INFORMATION;
struct _PARSE_ERROR_INFO;
struct _PARSE_MESSAGE_CONTEXT;
struct _PARTITION_INFORMATION;
struct _PARTITION_INFORMATION_EX;
struct _PARTITION_INFORMATION_GPT;
struct _PARTITION_INFORMATION_MBR;
struct _PATHNAME_BUFFER;
struct _PDCONFIG2A;
struct _PDCONFIG2W;
struct _PDCONFIG3A;
struct _PDCONFIG3W;
struct _PDCONFIGA;
struct _PDCONFIGW;
struct _PDPARAMSA;
struct _PDPARAMSW;
struct _PEB;
struct _PEBS_DS_SAVE_AREA;
struct _PEB_LDR_DATA;
struct _PERFINFO_GROUPMASK;
struct _PERFORMANCE_DATA;
struct _PERF_BIN;
struct _PERF_COUNTER_BLOCK;
struct _PERF_COUNTER_DEFINITION;
struct _PERF_DATA_BLOCK;
struct _PERF_INSTANCE_DEFINITION;
struct _PERF_OBJECT_TYPE;
struct _PERSISTENT_RESERVE_COMMAND;
struct _PERSIST_FOLDER_TARGET_INFO;
struct _PHYSICAL_CHANNEL_RUN;
struct _PHYSICAL_ELEMENT_STATUS;
struct _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR;
struct _PHYSICAL_ELEMENT_STATUS_REQUEST;
struct _PKCS12_PBES2_EXPORT_PARAMS;
struct _PKU2U_CERTIFICATE_S4U_LOGON;
struct _PKU2U_CERT_BLOB;
struct _PKU2U_CREDUI_CONTEXT;
struct _PLEX_READ_DATA_REQUEST;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct _PLUGPLAY_EVENT_BLOCK;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PMD;
struct _POINTFLOAT;
struct _POINTL;
struct _POLICY_ACCOUNT_DOMAIN_INFO;
struct _POLICY_AUDIT_CATEGORIES_INFO;
struct _POLICY_AUDIT_EVENTS_INFO;
struct _POLICY_AUDIT_FULL_QUERY_INFO;
struct _POLICY_AUDIT_FULL_SET_INFO;
struct _POLICY_AUDIT_LOG_INFO;
struct _POLICY_AUDIT_SID_ARRAY;
struct _POLICY_AUDIT_SUBCATEGORIES_INFO;
struct _POLICY_DEFAULT_QUOTA_INFO;
struct _POLICY_DNS_DOMAIN_INFO;
struct _POLICY_DOMAIN_EFS_INFO;
struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO;
struct _POLICY_LSA_SERVER_ROLE_INFO;
struct _POLICY_MACHINE_ACCT_INFO;
struct _POLICY_MODIFICATION_INFO;
struct _POLICY_PD_ACCOUNT_INFO;
struct _POLICY_PRIMARY_DOMAIN_INFO;
struct _POLICY_REPLICA_SOURCE_INFO;
struct _POLICY_TS_MACHINE;
struct _POLICY_TS_MACHINE_OLD;
struct _POLICY_TS_USER;
struct _POOLED_USAGE_AND_LIMITS;
struct _PORT_DATA_ENTRY;
struct _PORT_DATA_INFORMATION;
struct _PORT_INFO_1A;
struct _PORT_INFO_1W;
struct _PORT_INFO_2A;
struct _PORT_INFO_2W;
struct _PORT_INFO_3A;
struct _PORT_INFO_3W;
struct _PORT_MESSAGE;
struct _PORT_VIEW;
struct _POWER_IDLE_RESILIENCY;
struct _POWER_MONITOR_INVOCATION;
struct _POWER_PLATFORM_INFORMATION;
struct _POWER_SESSION_CONNECT;
struct _POWER_SESSION_RIT_STATE;
struct _POWER_SESSION_TIMEOUTS;
struct _POWER_SESSION_WINLOGON;
struct _POWER_THROTTLING_PROCESS_STATE;
struct _POWER_THROTTLING_THREAD_STATE;
struct _POWER_USER_PRESENCE;
struct _PO_SPR_ACTIVE_SESSION_DATA;
struct _PO_WAKE_SOURCE_DEVICE;
struct _PO_WAKE_SOURCE_FIXED;
struct _PO_WAKE_SOURCE_HEADER;
struct _PO_WAKE_SOURCE_HISTORY;
struct _PO_WAKE_SOURCE_INFO;
struct _PO_WAKE_SOURCE_INTERNAL;
struct _PO_WAKE_SOURCE_TIMER;
struct _PREFIX_TABLE;
struct _PREFIX_TABLE_ENTRY;
struct _PREVENT_MEDIA_REMOVAL;
struct _PRINTER_CONNECTION_INFO_1A;
struct _PRINTER_CONNECTION_INFO_1W;
struct _PRINTER_DEFAULTSA;
struct _PRINTER_DEFAULTSW;
struct _PRINTER_ENUM_VALUESA;
struct _PRINTER_ENUM_VALUESW;
struct _PRINTER_INFO_1A;
struct _PRINTER_INFO_1W;
struct _PRINTER_INFO_2A;
struct _PRINTER_INFO_2W;
struct _PRINTER_INFO_3;
struct _PRINTER_INFO_4A;
struct _PRINTER_INFO_4W;
struct _PRINTER_INFO_5A;
struct _PRINTER_INFO_5W;
struct _PRINTER_INFO_6;
struct _PRINTER_INFO_7A;
struct _PRINTER_INFO_7W;
struct _PRINTER_INFO_8A;
struct _PRINTER_INFO_8W;
struct _PRINTER_INFO_9A;
struct _PRINTER_INFO_9W;
struct _PRINTER_NOTIFY_INFO;
struct _PRINTER_NOTIFY_INFO_DATA;
struct _PRINTER_NOTIFY_OPTIONS;
struct _PRINTER_NOTIFY_OPTIONS_TYPE;
struct _PRINTER_OPTIONSA;
struct _PRINTER_OPTIONSW;
struct _PRINTPROCESSOR_CAPS_1;
struct _PRINTPROCESSOR_CAPS_2;
struct _PRINTPROCESSOR_INFO_1A;
struct _PRINTPROCESSOR_INFO_1W;
struct _PRIVILEGE_SET;
struct _PRIVKEYVER3;
struct _PROCESSOR_GROUP_INFO;
struct _PROCESSOR_IDLE_STATE;
struct _PROCESSOR_IDLE_STATES;
struct _PROCESSOR_NUMBER;
struct _PROCESSOR_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_PROFILE_CONTROL_AREA;
struct _PROCESSOR_RELATIONSHIP;
struct _PROCESS_ACCESS_TOKEN;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_BASIC_INFORMATION64;
struct _PROCESS_CHILD_PROCESS_INFORMATION;
struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION;
struct _PROCESS_COMMIT_RELEASE_INFORMATION;
struct _PROCESS_CYCLE_TIME_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct _PROCESS_DISK_COUNTERS;
struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION;
struct _PROCESS_ENERGY_TRACKING_STATE;
struct _PROCESS_ENERGY_VALUES;
struct _PROCESS_ENERGY_VALUES_EXTENSION;
struct _PROCESS_EXCEPTION_PORT;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct _PROCESS_EXTENDED_ENERGY_VALUES;
struct _PROCESS_FAULT_INFORMATION;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct _PROCESS_HANDLE_INFORMATION;
struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION;
struct _PROCESS_HANDLE_TABLE_ENTRY_INFO;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _PROCESS_HEAP_ENTRY;
struct _PROCESS_HEAP_INFORMATION;
struct _PROCESS_INFORMATION;
struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION;
struct _PROCESS_JOB_MEMORY_INFO;
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION;
struct _PROCESS_LEAP_SECOND_INFO;
struct _PROCESS_LEAP_SECOND_INFORMATION;
struct _PROCESS_MEMORY_EXHAUSTION_INFO;
struct _PROCESS_MITIGATION_ASLR_POLICY;
struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY;
struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct _PROCESS_MITIGATION_DEP_POLICY;
struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY;
struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct _PROCESS_MITIGATION_POLICY_INFORMATION;
struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY;
struct _PROCESS_POWER_THROTTLING_STATE;
struct _PROCESS_PRIORITY_CLASS;
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
struct _PROCESS_SECURITY_DOMAIN_INFORMATION;
struct _PROCESS_SESSION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX;
struct _PROCESS_TELEMETRY_ID_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
struct _PROCESS_UPTIME_INFORMATION;
struct _PROCESS_WAKE_INFORMATION;
struct _PROCESS_WINDOW_INFORMATION;
struct _PROCESS_WORKING_SET_CONTROL;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _PROC_THREAD_ATTRIBUTE_LIST;
struct _PROGRAMCALL;
struct _PROPSHEETHEADERA_V1;
struct _PROPSHEETHEADERA_V2;
struct _PROPSHEETHEADERW_V1;
struct _PROPSHEETHEADERW_V2;
struct _PROPSHEETPAGEA;
struct _PROPSHEETPAGEA_V1;
struct _PROPSHEETPAGEA_V2;
struct _PROPSHEETPAGEA_V3;
struct _PROPSHEETPAGEW;
struct _PROPSHEETPAGEW_V1;
struct _PROPSHEETPAGEW_V2;
struct _PROPSHEETPAGEW_V3;
struct _PROTOCOLCOUNTERS;
struct _PROTOCOLSTATUS;
struct _PROTOCOLSTATUSEX;
struct _PROVIDOR_INFO_1A;
struct _PROVIDOR_INFO_1W;
struct _PROVIDOR_INFO_2A;
struct _PROVIDOR_INFO_2W;
struct _PROV_ENUMALGS;
struct _PROV_ENUMALGS_EX;
struct _PSFEATURE_CUSTPAPER;
struct _PSFEATURE_OUTPUT;
struct _PSHNOTIFY;
struct _PSINJECTDATA;
struct _PSP;
struct _PS_ATTRIBUTE;
struct _PS_ATTRIBUTE_LIST;
struct _PS_BNO_ISOLATION_PARAMETERS;
struct _PS_CPU_QUOTA_QUERY_ENTRY;
struct _PS_CPU_QUOTA_QUERY_INFORMATION;
struct _PS_CPU_QUOTA_SET_INFORMATION;
struct _PS_CREATE_INFO;
struct _PS_MEMORY_RESERVE;
struct _PS_MITIGATION_AUDIT_OPTIONS_MAP;
struct _PS_MITIGATION_OPTIONS_MAP;
struct _PS_PKG_CLAIM;
struct _PS_PROTECTION;
struct _PS_STD_HANDLE_INFO;
struct _PS_SYSTEM_DLL_INIT_BLOCK;
struct _PUBKEY;
struct _PUBKEYVER3;
struct _PUBLICKEYSTRUC;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _PnpNotification;
struct _PnpNotificationBulk;
struct _QCMINFO;
struct _QCMINFO_IDMAP;
struct _QCMINFO_IDMAP_PLACEMENT;
struct _QIMSG;
struct _QUAD;
struct _QUERY_BAD_RANGES_INPUT;
struct _QUERY_BAD_RANGES_INPUT_RANGE;
struct _QUERY_BAD_RANGES_OUTPUT;
struct _QUERY_BAD_RANGES_OUTPUT_RANGE;
struct _QUERY_FILE_LAYOUT_INPUT;
struct _QUERY_FILE_LAYOUT_OUTPUT;
struct _QUERY_PERFORMANCE_COUNTER_FLAGS;
struct _QUERY_SERVICE_CONFIGA;
struct _QUERY_SERVICE_CONFIGW;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _QUERY_STORAGE_RESERVE_INPUT;
struct _QUERY_STORAGE_RESERVE_OUTPUT;
struct _QUOTA_LIMITS;
struct _QUOTA_LIMITS_EX;
struct _RASTERIZER_STATUS;
struct _RB_HITTESTINFO;
struct _RC_CONFIG;
struct _RDR_CALLOUT_STATE;
struct _READ_ELEMENT_ADDRESS_INFO;
struct _REARRANGE_FILE_DATA;
struct _REARRANGE_FILE_DATA32;
struct _REASON;
struct _REASONDATA;
struct _REASON_BUFFER;
struct _REASON_CONTEXT;
struct _REASON_INITIALISER;
struct _REASSIGN_BLOCKS;
struct _REASSIGN_BLOCKS_EX;
struct _RECTL;
struct _REDIRECTION_DESCRIPTOR;
struct _REDIRECTION_FUNCTION_DESCRIPTOR;
struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER;
struct _REFS_DEALLOCATE_RANGES_RANGE;
struct _REFS_SMR_VOLUME_GC_PARAMETERS;
struct _REFS_SMR_VOLUME_INFO_OUTPUT;
struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER;
struct _REG_NOTIFY_INFORMATION;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
struct _REMOTE_NAME_INFOA;
struct _REMOTE_NAME_INFOW;
struct _REMOTE_PORT_VIEW;
struct _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST;
struct _REMSECURITY_ATTRIBUTES;
struct _REPAIR_COPIES_INPUT;
struct _REPAIR_COPIES_OUTPUT;
struct _REPAIR_STORAGE_RESERVE_INPUT;
struct _REPARSE_DATA_BUFFER;
struct _REPARSE_DATA_BUFFER_EX;
struct _REPARSE_GUID_DATA_BUFFER;
struct _REPARSE_INDEX_KEY;
struct _REPARSE_POINT_INFORMATION;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _RESOLVED_USERNAME_INFO;
struct _RESOLVED_USERNAME_LIST;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct _RESUME_PERFORMANCE;
struct _RETRIEVAL_POINTER_BASE;
struct _RGNDATA;
struct _RGNDATAHEADER;
struct _RIP_INFO;
struct _ROOT_INFO_LUID;
struct _RPC_ASYNC_STATE;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
struct _RPC_BINDING_VECTOR;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
struct _RPC_CLIENT_INTERFACE;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
struct _RPC_IF_ID;
struct _RPC_MESSAGE;
struct _RPC_POLICY;
struct _RPC_PROTSEQ_ENDPOINT;
struct _RPC_PROTSEQ_VECTORA;
struct _RPC_PROTSEQ_VECTORW;
struct _RPC_SECURITY_QOS;
struct _RPC_SECURITY_QOS_V2_A;
struct _RPC_SECURITY_QOS_V2_W;
struct _RPC_SECURITY_QOS_V3_A;
struct _RPC_SECURITY_QOS_V3_W;
struct _RPC_SECURITY_QOS_V4_A;
struct _RPC_SECURITY_QOS_V4_W;
struct _RPC_SECURITY_QOS_V5_A;
struct _RPC_SECURITY_QOS_V5_W;
struct _RPC_SEC_CONTEXT_KEY_INFO;
struct _RPC_SERVER_INTERFACE;
struct _RPC_SYNTAX_IDENTIFIER;
struct _RPC_TRANSFER_SYNTAX;
struct _RPC_VERSION;
struct _RSAPUBKEY;
struct _RTLP_CURDIR_REF;
struct _RTLP_HEAP_SERIALIZED_MAPPING;
struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER;
struct _RTLP_HEAP_TAGGING_INFO;
struct _RTLP_PROCESS_REFLECTION_CONTEXT;
struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION;
struct _RTLP_TAG_INFO;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct _RTL_AVL_TABLE;
struct _RTL_AVL_TREE;
struct _RTL_BACKOFF;
struct _RTL_BALANCED_LINKS;
struct _RTL_BALANCED_NODE;
struct _RTL_BARRIER;
struct _RTL_BITMAP;
struct _RTL_BITMAP_EX;
struct _RTL_BITMAP_RUN;
struct _RTL_BSD_ITEM;
struct _RTL_BUFFER;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct _RTL_CIRCULAR_LIST_HEAD;
struct _RTL_CONDITION_VARIABLE;
struct _RTL_CRITICAL_SECTION;
struct _RTL_CRITICAL_SECTION32;
struct _RTL_CRITICAL_SECTION64;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct _RTL_DEBUG_INFORMATION;
struct _RTL_DEBUG_INFORMATION32;
struct _RTL_DISK_SPACE_INFO;
struct _RTL_DISK_SPEED_INFO;
struct _RTL_DISK_WRITE_CONSTRAINT_INFO;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_DYNAMIC_HASH_TABLE;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _RTL_GENERIC_TABLE;
struct _RTL_HANDLE_TABLE;
struct _RTL_HANDLE_TABLE_ENTRY;
struct _RTL_HEAP_ENTRY;
struct _RTL_HEAP_INFORMATION;
struct _RTL_HEAP_MEMORY_LIMIT_DATA;
struct _RTL_HEAP_MEMORY_LIMIT_INFO;
struct _RTL_HEAP_PARAMETERS;
struct _RTL_HEAP_STACK_CONTROL;
struct _RTL_HEAP_STACK_QUERY;
struct _RTL_HEAP_TAG;
struct _RTL_HEAP_TAG_INFO;
struct _RTL_HEAP_WALK_ENTRY;
struct _RTL_IMAGE_MITIGATION_ASLR_POLICY;
struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY;
struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct _RTL_IMAGE_MITIGATION_DEP_POLICY;
struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY;
struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY;
struct _RTL_IMAGE_MITIGATION_HEAP_POLICY;
struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY;
struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY;
struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _RTL_IMAGE_POLICY_METADATA;
struct _RTL_LFG_RNG_STATE;
struct _RTL_MODULE_BASIC_INFO;
struct _RTL_MODULE_EXTENDED_INFO;
struct _RTL_PERTHREAD_CURDIR;
struct _RTL_PHYSICAL_MEMORY_INFO;
struct _RTL_PROCESS_BACKTRACES;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct _RTL_PROCESS_LOCKS;
struct _RTL_PROCESS_LOCK_INFORMATION;
struct _RTL_PROCESS_MODULES;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _RTL_PROTECTED_ACCESS;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS;
struct _RTL_QUERY_REGISTRY_TABLE;
struct _RTL_RB_TREE;
struct _RTL_RELATIVE_NAME_U;
struct _RTL_RESOURCE;
struct _RTL_RETPOLINE_BINARY_INFO;
struct _RTL_RETPOLINE_RELOCATION_INDEX;
struct _RTL_RETPOLINE_ROUTINES;
struct _RTL_RVA_LIST;
struct _RTL_RVA_LIST_ITERATOR;
struct _RTL_RXACT_CONTEXT;
struct _RTL_RXACT_LOG;
struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE;
struct _RTL_SEGMENT_HEAP_PARAMETERS;
struct _RTL_SPARSE_BITMAP_CTX;
struct _RTL_SPARSE_BITMAP_PARAMETER;
struct _RTL_SPARSE_BITMAP_RANGE;
struct _RTL_SPARSE_BITMAP_RUN;
struct _RTL_SPLAY_LINKS;
struct _RTL_SRWLOCK;
struct _RTL_STACK_CONTEXT;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _RTL_TIME_ZONE_INFORMATION;
struct _RTL_TRACE_BLOCK;
struct _RTL_TRACE_DATABASE;
struct _RTL_TRACE_ENUMERATE;
struct _RTL_UMS_COMPLETION_LIST;
struct _RTL_UMS_CONTEXT;
struct _RTL_UMS_SCHEDULER_STARTUP_INFO;
struct _RTL_UNICODE_STRING_BUFFER;
struct _RTL_UNLOAD_EVENT_TRACE;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct _RTL_UNLOAD_EVENT_TRACE64;
struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS;
struct _RTL_USER_PROCESS_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _RTL_WORK_ON_BEHALF_TICKET_EX;
struct _RawKeyboardInputMessage;
struct _RawMouseInputMessage;
struct _RemotableHandle;
struct _SCARD_ATRMASK;
struct _SCARD_IO_REQUEST;
struct _SCARD_T0_COMMAND;
struct _SCARD_T0_REQUEST;
struct _SCARD_T1_REQUEST;
struct _SCHANNEL_ALG;
struct _SCM_INTERLEAVED_PD_INFO;
struct _SCM_LD_INTERLEAVE_SET_INFO;
struct _SCM_LOGICAL_DEVICES;
struct _SCM_LOGICAL_DEVICE_INSTANCE;
struct _SCM_PD_DESCRIPTOR_HEADER;
struct _SCM_PD_DEVICE_HANDLE;
struct _SCM_PD_DEVICE_INFO;
struct _SCM_PD_DEVICE_SPECIFIC_INFO;
struct _SCM_PD_DEVICE_SPECIFIC_PROPERTY;
struct _SCM_PD_FIRMWARE_ACTIVATE;
struct _SCM_PD_FIRMWARE_DOWNLOAD;
struct _SCM_PD_FIRMWARE_INFO;
struct _SCM_PD_FIRMWARE_SLOT_INFO;
struct _SCM_PD_HEALTH_NOTIFICATION_DATA;
struct _SCM_PD_LOCATION_STRING;
struct _SCM_PD_MANAGEMENT_STATUS;
struct _SCM_PD_PASSTHROUGH_INPUT;
struct _SCM_PD_PASSTHROUGH_INVDIMM_INPUT;
struct _SCM_PD_PASSTHROUGH_INVDIMM_OUTPUT;
struct _SCM_PD_PASSTHROUGH_OUTPUT;
struct _SCM_PD_PROPERTY_QUERY;
struct _SCM_PD_REINITIALIZE_MEDIA_INPUT;
struct _SCM_PD_REINITIALIZE_MEDIA_OUTPUT;
struct _SCM_PHYSICAL_DEVICES;
struct _SCM_PHYSICAL_DEVICE_INSTANCE;
struct _SCM_REGION;
struct _SCM_REGIONS;
struct _SCONTEXT_QUEUE;
struct _SCOPE_TABLE_AMD64;
struct _SCOPE_TABLE_ARM;
struct _SCOPE_TABLE_ARM64;
struct _SCRUB_DATA_INPUT;
struct _SCRUB_DATA_OUTPUT;
struct _SCRUB_PARITY_EXTENT;
struct _SCRUB_PARITY_EXTENT_DATA;
struct _SC_ACTION;
struct _SC_NOTIFICATION_REGISTRATION;
struct _SD_CHANGE_MACHINE_SID_INPUT;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
struct _SD_ENUM_SDS_ENTRY;
struct _SD_ENUM_SDS_INPUT;
struct _SD_ENUM_SDS_OUTPUT;
struct _SD_GLOBAL_CHANGE_INPUT;
struct _SD_GLOBAL_CHANGE_OUTPUT;
struct _SD_QUERY_STATS_INPUT;
struct _SD_QUERY_STATS_OUTPUT;
struct _SD_VCBIND;
struct _SECTIONBASICINFO;
struct _SECTION_IMAGE_INFORMATION;
struct _SECTION_IMAGE_INFORMATION32;
struct _SECTION_IMAGE_INFORMATION64;
struct _SECTION_INTERNAL_IMAGE_INFORMATION;
struct _SECURITY_ATTRIBUTES;
struct _SECURITY_CAPABILITIES;
struct _SECURITY_DESCRIPTOR;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _SECURITY_LOGON_SESSION_DATA;
struct _SECURITY_OBJECT_AI_PARAMS;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _SECURITY_SEED_AND_LENGTH;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION;
struct _SEMAPHORE_BASIC_INFORMATION;
struct _SENDCMDINPARAMS;
struct _SENDCMDOUTPARAMS;
struct _SERVERSILO_BASIC_INFORMATION;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct _SERVICE_DESCRIPTIONA;
struct _SERVICE_DESCRIPTIONW;
struct _SERVICE_FAILURE_ACTIONSA;
struct _SERVICE_FAILURE_ACTIONSW;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
struct _SERVICE_LAUNCH_PROTECTED_INFO;
struct _SERVICE_NOTIFY_1;
struct _SERVICE_NOTIFY_2A;
struct _SERVICE_NOTIFY_2W;
struct _SERVICE_PREFERRED_NODE_INFO;
struct _SERVICE_PRESHUTDOWN_INFO;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct _SERVICE_SID_INFO;
struct _SERVICE_START_REASON;
struct _SERVICE_STATUS;
struct _SERVICE_STATUS_PROCESS;
struct _SERVICE_TABLE_ENTRYA;
struct _SERVICE_TABLE_ENTRYW;
struct _SERVICE_TIMECHANGE_INFO;
struct _SERVICE_TRIGGER;
struct _SERVICE_TRIGGER_INFO;
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;
struct _SESSIONDATAW;
struct _SESSIONIDA;
struct _SESSIONIDW;
struct _SESSION_ARBITRATION_INFO;
struct _SESSION_BUFFER;
struct _SESSION_HEADER;
struct _SETJMP_FLOAT128;
struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT;
struct _SET_DISK_ATTRIBUTES;
struct _SET_PARTITION_INFORMATION;
struct _SET_PARTITION_INFORMATION_EX;
struct _SET_PURGE_FAILURE_MODE_INPUT;
struct _SE_ACCESS_REPLY;
struct _SE_ACCESS_REQUEST;
struct _SE_ADT_ACCESS_REASON;
struct _SE_ADT_CLAIMS;
struct _SE_ADT_OBJECT_TYPE;
struct _SE_ADT_PARAMETER_ARRAY;
struct _SE_ADT_PARAMETER_ARRAY_ENTRY;
struct _SE_ADT_PARAMETER_ARRAY_EX;
struct _SE_AUDIT_INFO;
struct _SE_IMPERSONATION_STATE;
struct _SE_LEARNING_MODE_USER_OBJECT_DATA;
struct _SE_PACKAGE_CAPABILITY_INFO;
struct _SE_SECURITY_DESCRIPTOR;
struct _SE_SET_FILE_CACHE_INFORMATION;
struct _SE_TOKEN_USER;
struct _SFVM_HELPTOPIC_DATA;
struct _SFVM_PROPPAGE_DATA;
struct _SFV_CREATE;
struct _SHAKETHRESHOLD;
struct _SHARED_VIRTUAL_DISK_SUPPORT;
struct _SHCREATEPROCESSINFOW;
struct _SHChangeDWORDAsIDList;
struct _SHChangeMenuAsIDList;
struct _SHChangeNotifyEntry;
struct _SHChangeUpdateImageIDList;
struct _SHDESCRIPTIONID;
struct _SHDRC;
struct _SHELLDETAILS;
struct _SHELLEXECUTEINFOA;
struct _SHELLEXECUTEINFOW;
struct _SHELL_WINDOWMANAGEMENT_CALLOUT_INFO;
struct _SHELL_WINDOWMANAGEMENT_NOTIFY_INFO;
struct _SHFILEINFOA;
struct _SHFILEINFOW;
struct _SHFILEOPSTRUCTA;
struct _SHFILEOPSTRUCTW;
struct _SHITEMID;
struct _SHNAMEMAPPINGA;
struct _SHNAMEMAPPINGW;
struct _SHORT_SIZEDARR;
struct _SHOW_WINDOW_INFO;
struct _SHQUERYRBINFO;
struct _SHRINK_VOLUME_INFORMATION;
struct _SHSTOCKICONINFO;
struct _SHUFFLE_FILE_DATA;
struct _SHUTDOWN_REASON;
struct _SHUTDOWN_REASON_EX;
struct _SID;
struct _SID_AND_ATTRIBUTES;
struct _SID_AND_ATTRIBUTES_HASH;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SILOOBJECT_BASIC_INFORMATION;
struct _SILOOBJECT_ROOT_DIRECTORY;
struct _SILO_USER_SHARED_DATA;
struct _SIMPLEHAPTICCTRL_FEEDBACK_DATA;
struct _SINGLE_LIST_ENTRY;
struct _SINGLE_LIST_ENTRY32;
struct _SI_COPYFILE;
struct _SLICER_CAPTURE_PARAM;
struct _SLICER_CAPTURE_RESULT;
struct _SLICER_SHARED_TEXTURE;
struct _SLICER_SHARED_TEXTURES;
struct _SLIST_ENTRY;
struct _SL_APPX_CACHE;
struct _SL_APPX_CACHE_VALUE_DESCRIPTOR;
struct _SL_HWID_DEVICE_INFO;
struct _SL_KMEM_CACHE;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SMALL_RECT;
struct _SPARSE_OVERALLOCATE_DATA;
struct _SSLINFO;
struct _SSL_ECCKEY_BLOB;
struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _STARTUPINFOA;
struct _STARTUPINFOEXA;
struct _STARTUPINFOEXW;
struct _STARTUPINFOW;
struct _STGMEDIUM_UNION;
struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
struct _STORAGE_ADAPTER_DESCRIPTOR;
struct _STORAGE_ADAPTER_SERIAL_NUMBER;
struct _STORAGE_ALLOCATE_BC_STREAM_INPUT;
struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT;
struct _STORAGE_ATTRIBUTE_MGMT;
struct _STORAGE_BUS_RESET_REQUEST;
struct _STORAGE_COUNTER;
struct _STORAGE_COUNTERS;
struct _STORAGE_CRYPTO_CAPABILITY;
struct _STORAGE_CRYPTO_DESCRIPTOR;
struct _STORAGE_DESCRIPTOR_HEADER;
struct _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR;
struct _STORAGE_DEVICE_DESCRIPTOR;
struct _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR;
struct _STORAGE_DEVICE_ID_DESCRIPTOR;
struct _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR;
struct _STORAGE_DEVICE_LOCATION_DESCRIPTOR;
struct _STORAGE_DEVICE_MANAGEMENT_STATUS;
struct _STORAGE_DEVICE_NUMA_PROPERTY;
struct _STORAGE_DEVICE_NUMBER;
struct _STORAGE_DEVICE_NUMBERS;
struct _STORAGE_DEVICE_NUMBER_EX;
struct _STORAGE_DEVICE_POWER_CAP;
struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
struct _STORAGE_DEVICE_TIERING_DESCRIPTOR;
struct _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT;
struct _STORAGE_DIAGNOSTIC_DATA;
struct _STORAGE_DIAGNOSTIC_REQUEST;
struct _STORAGE_EVENT_NOTIFICATION;
struct _STORAGE_FAILURE_PREDICTION_CONFIG;
struct _STORAGE_GET_BC_PROPERTIES_OUTPUT;
struct _STORAGE_HOTPLUG_INFO;
struct _STORAGE_HW_FIRMWARE_ACTIVATE;
struct _STORAGE_HW_FIRMWARE_DOWNLOAD;
struct _STORAGE_HW_FIRMWARE_DOWNLOAD_V2;
struct _STORAGE_HW_FIRMWARE_INFO;
struct _STORAGE_HW_FIRMWARE_INFO_QUERY;
struct _STORAGE_HW_FIRMWARE_SLOT_INFO;
struct _STORAGE_IDENTIFIER;
struct _STORAGE_IDLE_POWER;
struct _STORAGE_IDLE_POWERUP_REASON;
struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES;
struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA;
struct _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR;
struct _STORAGE_MINIPORT_DESCRIPTOR;
struct _STORAGE_OFFLOAD_READ_OUTPUT;
struct _STORAGE_OFFLOAD_TOKEN;
struct _STORAGE_OFFLOAD_WRITE_OUTPUT;
struct _STORAGE_OPERATIONAL_REASON;
struct _STORAGE_PHYSICAL_ADAPTER_DATA;
struct _STORAGE_PHYSICAL_DEVICE_DATA;
struct _STORAGE_PHYSICAL_NODE_DATA;
struct _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR;
struct _STORAGE_PREDICT_FAILURE;
struct _STORAGE_PRIORITY_HINT_SUPPORT;
struct _STORAGE_PROPERTY_QUERY;
struct _STORAGE_PROTOCOL_COMMAND;
struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR;
struct _STORAGE_PROTOCOL_SPECIFIC_DATA;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
struct _STORAGE_READ_CAPACITY;
struct _STORAGE_RESERVE_AREA_DEFINITION;
struct _STORAGE_RESERVE_AREA_INFO;
struct _STORAGE_RPMB_DATA_FRAME;
struct _STORAGE_RPMB_DESCRIPTOR;
struct _STORAGE_TEMPERATURE_DATA_DESCRIPTOR;
struct _STORAGE_TEMPERATURE_INFO;
struct _STORAGE_TEMPERATURE_THRESHOLD;
struct _STORAGE_TIER;
struct _STORAGE_TIER_REGION;
struct _STORAGE_WRITE_CACHE_PROPERTY;
struct _STORAGE_ZONED_DEVICE_DESCRIPTOR;
struct _STORAGE_ZONE_DESCRIPTOR;
struct _STORAGE_ZONE_GROUP;
struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER;
struct _STREAMS_QUERY_ID_OUTPUT_BUFFER;
struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER;
struct _STREAM_EXTENT_ENTRY;
struct _STREAM_INFORMATION_ENTRY;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass;
struct _STREAM_LAYOUT_ENTRY;
struct _STRING;
struct _STRING32;
struct _STRING64;
struct _STRRET;
struct _SUPPORTED_OS_INFO;
struct _SV2CVW2_PARAMS;
struct _SWITCHBRANCH_BRANCH_DATA;
struct _SWITCHBRANCH_CACHED_MODULE_TABLE;
struct _SWITCHBRANCH_EXPORT_ENTRY;
struct _SWITCHBRANCH_EXPORT_TABLE;
struct _SWITCHBRANCH_MODULE_TABLE;
struct _SWITCHBRANCH_MODULE_TABLE_ENTRY;
struct _SYMBOLTOKENS;
struct _SYNTHESIZE_MOUSE_EXTRA_PAYLOAD;
struct _SYSDBG_BUS_DATA;
struct _SYSDBG_CONTROL_SPACE;
struct _SYSDBG_IO_SPACE;
struct _SYSDBG_LIVEDUMP_CONTROL;
struct _SYSDBG_MSR;
struct _SYSDBG_PHYSICAL;
struct _SYSDBG_TRIAGE_DUMP;
struct _SYSDBG_VIRTUAL;
struct _SYSTEMTIME;
struct _SYSTEM_ACCESS_FILTER_ACE;
struct _SYSTEM_ACPI_AUDIT_INFORMATION;
struct _SYSTEM_ACTIVITY_MODERATION_INFO;
struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS;
struct _SYSTEM_ALARM_ACE;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE;
struct _SYSTEM_AUDIT_ACE;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_BASIC_INFORMATION;
struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _SYSTEM_BIGPOOL_INFORMATION;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1;
struct _SYSTEM_BOOT_GRAPHICS_INFORMATION;
struct _SYSTEM_BOOT_LOGO_INFORMATION;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION;
struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION;
struct _SYSTEM_CONSOLE_INFORMATION;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
struct _SYSTEM_CPU_SET_INFORMATION;
struct _SYSTEM_CPU_SET_TAG_INFORMATION;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct _SYSTEM_DEVICE_DATA_INFORMATION;
struct _SYSTEM_DEVICE_INFORMATION;
struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION;
struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION;
struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION;
struct _SYSTEM_ENTROPY_TIMING_INFORMATION;
struct _SYSTEM_ERROR_PORT_TIMEOUTS;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct _SYSTEM_FILECACHE_INFORMATION;
struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _SYSTEM_FLAGS_INFORMATION;
struct _SYSTEM_FLUSH_INFORMATION;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE;
struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION;
struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct _SYSTEM_INFO;
struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION;
struct _SYSTEM_INTERRUPT_INFORMATION;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT;
struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_FLAGS;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX;
struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION;
struct _SYSTEM_LEAP_SECOND_INFORMATION;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct _SYSTEM_LOOKASIDE_INFORMATION;
struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct _SYSTEM_MANUFACTURING_INFORMATION;
struct _SYSTEM_MEMORY_CHANNEL_INFORMATION;
struct _SYSTEM_MEMORY_INFORMATION;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION;
struct _SYSTEM_MEMORY_USAGE_INFORMATION;
struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE;
struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER;
struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT;
struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT;
struct _SYSTEM_NUMA_INFORMATION;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct _SYSTEM_OBJECT_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION_EX;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION;
struct _SYSTEM_PLATFORM_BINARY_INFORMATION;
struct _SYSTEM_POLICY_INFORMATION;
struct _SYSTEM_POOLTAG;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _SYSTEM_POOL_ENTRY;
struct _SYSTEM_POOL_INFORMATION;
struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION;
struct _SYSTEM_POWER_INFORMATION;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _SYSTEM_POWER_POLICY;
struct _SYSTEM_POWER_STATE_CONTEXT;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _SYSTEM_POWER_STATUS;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
struct _SYSTEM_PREFETCH_STATS;
struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION;
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;
struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_POLICY_INFORMATION;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct _SYSTEM_PROCESS_INFORMATION;
struct _SYSTEM_PROCESS_INFORMATION_EXTENSION;
struct _SYSTEM_PROCESS_TRUST_LABEL_ACE;
struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE;
struct _SYSTEM_ROOT_SILO_INFORMATION;
struct _SYSTEM_SCOPED_POLICY_ID_ACE;
struct _SYSTEM_SECUREBOOT_INFORMATION;
struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION;
struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION;
struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION;
struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION;
struct _SYSTEM_SESSION_BIGPOOL_INFORMATION;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE;
struct _SYSTEM_SINGLE_MODULE_INFORMATION;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _SYSTEM_SPECULATION_CONTROL_INFORMATION;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _SYSTEM_TPM_INFORMATION;
struct _SYSTEM_VA_LIST_INFORMATION;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct _SYSTEM_VERIFIER_ISSUE;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
struct _SYSTEM_VHD_BOOT_INFORMATION;
struct _SYSTEM_VSM_PROTECTION_INFORMATION;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct _SYSTEM_WORKINGSET_ENTRY;
struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION;
struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION;
struct _SecHandle;
struct _SpriteCachedAttributes;
struct _T2_SET_PARAMETERS_V0;
struct _TAG;
struct _TAPE_CREATE_PARTITION;
struct _TAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION;
struct _TAPE_GET_STATISTICS;
struct _TAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION;
struct _TAPE_STATISTICS;
struct _TAPE_WMI_OPERATIONS;
struct _TAPE_WRITE_MARKS;
struct _TASKDIALOGCONFIG;
struct _TASKDIALOG_BUTTON;
struct _TBBUTTON;
struct _TEB;
struct _TEB_ACTIVE_FRAME;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
struct _TEB_ACTIVE_FRAME_EX;
struct _THEMENAMEINFO;
struct _THEMEPROPERTYINFO;
struct _THEME_MSG;
struct _THINWIRECACHE;
struct _THREADWINDOW;
struct _THREAD_BASIC_INFORMATION;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct _THREAD_ENERGY_VALUES;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _THREAD_NAME_INFORMATION;
struct _THREAD_PERFORMANCE_DATA;
struct _THREAD_POWER_THROTTLING_STATE;
struct _THREAD_PROFILING_INFORMATION;
struct _THREAD_TEB_INFORMATION;
struct _THREAD_TLS_INFORMATION;
struct _THREAD_UMS_INFORMATION;
struct _TIMER_BASIC_INFORMATION;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
struct _TIME_FIELDS;
struct _TIME_ZONE_INFORMATION;
struct _TLSDATA;
struct _TMDIFF;
struct _TMW_INTERNAL;
struct _TOKEN_ACCESS_INFORMATION;
struct _TOKEN_APPCONTAINER_INFORMATION;
struct _TOKEN_AUDIT_POLICY;
struct _TOKEN_BNO_ISOLATION_INFORMATION;
struct _TOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL;
struct _TOKEN_DEVICE_CLAIMS;
struct _TOKEN_ELEVATION;
struct _TOKEN_GROUPS;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _TOKEN_LINKED_TOKEN;
struct _TOKEN_MANDATORY_LABEL;
struct _TOKEN_MANDATORY_POLICY;
struct _TOKEN_ORIGIN;
struct _TOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES;
struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION;
struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION;
struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _TOKEN_SECURITY_ATTRIBUTE_V1;
struct _TOKEN_SID_INFORMATION;
struct _TOKEN_SOURCE;
struct _TOKEN_STATISTICS;
struct _TOKEN_USER;
struct _TOKEN_USER_CLAIMS;
struct _TPP_THREAD_DATA_CALLBACK;
struct _TP_ALPC;
struct _TP_CALLBACK_ENVIRON_V3;
struct _TP_CALLBACK_INSTANCE;
struct _TP_CLEANUP_GROUP;
struct _TP_DEBUG_FREE_INFO;
struct _TP_DIRECT;
struct _TP_IO;
struct _TP_JOB;
struct _TP_POOL;
struct _TP_POOL_STACK_INFORMATION;
struct _TP_TASK;
struct _TP_TASK_CALLBACKS;
struct _TP_TIMER;
struct _TP_WAIT;
struct _TP_WORK;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct _TRANSACTION_BIND_INFORMATION;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_LIST_ENTRY;
struct _TRANSACTION_LIST_INFORMATION;
struct _TRANSACTION_NOTIFICATION;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _TRANSMIT_FILE_BUFFERS;
struct _TREEITEM;
struct _TRIVERTEX;
struct _TRUSTED_CONTROLLERS_INFO;
struct _TRUSTED_DOMAIN_AUTH_INFORMATION;
struct _TRUSTED_DOMAIN_FULL_INFORMATION;
struct _TRUSTED_DOMAIN_FULL_INFORMATION2;
struct _TRUSTED_DOMAIN_INFORMATION_EX;
struct _TRUSTED_DOMAIN_INFORMATION_EX2;
struct _TRUSTED_DOMAIN_NAME_INFO;
struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;
struct _TRUSTED_PASSWORD_INFO;
struct _TRUSTED_POSIX_OFFSET_INFO;
struct _TSHARE_CACHE;
struct _TSHARE_COUNTERS;
struct _TS_AUTORECONNECTINFO;
struct _TS_DYNAMIC_TIME_ZONE_INFORMATION;
struct _TS_SYSTEMTIME;
struct _TS_TIME_ZONE_INFORMATION;
struct _TTGETTITLE;
struct _TT_HITTESTINFOA;
struct _TT_HITTESTINFOW;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _TXFS_LIST_TRANSACTIONS;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _TXFS_MODIFY_RM;
struct _TXFS_QUERY_RM_INFORMATION;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _TXFS_SAVEPOINT_INFORMATION;
struct _TXFS_START_RM_INFORMATION;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct _TlgDecay<char const *>;
struct _TlgDecay<unsigned short const *>;
struct _TlgDecay_cv<char const *>;
struct _TlgDecay_cv<unsigned short const *>;
struct _TlgDecay_noref<char const *>;
struct _TlgDecay_noref<unsigned short const *>;
struct _TlgEventMetadata_t;
struct _TlgIntegralConstant<unsigned __int64,0>;
struct _TlgIntegralConstant<unsigned __int64,140737488355328>;
struct _TlgIntegralConstant<unsigned __int64,35184372088832>;
struct _TlgIntegralConstant<unsigned __int64,70368744177664>;
struct _TlgIntegralConstant<unsigned char,1>;
struct _TlgIntegralConstant<unsigned char,2>;
struct _TlgIntegralConstant<unsigned char,5>;
struct _TlgProviderMetadata_t;
struct _TlgProvider_t;
struct _TlgRemoveReference<char const *>;
struct _TlgRemoveReference<unsigned short const *>;
struct _TlgStructSizeMustBeLessThan128<1,1>;
struct _TlgStructSizeMustBeLessThan128<14,1>;
struct _TlgStructSizeMustBeLessThan128<17,1>;
struct _TlgStructSizeMustBeLessThan128<2,1>;
struct _TlgStructSizeMustBeLessThan128<4,1>;
struct _TlgTagEnc<0,1>;
struct _TlgTypeMap<char const *>;
struct _TlgTypeMap<unsigned short const *>;
struct _TlgTypeMapBase<_FILETIME>;
struct _TlgTypeMapBase<_GUID>;
struct _TlgTypeMapBase<_SID *>;
struct _TlgTypeMapBase<_SID const *>;
struct _TlgTypeMapBase<_SYSTEMTIME>;
struct _TlgTypeMapBase<__int64>;
struct _TlgTypeMapBase<bool>;
struct _TlgTypeMapBase<char *>;
struct _TlgTypeMapBase<char const *>;
struct _TlgTypeMapBase<char>;
struct _TlgTypeMapBase<double>;
struct _TlgTypeMapBase<float>;
struct _TlgTypeMapBase<int>;
struct _TlgTypeMapBase<long>;
struct _TlgTypeMapBase<short>;
struct _TlgTypeMapBase<signed char>;
struct _TlgTypeMapBase<unsigned __int64>;
struct _TlgTypeMapBase<unsigned char>;
struct _TlgTypeMapBase<unsigned int>;
struct _TlgTypeMapBase<unsigned long>;
struct _TlgTypeMapBase<unsigned short *>;
struct _TlgTypeMapBase<unsigned short const *>;
struct _TlgTypeMapBase<unsigned short>;
struct _TlgTypeMapBase<void *>;
struct _TlgTypeMapBase<void const *>;
struct _TlgTypeMapBase<wchar_t>;
struct _TraceLoggingKeyword<0>;
struct _TraceLoggingKeyword<140737488355328>;
struct _TraceLoggingKeyword<35184372088832>;
struct _TraceLoggingKeyword<70368744177664>;
struct _TraceLoggingLevel<5>;
struct _TraceLoggingMetadata_t;
struct _TraceLoggingOpcode<1>;
struct _TraceLoggingOpcode<2>;
struct _TypeDescriptor;
struct _UDACCEL;
struct _UMS_CREATE_THREAD_ATTRIBUTES;
struct _UMS_SCHEDULER_STARTUP_INFO;
struct _UMS_SYSTEM_THREAD_INFORMATION;
struct _UMTHDR;
struct _UNICODE_PREFIX_TABLE;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _UNICODE_STRING;
struct _UNIQUE_PROCESS_INFORMATION;
struct _UNIVERSAL_FONT_ID;
struct _UNIVERSAL_NAME_INFOA;
struct _UNIVERSAL_NAME_INFOW;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _UNSIGNED_RATIO;
struct _UNWIND_HISTORY_TABLE;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct _UNWIND_INFO;
struct _USERCONFIGA;
struct _USERCONFIGW;
struct _USER_MARSHAL_CB;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
struct _UUID_VECTOR;
struct _VARIABLE_NAME;
struct _VARIABLE_NAME_AND_VALUE;
struct _VCN_RANGE_INPUT_BUFFER;
struct _VERIFY_INFORMATION;
struct _VIDEOPARAMETERS;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX;
struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT;
struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT;
struct _VIRTUAL_STORAGE_TYPE;
struct _VISUALSTYLEENUM;
struct _VISUALSTYLEINFO;
struct _VISUALSTYLELOAD;
struct _VISUALSTYLEVARIANTINFO;
struct _VM_COUNTERS;
struct _VM_COUNTERS_EX;
struct _VM_COUNTERS_EX2;
struct _VOLUME_DISK_EXTENTS;
struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION;
struct _VOLUME_REFS_INFO_BUFFER;
struct _VSRECORD;
struct _VSRESOURCE;
struct _WAKE_TIMER_INFO;
struct _WAVEFORM_INFO;
struct _WDCONFIG2A;
struct _WDCONFIG2W;
struct _WDCONFIGA;
struct _WDCONFIGW;
struct _WGLSWAP;
struct _WIM_PROVIDER_ADD_OVERLAY_INPUT;
struct _WIM_PROVIDER_CONTROL_INTEGRITY;
struct _WIM_PROVIDER_EXTERNAL_INFO;
struct _WIM_PROVIDER_INTEGRITY_STATUS;
struct _WIM_PROVIDER_OVERLAY_ENTRY;
struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT;
struct _WIM_PROVIDER_START_INTEGRITY;
struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT;
struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT;
struct _WIN32K_SYSCALL_FILTER;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _WIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW;
struct _WIN32_FIND_STREAM_DATA;
struct _WIN32_MEMORY_RANGE_ENTRY;
struct _WIN32_STREAM_ID;
struct _WINDOWS_OS_OPTIONS;
struct _WINDOW_ARRANGEMENT_INFO;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _WINSTATIONCLIENTA;
struct _WINSTATIONCLIENTDATA;
struct _WINSTATIONCLIENTW;
struct _WINSTATIONCONFIG2A;
struct _WINSTATIONCONFIG2W;
struct _WINSTATIONCONFIGA;
struct _WINSTATIONCONFIGW;
struct _WINSTATIONCREATEA;
struct _WINSTATIONCREATEW;
struct _WINSTATIONINFORMATIONA;
struct _WINSTATIONINFORMATIONEX;
struct _WINSTATIONINFORMATIONEX_LEVEL1;
struct _WINSTATIONINFORMATIONW;
struct _WINSTATIONLOADINDICATORDATA;
struct _WINSTATIONMONITORA;
struct _WINSTATIONMONITORW;
struct _WINSTATIONPRINTERA;
struct _WINSTATIONPRINTERW;
struct _WINSTATIONPRODIDA;
struct _WINSTATIONPRODIDW;
struct _WINSTATIONSHADOW;
struct _WINSTATIONUSERTOKEN;
struct _WINSTATIONVIDEODATA;
struct _WINSTATION_USER_CERTIFICATES;
struct _WLX_CLIENT_CREDENTIALS_INFO;
struct _WLX_CLIENT_CREDENTIALS_INFO_2_0;
struct _WLX_CONSOLESWITCH_CREDENTIALS_INFO;
struct _WLX_DESKTOP;
struct _WLX_DISPATCH_VERSION_1_0;
struct _WLX_DISPATCH_VERSION_1_1;
struct _WLX_DISPATCH_VERSION_1_2;
struct _WLX_DISPATCH_VERSION_1_3;
struct _WLX_DISPATCH_VERSION_1_4;
struct _WLX_MPR_NOTIFY_INFO;
struct _WLX_NOTIFICATION_INFO;
struct _WLX_PROFILE_V1_0;
struct _WLX_PROFILE_V2_0;
struct _WLX_SC_NOTIFICATION_INFO;
struct _WLX_TERMINAL_SERVICES_DATA;
struct _WNF_DELIVERY_DESCRIPTOR;
struct _WNF_STATE_NAME;
struct _WNF_TYPE_ID;
struct _WNF_USER_SUBSCRIPTION;
struct _WOF_EXTERNAL_FILE_ID;
struct _WOF_EXTERNAL_INFO;
struct _WOF_VERSION_INFO;
struct _WORD_BLOB;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct _WORKER_FACTORY_DEFERRED_WORK;
struct _WOW64_ARCHITECTURE_INFORMATION;
struct _WOW64_CONTEXT;
struct _WOW64_CPUAREA_INFO;
struct _WOW64_DESCRIPTOR_TABLE_ENTRY;
struct _WOW64_FLOATING_SAVE_AREA;
struct _WOW64_LDT_ENTRY;
struct _WRITE_USN_REASON_INPUT;
struct _WSX_INFO;
struct _WTA_OPTIONS;
struct _Wx86TIB;
struct _Wx86ThreadState;
struct _X86_CALL_FRAME;
struct _X86_NT5_CONTEXT;
struct _XMIT_ROUTINE_QUINTUPLE;
struct _XSAVE_AREA;
struct _XSAVE_AREA_HEADER;
struct _XSAVE_CET_U_FORMAT;
struct _XSAVE_FEATURE;
struct _XSAVE_FORMAT;
struct _XSAVE_POLICY;
struct _XSAVE_SUPPORTED_CPU;
struct _XSAVE_VENDOR;
struct _XSAVE_VENDORS;
struct _XSTATE_CONFIGURATION;
struct _XSTATE_CONTEXT;
struct _XSTATE_FEATURE;
struct _ZONEATTRIBUTES;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
struct __GENERIC_BINDING_INFO;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
struct __NCRYPT_KEY_ACCESS_POLICY_BLOB;
struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;
struct __NCRYPT_PCP_RAW_POLICYDIGEST;
struct __NCRYPT_PCP_TPM_FW_VERSION_INFO;
struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;
struct __NCRYPT_SUPPORTED_LENGTHS;
struct __NCRYPT_UI_POLICY;
struct __PROPERTY_VALUE;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct __WIL_RTL_SRWLOCK;
struct __WIL__WNF_STATE_NAME;
struct __WIL__WNF_TYPE_ID;
struct __WIL__WNF_USER_SUBSCRIPTION;
struct __WilFeatureTraits_Feature_AcrylicForEveryone;
struct __WilFeatureTraits_Feature_AcrylicSharePicker;
struct __WilFeatureTraits_Feature_AcrylicTaskViewTimeline;
struct __WilFeatureTraits_Feature_AcrylicTaskbar;
struct __WilFeatureTraits_Feature_ActivitiesInShell;
struct __WilFeatureTraits_Feature_ActivitiesInTaskView;
struct __WilFeatureTraits_Feature_ActivitiesLocalBackgroundImage;
struct __WilFeatureTraits_Feature_AllowPeopleRearrangeInBarAndFlyout;
struct __WilFeatureTraits_Feature_AllowRelevanceCloudFallback;
struct __WilFeatureTraits_Feature_AllowSingleViewAppsForAssignedAccess;
struct __WilFeatureTraits_Feature_AlwaysFailFastOnXamlFailure;
struct __WilFeatureTraits_Feature_AppFrameCOMRundown;
struct __WilFeatureTraits_Feature_AppsFolderTaskbarIconLoading;
struct __WilFeatureTraits_Feature_AutoRecoverEdgeAfterCrash;
struct __WilFeatureTraits_Feature_AutomaticSignOnLockSetting;
struct __WilFeatureTraits_Feature_BannerOpportunity;
struct __WilFeatureTraits_Feature_Banners;
struct __WilFeatureTraits_Feature_BonusBar;
struct __WilFeatureTraits_Feature_BonusBarServiceContent;
struct __WilFeatureTraits_Feature_CUIPopupHelper;
struct __WilFeatureTraits_Feature_CacheSpotlightLockScreenImage;
struct __WilFeatureTraits_Feature_CaptureExplorerHydrationCallStacks;
struct __WilFeatureTraits_Feature_CentennialBanners;
struct __WilFeatureTraits_Feature_CentennialCloudFilesRegistration;
struct __WilFeatureTraits_Feature_CentennialCloudFilesUninstallCleanup;
struct __WilFeatureTraits_Feature_CentennialContextMenuOrdering;
struct __WilFeatureTraits_Feature_CentennialIExplorerCommand;
struct __WilFeatureTraits_Feature_CentennialPreviewHandlers;
struct __WilFeatureTraits_Feature_CentennialPropertyHandlers;
struct __WilFeatureTraits_Feature_CentennialSetKnownFolder;
struct __WilFeatureTraits_Feature_CentennialShareContract;
struct __WilFeatureTraits_Feature_CentennialShellNew;
struct __WilFeatureTraits_Feature_CentennialThumbnailHandlers;
struct __WilFeatureTraits_Feature_CentennialUseURL;
struct __WilFeatureTraits_Feature_ChangeNotifyInterruptSourceUpdate;
struct __WilFeatureTraits_Feature_CloudDownloadAndGo;
struct __WilFeatureTraits_Feature_CloudFileAppInitiatedHydration;
struct __WilFeatureTraits_Feature_CloudFileNavPaneAllPrimaryStates;
struct __WilFeatureTraits_Feature_CloudFileProgress;
struct __WilFeatureTraits_Feature_CloudFileRecycleBin;
struct __WilFeatureTraits_Feature_CloudFileSecondaryStates;
struct __WilFeatureTraits_Feature_CloudFileShowPrimaryIconOverlaysOnDesktop;
struct __WilFeatureTraits_Feature_CloudFileStabilization;
struct __WilFeatureTraits_Feature_CloudFileStateIcon;
struct __WilFeatureTraits_Feature_ConvergedWindowDrag;
struct __WilFeatureTraits_Feature_CopyFilesToManagedAndUnmanagedSyncRoots;
struct __WilFeatureTraits_Feature_CoreWindowResizeEvent_Desktop;
struct __WilFeatureTraits_Feature_CredUI_ConsoleMode;
struct __WilFeatureTraits_Feature_CredUI_EnableTestHooks_Development;
struct __WilFeatureTraits_Feature_CredUI_ForceConsoleMode_Development;
struct __WilFeatureTraits_Feature_CredUI_NoUI_TESTHOOK;
struct __WilFeatureTraits_Feature_DelayXamlViewActivity;
struct __WilFeatureTraits_Feature_DesktopIconLayoutLinkWithShift;
struct __WilFeatureTraits_Feature_DesktopIconLayoutRefactor;
struct __WilFeatureTraits_Feature_DesktopScreenClipping;
struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression;
struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression_AllApps;
struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression_WhenWindowExists;
struct __WilFeatureTraits_Feature_DesktopSwitcherDataModel;
struct __WilFeatureTraits_Feature_DesktopWorkAreaDPIAware;
struct __WilFeatureTraits_Feature_DestListMigration;
struct __WilFeatureTraits_Feature_DevicesCollection;
struct __WilFeatureTraits_Feature_DevicesFlowSettingsDeviceDiscovery;
struct __WilFeatureTraits_Feature_DisableTDLCachingNonMobile;
struct __WilFeatureTraits_Feature_DismissWhenNotInForegroundDuringRegister;
struct __WilFeatureTraits_Feature_DoNotActivateLockAppWithScreenOff;
struct __WilFeatureTraits_Feature_DockingServiceConnectionManager;
struct __WilFeatureTraits_Feature_DragBetweenViewModes;
struct __WilFeatureTraits_Feature_DragDropWithComponentUI;
struct __WilFeatureTraits_Feature_EdgeDesktopShortcut;
struct __WilFeatureTraits_Feature_EdgePinnedSecondaryTiles;
struct __WilFeatureTraits_Feature_EducationCloudDefaultPins;
struct __WilFeatureTraits_Feature_EnableAcrylicHostBackdropWin32;
struct __WilFeatureTraits_Feature_EnableAnimationDesigner;
struct __WilFeatureTraits_Feature_EnableCapturePicker;
struct __WilFeatureTraits_Feature_EnablePersonalizationLink;
struct __WilFeatureTraits_Feature_EncodeLockScreenToBitmap;
struct __WilFeatureTraits_Feature_ExplorerEdu;
struct __WilFeatureTraits_Feature_ExplorerScreenOff;
struct __WilFeatureTraits_Feature_FaceClientEnrollmentExperience;
struct __WilFeatureTraits_Feature_FailFastOnWrongThreadContext;
struct __WilFeatureTraits_Feature_FidoLogonWithoutDeviceAuth;
struct __WilFeatureTraits_Feature_FileExplorerDarkTheme;
struct __WilFeatureTraits_Feature_FileExplorerLongPath;
struct __WilFeatureTraits_Feature_FileExplorerPWILO;
struct __WilFeatureTraits_Feature_FileExplorerThemeOptions;
struct __WilFeatureTraits_Feature_FindMyPen;
struct __WilFeatureTraits_Feature_FullScreenAnimation;
struct __WilFeatureTraits_Feature_FullScreenLightweightDefault;
struct __WilFeatureTraits_Feature_HandwritingPanelSettings;
struct __WilFeatureTraits_Feature_HelloSettingsImprovements;
struct __WilFeatureTraits_Feature_InitializeStartLayoutFromLogonFramework;
struct __WilFeatureTraits_Feature_IntegrateWhiteboardApp;
struct __WilFeatureTraits_Feature_InvokeUIUpdatesViaTryRunAsync;
struct __WilFeatureTraits_Feature_LazyApplyWindowGroupTemplate;
struct __WilFeatureTraits_Feature_LockApp_TestHooks_ShowWatermark_Development;
struct __WilFeatureTraits_Feature_LockBugFix_NonAccentBackstopColor;
struct __WilFeatureTraits_Feature_LockBugFix_TestHooks_BreakOnCacheFolderDeletion;
struct __WilFeatureTraits_Feature_LockExpMgr_AppHostingModel;
struct __WilFeatureTraits_Feature_LockExpMgr_AssignedAccess;
struct __WilFeatureTraits_Feature_LockExpMgr_TestHooks_AllowOcclusionsOnDesktop_Development;
struct __WilFeatureTraits_Feature_LockReliability_FreezeMessagePumpUponDisplayOff;
struct __WilFeatureTraits_Feature_LockReliability_LongLiveLockApp;
struct __WilFeatureTraits_Feature_LockReliability_PDCActivator;
struct __WilFeatureTraits_Feature_LockReliability_PerformanceBoost;
struct __WilFeatureTraits_Feature_LockReliability_PreLaunchLongLiveLockApp;
struct __WilFeatureTraits_Feature_LockReliability_ProcessOnUnlockingAsync;
struct __WilFeatureTraits_Feature_LockReliability_SynchronizeShutdownWithBrokerEndpointCalls;
struct __WilFeatureTraits_Feature_LockReliability_UnlockIfLockAppDidntShow;
struct __WilFeatureTraits_Feature_LockReliability_WakeFrameThreadOnApplicationStateChanges;
struct __WilFeatureTraits_Feature_LogonUI_BreakOnStart_Development;
struct __WilFeatureTraits_Feature_LogonUI_EnableTestHooks_Development;
struct __WilFeatureTraits_Feature_LogonUI_ForceConsoleMode_Development;
struct __WilFeatureTraits_Feature_LowConfPWILOSoftLanding;
struct __WilFeatureTraits_Feature_MakePowershellTheDefaultConsole;
struct __WilFeatureTraits_Feature_MaterialPropertiesAPI;
struct __WilFeatureTraits_Feature_MediaControlsOnLock;
struct __WilFeatureTraits_Feature_ModalWindowHelper_CUIHostLookup;
struct __WilFeatureTraits_Feature_NamespaceEnumerationRestrictions;
struct __WilFeatureTraits_Feature_NamespaceNavigationRestrictions;
struct __WilFeatureTraits_Feature_NormalizeTitlebarHeight;
struct __WilFeatureTraits_Feature_NtpSoftLanding;
struct __WilFeatureTraits_Feature_OfflineCapableStartMenuMigrationPlugin;
struct __WilFeatureTraits_Feature_OfflineCapableUserLockScreenSettingsMigrationPlugin;
struct __WilFeatureTraits_Feature_OfflinePropsysMigration;
struct __WilFeatureTraits_Feature_OnDemandFolderPopulation;
struct __WilFeatureTraits_Feature_OneLineClock;
struct __WilFeatureTraits_Feature_PenSettingsFontSwitcher;
struct __WilFeatureTraits_Feature_PenSettingsPenPressure;
struct __WilFeatureTraits_Feature_PenSettingsSelectiveDisplay;
struct __WilFeatureTraits_Feature_PeopleAppUpsell;
struct __WilFeatureTraits_Feature_PeopleBar;
struct __WilFeatureTraits_Feature_PeopleBarCapacitySetting;
struct __WilFeatureTraits_Feature_PeopleInShareAPI;
struct __WilFeatureTraits_Feature_PeopleInShareUI;
struct __WilFeatureTraits_Feature_PeopleToastNotifications;
struct __WilFeatureTraits_Feature_PersonalizationColorChooser;
struct __WilFeatureTraits_Feature_PersonalizationRecentColors;
struct __WilFeatureTraits_Feature_PickerBackButton;
struct __WilFeatureTraits_Feature_PreReleaseBackstopAndSuspensionCurtain;
struct __WilFeatureTraits_Feature_PrelaunchEdgeLogon;
struct __WilFeatureTraits_Feature_PrelaunchEdgeOnFrameExit;
struct __WilFeatureTraits_Feature_PresentationStateBugFix;
struct __WilFeatureTraits_Feature_PromptOnOpenWorkFiles;
struct __WilFeatureTraits_Feature_RMS_WorkFilesAsPersonalToUsb;
struct __WilFeatureTraits_Feature_RecycleBinMigration;
struct __WilFeatureTraits_Feature_RespectEdgeAllowFullScreenPolicy;
struct __WilFeatureTraits_Feature_RuleBasedNPSMCurrentSession;
struct __WilFeatureTraits_Feature_ScreenSketchApp;
struct __WilFeatureTraits_Feature_SetLockScreenImageAsDesktopBackground;
struct __WilFeatureTraits_Feature_SettingsExtensibility;
struct __WilFeatureTraits_Feature_ShareToDevices;
struct __WilFeatureTraits_Feature_ShareVerbInFileExplorerContextMenu;
struct __WilFeatureTraits_Feature_ShellCommonExperienceHost;
struct __WilFeatureTraits_Feature_ShoulderTap;
struct __WilFeatureTraits_Feature_SingleTabVisuals;
struct __WilFeatureTraits_Feature_SketchpadLaunched;
struct __WilFeatureTraits_Feature_StartComponentUIPrototype;
struct __WilFeatureTraits_Feature_StartComponentUISupport;
struct __WilFeatureTraits_Feature_SupportInfoTipInNotificationCenter;
struct __WilFeatureTraits_Feature_TabCategoryBC;
struct __WilFeatureTraits_Feature_TabDragSoftLanding;
struct __WilFeatureTraits_Feature_TabIdStability;
struct __WilFeatureTraits_Feature_TabSettingStateRepoIntegration;
struct __WilFeatureTraits_Feature_TabShell;
struct __WilFeatureTraits_Feature_TabShellAutoTabbingPreference;
struct __WilFeatureTraits_Feature_TabShellVisibility;
struct __WilFeatureTraits_Feature_TabShellVisibilityOverrideToOnForGates;
struct __WilFeatureTraits_Feature_TabShellWinRtApi;
struct __WilFeatureTraits_Feature_TaskViewWarmLaunch;
struct __WilFeatureTraits_Feature_TaskbarAddOfficePins;
struct __WilFeatureTraits_Feature_TaskbarAddPinnedItemFailureTelemetry;
struct __WilFeatureTraits_Feature_TaskbarBadgingTDLDeprecation;
struct __WilFeatureTraits_Feature_TaskbarEdgeFavicon;
struct __WilFeatureTraits_Feature_TaskbarEdgeTabBlowout;
struct __WilFeatureTraits_Feature_TaskbarProgrammaticEdgeWebsitePinning;
struct __WilFeatureTraits_Feature_TaskbarProgrammaticPrimaryTilePinning;
struct __WilFeatureTraits_Feature_TaskbarTabbedOneClick;
struct __WilFeatureTraits_Feature_TestPeopleAppUpsellWithShareCollection;
struct __WilFeatureTraits_Feature_ThemeSettings;
struct __WilFeatureTraits_Feature_ThemesInStore;
struct __WilFeatureTraits_Feature_ThumbnailTabs;
struct __WilFeatureTraits_Feature_TimelineCrossDevice;
struct __WilFeatureTraits_Feature_TimelineDeleteByGroup;
struct __WilFeatureTraits_Feature_TimelineUpSell;
struct __WilFeatureTraits_Feature_TrayNotificationsWithoutTDL;
struct __WilFeatureTraits_Feature_TurnOnNumLockDuringPinEntry;
struct __WilFeatureTraits_Feature_UIBCEnableToast;
struct __WilFeatureTraits_Feature_UnifiedEnrollmentLandingPage;
struct __WilFeatureTraits_Feature_UnifiedEnrollment_HandlerStrings;
struct __WilFeatureTraits_Feature_UniversalFileId;
struct __WilFeatureTraits_Feature_UpdatedPeopleSuggestions;
struct __WilFeatureTraits_Feature_UploadUserActivity;
struct __WilFeatureTraits_Feature_UseConvergedNpsmMtcModel;
struct __WilFeatureTraits_Feature_UsePeopleAppRelevance;
struct __WilFeatureTraits_Feature_ViewClosingAPIs_CloseRequested_Desktop;
struct __WilFeatureTraits_Feature_ViewClosingAPIs_TryConsolidate_Desktop;
struct __WilFeatureTraits_Feature_VolumeFlyoutEndpointSelection;
struct __WilFeatureTraits_Feature_WIWHotkeyForScreenSketch;
struct __WilFeatureTraits_Feature_WcosHandwritingSettings;
struct __WilFeatureTraits_Feature_WelcomeScreenEnabled;
struct __WilFeatureTraits_Feature_WindowManagerDesktop;
struct __WilFeatureTraits_Feature_WindowingEnvironmentsDesktop;
struct __WilFeatureTraits_Feature_WindowingEnvironmentsWCOS;
struct __WilFeatureTraits_Feature_WindowsInkWorkspaceImprovements;
struct __WilFeatureTraits_Feature_WorkFilesAsPersonalToUsb;
struct __WilFeatureTraits_Feature_XamlAllUpView;
struct __WilFeatureTraits_Feature_XamlAltTabView;
struct __WilFeatureTraits_Feature_XamlCredUI;
struct __WilFeatureTraits_Feature_XamlExplorerHost;
struct __WilFeatureTraits_Feature_XamlPresenterAtlasSize_Development;
struct __WilFeatureTraits_Feature_XamlPresenterBackstopColor_Development;
struct __WilFeatureTraits_Feature_XamlSnapAssistView;
struct __WilFeatureTraits_Feature_XamlTaskbar;
struct __WilFeatureTraits_Feature_YourPhoneDesktopShortcut;
struct __WilFeatureTraits_Feature_YourPhoneTaskbarIcon;
struct __WinStationUserSessionInfo;
struct __finddata64_t;
struct __lc_time_data;
struct __m128d;
struct __m256d;
struct __s_GUID;
struct __vc_attributes::aggregatableAttribute;
struct __vc_attributes::appobjectAttribute;
struct __vc_attributes::async_uuidAttribute;
struct __vc_attributes::atl::aggregatesAttribute;
struct __vc_attributes::atl::com_interface_entryAttribute;
struct __vc_attributes::atl::db_accessorAttribute;
struct __vc_attributes::atl::db_columnAttribute;
struct __vc_attributes::atl::db_commandAttribute;
struct __vc_attributes::atl::db_paramAttribute;
struct __vc_attributes::atl::db_sourceAttribute;
struct __vc_attributes::atl::db_tableAttribute;
struct __vc_attributes::atl::implements_categoryAttribute;
struct __vc_attributes::atl::perf_counterAttribute;
struct __vc_attributes::atl::perf_objectAttribute;
struct __vc_attributes::atl::perfmonAttribute;
struct __vc_attributes::atl::rdxAttribute;
struct __vc_attributes::atl::registration_scriptAttribute;
struct __vc_attributes::atl::request_handlerAttribute;
struct __vc_attributes::atl::requires_categoryAttribute;
struct __vc_attributes::atl::soap_handlerAttribute;
struct __vc_attributes::atl::soap_headerAttribute;
struct __vc_attributes::atl::soap_methodAttribute;
struct __vc_attributes::atl::soap_namespaceAttribute;
struct __vc_attributes::atl::support_error_infoAttribute;
struct __vc_attributes::atl::synchronizeAttribute;
struct __vc_attributes::atl::tag_nameAttribute;
struct __vc_attributes::bindableAttribute;
struct __vc_attributes::call_asAttribute;
struct __vc_attributes::caseAttribute;
struct __vc_attributes::coclassAttribute;
struct __vc_attributes::controlAttribute;
struct __vc_attributes::cpp_quoteAttribute;
struct __vc_attributes::customAttribute;
struct __vc_attributes::defaultAttribute;
struct __vc_attributes::defaultbindAttribute;
struct __vc_attributes::defaultcollelemAttribute;
struct __vc_attributes::defaultvalueAttribute;
struct __vc_attributes::defaultvtableAttribute;
struct __vc_attributes::dispinterfaceAttribute;
struct __vc_attributes::displaybindAttribute;
struct __vc_attributes::dualAttribute;
struct __vc_attributes::emitidlAttribute;
struct __vc_attributes::entryAttribute;
struct __vc_attributes::event_receiverAttribute;
struct __vc_attributes::event_sourceAttribute;
struct __vc_attributes::exportAttribute;
struct __vc_attributes::first_isAttribute;
struct __vc_attributes::helpcontextAttribute;
struct __vc_attributes::helper_attributes::as_stringAttribute;
struct __vc_attributes::helper_attributes::attributeAttribute;
struct __vc_attributes::helper_attributes::default_valueAttribute;
struct __vc_attributes::helper_attributes::help_stringAttribute;
struct __vc_attributes::helper_attributes::multi_valueAttribute;
struct __vc_attributes::helper_attributes::notify_atlprovAttribute;
struct __vc_attributes::helper_attributes::process_earlyAttribute;
struct __vc_attributes::helper_attributes::repeatableAttribute;
struct __vc_attributes::helper_attributes::requires_valueAttribute;
struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute;
struct __vc_attributes::helper_attributes::usageAttribute;
struct __vc_attributes::helper_attributes::v1_alttypeAttribute;
struct __vc_attributes::helper_attributes::v1_earlyAttribute;
struct __vc_attributes::helper_attributes::v1_nameAttribute;
struct __vc_attributes::helpfileAttribute;
struct __vc_attributes::helpstringAttribute;
struct __vc_attributes::helpstringcontextAttribute;
struct __vc_attributes::helpstringdllAttribute;
struct __vc_attributes::hiddenAttribute;
struct __vc_attributes::hookAttribute;
struct __vc_attributes::idAttribute;
struct __vc_attributes::idl_moduleAttribute;
struct __vc_attributes::idl_quoteAttribute;
struct __vc_attributes::iid_isAttribute;
struct __vc_attributes::immediatebindAttribute;
struct __vc_attributes::implementsAttribute;
struct __vc_attributes::importAttribute;
struct __vc_attributes::importidlAttribute;
struct __vc_attributes::importlibAttribute;
struct __vc_attributes::inAttribute;
struct __vc_attributes::includeAttribute;
struct __vc_attributes::includelibAttribute;
struct __vc_attributes::last_isAttribute;
struct __vc_attributes::lcidAttribute;
struct __vc_attributes::length_isAttribute;
struct __vc_attributes::library_blockAttribute;
struct __vc_attributes::licensedAttribute;
struct __vc_attributes::localAttribute;
struct __vc_attributes::max_isAttribute;
struct __vc_attributes::moduleAttribute;
struct __vc_attributes::ms_unionAttribute;
struct __vc_attributes::no_injected_textAttribute;
struct __vc_attributes::nonbrowsableAttribute;
struct __vc_attributes::noncreatableAttribute;
struct __vc_attributes::nonextensibleAttribute;
struct __vc_attributes::objectAttribute;
struct __vc_attributes::odlAttribute;
struct __vc_attributes::oleautomationAttribute;
struct __vc_attributes::optionalAttribute;
struct __vc_attributes::outAttribute;
struct __vc_attributes::pointer_defaultAttribute;
struct __vc_attributes::pragmaAttribute;
struct __vc_attributes::progidAttribute;
struct __vc_attributes::propgetAttribute;
struct __vc_attributes::propputAttribute;
struct __vc_attributes::propputrefAttribute;
struct __vc_attributes::providerAttribute;
struct __vc_attributes::ptrAttribute;
struct __vc_attributes::publicAttribute;
struct __vc_attributes::rangeAttribute;
struct __vc_attributes::readonlyAttribute;
struct __vc_attributes::refAttribute;
struct __vc_attributes::requesteditAttribute;
struct __vc_attributes::restrictedAttribute;
struct __vc_attributes::retvalAttribute;
struct __vc_attributes::satypeAttribute;
struct __vc_attributes::size_isAttribute;
struct __vc_attributes::sourceAttribute;
struct __vc_attributes::stringAttribute;
struct __vc_attributes::switch_isAttribute;
struct __vc_attributes::switch_typeAttribute;
struct __vc_attributes::threadingAttribute;
struct __vc_attributes::transmit_asAttribute;
struct __vc_attributes::uidefaultAttribute;
struct __vc_attributes::unhookAttribute;
struct __vc_attributes::uniqueAttribute;
struct __vc_attributes::usesgetlasterrorAttribute;
struct __vc_attributes::uuidAttribute;
struct __vc_attributes::v1_enumAttribute;
struct __vc_attributes::varargAttribute;
struct __vc_attributes::versionAttribute;
struct __vc_attributes::vi_progidAttribute;
struct __vc_attributes::wire_marshalAttribute;
struct _browseinfoA;
struct _browseinfoW;
struct _complex;
struct _cpinfo;
struct _cpinfoexA;
struct _cpinfoexW;
struct _currencyfmtA;
struct _currencyfmtW;
struct _devicemodeA;
struct _devicemodeW;
struct _div_t;
struct _dropfilestruct;
struct _exception;
struct _finddata32_t;
struct _finddata32i64_t;
struct _finddata64i32_t;
struct _finddata_t;
struct _finddatai64_t;
struct _heapinfo;
struct _iobuf;
struct _ldiv_t;
struct _nlsversioninfo;
struct _nlsversioninfoex;
struct _numberfmtA;
struct _numberfmtW;
struct _openasinfo;
struct _remoteMETAFILEPICT;
struct _s__CatchableType;
struct _s__CatchableTypeArray;
struct _s__RTTIBaseClassArray;
struct _s__RTTIBaseClassDescriptor2;
struct _s__RTTIClassHierarchyDescriptor;
struct _s__RTTICompleteObjectLocator2;
struct _s__ThrowInfo;
struct _shmapheader;
struct _stat;
struct _stat32;
struct _stat32i64;
struct _stat64;
struct _stat64i32;
struct _stati64;
struct _tagAUTHENTICATEINFO;
struct _tagBINDINFO;
struct _tagCODEBASEHOLD;
struct _tagDATAINFO;
struct _tagEDITBALLOONTIP;
struct _tagHIT_LOGGING_INFO;
struct _tagHardErrorData;
struct _tagOLECMD;
struct _tagOLECMDTEXT;
struct _tagPROTOCOLDATA;
struct _tagPROTOCOLFILTERDATA;
struct _tagPROTOCOL_ARGUMENT;
struct _tagRemBINDINFO;
struct _tagSOFTDISTINFO;
struct _tagStartParam;
struct _tagpropertykey;
struct _userBITMAP;
struct _userCLIPFORMAT;
struct _userFLAG_STGMEDIUM;
struct _userHBITMAP;
struct _userHENHMETAFILE;
struct _userHGLOBAL;
struct _userHMETAFILE;
struct _userHMETAFILEPICT;
struct _userHPALETTE;
struct _userSTGMEDIUM;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
struct _wfinddata32_t;
struct _wfinddata32i64_t;
struct _wfinddata64_t;
struct _wfinddata64i32_t;
struct _wfinddata_t;
struct _wfinddatai64_t;
struct _wil_details_UsageSubscriptionData;
struct _wireBRECORD;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_BSTR;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_HAVEIID;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _xml_error;
struct element_type;
struct fd_set;
struct hostent;
struct in_addr;
struct ip_mreq;
struct joyinfo_tag;
struct joyinfoex_tag;
struct lconv;
struct linger;
struct localeinfo_struct;
struct midievent_tag;
struct midihdr_tag;
struct midiproptempo_tag;
struct midiproptimediv_tag;
struct midistrmbuffver_tag;
struct mmtime_tag;
struct netent;
struct pcmwaveformat_tag;
struct protoent;
struct provider_info;
struct pvalueA;
struct pvalueW;
struct servent;
struct sockaddr;
struct sockaddr_in;
struct sockproto;
struct stat;
struct std::nothrow_t;
struct tMIXERCONTROLDETAILS;
struct tMIXERCONTROLDETAILS_BOOLEAN;
struct tMIXERCONTROLDETAILS_SIGNED;
struct tMIXERCONTROLDETAILS_UNSIGNED;
struct tWAVEFORMATEX;
struct tagABORTPATH;
struct tagACCEL;
struct tagACCESSTIMEOUT;
struct tagACTCTXA;
struct tagACTCTXW;
struct tagACTCTX_SECTION_KEYED_DATA;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct tagALTTABINFO;
struct tagANIMATIONINFO;
struct tagARRAYDESC;
struct tagAUDIODESCRIPTION;
struct tagAUXCAPS2A;
struct tagAUXCAPS2W;
struct tagAUXCAPSA;
struct tagAUXCAPSW;
struct tagAXESLISTA;
struct tagAXESLISTW;
struct tagAXISINFOA;
struct tagAXISINFOW;
struct tagAspectInfo;
struct tagAssocApp;
struct tagAssocDDEExec;
struct tagAssocProgid;
struct tagAssocShell;
struct tagAssocVerb;
struct tagBANDSITEINFO;
struct tagBIND_OPTS;
struct tagBIND_OPTS2;
struct tagBIND_OPTS3;
struct tagBITMAP;
struct tagBITMAPCOREHEADER;
struct tagBITMAPCOREINFO;
struct tagBITMAPFILEHEADER;
struct tagBITMAPINFO;
struct tagBITMAPINFOHEADER;
struct tagBLOB;
struct tagBSTRBLOB;
struct tagBUTTON_SPLITINFO;
struct tagBinaryParam;
struct tagCABOOL;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCAC;
struct tagCACLIPDATA;
struct tagCACLSID;
struct tagCACY;
struct tagCADATE;
struct tagCADBL;
struct tagCADWORD;
struct tagCAFILETIME;
struct tagCAFLT;
struct tagCAH;
struct tagCAI;
struct tagCAL;
struct tagCALPOLESTR;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCANDIDATEFORM;
struct tagCANDIDATELIST;
struct tagCANONICALMSG;
struct tagCANONICALQMSGENVELOPE;
struct tagCAPROPVARIANT;
struct tagCASCODE;
struct tagCATEGORYINFO;
struct tagCAUB;
struct tagCAUH;
struct tagCAUI;
struct tagCAUL;
struct tagCAUUID;
struct tagCBTACTIVATESTRUCT;
struct tagCBT_CREATEWNDA;
struct tagCBT_CREATEWNDW;
struct tagCHANGEFILTERSTRUCT;
struct tagCHARSETINFO;
struct tagCHOOSECOLORA;
struct tagCHOOSECOLORW;
struct tagCHOOSEFONTA;
struct tagCHOOSEFONTW;
struct tagCIEXYZ;
struct tagCLEANLOCALSTORAGE;
struct tagCLIENTCREATESTRUCT;
struct tagCLIPDATA;
struct tagCLOSEST_INTERACTIVE_BOUNDS_MESSAGE_ARGS;
struct tagCOLORADJUSTMENT;
struct tagCOLORCORRECTPALETTE;
struct tagCOLORMATCHTOTARGET;
struct tagCOLORSCHEME;
struct tagCOMBOBOXEXITEMA;
struct tagCOMBOBOXEXITEMW;
struct tagCOMBOBOXINFO;
struct tagCOMPAREITEMSTRUCT;
struct tagCOMPOSITIONFORM;
struct tagCONNECTDATA;
struct tagCONTROLINFO;
struct tagCONVCONTEXT;
struct tagCONVINFO;
struct tagCOPYDATASTRUCT;
struct tagCREATESTRUCTA;
struct tagCREATESTRUCTW;
struct tagCRGB;
struct tagCSPLATFORM;
struct tagCURSORINFO;
struct tagCURSORSHAPE;
struct tagCUSTDATA;
struct tagCUSTDATAITEM;
struct tagCUSTOM_FLICK;
struct tagCWPRETSTRUCT;
struct tagCWPSTRUCT;
struct tagCreateWindowIndirectInfo;
struct tagDATABLOCKHEADER;
struct tagDATETIMEPICKERINFO;
struct tagDDEML_MSG_HOOK_DATA;
struct tagDEBUGHOOKINFO;
struct tagDEC;
struct tagDELETEITEMSTRUCT;
struct tagDESIGNVECTOR;
struct tagDEVNAMES;
struct tagDIBSECTION;
struct tagDIGITIZER_CONTACT_INFO;
struct tagDISPPARAMS;
struct tagDITCALLBACKSTRUCT;
struct tagDLGTEMPLATEEX;
struct tagDMANIPHOOK;
struct tagDPIINFO;
struct tagDRAGLISTINFO;
struct tagDRAWITEMSTRUCT;
struct tagDRAWTEXTPARAMS;
struct tagDROPSTRUCT;
struct tagDRVCONFIGINFO;
struct tagDVTARGETDEVICE;
struct tagDWMSURFACEDATA;
struct tagEDGY_LISTENER;
struct tagELEMDESC;
struct tagEMR;
struct tagEMRALPHABLEND;
struct tagEMRANGLEARC;
struct tagEMRARC;
struct tagEMRBITBLT;
struct tagEMRCREATEBRUSHINDIRECT;
struct tagEMRCREATECOLORSPACE;
struct tagEMRCREATECOLORSPACEW;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH;
struct tagEMRCREATEPALETTE;
struct tagEMRCREATEPEN;
struct tagEMRELLIPSE;
struct tagEMREOF;
struct tagEMREXCLUDECLIPRECT;
struct tagEMREXTCREATEFONTINDIRECTW;
struct tagEMREXTCREATEPEN;
struct tagEMREXTESCAPE;
struct tagEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN;
struct tagEMREXTTEXTOUTA;
struct tagEMRFILLPATH;
struct tagEMRFILLRGN;
struct tagEMRFORMAT;
struct tagEMRFRAMERGN;
struct tagEMRGDICOMMENT;
struct tagEMRGLSBOUNDEDRECORD;
struct tagEMRGLSRECORD;
struct tagEMRGRADIENTFILL;
struct tagEMRINVERTRGN;
struct tagEMRLINETO;
struct tagEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM;
struct tagEMRNAMEDESCAPE;
struct tagEMROFFSETCLIPRGN;
struct tagEMRPIXELFORMAT;
struct tagEMRPLGBLT;
struct tagEMRPOLYDRAW;
struct tagEMRPOLYDRAW16;
struct tagEMRPOLYLINE;
struct tagEMRPOLYLINE16;
struct tagEMRPOLYPOLYLINE;
struct tagEMRPOLYPOLYLINE16;
struct tagEMRPOLYTEXTOUTA;
struct tagEMRRESIZEPALETTE;
struct tagEMRRESTOREDC;
struct tagEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX;
struct tagEMRSELECTCLIPPATH;
struct tagEMRSELECTOBJECT;
struct tagEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION;
struct tagEMRSETCOLORADJUSTMENT;
struct tagEMRSETCOLORSPACE;
struct tagEMRSETDIBITSTODEVICE;
struct tagEMRSETICMPROFILE;
struct tagEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV;
struct tagEMRSETTEXTCOLOR;
struct tagEMRSETVIEWPORTEXTEX;
struct tagEMRSETVIEWPORTORGEX;
struct tagEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS;
struct tagEMRTEXT;
struct tagEMRTRANSPARENTBLT;
struct tagENDPOINTINFORMATION;
struct tagENHMETAHEADER;
struct tagENHMETARECORD;
struct tagENUMLOGFONTA;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXDVA;
struct tagENUMLOGFONTEXDVW;
struct tagENUMLOGFONTEXW;
struct tagENUMLOGFONTW;
struct tagENUMTEXTMETRICA;
struct tagENUMTEXTMETRICW;
struct tagENUMUILANG;
struct tagEVENTMSG;
struct tagEXCEPINFO;
struct tagEXTLOGFONTA;
struct tagEXTLOGFONTW;
struct tagEXTLOGPEN;
struct tagEXTLOGPEN32;
struct tagExtentInfo;
struct tagFCMSG_NOTIFY;
struct tagFILTERKEYS;
struct tagFINDREPLACEA;
struct tagFINDREPLACEW;
struct tagFLICK_MAP;
struct tagFONTDESC;
struct tagFONTSIGNATURE;
struct tagFONT_FILE_INFO;
struct tagFONT_REALIZATION_INFO;
struct tagFONT_REALIZATION_INFO2;
struct tagFORMATETC;
struct tagFUNCDESC;
struct tagGCP_RESULTSA;
struct tagGCP_RESULTSW;
struct tagGDISCALE_ESCAPE_ARGUMENT;
struct tagGESTURECONFIG;
struct tagGESTUREINFO;
struct tagGESTURENOTIFYSTRUCT;
struct tagGLYPHSET;
struct tagGROUP_WINDOW_TEMPLATE_APPLIED;
struct tagGUITHREADINFO;
struct tagHANDLETABLE;
struct tagHARDWAREHOOKSTRUCT;
struct tagHARDWAREINPUT;
struct tagHELPINFO;
struct tagHELPWININFOA;
struct tagHELPWININFOW;
struct tagHIGHCONTRASTA;
struct tagHIGHCONTRASTW;
struct tagHSZPAIR;
struct tagHW_PROFILE_INFOA;
struct tagHW_PROFILE_INFOW;
struct tagICEXYZTRIPLE;
struct tagICONMETRICSA;
struct tagICONMETRICSW;
struct tagIDLDESC;
struct tagIMECHARPOSITION;
struct tagIMEMENUITEMINFOA;
struct tagIMEMENUITEMINFOW;
struct tagINITCOMMONCONTROLSEX;
struct tagINPUDESTWINDOWINFORMATION;
struct tagINPUT;
struct tagINPUTDEST;
struct tagINPUTSINKINFORMATION;
struct tagINPUT_INJECTION_VALUE;
struct tagINPUT_LOCALE_INFO;
struct tagINPUT_MESSAGE_SOURCE;
struct tagINPUT_TRANSFORM;
struct tagINTERACTIVECTRL_DEVICE_INFO;
struct tagINTERACTIVECTRL_INFO;
struct tagINTERACTIVECTRL_PARAMETERS;
struct tagINTERFACEDATA;
struct tagINTERFACEINFO;
struct tagI_RpcProxyCallbackInterface;
struct tagInputRoutingInfo;
struct tagJOYCAPS2A;
struct tagJOYCAPS2W;
struct tagJOYCAPSA;
struct tagJOYCAPSW;
struct tagKBDLLHOOKSTRUCT;
struct tagKERNINGPAIR;
struct tagKEYBDINPUT;
struct tagLASTINPUTINFO;
struct tagLAYERPLANEDESCRIPTOR;
struct tagLC_ID;
struct tagLHITTESTINFO;
struct tagLICINFO;
struct tagLITEM;
struct tagLOCALESIGNATURE;
struct tagLOGBRUSH;
struct tagLOGBRUSH32;
struct tagLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW;
struct tagLOGFONTA;
struct tagLOGFONTW;
struct tagLOGPALETTE;
struct tagLOGPEN;
struct tagLVBKIMAGEA;
struct tagLVBKIMAGEW;
struct tagLVCOLUMNA;
struct tagLVCOLUMNW;
struct tagLVDISPINFO;
struct tagLVDISPINFOW;
struct tagLVFINDINFOA;
struct tagLVFINDINFOW;
struct tagLVFOOTERINFO;
struct tagLVFOOTERITEM;
struct tagLVGROUP;
struct tagLVGROUPMETRICS;
struct tagLVHITTESTINFO;
struct tagLVINSERTGROUPSORTED;
struct tagLVITEMA;
struct tagLVITEMINDEX;
struct tagLVITEMW;
struct tagLVKEYDOWN;
struct tagLVSETINFOTIP;
struct tagLVTILEINFO;
struct tagLVTILEVIEWINFO;
struct tagLegacyISMPOSTINPUTINFO;
struct tagMAGINPUTINFORMATION;
struct tagMANIPULATION_INPUT_INFO;
struct tagMANIPULATION_POINTER_INFO;
struct tagMCGRIDINFO;
struct tagMCI_ANIM_OPEN_PARMSA;
struct tagMCI_ANIM_OPEN_PARMSW;
struct tagMCI_ANIM_PLAY_PARMS;
struct tagMCI_ANIM_RECT_PARMS;
struct tagMCI_ANIM_STEP_PARMS;
struct tagMCI_ANIM_UPDATE_PARMS;
struct tagMCI_ANIM_WINDOW_PARMSA;
struct tagMCI_ANIM_WINDOW_PARMSW;
struct tagMCI_BREAK_PARMS;
struct tagMCI_GENERIC_PARMS;
struct tagMCI_GETDEVCAPS_PARMS;
struct tagMCI_INFO_PARMSA;
struct tagMCI_INFO_PARMSW;
struct tagMCI_LOAD_PARMSA;
struct tagMCI_LOAD_PARMSW;
struct tagMCI_OPEN_PARMSA;
struct tagMCI_OPEN_PARMSW;
struct tagMCI_OVLY_LOAD_PARMSA;
struct tagMCI_OVLY_LOAD_PARMSW;
struct tagMCI_OVLY_OPEN_PARMSA;
struct tagMCI_OVLY_OPEN_PARMSW;
struct tagMCI_OVLY_RECT_PARMS;
struct tagMCI_OVLY_SAVE_PARMSA;
struct tagMCI_OVLY_SAVE_PARMSW;
struct tagMCI_OVLY_WINDOW_PARMSA;
struct tagMCI_OVLY_WINDOW_PARMSW;
struct tagMCI_PLAY_PARMS;
struct tagMCI_RECORD_PARMS;
struct tagMCI_SAVE_PARMSA;
struct tagMCI_SAVE_PARMSW;
struct tagMCI_SEEK_PARMS;
struct tagMCI_SEQ_SET_PARMS;
struct tagMCI_SET_PARMS;
struct tagMCI_STATUS_PARMS;
struct tagMCI_SYSINFO_PARMSA;
struct tagMCI_SYSINFO_PARMSW;
struct tagMCI_VD_ESCAPE_PARMSA;
struct tagMCI_VD_ESCAPE_PARMSW;
struct tagMCI_VD_PLAY_PARMS;
struct tagMCI_VD_STEP_PARMS;
struct tagMCI_WAVE_DELETE_PARMS;
struct tagMCI_WAVE_OPEN_PARMSA;
struct tagMCI_WAVE_OPEN_PARMSW;
struct tagMCI_WAVE_SET_PARMS;
struct tagMDICREATESTRUCTA;
struct tagMDICREATESTRUCTW;
struct tagMDINEXTMENU;
struct tagMEASUREITEMSTRUCT;
struct tagMENUBARINFO;
struct tagMENUGETOBJECTINFO;
struct tagMENUINFO;
struct tagMENUITEMINFOA;
struct tagMENUITEMINFOW;
struct tagMESSAGEPUMPHOOK;
struct tagMETAFILEPICT;
struct tagMETAHEADER;
struct tagMETARECORD;
struct tagMETHODDATA;
struct tagMIDIINCAPS2A;
struct tagMIDIINCAPS2W;
struct tagMIDIINCAPSA;
struct tagMIDIINCAPSW;
struct tagMIDIOUTCAPS2A;
struct tagMIDIOUTCAPS2W;
struct tagMIDIOUTCAPSA;
struct tagMIDIOUTCAPSW;
struct tagMINIMIZEDMETRICS;
struct tagMINIWINDOWINFO;
struct tagMINMAXINFO;
struct tagMITSYNTHESIZETOUCHINFO;
struct tagMIXERCAPS2A;
struct tagMIXERCAPS2W;
struct tagMIXERCAPSA;
struct tagMIXERCAPSW;
struct tagMIXERCONTROLA;
struct tagMIXERCONTROLDETAILS_LISTTEXTA;
struct tagMIXERCONTROLDETAILS_LISTTEXTW;
struct tagMIXERCONTROLW;
struct tagMIXERLINEA;
struct tagMIXERLINECONTROLSA;
struct tagMIXERLINECONTROLSW;
struct tagMIXERLINEW;
struct tagMODE_SETTINGS;
struct tagMONCBSTRUCT;
struct tagMONCONVSTRUCT;
struct tagMONERRSTRUCT;
struct tagMONHSZSTRUCTA;
struct tagMONHSZSTRUCTW;
struct tagMONITORINFO;
struct tagMONITORINFOEXA;
struct tagMONITORINFOEXW;
struct tagMONLINKSTRUCT;
struct tagMONMSGSTRUCT;
struct tagMOUSEHOOKSTRUCT;
struct tagMOUSEHOOKSTRUCTEX;
struct tagMOUSEINPUT;
struct tagMOUSEKEYS;
struct tagMOUSEMOVEPOINT;
struct tagMSG;
struct tagMSGBOXPARAMSA;
struct tagMSGBOXPARAMSW;
struct tagMSGMASK;
struct tagMSLLHOOKSTRUCT;
struct tagMULTIKEYHELPA;
struct tagMULTIKEYHELPW;
struct tagMULTI_QI;
struct tagMsgRoutingInfo;
struct tagNCCALCSIZE_PARAMS;
struct tagNC_ADDRESS;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW;
struct tagNEWTEXTMETRICW;
struct tagNMBCDROPDOWN;
struct tagNMBCHOTITEM;
struct tagNMCHAR;
struct tagNMCUSTOMDRAWINFO;
struct tagNMCUSTOMSPLITRECTINFO;
struct tagNMCUSTOMTEXT;
struct tagNMDATETIMECHANGE;
struct tagNMDATETIMEFORMATA;
struct tagNMDATETIMEFORMATQUERYA;
struct tagNMDATETIMEFORMATQUERYW;
struct tagNMDATETIMEFORMATW;
struct tagNMDATETIMESTRINGA;
struct tagNMDATETIMESTRINGW;
struct tagNMDATETIMEWMKEYDOWNA;
struct tagNMDATETIMEWMKEYDOWNW;
struct tagNMDAYSTATE;
struct tagNMHDDISPINFOA;
struct tagNMHDDISPINFOW;
struct tagNMHDFILTERBTNCLICK;
struct tagNMHDR;
struct tagNMHEADERA;
struct tagNMHEADERW;
struct tagNMIPADDRESS;
struct tagNMITEMACTIVATE;
struct tagNMKEY;
struct tagNMLINK;
struct tagNMLISTVIEW;
struct tagNMLVCACHEHINT;
struct tagNMLVCUSTOMDRAW;
struct tagNMLVEMPTYMARKUP;
struct tagNMLVFINDITEMA;
struct tagNMLVFINDITEMW;
struct tagNMLVGETINFOTIPA;
struct tagNMLVGETINFOTIPW;
struct tagNMLVLINK;
struct tagNMLVODSTATECHANGE;
struct tagNMLVSCROLL;
struct tagNMMOUSE;
struct tagNMOBJECTNOTIFY;
struct tagNMPGHOTITEM;
struct tagNMRBAUTOSIZE;
struct tagNMREBAR;
struct tagNMREBARAUTOBREAK;
struct tagNMREBARCHEVRON;
struct tagNMREBARCHILDSIZE;
struct tagNMREBARSPLITTER;
struct tagNMSELCHANGE;
struct tagNMTBGETINFOTIPA;
struct tagNMTBGETINFOTIPW;
struct tagNMTBHOTITEM;
struct tagNMTBRESTORE;
struct tagNMTBSAVE;
struct tagNMTOOLBARA;
struct tagNMTOOLBARW;
struct tagNMTOOLTIPSCREATED;
struct tagNMTREEVIEWA;
struct tagNMTREEVIEWW;
struct tagNMTTCUSTOMDRAW;
struct tagNMTTDISPINFOA;
struct tagNMTTDISPINFOW;
struct tagNMTVASYNCDRAW;
struct tagNMTVCUSTOMDRAW;
struct tagNMTVGETINFOTIPA;
struct tagNMTVGETINFOTIPW;
struct tagNMTVSTATEIMAGECHANGING;
struct tagNMVIEWCHANGE;
struct tagNONCLIENTMETRICSA;
struct tagNONCLIENTMETRICSW;
struct tagNORMALIZEDVECTOR;
struct tagOBJECTDESCRIPTOR;
struct tagOCPFIPARAMS;
struct tagOFNA;
struct tagOFNW;
struct tagOFN_NT4A;
struct tagOFN_NT4W;
struct tagOIFI;
struct tagOLEVERB;
struct tagOleMenuGroupWidths;
struct tagPAGERANGE;
struct tagPAGESET;
struct tagPAINTSTRUCT;
struct tagPALETTEENTRY;
struct tagPANOSE;
struct tagPARAMDATA;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
struct tagPARSEDURLA;
struct tagPARSEDURLW;
struct tagPDA;
struct tagPDEXA;
struct tagPDEXW;
struct tagPDW;
struct tagPELARRAY;
struct tagPEN_PARAMETERS;
struct tagPICTDESC;
struct tagPIXELFORMATDESCRIPTOR;
struct tagPOINT;
struct tagPOINTER_DEVICE_CURSOR_INFO;
struct tagPOINTER_DEVICE_INFO;
struct tagPOINTER_DEVICE_PROPERTY;
struct tagPOINTER_INFO;
struct tagPOINTER_INFO_UNION;
struct tagPOINTER_PEN_INFO;
struct tagPOINTER_TOUCH_INFO;
struct tagPOINTER_TYPE_INFO;
struct tagPOINTF;
struct tagPOINTFX;
struct tagPOINTS;
struct tagPOLYTEXTA;
struct tagPOLYTEXTW;
struct tagPOSTINPUTINFO;
struct tagPOWERSTATEPARAMS;
struct tagPRINTPAGERANGE;
struct tagPROPBAG2;
struct tagPROPLIST_ELEMENT;
struct tagPROPPAGEINFO;
struct tagPROPSPEC;
struct tagPROPVARIANT;
struct tagPSDA;
struct tagPSDW;
struct tagQACONTAINER;
struct tagQACONTROL;
struct tagQMSGENVELOPE;
struct tagQMSGINPUTREPORT;
struct tagQUERYCONTEXT;
struct tagRAWHID;
struct tagRAWINPUT;
struct tagRAWINPUTDEVICE;
struct tagRAWINPUTDEVICELIST;
struct tagRAWINPUTHEADER;
struct tagRAWKEYBOARD;
struct tagRAWMOUSE;
struct tagREALIZATION_INFO;
struct tagREBARBANDINFOA;
struct tagREBARBANDINFOW;
struct tagREBARINFO;
struct tagRECONVERTSTRING;
struct tagRECT;
struct tagREGISTERWORDA;
struct tagREGISTERWORDW;
struct tagRGBQUAD;
struct tagRGBTRIPLE;
struct tagRID_DEVICE_INFO;
struct tagRID_DEVICE_INFO_HEALTH;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO_KEYBOARD;
struct tagRID_DEVICE_INFO_MOUSE;
struct tagRPCOLEMESSAGE;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
struct tagRPC_CALL_ATTRIBUTES_V3_A;
struct tagRPC_CALL_ATTRIBUTES_V3_W;
struct tagRPC_EE_INFO_PARAM;
struct tagRPC_ERROR_ENUM_HANDLE;
struct tagRPC_EXTENDED_ERROR_INFO;
struct tagRemBRUSH;
struct tagRemFORMATETC;
struct tagRemHBITMAP;
struct tagRemHENHMETAFILE;
struct tagRemHGLOBAL;
struct tagRemHMETAFILEPICT;
struct tagRemHPALETTE;
struct tagRemSNB;
struct tagRemSTGMEDIUM;
struct tagSAFEARRAY;
struct tagSAFEARRAYBOUND;
struct tagSCROLLBARINFO;
struct tagSCROLLINFO;
struct tagSERIALIZEDPROPERTYVALUE;
struct tagSERIALIZEDPROPSTORAGE;
struct tagSERIALKEYSA;
struct tagSERIALKEYSW;
struct tagSFVM_GETENUMFLAGS_DATA;
struct tagSHCNF_PRINTJOB_DATA;
struct tagSHELL_INPUT_USAGE_DATA_INFO;
struct tagSHELL_TRACKED_WINDOW_POS_CHANGED;
struct tagSHELL_TRACKED_WINDOW_TRACKING_INFO;
struct tagSHELL_WND_MGMT_SIMPLE_PAYLOAD;
struct tagSHUTDOWN_BLOCK_DESCRIPTION;
struct tagSIMPLEHAPTICSCTRL_DEVICE_INFO;
struct tagSIZE;
struct tagSMDATA;
struct tagSMINFO;
struct tagSOLE_AUTHENTICATION_INFO;
struct tagSOLE_AUTHENTICATION_LIST;
struct tagSOLE_AUTHENTICATION_SERVICE;
struct tagSOUNDSENTRYA;
struct tagSOUNDSENTRYW;
struct tagSTATDATA;
struct tagSTATPROPSETSTG;
struct tagSTATPROPSTG;
struct tagSTATSTG;
struct tagSTGMEDIUM;
struct tagSTGOPTIONS;
struct tagSTICKYKEYS;
struct tagSTYLEBUFA;
struct tagSTYLEBUFW;
struct tagSTYLESTRUCT;
struct tagSWITCH_CONTEXT;
struct tagSWITCH_CONTEXT_ATTRIBUTE;
struct tagSWITCH_CONTEXT_DATA;
struct tagServerInformation;
struct tagStorageLayout;
struct tagTBADDBITMAP;
struct tagTBSAVEPARAMSA;
struct tagTBSAVEPARAMSW;
struct tagTCHITTESTINFO;
struct tagTCITEMA;
struct tagTCITEMHEADERA;
struct tagTCITEMHEADERW;
struct tagTCITEMW;
struct tagTCKEYDOWN;
struct tagTEXTMETRICA;
struct tagTEXTMETRICW;
struct tagTITLEBARINFO;
struct tagTITLEBARINFOEX;
struct tagTLIBATTR;
struct tagTOGGLEKEYS;
struct tagTOOLINFOA;
struct tagTOOLINFOW;
struct tagTOUCHINPUT;
struct tagTOUCH_GESTURE_SETTINGS;
struct tagTOUCH_HIT_TESTING_INPUT;
struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
struct tagTOUCH_PAD_PARAMETERS_V0;
struct tagTPMPARAMS;
struct tagTRACKMOUSEEVENT;
struct tagTRACKPART;
struct tagTRBTHUMBPOSCHANGING;
struct tagTTPOLYCURVE;
struct tagTTPOLYGONHEADER;
struct tagTVDISPINFOA;
struct tagTVDISPINFOEXA;
struct tagTVDISPINFOEXW;
struct tagTVDISPINFOW;
struct tagTVGETITEMPARTRECTINFO;
struct tagTVHITTESTINFO;
struct tagTVINSERTSTRUCTA;
struct tagTVINSERTSTRUCTW;
struct tagTVITEMA;
struct tagTVITEMCHANGE;
struct tagTVITEMEXA;
struct tagTVITEMEXW;
struct tagTVITEMW;
struct tagTVKEYDOWN;
struct tagTVSORTCB;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagTouchPredictionParameters;
struct tagUAHDRAWMENUITEM;
struct tagUAHMEASUREMENUITEM;
struct tagUAHMENU;
struct tagUAHMENUITEM;
struct tagUAHMENUPOPUPMETRICS;
struct tagUIPI_INFO;
struct tagUMFD_WINLOGON_ESCAPE_ARGUMENT;
struct tagUPDATELAYEREDWINDOWINFO;
struct tagUSAGE_PROPERTIES;
struct tagUSERAPIHOOK;
struct tagUSERAPIHOOKINIT;
struct tagUSEROBJECTFLAGS;
struct tagUSEROWPINFO;
struct tagVARDESC;
struct tagVARIANT;
struct tagVS_FIXEDFILEINFO;
struct tagVersionedStream;
struct tagWAVEINCAPS2A;
struct tagWAVEINCAPS2W;
struct tagWAVEINCAPSA;
struct tagWAVEINCAPSW;
struct tagWAVEOUTCAPS2A;
struct tagWAVEOUTCAPS2W;
struct tagWAVEOUTCAPSA;
struct tagWAVEOUTCAPSW;
struct tagWCRANGE;
struct tagWINDOWCOMPOSITIONATTRIBDATA;
struct tagWINDOWCOMPOSITIONATTRIBDATA_UNION;
struct tagWINDOWINFO;
struct tagWINDOWPLACEMENT;
struct tagWINDOWPOS;
struct tagWINDOW_INPUTSINK_HINT;
struct tagWINDOW_SIZE_STARTING;
struct tagWNDCLASSA;
struct tagWNDCLASSEXA;
struct tagWNDCLASSEXW;
struct tagWNDCLASSW;
struct tagWSINFO;
struct tagWTSSESSION_NOTIFICATION;
struct tagXFORM;
struct threadlocaleinfostruct;
struct threadmbcinfostruct;
struct timecaps_tag;
struct timeval;
struct tm;
struct type;
struct val_context;
struct value_entA;
struct value_entW;
struct waveformat_tag;
struct wavehdr_tag;
struct wil::CallContextInfo;
struct wil::DiagnosticsInfo;
struct wil::FailureInfo;
struct wil::FeatureProperties;
struct wil::PaintDC;
struct wil::SelectResult;
struct wil::StagingControl;
struct wil::WNF_CHANGE_STAMP_STRUCT;
struct wil::WindowDC;
struct wil::cotaskmem_secure_deleter;
struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData;
struct wil::details::ApiTelemetryLogger::StaticHandle;
struct wil::details::DestroyThreadPoolIo<0>;
struct wil::details::DestroyThreadPoolIo<1>;
struct wil::details::DestroyThreadPoolIo<2>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,0>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,1>;
struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,2>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,1>;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,2>;
struct wil::details::DestroyThreadPoolWait<0>;
struct wil::details::DestroyThreadPoolWait<1>;
struct wil::details::DestroyThreadPoolWait<2>;
struct wil::details::DestroyThreadPoolWork<0>;
struct wil::details::DestroyThreadPoolWork<1>;
struct wil::details::DestroyThreadPoolWork<2>;
struct wil::details::EnabledStateManager::CachedFeaturePropertyData;
struct wil::details::EnabledStateManager::CachedUsageData;
struct wil::details::EnabledStateManager::RecordCachedUsageUnderLock::__l9::Change;
struct wil::details::FeatureLogging::StaticHandle;
struct wil::details::FeatureTestState;
struct wil::details::FeatureTraitsBase;
struct wil::details::FeatureUsageDurationData;
struct wil::details::IFailureCallback;
struct wil::details::IFunctor;
struct wil::details::IFunctorHost;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_AcrylicForEveryone> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_ActivitiesInTaskView> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CUIPopupHelper> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CredUI_ConsoleMode> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CredUI_EnableTestHooks_Development>,wil::Feature<__WilFeatureTraits_Feature_CredUI_ConsoleMode> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DesktopSplashScreenSuppression> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DragDropWithComponentUI> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_LogonUI_EnableTestHooks_Development> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_PeopleAppUpsell> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_PeopleBar> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost>,wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_ThemeSettings> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_WindowManagerDesktop> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_WorkFilesAsPersonalToUsb> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlAllUpView> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost> >;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost>,wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> >;
struct wil::details::RtlThreadPoolMethods;
struct wil::details::SecureZeroData;
struct wil::details::SystemThreadPoolMethods;
struct wil::details::com_unknown_deleter;
struct wil::details::empty_wnf_state;
struct wil::details::event_watcher_state;
struct wil::details::functor_wrapper_void<<lambda_26a6647b77adb2b89a4a4ca9cf623d23> &>;
struct wil::details::functor_wrapper_void<<lambda_3a09bbab21407c43f75c27f25d4cc623> &>;
struct wil::details::functor_wrapper_void<<lambda_64867380dd846f7a053b26a0bb9cf69f> &>;
struct wil::details::functor_wrapper_void<<lambda_b6f525c3bfa7575b901227a6f31c42fa> &>;
struct wil::details::functor_wrapper_void<<lambda_d89c6a7ec93565521e2701d2707eedbc> &>;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::WindowDC),&wil::WindowDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::WindowDC,0,std::nullptr_t>;
struct wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,0,std::nullptr_t>;
struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t>;
struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION *,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION *),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>;
struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::SelectResult),&wil::SelectResult::Close,wistd::integral_constant<unsigned __int64,0>,wil::SelectResult,0,std::nullptr_t>;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData),&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,0,std::nullptr_t>;
struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t>;
struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t>;
struct wil::details::resource_policy<wil_StagingConfig *,void (__cdecl*)(wil_StagingConfig *),&wil_FreeStagingConfig,wistd::integral_constant<unsigned __int64,0>,wil_StagingConfig *,0,std::nullptr_t>;
struct wil::details::return_type<0,long>;
struct wil::details::return_type<0,void>;
struct wil::details::return_type<1,void>;
struct wil::details::shared_object<wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::shared_object<wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct wil::details::static_lazy<ThemeLogging>::Completer;
struct wil::details::static_lazy<ThemeSettingsLogging>::Completer;
struct wil::details::static_lazy<ThemeSettingsTelemetry>::Completer;
struct wil::details::static_lazy<ThemeTelemetry>::Completer;
struct wil::details::static_lazy<UxThemeTelemetry>::Completer;
struct wil::details::static_lazy<wil::details::ApiTelemetryLogger>::Completer;
struct wil::details::static_lazy<wil::details::FeatureLogging>::Completer;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
struct wil::details::tag_return_HRESULT;
struct wil::details::tag_return_other;
struct wil::details::tag_return_void;
struct wil::details::variable_size<1>;
struct wil::details::variable_size<2>;
struct wil::details::variable_size<4>;
struct wil::details::variable_size<8>;
struct wil::details::variable_size_mapping<__int64>;
struct wil::details::variable_size_mapping<enum wil::ActivityOptions>;
struct wil::details::variable_size_mapping<enum wil::EventOptions>;
struct wil::details::variable_size_mapping<enum wil::details::ReportFailureOptions>;
struct wil::details::variable_size_mapping<int>;
struct wil::details::variable_size_mapping<unsigned __int64 const >;
struct wil::details::variable_size_mapping<unsigned __int64>;
struct wil::details::verify_single_flag_helper<1>;
struct wil::details::verify_single_flag_helper<2>;
struct wil::details::verify_single_flag_helper<4>;
struct wil::details::wnf_callback_type<wil::details::empty_wnf_state>;
struct wil::details::wnf_subscription_state_base;
struct wil::details_abi::ProcessLocalData;
struct wil::details_abi::RawUsageIndex::Header;
struct wil::details_abi::SerializedFailure;
struct wil::details_abi::SubscriptionList::Subscription;
struct wil::details_abi::ThreadLocalData;
struct wil::details_abi::ThreadLocalFailureInfo;
struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node;
struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node;
struct wil::details_abi::UsageIndexProperty;
struct wil::details_abi::UsageIndexes;
struct wil::details_abi::buffer_range;
struct wil::details_abi::heap_buffer;
struct wil::empty_deleter;
struct wil::err_failfast_policy;
struct wil::err_returncode_policy;
struct wil::function_deleter<long (__cdecl*)(void *),&NCryptFreeBuffer>;
struct wil::function_deleter<void (__cdecl*)(void *),&BCryptFreeBuffer>;
struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>;
struct wil::function_deleter<void * (__cdecl*)(void *),&GlobalFree>;
struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>;
struct wil::hlocal_secure_deleter;
struct wil::process_heap_deleter;
struct wil::unique_hglobal_locked;
struct wil::variadic_logical_or<>;
struct wil::virtualalloc_deleter;
struct wil_FeatureState;
struct wil_FeatureTestState;
struct wil_StagingConfig;
struct wil_details_FeatureProperties;
struct wil_details_FeatureTestState;
struct wil_details_FeatureUsageSRUM;
struct wil_details_FeatureVariantPropertyCache;
struct wil_details_RecordUsageResult;
struct wil_details_SetPropertyCacheUsageContext;
struct wil_details_SetPropertyFlagContext;
struct wil_details_StagingConfig;
struct wil_details_StagingConfigFeature;
struct wil_details_StagingConfigHeader;
struct wil_details_StagingConfigHeaderProperties;
struct wil_details_StagingConfigUsageTrigger;
struct wil_details_StagingConfigWnfStateName;
struct wil_details_VariantProperties;
struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
struct wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
struct wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
struct wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
struct wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
struct wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
struct wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
struct wistd::_Cat_base<0>;
struct wistd::_Cat_base<1>;
struct wistd::_Conjunction<>;
struct wistd::_Disjunction<>;
struct wistd::_Fun_class_base<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Fun_class_base<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Fun_class_base<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Fun_class_base<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil>;
struct wistd::_Get_deleter_pointer_type<char,wistd::default_delete<char [0]> >;
struct wistd::_Get_deleter_pointer_type<unsigned int,wistd::default_delete<unsigned int [0]> >;
struct wistd::_Get_deleter_pointer_type<unsigned short,wil::cotaskmem_secure_deleter>;
struct wistd::_Get_deleter_pointer_type<unsigned short,wil::hlocal_secure_deleter>;
struct wistd::_Get_deleter_pointer_type<unsigned short,wistd::default_delete<unsigned short [0]> >;
struct wistd::_Get_deleter_pointer_type<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::_Get_deleter_pointer_type<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>;
struct wistd::_Get_function_impl<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
struct wistd::_Get_function_impl<void __cdecl(void)>;
struct wistd::_Get_function_impl<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
struct wistd::_Identity<char *>;
struct wistd::_Identity<unsigned int *>;
struct wistd::_Identity<unsigned short *>;
struct wistd::_Identity<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *>;
struct wistd::_Identity<wil::details::event_watcher_state *>;
struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *>;
struct wistd::_If<0,<lambda_3fe2b0614fdac0cb619a9741254350d8> *,<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::_If<0,<lambda_abc0e13b19a274b8d7356cc116837fba> *,<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::_If<0,<lambda_af47d61301194c5d4839e4c10d405b79> *,<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::_If<0,char &,wil::details::ApiTelemetryLogger::ApiDataList::ApiData &>;
struct wistd::_If<0,char &,wil::details::event_watcher_state &>;
struct wistd::_If<0,wil::cotaskmem_secure_deleter,wil::cotaskmem_secure_deleter const &>;
struct wistd::_If<0,wil::hlocal_secure_deleter,wil::hlocal_secure_deleter const &>;
struct wistd::_If<0,wil::process_heap_deleter,wil::process_heap_deleter const &>;
struct wistd::_If<0,wistd::default_delete<char [0]>,wistd::default_delete<char [0]> const &>;
struct wistd::_If<0,wistd::default_delete<unsigned int [0]>,wistd::default_delete<unsigned int [0]> const &>;
struct wistd::_If<0,wistd::default_delete<unsigned short [0]>,wistd::default_delete<unsigned short [0]> const &>;
struct wistd::_If<0,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> const &>;
struct wistd::_If<0,wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> const &>;
struct wistd::_Is_floating_point<double>;
struct wistd::_Is_floating_point<float>;
struct wistd::_Is_floating_point<long double>;
struct wistd::_Is_funptr<<lambda_3fe2b0614fdac0cb619a9741254350d8> *>;
struct wistd::_Is_funptr<<lambda_abc0e13b19a274b8d7356cc116837fba> *>;
struct wistd::_Is_funptr<<lambda_af47d61301194c5d4839e4c10d405b79> *>;
struct wistd::_Is_integral<__int64>;
struct wistd::_Is_integral<bool>;
struct wistd::_Is_integral<char16_t>;
struct wistd::_Is_integral<char32_t>;
struct wistd::_Is_integral<char>;
struct wistd::_Is_integral<int>;
struct wistd::_Is_integral<long>;
struct wistd::_Is_integral<short>;
struct wistd::_Is_integral<signed char>;
struct wistd::_Is_integral<unsigned __int64>;
struct wistd::_Is_integral<unsigned char>;
struct wistd::_Is_integral<unsigned int>;
struct wistd::_Is_integral<unsigned long>;
struct wistd::_Is_integral<unsigned short>;
struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter>;
struct wistd::_Is_pointer<wil::hlocal_secure_deleter>;
struct wistd::_Is_pointer<wil::process_heap_deleter>;
struct wistd::_Is_pointer<wistd::default_delete<char [0]> >;
struct wistd::_Is_pointer<wistd::default_delete<unsigned int [0]> >;
struct wistd::_Is_pointer<wistd::default_delete<unsigned short [0]> >;
struct wistd::_Is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::_Is_void<void>;
struct wistd::_Is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::_Is_void<wil::details::event_watcher_state>;
struct wistd::_Nil;
struct wistd::_Wrap_int;
struct wistd::add_pointer<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::add_pointer<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::add_pointer<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::add_reference<char>;
struct wistd::add_reference<unsigned int>;
struct wistd::add_reference<unsigned short>;
struct wistd::add_reference<void const >;
struct wistd::add_reference<void const volatile >;
struct wistd::add_reference<void volatile >;
struct wistd::add_reference<void>;
struct wistd::add_reference<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::add_reference<wil::details::event_watcher_state>;
struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >;
struct wistd::add_rvalue_reference<void const >;
struct wistd::add_rvalue_reference<void const volatile >;
struct wistd::add_rvalue_reference<void volatile >;
struct wistd::add_rvalue_reference<void>;
struct wistd::decay<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::decay<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::decay<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::default_delete<char [0]>;
struct wistd::default_delete<char>;
struct wistd::default_delete<unsigned int [0]>;
struct wistd::default_delete<unsigned int>;
struct wistd::default_delete<unsigned short [0]>;
struct wistd::default_delete<unsigned short>;
struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::default_delete<wil::details::event_watcher_state>;
struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >;
struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >;
struct wistd::details::function_allocator<wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>,wistd::details::function_allocator<wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >,void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >;
struct wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >;
struct wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >;
struct wistd::enable_if<0,void *>;
struct wistd::enable_if<1,void *>;
struct wistd::integral_constant<bool,0>;
struct wistd::integral_constant<bool,1>;
struct wistd::integral_constant<char,0>;
struct wistd::integral_constant<char,1>;
struct wistd::integral_constant<unsigned __int64,0>;
struct wistd::integral_constant<unsigned __int64,1>;
struct wistd::integral_constant<unsigned __int64,2>;
struct wistd::is_array<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::is_array<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::is_array<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::is_class<bool>;
struct wistd::is_class<int>;
struct wistd::is_class<unsigned char>;
struct wistd::is_class<unsigned short *>;
struct wistd::is_class<void *>;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter> >;
struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter> >;
struct wistd::is_empty<wil::cotaskmem_secure_deleter>;
struct wistd::is_empty<wil::hlocal_secure_deleter>;
struct wistd::is_empty<wil::process_heap_deleter>;
struct wistd::is_empty<wistd::default_delete<char [0]> >;
struct wistd::is_empty<wistd::default_delete<unsigned int [0]> >;
struct wistd::is_empty<wistd::default_delete<unsigned short [0]> >;
struct wistd::is_empty<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_empty<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_function<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::is_function<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::is_function<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::is_lvalue_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_lvalue_reference<wil::hlocal_secure_deleter>;
struct wistd::is_lvalue_reference<wil::process_heap_deleter>;
struct wistd::is_lvalue_reference<wistd::default_delete<char [0]> >;
struct wistd::is_lvalue_reference<wistd::default_delete<unsigned int [0]> >;
struct wistd::is_lvalue_reference<wistd::default_delete<unsigned short [0]> >;
struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_pointer<wil::cotaskmem_secure_deleter>;
struct wistd::is_pointer<wil::hlocal_secure_deleter>;
struct wistd::is_pointer<wil::process_heap_deleter>;
struct wistd::is_pointer<wistd::default_delete<char [0]> >;
struct wistd::is_pointer<wistd::default_delete<unsigned int [0]> >;
struct wistd::is_pointer<wistd::default_delete<unsigned short [0]> >;
struct wistd::is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_reference<wil::hlocal_secure_deleter>;
struct wistd::is_reference<wil::process_heap_deleter>;
struct wistd::is_reference<wistd::default_delete<char [0]> >;
struct wistd::is_reference<wistd::default_delete<unsigned int [0]> >;
struct wistd::is_reference<wistd::default_delete<unsigned short [0]> >;
struct wistd::is_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_rvalue_reference<wil::cotaskmem_secure_deleter>;
struct wistd::is_rvalue_reference<wil::hlocal_secure_deleter>;
struct wistd::is_rvalue_reference<wil::process_heap_deleter>;
struct wistd::is_rvalue_reference<wistd::default_delete<char [0]> >;
struct wistd::is_rvalue_reference<wistd::default_delete<unsigned int [0]> >;
struct wistd::is_rvalue_reference<wistd::default_delete<unsigned short [0]> >;
struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_same<int,int>;
struct wistd::is_same<long,long>;
struct wistd::is_same<std::nullptr_t,std::nullptr_t>;
struct wistd::is_same<void,void>;
struct wistd::is_same<wistd::default_delete<char [0]>,wistd::default_delete<char [0]> >;
struct wistd::is_same<wistd::default_delete<unsigned int [0]>,wistd::default_delete<unsigned int [0]> >;
struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::cotaskmem_secure_deleter>;
struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::hlocal_secure_deleter>;
struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wistd::default_delete<unsigned short [0]> >;
struct wistd::is_same<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::is_same<wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >,wil::process_heap_deleter>;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,0> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,1> >;
struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,2> >;
struct wistd::is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::is_void<wil::details::event_watcher_state>;
struct wistd::less<void>;
struct wistd::pointer_traits<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *>;
struct wistd::pointer_traits<wil::details::event_watcher_state *>;
struct wistd::remove_const<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::remove_const<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::remove_const<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::remove_const<wil::cotaskmem_secure_deleter>;
struct wistd::remove_const<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::remove_const<wil::details::event_watcher_state>;
struct wistd::remove_const<wil::hlocal_secure_deleter>;
struct wistd::remove_const<wil::process_heap_deleter>;
struct wistd::remove_const<wistd::default_delete<char [0]> >;
struct wistd::remove_const<wistd::default_delete<unsigned int [0]> >;
struct wistd::remove_const<wistd::default_delete<unsigned short [0]> >;
struct wistd::remove_const<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::remove_const<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_cv<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::remove_cv<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::remove_cv<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::remove_cv<wil::cotaskmem_secure_deleter>;
struct wistd::remove_cv<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::remove_cv<wil::details::event_watcher_state>;
struct wistd::remove_cv<wil::hlocal_secure_deleter>;
struct wistd::remove_cv<wil::process_heap_deleter>;
struct wistd::remove_cv<wistd::default_delete<char [0]> >;
struct wistd::remove_cv<wistd::default_delete<unsigned int [0]> >;
struct wistd::remove_cv<wistd::default_delete<unsigned short [0]> >;
struct wistd::remove_cv<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::remove_cv<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_extent<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::remove_extent<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::remove_extent<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::remove_reference<<lambda_3fe2b0614fdac0cb619a9741254350d8> &>;
struct wistd::remove_reference<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::remove_reference<<lambda_abc0e13b19a274b8d7356cc116837fba> &>;
struct wistd::remove_reference<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::remove_reference<<lambda_af47d61301194c5d4839e4c10d405b79> &>;
struct wistd::remove_reference<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::remove_reference<HSTRING__ * &>;
struct wistd::remove_reference<UxThemeTelemetry::CallContext &>;
struct wistd::remove_reference<_RTL_CRITICAL_SECTION * &>;
struct wistd::remove_reference<_RTL_CRITICAL_SECTION *>;
struct wistd::remove_reference<_RTL_SRWLOCK * &>;
struct wistd::remove_reference<_RTL_SRWLOCK *>;
struct wistd::remove_reference<char * &>;
struct wistd::remove_reference<char const (&)[12]>;
struct wistd::remove_reference<char const *>;
struct wistd::remove_reference<unsigned int *>;
struct wistd::remove_reference<unsigned short * &>;
struct wistd::remove_reference<unsigned short *>;
struct wistd::remove_reference<unsigned short const *>;
struct wistd::remove_reference<unsigned short>;
struct wistd::remove_reference<void * &>;
struct wistd::remove_reference<void *>;
struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType> &>;
struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> &>;
struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> >;
struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType> &>;
struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> &>;
struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >;
struct wistd::remove_reference<wil::PaintDC &>;
struct wistd::remove_reference<wil::SelectResult>;
struct wistd::remove_reference<wil::StoredFailureInfo &>;
struct wistd::remove_reference<wil::WindowDC>;
struct wistd::remove_reference<wil::cotaskmem_secure_deleter>;
struct wistd::remove_reference<wil::details::ApiTelemetryLogger::ApiDataList::ApiData * &>;
struct wistd::remove_reference<wil::details::ApiTelemetryLogger::CallContext &>;
struct wistd::remove_reference<wil::details::SecureZeroData>;
struct wistd::remove_reference<wil::details::StoredCallContextInfo &>;
struct wistd::remove_reference<wil::details::ThreadFailureCallbackHolder &>;
struct wistd::remove_reference<wil::details::event_watcher_state * &>;
struct wistd::remove_reference<wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> > &>;
struct wistd::remove_reference<wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> > &>;
struct wistd::remove_reference<wil::details_abi::SemaphoreValue &>;
struct wistd::remove_reference<wil::hlocal_secure_deleter>;
struct wistd::remove_reference<wil::last_error_context &>;
struct wistd::remove_reference<wil::process_heap_deleter>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &>;
struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> >;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> >;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> &>;
struct wistd::remove_reference<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> >;
struct wistd::remove_reference<wistd::default_delete<char [0]> >;
struct wistd::remove_reference<wistd::default_delete<unsigned int [0]> >;
struct wistd::remove_reference<wistd::default_delete<unsigned short [0]> >;
struct wistd::remove_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> &>;
struct wistd::remove_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::remove_reference<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::remove_reference<wistd::function<void __cdecl(void)> &>;
struct wistd::remove_reference<wistd::function<void __cdecl(void)> >;
struct wistd::remove_reference<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &>;
struct wistd::remove_volatile<<lambda_3fe2b0614fdac0cb619a9741254350d8> >;
struct wistd::remove_volatile<<lambda_abc0e13b19a274b8d7356cc116837fba> >;
struct wistd::remove_volatile<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct wistd::remove_volatile<wil::cotaskmem_secure_deleter>;
struct wistd::remove_volatile<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
struct wistd::remove_volatile<wil::details::event_watcher_state>;
struct wistd::remove_volatile<wil::hlocal_secure_deleter>;
struct wistd::remove_volatile<wil::process_heap_deleter>;
struct wistd::remove_volatile<wistd::default_delete<char [0]> >;
struct wistd::remove_volatile<wistd::default_delete<unsigned int [0]> >;
struct wistd::remove_volatile<wistd::default_delete<unsigned short [0]> >;
struct wistd::remove_volatile<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct wistd::remove_volatile<wistd::default_delete<wil::details::event_watcher_state> >;
struct wistd::unary_function<wistd::_Nil,void>;
struct wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void>;

union API_GENERIC;
union API_THEMES_SPECIFIC;
union FT;
union HBITMAP64;
union MIXEDPTRS;
union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer;
union PERSONALITYTRANSFORM;
union PFNSUXCTRL;
union USN_RECORD_UNION;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
union _CLIENT_CALL_RETURN;
union _DL_EUI48;
union _ENERGY_STATE_DURATION;
union _ExecEnvDataEx;
union _FILE_SEGMENT_ELEMENT;
union _FOUR_PART_VERSION;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
union _IMAGE_AUX_SYMBOL;
union _IMAGE_AUX_SYMBOL_EX;
union _JOBOBJECT_ENERGY_TRACKING_STATE;
union _LARGE_INTEGER;
union _LDR_DLL_NOTIFICATION_DATA;
union _MCI_ADDR;
union _MCI_STATS;
union _MM_ETW_PAGE_EXTRA_INFO;
union _POWER_STATE;
union _PROCESS_AFFINITY_UPDATE_MODE;
union _PROCESS_LOGGING_INFORMATION;
union _PROCESS_MEMORY_ALLOCATION_MODE;
union _PROCESS_READWRITEVM_LOGGING_INFORMATION;
union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT;
union _RATE_QUOTA_LIMIT;
union _RPC_ASYNC_NOTIFICATION_INFO;
union _RTL_ELEVATION_FLAGS;
union _RTL_IMAGE_MITIGATION_POLICY;
union _RTL_RUN_ONCE;
union _RTL_TICK_LOCK;
union _RemotableHandle::__MIDL_IWinTypes_0009;
union _SE_SID;
union _SLIST_HEADER;
union _STORAGE_SPEC_VERSION;
union _STREAM_INFORMATION_ENTRY::_StreamInformation;
union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES;
union _SYSDBG_LIVEDUMP_CONTROL_FLAGS;
union _StreamInformation;
union _TIMELINE_BITMAP;
union _ULARGE_INTEGER;
union _UNWIND_CODE;
union _WINSTATIONINFORMATIONEX_LEVEL;
union __MIDL_IAdviseSink_0002;
union __MIDL_IAdviseSink_0003;
union __MIDL_IOleAutomationTypes_0001;
union __MIDL_IWinTypes_0001;
union __MIDL_IWinTypes_0002;
union __MIDL_IWinTypes_0003;
union __MIDL_IWinTypes_0004;
union __MIDL_IWinTypes_0005;
union __MIDL_IWinTypes_0006;
union __MIDL_IWinTypes_0007;
union __MIDL_IWinTypes_0008;
union __MIDL_IWinTypes_0009;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
union __MIDL___MIDL_itf_wtypes_0000_0001_0005;
union __m128;
union __m128i;
union __m256;
union __m256i;
union __m64;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
union _userHBITMAP::__MIDL_IWinTypes_0007;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
union _userHPALETTE::__MIDL_IWinTypes_0008;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
union tagBINDPTR;
union tagCY;
union tagUAHMENUITEMMETRICS;
union wil_details_FeaturePropertyCache;

enum ABBACKGROUNDSTATES;
enum ABI::Windows::Foundation::AsyncStatus;
enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags;
enum ACCENT_STATE;
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
enum ACTCTX_REQUESTED_RUN_LEVEL;
enum ACTIVATEOPTIONS;
enum ADDRESSBANDPARTS;
enum ADDTOGRIDSTATES;
enum ADDTOLISTSTATES;
enum ADDTOSEARCHGRIDSTATES;
enum ADDTOSEARCHLISTSTATES;
enum ADJACENT_DISPLAY_EDGES;
enum AEROWIZARDPARTS;
enum AHE_TYPE;
enum ALTTABPARTS;
enum ANIMATIONSPARTS;
enum APPCOMPATMODEID;
enum APPDOCLISTTYPE;
enum APPLICATION_LAYOUT_MODE;
enum APPLICATION_SEARCH_TYPE;
enum APPLICATION_VIEW_MIN_WIDTH;
enum APPLICATION_VIEW_ORIENTATION;
enum APPLICATION_VIEW_SIZE_PREFERENCE;
enum APPLICATION_VIEW_STATE;
enum ARRANGED_WINDOW_SIZE_RESULT;
enum ARRANGEMENT_COMPLETED_RESULT;
enum ARRANGEMENT_HOTKEY_DISAMBIGUATION;
enum ARROWBTNSTATES;
enum ASSOCCLASS;
enum ASSOCDATA;
enum ASSOCENUM;
enum ASSOCIATIONLEVEL;
enum ASSOCIATIONTYPE;
enum ASSOCKEY;
enum ASSOCSTR;
enum ASSOC_FILTER;
enum ATL::atlTraceFlags;
enum ATTACHMENT_ACTION;
enum ATTACHMENT_PROMPT;
enum AUTOMATION_VERIFICATION_CLASS;
enum AWSTYPE;
enum AccentIndex;
enum AgileReferenceOptions;
enum BACKGROUNDSTATES;
enum BACKGROUNDWITHBORDERSTATES;
enum BALLOONSTATES;
enum BALLOONSTEMSTATES;
enum BANNER_NOTIFICATION_EVENT;
enum BARBACKGROUNDSTATES;
enum BARFOREGROUNDSTATES;
enum BARITEMSTATES;
enum BARRIERPAGEPARTS;
enum BCBOVERFLOWCHEVRONSTATES;
enum BCRYPT_HASH_OPERATION_TYPE;
enum BCRYPT_MULTI_OPERATION_TYPE;
enum BGTYPE;
enum BIDI_TYPE;
enum BINARY_TEXT_ENCODE_SCHEME;
enum BODYSTATES;
enum BORDERSTATES;
enum BORDERTYPE;
enum BORDER_HSCROLLSTATES;
enum BORDER_HVSCROLLSTATES;
enum BORDER_NOSCROLLSTATES;
enum BORDER_VSCROLLSTATES;
enum BOTTOMFRAMESTATES;
enum BOTTOMSHADOWSTATES;
enum BP_STATE;
enum BREADCRUMBBARPARTS;
enum BROWSER_RESTRICTIONS;
enum BUTTONACTIVECAPTIONDARKSTATES;
enum BUTTONACTIVECAPTIONENDDARKSTATES;
enum BUTTONACTIVECAPTIONENDSTATES;
enum BUTTONACTIVECAPTIONSTATES;
enum BUTTONACTIVECLOSEALONESTATES;
enum BUTTONACTIVECLOSESTATES;
enum BUTTONCLOSEGLYPH120DARKSTATES;
enum BUTTONCLOSEGLYPH120STATES;
enum BUTTONCLOSEGLYPH144DARKSTATES;
enum BUTTONCLOSEGLYPH144STATES;
enum BUTTONCLOSEGLYPH192DARKSTATES;
enum BUTTONCLOSEGLYPH192STATES;
enum BUTTONCLOSEGLYPH96DARKSTATES;
enum BUTTONCLOSEGLYPH96STATES;
enum BUTTONINACTIVECAPTIONDARKSTATES;
enum BUTTONINACTIVECAPTIONENDDARKSTATES;
enum BUTTONINACTIVECAPTIONENDSTATES;
enum BUTTONINACTIVECAPTIONSTATES;
enum BUTTONINACTIVECLOSEALONESTATES;
enum BUTTONINACTIVECLOSESTATES;
enum BUTTONPARTS;
enum BUTTONSTATES;
enum BrowserNavConstants;
enum ButtonHelpGlyph120DarkSTATES;
enum ButtonHelpGlyph120STATES;
enum ButtonHelpGlyph144DarkSTATES;
enum ButtonHelpGlyph144STATES;
enum ButtonHelpGlyph192DarkSTATES;
enum ButtonHelpGlyph192STATES;
enum ButtonHelpGlyph96DarkSTATES;
enum ButtonHelpGlyph96STATES;
enum ButtonMaxGlyph120DarkSTATES;
enum ButtonMaxGlyph120STATES;
enum ButtonMaxGlyph144DarkSTATES;
enum ButtonMaxGlyph144STATES;
enum ButtonMaxGlyph192DarkSTATES;
enum ButtonMaxGlyph192STATES;
enum ButtonMaxGlyph96DarkSTATES;
enum ButtonMaxGlyph96STATES;
enum ButtonMinGlyph120DarkSTATES;
enum ButtonMinGlyph120STATES;
enum ButtonMinGlyph144DarkSTATES;
enum ButtonMinGlyph144STATES;
enum ButtonMinGlyph192DarkSTATES;
enum ButtonMinGlyph192STATES;
enum ButtonMinGlyph96DarkSTATES;
enum ButtonMinGlyph96STATES;
enum ButtonRestoreGlyph120DarkSTATES;
enum ButtonRestoreGlyph120STATES;
enum ButtonRestoreGlyph144DarkSTATES;
enum ButtonRestoreGlyph144STATES;
enum ButtonRestoreGlyph192DarkSTATES;
enum ButtonRestoreGlyph192STATES;
enum ButtonRestoreGlyph96DarkSTATES;
enum ButtonRestoreGlyph96STATES;
enum CAPTIONSTATES;
enum CASE_REQUIREMENT;
enum CATEGORYINFO_FLAGS;
enum CATSORT_FLAGS;
enum CAccentResources::ResourceType;
enum CDCONTROLSTATEF;
enum CHARM_WINDOW_VISIBILITY_BEHAVIOR;
enum CHARTVIEWPARTS;
enum CHECKBOXSTATES;
enum CHEVRONSTATES;
enum CHEVRONVERTSTATES;
enum CI_WINDOWS_LOCKDOWN_RESTRICTION;
enum CLOCKPARTS;
enum CLOCKSTATES;
enum CLOSEBUTTONSTATES;
enum CLOSESTATES;
enum CM_ENUM_FLAGS;
enum CM_MASK;
enum CM_SET_WIDTH_VALUE;
enum CM_STATE;
enum COLLAPSEBUTTONSTATES;
enum COLLAPSESTATES;
enum COLUMNHEADERTEXTSTATES;
enum COMBOBOXPARTS;
enum COMBOBOXSTYLESTATES;
enum COMMANDLINKGLYPHSTATES;
enum COMMANDLINKSTATES;
enum COMMANDMODULEPARTS;
enum COMMAND_SET;
enum COMMUNICATIONSPARTS;
enum COMPARTMENT_ID;
enum CONFIRMATIONRESPONSE;
enum CONFLICT_FILTER;
enum CONTENTALIGNMENT;
enum CONTENTAREASTATES;
enum CONTENTION_COLUMN_HEADERSTATES;
enum CONTENTLINKSTATES;
enum CONTENTPANESTATES;
enum CONTROLLABELSTATES;
enum CONTROLPANELPARTS;
enum COPYCLOSEBTNSTATES;
enum COPYCLOSEPARTS;
enum COPYSTATES;
enum COPY_BORDERSTATES;
enum COPY_GRIDSTATES;
enum COPY_LINE1FILLSTATES;
enum COPY_LINE1STATES;
enum COPY_LINE2FILLSTATES;
enum COPY_LINE2STATES;
enum COREWINDOWROLE;
enum CO_MARSHALING_CONTEXT_ATTRIBUTES;
enum CPVIEW;
enum CREATELINKSTATES;
enum CROSSFADESTATES;
enum CSTN_FILE_EXTENSION_OPTION;
enum CShakeWnd::_ESC_ACTION;
enum CShakeWnd::_SHAKE_STATE;
enum CThemeSignature::KEY_TYPES;
enum CUEBANNERSTATES;
enum CWMO_FLAGS;
enum CertKeyType;
enum CommandStateChangeConstants;
enum CommonItemsDialogPARTS;
enum D3DDISPLAYROTATION;
enum D3DSCANLINEORDERING;
enum DATAOBJ_GET_ITEM_FLAGS;
enum DATEBORDERSTATES;
enum DATEPICKERPARTS;
enum DATETEXTSTATES;
enum DCTYPE;
enum DEFAULTSAVEFOLDERTYPE;
enum DEFAULT_FOLDER_MENU_RESTRICTIONS;
enum DEF_SHARE_ID;
enum DELAYED_RETRIEVAL_TYPE;
enum DELETEFROMGRIDSTATES;
enum DELETEFROMLISTSTATES;
enum DELETEFROMSEARCHGRIDSTATES;
enum DELETEFROMSEARCHLISTSTATES;
enum DESKTOP_SLIDESHOW_DIRECTION;
enum DESKTOP_SLIDESHOW_OPTIONS;
enum DESKTOP_SLIDESHOW_STATE;
enum DESKTOP_VISIBILITY_NOTIFICATION_TYPE;
enum DESKTOP_WALLPAPER_POSITION;
enum DESTLISTKIND;
enum DESTLISTTYPE;
enum DEVICE_SCALE_FACTOR;
enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS;
enum DIALOG_DPI_CHANGE_BEHAVIORS;
enum DISK_CACHE_RETENTION_PRIORITY;
enum DISPLAYCONFIG_DEVICE_INFO_TYPE;
enum DISPLAYCONFIG_DEVICE_INFO_TYPE_INTERNAL;
enum DISPLAYCONFIG_MODE_INFO_TYPE;
enum DISPLAYCONFIG_PIXELFORMAT;
enum DISPLAYCONFIG_ROTATION;
enum DISPLAYCONFIG_SCALING;
enum DISPLAYCONFIG_SCANLINE_ORDERING;
enum DISPLAYCONFIG_TARGET_USAGE;
enum DISPLAYCONFIG_TOPOLOGY_ID;
enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;
enum DISPLAYSETTINGEVENTTYPE;
enum DISPLAY_DEVICE_TYPE;
enum DIT_HITTESTATTRIBUTES;
enum DOWNHORZSTATES;
enum DOWNSTATES;
enum DPI_AWARENESS;
enum DPI_HOSTING_BEHAVIOR;
enum DRAGBETWEENENTERSTATES;
enum DRAGBETWEENLEAVESTATES;
enum DRAGDROPPARTS;
enum DRAGSOURCEENDSTATES;
enum DRAGSOURCESTARTSTATES;
enum DRAWPROGRESSFLAGS;
enum DROPDOWNBUTTONLEFTSTATES;
enum DROPDOWNBUTTONRIGHTSTATES;
enum DROPDOWNITEMSTATES;
enum DROPIMAGETYPE;
enum DROPLISTCONTROLPARTS;
enum DSAFIPSVERSION_ENUM;
enum DWMFLIP3DWINDOWPOLICY;
enum DWMNCADORNMENT;
enum DWMNCRENDERINGPOLICY;
enum DWMPANIMATION_CLOCK_TIME;
enum DWMPENPARTS;
enum DWMPGLASSATTRIBUTE;
enum DWMPWINDOWATTRIBUTE;
enum DWMTOUCHPARTS;
enum DWMTRANSITION_OWNEDWINDOW_TARGET;
enum DWMTRANSITION_STORYBOARD_STATE;
enum DWMTRANSITION_TARGET;
enum DWMWINDOWATTRIBUTE;
enum DWMWINDOWATTRIBUTE_TABSHELL;
enum DWMWINDOWPARTS;
enum DWM_SHOWCONTACT;
enum DWM_SOURCE_FRAME_SAMPLING;
enum DWM_SWAPCHAINRENDERTARGET_METADATA_ID;
enum DWM_TABBING_ENABLED;
enum DWM_TAB_GROUPING_PREFERENCE;
enum DWM_TAB_WINDOW_REQUIREMENTS;
enum DXGI_FORMAT;
enum ECC_CURVE_ALG_ID_ENUM;
enum ECC_CURVE_TYPE_ENUM;
enum EC_ENDOFLINE;
enum EC_HOST_UI_MODE;
enum EC_SEARCHWEB_ENTRYPOINT;
enum EDGE_GESTURE_KIND;
enum EDITBORDER_HSCROLLSTATES;
enum EDITBORDER_HVSCROLLSTATES;
enum EDITBORDER_NOSCROLLSTATES;
enum EDITBORDER_VSCROLLSTATES;
enum EDITPARTS;
enum EDITPROPERTIESSTATES;
enum EDITTEXTSTATES;
enum EDIT_CONTROL_FEATURE;
enum ELEMENT;
enum ELEMENTSPYVALUE;
enum ELEVATION_STATE;
enum EMPTYMARKUPPARTS;
enum ENTERPAGESTATES;
enum ENUM_FILE_INFORMATION_CLASS;
enum EPrintPropertyType;
enum EPrintXPSJobOperation;
enum EPrintXPSJobProgress;
enum ERROR_CODES_NOTIFICATIONS;
enum ESC_ACTION;
enum EWinStationExtendedSettingsType;
enum EXPANDBUTTONSTATES;
enum EXPANDOBUTTONSTATES;
enum EXPANDSTATES;
enum EXPLORERBARPARTS;
enum EXPLORER_BROWSER_FILL_FLAGS;
enum EXPLORER_BROWSER_OPTIONS;
enum EXTCOCREATEFLAGS;
enum EXTENSIONLIST_HIDDEN_OPTION;
enum EXTENSIONLIST_PINNED_OPTION;
enum EXTENSIONLIST_USAGE_OPTION;
enum ExplorerStatusBarPARTS;
enum ExtensionListComparisonResult;
enum ExtensionListStalenessFlags;
enum FADEINSTATES;
enum FADEOUTSTATES;
enum FDAP;
enum FDE_OVERWRITE_RESPONSE;
enum FDE_SHAREVIOLATION_RESPONSE;
enum FD_FLAGS;
enum FEATURE_CHANGE_TIME;
enum FEATURE_ENABLED_STATE;
enum FFFP_MODE;
enum FILETYPEATTRIBUTEFLAGS;
enum FILE_OPERATION_FLAGS2;
enum FILE_USAGE_TYPE;
enum FILLSTATES;
enum FILLTYPE;
enum FILLVERTSTATES;
enum FLICK_TYPE;
enum FLYOUTMENU_SETTING;
enum FLYOUTPARTS;
enum FLYOUT_PLACEMENT;
enum FOCUSDIRECTION;
enum FOCUSRECTINNERSTATES;
enum FOCUSRECTSTATES;
enum FOLDERFLAGS;
enum FOLDERLOGICALVIEWMODE;
enum FOLDERSHEADERSTATES;
enum FOLDERVIEWMODE;
enum FOLDER_ENUM_MODE;
enum FRAMEBOTTOMSTATES;
enum FRAMELEFTSTATES;
enum FRAMERIGHTSTATES;
enum FRAMESTATES;
enum FRAMEWORK_INPUT_PANE_BEHAVIOR_MODE;
enum FVTEXTTYPE;
enum GDISCALE_COMMAND;
enum GESTURE_TYPE;
enum GETPROPERTYSTOREFLAGS;
enum GETSORTCOLUMN;
enum GET_PROPERTY_STORE_TYPE;
enum GHOSTREASON;
enum GLYPHFONTSIZINGTYPE;
enum GLYPHSTATES;
enum GLYPHTYPE;
enum GRIDCELLBACKGROUNDSTATES;
enum GRIDCELLSTATES;
enum GRIDCELLUPPERSTATES;
enum GRIDNUM;
enum GRIPPERSTATES;
enum GROUPBOXSTATES;
enum GROUPHEADERLINESTATES;
enum GROUPHEADERSTATES;
enum GROUP_WINDOW_MANAGEMENT_POLICY;
enum GROUP_WINDOW_ROLE;
enum HALIGN;
enum HARDWARE_EXPRESSION_ACCENT_LOAD_STATUS;
enum HASHALGORITHM_ENUM;
enum HDIOPTION;
enum HEADERAREASTATES;
enum HEADERCLOSESTATES;
enum HEADERDROPDOWNFILTERSTATES;
enum HEADERDROPDOWNSTATES;
enum HEADERITEMLEFTSTATES;
enum HEADERITEMRIGHTSTATES;
enum HEADERITEMSTATES;
enum HEADEROVERFLOWSTATES;
enum HEADERPARTS;
enum HEADERPINSTATES;
enum HEADERSORTARROWSTATES;
enum HEADERSTYLESTATES;
enum HEATMAP_COLOR0STATES;
enum HEATMAP_COLOR1STATES;
enum HEATMAP_COLOR2STATES;
enum HEATMAP_COLOR3STATES;
enum HEATMAP_COLOR4STATES;
enum HEATMAP_COLOR5STATES;
enum HEATMAP_COLOR6STATES;
enum HEATMAP_COLOR7STATES;
enum HEATMAP_COLOR8STATES;
enum HEATMAP_CONTENTIONMARKERSTATES;
enum HELPBUTTONSTATES;
enum HELPLINKSTATES;
enum HELPSEARCHBOXPARTS;
enum HIDEEDGEUISTATES;
enum HIDEPANELSTATES;
enum HIDEPOPUPSTATES;
enum HIDESTATES;
enum HIGHCONTRASTCOLOR;
enum HOMEGROUPSHARINGCHOICES;
enum HORZSCROLLSTATES;
enum HORZTHUMBSTATES;
enum HOSTED_APP_CHANGED;
enum HOTGLYPHSTATES;
enum HOVERBACKGROUNDSTATES;
enum HSBBACKGROUNDSTATES;
enum HYPERLINKSTATES;
enum HYPERLINKTEXTSTATES;
enum ICONEFFECT;
enum IEBARMENUSTATES;
enum IEObjectType;
enum IGNOREMIME;
enum IHM_DISPLAY_MODE;
enum IMAGELAYOUT;
enum IMAGESELECTTYPE;
enum IMAGE_AUX_SYMBOL_TYPE;
enum IMCLR_DERIVATION_RULE_FLAGS;
enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE;
enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER;
enum IMMERSIVE_APPLICATION_PRESENTATION_CHANGE;
enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION;
enum IMMERSIVE_COLOR_TYPE;
enum IMMERSIVE_HC_CACHE_MODE;
enum IMMERSIVE_HOT_KEY_ID;
enum IMMERSIVE_MONITOR_MOVE_DIRECTION;
enum IMM_APP_CHANGED;
enum IMM_SYSTEM_MODE;
enum IMPORT_OBJECT_NAME_TYPE;
enum IMPORT_OBJECT_TYPE;
enum INERTIA_SOURCE;
enum INFOBARPARTS;
enum INFOBARSTATES;
enum INFO_TYPE;
enum INK_FEEDBACK_COMMAND;
enum INK_FEEDBACK_PEN_NIB_SHAPE;
enum INK_FEEDBACK_PEN_TYPE;
enum INPUTDELEGATION_MODE_FLAGS;
enum INPUTFOCUSEVENTSOURCE;
enum INPUT_DESTINATION_IDENTITY;
enum INPUT_DESTINATION_WINDOW_TYPE;
enum INPUT_SPACE_FLAGS;
enum INPUT_SPACE_REGION_FLAGS;
enum ITEMDEVIRTUALIZERVALUE;
enum ITEMSTATES;
enum ITEMSVIEWPARTS;
enum ITEMSVIEWSPYVALUE;
enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS;
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS;
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS;
enum KEYBOARD_CORRECTION_ACTION_WPARAM;
enum KEY_TYPES;
enum KF_CATEGORY;
enum KNOWNDESTCATEGORY;
enum KNOWN_FOLDER_FLAG;
enum KNOWN_FOLDER_FLAG_INTERNAL;
enum LABELSTATES;
enum LAST_COPYITEM_ERROR_TYPE;
enum LATENCY_TIME;
enum LEFTFRAMESTATES;
enum LIBRARYFOLDERFILTER;
enum LIBRARYMANAGEDIALOGOPTIONS;
enum LIBRARYOPTIONFLAGS;
enum LIBRARYPANEMENUGLYPHSTATES;
enum LIBRARYPANETOPVIEWSTATES;
enum LIBRARYSAVEFLAGS;
enum LINESCROLLERVALUE;
enum LINKHEADERSTATES;
enum LINKPARTS;
enum LINKSTATES;
enum LISTBOXPARTS;
enum LISTITEMSTATES;
enum LISTVIEWPARTS;
enum LIVEPREVIEW_TRIGGER;
enum LOGOFFBUTTONSSTATES;
enum LOGON_ERROR_CODE;
enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE;
enum LSA_FOREST_TRUST_RECORD_TYPE;
enum LogOptions;
enum MARKUPTEXTSTATES;
enum MAXBUTTONSTATES;
enum MAXCAPTIONSTATES;
enum MCA_EXCEPTION_TYPE;
enum MCFFLAGS;
enum MDICLOSEBUTTONSTATES;
enum MDIMINBUTTONSTATES;
enum MDIRESTOREBUTTONSTATES;
enum MEDIAPLAYBACK_STATE;
enum MEM_EXTENDED_PARAMETER_TYPE;
enum MEM_SECTION_EXTENDED_PARAMETER_TYPE;
enum MENUBANDPARTS;
enum MENUBANDSTATES;
enum MENUBUTTONSTATES;
enum MENUPARTS;
enum MERGE_UPDATE_STATUS;
enum MESSAGE_HANDLER_MESSAGE_TYPE;
enum MFU_FOLDER_ACTION;
enum MINBUTTONSTATES;
enum MINCAPTIONSTATES;
enum MIRROROPTIONENUM;
enum MIT_INPUT_INTEROP_CALLBACK;
enum MODE_CHANGE_REASON;
enum MONITOR_APP_VISIBILITY;
enum MONITOR_DPI_TYPE;
enum MONTHCALPARTS;
enum MOREPROGRAMSARROWBACKSTATES;
enum MOREPROGRAMSARROWSTATES;
enum MOREPROGRAMSTABPRIVSTATES;
enum MOREPROGRAMSTABSTATES;
enum MOVESIZE_INITIATION_DEVICE_TYPE;
enum MOVESIZE_OPERATION;
enum MOVESTATES;
enum MSG_TYPE;
enum MSV1_0_AVID;
enum Microsoft::WRL::FactoryCacheFlags;
enum Microsoft::WRL::ModuleType;
enum Microsoft::WRL::RuntimeClassType;
enum NAMESPACEWALKFLAG;
enum NAMESPACE_FOLDER_PREFERENCES_FLAGS;
enum NATIVE_DISPLAY_ORIENTATION;
enum NAVIGATIONPARTS;
enum NAVNEXTSTATES;
enum NAVPREVSTATES;
enum NAV_BACKBUTTONSTATES;
enum NAV_FORWARDBUTTONSTATES;
enum NAV_MENUBUTTONSTATES;
enum NCADORNMENT;
enum NCRENDERINGPOLICY;
enum NEGOTIATE_MESSAGES;
enum NONESTATES;
enum NORMALGROUPCOLLAPSESTATES;
enum NORMALGROUPEXPANDSTATES;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION;
enum NSTCFOLDERCAPABILITIES;
enum NSTCGNI;
enum NWMF;
enum NewProcessCauseConstants;
enum OCT_BANNED_API;
enum OFFER_PRIORITY;
enum OFFSETTYPE;
enum OLECMDEXECOPT;
enum OLECMDF;
enum OLECMDID;
enum OLECMDID_BROWSERSTATEFLAG;
enum OLECMDID_OPTICAL_ZOOMFLAG;
enum OLECMDID_PAGEACTIONFLAG;
enum OLECMDID_REFRESHFLAG;
enum OLECMDID_VIEWPORT_MODE_FLAG;
enum OLECMDID_WINDOWSTATE_FLAG;
enum OLECMDTEXTF;
enum OLE_TRISTATE;
enum OPENBOXSTATES;
enum OPERATION_INTERRUPT_RESPONSE_SINGLE;
enum OPERATION_MODE;
enum OPERATION_TYPE;
enum ORIENTATION_PREFERENCE;
enum OfflineFolderStatus;
enum PACKAGE_EXECUTION_STATE;
enum PAGEACTION_UI;
enum PAGEPARTS;
enum PAUSEBTNSTATES;
enum PAUSEPARTS;
enum PDOPSTATUS;
enum PEEKSTATES;
enum PERSIST_SPROPSTORE_FLAGS_PRIV;
enum PFNIDX;
enum PICKER_TYPE;
enum PIDMSI_STATUS_VALUE;
enum PINNEDLISTMODIFYCALLER;
enum PKA_FLAGS;
enum PLACEHOLDER_STATES;
enum PLATEAU;
enum PLATEAU_INDEX;
enum POINTERDOWNSTATES;
enum POINTERUPSTATES;
enum POINTER_FEEDBACK_MODE;
enum POPUPCHECKBACKGROUNDSTATES;
enum POPUPCHECKSTATES;
enum POPUPITEMSTATES;
enum POPUPSUBMENUSTATES;
enum POWER_ACTION;
enum POWER_INFORMATION_LEVEL;
enum POWER_MONITOR_REQUEST_REASON;
enum POWER_STATE_DISABLED_TYPE;
enum POWER_STATE_HANDLER_TYPE;
enum POWER_USER_PRESENCE_TYPE;
enum PO_FIXED_WAKE_SOURCE_TYPE;
enum PO_INTERNAL_WAKE_SOURCE_TYPE;
enum PO_WAKE_SOURCE_TYPE;
enum PREVIEWBACKGROUNDSTATES;
enum PREVIEWPANEPARTS;
enum PRINT_EXECUTION_CONTEXT;
enum PROCESS_DPI_AWARENESS;
enum PROCESS_UICONTEXT;
enum PROCESS_UI_FLAGS;
enum PROGRESSPARTS;
enum PROPCTL_RECT_TYPE;
enum PROPDESC_AGGREGATION_TYPE;
enum PROPDESC_COLUMNINDEX_TYPE;
enum PROPDESC_CONDITION_TYPE;
enum PROPDESC_DISPLAYTYPE;
enum PROPDESC_ENUMFILTER;
enum PROPDESC_FORMAT_FLAGS;
enum PROPDESC_GROUPING_RANGE;
enum PROPDESC_RELATIVEDESCRIPTION_TYPE;
enum PROPDESC_SEARCHINFO_FLAGS;
enum PROPDESC_SORTDESCRIPTION;
enum PROPDESC_TYPE_FLAGS;
enum PROPDESC_TYPE_FLAGS_EX;
enum PROPDESC_VIEW_FLAGS;
enum PROPENUMTYPE;
enum PROPERTREEPARTS;
enum PROPERTYORIGIN;
enum PROPERTYSTATES;
enum PROPGROUPTYPE;
enum PROPVAR_COMPARE_UNIT;
enum PROXY_PHASE;
enum PSC_STATE;
enum PS_CREATE_STATE;
enum PUSHBUTTONDROPDOWNSTATES;
enum PUSHBUTTONSTATES;
enum QUERYNAMESPACEINFO_MASK;
enum QUERY_USER_NOTIFICATION_STATE;
enum RADIOBUTTONSTATES;
enum RAISEDESKTOPFLAGS;
enum READER_SEL_REQUEST_MATCH_TYPE;
enum READINGPANEPARTS;
enum READONLYSTATES;
enum REBARPARTS;
enum REMOTEAPP_HD_SUPPORT_LEVEL;
enum REMOVEITEMTYPE;
enum REPARSE_PARTIAL_IDLIST_MODE;
enum REPOSITIONSTATES;
enum RESERVED_RESOURCE_RANGE;
enum RESOLUTION_TYPE;
enum RESTOREBUTTONSTATES;
enum RESTRICTIONS;
enum RESTRICTION_RESULT;
enum RESTRICT_ACTIONS;
enum REVEALSTATES;
enum RIGHTFRAMESTATES;
enum RIGHTSHADOWSTATES;
enum RO_ERROR_REPORTING_FLAGS;
enum RO_INIT_TYPE;
enum RPC_ADDRESS_CHANGE_TYPE;
enum RTLWOW64_CROSSPROCESS_WORK_OPERATION;
enum RTL_BSD_ITEM_TYPE;
enum RTL_DISK_SPACE_POLICY;
enum RTL_DISK_SPEED_POLICY;
enum RTL_DISK_WRITE_CONSTRAINT_POLICY;
enum RTL_PHYSICAL_MEMORY_POLICY;
enum RefreshConstants;
enum RenameOperationStatus;
enum ReplacesCorHdrNumericDefines;
enum RpcProxyPerfCounters;
enum SAFE_SAVE_OPTIONS;
enum SBBACKGROUNDSTATES;
enum SBCLEARBUTTONSTATES;
enum SBSEARCHBUTTONSTATES;
enum SCALE_CHANGE_FLAGS;
enum SCHEMAVIEW_AGGREGATIONRULE;
enum SCNRT_STATUS;
enum SCROLLBARPARTS;
enum SCROLLBARSTYLESTATES;
enum SEARCHBOXPARTS;
enum SEARCHEDITBOXPARTS;
enum SEARCHEDITBOXTEXTSTATES;
enum SEARCHHITSTATES;
enum SEARCHHOMEPARTS;
enum SEARCHPANE_HOTKEY;
enum SEARCHTEXTTYPE;
enum SEARCH_SUBMIT_TYPE;
enum SEARCH_TYPEAHEAD_ITEM_TYPE;
enum SECTIONTITLELINKSTATES;
enum SECURELOCKCODE;
enum SELECTIONMANAGERVALUE;
enum SELECTIONSTATEVALUE;
enum SERVICE_DIRECTORY_TYPE;
enum SERVICE_REGISTRY_STATE_TYPE;
enum SET_WINDOW_GROUP_OPTIONS;
enum SET_WINDOW_SHOW_STATE;
enum SE_WS_APPX_SIGNATURE_ORIGIN;
enum SHADOW_CONTROL_REQUEST;
enum SHADOW_PERMISSION_REQUEST;
enum SHADOW_REQUEST_RESPONSE;
enum SHAKE_STATE;
enum SHARD;
enum SHARE_ACTIVATION_MODE;
enum SHARE_MODE;
enum SHARE_ROLE;
enum SHARING_MENU_PRESENTATION_STATE;
enum SHARING_MENU_SHARE_STATE;
enum SHELLSEARCHCOMMAND;
enum SHELLSTATUSBARSEPARATORPARTS;
enum SHELL_BROWSER_FRAME_SIZE_POSITION;
enum SHELL_EXEC_CMD_LINE_OPTIONS;
enum SHELL_LINK_DATA_FLAGS;
enum SHELL_SEARCH_BAND_SEARCH_STATE;
enum SHELL_SPECIFIED_SHOW_COMMAND;
enum SHELL_UI_COMPONENT;
enum SHELL_WINDOWMANAGEMENT_CALLOUT_MSG_ID;
enum SHELL_WINDOWMANAGEMENT_NOTIFY_MSG_ID;
enum SHGFP_TYPE;
enum SHGLOBALCOUNTER;
enum SHOWCALENDARBUTTONRIGHTSTATES;
enum SHOWEDGEUISTATES;
enum SHOWPANELSTATES;
enum SHOWPOPUPSTATES;
enum SHREGDEL_FLAGS;
enum SHREGENUM_FLAGS;
enum SHSTOCKICONID;
enum SHTIME_FLAGS;
enum SIATTRIBFLAGS;
enum SIMPLE_IDLIST_FLAGS;
enum SINGLEBUTTONSTATES;
enum SIZEBOXSTATES;
enum SIZINGTYPE;
enum SLGP_FLAGS;
enum SLR_FLAGS;
enum SMALLBOTTOMFRAMESTATES;
enum SMALLBUTTONACTIVECLOSESTATES;
enum SMALLBUTTONINACTIVECLOSESTATES;
enum SMALLCAPTIONSTATES;
enum SMALLCLOSEBUTTONSTATES;
enum SMALLFRAMEBOTTOMSTATES;
enum SMALLFRAMELEFTSTATES;
enum SMALLFRAMERIGHTSTATES;
enum SMALLLEFTFRAMESTATES;
enum SMALLRIGHTFRAMESTATES;
enum SMALLTOPFRAMESTATES;
enum SOFTWAREEXPLORERSTATES;
enum SPATIAL_INPUT_ACTIVATION_POLICY;
enum SPECIALGROUPCOLLAPSESTATES;
enum SPECIALGROUPEXPANDSTATES;
enum SPINPARTS;
enum SPLASHSCREEN_IMAGE_TYPE;
enum SPLITBUTTONLEFTSTATES;
enum SPLITBUTTONRIGHTSTATES;
enum SPLITTERSTATES;
enum SPLITTERVERTSTATES;
enum STANDARDSTATES;
enum STARTPANELPARTS;
enum STARTPANELPRIVPARTS;
enum STATICPARTS;
enum STATUSPARTS;
enum STGOP;
enum STORAGEITEM_CREATION_TYPE;
enum STORAGE_PROVIDER_FILE_FLAGS;
enum STPFLAG;
enum STREAM_REFERENCE_TYPE;
enum STUB_PHASE;
enum SUBSETBUTTONSTATES;
enum SUBVARIANTTYPE;
enum SVUIA_STATUS;
enum SWIPEDESELECTSTATES;
enum SWIPEREVEALSTATES;
enum SWIPESELECTSTATES;
enum SWITCH_CONTEXT_TYPE;
enum SYMBOL_PRIMITIVE_INDEX;
enum SYNCMGR_CANCEL_REQUEST;
enum SYNCMGR_CONFLICT_ITEM_TYPE;
enum SYNCMGR_EVENT_LEVEL;
enum SYNCMGR_HANDLER_POLICIES;
enum SYNCMGR_HANDLER_TYPE;
enum SYNCMGR_PRESENTER_CHOICE;
enum SYNCMGR_PRESENTER_NEXT_STEP;
enum SYNCMGR_PROGRESS_STATUS;
enum SYNCMGR_RESOLUTION_FEEDBACK;
enum SYNCMGR_UPDATE_REASON;
enum SYNC_ENGINE_STATE_FLAGS;
enum SYNC_STREAM_COMPLETION_MODE;
enum SYNC_TRANSFER_STATUS;
enum SYSBUTTONSTATES;
enum SYSGEOCLASS;
enum SYSGEOTYPE;
enum SYSNLS_FUNCTION;
enum SYSTEMCLOSESTATES;
enum SYSTEMMAXIMIZESTATES;
enum SYSTEMMINIMIZESTATES;
enum SYSTEMRESTORESTATES;
enum SYSTEM_POWER_CONDITION;
enum SecureLockIconConstants;
enum SessionOp;
enum ShellFolderViewOptions;
enum ShellSpecialFolderConstants;
enum ShellWindowFindWindowOptions;
enum ShellWindowTypeConstants;
enum SmallButtonCloseGlyph120DarkSTATES;
enum SmallButtonCloseGlyph120STATES;
enum SmallButtonCloseGlyph144DarkSTATES;
enum SmallButtonCloseGlyph144STATES;
enum SmallButtonCloseGlyph192DarkSTATES;
enum SmallButtonCloseGlyph192STATES;
enum SmallButtonCloseGlyph96DarkSTATES;
enum SmallButtonCloseGlyph96STATES;
enum State;
enum SwitchBranch_Branch_Context;
enum SwitchBranch_Branch_Packaging;
enum TABITEMBOTHEDGESTATES;
enum TABITEMLEFTEDGESTATES;
enum TABITEMRIGHTEDGESTATES;
enum TABITEMSTATES;
enum TABPARTS;
enum TABSTATES;
enum TASKBAND2PARTS;
enum TASKBANDPARTS;
enum TASKBARPARTS;
enum TASKBARPEARLPARTS;
enum TASKBARSHOWDESKTOPPARTS;
enum TASKBAR_STATE_FLAGS;
enum TASKBUTTONSTATES;
enum TASKDIALOGPARTS;
enum TASKLINKSTATES;
enum TASKMANAGERPARTS;
enum TASK_FLOW_ID;
enum TA_PROPERTY;
enum TA_PROPERTY_FLAG;
enum TA_PROPERTY_PRIV;
enum TA_TIMINGFUNCTION_TYPE;
enum TA_TRANSFORM_FLAG;
enum TA_TRANSFORM_FLAG_EXT;
enum TA_TRANSFORM_TYPE;
enum TA_TRANSFORM_TYPE_PRIV;
enum TBPFLAG;
enum TEXTGLOWPARTS;
enum TEXTGLOWSTATES;
enum TEXTSELECTIONGRIPPERPARTS;
enum TEXTSHADOWTYPE;
enum TEXTSTYLEPARTS;
enum THEMEATOM;
enum THEMEHOOKSTATE;
enum THEMEPRIMITIVEID;
enum THEMESIZE;
enum THREADFLAGS;
enum THUMBBARBUTTONLEFTSTATES;
enum THUMBBARBUTTONMIDDLESTATES;
enum THUMBBARBUTTONRIGHTSTATES;
enum THUMBBARBUTTONSINGLESTATES;
enum THUMBBOTTOMSTATES;
enum THUMBBUTTONFLAGS;
enum THUMBBUTTONMASK;
enum THUMBCLOSEBUTTONSTATES;
enum THUMBLEFTSTATES;
enum THUMBNAIL_TYPE;
enum THUMBRECTSTATES;
enum THUMBRIGHTSTATES;
enum THUMBSHADOWBOTTOMSTATES;
enum THUMBSHADOWLEFTSTATES;
enum THUMBSHADOWRIGHTSTATES;
enum THUMBSHADOWTOPSTATES;
enum THUMBSTATES;
enum THUMBTOPSTATES;
enum THUMBVERTSTATES;
enum TICSSTATES;
enum TICSVERTSTATES;
enum TITLEBARSTATES;
enum TM_RESERVED_PROPVALS;
enum TOOLBARPARTS;
enum TOOLBARSTYLESTATES;
enum TOOLTIPPARTS;
enum TOPFRAMESTATES;
enum TOPTABITEMBOTHEDGESTATES;
enum TOPTABITEMLEFTEDGESTATES;
enum TOPTABITEMRIGHTEDGESTATES;
enum TOPTABITEMSTATES;
enum TRACKBARPARTS;
enum TRACKBARSTYLESTATES;
enum TRACKED_WINDOW_STATE;
enum TRACKINGOPTION;
enum TRACKSTATES;
enum TRACKVERTSTATES;
enum TRAILINGGRIDCELLSTATES;
enum TRAILINGGRIDCELLUPPERSTATES;
enum TRANSITIONCONTENTSTATES;
enum TRANSITIONPAGESTATES;
enum TRANSPARENTBACKGROUNDSTATES;
enum TRANSPARENTBARSTATES;
enum TRANSPARENTBARVERTSTATES;
enum TRAYNOTIFYFLYOUTPARTS;
enum TRAYNOTIFYPARTS;
enum TREEITEMSTATES;
enum TREEVIEWPARTS;
enum TRIBIT;
enum TRUESIZESCALINGTYPE;
enum TRYHARDERPARTS;
enum TRYHARDERSCOPES;
enum TaskbandExtendedUIPARTS;
enum ThemeDataNamespace;
enum ThemeTelemetryTypes::LockScreenAppType;
enum TlgIn_t;
enum TlgOut_t;
enum TrustLevel;
enum UMFD_WINLOGON_COMMAND;
enum UPDATEBADGESTATES;
enum UPDATEMETADATASTATES;
enum UPHORZSTATES;
enum UPSTATES;
enum URLIS;
enum URL_PART;
enum URL_SCHEME;
enum USERTILEPARTS;
enum USER_INTERACTION_MODE;
enum USER_TILE_TYPE;
enum VALIGN;
enum VALUECIDSTATES;
enum VALUESTATES;
enum VARENUM;
enum VERIFIER_MODE;
enum VERTSCROLLSTATES;
enum VERTTHUMBSTATES;
enum VIEW_PRESENTATION_MODE;
enum VIEW_SETTING_ID;
enum VIRTUALIZEDSELECTIONARRAYVALUE;
enum VIRTUALUIGROUPITEMVALUE;
enum VSRESOURCETYPE;
enum Variant_EdgeDesktopShortcut;
enum Variant_FaceClientEnrollmentExperience;
enum Variant_LockExpMgr_AppHostingModel;
enum Variant_LockReliability_PerformanceBoost;
enum Variant_PrelaunchEdgeLogon;
enum Variant_PrelaunchEdgeOnFrameExit;
enum Variant_SetLockScreenImageAsDesktopBackground;
enum Variant_SingleTabVisuals;
enum Variant_TabShellAutoTabbingPreference;
enum Variant_TabShellVisibility;
enum Variant_YourPhoneDesktopShortcut;
enum Variant_YourPhoneTaskbarIcon;
enum WARNINGSTATES;
enum WELL_KNOWN_SID_TYPE;
enum WICBitmapAlphaChannelOption;
enum WICBitmapCreateCacheOption;
enum WICBitmapDitherType;
enum WICBitmapEncoderCacheOption;
enum WICBitmapInterpolationMode;
enum WICBitmapPaletteType;
enum WICBitmapTransformOptions;
enum WICColorContextType;
enum WICComponentType;
enum WICDecodeOptions;
enum WICMetadataCreationOptions;
enum WICNamedWhitePoint;
enum WIN32K_SYSCALL_FILTER_ID;
enum WIN32_MEMORY_INFORMATION_CLASS;
enum WINDOWCOMPOSITIONATTRIB;
enum WINDOWPARTS;
enum WINDOWTEXTSTATES;
enum WINDOWTHEMEATTRIBUTETYPE;
enum WPCSETTING;
enum WRENCHSTATES;
enum WindowTransparencyMode;
enum Windows::Foundation::Collections::CollectionChange;
enum Windows::Foundation::Diagnostics::RoErrorReportingFlags;
enum Windows::Foundation::PropertyType;
enum Windows::UI::Core::AnimationMetrics::AnimationEffect;
enum Windows::UI::Core::AnimationMetrics::AnimationEffectTarget;
enum Windows::UI::Core::AnimationMetrics::PropertyAnimationType;
enum XLAT_SIDE;
enum ZBID;
enum _ACCESS_REASON_TYPE;
enum _ACL_INFORMATION_CLASS;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
enum _ALPC_PORT_INFORMATION_CLASS;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
enum _APPCONTAINER_SID_TYPE;
enum _APTTYPE;
enum _APTTYPEQUALIFIER;
enum _ARGB_COLOR_VALUE_PART;
enum _ASYNCCONNECTCLASS;
enum _ATOM_INFORMATION_CLASS;
enum _AUDIT_EVENT_TYPE;
enum _BACKGROUND_TASK_CAPABILITY;
enum _BIN_TYPES;
enum _BOOT_ENTROPY_SOURCE_ID;
enum _BOOT_ENTROPY_SOURCE_RESULT_CODE;
enum _BP_ANIMATIONSTYLE;
enum _BP_BUFFERFORMAT;
enum _BROWSERFRAMEOPTIONS;
enum _BUS_DATA_TYPE;
enum _CALLBACKCLASS;
enum _CDCLASS;
enum _CHANGER_DEVICE_PROBLEM_TYPE;
enum _CI_WINDOWS_LOCKDOWN_MODE;
enum _CM_ERROR_CONTROL_TYPE;
enum _CM_SERVICE_LOAD_TYPE;
enum _CM_SERVICE_NODE_TYPE;
enum _CM_SHARE_DISPOSITION;
enum _COMPUTER_NAME_FORMAT;
enum _COPYFILE2_COPY_PHASE;
enum _COPYFILE2_MESSAGE_ACTION;
enum _COPYFILE2_MESSAGE_TYPE;
enum _COVERAGE_REQUEST_CODES;
enum _CPU_SET_INFORMATION_TYPE;
enum _CSVFS_DISK_CONNECTIVITY;
enum _CSV_CONTROL_OP;
enum _CannonicalDeviceType;
enum _D3DAUTHENTICATEDCHANNELTYPE;
enum _D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE;
enum _D3DBACKBUFFER_TYPE;
enum _D3DBASISTYPE;
enum _D3DBLEND;
enum _D3DBLENDOP;
enum _D3DBUSTYPE;
enum _D3DCMPFUNC;
enum _D3DCOMPOSERECTSOP;
enum _D3DCUBEMAP_FACES;
enum _D3DCULL;
enum _D3DDEBUGMONITORTOKENS;
enum _D3DDECLMETHOD;
enum _D3DDECLTYPE;
enum _D3DDECLUSAGE;
enum _D3DDEGREETYPE;
enum _D3DDEVTYPE;
enum _D3DFILLMODE;
enum _D3DFOGMODE;
enum _D3DFORMAT;
enum _D3DLIGHTTYPE;
enum _D3DMATERIALCOLORSOURCE;
enum _D3DMULTISAMPLE_TYPE;
enum _D3DPATCHEDGESTYLE;
enum _D3DPOOL;
enum _D3DPRIMITIVETYPE;
enum _D3DQUERYTYPE;
enum _D3DRENDERSTATETYPE;
enum _D3DRESOURCETYPE;
enum _D3DSAMPLERSTATETYPE;
enum _D3DSAMPLER_TEXTURE_TYPE;
enum _D3DSHADEMODE;
enum _D3DSHADER_ADDRESSMODE_TYPE;
enum _D3DSHADER_COMPARISON;
enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE;
enum _D3DSHADER_MIN_PRECISION;
enum _D3DSHADER_MISCTYPE_OFFSETS;
enum _D3DSHADER_PARAM_REGISTER_TYPE;
enum _D3DSHADER_PARAM_SRCMOD_TYPE;
enum _D3DSTATEBLOCKTYPE;
enum _D3DSTENCILOP;
enum _D3DSWAPEFFECT;
enum _D3DTEXTUREADDRESS;
enum _D3DTEXTUREFILTERTYPE;
enum _D3DTEXTUREOP;
enum _D3DTEXTURESTAGESTATETYPE;
enum _D3DTEXTURETRANSFORMFLAGS;
enum _D3DTRANSFORMSTATETYPE;
enum _D3DVERTEXBLENDFLAGS;
enum _D3DVS_ADDRESSMODE_TYPE;
enum _D3DVS_RASTOUT_OFFSETS;
enum _D3DZBUFFERTYPE;
enum _DEBUG_CONTROL_SPACE_ITEM;
enum _DEP_SYSTEM_POLICY_TYPE;
enum _DETECTION_TYPE;
enum _DEVICEDUMP_COLLECTION_TYPE;
enum _DEVICE_NOTIFICATION_ID;
enum _DEVICE_POWER_STATE;
enum _DIRECTORY_NOTIFY_INFORMATION_CLASS;
enum _DISPLAYCONFIG_BUSTYPE;
enum _DISPLAYCONFIG_COLOR_ENCODING;
enum _DISPLAYCONFIG_HDR_PIXEL_FORMAT;
enum _DISPLAYCONFIG_SYNC_LOCK_STYLE;
enum _DMANIP_HOOK_STATE;
enum _DMA_SPEED;
enum _DMA_WIDTH;
enum _DPFLTR_TYPE;
enum _ELEMENT_TYPE;
enum _ENFCOREINFOCLASS;
enum _ENLISTMENT_INFORMATION_CLASS;
enum _ERROR_SEVERITY_VALUE;
enum _ESC_ACTION;
enum _EVENT_INFORMATION_CLASS;
enum _EVENT_INFO_CLASS;
enum _EVENT_TYPE;
enum _EXCEPTION_DISPOSITION;
enum _EXCEPTION_LOG_TYPE;
enum _EXPCMDFLAGS;
enum _EXPCMDSTATE;
enum _EXPLORERPANESTATE;
enum _EXPPS;
enum _FILEOPENDIALOGOPTIONS;
enum _FILE_ID_TYPE;
enum _FILE_INFORMATION_CLASS;
enum _FILE_INFO_BY_HANDLE_CLASS;
enum _FILE_METADATA_OPTIMIZATION_STATE;
enum _FILE_STORAGE_TIER_CLASS;
enum _FILE_STORAGE_TIER_MEDIA_TYPE;
enum _FILTER_BOOT_OPTION_OPERATION;
enum _FINDEX_INFO_LEVELS;
enum _FINDEX_SEARCH_OPS;
enum _FIRMWARE_TYPE;
enum _FLOWCONTROLCLASS;
enum _FP_IEEE_COMPARE_RESULT;
enum _FP_IEEE_OPERATION_CODE;
enum _FP__IEEE_FORMAT;
enum _FP__IEEE_ROUNDING_MODE;
enum _FSINFOCLASS;
enum _FUNCTION_TABLE_TYPE;
enum _GET_FILEEX_INFO_LEVELS;
enum _HARDERROR_RESPONSE;
enum _HARDERROR_RESPONSE_OPTION;
enum _HARDWARE_COUNTER_TYPE;
enum _HEAP_INFORMATION_CLASS;
enum _HIBERFILE_BUCKET_SIZE;
enum _HLSURF_INFORMATION_CLASS;
enum _HLSURF_REDIRECTIONSTYLE;
enum _HOT_PATCH_INFORMATION_CLASS;
enum _HWND_REDIRECTION_INFORMATION;
enum _IDL_CS_CONVERT;
enum _IMAGE_MITIGATION_POLICY;
enum _IMAGE_POLICY_ENTRY_TYPE;
enum _IMAGE_POLICY_ID;
enum _INTERCEPTOR_MOUSE_SYSTEM_STATE;
enum _INTERFACE_TYPE;
enum _IO_COMPLETION_INFORMATION_CLASS;
enum _IO_PRIORITY_HINT;
enum _IO_SESSION_EVENT;
enum _IO_SESSION_STATE;
enum _IRQ_DEVICE_POLICY;
enum _IRQ_GROUP_POLICY;
enum _IRQ_PRIORITY;
enum _InputMessageNotificationFlags;
enum _JOBOBJECTINFOCLASS;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
enum _JOURNAL_INFORMATION_CLASS;
enum _KERB_CERTIFICATE_INFO_TYPE;
enum _KERB_LOGON_SUBMIT_TYPE;
enum _KERB_PROFILE_BUFFER_TYPE;
enum _KERB_PROTOCOL_MESSAGE_TYPE;
enum _KEY_INFORMATION_CLASS;
enum _KEY_SET_INFORMATION_CLASS;
enum _KEY_VALUE_INFORMATION_CLASS;
enum _KF_DEFINITION_FLAGS;
enum _KF_REDIRECTION_CAPABILITIES;
enum _KF_REDIRECT_FLAGS;
enum _KHETERO_CPU_POLICY;
enum _KPROFILE_SOURCE;
enum _KTMOBJECT_TYPE;
enum _KnownRIMDeviceKind;
enum _LDR_DDAG_STATE;
enum _LDR_DLL_LOAD_REASON;
enum _LEARNING_MODE_LOG_LEVEL;
enum _LINK_TRACKING_INFORMATION_TYPE;
enum _LINP_SOURCE;
enum _LI_METRIC;
enum _LOADFACTORTYPE;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION;
enum _LSA_LOOKUP_DOMAIN_INFO_CLASS;
enum _MAGINPUT_OPERATION;
enum _MAGN_SAMPLING_MODE;
enum _MAG_CONTROL_CODE;
enum _MAG_INFORMATION_CLASS;
enum _MANDATORY_LEVEL;
enum _MEDIA_TYPE;
enum _MEMORY_EXHAUSTION_TYPE;
enum _MEMORY_INFORMATION_CLASS;
enum _MEMORY_RESERVE_TYPE;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
enum _MEMORY_WORKING_SET_EX_LOCATION;
enum _MIT_CURSOR_MANAGEMENT_MESSAGE_ID;
enum _MIT_DEVICE_ID_MESSAGE_ID;
enum _MIT_ENDPOINT;
enum _MIT_INPUT_CONFIG_MESSAGE_TYPE;
enum _MM_ETW_WORKING_SET_TYPE;
enum _MODERN_SCALE_FACTOR;
enum _MONITOR_DISPLAY_STATE;
enum _MONITOR_THERMAL_BRIGHTNESS_LIMIT_TYPE;
enum _MOUSEPROCESSOR_PROCESSING_OPTIONS;
enum _MOUSE_INTERCEPTION_RESULT;
enum _MOUSE_PREINTERCEPT_BEHAVIOR;
enum _MSGTYPE;
enum _MSV1_0_CREDENTIAL_KEY_TYPE;
enum _MSV1_0_LOGON_SUBMIT_TYPE;
enum _MSV1_0_PROFILE_BUFFER_TYPE;
enum _MSV1_0_PROTOCOL_MESSAGE_TYPE;
enum _MUTANT_INFORMATION_CLASS;
enum _NMCII_FLAGS;
enum _NMCSAEI_FLAGS;
enum _NORM_FORM;
enum _NSTCITEMSTATE;
enum _NSTCROOTSTYLE;
enum _NSTCSTYLE;
enum _NT_PRODUCT_TYPE;
enum _OBJECT_INFORMATION_CLASS;
enum _OPPROGDLGF;
enum _OS_DEPLOYEMENT_STATE_VALUES;
enum _PARTITION_INFORMATION_CLASS;
enum _PARTITION_STYLE;
enum _PDMODE;
enum _PERFINFO_KERNELMEMORY_USAGE_TYPE;
enum _PERFINFO_MM_STAT;
enum _PERSIST_SPROPSTORE_FLAGS;
enum _PKU2U_LOGON_SUBMIT_TYPE;
enum _PLAY_SOUND_FLAGS;
enum _PLUGPLAY_CONTROL_CLASS;
enum _PLUGPLAY_EVENT_CATEGORY;
enum _PNP_QUERY_RELATION;
enum _PNP_VETO_TYPE;
enum _POLICY_AUDIT_EVENT_TYPE;
enum _POLICY_DOMAIN_INFORMATION_CLASS;
enum _POLICY_INFORMATION_CLASS;
enum _POLICY_LSA_SERVER_ROLE;
enum _POLICY_NOTIFICATION_INFORMATION_CLASS;
enum _PORT_INFORMATION_CLASS;
enum _POWER_MONITOR_REQUEST_TYPE;
enum _POWER_PLATFORM_ROLE;
enum _POWER_REQUEST_TYPE;
enum _POWER_STATE_TYPE;
enum _PO_CS_DEVICE_NOTIFICATION_TYPE;
enum _PO_HIBER_FORCE_DISABLE_REASON;
enum _PO_SLEEP_DISABLE_REASON;
enum _PRINTER_OPTION_FLAGS;
enum _PRIORITY_HINT;
enum _PROCESSINFOCLASS;
enum _PROCESSOR_CACHE_TYPE;
enum _PROCESS_ACTIVITY_TYPE;
enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM;
enum _PROCESS_INFORMATION_CLASS;
enum _PROCESS_MEMORY_EXHAUSTION_TYPE;
enum _PROCESS_MITIGATION_POLICY;
enum _PROCESS_TLS_INFORMATION_TYPE;
enum _PROCESS_WORKING_SET_OPERATION;
enum _PROC_THREAD_ATTRIBUTE_NUM;
enum _PROPERTYUI_FLAGS;
enum _PROPERTYUI_FORMAT_FLAGS;
enum _PROPERTYUI_NAME_FLAGS;
enum _PS_ATTRIBUTE_NUM;
enum _PS_MITIGATION_OPTION;
enum _PS_PROTECTED_SIGNER;
enum _PS_PROTECTED_TYPE;
enum _PS_STD_HANDLE_STATE;
enum _PS_WAKE_REASON;
enum _QUERY_FILE_LAYOUT_FILTER_TYPE;
enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS;
enum _RECEIVEFLOWCONTROLCLASS;
enum _REFS_SMR_VOLUME_GC_ACTION;
enum _REFS_SMR_VOLUME_GC_METHOD;
enum _REFS_SMR_VOLUME_GC_STATE;
enum _REG_ACTION;
enum _RENDERHINT_NOTIFY;
enum _REQUESTER_TYPE;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
enum _RPC_ASYNC_EVENT;
enum _RPC_HTTP_REDIRECTOR_STAGE;
enum _RPC_NOTIFICATIONS;
enum _RPC_NOTIFICATION_TYPES;
enum _RTL_GENERIC_COMPARE_RESULTS;
enum _RTL_IMAGE_MITIGATION_OPTION_STATE;
enum _RTL_MEMORY_TYPE;
enum _RTL_PATH_TYPE;
enum _RTL_RESOURCE_CATEGORY;
enum _RTL_RESOURCE_POLICY_FLAGS;
enum _RTL_RXACT_OPERATION;
enum _RTL_SPARSE_BITMAP_CTX_OPERATION;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
enum _RTL_UMS_SCHEDULER_REASON;
enum _RTL_UMS_THREAD_INFO_CLASS;
enum _SCM_PD_HEALTH_STATUS;
enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS;
enum _SCM_PD_OPERATIONAL_STATUS;
enum _SCM_PD_OPERATIONAL_STATUS_REASON;
enum _SCM_PD_PROPERTY_ID;
enum _SCM_PD_QUERY_TYPE;
enum _SCM_REGION_FLAG;
enum _SC_ACTION_TYPE;
enum _SC_ENUM_TYPE;
enum _SC_EVENT_TYPE;
enum _SC_STATUS_TYPE;
enum _SDCLASS;
enum _SECTION_INFORMATION_CLASS;
enum _SECTION_INHERIT;
enum _SECURE_SETTING_VALUE_TYPE;
enum _SECURITY_IMPERSONATION_LEVEL;
enum _SECURITY_LOGON_TYPE;
enum _SEMAPHORE_INFORMATION_CLASS;
enum _SERVERSILO_STATE;
enum _SESSIONSOURCE;
enum _SESSIONTYPE;
enum _SESSION_FILTER;
enum _SE_ADT_PARAMETER_TYPE;
enum _SE_AUDIT_OPERATION;
enum _SE_IMAGE_SIGNATURE_TYPE;
enum _SE_LEARNING_MODE_DATA_TYPE;
enum _SE_VALIDATE_MAPPING_TYPE;
enum _SHADOWCLASS;
enum _SHADOWSTATECLASS;
enum _SHAKE_STATE;
enum _SHARE_ITEM_TYPE;
enum _SHCONTF;
enum _SHELLKEY;
enum _SHGDNF;
enum _SHRINK_VOLUME_REQUEST_TYPES;
enum _SHUTDOWN_ACTION;
enum _SICHINTF;
enum _SID_NAME_USE;
enum _SIGDN;
enum _SIIGBF;
enum _SLICER_COMMAND;
enum _SPACTION;
enum _SPBEGINF;
enum _SPINITF;
enum _SPTEXT;
enum _STATE_LOCATION_TYPE;
enum _STORAGE_ASSOCIATION_TYPE;
enum _STORAGE_ATTRIBUTE_MGMT_ACTION;
enum _STORAGE_BUS_TYPE;
enum _STORAGE_COMPONENT_HEALTH_STATUS;
enum _STORAGE_COUNTER_TYPE;
enum _STORAGE_CRYPTO_ALGORITHM_ID;
enum _STORAGE_CRYPTO_KEY_SIZE;
enum _STORAGE_DEVICE_FORM_FACTOR;
enum _STORAGE_DEVICE_POWER_CAP_UNITS;
enum _STORAGE_DIAGNOSTIC_LEVEL;
enum _STORAGE_DIAGNOSTIC_TARGET_TYPE;
enum _STORAGE_DISK_HEALTH_STATUS;
enum _STORAGE_DISK_OPERATIONAL_STATUS;
enum _STORAGE_IDENTIFIER_CODE_SET;
enum _STORAGE_IDENTIFIER_TYPE;
enum _STORAGE_ID_NAA_FORMAT;
enum _STORAGE_MEDIA_TYPE;
enum _STORAGE_OPERATIONAL_STATUS_REASON;
enum _STORAGE_PORT_CODE_SET;
enum _STORAGE_POWERUP_REASON_TYPE;
enum _STORAGE_PROPERTY_ID;
enum _STORAGE_PROTOCOL_ATA_DATA_TYPE;
enum _STORAGE_PROTOCOL_NVME_DATA_TYPE;
enum _STORAGE_PROTOCOL_TYPE;
enum _STORAGE_PROTOCOL_UFS_DATA_TYPE;
enum _STORAGE_QUERY_TYPE;
enum _STORAGE_RESERVE_ID;
enum _STORAGE_RPMB_COMMAND_TYPE;
enum _STORAGE_RPMB_FRAME_TYPE;
enum _STORAGE_TIER_CLASS;
enum _STORAGE_TIER_MEDIA_TYPE;
enum _STORAGE_ZONED_DEVICE_TYPES;
enum _STORAGE_ZONES_ATTRIBUTES;
enum _STORAGE_ZONE_CONDITION;
enum _STORAGE_ZONE_TYPES;
enum _STREAM_INFO_LEVELS;
enum _SUBSYSTEM_INFORMATION_TYPE;
enum _SUITE_TYPE;
enum _SVGIO;
enum _SVSIF;
enum _SYMBOLIC_LINK_INFO_CLASS;
enum _SYNTHESIZED_MOUSE_PROCESSING_RESULT;
enum _SYNTHESIZE_MOUSE_PAYLOAD_ID;
enum _SYSDBG_COMMAND;
enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE;
enum _SYSTEM_ACTIVITY_MODERATION_STATE;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
enum _SYSTEM_INFORMATION_CLASS;
enum _SYSTEM_MEMORY_LIST_COMMAND;
enum _SYSTEM_NET_RATE_CONTROL_TYPE;
enum _SYSTEM_PIXEL_FORMAT;
enum _SYSTEM_POWER_STATE;
enum _SYSTEM_PROCESS_CLASSIFICATION;
enum _SYSTEM_VA_TYPE;
enum _SharedVirtualDiskHandleState;
enum _SharedVirtualDiskSupportType;
enum _TABLET_DEVICE_KIND;
enum _TABLE_SEARCH_RESULT;
enum _TAPE_DRIVE_PROBLEM_TYPE;
enum _TASKDIALOG_COMMON_BUTTON_FLAGS;
enum _TASKDIALOG_ELEMENTS;
enum _TASKDIALOG_FLAGS;
enum _TASKDIALOG_ICON_ELEMENTS;
enum _TASKDIALOG_MESSAGES;
enum _TASKDIALOG_NOTIFICATIONS;
enum _THDTYPE;
enum _THEMECALLBACK;
enum _THREADINFOCLASS;
enum _THREAD_INFORMATION_CLASS;
enum _THREAD_UMS_INFORMATION_COMMAND;
enum _THREAD_WORKLOAD_CLASS;
enum _TIMER_INFORMATION_CLASS;
enum _TIMER_SET_INFORMATION_CLASS;
enum _TIMER_TYPE;
enum _TOKEN_ELEVATION_TYPE;
enum _TOKEN_INFORMATION_CLASS;
enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION;
enum _TOKEN_TYPE;
enum _TP_CALLBACK_PRIORITY;
enum _TP_DEBUG_CLASS;
enum _TP_LOG_LEVEL;
enum _TP_TRACE_TYPE;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
enum _TRANSACTION_INFORMATION_CLASS;
enum _TRANSACTION_OUTCOME;
enum _TRANSACTION_STATE;
enum _TRANSFER_ADVISE_STATE;
enum _TRANSFER_SOURCE_FLAGS;
enum _TRANSMITFLOWCONTROLCLASS;
enum _TRAY_NOTIFICATION_BALLOON_BLOCKED_REASON;
enum _TRAY_NOTIFICATION_SYSPROMOTE_BLOCKED_REASON;
enum _TRUSTED_INFORMATION_CLASS;
enum _TS_CERT_TYPE;
enum _TVITEMPART;
enum _TlgActivityBase<wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State;
enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State;
enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,35184372088832,5>::State;
enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::State;
enum _TlgActivityBase<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType>,0,5>::State;
enum _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::State;
enum _TlgActivityBase<wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State;
enum _TlgBlob_t;
enum _TlgFlags_t;
enum _TlgOptions_t;
enum _UIA_ACTIONS;
enum _UIA_CLASS;
enum _UNWIND_OP_CODES;
enum _URLZONEREG;
enum _USER_ACTIVITY_PRESENCE;
enum _USER_MARSHAL_CB_TYPE;
enum _VERIFIER_RULE_CLASS_ID;
enum _VIRTUAL_MEMORY_INFORMATION_CLASS;
enum _VIRTUAL_STORAGE_BEHAVIOR_CODE;
enum _WAIT_TYPE;
enum _WATCHDOG_HANDLER_ACTION;
enum _WATCHDOG_INFORMATION_CLASS;
enum _WINSTATIONINFOCLASS;
enum _WINSTATIONSTATECLASS;
enum _WINSTATIONUPDATECFGCLASS;
enum _WNF_DATA_SCOPE;
enum _WNF_STATE_NAME_INFORMATION;
enum _WNF_STATE_NAME_LIFETIME;
enum _WORKERFACTORYINFOCLASS;
enum _WORKER_FACTORY_CALLBACK_CLASS;
enum _WOW64_FUNCTION_CODE64;
enum _WRITE_CACHE_CHANGE;
enum _WRITE_CACHE_ENABLE;
enum _WRITE_CACHE_TYPE;
enum _WRITE_THROUGH;
enum __MIDL_IAuthenticateEx_0001;
enum __MIDL_IBindStatusCallbackEx_0001;
enum __MIDL_IBindStatusCallback_0001;
enum __MIDL_IBindStatusCallback_0002;
enum __MIDL_IBindStatusCallback_0003;
enum __MIDL_IBindStatusCallback_0004;
enum __MIDL_IBindStatusCallback_0005;
enum __MIDL_IBindStatusCallback_0006;
enum __MIDL_ICodeInstall_0001;
enum __MIDL_IGetBindHandle_0001;
enum __MIDL_IInternetSecurityManager_0001;
enum __MIDL_IInternetSecurityManager_0002;
enum __MIDL_IInternetSecurityManager_0003;
enum __MIDL_IInternetZoneManager_0001;
enum __MIDL_IInternetZoneManager_0002;
enum __MIDL_IMonikerProp_0001;
enum __MIDL_IOleDocument_0001;
enum __MIDL_IPrint_0001;
enum __MIDL_IUri_0001;
enum __MIDL_IUri_0002;
enum __MIDL___MIDL_itf_shpriv_0000_0033_0001;
enum __MIDL___MIDL_itf_shpriv_0000_0033_0002;
enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0001;
enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0002;
enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0003;
enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0004;
enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0005;
enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001;
enum __MIDL___MIDL_itf_winrtfileapi_0000_0036_0001;
enum __enative_startup_state;
enum __vc_attributes::aggregatableAttribute::type_e;
enum __vc_attributes::event_receiverAttribute::type_e;
enum __vc_attributes::event_sourceAttribute::optimize_e;
enum __vc_attributes::event_sourceAttribute::type_e;
enum __vc_attributes::helper_attributes::usageAttribute::usage_e;
enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;
enum __vc_attributes::moduleAttribute::type_e;
enum __vc_attributes::pointer_defaultAttribute::type_e;
enum __vc_attributes::threadingAttribute::threading_e;
enum _eFRAMEPARTS;
enum _eNCWNDMETRECT;
enum _system_handle_t;
enum _tagACENUMOPTION;
enum _tagAUTOCOMPLETELISTOPTIONS;
enum _tagAUTOCOMPLETEOPTIONS;
enum _tagINTERNETFEATURELIST;
enum _tagOIBDG_FLAGS;
enum _tagPARSEACTION;
enum _tagPI_FLAGS;
enum _tagPSUACTION;
enum _tagQUERYOPTION;
enum _tagSHARE_EVENT;
enum ePROCTYPE;
enum eSYMBOLTOKENS;
enum octd;
enum optimize_e;
enum std::_Uninitialized;
enum tagACTIVATEFLAGS;
enum tagACTIVATIONTYPE;
enum tagADVF;
enum tagAPP_RESOLVER_ITEM_FILTER_FLAGS;
enum tagAR_STATE;
enum tagApplicationType;
enum tagAspectInfoFlag;
enum tagBANDSITECID;
enum tagBEGINLABELEDIT_DIRECTION_CONTEXT;
enum tagBINDSPEED;
enum tagBINDSTATUS;
enum tagBINDSTRING;
enum tagBIND_FLAGS;
enum tagBPASCODE;
enum tagCALIBRATION_TYPE;
enum tagCALLCONV;
enum tagCALLTYPE;
enum tagCHANGEKIND;
enum tagCLSCTX;
enum tagCOINIT;
enum tagCOINITBASE;
enum tagCOMSD;
enum tagCONDITION_OPERATION;
enum tagCONDITION_TYPE;
enum tagCOWAIT_FLAGS;
enum tagCS_COLUMN_SET;
enum tagCS_COLUMN_WIDTH_TYPE;
enum tagCTRLINFO;
enum tagDATADIR;
enum tagDCOM_CALL_STATE;
enum tagDESCKIND;
enum tagDESKBANDCID;
enum tagDESTCATTYPE;
enum tagDIGITIZER_CONTACT_SOURCE;
enum tagDIGITIZER_CONTACT_TYPE;
enum tagDISCARDCACHE;
enum tagDISPATCHNOTIFY_APCCONTEXT;
enum tagDISPATCHNOTIFY_WPARAM;
enum tagDISPLAY_SUPPORTED_ORIENTATIONS;
enum tagDOCHOSTUIDBLCLKDispatch;
enum tagDOMNodeType;
enum tagDVASPECT;
enum tagDVASPECT2;
enum tagDocHostUIFlagDispatch;
enum tagEDGY_LOCATION;
enum tagENUMVIEWPROPFLAG;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
enum tagEXTCONN;
enum tagExtendedErrorParamTypes;
enum tagExtentMode;
enum tagFEEDBACK_TYPE;
enum tagFUNCFLAGS;
enum tagFUNCKIND;
enum tagGLOBALOPT_EH_VALUES;
enum tagGLOBALOPT_PROPERTIES;
enum tagGLOBALOPT_RO_FLAGS;
enum tagGLOBALOPT_RPCTP_VALUES;
enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES;
enum tagGUIDKIND;
enum tagHANDEDNESS;
enum tagHITRESULT;
enum tagIESHORTCUTFLAGS;
enum tagINPUTSERVICE_STATE;
enum tagINPUT_MESSAGE_DEVICE_TYPE;
enum tagINPUT_MESSAGE_ORIGIN_ID;
enum tagINTERACTIVECTRL_HAPTICS_MODE;
enum tagINTERACTIVECTRL_PROMOTION_TYPE;
enum tagINTERVAL_LIMIT_KIND;
enum tagINVOKEKIND;
enum tagITEM_CHANGE_TYPE;
enum tagLC_ITEM_SET_ORDER;
enum tagLC_ITEM_SET_TYPE;
enum tagLC_NEXT_INDEX_STATE;
enum tagLC_POINT_TYPE;
enum tagLC_SELECTION_MODE;
enum tagLIBFLAGS;
enum tagLOCKTYPE;
enum tagMEMCTX;
enum tagMENUBANDHANDLERCID;
enum tagMENUPOPUPPOPUPFLAGS;
enum tagMENUPOPUPSELECT;
enum tagMKREDUCE;
enum tagMKSYS;
enum tagMSHCTX;
enum tagMSHLFLAGS;
enum tagOLECLOSE;
enum tagOLECONTF;
enum tagOLEDCFLAGS;
enum tagOLEGETMONIKER;
enum tagOLELINKBIND;
enum tagOLEMISC;
enum tagOLERENDER;
enum tagOLEUPDATE;
enum tagOLEVERBATTRIB;
enum tagOLEWHICHMK;
enum tagOPEN_AS_INFO_FLAGS;
enum tagPENDINGMSG;
enum tagPENDINGTYPE;
enum tagPERCEIVED;
enum tagPOINTERINACTIVE;
enum tagPOINTER_BUTTON_CHANGE_TYPE;
enum tagPOINTER_DEVICE_CURSOR_TYPE;
enum tagPOINTER_DEVICE_TYPE;
enum tagPOINTER_INPUT_TYPE;
enum tagPROPBAG2_TYPE;
enum tagPROPCTL_FLAGS;
enum tagPROPDESC_CONTROL_TYPE;
enum tagPROPHANDLER_DIAGNOSTIC_FLAGS;
enum tagPROPPAGESTATUS;
enum tagPROPVAR_CHANGE_FLAGS;
enum tagPROPVAR_COMPARE_FLAGS;
enum tagPSFORMATAS;
enum tagPSTIME_FLAGS;
enum tagPictureAttributes;
enum tagPropPageOnApply;
enum tagQACONTAINERFLAGS;
enum tagQUERY_PARSER_MANAGER_OPTION;
enum tagQueryUpdateAction;
enum tagREADYSTATE;
enum tagRECYCLEBIN_TYPE;
enum tagREGCLS;
enum tagREGKIND;
enum tagRESOURCEBROKERINGTYPE;
enum tagRPCOPT_PROPERTIES;
enum tagRPCOPT_SERVER_LOCALITY_VALUES;
enum tagRpcCallClientLocality;
enum tagRpcCallType;
enum tagRpcLocalAddressFormat;
enum tagSCHEDULE_DISPATCH_RESULT;
enum tagSEMTYPE_ENUMFILTER;
enum tagSERVERCALL;
enum tagSET_COLUMNS_NOTIFY_OPTIONS;
enum tagSFBS_FLAGS;
enum tagSF_TYPE;
enum tagSHCOLSTATE;
enum tagSMINFOFLAGS;
enum tagSMINFOMASK;
enum tagSMINFOTYPE;
enum tagSM_KEYBOARDNAVIGATE;
enum tagSORTDIRECTION;
enum tagSTATFLAG;
enum tagSTDMSHLFLAGS;
enum tagSTGC;
enum tagSTGMOVE;
enum tagSTGTY;
enum tagSTREAM_SEEK;
enum tagSTRRET_TYPE;
enum tagSTRUCTURED_QUERY_MULTIOPTION;
enum tagSTRUCTURED_QUERY_PARSE_ERROR;
enum tagSTRUCTURED_QUERY_SINGLE_OPTION;
enum tagSTRUCTURED_QUERY_SYNTAX;
enum tagSUBVAL_FLAGS;
enum tagSYSKIND;
enum tagShutdownType;
enum tagTASKTYPE;
enum tagTOUCH_PAD_AAP_LEVEL;
enum tagTYMED;
enum tagTYPEFLAGS;
enum tagTYPEKIND;
enum tagTYSPEC;
enum tagUAEVENT;
enum tagUASFLAGS;
enum tagUISCB_FLAGS;
enum tagUISTATE;
enum tagURLTEMPLATE;
enum tagURLZONE;
enum tagUSERCLASSTYPE;
enum tagVARFLAGS;
enum tagVARKIND;
enum tagVIEWSETTINGACTION;
enum tagVIEWSTATUS;
enum tagXFORMCOORDS;
enum tagXMLEMEM_TYPE;
enum threading_e;
enum type_e;
enum usage_e;
enum wil::ActivityOptions;
enum wil::CustomReportingKind;
enum wil::ErrorReportingType;
enum wil::ErrorReturn;
enum wil::EventOptions;
enum wil::FailureType;
enum wil::FeatureChangeTime;
enum wil::FeatureControlKind;
enum wil::FeatureEnabledState;
enum wil::FeaturePropertyGroupFlags;
enum wil::FeatureStage;
enum wil::FeatureString;
enum wil::FeatureUsageKind;
enum wil::ReportingKind;
enum wil::SlimEventType;
enum wil::StagingControlActions;
enum wil::SupportedExceptions;
enum wil::UsageReportingMode;
enum wil::VariantReportingKind;
enum wil::WilInitializeCommand;
enum wil::details::EmptyVariant;
enum wil::details::PendingCallbackCancellationBehavior;
enum wil::details::ReportFailureOptions;
enum wil::details::StagingConfigurationFlags;
enum wil::details_abi::CountSize;
enum wil::details_abi::UsageIndexesLoadOptions;
enum wil_FeatureChangeTime;
enum wil_FeatureEnabledState;
enum wil_FeatureEnabledStateKind;
enum wil_FeatureEnabledStateOptions;
enum wil_FeatureStage;
enum wil_FeatureStore;
enum wil_FeatureVariantPayloadKind;
enum wil_ReportingKind;
enum wil_UsageReportingMode;
enum wil_VariantPayloadType;
enum wil_VariantReportingKind;
enum wil_details_CachedFeatureEnabledState;
enum wil_details_CachedHasNotificationState;
enum wil_details_FeatureTestStateKind;
enum wil_details_ServiceReportingKind;
enum wil_details_ServiceReportingOptions;
enum wil_details_StagingConfigFeatureFields;

typedef struct $_INTERNAL_SWITCHBRANCH_MODULE_TABLE$_extraBytes_8 {
    ULONG TableEntries;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *Table[1];
};

typedef struct $_SWITCHBRANCH_CACHED_MODULE_TABLE$_extraBytes_8 {
    ULONG64 ContextUpdateCounter;
    enum SWITCH_CONTEXT_TYPE ContextType;
    ULONG BranchEntries;
    struct _SWITCHBRANCH_BRANCH_DATA *Branch[1];
};

typedef struct $_SWITCHBRANCH_MODULE_TABLE_ENTRY$_extraBytes_384 {
    PWCHAR SwitchBranchName;
    PWCHAR Description;
    PWCHAR Category;
    enum SwitchBranch_Branch_Context ContextScope;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *pParentModuleTable;
    LONG EnableTelemetry;
    LONG EnableTracing;
    LONG AITLogCount;
    struct _GUID BranchGuid;
    ULONG BranchCount;
    struct _SWITCHBRANCH_BRANCH_DATA BranchData[3];
};

typedef struct $_TypeDescriptor$_extraBytes_16 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[16];
};

typedef struct $_TypeDescriptor$_extraBytes_20 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[20];
};

typedef struct $_TypeDescriptor$_extraBytes_24 {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[24];
};

typedef struct $_s__CatchableTypeArray$_extraBytes_16 {
    LONG nCatchableTypes;
    struct _s__CatchableType *arrayOfCatchableTypes[2];
};

typedef struct ACCENT_POLICY {
    enum ACCENT_STATE AccentState;
    ULONG AccentFlags;
    ULONG GradientColor;
    LONG AnimationId;
};

typedef struct ANON_OBJECT_HEADER {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
};

typedef struct ANON_OBJECT_HEADER_BIGOBJ {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
    ULONG Flags;
    ULONG MetaDataSize;
    ULONG MetaDataOffset;
    ULONG NumberOfSections;
    ULONG PointerToSymbolTable;
    ULONG NumberOfSymbols;
};

typedef struct ANON_OBJECT_HEADER_V2 {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    struct _GUID ClassID;
    ULONG SizeOfData;
    ULONG Flags;
    ULONG MetaDataSize;
    ULONG MetaDataOffset;
};

typedef struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__ {
    LONG unused;
};

typedef struct API_THEMES {
    union API_GENERIC apiGeneric;
    union API_THEMES_SPECIFIC apiSpecific;
};

typedef struct API_THEMES_ACQUIREORADDTHEME_IN {
    PWCHAR pszName;
    LONG cchName;
    PWCHAR pszColor;
    LONG cchColor;
    PWCHAR pszSize;
    LONG cchSize;
    LONG iDPI;
    LONG iPPI;
    USHORT wLangID;
    ULONG dwDPIPlateaus;
    PVOID hReuseSection;
};

typedef struct API_THEMES_ACQUIREORADDTHEME_OUT {
    PVOID hReuseSection;
    HRESULT hr;
};

typedef struct API_THEMES_GETCURRENTCHANGENUMBER_IN {
};

typedef struct API_THEMES_GETCURRENTCHANGENUMBER_OUT {
    LONG iChangeNumber;
};

typedef struct API_THEMES_GETSTATUSFLAGS_IN {
};

typedef struct API_THEMES_GETSTATUSFLAGS_OUT {
    ULONG dwFlags;
};

typedef struct API_THEMES_PING_IN {
};

typedef struct API_THEMES_PING_OUT {
};

typedef struct API_THEMES_PROCESSASSIGNSECTION_IN {
    HRESULT hrLoad;
    PVOID hSharableSection;
    PVOID hNonSharableSection;
};

typedef struct API_THEMES_PROCESSASSIGNSECTION_OUT {
    HRESULT hr;
};

typedef struct API_THEMES_PROCESSLOADTHEME_IN {
    PWCHAR pszName;
    LONG cchName;
    PWCHAR pszColor;
    LONG cchColor;
    PWCHAR pszSize;
    LONG cchSize;
    ULONG dwFlags;
};

typedef struct API_THEMES_PROCESSLOADTHEME_OUT {
    HRESULT hr;
};

typedef struct API_THEMES_RELEASETHEME_IN {
    PWCHAR pszSharableSectionName;
    LONG cchSharableSectionName;
    BOOLEAN fInDestroySession;
};

typedef struct API_THEMES_RELEASETHEME_OUT {
};

typedef struct API_THEMES_SESSIONCREATE_IN {
    PVOID pfnLoadTheme;
    ULONG dwStackSizeReserve;
    ULONG dwStackSizeCommit;
    ULONG dwPID;
};

typedef struct API_THEMES_SESSIONCREATE_OUT {
};

typedef struct API_THEMES_SESSIONDESTROY_IN {
};

typedef struct API_THEMES_SESSIONDESTROY_OUT {
};

typedef struct API_THEMES_USERLOGOFF_IN {
};

typedef struct API_THEMES_USERLOGOFF_OUT {
};

typedef struct API_THEMES_USERLOGON_IN {
    PVOID hToken;
};

typedef struct API_THEMES_USERLOGON_OUT {
};

typedef struct APPCLASSINFO {
    LONG iAppNameIndex;
    LONG iClassNameIndex;
};

typedef struct APPCLASSLIVE {
    struct APPCLASSINFO AppClassInfo;
    LONG iIndex;
    LONG iLen;
    LONG iBaseClassIndex;
};

typedef struct APPCLASSLOCAL {
    CWideString csAppName;
    CWideString csClassName;
    LONG iMaxPartNum;
    CThemeArray<PART_STATE_INDEX,CThemeArrayEqualHelper<PART_STATE_INDEX> > PartStateIndexes;
    struct APPCLASSINFO AppClassInfo;
    VOID APPCLASSLOCAL;
    VOID APPCLASSLOCAL;
    VOID APPCLASSLOCAL;
    VOID ~APPCLASSLOCAL;
    struct APPCLASSLOCAL *operator=;
    struct APPCLASSLOCAL *operator=;
    PVOID __vecDelDtor;
};

typedef struct ARRAY_INFO {
    LONG Dimension;
    PULONG BufferConformanceMark;
    PULONG BufferVarianceMark;
    PULONG MaxCountArray;
    PULONG OffsetArray;
    PULONG ActualCountArray;
};

typedef struct ASSOCIATIONELEMENT {
    enum ASSOCCLASS ac;
    struct HKEY__ *hkClass;
    PWCHAR pszClass;
};

typedef struct ATL::CExpansionVector::EXPANDER {
    PWCHAR szKey;
    PWCHAR szValue;
};

typedef struct ATL::_ATL_CATMAP_ENTRY {
    LONG iType;
    struct _GUID *pcatid;
};

typedef struct ATL::_ATL_INTMAP_ENTRY {
    struct _GUID *piid;
    ULONG64 dw;
    HRESULT *pFunc;
};

typedef struct ATL::_ATL_MODULE {
    ULONG cbSize;
    struct HINSTANCE__ *m_hInst;
    struct HINSTANCE__ *m_hInstResource;
    struct HINSTANCE__ *m_hInstTypeLib;
    struct ATL::_ATL_OBJMAP_ENTRY *m_pObjMap;
    LONG m_nLockCnt;
    PVOID m_hHeap;
    struct _RTL_CRITICAL_SECTION m_csTypeInfoHolder;
    struct _RTL_CRITICAL_SECTION m_csStaticDataInit;
    struct _RTL_CRITICAL_SECTION m_csWindowCreate;
    struct _RTL_CRITICAL_SECTION m_csObjMap;
    ULONG dwAtlBuildVer;
    struct ATL::_AtlCreateWndData *m_pCreateWndList;
    BOOLEAN m_bDestroyHeap;
    struct _GUID *pguidVer;
    ULONG m_dwHeaps;
    PVOID *m_phHeaps;
    LONG m_nHeap;
    struct ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
    LONG m_nNextWindowID;
};

typedef struct ATL::_ATL_MODULE20 {
    ULONG cbSize;
    struct HINSTANCE__ *m_hInst;
    struct HINSTANCE__ *m_hInstResource;
    struct HINSTANCE__ *m_hInstTypeLib;
    struct ATL::_ATL_OBJMAP_ENTRY *m_pObjMap;
    LONG m_nLockCnt;
    PVOID m_hHeap;
    struct _RTL_CRITICAL_SECTION m_csTypeInfoHolder;
    struct _RTL_CRITICAL_SECTION m_csWindowCreate;
    struct _RTL_CRITICAL_SECTION m_csObjMap;
};

typedef struct ATL::_ATL_MODULE_21 {
    ULONG cbSize;
    struct HINSTANCE__ *m_hInst;
    struct HINSTANCE__ *m_hInstResource;
    struct HINSTANCE__ *m_hInstTypeLib;
    struct ATL::_ATL_OBJMAP_ENTRY *m_pObjMap;
    LONG m_nLockCnt;
    PVOID m_hHeap;
    struct _RTL_CRITICAL_SECTION m_csTypeInfoHolder;
    struct _RTL_CRITICAL_SECTION m_csStaticDataInit;
    struct _RTL_CRITICAL_SECTION m_csWindowCreate;
    struct _RTL_CRITICAL_SECTION m_csObjMap;
};

typedef struct ATL::_ATL_MODULE_30 {
    ULONG cbSize;
    struct HINSTANCE__ *m_hInst;
    struct HINSTANCE__ *m_hInstResource;
    struct HINSTANCE__ *m_hInstTypeLib;
    struct ATL::_ATL_OBJMAP_ENTRY *m_pObjMap;
    LONG m_nLockCnt;
    PVOID m_hHeap;
    struct _RTL_CRITICAL_SECTION m_csTypeInfoHolder;
    struct _RTL_CRITICAL_SECTION m_csStaticDataInit;
    struct _RTL_CRITICAL_SECTION m_csWindowCreate;
    struct _RTL_CRITICAL_SECTION m_csObjMap;
    ULONG dwAtlBuildVer;
    struct ATL::_AtlCreateWndData *m_pCreateWndList;
    BOOLEAN m_bDestroyHeap;
    struct _GUID *pguidVer;
    ULONG m_dwHeaps;
    PVOID *m_phHeaps;
    LONG m_nHeap;
    struct ATL::_ATL_TERMFUNC_ELEM *m_pTermFuncs;
};

typedef struct ATL::_ATL_OBJMAP_ENTRY {
    struct _GUID *pclsid;
    HRESULT *pfnUpdateRegistry;
    HRESULT *pfnGetClassObject;
    HRESULT *pfnCreateInstance;
    struct IUnknown *pCF;
    ULONG dwRegister;
    PWCHAR *pfnGetObjectDescription;
    struct ATL::_ATL_CATMAP_ENTRY **pfnGetCategoryMap;
    HRESULT RevokeClassObject;
    HRESULT RegisterClassObject;
    PVOID pfnObjectMain;
};

typedef struct ATL::_ATL_OBJMAP_ENTRY20 {
    struct _GUID *pclsid;
    HRESULT *pfnUpdateRegistry;
    HRESULT *pfnGetClassObject;
    HRESULT *pfnCreateInstance;
    struct IUnknown *pCF;
    ULONG dwRegister;
    PWCHAR *pfnGetObjectDescription;
};

typedef struct ATL::_ATL_REGMAP_ENTRY {
    PWCHAR szKey;
    PWCHAR szData;
};

typedef struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::_ATL_SAFE_ALLOCA_IMPL::_CCRTAllocator>::CAtlSafeAllocBufferNode {
    struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::_ATL_SAFE_ALLOCA_IMPL::_CCRTAllocator>::CAtlSafeAllocBufferNode *m_pNext;
    UCHAR _pad[8];
    PVOID GetData;
};

typedef struct ATL::_ATL_TERMFUNC_ELEM {
    PVOID pFunc;
    ULONG64 dw;
    struct ATL::_ATL_TERMFUNC_ELEM *pNext;
};

typedef struct ATL::_AtlCreateWndData {
    PVOID m_pThis;
    ULONG m_dwThreadID;
    struct ATL::_AtlCreateWndData *m_pNext;
};

typedef struct AUTO_SCROLL_DATA {
    LONG iNextSample;
    ULONG dwLastScroll;
    LONG bFull;
    struct tagPOINT pts[3];
    ULONG dwTimes[3];
};

typedef struct AnimationProperty {
    enum TA_PROPERTY_FLAG eFlags;
    ULONG dwTransformCount;
    ULONG dwStaggerDelay;
    ULONG dwStaggerDelayCap;
    FLOAT rStaggerDelayFactor;
    ULONG dwZIndex;
    ULONG dwBackgroundPartId;
    ULONG dwTuningLevel;
    FLOAT rPerspective;
    VOID Reset;
};

typedef struct ApiData {
    PWCHAR className;
    PWCHAR apiName;
    PCHAR specialization;
    PLONG counterReference;
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > next;
    VOID ApiData;
    VOID ApiData;
    VOID ~ApiData;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *operator=;
    PVOID __vecDelDtor;
};

typedef struct AsyncIAdviseSink {
    struct IUnknown IUnknown;
    VOID Begin_OnDataChange;
    VOID Finish_OnDataChange;
    VOID Begin_OnViewChange;
    VOID Finish_OnViewChange;
    VOID Begin_OnRename;
    VOID Finish_OnRename;
    VOID Begin_OnSave;
    VOID Finish_OnSave;
    VOID Begin_OnClose;
    VOID Finish_OnClose;
    VOID AsyncIAdviseSink;
    VOID AsyncIAdviseSink;
    VOID AsyncIAdviseSink;
    struct AsyncIAdviseSink *operator=;
    struct AsyncIAdviseSink *operator=;
};

typedef struct AsyncIAdviseSink2 {
    struct AsyncIAdviseSink AsyncIAdviseSink;
    VOID Begin_OnLinkSrcChange;
    VOID Finish_OnLinkSrcChange;
    VOID AsyncIAdviseSink2;
    VOID AsyncIAdviseSink2;
    VOID AsyncIAdviseSink2;
    struct AsyncIAdviseSink2 *operator=;
    struct AsyncIAdviseSink2 *operator=;
};

typedef struct AsyncIMultiQI {
    struct IUnknown IUnknown;
    HRESULT Begin_QueryMultipleInterfaces;
    HRESULT Finish_QueryMultipleInterfaces;
    VOID AsyncIMultiQI;
    VOID AsyncIMultiQI;
    VOID AsyncIMultiQI;
    struct AsyncIMultiQI *operator=;
    struct AsyncIMultiQI *operator=;
};

typedef struct AsyncIPipeByte {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeByte;
    VOID AsyncIPipeByte;
    VOID AsyncIPipeByte;
    struct AsyncIPipeByte *operator=;
    struct AsyncIPipeByte *operator=;
};

typedef struct AsyncIPipeDouble {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeDouble;
    VOID AsyncIPipeDouble;
    VOID AsyncIPipeDouble;
    struct AsyncIPipeDouble *operator=;
    struct AsyncIPipeDouble *operator=;
};

typedef struct AsyncIPipeLong {
    struct IUnknown IUnknown;
    HRESULT Begin_Pull;
    HRESULT Finish_Pull;
    HRESULT Begin_Push;
    HRESULT Finish_Push;
    VOID AsyncIPipeLong;
    VOID AsyncIPipeLong;
    VOID AsyncIPipeLong;
    struct AsyncIPipeLong *operator=;
    struct AsyncIPipeLong *operator=;
};

typedef struct AsyncIUnknown {
    struct IUnknown IUnknown;
    HRESULT Begin_QueryInterface;
    HRESULT Finish_QueryInterface;
    HRESULT Begin_AddRef;
    ULONG Finish_AddRef;
    HRESULT Begin_Release;
    ULONG Finish_Release;
    VOID AsyncIUnknown;
    VOID AsyncIUnknown;
    VOID AsyncIUnknown;
    struct AsyncIUnknown *operator=;
    struct AsyncIUnknown *operator=;
};

typedef struct AtlThunkData_t {
};

typedef struct BATTERY_REPORTING_SCALE {
    ULONG Granularity;
    ULONG Capacity;
};

typedef struct BEGINANIMATIONPARAMS {
    struct HWND__ *hwnd;
    struct HDC__ *hdcTarget;
    struct tagRECT *prcTarget;
    struct tagRECT rcExclude;
    enum _BP_BUFFERFORMAT dwFormat;
    ULONG dwFlags;
    struct _BLENDFUNCTION *pBlendFunction;
    struct _BP_ANIMATIONPARAMS *pAnimationParams;
    struct HDC__ **phdcFrom;
    struct HDC__ **phdcTo;
};

typedef struct BINDCTX_PARAM {
    PWCHAR pszName;
    struct IUnknown *punkParam;
};

typedef struct BITMAPV4HEADER {
    ULONG bV4Size;
    LONG bV4Width;
    LONG bV4Height;
    USHORT bV4Planes;
    USHORT bV4BitCount;
    ULONG bV4V4Compression;
    ULONG bV4SizeImage;
    LONG bV4XPelsPerMeter;
    LONG bV4YPelsPerMeter;
    ULONG bV4ClrUsed;
    ULONG bV4ClrImportant;
    ULONG bV4RedMask;
    ULONG bV4GreenMask;
    ULONG bV4BlueMask;
    ULONG bV4AlphaMask;
    ULONG bV4CSType;
    struct tagICEXYZTRIPLE bV4Endpoints;
    ULONG bV4GammaRed;
    ULONG bV4GammaGreen;
    ULONG bV4GammaBlue;
};

typedef struct BITMAPV5HEADER {
    ULONG bV5Size;
    LONG bV5Width;
    LONG bV5Height;
    USHORT bV5Planes;
    USHORT bV5BitCount;
    ULONG bV5Compression;
    ULONG bV5SizeImage;
    LONG bV5XPelsPerMeter;
    LONG bV5YPelsPerMeter;
    ULONG bV5ClrUsed;
    ULONG bV5ClrImportant;
    ULONG bV5RedMask;
    ULONG bV5GreenMask;
    ULONG bV5BlueMask;
    ULONG bV5AlphaMask;
    ULONG bV5CSType;
    struct tagICEXYZTRIPLE bV5Endpoints;
    ULONG bV5GammaRed;
    ULONG bV5GammaGreen;
    ULONG bV5GammaBlue;
    ULONG bV5Intent;
    ULONG bV5ProfileData;
    ULONG bV5ProfileSize;
    ULONG bV5Reserved;
};

typedef struct BREAK_ON_STATUS_BUFFER {
    LONG NtStatus;
    ULONG Win32Error;
    ULONG ThreadId;
    ULONG ProcessId;
    CHAR ImageFileName[16];
};

typedef struct BRIGHTNESS_SENSOR_DATA {
    ULONG Size;
    struct {
        ULONG AlsReadingValid : 1;
        ULONG ColorValid : 1;
        ULONG ColorTemperatureValid : 1;
        ULONG Reserved : 29;
    } Flags;
    ULONG ValidSensorValues;
    FLOAT AlsReading;
    struct BRIGHTNESS_SENSOR_DATA_CHROMATICITY Chromaticity;
    FLOAT ColorTemperature;
};

typedef struct BRIGHTNESS_SENSOR_DATA_CHROMATICITY {
    FLOAT ChromaticityX;
    FLOAT ChromaticityY;
};

typedef struct BSMINFO {
    ULONG cbSize;
    struct HDESK__ *hdesk;
    struct HWND__ *hwnd;
    struct _LUID luid;
};

typedef struct BULK_SECURITY_TEST_DATA {
    ULONG DesiredAccess;
    ULONG SecurityIds[1];
};

typedef struct BUTTON_IMAGELIST {
    struct _IMAGELIST *himl;
    struct tagRECT margin;
    ULONG uAlign;
};

typedef struct CABINETSTATE {
    USHORT cLength;
    USHORT nVersion;
    LONG fFullPathTitle : 1;
    LONG fSaveLocalView : 1;
    LONG fNotShell : 1;
    LONG fSimpleDefault : 1;
    LONG fDontShowDescBar : 1;
    LONG fNewWindowMode : 1;
    LONG fShowCompColor : 1;
    LONG fDontPrettyNames : 1;
    LONG fAdminsCreateCommonGroups : 1;
    ULONG fUnusedFlags : 7;
    ULONG fMenuEnumFilter;
};

typedef struct CACHE_STATISTICS {
    USHORT ProtocolType;
    USHORT Length;
     <unnamed-type-Specific>;
    union {
        struct _ICA_CACHE IcaCacheStats;
        struct _TSHARE_CACHE TShareCacheStats;
        ULONG Reserved[20];
    } Specific;
};

typedef struct CALDATETIME {
    ULONG CalId;
    ULONG Era;
    ULONG Year;
    ULONG Month;
    ULONG Day;
    ULONG DayOfWeek;
    ULONG Hour;
    ULONG Minute;
    ULONG Second;
    ULONG Tick;
};

typedef struct CATEGORY_INFO {
    enum CATEGORYINFO_FLAGS cif;
    WCHAR wszName[260];
};

typedef struct CAtlSafeAllocBufferNode {
    struct ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::_ATL_SAFE_ALLOCA_IMPL::_CCRTAllocator>::CAtlSafeAllocBufferNode *m_pNext;
    UCHAR _pad[8];
    PVOID GetData;
};

typedef struct CDpiCache<CInternalNonclientMetrics> {
    VOID StaticStartup;
    VOID StaticShutdown;
    struct CInternalNonclientMetrics *Get;
    VOID Clear;
    BOOLEAN _initialized;
    CThemeMap<int,CInternalNonclientMetrics *,CThemeMapEqualHelper<int,CInternalNonclientMetrics *> > _dpiToMetricsMap;
    VOID CDpiCache<CInternalNonclientMetrics>;
    VOID ~CDpiCache<CInternalNonclientMetrics>;
    PVOID __vecDelDtor;
};

typedef struct CDpiCache<_NCTHEMEMET> {
    VOID StaticStartup;
    VOID StaticShutdown;
    struct _NCTHEMEMET *Get;
    VOID Clear;
    BOOLEAN _initialized;
    CThemeMap<int,_NCTHEMEMET *,CThemeMapEqualHelper<int,_NCTHEMEMET *> > _dpiToMetricsMap;
    VOID CDpiCache<_NCTHEMEMET>;
    VOID ~CDpiCache<_NCTHEMEMET>;
    PVOID __vecDelDtor;
};

typedef struct CGamma::GammaTable {
     Row;
    struct CGamma::GammaTable::Row Polynom[256];
};

typedef struct CGamma::GammaTable::Row {
    UCHAR f1;
    UCHAR f2;
};

typedef struct CInternalNonclientMetrics {
    struct tagNONCLIENTMETRICSW *GetNcm;
    struct HFONT__ *GetFont;
    LONG Acquire;
    VOID Initialize;
    VOID Clear;
    LONG CompareLogfont;
    struct tagNONCLIENTMETRICSW _ncm;
    LONG _iCaptionButtonHeight;
    LONG _fSet;
    struct HFONT__ *_hfCaption;
    struct HFONT__ *_hfSmCaption;
    LONG dpi;
};

typedef struct CM_COLUMNINFO {
    ULONG cbSize;
    ULONG dwMask;
    ULONG dwState;
    ULONG uWidth;
    ULONG uDefaultWidth;
    ULONG uIdealWidth;
    WCHAR wszName[80];
};

typedef struct CM_Power_Data_s {
    ULONG PD_Size;
    enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
    ULONG PD_Capabilities;
    ULONG PD_D1Latency;
    ULONG PD_D2Latency;
    ULONG PD_D3Latency;
    enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
    enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

typedef struct CMdiBtns::MDIBTN {
    ULONG wID;
    enum WINDOWPARTS iPartId;
    enum SIZINGTYPE sizingType;
    struct tagSIZE size;
    ULONG fTypePrev;
    struct HBITMAP__ *hbmPrev;
    struct HBITMAP__ *hbmTheme;
};

typedef struct CONFIRMSAFETY {
    struct _GUID clsid;
    struct IUnknown *pUnk;
    ULONG dwFlags;
};

typedef struct CONFIRM_CONFLICT_ITEM {
    struct IShellItem2 *pShellItem;
    PWCHAR pszOriginalName;
    PWCHAR pszAlternateName;
    PWCHAR pszLocationShort;
    PWCHAR pszLocationFull;
    enum SYNCMGR_CONFLICT_ITEM_TYPE nType;
};

typedef struct CONFLICT_ITEM_METADATA {
    struct _FILETIME ftDateModified;
    ULONG64 ullSize;
    PWCHAR pszItemName;
    PWCHAR pszItemPath;
    LONG fHasConnectedElement;
};

typedef struct COPYFILE2_EXTENDED_PARAMETERS {
    ULONG dwSize;
    ULONG dwCopyFlags;
    PLONG pfCancel;
    enum _COPYFILE2_MESSAGE_ACTION *pProgressRoutine;
    PVOID pvCallbackContext;
};

typedef struct COPYFILE2_MESSAGE {
    enum _COPYFILE2_MESSAGE_TYPE Type;
    ULONG dwPadding;
     <unnamed-type-Info>;
    union {
         <unnamed-type-ChunkStarted>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliChunkSize;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliTotalFileSize;
        } ChunkStarted;
         <unnamed-type-ChunkFinished>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwFlags;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliChunkSize;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } ChunkFinished;
         <unnamed-type-StreamStarted>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliTotalFileSize;
        } StreamStarted;
         <unnamed-type-StreamFinished>;
        struct {
            ULONG dwStreamNumber;
            ULONG dwReserved;
            PVOID hSourceFile;
            PVOID hDestinationFile;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } StreamFinished;
         <unnamed-type-PollContinue>;
        struct {
            ULONG dwReserved;
        } PollContinue;
         <unnamed-type-Error>;
        struct {
            enum _COPYFILE2_COPY_PHASE CopyPhase;
            ULONG dwStreamNumber;
            HRESULT hrFailure;
            ULONG dwReserved;
            union _ULARGE_INTEGER uliChunkNumber;
            union _ULARGE_INTEGER uliStreamSize;
            union _ULARGE_INTEGER uliStreamBytesTransferred;
            union _ULARGE_INTEGER uliTotalFileSize;
            union _ULARGE_INTEGER uliTotalBytesTransferred;
        } Error;
    } Info;
};

typedef struct CORRELATION_VECTOR {
    CHAR Version;
    CHAR Vector[129];
};

typedef struct CO_MTA_USAGE_COOKIE__ {
    LONG unused;
};

typedef struct COffScreenBuffer::_CreateNewBuffer::__l26::BMI {
    struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER;
    ULONG bmiColors[2];
};

typedef struct CREATE_USN_JOURNAL_DATA {
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
};

typedef struct CShakeWnd::_SHAKETHRESHOLD {
    DOUBLE timeout;
    DOUBLE triggerTimeout;
    DOUBLE inSpeed;
    DOUBLE outSpeed;
    DOUBLE angle;
    DOUBLE minLength;
    DOUBLE maxLength;
    DOUBLE ratio;
    DOUBLE maxTime;
    ULONG shake;
};

typedef struct CStateIdObjectCache {
    VOID ~CStateIdObjectCache;
    CThemeArray<CDrawBase *,CThemeArrayEqualHelper<CDrawBase *> > DrawObjs;
    CThemeArray<CTextDraw *,CThemeArrayEqualHelper<CTextDraw *> > TextObjs;
    VOID CStateIdObjectCache;
    VOID CStateIdObjectCache;
    struct CStateIdObjectCache *operator=;
    PVOID __vecDelDtor;
};

typedef struct CThemeMenuBar::DRAWITEMMETRICS {
    struct tagRECT rgrc[2];
};

typedef struct CThemeMenuPopup::DRAWITEMMETRICS {
    struct tagRECT rcSelection;
    struct tagRECT rcGutter;
    struct tagRECT rcCheckBackground;
    struct tagRECT rgrc[4];
    struct tagRECT rcSubmenu;
};

typedef struct CThreadObjectManager<CPaintBufferPool>::_TLSDATA {
    CPaintBufferPool *_pThreadObject;
    LONG _cRef;
};

typedef struct CTimeZoneInformationCache::TZI_FOR_YEAR {
    USHORT wYear;
    LONG Bias;
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct CTransformSerializer::Header {
    ULONG _cbSize;
    ULONG _dwOffsetProperty;
    ULONG _dwOffsetTranform;
};

typedef struct CachedFeaturePropertyData {
    enum wil_FeatureChangeTime changeTime;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct CachedUsageData {
    ULONG id;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct Completer {
    wil::details::static_lazy<ThemeSettingsTelemetry> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct CreateScaledDDB::__l8::BITMAPHEADER {
    struct tagBITMAPINFOHEADER bmih;
    ULONG masks[3];
};

typedef struct CsFrame {
    ULONG64 SavedR10;
    ULONG64 SavedR11;
};

typedef struct D3DDISPLAYMODEEX {
    ULONG Size;
    ULONG Width;
    ULONG Height;
    ULONG RefreshRate;
    enum _D3DFORMAT Format;
    enum D3DSCANLINEORDERING ScanLineOrdering;
};

typedef struct D3DDISPLAYMODEFILTER {
    ULONG Size;
    enum _D3DFORMAT Format;
    enum D3DSCANLINEORDERING ScanLineOrdering;
};

typedef struct DDEACK {
    USHORT bAppReturnCode : 8;
    USHORT reserved : 6;
    USHORT fBusy : 1;
    USHORT fAck : 1;
};

typedef struct DDEADVISE {
    USHORT reserved : 14;
    USHORT fDeferUpd : 1;
    USHORT fAckReq : 1;
    SHORT cfFormat;
};

typedef struct DDEDATA {
    USHORT unused : 12;
    USHORT fResponse : 1;
    USHORT fRelease : 1;
    USHORT reserved : 1;
    USHORT fAckReq : 1;
    SHORT cfFormat;
    UCHAR Value[1];
};

typedef struct DDELN {
    USHORT unused : 13;
    USHORT fRelease : 1;
    USHORT fDeferUpd : 1;
    USHORT fAckReq : 1;
    SHORT cfFormat;
};

typedef struct DDEPOKE {
    USHORT unused : 13;
    USHORT fRelease : 1;
    USHORT fReserved : 2;
    SHORT cfFormat;
    UCHAR Value[1];
};

typedef struct DDEUP {
    USHORT unused : 12;
    USHORT fAck : 1;
    USHORT fRelease : 1;
    USHORT fReserved : 1;
    USHORT fAckReq : 1;
    SHORT cfFormat;
    UCHAR rgb[1];
};

typedef struct DEFCONTEXTMENU {
    struct HWND__ *hwnd;
    struct IContextMenuCB *pcmcb;
    struct _ITEMIDLIST *pidlFolder;
    struct IShellFolder *psf;
    ULONG cidl;
    struct _ITEMIDLIST **apidl;
    struct IUnknown *punkAssociationInfo;
    ULONG cKeys;
    struct HKEY__ **aKeys;
};

typedef struct DELEGATEITEMID {
    USHORT cbSize;
    USHORT wOuter;
    USHORT cbInner;
    UCHAR rgb[1];
};

typedef struct DELETE_USN_JOURNAL_DATA {
    ULONG64 UsnJournalID;
    ULONG DeleteFlags;
};

typedef struct DESKBANDINFO {
    ULONG dwMask;
    struct _POINTL ptMinSize;
    struct _POINTL ptMaxSize;
    struct _POINTL ptIntegral;
    struct _POINTL ptActual;
    WCHAR wszTitle[256];
    ULONG dwModeFlags;
    ULONG crBkgnd;
};

typedef struct DETACHALL {
    ULONG dwProcessId;
    ULONG dwDisposition;
};

typedef struct DFConstraint {
    struct IDispatch IDispatch;
    HRESULT get_Name;
    HRESULT get_Value;
    VOID DFConstraint;
    VOID DFConstraint;
    VOID DFConstraint;
    struct DFConstraint *operator=;
    struct DFConstraint *operator=;
};

typedef struct DFMICS {
    ULONG cbSize;
    ULONG fMask;
    LONG64 lParam;
    ULONG idCmdFirst;
    ULONG idDefMax;
    struct _CMINVOKECOMMANDINFO *pici;
    struct IUnknown *punkSite;
};

typedef struct DIBDATA {
    PVOID pDIBBits;
    struct DIBREUSEDATA dibReuseData;
};

typedef struct DIBINFO {
    union HBITMAP64 uhbm;
    LONG iDibOffset;
    LONG iSingleWidth;
    LONG iSingleHeight;
    LONG iRgnListOffset;
    enum SIZINGTYPE eSizingType;
    LONG fBorderOnly;
    LONG fPartiallyTransparent;
    LONG iAlphaThreshold;
    LONG iMinDpi;
    struct tagSIZE szMinSize;
};

typedef struct DIBREUSEDATA {
    LONG iDIBBitsOffset;
    SHORT iWidth;
    SHORT iHeight;
};

typedef struct DISK_SPACE_INFORMATION {
    ULONG64 ActualTotalAllocationUnits;
    ULONG64 ActualAvailableAllocationUnits;
    ULONG64 ActualPoolUnavailableAllocationUnits;
    ULONG64 CallerTotalAllocationUnits;
    ULONG64 CallerAvailableAllocationUnits;
    ULONG64 CallerPoolUnavailableAllocationUnits;
    ULONG64 UsedAllocationUnits;
    ULONG64 TotalReservedAllocationUnits;
    ULONG64 VolumeStorageReserveAllocationUnits;
    ULONG64 AvailableCommittedAllocationUnits;
    ULONG64 PoolAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct DISPLAYCONFIG_2DREGION {
    ULONG cx;
    ULONG cy;
};

typedef struct DISPLAYCONFIG_ADAPTER_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR adapterDevicePath[128];
};

typedef struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO {
    struct _POINTL PathSourceSize;
    struct _RECTL DesktopImageRegion;
    struct _RECTL DesktopImageClip;
};

typedef struct DISPLAYCONFIG_DEVICE_INFO_HEADER {
    enum DISPLAYCONFIG_DEVICE_INFO_TYPE type;
    ULONG size;
    struct _LUID adapterId;
    ULONG id;
};

typedef struct DISPLAYCONFIG_FUNCTIONALIZE_ARGS {
    struct DISPLAYCONFIG_PATH_INFO_INTERNAL FakePathInfo;
    struct {
        ULONG64 FakePathFlags;
        ULONG64 Reserved;
        ULONG EnumModesPathIndex;
        ULONG ModeResultsCount;
        struct DISPLAYCONFIG_MODE_ENUM_RESULT *pModeResults;
    } FdcArguments;
};

typedef struct DISPLAYCONFIG_GET_SOURCE_INFO_INTERNAL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG adapterSourceHash;
    ULONG hashBitCount;
    ULONG hashBitShift;
    ULONG hashBitMask;
    ULONG FromHash : 1;
    ULONG HashInfoOnly : 1;
    ULONG Value;
};

typedef struct DISPLAYCONFIG_GET_TARGET_INFO_INTERNAL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY baseOutputTechnology;
    enum DISPLAYCONFIG_TARGET_USAGE Usage;
    ULONG IsVirtualModeDisabled : 1;
    ULONG IsVirtualTopologyDisabled : 1;
    ULONG Value;
};

typedef struct DISPLAYCONFIG_GRAPHICS_RENDERING_FORMAT {
    ULONG Width;
    ULONG Height;
    ULONG PixelFormat;
};

typedef struct DISPLAYCONFIG_MODE_ENUM_RESULT {
    struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO TargetModeInfo;
    struct DISPLAYCONFIG_GRAPHICS_RENDERING_FORMAT SourceModeInfo;
    UCHAR IsStereo;
     <unnamed-type-WireFormatSupport>;
    union {
        ULONG Rgb : 6;
        ULONG YCbCr444 : 6;
        ULONG YCbCr422 : 6;
        ULONG YCbCr420 : 6;
        ULONG Intensity : 6;
        ULONG Value;
    } WireFormatSupport;
};

typedef struct DISPLAYCONFIG_MODE_INFO {
    enum DISPLAYCONFIG_MODE_INFO_TYPE infoType;
    ULONG id;
    struct _LUID adapterId;
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
    struct DISPLAYCONFIG_SOURCE_MODE sourceMode;
    struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO desktopImageInfo;
};

typedef struct DISPLAYCONFIG_PATH_INFO {
    struct DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
    struct DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
    ULONG flags;
};

typedef struct DISPLAYCONFIG_PATH_INFO_INTERNAL {
    ULONG64 Flags;
    ULONG64 FixedFlags;
    struct _LUID AdapterLuid;
    ULONG VidPnSourceId;
    ULONG VidPnTargetId;
    struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO TargetModeInfo;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY TargetOutputTechnology;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY TargetBaseOutputTechnology;
    struct DISPLAYCONFIG_GRAPHICS_RENDERING_FORMAT SourceModeInfo;
    UCHAR IsStereo;
    UCHAR VirtualModeOrTopologySupported;
    enum DISPLAYCONFIG_ROTATION Rotation;
    enum DISPLAYCONFIG_SCALING ScalingToApply;
    enum DISPLAYCONFIG_SCALING ScalingIntent;
    struct _POINTL Position;
    struct _POINTL ContentResolution;
    struct _POINTL ContentSizeRecommended;
    struct _RECTL DwmClipBox;
    ULONG CloneGroupId;
    ULONG DisplayId;
    ULONG StatusApply;
    struct _LUID CloneGroupLuid;
    struct DISPLAYCONFIG_WIRE_FORMAT WireFormat;
    ULONG ColorSpace;
    enum DISPLAYCONFIG_TARGET_USAGE TargetUsage;
    ULONG SyncGroupId;
};

typedef struct DISPLAYCONFIG_PATH_SOURCE_INFO {
    struct _LUID adapterId;
    ULONG id;
    ULONG modeInfoIdx;
    ULONG cloneGroupId : 16;
    ULONG sourceModeInfoIdx : 16;
    ULONG statusFlags;
};

typedef struct DISPLAYCONFIG_PATH_TARGET_INFO {
    struct _LUID adapterId;
    ULONG id;
    ULONG modeInfoIdx;
    ULONG desktopModeInfoIdx : 16;
    ULONG targetModeInfoIdx : 16;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    enum DISPLAYCONFIG_ROTATION rotation;
    enum DISPLAYCONFIG_SCALING scaling;
    struct DISPLAYCONFIG_RATIONAL refreshRate;
    enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
    LONG targetAvailable;
    ULONG statusFlags;
};

typedef struct DISPLAYCONFIG_RATIONAL {
    ULONG Numerator;
    ULONG Denominator;
};

typedef struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG bootPersistenceOn : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct DISPLAYCONFIG_SOURCE_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR viewGdiDeviceName[32];
};

typedef struct DISPLAYCONFIG_SOURCE_MODE {
    ULONG width;
    ULONG height;
    enum DISPLAYCONFIG_PIXELFORMAT pixelFormat;
    struct _POINTL position;
};

typedef struct DISPLAYCONFIG_STATE_TOKEN {
    ULONG DisplayUniqueness;
    ULONG MonitorUniqueness;
    ULONG AdapterUniqueness;
};

typedef struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG disableMonitorVirtualResolution : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct DISPLAYCONFIG_TARGET_BASE_TYPE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY baseOutputTechnology;
};

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
    enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    USHORT edidManufactureId;
    USHORT edidProductCodeId;
    ULONG connectorInstance;
    WCHAR monitorFriendlyDeviceName[64];
    WCHAR monitorDevicePath[128];
};

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS {
    ULONG friendlyNameFromEdid : 1;
    ULONG friendlyNameForced : 1;
    ULONG edidIdsValid : 1;
    ULONG reserved : 29;
    ULONG value;
};

typedef struct DISPLAYCONFIG_TARGET_MODE {
    struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
};

typedef struct DISPLAYCONFIG_TARGET_PREFERRED_MODE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG width;
    ULONG height;
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
};

typedef struct DISPLAYCONFIG_TARGET_VIRTUAL_TYPE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG virtualMonitorType;
};

typedef struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO {
    ULONG64 pixelRate;
    struct DISPLAYCONFIG_RATIONAL hSyncFreq;
    struct DISPLAYCONFIG_RATIONAL vSyncFreq;
    struct DISPLAYCONFIG_2DREGION activeSize;
    struct DISPLAYCONFIG_2DREGION totalSize;
    struct {
        ULONG videoStandard : 16;
        ULONG vSyncFreqDivider : 6;
        ULONG reserved : 10;
    } AdditionalSignalInfo;
    ULONG videoStandard;
    enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
};

typedef struct DISPLAYCONFIG_WIRE_FORMAT {
    enum _DISPLAYCONFIG_COLOR_ENCODING ColorEncoding;
    ULONG BitsPerPixel;
};

typedef struct DLGITEMTEMPLATE {
    ULONG style;
    ULONG dwExtendedStyle;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
    USHORT id;
};

typedef struct DLGITEMTEMPLATE2 {
    ULONG dwHelpID;
    ULONG dwExStyle;
    ULONG style;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
    ULONG dwID;
};

typedef struct DLGTEMPLATE {
    ULONG style;
    ULONG dwExtendedStyle;
    USHORT cdit;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
};

typedef struct DLGTEMPLATE2 {
    USHORT wDlgVer;
    USHORT wSignature;
    ULONG dwHelpID;
    ULONG dwExStyle;
    ULONG style;
    USHORT cDlgItems;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
};

typedef struct DPI_AWARENESS_CONTEXT__ {
    LONG unused;
};

typedef struct DRAWITEMMETRICS {
    struct tagRECT rgrc[2];
};

typedef struct DROPDESCRIPTION {
    enum DROPIMAGETYPE type;
    WCHAR szMessage[260];
    WCHAR szInsert[260];
};

typedef struct DRVCONFIGINFOEX {
    ULONG dwDCISize;
    PWCHAR lpszDCISectionName;
    PWCHAR lpszDCIAliasName;
    ULONG dnDevNode;
};

typedef struct DShellFolderViewEvents {
    struct IDispatch IDispatch;
    VOID DShellFolderViewEvents;
    VOID DShellFolderViewEvents;
    VOID DShellFolderViewEvents;
    struct DShellFolderViewEvents *operator=;
    struct DShellFolderViewEvents *operator=;
};

typedef struct DShellNameSpaceEvents {
    struct IDispatch IDispatch;
    VOID DShellNameSpaceEvents;
    VOID DShellNameSpaceEvents;
    VOID DShellNameSpaceEvents;
    struct DShellNameSpaceEvents *operator=;
    struct DShellNameSpaceEvents *operator=;
};

typedef struct DShellWindowsEvents {
    struct IDispatch IDispatch;
    VOID DShellWindowsEvents;
    VOID DShellWindowsEvents;
    VOID DShellWindowsEvents;
    struct DShellWindowsEvents *operator=;
    struct DShellWindowsEvents *operator=;
};

typedef struct DWM_CAPTURE_TOKEN {
    union _LARGE_INTEGER value;
};

typedef struct DWebBrowserEvents {
    struct IDispatch IDispatch;
    VOID DWebBrowserEvents;
    VOID DWebBrowserEvents;
    VOID DWebBrowserEvents;
    struct DWebBrowserEvents *operator=;
    struct DWebBrowserEvents *operator=;
};

typedef struct DWebBrowserEvents2 {
    struct IDispatch IDispatch;
    VOID DWebBrowserEvents2;
    VOID DWebBrowserEvents2;
    VOID DWebBrowserEvents2;
    struct DWebBrowserEvents2 *operator=;
    struct DWebBrowserEvents2 *operator=;
};

typedef struct ENTRYHDR {
    USHORT usTypeNum;
    UCHAR ePrimVal;
    ULONG dwDataLen;
};

typedef struct EPW {
    PLONG lpCallBackCaller;
    LONG64 lParamCaller;
    struct HWND__ **pHwnds;
    LONG iCountHwnds;
};

typedef struct EXPANDER {
    PWCHAR szKey;
    PWCHAR szValue;
};

typedef struct EXP_DARWIN_LINK {
    struct tagDATABLOCKHEADER dbh;
    CHAR szDarwinID[260];
    WCHAR szwDarwinID[260];
};

typedef struct EXP_HEADER {
    ULONG cbSize;
    ULONG dwSignature;
};

typedef struct EXP_IDLIST_FOR_VISTA_AND_ABOVE {
    ULONG cbSize;
    ULONG dwSignature;
    UCHAR abIDList[1];
};

typedef struct EXP_KNOWN_FOLDER {
    ULONG cbSize;
    ULONG dwSignature;
    struct _GUID kfid;
    ULONG cbOffset;
};

typedef struct EXP_PROPERTYSTORAGE {
    ULONG cbSize;
    ULONG dwSignature;
    UCHAR abPropertyStorage[1];
};

typedef struct EXP_SHIMLAYER {
    ULONG cbSize;
    ULONG dwSignature;
    WCHAR wszLayerEnvName[64];
};

typedef struct EXP_SPECIAL_FOLDER {
    ULONG cbSize;
    ULONG dwSignature;
    ULONG idSpecialFolder;
    ULONG cbOffset;
};

typedef struct EXP_SZ_LINK {
    ULONG cbSize;
    ULONG dwSignature;
    CHAR szTarget[260];
    WCHAR swzTarget[260];
};

typedef struct EXP_TRACKER {
    ULONG cbSize;
    ULONG dwSignature;
    UCHAR abTracker[1];
};

typedef struct EXTRASEARCH {
    struct _GUID guidSearch;
    WCHAR wszFriendlyName[80];
    WCHAR wszUrl[2084];
};

typedef struct EventRegistrationToken {
    LONG64 value;
};

typedef struct FEATURE_ERROR {
    HRESULT hr;
    USHORT lineNumber;
    PCHAR file;
    PCHAR process;
    PCHAR modulePath;
    ULONG callerReturnAddressOffset;
    PCHAR callerModule;
    PCHAR message;
    USHORT originLineNumber;
    PCHAR originFile;
    PCHAR originModule;
    ULONG originCallerReturnAddressOffset;
    PCHAR originCallerModule;
    PCHAR originName;
};

typedef struct FEATURE_LOGGED_TRAITS {
    USHORT version;
    USHORT baseVersion;
    UCHAR stage;
};

typedef struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ {
    LONG unused;
};

typedef struct FILE_ATTRIBUTES_ARRAY {
    ULONG cItems;
    ULONG dwSumFileAttributes;
    ULONG dwProductFileAttributes;
    ULONG rgdwFileAttributes[1];
};

typedef struct FILE_ID_DESCRIPTOR {
    ULONG dwSize;
    enum _FILE_ID_TYPE Type;
    union _LARGE_INTEGER FileId;
    struct _GUID ObjectId;
    struct _FILE_ID_128 ExtendedFileId;
};

typedef struct FIND_BY_SID_DATA {
    ULONG Restart;
    struct _SID Sid;
};

typedef struct FIND_BY_SID_OUTPUT {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct FLASHWINFO {
    ULONG cbSize;
    struct HWND__ *hwnd;
    ULONG dwFlags;
    ULONG uCount;
    ULONG dwTimeout;
};

typedef struct FOLDERSETTINGS {
    ULONG ViewMode;
    ULONG fFlags;
};

typedef struct FRAME_MARGIN {
    SHORT left;
    SHORT right;
    SHORT top;
    SHORT bottom;
};

typedef struct Folder {
    struct IDispatch IDispatch;
    HRESULT get_Title;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT get_ParentFolder;
    HRESULT Items;
    HRESULT ParseName;
    HRESULT NewFolder;
    HRESULT MoveHere;
    HRESULT CopyHere;
    HRESULT GetDetailsOf;
    VOID Folder;
    VOID Folder;
    VOID Folder;
    struct Folder *operator=;
    struct Folder *operator=;
};

typedef struct Folder2 {
    struct Folder Folder;
    HRESULT get_Self;
    HRESULT get_OfflineStatus;
    HRESULT Synchronize;
    HRESULT get_HaveToShowWebViewBarricade;
    HRESULT DismissedWebViewBarricade;
    VOID Folder2;
    VOID Folder2;
    VOID Folder2;
    struct Folder2 *operator=;
    struct Folder2 *operator=;
};

typedef struct Folder3 {
    struct Folder2 Folder2;
    HRESULT get_ShowWebViewBarricade;
    HRESULT put_ShowWebViewBarricade;
    VOID Folder3;
    VOID Folder3;
    VOID Folder3;
    struct Folder3 *operator=;
    struct Folder3 *operator=;
};

typedef struct FolderItem {
    struct IDispatch IDispatch;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT get_Name;
    HRESULT put_Name;
    HRESULT get_Path;
    HRESULT get_GetLink;
    HRESULT get_GetFolder;
    HRESULT get_IsLink;
    HRESULT get_IsFolder;
    HRESULT get_IsFileSystem;
    HRESULT get_IsBrowsable;
    HRESULT get_ModifyDate;
    HRESULT put_ModifyDate;
    HRESULT get_Size;
    HRESULT get_Type;
    HRESULT Verbs;
    HRESULT InvokeVerb;
    VOID FolderItem;
    VOID FolderItem;
    VOID FolderItem;
    struct FolderItem *operator=;
    struct FolderItem *operator=;
};

typedef struct FolderItem2 {
    struct FolderItem FolderItem;
    HRESULT InvokeVerbEx;
    HRESULT ExtendedProperty;
    VOID FolderItem2;
    VOID FolderItem2;
    VOID FolderItem2;
    struct FolderItem2 *operator=;
    struct FolderItem2 *operator=;
};

typedef struct FolderItemVerb {
    struct IDispatch IDispatch;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT get_Name;
    HRESULT DoIt;
    VOID FolderItemVerb;
    VOID FolderItemVerb;
    VOID FolderItemVerb;
    struct FolderItemVerb *operator=;
    struct FolderItemVerb *operator=;
};

typedef struct FolderItemVerbs {
    struct IDispatch IDispatch;
    HRESULT get_Count;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT Item;
    HRESULT _NewEnum;
    VOID FolderItemVerbs;
    VOID FolderItemVerbs;
    VOID FolderItemVerbs;
    struct FolderItemVerbs *operator=;
    struct FolderItemVerbs *operator=;
};

typedef struct FolderItems {
    struct IDispatch IDispatch;
    HRESULT get_Count;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT Item;
    HRESULT _NewEnum;
    VOID FolderItems;
    VOID FolderItems;
    VOID FolderItems;
    struct FolderItems *operator=;
    struct FolderItems *operator=;
};

typedef struct FolderItems2 {
    struct FolderItems FolderItems;
    HRESULT InvokeVerbEx;
    VOID FolderItems2;
    VOID FolderItems2;
    VOID FolderItems2;
    struct FolderItems2 *operator=;
    struct FolderItems2 *operator=;
};

typedef struct FolderItems3 {
    struct FolderItems2 FolderItems2;
    HRESULT Filter;
    HRESULT get_Verbs;
    VOID FolderItems3;
    VOID FolderItems3;
    VOID FolderItems3;
    struct FolderItems3 *operator=;
    struct FolderItems3 *operator=;
};

typedef struct GRADIENTPART {
    UCHAR Ratio;
    struct RGBA Color;
};

typedef struct GammaTable {
     Row;
    struct CGamma::GammaTable::Row Polynom[256];
};

typedef struct GlobalOptionNameValue {
    enum tagGLOBALOPT_PROPERTIES name;
    ULONG64 value;
};

typedef struct HACCEL__ {
    LONG unused;
};

typedef struct HBITMAP__ {
    LONG unused;
};

typedef struct HBRUSH__ {
    LONG unused;
};

typedef struct HCOLORSPACE__ {
    LONG unused;
};

typedef struct HCONVLIST__ {
    LONG unused;
};

typedef struct HCONV__ {
    LONG unused;
};

typedef struct HDC__ {
    LONG unused;
};

typedef struct HDDEDATA__ {
    LONG unused;
};

typedef struct HDESK__ {
    LONG unused;
};

typedef struct HDROP__ {
    LONG unused;
};

typedef struct HDRVR__ {
    LONG unused;
};

typedef struct HENHMETAFILE__ {
    LONG unused;
};

typedef struct HFONT__ {
    LONG unused;
};

typedef struct HGESTUREINFO__ {
    LONG unused;
};

typedef struct HGLRC__ {
    LONG unused;
};

typedef struct HHOOK__ {
    LONG unused;
};

typedef struct HICON__ {
    LONG unused;
};

typedef struct HIMCC__ {
    LONG unused;
};

typedef struct HIMC__ {
    LONG unused;
};

typedef struct HINSTANCE__ {
    LONG unused;
};

typedef struct HKEY__ {
    LONG unused;
};

typedef struct HKL__ {
    LONG unused;
};

typedef struct HLP {
    USHORT cbData;
    USHORT usCommand;
    ULONG64 ulTopic;
    ULONG ulReserved;
    USHORT offszHelpFile;
    USHORT offabData;
};

typedef struct HLSURF__ {
    LONG unused;
};

typedef struct HMENU__ {
    LONG unused;
};

typedef struct HMETAFILE__ {
    LONG unused;
};

typedef struct HMIDIIN__ {
    LONG unused;
};

typedef struct HMIDIOUT__ {
    LONG unused;
};

typedef struct HMIDISTRM__ {
    LONG unused;
};

typedef struct HMIDI__ {
    LONG unused;
};

typedef struct HMIXEROBJ__ {
    LONG unused;
};

typedef struct HMIXER__ {
    LONG unused;
};

typedef struct HMMIO__ {
    LONG unused;
};

typedef struct HMONITOR__ {
    LONG unused;
};

typedef struct HPALETTE__ {
    LONG unused;
};

typedef struct HPEN__ {
    LONG unused;
};

typedef struct HPSXA__ {
    LONG unused;
};

typedef struct HRAWINPUT__ {
    LONG unused;
};

typedef struct HRGN__ {
    LONG unused;
};

typedef struct HRSRC__ {
    LONG unused;
};

typedef struct HSPRITE__ {
    LONG unused;
};

typedef struct HSTRING_BUFFER__ {
    LONG unused;
};

typedef struct HSTRING_HEADER {
     <unnamed-type-Reserved>;
    union {
        PVOID Reserved1;
        CHAR Reserved2[24];
    } Reserved;
};

typedef struct HSTRING__ {
    LONG unused;
};

typedef struct HSTR__ {
    LONG unused;
};

typedef struct HSYNTHETICPOINTERDEVICE__ {
    LONG unused;
};

typedef struct HSZ__ {
    LONG unused;
};

typedef struct HTASK__ {
    LONG unused;
};

typedef struct HTOUCHINPUT__ {
    LONG unused;
};

typedef struct HUMPD__ {
    LONG unused;
};

typedef struct HWAVEIN__ {
    LONG unused;
};

typedef struct HWAVEOUT__ {
    LONG unused;
};

typedef struct HWAVE__ {
    LONG unused;
};

typedef struct HWINEVENTHOOK__ {
    LONG unused;
};

typedef struct HWINSTA__ {
    LONG unused;
};

typedef struct HWND__ {
    LONG unused;
};

typedef struct Header {
    USHORT formatVersion;
    USHORT version;
    USHORT indexSize;
    USHORT valueSize;
    enum wil::details_abi::CountSize indexCountSize;
    enum wil::details_abi::CountSize valueCountSize;
};

typedef struct IACList {
    struct IUnknown IUnknown;
    HRESULT Expand;
    VOID IACList;
    VOID IACList;
    VOID IACList;
    struct IACList *operator=;
    struct IACList *operator=;
};

typedef struct IACList2 {
    struct IACList IACList;
    HRESULT SetOptions;
    HRESULT GetOptions;
    VOID IACList2;
    VOID IACList2;
    VOID IACList2;
    struct IACList2 *operator=;
    struct IACList2 *operator=;
};

typedef struct IActionProgress {
    struct IUnknown IUnknown;
    HRESULT Begin;
    HRESULT UpdateProgress;
    HRESULT UpdateText;
    HRESULT QueryCancel;
    HRESULT ResetCancel;
    HRESULT End;
    VOID IActionProgress;
    VOID IActionProgress;
    VOID IActionProgress;
    struct IActionProgress *operator=;
    struct IActionProgress *operator=;
};

typedef struct IActionProgressDialog {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT Stop;
    VOID IActionProgressDialog;
    VOID IActionProgressDialog;
    VOID IActionProgressDialog;
    struct IActionProgressDialog *operator=;
    struct IActionProgressDialog *operator=;
};

typedef struct IActivationFactory {
    struct IInspectable IInspectable;
    HRESULT ActivateInstance;
    VOID IActivationFactory;
    VOID IActivationFactory;
    VOID IActivationFactory;
    struct IActivationFactory *operator=;
    struct IActivationFactory *operator=;
};

typedef struct IActivationFilter {
    struct IUnknown IUnknown;
    HRESULT HandleActivation;
    VOID IActivationFilter;
    VOID IActivationFilter;
    VOID IActivationFilter;
    struct IActivationFilter *operator=;
    struct IActivationFilter *operator=;
};

typedef struct IAddrExclusionControl {
    struct IUnknown IUnknown;
    HRESULT GetCurrentAddrExclusionList;
    HRESULT UpdateAddrExclusionList;
    VOID IAddrExclusionControl;
    VOID IAddrExclusionControl;
    VOID IAddrExclusionControl;
    struct IAddrExclusionControl *operator=;
    struct IAddrExclusionControl *operator=;
};

typedef struct IAddrTrackingControl {
    struct IUnknown IUnknown;
    HRESULT EnableCOMDynamicAddrTracking;
    HRESULT DisableCOMDynamicAddrTracking;
    VOID IAddrTrackingControl;
    VOID IAddrTrackingControl;
    VOID IAddrTrackingControl;
    struct IAddrTrackingControl *operator=;
    struct IAddrTrackingControl *operator=;
};

typedef struct IAdviseSink {
    struct IUnknown IUnknown;
    VOID OnDataChange;
    VOID OnViewChange;
    VOID OnRename;
    VOID OnSave;
    VOID OnClose;
    VOID IAdviseSink;
    VOID IAdviseSink;
    VOID IAdviseSink;
    struct IAdviseSink *operator=;
    struct IAdviseSink *operator=;
};

typedef struct IAdviseSink2 {
    struct IAdviseSink IAdviseSink;
    VOID OnLinkSrcChange;
    VOID IAdviseSink2;
    VOID IAdviseSink2;
    VOID IAdviseSink2;
    struct IAdviseSink2 *operator=;
    struct IAdviseSink2 *operator=;
};

typedef struct IAdviseSinkEx {
    struct IAdviseSink IAdviseSink;
    VOID OnViewStatusChange;
    VOID IAdviseSinkEx;
    VOID IAdviseSinkEx;
    VOID IAdviseSinkEx;
    struct IAdviseSinkEx *operator=;
    struct IAdviseSinkEx *operator=;
};

typedef struct IAggregateMultipleValues {
    struct IMultipleValues IMultipleValues;
    HRESULT GetSubValueFlags;
    HRESULT InitSubValueFlags;
    VOID IAggregateMultipleValues;
    VOID IAggregateMultipleValues;
    VOID IAggregateMultipleValues;
    struct IAggregateMultipleValues *operator=;
    struct IAggregateMultipleValues *operator=;
};

typedef struct IAgileObject {
    struct IUnknown IUnknown;
    VOID IAgileObject;
    VOID IAgileObject;
    VOID IAgileObject;
    struct IAgileObject *operator=;
    struct IAgileObject *operator=;
};

typedef struct IAgileReference {
    struct IUnknown IUnknown;
    HRESULT Resolve;
    VOID IAgileReference;
    VOID IAgileReference;
    VOID IAgileReference;
    struct IAgileReference *operator=;
    struct IAgileReference *operator=;
};

typedef struct IApartmentShutdown {
    struct IUnknown IUnknown;
    VOID OnUninitialize;
    VOID IApartmentShutdown;
    VOID IApartmentShutdown;
    VOID IApartmentShutdown;
    struct IApartmentShutdown *operator=;
    struct IApartmentShutdown *operator=;
};

typedef struct IAppActivationUIInfo {
    struct IUnknown IUnknown;
    HRESULT GetMonitor;
    HRESULT GetInvokePoint;
    HRESULT GetShowCommand;
    HRESULT GetShowUI;
    HRESULT GetKeyState;
    VOID IAppActivationUIInfo;
    VOID IAppActivationUIInfo;
    VOID IAppActivationUIInfo;
    struct IAppActivationUIInfo *operator=;
    struct IAppActivationUIInfo *operator=;
};

typedef struct IAppListItem {
    struct IUnknown IUnknown;
    HRESULT GetExtensionListItem;
    HRESULT GetShellItem;
    HRESULT GetDisplayProperties;
    HRESULT GetSortKeyPtr;
    VOID IAppListItem;
    VOID IAppListItem;
    VOID IAppListItem;
    struct IAppListItem *operator=;
    struct IAppListItem *operator=;
};

typedef struct IAppVisibility {
    struct IUnknown IUnknown;
    HRESULT GetAppVisibilityOnMonitor;
    HRESULT IsLauncherVisible;
    HRESULT Advise;
    HRESULT Unadvise;
    VOID IAppVisibility;
    VOID IAppVisibility;
    VOID IAppVisibility;
    struct IAppVisibility *operator=;
    struct IAppVisibility *operator=;
};

typedef struct IAppVisibilityEvents {
    struct IUnknown IUnknown;
    HRESULT AppVisibilityOnMonitorChanged;
    HRESULT LauncherVisibilityChange;
    VOID IAppVisibilityEvents;
    VOID IAppVisibilityEvents;
    VOID IAppVisibilityEvents;
    struct IAppVisibilityEvents *operator=;
    struct IAppVisibilityEvents *operator=;
};

typedef struct IApplicationActivationManager {
    struct IUnknown IUnknown;
    HRESULT ActivateApplication;
    HRESULT ActivateForFile;
    HRESULT ActivateForProtocol;
    VOID IApplicationActivationManager;
    VOID IApplicationActivationManager;
    VOID IApplicationActivationManager;
    struct IApplicationActivationManager *operator=;
    struct IApplicationActivationManager *operator=;
};

typedef struct IApplicationAssociationRegistration {
    struct IUnknown IUnknown;
    HRESULT QueryCurrentDefault;
    HRESULT QueryAppIsDefault;
    HRESULT QueryAppIsDefaultAll;
    HRESULT SetAppAsDefault;
    HRESULT SetAppAsDefaultAll;
    HRESULT ClearUserAssociations;
    VOID IApplicationAssociationRegistration;
    VOID IApplicationAssociationRegistration;
    VOID IApplicationAssociationRegistration;
    struct IApplicationAssociationRegistration *operator=;
    struct IApplicationAssociationRegistration *operator=;
};

typedef struct IApplicationDesignModeSettings {
    struct IUnknown IUnknown;
    HRESULT SetNativeDisplaySize;
    HRESULT SetScaleFactor;
    HRESULT SetApplicationViewState;
    HRESULT ComputeApplicationSize;
    HRESULT IsApplicationViewStateSupported;
    HRESULT TriggerEdgeGesture;
    VOID IApplicationDesignModeSettings;
    VOID IApplicationDesignModeSettings;
    VOID IApplicationDesignModeSettings;
    struct IApplicationDesignModeSettings *operator=;
    struct IApplicationDesignModeSettings *operator=;
};

typedef struct IApplicationDesignModeSettings2 {
    struct IApplicationDesignModeSettings IApplicationDesignModeSettings;
    HRESULT SetNativeDisplayOrientation;
    HRESULT SetApplicationViewOrientation;
    HRESULT SetAdjacentDisplayEdges;
    HRESULT SetIsOnLockScreen;
    HRESULT SetApplicationViewMinWidth;
    HRESULT GetApplicationSizeBounds;
    HRESULT GetApplicationViewOrientation;
    VOID IApplicationDesignModeSettings2;
    VOID IApplicationDesignModeSettings2;
    VOID IApplicationDesignModeSettings2;
    struct IApplicationDesignModeSettings2 *operator=;
    struct IApplicationDesignModeSettings2 *operator=;
};

typedef struct IApplicationDestinations {
    struct IUnknown IUnknown;
    HRESULT SetAppID;
    HRESULT RemoveDestination;
    HRESULT RemoveAllDestinations;
    VOID IApplicationDestinations;
    VOID IApplicationDestinations;
    VOID IApplicationDestinations;
    struct IApplicationDestinations *operator=;
    struct IApplicationDestinations *operator=;
};

typedef struct IApplicationDocumentLists {
    struct IUnknown IUnknown;
    HRESULT SetAppID;
    HRESULT GetList;
    VOID IApplicationDocumentLists;
    VOID IApplicationDocumentLists;
    VOID IApplicationDocumentLists;
    struct IApplicationDocumentLists *operator=;
    struct IApplicationDocumentLists *operator=;
};

typedef struct IAssocHandler {
    struct IUnknown IUnknown;
    HRESULT GetName;
    HRESULT GetUIName;
    HRESULT GetIconLocation;
    HRESULT IsRecommended;
    HRESULT MakeDefault;
    HRESULT Invoke;
    HRESULT CreateInvoker;
    VOID IAssocHandler;
    VOID IAssocHandler;
    VOID IAssocHandler;
    struct IAssocHandler *operator=;
    struct IAssocHandler *operator=;
};

typedef struct IAssocHandlerInvoker {
    struct IUnknown IUnknown;
    HRESULT SupportsSelection;
    HRESULT Invoke;
    VOID IAssocHandlerInvoker;
    VOID IAssocHandlerInvoker;
    VOID IAssocHandlerInvoker;
    struct IAssocHandlerInvoker *operator=;
    struct IAssocHandlerInvoker *operator=;
};

typedef struct IAsyncManager {
    struct IUnknown IUnknown;
    HRESULT CompleteCall;
    HRESULT GetCallContext;
    HRESULT GetState;
    VOID IAsyncManager;
    VOID IAsyncManager;
    VOID IAsyncManager;
    struct IAsyncManager *operator=;
    struct IAsyncManager *operator=;
};

typedef struct IAsyncRpcChannelBuffer {
    struct IRpcChannelBuffer2 IRpcChannelBuffer2;
    HRESULT Send;
    HRESULT Receive;
    HRESULT GetDestCtxEx;
    VOID IAsyncRpcChannelBuffer;
    VOID IAsyncRpcChannelBuffer;
    VOID IAsyncRpcChannelBuffer;
    struct IAsyncRpcChannelBuffer *operator=;
    struct IAsyncRpcChannelBuffer *operator=;
};

typedef struct IAttachmentExecute {
    struct IUnknown IUnknown;
    HRESULT SetClientTitle;
    HRESULT SetClientGuid;
    HRESULT SetLocalPath;
    HRESULT SetFileName;
    HRESULT SetSource;
    HRESULT SetReferrer;
    HRESULT CheckPolicy;
    HRESULT Prompt;
    HRESULT Save;
    HRESULT Execute;
    HRESULT SaveWithUI;
    HRESULT ClearClientState;
    VOID IAttachmentExecute;
    VOID IAttachmentExecute;
    VOID IAttachmentExecute;
    struct IAttachmentExecute *operator=;
    struct IAttachmentExecute *operator=;
};

typedef struct IAugmentedShellFolder {
    struct IShellFolder IShellFolder;
    HRESULT ParseDisplayName;
    HRESULT EnumObjects;
    HRESULT BindToObject;
    HRESULT BindToStorage;
    HRESULT CompareIDs;
    HRESULT CreateViewObject;
    HRESULT GetAttributesOf;
    HRESULT GetUIObjectOf;
    HRESULT GetDisplayNameOf;
    HRESULT SetNameOf;
    HRESULT AddNameSpace;
    HRESULT GetNameSpaceID;
    HRESULT QueryNameSpace;
    HRESULT EnumNameSpace;
    HRESULT UnWrapIDList;
    HRESULT QueryNameSpace2;
    HRESULT GetNameSpaceGroupID;
    HRESULT GetFlagsForChild;
    VOID IAugmentedShellFolder;
    VOID IAugmentedShellFolder;
    VOID IAugmentedShellFolder;
    struct IAugmentedShellFolder *operator=;
    struct IAugmentedShellFolder *operator=;
};

typedef struct IAuthenticate {
    struct IUnknown IUnknown;
    HRESULT Authenticate;
    VOID IAuthenticate;
    VOID IAuthenticate;
    VOID IAuthenticate;
    struct IAuthenticate *operator=;
    struct IAuthenticate *operator=;
};

typedef struct IAuthenticateEx {
    struct IAuthenticate IAuthenticate;
    HRESULT AuthenticateEx;
    VOID IAuthenticateEx;
    VOID IAuthenticateEx;
    VOID IAuthenticateEx;
    struct IAuthenticateEx *operator=;
    struct IAuthenticateEx *operator=;
};

typedef struct IAutoComplete {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT Enable;
    VOID IAutoComplete;
    VOID IAutoComplete;
    VOID IAutoComplete;
    struct IAutoComplete *operator=;
    struct IAutoComplete *operator=;
};

typedef struct IAutoComplete2 {
    struct IAutoComplete IAutoComplete;
    HRESULT SetOptions;
    HRESULT GetOptions;
    VOID IAutoComplete2;
    VOID IAutoComplete2;
    VOID IAutoComplete2;
    struct IAutoComplete2 *operator=;
    struct IAutoComplete2 *operator=;
};

typedef struct IAxWinAmbientDispatch {
    struct IDispatch IDispatch;
    HRESULT put_AllowWindowlessActivation;
    HRESULT get_AllowWindowlessActivation;
    HRESULT put_BackColor;
    HRESULT get_BackColor;
    HRESULT put_ForeColor;
    HRESULT get_ForeColor;
    HRESULT put_LocaleID;
    HRESULT get_LocaleID;
    HRESULT put_UserMode;
    HRESULT get_UserMode;
    HRESULT put_DisplayAsDefault;
    HRESULT get_DisplayAsDefault;
    HRESULT put_Font;
    HRESULT get_Font;
    HRESULT put_MessageReflect;
    HRESULT get_MessageReflect;
    HRESULT get_ShowGrabHandles;
    HRESULT get_ShowHatching;
    HRESULT put_DocHostFlags;
    HRESULT get_DocHostFlags;
    HRESULT put_DocHostDoubleClickFlags;
    HRESULT get_DocHostDoubleClickFlags;
    HRESULT put_AllowContextMenu;
    HRESULT get_AllowContextMenu;
    HRESULT put_AllowShowUI;
    HRESULT get_AllowShowUI;
    HRESULT put_OptionKeyPath;
    HRESULT get_OptionKeyPath;
    VOID IAxWinAmbientDispatch;
    VOID IAxWinAmbientDispatch;
    VOID IAxWinAmbientDispatch;
    struct IAxWinAmbientDispatch *operator=;
    struct IAxWinAmbientDispatch *operator=;
};

typedef struct IAxWinHostWindow {
    struct IUnknown IUnknown;
    HRESULT CreateControl;
    HRESULT CreateControlEx;
    HRESULT AttachControl;
    HRESULT QueryControl;
    HRESULT SetExternalDispatch;
    HRESULT SetExternalUIHandler;
    VOID IAxWinHostWindow;
    VOID IAxWinHostWindow;
    VOID IAxWinHostWindow;
    struct IAxWinHostWindow *operator=;
    struct IAxWinHostWindow *operator=;
};

typedef struct IBandSite {
    struct IUnknown IUnknown;
    HRESULT AddBand;
    HRESULT EnumBands;
    HRESULT QueryBand;
    HRESULT SetBandState;
    HRESULT RemoveBand;
    HRESULT GetBandObject;
    HRESULT SetBandSiteInfo;
    HRESULT GetBandSiteInfo;
    VOID IBandSite;
    VOID IBandSite;
    VOID IBandSite;
    struct IBandSite *operator=;
    struct IBandSite *operator=;
};

typedef struct IBindCallbackRedirect {
    struct IUnknown IUnknown;
    HRESULT Redirect;
    VOID IBindCallbackRedirect;
    VOID IBindCallbackRedirect;
    VOID IBindCallbackRedirect;
    struct IBindCallbackRedirect *operator=;
    struct IBindCallbackRedirect *operator=;
};

typedef struct IBindCtx {
    struct IUnknown IUnknown;
    HRESULT RegisterObjectBound;
    HRESULT RevokeObjectBound;
    HRESULT ReleaseBoundObjects;
    HRESULT SetBindOptions;
    HRESULT GetBindOptions;
    HRESULT GetRunningObjectTable;
    HRESULT RegisterObjectParam;
    HRESULT GetObjectParam;
    HRESULT EnumObjectParam;
    HRESULT RevokeObjectParam;
    VOID IBindCtx;
    VOID IBindCtx;
    VOID IBindCtx;
    struct IBindCtx *operator=;
    struct IBindCtx *operator=;
};

typedef struct IBindHost {
    struct IUnknown IUnknown;
    HRESULT CreateMoniker;
    HRESULT MonikerBindToStorage;
    HRESULT MonikerBindToObject;
    VOID IBindHost;
    VOID IBindHost;
    VOID IBindHost;
    struct IBindHost *operator=;
    struct IBindHost *operator=;
};

typedef struct IBindHttpSecurity {
    struct IUnknown IUnknown;
    HRESULT GetIgnoreCertMask;
    VOID IBindHttpSecurity;
    VOID IBindHttpSecurity;
    VOID IBindHttpSecurity;
    struct IBindHttpSecurity *operator=;
    struct IBindHttpSecurity *operator=;
};

typedef struct IBindProtocol {
    struct IUnknown IUnknown;
    HRESULT CreateBinding;
    VOID IBindProtocol;
    VOID IBindProtocol;
    VOID IBindProtocol;
    struct IBindProtocol *operator=;
    struct IBindProtocol *operator=;
};

typedef struct IBindStatusCallback {
    struct IUnknown IUnknown;
    HRESULT OnStartBinding;
    HRESULT GetPriority;
    HRESULT OnLowResource;
    HRESULT OnProgress;
    HRESULT OnStopBinding;
    HRESULT GetBindInfo;
    HRESULT OnDataAvailable;
    HRESULT OnObjectAvailable;
    VOID IBindStatusCallback;
    VOID IBindStatusCallback;
    VOID IBindStatusCallback;
    struct IBindStatusCallback *operator=;
    struct IBindStatusCallback *operator=;
};

typedef struct IBindStatusCallbackEx {
    struct IBindStatusCallback IBindStatusCallback;
    HRESULT GetBindInfoEx;
    VOID IBindStatusCallbackEx;
    VOID IBindStatusCallbackEx;
    VOID IBindStatusCallbackEx;
    struct IBindStatusCallbackEx *operator=;
    struct IBindStatusCallbackEx *operator=;
};

typedef struct IBinding {
    struct IUnknown IUnknown;
    HRESULT Abort;
    HRESULT Suspend;
    HRESULT Resume;
    HRESULT SetPriority;
    HRESULT GetPriority;
    HRESULT GetBindResult;
    VOID IBinding;
    VOID IBinding;
    VOID IBinding;
    struct IBinding *operator=;
    struct IBinding *operator=;
};

typedef struct IBlockingLock {
    struct IUnknown IUnknown;
    HRESULT Lock;
    HRESULT Unlock;
    VOID IBlockingLock;
    VOID IBlockingLock;
    VOID IBlockingLock;
    struct IBlockingLock *operator=;
    struct IBlockingLock *operator=;
};

typedef struct IBrowserFrameOptions {
    struct IUnknown IUnknown;
    HRESULT GetFrameOptions;
    VOID IBrowserFrameOptions;
    VOID IBrowserFrameOptions;
    VOID IBrowserFrameOptions;
    struct IBrowserFrameOptions *operator=;
    struct IBrowserFrameOptions *operator=;
};

typedef struct ICallFactory {
    struct IUnknown IUnknown;
    HRESULT CreateCall;
    VOID ICallFactory;
    VOID ICallFactory;
    VOID ICallFactory;
    struct ICallFactory *operator=;
    struct ICallFactory *operator=;
};

typedef struct ICancelMethodCalls {
    struct IUnknown IUnknown;
    HRESULT Cancel;
    HRESULT TestCancel;
    VOID ICancelMethodCalls;
    VOID ICancelMethodCalls;
    VOID ICancelMethodCalls;
    struct ICancelMethodCalls *operator=;
    struct ICancelMethodCalls *operator=;
};

typedef struct ICatInformation {
    struct IUnknown IUnknown;
    HRESULT EnumCategories;
    HRESULT GetCategoryDesc;
    HRESULT EnumClassesOfCategories;
    HRESULT IsClassOfCategories;
    HRESULT EnumImplCategoriesOfClass;
    HRESULT EnumReqCategoriesOfClass;
    VOID ICatInformation;
    VOID ICatInformation;
    VOID ICatInformation;
    struct ICatInformation *operator=;
    struct ICatInformation *operator=;
};

typedef struct ICatRegister {
    struct IUnknown IUnknown;
    HRESULT RegisterCategories;
    HRESULT UnRegisterCategories;
    HRESULT RegisterClassImplCategories;
    HRESULT UnRegisterClassImplCategories;
    HRESULT RegisterClassReqCategories;
    HRESULT UnRegisterClassReqCategories;
    VOID ICatRegister;
    VOID ICatRegister;
    VOID ICatRegister;
    struct ICatRegister *operator=;
    struct ICatRegister *operator=;
};

typedef struct ICatalogFileInfo {
    struct IUnknown IUnknown;
    HRESULT GetCatalogFile;
    HRESULT GetJavaTrust;
    VOID ICatalogFileInfo;
    VOID ICatalogFileInfo;
    VOID ICatalogFileInfo;
    struct ICatalogFileInfo *operator=;
    struct ICatalogFileInfo *operator=;
};

typedef struct ICategorizer {
    struct IUnknown IUnknown;
    HRESULT GetDescription;
    HRESULT GetCategory;
    HRESULT GetCategoryInfo;
    HRESULT CompareCategory;
    VOID ICategorizer;
    VOID ICategorizer;
    VOID ICategorizer;
    struct ICategorizer *operator=;
    struct ICategorizer *operator=;
};

typedef struct ICategoryProvider {
    struct IUnknown IUnknown;
    HRESULT CanCategorizeOnSCID;
    HRESULT GetDefaultCategory;
    HRESULT GetCategoryForSCID;
    HRESULT EnumCategories;
    HRESULT GetCategoryName;
    HRESULT CreateCategory;
    VOID ICategoryProvider;
    VOID ICategoryProvider;
    VOID ICategoryProvider;
    struct ICategoryProvider *operator=;
    struct ICategoryProvider *operator=;
};

typedef struct IChannelHook {
    struct IUnknown IUnknown;
    VOID ClientGetSize;
    VOID ClientFillBuffer;
    VOID ClientNotify;
    VOID ServerNotify;
    VOID ServerGetSize;
    VOID ServerFillBuffer;
    VOID IChannelHook;
    VOID IChannelHook;
    VOID IChannelHook;
    struct IChannelHook *operator=;
    struct IChannelHook *operator=;
};

typedef struct IClassActivator {
    struct IUnknown IUnknown;
    HRESULT GetClassObject;
    VOID IClassActivator;
    VOID IClassActivator;
    VOID IClassActivator;
    struct IClassActivator *operator=;
    struct IClassActivator *operator=;
};

typedef struct IClassFactory {
    struct IUnknown IUnknown;
    HRESULT CreateInstance;
    HRESULT LockServer;
    VOID IClassFactory;
    VOID IClassFactory;
    VOID IClassFactory;
    struct IClassFactory *operator=;
    struct IClassFactory *operator=;
};

typedef struct IClassFactory2 {
    struct IClassFactory IClassFactory;
    HRESULT GetLicInfo;
    HRESULT RequestLicKey;
    HRESULT CreateInstanceLic;
    VOID IClassFactory2;
    VOID IClassFactory2;
    VOID IClassFactory2;
    struct IClassFactory2 *operator=;
    struct IClassFactory2 *operator=;
};

typedef struct IClientSecurity {
    struct IUnknown IUnknown;
    HRESULT QueryBlanket;
    HRESULT SetBlanket;
    HRESULT CopyProxy;
    VOID IClientSecurity;
    VOID IClientSecurity;
    VOID IClientSecurity;
    struct IClientSecurity *operator=;
    struct IClientSecurity *operator=;
};

typedef struct ICodeInstall {
    struct IWindowForBindingUI IWindowForBindingUI;
    HRESULT OnCodeInstallProblem;
    VOID ICodeInstall;
    VOID ICodeInstall;
    VOID ICodeInstall;
    struct ICodeInstall *operator=;
    struct ICodeInstall *operator=;
};

typedef struct IColumnManager {
    struct IUnknown IUnknown;
    HRESULT SetColumnInfo;
    HRESULT GetColumnInfo;
    HRESULT GetColumnCount;
    HRESULT GetColumns;
    HRESULT SetColumns;
    VOID IColumnManager;
    VOID IColumnManager;
    VOID IColumnManager;
    struct IColumnManager *operator=;
    struct IColumnManager *operator=;
};

typedef struct IComThreadingInfo {
    struct IUnknown IUnknown;
    HRESULT GetCurrentApartmentType;
    HRESULT GetCurrentThreadType;
    HRESULT GetCurrentLogicalThreadId;
    HRESULT SetCurrentLogicalThreadId;
    VOID IComThreadingInfo;
    VOID IComThreadingInfo;
    VOID IComThreadingInfo;
    struct IComThreadingInfo *operator=;
    struct IComThreadingInfo *operator=;
};

typedef struct ICommDlgBrowser {
    struct IUnknown IUnknown;
    HRESULT OnDefaultCommand;
    HRESULT OnStateChange;
    HRESULT IncludeObject;
    VOID ICommDlgBrowser;
    VOID ICommDlgBrowser;
    VOID ICommDlgBrowser;
    struct ICommDlgBrowser *operator=;
    struct ICommDlgBrowser *operator=;
};

typedef struct ICommDlgBrowser2 {
    struct ICommDlgBrowser ICommDlgBrowser;
    HRESULT Notify;
    HRESULT GetDefaultMenuText;
    HRESULT GetViewFlags;
    VOID ICommDlgBrowser2;
    VOID ICommDlgBrowser2;
    VOID ICommDlgBrowser2;
    struct ICommDlgBrowser2 *operator=;
    struct ICommDlgBrowser2 *operator=;
};

typedef struct ICondition {
    struct IPersistStream IPersistStream;
    HRESULT GetConditionType;
    HRESULT GetSubConditions;
    HRESULT GetComparisonInfo;
    HRESULT GetValueType;
    HRESULT GetValueNormalization;
    HRESULT GetInputTerms;
    HRESULT Clone;
    VOID ICondition;
    VOID ICondition;
    VOID ICondition;
    struct ICondition *operator=;
    struct ICondition *operator=;
};

typedef struct ICondition2 {
    struct ICondition ICondition;
    HRESULT GetLocale;
    HRESULT GetLeafConditionInfo;
    VOID ICondition2;
    VOID ICondition2;
    VOID ICondition2;
    struct ICondition2 *operator=;
    struct ICondition2 *operator=;
};

typedef struct IConnectionPoint {
    struct IUnknown IUnknown;
    HRESULT GetConnectionInterface;
    HRESULT GetConnectionPointContainer;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumConnections;
    VOID IConnectionPoint;
    VOID IConnectionPoint;
    VOID IConnectionPoint;
    struct IConnectionPoint *operator=;
    struct IConnectionPoint *operator=;
};

typedef struct IConnectionPointContainer {
    struct IUnknown IUnknown;
    HRESULT EnumConnectionPoints;
    HRESULT FindConnectionPoint;
    VOID IConnectionPointContainer;
    VOID IConnectionPointContainer;
    VOID IConnectionPointContainer;
    struct IConnectionPointContainer *operator=;
    struct IConnectionPointContainer *operator=;
};

typedef struct IContactManagerInterop {
    struct IUnknown IUnknown;
    HRESULT ShowContactCardForWindow;
    VOID IContactManagerInterop;
    VOID IContactManagerInterop;
    VOID IContactManagerInterop;
    struct IContactManagerInterop *operator=;
    struct IContactManagerInterop *operator=;
};

typedef struct IContentSnippetBuilder {
    struct IUnknown IUnknown;
    HRESULT SetText;
    HRESULT AddLocaleChunk;
    HRESULT BuildContentSnippetProperty;
    VOID IContentSnippetBuilder;
    VOID IContentSnippetBuilder;
    VOID IContentSnippetBuilder;
    struct IContentSnippetBuilder *operator=;
    struct IContentSnippetBuilder *operator=;
};

typedef struct IContextMenu {
    struct IUnknown IUnknown;
    HRESULT QueryContextMenu;
    HRESULT InvokeCommand;
    HRESULT GetCommandString;
    VOID IContextMenu;
    VOID IContextMenu;
    VOID IContextMenu;
    struct IContextMenu *operator=;
    struct IContextMenu *operator=;
};

typedef struct IContextMenu2 {
    struct IContextMenu IContextMenu;
    HRESULT HandleMenuMsg;
    VOID IContextMenu2;
    VOID IContextMenu2;
    VOID IContextMenu2;
    struct IContextMenu2 *operator=;
    struct IContextMenu2 *operator=;
};

typedef struct IContextMenu3 {
    struct IContextMenu2 IContextMenu2;
    HRESULT HandleMenuMsg2;
    VOID IContextMenu3;
    VOID IContextMenu3;
    VOID IContextMenu3;
    struct IContextMenu3 *operator=;
    struct IContextMenu3 *operator=;
};

typedef struct IContextMenuCB {
    struct IUnknown IUnknown;
    HRESULT CallBack;
    VOID IContextMenuCB;
    VOID IContextMenuCB;
    VOID IContextMenuCB;
    struct IContextMenuCB *operator=;
    struct IContextMenuCB *operator=;
};

typedef struct IContextMenuSite {
    struct IUnknown IUnknown;
    HRESULT DoContextMenuPopup;
    VOID IContextMenuSite;
    VOID IContextMenuSite;
    VOID IContextMenuSite;
    struct IContextMenuSite *operator=;
    struct IContextMenuSite *operator=;
};

typedef struct IContinue {
    struct IUnknown IUnknown;
    HRESULT FContinue;
    VOID IContinue;
    VOID IContinue;
    VOID IContinue;
    struct IContinue *operator=;
    struct IContinue *operator=;
};

typedef struct IContinueCallback {
    struct IUnknown IUnknown;
    HRESULT FContinue;
    HRESULT FContinuePrinting;
    VOID IContinueCallback;
    VOID IContinueCallback;
    VOID IContinueCallback;
    struct IContinueCallback *operator=;
    struct IContinueCallback *operator=;
};

typedef struct ICreateErrorInfo {
    struct IUnknown IUnknown;
    HRESULT SetGUID;
    HRESULT SetSource;
    HRESULT SetDescription;
    HRESULT SetHelpFile;
    HRESULT SetHelpContext;
    VOID ICreateErrorInfo;
    VOID ICreateErrorInfo;
    VOID ICreateErrorInfo;
    struct ICreateErrorInfo *operator=;
    struct ICreateErrorInfo *operator=;
};

typedef struct ICreateObject {
    struct IUnknown IUnknown;
    HRESULT CreateObject;
    VOID ICreateObject;
    VOID ICreateObject;
    VOID ICreateObject;
    struct ICreateObject *operator=;
    struct ICreateObject *operator=;
};

typedef struct ICreateObjectEx {
    struct IUnknown IUnknown;
    HRESULT CreateObjectEx;
    VOID ICreateObjectEx;
    VOID ICreateObjectEx;
    VOID ICreateObjectEx;
    struct ICreateObjectEx *operator=;
    struct ICreateObjectEx *operator=;
};

typedef struct ICreateProcessInputs {
    struct IUnknown IUnknown;
    HRESULT GetCreateFlags;
    HRESULT SetCreateFlags;
    HRESULT AddCreateFlags;
    HRESULT SetHotKey;
    HRESULT AddStartupFlags;
    HRESULT SetTitle;
    HRESULT SetEnvironmentVariableW;
    VOID ICreateProcessInputs;
    VOID ICreateProcessInputs;
    VOID ICreateProcessInputs;
    struct ICreateProcessInputs *operator=;
    struct ICreateProcessInputs *operator=;
};

typedef struct ICreateTypeInfo {
    struct IUnknown IUnknown;
    HRESULT SetGuid;
    HRESULT SetTypeFlags;
    HRESULT SetDocString;
    HRESULT SetHelpContext;
    HRESULT SetVersion;
    HRESULT AddRefTypeInfo;
    HRESULT AddFuncDesc;
    HRESULT AddImplType;
    HRESULT SetImplTypeFlags;
    HRESULT SetAlignment;
    HRESULT SetSchema;
    HRESULT AddVarDesc;
    HRESULT SetFuncAndParamNames;
    HRESULT SetVarName;
    HRESULT SetTypeDescAlias;
    HRESULT DefineFuncAsDllEntry;
    HRESULT SetFuncDocString;
    HRESULT SetVarDocString;
    HRESULT SetFuncHelpContext;
    HRESULT SetVarHelpContext;
    HRESULT SetMops;
    HRESULT SetTypeIdldesc;
    HRESULT LayOut;
    VOID ICreateTypeInfo;
    VOID ICreateTypeInfo;
    VOID ICreateTypeInfo;
    struct ICreateTypeInfo *operator=;
    struct ICreateTypeInfo *operator=;
};

typedef struct ICreateTypeInfo2 {
    struct ICreateTypeInfo ICreateTypeInfo;
    HRESULT DeleteFuncDesc;
    HRESULT DeleteFuncDescByMemId;
    HRESULT DeleteVarDesc;
    HRESULT DeleteVarDescByMemId;
    HRESULT DeleteImplType;
    HRESULT SetCustData;
    HRESULT SetFuncCustData;
    HRESULT SetParamCustData;
    HRESULT SetVarCustData;
    HRESULT SetImplTypeCustData;
    HRESULT SetHelpStringContext;
    HRESULT SetFuncHelpStringContext;
    HRESULT SetVarHelpStringContext;
    HRESULT Invalidate;
    HRESULT SetName;
    VOID ICreateTypeInfo2;
    VOID ICreateTypeInfo2;
    VOID ICreateTypeInfo2;
    struct ICreateTypeInfo2 *operator=;
    struct ICreateTypeInfo2 *operator=;
};

typedef struct ICreateTypeLib {
    struct IUnknown IUnknown;
    HRESULT CreateTypeInfo;
    HRESULT SetName;
    HRESULT SetVersion;
    HRESULT SetGuid;
    HRESULT SetDocString;
    HRESULT SetHelpFileName;
    HRESULT SetHelpContext;
    HRESULT SetLcid;
    HRESULT SetLibFlags;
    HRESULT SaveAllChanges;
    VOID ICreateTypeLib;
    VOID ICreateTypeLib;
    VOID ICreateTypeLib;
    struct ICreateTypeLib *operator=;
    struct ICreateTypeLib *operator=;
};

typedef struct ICreateTypeLib2 {
    struct ICreateTypeLib ICreateTypeLib;
    HRESULT DeleteTypeInfo;
    HRESULT SetCustData;
    HRESULT SetHelpStringContext;
    HRESULT SetHelpStringDll;
    VOID ICreateTypeLib2;
    VOID ICreateTypeLib2;
    VOID ICreateTypeLib2;
    struct ICreateTypeLib2 *operator=;
    struct ICreateTypeLib2 *operator=;
};

typedef struct ICreatingProcess {
    struct IUnknown IUnknown;
    HRESULT OnCreating;
    VOID ICreatingProcess;
    VOID ICreatingProcess;
    VOID ICreatingProcess;
    struct ICreatingProcess *operator=;
    struct ICreatingProcess *operator=;
};

typedef struct ICurrentItem {
    struct IRelatedItem IRelatedItem;
    VOID ICurrentItem;
    VOID ICurrentItem;
    VOID ICurrentItem;
    struct ICurrentItem *operator=;
    struct ICurrentItem *operator=;
};

typedef struct ICustomDestinationList {
    struct IUnknown IUnknown;
    HRESULT SetAppID;
    HRESULT BeginList;
    HRESULT AppendCategory;
    HRESULT AppendKnownCategory;
    HRESULT AddUserTasks;
    HRESULT CommitList;
    HRESULT GetRemovedDestinations;
    HRESULT DeleteList;
    HRESULT AbortList;
    VOID ICustomDestinationList;
    VOID ICustomDestinationList;
    VOID ICustomDestinationList;
    struct ICustomDestinationList *operator=;
    struct ICustomDestinationList *operator=;
};

typedef struct ICustomDrawing {
Error: Could not get member name.
    LONG <unnamed-enum-SIGVALUE>;
    VOID ICustomDrawing;
    VOID ICustomDrawing;
    VOID ~ICustomDrawing;
    ULONG dwSignature;
    HRESULT GetRect;
    HRESULT OnNcPaint;
    HRESULT OnNcHitTest;
    HRESULT OnNcMouseEvent;
    HRESULT OnSizeMoveEvent;
    HRESULT OnGetObject;
    HRESULT OnCaptionFontChanged;
    VOID OnNcHooks;
    PLONG64 GetWndProc;
    struct ICustomDrawing *operator=;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct IDataAdviseHolder {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT SendOnDataChange;
    VOID IDataAdviseHolder;
    VOID IDataAdviseHolder;
    VOID IDataAdviseHolder;
    struct IDataAdviseHolder *operator=;
    struct IDataAdviseHolder *operator=;
};

typedef struct IDataFilter {
    struct IUnknown IUnknown;
    HRESULT DoEncode;
    HRESULT DoDecode;
    HRESULT SetEncodingLevel;
    VOID IDataFilter;
    VOID IDataFilter;
    VOID IDataFilter;
    struct IDataFilter *operator=;
    struct IDataFilter *operator=;
};

typedef struct IDataObject {
    struct IUnknown IUnknown;
    HRESULT GetData;
    HRESULT GetDataHere;
    HRESULT QueryGetData;
    HRESULT GetCanonicalFormatEtc;
    HRESULT SetData;
    HRESULT EnumFormatEtc;
    HRESULT DAdvise;
    HRESULT DUnadvise;
    HRESULT EnumDAdvise;
    VOID IDataObject;
    VOID IDataObject;
    VOID IDataObject;
    struct IDataObject *operator=;
    struct IDataObject *operator=;
};

typedef struct IDataObjectAsyncCapability {
    struct IUnknown IUnknown;
    HRESULT SetAsyncMode;
    HRESULT GetAsyncMode;
    HRESULT StartOperation;
    HRESULT InOperation;
    HRESULT EndOperation;
    VOID IDataObjectAsyncCapability;
    VOID IDataObjectAsyncCapability;
    VOID IDataObjectAsyncCapability;
    struct IDataObjectAsyncCapability *operator=;
    struct IDataObjectAsyncCapability *operator=;
};

typedef struct IDataObjectProvider {
    struct IUnknown IUnknown;
    HRESULT GetDataObject;
    HRESULT SetDataObject;
    VOID IDataObjectProvider;
    VOID IDataObjectProvider;
    VOID IDataObjectProvider;
    struct IDataObjectProvider *operator=;
    struct IDataObjectProvider *operator=;
};

typedef struct IDataTransferManagerInterop {
    struct IUnknown IUnknown;
    HRESULT GetForWindow;
    HRESULT ShowShareUIForWindow;
    VOID IDataTransferManagerInterop;
    VOID IDataTransferManagerInterop;
    VOID IDataTransferManagerInterop;
    struct IDataTransferManagerInterop *operator=;
    struct IDataTransferManagerInterop *operator=;
};

typedef struct IDefaultExtractIconInit {
    struct IUnknown IUnknown;
    HRESULT SetFlags;
    HRESULT SetKey;
    HRESULT SetNormalIcon;
    HRESULT SetOpenIcon;
    HRESULT SetShortcutIcon;
    HRESULT SetDefaultIcon;
    VOID IDefaultExtractIconInit;
    VOID IDefaultExtractIconInit;
    VOID IDefaultExtractIconInit;
    struct IDefaultExtractIconInit *operator=;
    struct IDefaultExtractIconInit *operator=;
};

typedef struct IDefaultFolderMenuInitialize {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT SetMenuRestrictions;
    HRESULT GetMenuRestrictions;
    HRESULT SetHandlerClsid;
    VOID IDefaultFolderMenuInitialize;
    VOID IDefaultFolderMenuInitialize;
    VOID IDefaultFolderMenuInitialize;
    struct IDefaultFolderMenuInitialize *operator=;
    struct IDefaultFolderMenuInitialize *operator=;
};

typedef struct IDelayedPropertyStoreFactory {
    struct IPropertyStoreFactory IPropertyStoreFactory;
    HRESULT GetDelayedPropertyStore;
    VOID IDelayedPropertyStoreFactory;
    VOID IDelayedPropertyStoreFactory;
    VOID IDelayedPropertyStoreFactory;
    struct IDelayedPropertyStoreFactory *operator=;
    struct IDelayedPropertyStoreFactory *operator=;
};

typedef struct IDelegateFolder {
    struct IUnknown IUnknown;
    HRESULT SetItemAlloc;
    VOID IDelegateFolder;
    VOID IDelegateFolder;
    VOID IDelegateFolder;
    struct IDelegateFolder *operator=;
    struct IDelegateFolder *operator=;
};

typedef struct IDelegateItem {
    struct IRelatedItem IRelatedItem;
    VOID IDelegateItem;
    VOID IDelegateItem;
    VOID IDelegateItem;
    struct IDelegateItem *operator=;
    struct IDelegateItem *operator=;
};

typedef struct IDeskBand {
    struct IDockingWindow IDockingWindow;
    HRESULT GetBandInfo;
    VOID IDeskBand;
    VOID IDeskBand;
    VOID IDeskBand;
    struct IDeskBand *operator=;
    struct IDeskBand *operator=;
};

typedef struct IDeskBandInfo {
    struct IUnknown IUnknown;
    HRESULT GetDefaultBandWidth;
    VOID IDeskBandInfo;
    VOID IDeskBandInfo;
    VOID IDeskBandInfo;
    struct IDeskBandInfo *operator=;
    struct IDeskBandInfo *operator=;
};

typedef struct IDeskBar {
    struct IOleWindow IOleWindow;
    HRESULT SetClient;
    HRESULT GetClient;
    HRESULT OnPosRectChangeDB;
    VOID IDeskBar;
    VOID IDeskBar;
    VOID IDeskBar;
    struct IDeskBar *operator=;
    struct IDeskBar *operator=;
};

typedef struct IDesktopWallpaper {
    struct IUnknown IUnknown;
    HRESULT SetWallpaper;
    HRESULT GetWallpaper;
    HRESULT GetMonitorDevicePathAt;
    HRESULT GetMonitorDevicePathCount;
    HRESULT GetMonitorRECT;
    HRESULT SetBackgroundColor;
    HRESULT GetBackgroundColor;
    HRESULT SetPosition;
    HRESULT GetPosition;
    HRESULT SetSlideshow;
    HRESULT GetSlideshow;
    HRESULT SetSlideshowOptions;
    HRESULT GetSlideshowOptions;
    HRESULT AdvanceSlideshow;
    HRESULT GetStatus;
    HRESULT Enable;
    VOID IDesktopWallpaper;
    VOID IDesktopWallpaper;
    VOID IDesktopWallpaper;
    struct IDesktopWallpaper *operator=;
    struct IDesktopWallpaper *operator=;
};

typedef struct IDestinationStreamFactory {
    struct IUnknown IUnknown;
    HRESULT GetDestinationStream;
    VOID IDestinationStreamFactory;
    VOID IDestinationStreamFactory;
    VOID IDestinationStreamFactory;
    struct IDestinationStreamFactory *operator=;
    struct IDestinationStreamFactory *operator=;
};

typedef struct IDirect3D9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT RegisterSoftwareDevice;
    ULONG GetAdapterCount;
    HRESULT GetAdapterIdentifier;
    ULONG GetAdapterModeCount;
    HRESULT EnumAdapterModes;
    HRESULT GetAdapterDisplayMode;
    HRESULT CheckDeviceType;
    HRESULT CheckDeviceFormat;
    HRESULT CheckDeviceMultiSampleType;
    HRESULT CheckDepthStencilMatch;
    HRESULT CheckDeviceFormatConversion;
    HRESULT GetDeviceCaps;
    struct HMONITOR__ *GetAdapterMonitor;
    HRESULT CreateDevice;
    VOID IDirect3D9;
    VOID IDirect3D9;
    VOID IDirect3D9;
    struct IDirect3D9 *operator=;
    struct IDirect3D9 *operator=;
};

typedef struct IDirect3D9Ex {
    struct IDirect3D9 IDirect3D9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT RegisterSoftwareDevice;
    ULONG GetAdapterCount;
    HRESULT GetAdapterIdentifier;
    ULONG GetAdapterModeCount;
    HRESULT EnumAdapterModes;
    HRESULT GetAdapterDisplayMode;
    HRESULT CheckDeviceType;
    HRESULT CheckDeviceFormat;
    HRESULT CheckDeviceMultiSampleType;
    HRESULT CheckDepthStencilMatch;
    HRESULT CheckDeviceFormatConversion;
    HRESULT GetDeviceCaps;
    struct HMONITOR__ *GetAdapterMonitor;
    HRESULT CreateDevice;
    ULONG GetAdapterModeCountEx;
    HRESULT EnumAdapterModesEx;
    HRESULT GetAdapterDisplayModeEx;
    HRESULT CreateDeviceEx;
    HRESULT GetAdapterLUID;
    VOID IDirect3D9Ex;
    VOID IDirect3D9Ex;
    VOID IDirect3D9Ex;
    struct IDirect3D9Ex *operator=;
    struct IDirect3D9Ex *operator=;
};

typedef struct IDirect3D9ExOverlayExtension {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT CheckDeviceOverlayType;
    VOID IDirect3D9ExOverlayExtension;
    VOID IDirect3D9ExOverlayExtension;
    VOID IDirect3D9ExOverlayExtension;
    struct IDirect3D9ExOverlayExtension *operator=;
    struct IDirect3D9ExOverlayExtension *operator=;
};

typedef struct IDirect3DAuthenticatedChannel9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetCertificateSize;
    HRESULT GetCertificate;
    HRESULT NegotiateKeyExchange;
    HRESULT Query;
    HRESULT Configure;
    VOID IDirect3DAuthenticatedChannel9;
    VOID IDirect3DAuthenticatedChannel9;
    VOID IDirect3DAuthenticatedChannel9;
    struct IDirect3DAuthenticatedChannel9 *operator=;
    struct IDirect3DAuthenticatedChannel9 *operator=;
};

typedef struct IDirect3DBaseTexture9 {
    struct IDirect3DResource9 IDirect3DResource9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    ULONG SetLOD;
    ULONG GetLOD;
    ULONG GetLevelCount;
    HRESULT SetAutoGenFilterType;
    enum _D3DTEXTUREFILTERTYPE GetAutoGenFilterType;
    VOID GenerateMipSubLevels;
    VOID IDirect3DBaseTexture9;
    VOID IDirect3DBaseTexture9;
    VOID IDirect3DBaseTexture9;
    struct IDirect3DBaseTexture9 *operator=;
    struct IDirect3DBaseTexture9 *operator=;
};

typedef struct IDirect3DCryptoSession9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetCertificateSize;
    HRESULT GetCertificate;
    HRESULT NegotiateKeyExchange;
    HRESULT EncryptionBlt;
    HRESULT DecryptionBlt;
    HRESULT GetSurfacePitch;
    HRESULT StartSessionKeyRefresh;
    HRESULT FinishSessionKeyRefresh;
    HRESULT GetEncryptionBltKey;
    VOID IDirect3DCryptoSession9;
    VOID IDirect3DCryptoSession9;
    VOID IDirect3DCryptoSession9;
    struct IDirect3DCryptoSession9 *operator=;
    struct IDirect3DCryptoSession9 *operator=;
};

typedef struct IDirect3DCubeTexture9 {
    struct IDirect3DBaseTexture9 IDirect3DBaseTexture9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    ULONG SetLOD;
    ULONG GetLOD;
    ULONG GetLevelCount;
    HRESULT SetAutoGenFilterType;
    enum _D3DTEXTUREFILTERTYPE GetAutoGenFilterType;
    VOID GenerateMipSubLevels;
    HRESULT GetLevelDesc;
    HRESULT GetCubeMapSurface;
    HRESULT LockRect;
    HRESULT UnlockRect;
    HRESULT AddDirtyRect;
    VOID IDirect3DCubeTexture9;
    VOID IDirect3DCubeTexture9;
    VOID IDirect3DCubeTexture9;
    struct IDirect3DCubeTexture9 *operator=;
    struct IDirect3DCubeTexture9 *operator=;
};

typedef struct IDirect3DDevice9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT TestCooperativeLevel;
    ULONG GetAvailableTextureMem;
    HRESULT EvictManagedResources;
    HRESULT GetDirect3D;
    HRESULT GetDeviceCaps;
    HRESULT GetDisplayMode;
    HRESULT GetCreationParameters;
    HRESULT SetCursorProperties;
    VOID SetCursorPosition;
    LONG ShowCursor;
    HRESULT CreateAdditionalSwapChain;
    HRESULT GetSwapChain;
    ULONG GetNumberOfSwapChains;
    HRESULT Reset;
    HRESULT Present;
    HRESULT GetBackBuffer;
    HRESULT GetRasterStatus;
    HRESULT SetDialogBoxMode;
    VOID SetGammaRamp;
    VOID GetGammaRamp;
    HRESULT CreateTexture;
    HRESULT CreateVolumeTexture;
    HRESULT CreateCubeTexture;
    HRESULT CreateVertexBuffer;
    HRESULT CreateIndexBuffer;
    HRESULT CreateRenderTarget;
    HRESULT CreateDepthStencilSurface;
    HRESULT UpdateSurface;
    HRESULT UpdateTexture;
    HRESULT GetRenderTargetData;
    HRESULT GetFrontBufferData;
    HRESULT StretchRect;
    HRESULT ColorFill;
    HRESULT CreateOffscreenPlainSurface;
    HRESULT SetRenderTarget;
    HRESULT GetRenderTarget;
    HRESULT SetDepthStencilSurface;
    HRESULT GetDepthStencilSurface;
    HRESULT BeginScene;
    HRESULT EndScene;
    HRESULT Clear;
    HRESULT SetTransform;
    HRESULT GetTransform;
    HRESULT MultiplyTransform;
    HRESULT SetViewport;
    HRESULT GetViewport;
    HRESULT SetMaterial;
    HRESULT GetMaterial;
    HRESULT SetLight;
    HRESULT GetLight;
    HRESULT LightEnable;
    HRESULT GetLightEnable;
    HRESULT SetClipPlane;
    HRESULT GetClipPlane;
    HRESULT SetRenderState;
    HRESULT GetRenderState;
    HRESULT CreateStateBlock;
    HRESULT BeginStateBlock;
    HRESULT EndStateBlock;
    HRESULT SetClipStatus;
    HRESULT GetClipStatus;
    HRESULT GetTexture;
    HRESULT SetTexture;
    HRESULT GetTextureStageState;
    HRESULT SetTextureStageState;
    HRESULT GetSamplerState;
    HRESULT SetSamplerState;
    HRESULT ValidateDevice;
    HRESULT SetPaletteEntries;
    HRESULT GetPaletteEntries;
    HRESULT SetCurrentTexturePalette;
    HRESULT GetCurrentTexturePalette;
    HRESULT SetScissorRect;
    HRESULT GetScissorRect;
    HRESULT SetSoftwareVertexProcessing;
    LONG GetSoftwareVertexProcessing;
    HRESULT SetNPatchMode;
    FLOAT GetNPatchMode;
    HRESULT DrawPrimitive;
    HRESULT DrawIndexedPrimitive;
    HRESULT DrawPrimitiveUP;
    HRESULT DrawIndexedPrimitiveUP;
    HRESULT ProcessVertices;
    HRESULT CreateVertexDeclaration;
    HRESULT SetVertexDeclaration;
    HRESULT GetVertexDeclaration;
    HRESULT SetFVF;
    HRESULT GetFVF;
    HRESULT CreateVertexShader;
    HRESULT SetVertexShader;
    HRESULT GetVertexShader;
    HRESULT SetVertexShaderConstantF;
    HRESULT GetVertexShaderConstantF;
    HRESULT SetVertexShaderConstantI;
    HRESULT GetVertexShaderConstantI;
    HRESULT SetVertexShaderConstantB;
    HRESULT GetVertexShaderConstantB;
    HRESULT SetStreamSource;
    HRESULT GetStreamSource;
    HRESULT SetStreamSourceFreq;
    HRESULT GetStreamSourceFreq;
    HRESULT SetIndices;
    HRESULT GetIndices;
    HRESULT CreatePixelShader;
    HRESULT SetPixelShader;
    HRESULT GetPixelShader;
    HRESULT SetPixelShaderConstantF;
    HRESULT GetPixelShaderConstantF;
    HRESULT SetPixelShaderConstantI;
    HRESULT GetPixelShaderConstantI;
    HRESULT SetPixelShaderConstantB;
    HRESULT GetPixelShaderConstantB;
    HRESULT DrawRectPatch;
    HRESULT DrawTriPatch;
    HRESULT DeletePatch;
    HRESULT CreateQuery;
    VOID IDirect3DDevice9;
    VOID IDirect3DDevice9;
    VOID IDirect3DDevice9;
    struct IDirect3DDevice9 *operator=;
    struct IDirect3DDevice9 *operator=;
};

typedef struct IDirect3DDevice9Ex {
    struct IDirect3DDevice9 IDirect3DDevice9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT TestCooperativeLevel;
    ULONG GetAvailableTextureMem;
    HRESULT EvictManagedResources;
    HRESULT GetDirect3D;
    HRESULT GetDeviceCaps;
    HRESULT GetDisplayMode;
    HRESULT GetCreationParameters;
    HRESULT SetCursorProperties;
    VOID SetCursorPosition;
    LONG ShowCursor;
    HRESULT CreateAdditionalSwapChain;
    HRESULT GetSwapChain;
    ULONG GetNumberOfSwapChains;
    HRESULT Reset;
    HRESULT Present;
    HRESULT GetBackBuffer;
    HRESULT GetRasterStatus;
    HRESULT SetDialogBoxMode;
    VOID SetGammaRamp;
    VOID GetGammaRamp;
    HRESULT CreateTexture;
    HRESULT CreateVolumeTexture;
    HRESULT CreateCubeTexture;
    HRESULT CreateVertexBuffer;
    HRESULT CreateIndexBuffer;
    HRESULT CreateRenderTarget;
    HRESULT CreateDepthStencilSurface;
    HRESULT UpdateSurface;
    HRESULT UpdateTexture;
    HRESULT GetRenderTargetData;
    HRESULT GetFrontBufferData;
    HRESULT StretchRect;
    HRESULT ColorFill;
    HRESULT CreateOffscreenPlainSurface;
    HRESULT SetRenderTarget;
    HRESULT GetRenderTarget;
    HRESULT SetDepthStencilSurface;
    HRESULT GetDepthStencilSurface;
    HRESULT BeginScene;
    HRESULT EndScene;
    HRESULT Clear;
    HRESULT SetTransform;
    HRESULT GetTransform;
    HRESULT MultiplyTransform;
    HRESULT SetViewport;
    HRESULT GetViewport;
    HRESULT SetMaterial;
    HRESULT GetMaterial;
    HRESULT SetLight;
    HRESULT GetLight;
    HRESULT LightEnable;
    HRESULT GetLightEnable;
    HRESULT SetClipPlane;
    HRESULT GetClipPlane;
    HRESULT SetRenderState;
    HRESULT GetRenderState;
    HRESULT CreateStateBlock;
    HRESULT BeginStateBlock;
    HRESULT EndStateBlock;
    HRESULT SetClipStatus;
    HRESULT GetClipStatus;
    HRESULT GetTexture;
    HRESULT SetTexture;
    HRESULT GetTextureStageState;
    HRESULT SetTextureStageState;
    HRESULT GetSamplerState;
    HRESULT SetSamplerState;
    HRESULT ValidateDevice;
    HRESULT SetPaletteEntries;
    HRESULT GetPaletteEntries;
    HRESULT SetCurrentTexturePalette;
    HRESULT GetCurrentTexturePalette;
    HRESULT SetScissorRect;
    HRESULT GetScissorRect;
    HRESULT SetSoftwareVertexProcessing;
    LONG GetSoftwareVertexProcessing;
    HRESULT SetNPatchMode;
    FLOAT GetNPatchMode;
    HRESULT DrawPrimitive;
    HRESULT DrawIndexedPrimitive;
    HRESULT DrawPrimitiveUP;
    HRESULT DrawIndexedPrimitiveUP;
    HRESULT ProcessVertices;
    HRESULT CreateVertexDeclaration;
    HRESULT SetVertexDeclaration;
    HRESULT GetVertexDeclaration;
    HRESULT SetFVF;
    HRESULT GetFVF;
    HRESULT CreateVertexShader;
    HRESULT SetVertexShader;
    HRESULT GetVertexShader;
    HRESULT SetVertexShaderConstantF;
    HRESULT GetVertexShaderConstantF;
    HRESULT SetVertexShaderConstantI;
    HRESULT GetVertexShaderConstantI;
    HRESULT SetVertexShaderConstantB;
    HRESULT GetVertexShaderConstantB;
    HRESULT SetStreamSource;
    HRESULT GetStreamSource;
    HRESULT SetStreamSourceFreq;
    HRESULT GetStreamSourceFreq;
    HRESULT SetIndices;
    HRESULT GetIndices;
    HRESULT CreatePixelShader;
    HRESULT SetPixelShader;
    HRESULT GetPixelShader;
    HRESULT SetPixelShaderConstantF;
    HRESULT GetPixelShaderConstantF;
    HRESULT SetPixelShaderConstantI;
    HRESULT GetPixelShaderConstantI;
    HRESULT SetPixelShaderConstantB;
    HRESULT GetPixelShaderConstantB;
    HRESULT DrawRectPatch;
    HRESULT DrawTriPatch;
    HRESULT DeletePatch;
    HRESULT CreateQuery;
    HRESULT SetConvolutionMonoKernel;
    HRESULT ComposeRects;
    HRESULT PresentEx;
    HRESULT GetGPUThreadPriority;
    HRESULT SetGPUThreadPriority;
    HRESULT WaitForVBlank;
    HRESULT CheckResourceResidency;
    HRESULT SetMaximumFrameLatency;
    HRESULT GetMaximumFrameLatency;
    HRESULT CheckDeviceState;
    HRESULT CreateRenderTargetEx;
    HRESULT CreateOffscreenPlainSurfaceEx;
    HRESULT CreateDepthStencilSurfaceEx;
    HRESULT ResetEx;
    HRESULT GetDisplayModeEx;
    VOID IDirect3DDevice9Ex;
    VOID IDirect3DDevice9Ex;
    VOID IDirect3DDevice9Ex;
    struct IDirect3DDevice9Ex *operator=;
    struct IDirect3DDevice9Ex *operator=;
};

typedef struct IDirect3DDevice9Video {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetContentProtectionCaps;
    HRESULT CreateAuthenticatedChannel;
    HRESULT CreateCryptoSession;
    VOID IDirect3DDevice9Video;
    VOID IDirect3DDevice9Video;
    VOID IDirect3DDevice9Video;
    struct IDirect3DDevice9Video *operator=;
    struct IDirect3DDevice9Video *operator=;
};

typedef struct IDirect3DIndexBuffer9 {
    struct IDirect3DResource9 IDirect3DResource9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    HRESULT Lock;
    HRESULT Unlock;
    HRESULT GetDesc;
    VOID IDirect3DIndexBuffer9;
    VOID IDirect3DIndexBuffer9;
    VOID IDirect3DIndexBuffer9;
    struct IDirect3DIndexBuffer9 *operator=;
    struct IDirect3DIndexBuffer9 *operator=;
};

typedef struct IDirect3DPixelShader9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT GetFunction;
    VOID IDirect3DPixelShader9;
    VOID IDirect3DPixelShader9;
    VOID IDirect3DPixelShader9;
    struct IDirect3DPixelShader9 *operator=;
    struct IDirect3DPixelShader9 *operator=;
};

typedef struct IDirect3DQuery9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    enum _D3DQUERYTYPE GetType;
    ULONG GetDataSize;
    HRESULT Issue;
    HRESULT GetData;
    VOID IDirect3DQuery9;
    VOID IDirect3DQuery9;
    VOID IDirect3DQuery9;
    struct IDirect3DQuery9 *operator=;
    struct IDirect3DQuery9 *operator=;
};

typedef struct IDirect3DResource9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    VOID IDirect3DResource9;
    VOID IDirect3DResource9;
    VOID IDirect3DResource9;
    struct IDirect3DResource9 *operator=;
    struct IDirect3DResource9 *operator=;
};

typedef struct IDirect3DStateBlock9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT Capture;
    HRESULT Apply;
    VOID IDirect3DStateBlock9;
    VOID IDirect3DStateBlock9;
    VOID IDirect3DStateBlock9;
    struct IDirect3DStateBlock9 *operator=;
    struct IDirect3DStateBlock9 *operator=;
};

typedef struct IDirect3DSurface9 {
    struct IDirect3DResource9 IDirect3DResource9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    HRESULT GetContainer;
    HRESULT GetDesc;
    HRESULT LockRect;
    HRESULT UnlockRect;
    HRESULT GetDC;
    HRESULT ReleaseDC;
    VOID IDirect3DSurface9;
    VOID IDirect3DSurface9;
    VOID IDirect3DSurface9;
    struct IDirect3DSurface9 *operator=;
    struct IDirect3DSurface9 *operator=;
};

typedef struct IDirect3DSwapChain9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT Present;
    HRESULT GetFrontBufferData;
    HRESULT GetBackBuffer;
    HRESULT GetRasterStatus;
    HRESULT GetDisplayMode;
    HRESULT GetDevice;
    HRESULT GetPresentParameters;
    VOID IDirect3DSwapChain9;
    VOID IDirect3DSwapChain9;
    VOID IDirect3DSwapChain9;
    struct IDirect3DSwapChain9 *operator=;
    struct IDirect3DSwapChain9 *operator=;
};

typedef struct IDirect3DSwapChain9Ex {
    struct IDirect3DSwapChain9 IDirect3DSwapChain9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT Present;
    HRESULT GetFrontBufferData;
    HRESULT GetBackBuffer;
    HRESULT GetRasterStatus;
    HRESULT GetDisplayMode;
    HRESULT GetDevice;
    HRESULT GetPresentParameters;
    HRESULT GetLastPresentCount;
    HRESULT GetPresentStats;
    HRESULT GetDisplayModeEx;
    VOID IDirect3DSwapChain9Ex;
    VOID IDirect3DSwapChain9Ex;
    VOID IDirect3DSwapChain9Ex;
    struct IDirect3DSwapChain9Ex *operator=;
    struct IDirect3DSwapChain9Ex *operator=;
};

typedef struct IDirect3DTexture9 {
    struct IDirect3DBaseTexture9 IDirect3DBaseTexture9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    ULONG SetLOD;
    ULONG GetLOD;
    ULONG GetLevelCount;
    HRESULT SetAutoGenFilterType;
    enum _D3DTEXTUREFILTERTYPE GetAutoGenFilterType;
    VOID GenerateMipSubLevels;
    HRESULT GetLevelDesc;
    HRESULT GetSurfaceLevel;
    HRESULT LockRect;
    HRESULT UnlockRect;
    HRESULT AddDirtyRect;
    VOID IDirect3DTexture9;
    VOID IDirect3DTexture9;
    VOID IDirect3DTexture9;
    struct IDirect3DTexture9 *operator=;
    struct IDirect3DTexture9 *operator=;
};

typedef struct IDirect3DVertexBuffer9 {
    struct IDirect3DResource9 IDirect3DResource9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    HRESULT Lock;
    HRESULT Unlock;
    HRESULT GetDesc;
    VOID IDirect3DVertexBuffer9;
    VOID IDirect3DVertexBuffer9;
    VOID IDirect3DVertexBuffer9;
    struct IDirect3DVertexBuffer9 *operator=;
    struct IDirect3DVertexBuffer9 *operator=;
};

typedef struct IDirect3DVertexDeclaration9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT GetDeclaration;
    VOID IDirect3DVertexDeclaration9;
    VOID IDirect3DVertexDeclaration9;
    VOID IDirect3DVertexDeclaration9;
    struct IDirect3DVertexDeclaration9 *operator=;
    struct IDirect3DVertexDeclaration9 *operator=;
};

typedef struct IDirect3DVertexShader9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT GetFunction;
    VOID IDirect3DVertexShader9;
    VOID IDirect3DVertexShader9;
    VOID IDirect3DVertexShader9;
    struct IDirect3DVertexShader9 *operator=;
    struct IDirect3DVertexShader9 *operator=;
};

typedef struct IDirect3DVolume9 {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    HRESULT GetContainer;
    HRESULT GetDesc;
    HRESULT LockBox;
    HRESULT UnlockBox;
    VOID IDirect3DVolume9;
    VOID IDirect3DVolume9;
    VOID IDirect3DVolume9;
    struct IDirect3DVolume9 *operator=;
    struct IDirect3DVolume9 *operator=;
};

typedef struct IDirect3DVolumeTexture9 {
    struct IDirect3DBaseTexture9 IDirect3DBaseTexture9;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetDevice;
    HRESULT SetPrivateData;
    HRESULT GetPrivateData;
    HRESULT FreePrivateData;
    ULONG SetPriority;
    ULONG GetPriority;
    VOID PreLoad;
    enum _D3DRESOURCETYPE GetType;
    ULONG SetLOD;
    ULONG GetLOD;
    ULONG GetLevelCount;
    HRESULT SetAutoGenFilterType;
    enum _D3DTEXTUREFILTERTYPE GetAutoGenFilterType;
    VOID GenerateMipSubLevels;
    HRESULT GetLevelDesc;
    HRESULT GetVolumeLevel;
    HRESULT LockBox;
    HRESULT UnlockBox;
    HRESULT AddDirtyBox;
    VOID IDirect3DVolumeTexture9;
    VOID IDirect3DVolumeTexture9;
    VOID IDirect3DVolumeTexture9;
    struct IDirect3DVolumeTexture9 *operator=;
    struct IDirect3DVolumeTexture9 *operator=;
};

typedef struct IDirectWriterLock {
    struct IUnknown IUnknown;
    HRESULT WaitForWriteAccess;
    HRESULT ReleaseWriteAccess;
    HRESULT HaveWriteAccess;
    VOID IDirectWriterLock;
    VOID IDirectWriterLock;
    VOID IDirectWriterLock;
    struct IDirectWriterLock *operator=;
    struct IDirectWriterLock *operator=;
};

typedef struct IDispatch {
    struct IUnknown IUnknown;
    HRESULT GetTypeInfoCount;
    HRESULT GetTypeInfo;
    HRESULT GetIDsOfNames;
    HRESULT Invoke;
    VOID IDispatch;
    VOID IDispatch;
    VOID IDispatch;
    struct IDispatch *operator=;
    struct IDispatch *operator=;
};

typedef struct IDisplayItem {
    struct IRelatedItem IRelatedItem;
    VOID IDisplayItem;
    VOID IDisplayItem;
    VOID IDisplayItem;
    struct IDisplayItem *operator=;
    struct IDisplayItem *operator=;
};

typedef struct IDocHostUIHandlerDispatch {
    struct IDispatch IDispatch;
    HRESULT ShowContextMenu;
    HRESULT GetHostInfo;
    HRESULT ShowUI;
    HRESULT HideUI;
    HRESULT UpdateUI;
    HRESULT EnableModeless;
    HRESULT OnDocWindowActivate;
    HRESULT OnFrameWindowActivate;
    HRESULT ResizeBorder;
    HRESULT TranslateAcceleratorW;
    HRESULT GetOptionKeyPath;
    HRESULT GetDropTarget;
    HRESULT GetExternal;
    HRESULT TranslateUrl;
    HRESULT FilterDataObject;
    VOID IDocHostUIHandlerDispatch;
    VOID IDocHostUIHandlerDispatch;
    VOID IDocHostUIHandlerDispatch;
    struct IDocHostUIHandlerDispatch *operator=;
    struct IDocHostUIHandlerDispatch *operator=;
};

typedef struct IDockingWindow {
    struct IOleWindow IOleWindow;
    HRESULT ShowDW;
    HRESULT CloseDW;
    HRESULT ResizeBorderDW;
    VOID IDockingWindow;
    VOID IDockingWindow;
    VOID IDockingWindow;
    struct IDockingWindow *operator=;
    struct IDockingWindow *operator=;
};

typedef struct IDockingWindowSite {
    struct IOleWindow IOleWindow;
    HRESULT GetBorderDW;
    HRESULT RequestBorderSpaceDW;
    HRESULT SetBorderSpaceDW;
    VOID IDockingWindowSite;
    VOID IDockingWindowSite;
    VOID IDockingWindowSite;
    struct IDockingWindowSite *operator=;
    struct IDockingWindowSite *operator=;
};

typedef struct IDragSourceHelper {
    struct IUnknown IUnknown;
    HRESULT InitializeFromBitmap;
    HRESULT InitializeFromWindow;
    VOID IDragSourceHelper;
    VOID IDragSourceHelper;
    VOID IDragSourceHelper;
    struct IDragSourceHelper *operator=;
    struct IDragSourceHelper *operator=;
};

typedef struct IDropSource {
    struct IUnknown IUnknown;
    HRESULT QueryContinueDrag;
    HRESULT GiveFeedback;
    VOID IDropSource;
    VOID IDropSource;
    VOID IDropSource;
    struct IDropSource *operator=;
    struct IDropSource *operator=;
};

typedef struct IDropSourceNotify {
    struct IUnknown IUnknown;
    HRESULT DragEnterTarget;
    HRESULT DragLeaveTarget;
    VOID IDropSourceNotify;
    VOID IDropSourceNotify;
    VOID IDropSourceNotify;
    struct IDropSourceNotify *operator=;
    struct IDropSourceNotify *operator=;
};

typedef struct IDropTarget {
    struct IUnknown IUnknown;
    HRESULT DragEnter;
    HRESULT DragOver;
    HRESULT DragLeave;
    HRESULT Drop;
    VOID IDropTarget;
    VOID IDropTarget;
    VOID IDropTarget;
    struct IDropTarget *operator=;
    struct IDropTarget *operator=;
};

typedef struct IDropTargetHelper {
    struct IUnknown IUnknown;
    HRESULT DragEnter;
    HRESULT DragLeave;
    HRESULT DragOver;
    HRESULT Drop;
    HRESULT Show;
    VOID IDropTargetHelper;
    VOID IDropTargetHelper;
    VOID IDropTargetHelper;
    struct IDropTargetHelper *operator=;
    struct IDropTargetHelper *operator=;
};

typedef struct IDummyHICONIncluder {
    struct IUnknown IUnknown;
    HRESULT Dummy;
    VOID IDummyHICONIncluder;
    VOID IDummyHICONIncluder;
    VOID IDummyHICONIncluder;
    struct IDummyHICONIncluder *operator=;
    struct IDummyHICONIncluder *operator=;
};

typedef struct IDwnCodePage {
    struct IUnknown IUnknown;
    ULONG GetCodePage;
    HRESULT SetCodePage;
    VOID IDwnCodePage;
    VOID IDwnCodePage;
    VOID IDwnCodePage;
    struct IDwnCodePage *operator=;
    struct IDwnCodePage *operator=;
};

typedef struct IEncodingFilterFactory {
    struct IUnknown IUnknown;
    HRESULT FindBestFilter;
    HRESULT GetDefaultFilter;
    VOID IEncodingFilterFactory;
    VOID IEncodingFilterFactory;
    VOID IEncodingFilterFactory;
    struct IEncodingFilterFactory *operator=;
    struct IEncodingFilterFactory *operator=;
};

typedef struct IEnforceGrfMode {
    struct IUnknown IUnknown;
    HRESULT EnforceGrfMode;
    VOID IEnforceGrfMode;
    VOID IEnforceGrfMode;
    VOID IEnforceGrfMode;
    struct IEnforceGrfMode *operator=;
    struct IEnforceGrfMode *operator=;
};

typedef struct IEnterpriseDropTarget {
    struct IUnknown IUnknown;
    HRESULT SetDropSourceEnterpriseId;
    HRESULT IsEvaluatingEdpPolicy;
    VOID IEnterpriseDropTarget;
    VOID IEnterpriseDropTarget;
    VOID IEnterpriseDropTarget;
    struct IEnterpriseDropTarget *operator=;
    struct IEnterpriseDropTarget *operator=;
};

typedef struct IEnumACString {
    struct IEnumString IEnumString;
    HRESULT NextItem;
    HRESULT SetEnumOptions;
    HRESULT GetEnumOptions;
    VOID IEnumACString;
    VOID IEnumACString;
    VOID IEnumACString;
    struct IEnumACString *operator=;
    struct IEnumACString *operator=;
};

typedef struct IEnumAssocHandlers {
    struct IUnknown IUnknown;
    HRESULT Next;
    VOID IEnumAssocHandlers;
    VOID IEnumAssocHandlers;
    VOID IEnumAssocHandlers;
    struct IEnumAssocHandlers *operator=;
    struct IEnumAssocHandlers *operator=;
};

typedef struct IEnumCATEGORYINFO {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumCATEGORYINFO;
    VOID IEnumCATEGORYINFO;
    VOID IEnumCATEGORYINFO;
    struct IEnumCATEGORYINFO *operator=;
    struct IEnumCATEGORYINFO *operator=;
};

typedef struct IEnumConnectionPoints {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumConnectionPoints;
    VOID IEnumConnectionPoints;
    VOID IEnumConnectionPoints;
    struct IEnumConnectionPoints *operator=;
    struct IEnumConnectionPoints *operator=;
};

typedef struct IEnumConnections {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumConnections;
    VOID IEnumConnections;
    VOID IEnumConnections;
    struct IEnumConnections *operator=;
    struct IEnumConnections *operator=;
};

typedef struct IEnumExplorerCommand {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumExplorerCommand;
    VOID IEnumExplorerCommand;
    VOID IEnumExplorerCommand;
    struct IEnumExplorerCommand *operator=;
    struct IEnumExplorerCommand *operator=;
};

typedef struct IEnumExtraSearch {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumExtraSearch;
    VOID IEnumExtraSearch;
    VOID IEnumExtraSearch;
    struct IEnumExtraSearch *operator=;
    struct IEnumExtraSearch *operator=;
};

typedef struct IEnumFORMATETC {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumFORMATETC;
    VOID IEnumFORMATETC;
    VOID IEnumFORMATETC;
    struct IEnumFORMATETC *operator=;
    struct IEnumFORMATETC *operator=;
};

typedef struct IEnumFullIDList {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumFullIDList;
    VOID IEnumFullIDList;
    VOID IEnumFullIDList;
    struct IEnumFullIDList *operator=;
    struct IEnumFullIDList *operator=;
};

typedef struct IEnumGUID {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumGUID;
    VOID IEnumGUID;
    VOID IEnumGUID;
    struct IEnumGUID *operator=;
    struct IEnumGUID *operator=;
};

typedef struct IEnumIDList {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumIDList;
    VOID IEnumIDList;
    VOID IEnumIDList;
    struct IEnumIDList *operator=;
    struct IEnumIDList *operator=;
};

typedef struct IEnumMoniker {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumMoniker;
    VOID IEnumMoniker;
    VOID IEnumMoniker;
    struct IEnumMoniker *operator=;
    struct IEnumMoniker *operator=;
};

typedef struct IEnumOLEVERB {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOLEVERB;
    VOID IEnumOLEVERB;
    VOID IEnumOLEVERB;
    struct IEnumOLEVERB *operator=;
    struct IEnumOLEVERB *operator=;
};

typedef struct IEnumObjects {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumObjects;
    VOID IEnumObjects;
    VOID IEnumObjects;
    struct IEnumObjects *operator=;
    struct IEnumObjects *operator=;
};

typedef struct IEnumOleDocumentViews {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOleDocumentViews;
    VOID IEnumOleDocumentViews;
    VOID IEnumOleDocumentViews;
    struct IEnumOleDocumentViews *operator=;
    struct IEnumOleDocumentViews *operator=;
};

typedef struct IEnumOleUndoUnits {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumOleUndoUnits;
    VOID IEnumOleUndoUnits;
    VOID IEnumOleUndoUnits;
    struct IEnumOleUndoUnits *operator=;
    struct IEnumOleUndoUnits *operator=;
};

typedef struct IEnumResources {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumResources;
    VOID IEnumResources;
    VOID IEnumResources;
    struct IEnumResources *operator=;
    struct IEnumResources *operator=;
};

typedef struct IEnumSTATDATA {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATDATA;
    VOID IEnumSTATDATA;
    VOID IEnumSTATDATA;
    struct IEnumSTATDATA *operator=;
    struct IEnumSTATDATA *operator=;
};

typedef struct IEnumSTATPROPSETSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATPROPSETSTG;
    VOID IEnumSTATPROPSETSTG;
    VOID IEnumSTATPROPSETSTG;
    struct IEnumSTATPROPSETSTG *operator=;
    struct IEnumSTATPROPSETSTG *operator=;
};

typedef struct IEnumSTATPROPSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATPROPSTG;
    VOID IEnumSTATPROPSTG;
    VOID IEnumSTATPROPSTG;
    struct IEnumSTATPROPSTG *operator=;
    struct IEnumSTATPROPSTG *operator=;
};

typedef struct IEnumSTATSTG {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumSTATSTG;
    VOID IEnumSTATSTG;
    VOID IEnumSTATSTG;
    struct IEnumSTATSTG *operator=;
    struct IEnumSTATSTG *operator=;
};

typedef struct IEnumShellItems {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumShellItems;
    VOID IEnumShellItems;
    VOID IEnumShellItems;
    struct IEnumShellItems *operator=;
    struct IEnumShellItems *operator=;
};

typedef struct IEnumString {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumString;
    VOID IEnumString;
    VOID IEnumString;
    struct IEnumString *operator=;
    struct IEnumString *operator=;
};

typedef struct IEnumUICommand {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumUICommand;
    VOID IEnumUICommand;
    VOID IEnumUICommand;
    struct IEnumUICommand *operator=;
    struct IEnumUICommand *operator=;
};

typedef struct IEnumUnknown {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumUnknown;
    VOID IEnumUnknown;
    VOID IEnumUnknown;
    struct IEnumUnknown *operator=;
    struct IEnumUnknown *operator=;
};

typedef struct IEnumVARIANT {
    struct IUnknown IUnknown;
    HRESULT Next;
    HRESULT Skip;
    HRESULT Reset;
    HRESULT Clone;
    VOID IEnumVARIANT;
    VOID IEnumVARIANT;
    VOID IEnumVARIANT;
    struct IEnumVARIANT *operator=;
    struct IEnumVARIANT *operator=;
};

typedef struct IErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetGUID;
    HRESULT GetSource;
    HRESULT GetDescription;
    HRESULT GetHelpFile;
    HRESULT GetHelpContext;
    VOID IErrorInfo;
    VOID IErrorInfo;
    VOID IErrorInfo;
    struct IErrorInfo *operator=;
    struct IErrorInfo *operator=;
};

typedef struct IErrorLog {
    struct IUnknown IUnknown;
    HRESULT AddError;
    VOID IErrorLog;
    VOID IErrorLog;
    VOID IErrorLog;
    struct IErrorLog *operator=;
    struct IErrorLog *operator=;
};

typedef struct IExecuteCommand {
    struct IUnknown IUnknown;
    HRESULT SetKeyState;
    HRESULT SetParameters;
    HRESULT SetPosition;
    HRESULT SetShowWindow;
    HRESULT SetNoShowUI;
    HRESULT SetDirectory;
    HRESULT Execute;
    VOID IExecuteCommand;
    VOID IExecuteCommand;
    VOID IExecuteCommand;
    struct IExecuteCommand *operator=;
    struct IExecuteCommand *operator=;
};

typedef struct IExecuteCommandApplicationHostEnvironment {
    struct IUnknown IUnknown;
    HRESULT GetValue;
    VOID IExecuteCommandApplicationHostEnvironment;
    VOID IExecuteCommandApplicationHostEnvironment;
    VOID IExecuteCommandApplicationHostEnvironment;
    struct IExecuteCommandApplicationHostEnvironment *operator=;
    struct IExecuteCommandApplicationHostEnvironment *operator=;
};

typedef struct IExecuteCommandHost {
    struct IUnknown IUnknown;
    HRESULT GetUIMode;
    VOID IExecuteCommandHost;
    VOID IExecuteCommandHost;
    VOID IExecuteCommandHost;
    struct IExecuteCommandHost *operator=;
    struct IExecuteCommandHost *operator=;
};

typedef struct IExplorerBrowser {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT Destroy;
    HRESULT SetRect;
    HRESULT SetPropertyBag;
    HRESULT SetEmptyText;
    HRESULT SetFolderSettings;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT SetOptions;
    HRESULT GetOptions;
    HRESULT BrowseToIDList;
    HRESULT BrowseToObject;
    HRESULT FillFromObject;
    HRESULT RemoveAll;
    HRESULT GetCurrentView;
    VOID IExplorerBrowser;
    VOID IExplorerBrowser;
    VOID IExplorerBrowser;
    struct IExplorerBrowser *operator=;
    struct IExplorerBrowser *operator=;
};

typedef struct IExplorerBrowserEvents {
    struct IUnknown IUnknown;
    HRESULT OnNavigationPending;
    HRESULT OnViewCreated;
    HRESULT OnNavigationComplete;
    HRESULT OnNavigationFailed;
    VOID IExplorerBrowserEvents;
    VOID IExplorerBrowserEvents;
    VOID IExplorerBrowserEvents;
    struct IExplorerBrowserEvents *operator=;
    struct IExplorerBrowserEvents *operator=;
};

typedef struct IExplorerCommand {
    struct IUnknown IUnknown;
    HRESULT GetTitle;
    HRESULT GetIcon;
    HRESULT GetToolTip;
    HRESULT GetCanonicalName;
    HRESULT GetState;
    HRESULT Invoke;
    HRESULT GetFlags;
    HRESULT EnumSubCommands;
    VOID IExplorerCommand;
    VOID IExplorerCommand;
    VOID IExplorerCommand;
    struct IExplorerCommand *operator=;
    struct IExplorerCommand *operator=;
};

typedef struct IExplorerCommandProvider {
    struct IUnknown IUnknown;
    HRESULT GetCommands;
    HRESULT GetCommand;
    VOID IExplorerCommandProvider;
    VOID IExplorerCommandProvider;
    VOID IExplorerCommandProvider;
    struct IExplorerCommandProvider *operator=;
    struct IExplorerCommandProvider *operator=;
};

typedef struct IExplorerCommandState {
    struct IUnknown IUnknown;
    HRESULT GetState;
    VOID IExplorerCommandState;
    VOID IExplorerCommandState;
    VOID IExplorerCommandState;
    struct IExplorerCommandState *operator=;
    struct IExplorerCommandState *operator=;
};

typedef struct IExplorerPaneVisibility {
    struct IUnknown IUnknown;
    HRESULT GetPaneState;
    VOID IExplorerPaneVisibility;
    VOID IExplorerPaneVisibility;
    VOID IExplorerPaneVisibility;
    struct IExplorerPaneVisibility *operator=;
    struct IExplorerPaneVisibility *operator=;
};

typedef struct IExtensionList {
    struct IUnknown IUnknown;
    HRESULT GetFilteredAndSortedExtensionList;
    HRESULT GetAppIdFilteredExtensionList;
    HRESULT IsStale;
    HRESULT RefreshUsageData;
    VOID IExtensionList;
    VOID IExtensionList;
    VOID IExtensionList;
    struct IExtensionList *operator=;
    struct IExtensionList *operator=;
};

typedef struct IExtensionListItem {
    struct IUnknown IUnknown;
    HRESULT GetExtensionRegistration;
    HRESULT InsertToPinnedList;
    HRESULT AppendToPinnedList;
    HRESULT RemoveFromPinnedList;
    HRESULT GetPinnedState;
    HRESULT GetHiddenState;
    HRESULT SetHiddenState;
    VOID IExtensionListItem;
    VOID IExtensionListItem;
    VOID IExtensionListItem;
    struct IExtensionListItem *operator=;
    struct IExtensionListItem *operator=;
};

typedef struct IExternalConnection {
    struct IUnknown IUnknown;
    ULONG AddConnection;
    ULONG ReleaseConnection;
    VOID IExternalConnection;
    VOID IExternalConnection;
    VOID IExternalConnection;
    struct IExternalConnection *operator=;
    struct IExternalConnection *operator=;
};

typedef struct IExtractIconA {
    struct IUnknown IUnknown;
    HRESULT GetIconLocation;
    HRESULT Extract;
    VOID IExtractIconA;
    VOID IExtractIconA;
    VOID IExtractIconA;
    struct IExtractIconA *operator=;
    struct IExtractIconA *operator=;
};

typedef struct IExtractIconW {
    struct IUnknown IUnknown;
    HRESULT GetIconLocation;
    HRESULT Extract;
    VOID IExtractIconW;
    VOID IExtractIconW;
    VOID IExtractIconW;
    struct IExtractIconW *operator=;
    struct IExtractIconW *operator=;
};

typedef struct IExtractImage {
    struct IUnknown IUnknown;
    HRESULT GetLocation;
    HRESULT Extract;
    VOID IExtractImage;
    VOID IExtractImage;
    VOID IExtractImage;
    struct IExtractImage *operator=;
    struct IExtractImage *operator=;
};

typedef struct IExtractImage2 {
    struct IExtractImage IExtractImage;
    HRESULT GetDateStamp;
    VOID IExtractImage2;
    VOID IExtractImage2;
    VOID IExtractImage2;
    struct IExtractImage2 *operator=;
    struct IExtractImage2 *operator=;
};

typedef struct IFC_HIDE_INK_CURSOR_START_DATA {
    ULONG PointerId;
};

typedef struct IFC_HIDE_INK_CURSOR_STOP_DATA {
    ULONG PointerId;
};

typedef struct IFC_SUPERWET_INK_START_DATA {
    ULONG PointerId;
    enum INK_FEEDBACK_PEN_TYPE PenType;
     <unnamed-type-PenColor>;
    struct {
        UCHAR A;
        UCHAR R;
        UCHAR G;
        UCHAR B;
    } PenColor;
    FLOAT PenThicknessInPixels;
    enum INK_FEEDBACK_PEN_NIB_SHAPE PenNibShape;
     <unnamed-type-PenNibTransform>;
    struct {
        FLOAT M11;
        FLOAT M12;
        FLOAT M21;
        FLOAT M22;
        FLOAT M31;
        FLOAT M32;
    } PenNibTransform;
     <unnamed-type-ClipInPixels>;
    struct {
        FLOAT Left;
        FLOAT Top;
        FLOAT Right;
        FLOAT Bottom;
    } ClipInPixels;
    LONG IgnorePressure : 1;
    LONG IgnoreTilt : 1;
    LONG FitToCurve : 1;
};

typedef struct IFC_SUPERWET_INK_STOP_DATA {
    ULONG PointerId;
};

typedef struct IFastRundown {
    struct IUnknown IUnknown;
    VOID IFastRundown;
    VOID IFastRundown;
    VOID IFastRundown;
    struct IFastRundown *operator=;
    struct IFastRundown *operator=;
};

typedef struct IFileDialog {
    struct IModalWindow IModalWindow;
    HRESULT SetFileTypes;
    HRESULT SetFileTypeIndex;
    HRESULT GetFileTypeIndex;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT SetOptions;
    HRESULT GetOptions;
    HRESULT SetDefaultFolder;
    HRESULT SetFolder;
    HRESULT GetFolder;
    HRESULT GetCurrentSelection;
    HRESULT SetFileName;
    HRESULT GetFileName;
    HRESULT SetTitle;
    HRESULT SetOkButtonLabel;
    HRESULT SetFileNameLabel;
    HRESULT GetResult;
    HRESULT AddPlace;
    HRESULT SetDefaultExtension;
    HRESULT Close;
    HRESULT SetClientGuid;
    HRESULT ClearClientData;
    HRESULT SetFilter;
    VOID IFileDialog;
    VOID IFileDialog;
    VOID IFileDialog;
    struct IFileDialog *operator=;
    struct IFileDialog *operator=;
};

typedef struct IFileDialogCustomize {
    struct IUnknown IUnknown;
    HRESULT EnableOpenDropDown;
    HRESULT AddMenu;
    HRESULT AddPushButton;
    HRESULT AddComboBox;
    HRESULT AddRadioButtonList;
    HRESULT AddCheckButton;
    HRESULT AddEditBox;
    HRESULT AddSeparator;
    HRESULT AddText;
    HRESULT SetControlLabel;
    HRESULT GetControlState;
    HRESULT SetControlState;
    HRESULT GetEditBoxText;
    HRESULT SetEditBoxText;
    HRESULT GetCheckButtonState;
    HRESULT SetCheckButtonState;
    HRESULT AddControlItem;
    HRESULT RemoveControlItem;
    HRESULT RemoveAllControlItems;
    HRESULT GetControlItemState;
    HRESULT SetControlItemState;
    HRESULT GetSelectedControlItem;
    HRESULT SetSelectedControlItem;
    HRESULT StartVisualGroup;
    HRESULT EndVisualGroup;
    HRESULT MakeProminent;
    HRESULT SetControlItemText;
    VOID IFileDialogCustomize;
    VOID IFileDialogCustomize;
    VOID IFileDialogCustomize;
    struct IFileDialogCustomize *operator=;
    struct IFileDialogCustomize *operator=;
};

typedef struct IFileDialogEvents {
    struct IUnknown IUnknown;
    HRESULT OnFileOk;
    HRESULT OnFolderChanging;
    HRESULT OnFolderChange;
    HRESULT OnSelectionChange;
    HRESULT OnShareViolation;
    HRESULT OnTypeChange;
    HRESULT OnOverwrite;
    VOID IFileDialogEvents;
    VOID IFileDialogEvents;
    VOID IFileDialogEvents;
    struct IFileDialogEvents *operator=;
    struct IFileDialogEvents *operator=;
};

typedef struct IFileIsInUse {
    struct IUnknown IUnknown;
    HRESULT GetAppName;
    HRESULT GetUsage;
    HRESULT GetCapabilities;
    HRESULT GetSwitchToHWND;
    HRESULT CloseFile;
    VOID IFileIsInUse;
    VOID IFileIsInUse;
    VOID IFileIsInUse;
    struct IFileIsInUse *operator=;
    struct IFileIsInUse *operator=;
};

typedef struct IFileOpenDialog {
    struct IFileDialog IFileDialog;
    HRESULT GetResults;
    HRESULT GetSelectedItems;
    VOID IFileOpenDialog;
    VOID IFileOpenDialog;
    VOID IFileOpenDialog;
    struct IFileOpenDialog *operator=;
    struct IFileOpenDialog *operator=;
};

typedef struct IFileOperation {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT SetOperationFlags;
    HRESULT SetProgressMessage;
    HRESULT SetProgressDialog;
    HRESULT SetProperties;
    HRESULT SetOwnerWindow;
    HRESULT ApplyPropertiesToItem;
    HRESULT ApplyPropertiesToItems;
    HRESULT RenameItem;
    HRESULT RenameItems;
    HRESULT MoveItem;
    HRESULT MoveItems;
    HRESULT CopyItem;
    HRESULT CopyItems;
    HRESULT DeleteItem;
    HRESULT DeleteItems;
    HRESULT NewItem;
    HRESULT PerformOperations;
    HRESULT GetAnyOperationsAborted;
    VOID IFileOperation;
    VOID IFileOperation;
    VOID IFileOperation;
    struct IFileOperation *operator=;
    struct IFileOperation *operator=;
};

typedef struct IFileOperation2 {
    struct IFileOperation IFileOperation;
    HRESULT SetOperationFlags2;
    VOID IFileOperation2;
    VOID IFileOperation2;
    VOID IFileOperation2;
    struct IFileOperation2 *operator=;
    struct IFileOperation2 *operator=;
};

typedef struct IFileOperationProgressSink {
    struct IUnknown IUnknown;
    HRESULT StartOperations;
    HRESULT FinishOperations;
    HRESULT PreRenameItem;
    HRESULT PostRenameItem;
    HRESULT PreMoveItem;
    HRESULT PostMoveItem;
    HRESULT PreCopyItem;
    HRESULT PostCopyItem;
    HRESULT PreDeleteItem;
    HRESULT PostDeleteItem;
    HRESULT PreNewItem;
    HRESULT PostNewItem;
    HRESULT UpdateProgress;
    HRESULT ResetTimer;
    HRESULT PauseTimer;
    HRESULT ResumeTimer;
    VOID IFileOperationProgressSink;
    VOID IFileOperationProgressSink;
    VOID IFileOperationProgressSink;
    struct IFileOperationProgressSink *operator=;
    struct IFileOperationProgressSink *operator=;
};

typedef struct IFileSaveDialog {
    struct IFileDialog IFileDialog;
    HRESULT SetSaveAsItem;
    HRESULT SetProperties;
    HRESULT SetCollectedProperties;
    HRESULT GetProperties;
    HRESULT ApplyProperties;
    VOID IFileSaveDialog;
    VOID IFileSaveDialog;
    VOID IFileSaveDialog;
    struct IFileSaveDialog *operator=;
    struct IFileSaveDialog *operator=;
};

typedef struct IFileSearchBand {
    struct IDispatch IDispatch;
    HRESULT SetFocus;
    HRESULT SetSearchParameters;
    HRESULT get_SearchID;
    HRESULT get_Scope;
    HRESULT get_QueryFile;
    VOID IFileSearchBand;
    VOID IFileSearchBand;
    VOID IFileSearchBand;
    struct IFileSearchBand *operator=;
    struct IFileSearchBand *operator=;
};

typedef struct IFileSyncMergeHandler {
    struct IUnknown IUnknown;
    HRESULT Merge;
    HRESULT ShowResolveConflictUIAsync;
    VOID IFileSyncMergeHandler;
    VOID IFileSyncMergeHandler;
    VOID IFileSyncMergeHandler;
    struct IFileSyncMergeHandler *operator=;
    struct IFileSyncMergeHandler *operator=;
};

typedef struct IFileSystemBindData {
    struct IUnknown IUnknown;
    HRESULT SetFindData;
    HRESULT GetFindData;
    VOID IFileSystemBindData;
    VOID IFileSystemBindData;
    VOID IFileSystemBindData;
    struct IFileSystemBindData *operator=;
    struct IFileSystemBindData *operator=;
};

typedef struct IFileSystemBindData2 {
    struct IFileSystemBindData IFileSystemBindData;
    HRESULT SetFileID;
    HRESULT GetFileID;
    HRESULT SetJunctionCLSID;
    HRESULT GetJunctionCLSID;
    VOID IFileSystemBindData2;
    VOID IFileSystemBindData2;
    VOID IFileSystemBindData2;
    struct IFileSystemBindData2 *operator=;
    struct IFileSystemBindData2 *operator=;
};

typedef struct IFillLockBytes {
    struct IUnknown IUnknown;
    HRESULT FillAppend;
    HRESULT FillAt;
    HRESULT SetFillSize;
    HRESULT Terminate;
    VOID IFillLockBytes;
    VOID IFillLockBytes;
    VOID IFillLockBytes;
    struct IFillLockBytes *operator=;
    struct IFillLockBytes *operator=;
};

typedef struct IFolderFilter {
    struct IUnknown IUnknown;
    HRESULT ShouldShow;
    HRESULT GetEnumFlags;
    VOID IFolderFilter;
    VOID IFolderFilter;
    VOID IFolderFilter;
    struct IFolderFilter *operator=;
    struct IFolderFilter *operator=;
};

typedef struct IFolderFilterSite {
    struct IUnknown IUnknown;
    HRESULT SetFilter;
    VOID IFolderFilterSite;
    VOID IFolderFilterSite;
    VOID IFolderFilterSite;
    struct IFolderFilterSite *operator=;
    struct IFolderFilterSite *operator=;
};

typedef struct IFolderView {
    struct IUnknown IUnknown;
    HRESULT GetCurrentViewMode;
    HRESULT SetCurrentViewMode;
    HRESULT GetFolder;
    HRESULT Item;
    HRESULT ItemCount;
    HRESULT Items;
    HRESULT GetSelectionMarkedItem;
    HRESULT GetFocusedItem;
    HRESULT GetItemPosition;
    HRESULT GetSpacing;
    HRESULT GetDefaultSpacing;
    HRESULT GetAutoArrange;
    HRESULT SelectItem;
    HRESULT SelectAndPositionItems;
    VOID IFolderView;
    VOID IFolderView;
    VOID IFolderView;
    struct IFolderView *operator=;
    struct IFolderView *operator=;
};

typedef struct IFolderView2 {
    struct IFolderView IFolderView;
    HRESULT SetGroupBy;
    HRESULT GetGroupBy;
    HRESULT SetViewProperty;
    HRESULT GetViewProperty;
    HRESULT SetTileViewProperties;
    HRESULT SetExtendedTileViewProperties;
    HRESULT SetText;
    HRESULT SetCurrentFolderFlags;
    HRESULT GetCurrentFolderFlags;
    HRESULT GetSortColumnCount;
    HRESULT SetSortColumns;
    HRESULT GetSortColumns;
    HRESULT GetItem;
    HRESULT GetVisibleItem;
    HRESULT GetSelectedItem;
    HRESULT GetSelection;
    HRESULT GetSelectionState;
    HRESULT InvokeVerbOnSelection;
    HRESULT SetViewModeAndIconSize;
    HRESULT GetViewModeAndIconSize;
    HRESULT SetGroupSubsetCount;
    HRESULT GetGroupSubsetCount;
    HRESULT SetRedraw;
    HRESULT IsMoveInSameFolder;
    HRESULT DoRename;
    VOID IFolderView2;
    VOID IFolderView2;
    VOID IFolderView2;
    struct IFolderView2 *operator=;
    struct IFolderView2 *operator=;
};

typedef struct IFolderViewOC {
    struct IDispatch IDispatch;
    HRESULT SetFolderView;
    VOID IFolderViewOC;
    VOID IFolderViewOC;
    VOID IFolderViewOC;
    struct IFolderViewOC *operator=;
    struct IFolderViewOC *operator=;
};

typedef struct IFolderViewSettings {
    struct IUnknown IUnknown;
    HRESULT GetColumnPropertyList;
    HRESULT GetGroupByProperty;
    HRESULT GetViewMode;
    HRESULT GetIconSize;
    HRESULT GetFolderFlags;
    HRESULT GetSortColumns;
    HRESULT GetGroupSubsetCount;
    VOID IFolderViewSettings;
    VOID IFolderViewSettings;
    VOID IFolderViewSettings;
    struct IFolderViewSettings *operator=;
    struct IFolderViewSettings *operator=;
};

typedef struct IFont {
    struct IUnknown IUnknown;
    HRESULT get_Name;
    HRESULT put_Name;
    HRESULT get_Size;
    HRESULT put_Size;
    HRESULT get_Bold;
    HRESULT put_Bold;
    HRESULT get_Italic;
    HRESULT put_Italic;
    HRESULT get_Underline;
    HRESULT put_Underline;
    HRESULT get_Strikethrough;
    HRESULT put_Strikethrough;
    HRESULT get_Weight;
    HRESULT put_Weight;
    HRESULT get_Charset;
    HRESULT put_Charset;
    HRESULT get_hFont;
    HRESULT Clone;
    HRESULT IsEqual;
    HRESULT SetRatio;
    HRESULT QueryTextMetrics;
    HRESULT AddRefHfont;
    HRESULT ReleaseHfont;
    HRESULT SetHdc;
    VOID IFont;
    VOID IFont;
    VOID IFont;
    struct IFont *operator=;
    struct IFont *operator=;
};

typedef struct IFontDisp {
    struct IDispatch IDispatch;
    VOID IFontDisp;
    VOID IFontDisp;
    VOID IFontDisp;
    struct IFontDisp *operator=;
    struct IFontDisp *operator=;
};

typedef struct IFontEventsDisp {
    struct IDispatch IDispatch;
    VOID IFontEventsDisp;
    VOID IFontEventsDisp;
    VOID IFontEventsDisp;
    struct IFontEventsDisp *operator=;
    struct IFontEventsDisp *operator=;
};

typedef struct IForegroundTransfer {
    struct IUnknown IUnknown;
    HRESULT AllowForegroundTransfer;
    VOID IForegroundTransfer;
    VOID IForegroundTransfer;
    VOID IForegroundTransfer;
    struct IForegroundTransfer *operator=;
    struct IForegroundTransfer *operator=;
};

typedef struct IFormatForDisplayHelper {
    struct IUnknown IUnknown;
    HRESULT FormatForDisplay;
    VOID IFormatForDisplayHelper;
    VOID IFormatForDisplayHelper;
    VOID IFormatForDisplayHelper;
    struct IFormatForDisplayHelper *operator=;
    struct IFormatForDisplayHelper *operator=;
};

typedef struct IFrameworkInputPane {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT AdviseWithHWND;
    HRESULT Unadvise;
    HRESULT Location;
    VOID IFrameworkInputPane;
    VOID IFrameworkInputPane;
    VOID IFrameworkInputPane;
    struct IFrameworkInputPane *operator=;
    struct IFrameworkInputPane *operator=;
};

typedef struct IFrameworkInputPaneHandler {
    struct IUnknown IUnknown;
    HRESULT Showing;
    HRESULT Hiding;
    VOID IFrameworkInputPaneHandler;
    VOID IFrameworkInputPaneHandler;
    VOID IFrameworkInputPaneHandler;
    struct IFrameworkInputPaneHandler *operator=;
    struct IFrameworkInputPaneHandler *operator=;
};

typedef struct IFunctionDiscoveryNotification {
    struct IUnknown IUnknown;
    HRESULT OnUpdate;
    HRESULT OnError;
    HRESULT OnEvent;
    VOID IFunctionDiscoveryNotification;
    VOID IFunctionDiscoveryNotification;
    VOID IFunctionDiscoveryNotification;
    struct IFunctionDiscoveryNotification *operator=;
    struct IFunctionDiscoveryNotification *operator=;
};

typedef struct IFunctionInstance {
    struct IServiceProvider IServiceProvider;
    HRESULT GetID;
    HRESULT GetProviderInstanceID;
    HRESULT OpenPropertyStore;
    HRESULT GetCategory;
    VOID IFunctionInstance;
    VOID IFunctionInstance;
    VOID IFunctionInstance;
    struct IFunctionInstance *operator=;
    struct IFunctionInstance *operator=;
};

typedef struct IGetBindHandle {
    struct IUnknown IUnknown;
    HRESULT GetBindHandle;
    VOID IGetBindHandle;
    VOID IGetBindHandle;
    VOID IGetBindHandle;
    struct IGetBindHandle *operator=;
    struct IGetBindHandle *operator=;
};

typedef struct IGlobalInterfaceTable {
    struct IUnknown IUnknown;
    HRESULT RegisterInterfaceInGlobal;
    HRESULT RevokeInterfaceFromGlobal;
    HRESULT GetInterfaceFromGlobal;
    VOID IGlobalInterfaceTable;
    VOID IGlobalInterfaceTable;
    VOID IGlobalInterfaceTable;
    struct IGlobalInterfaceTable *operator=;
    struct IGlobalInterfaceTable *operator=;
};

typedef struct IGlobalOptions {
    struct IUnknown IUnknown;
    HRESULT Set;
    HRESULT Query;
    VOID IGlobalOptions;
    VOID IGlobalOptions;
    VOID IGlobalOptions;
    struct IGlobalOptions *operator=;
    struct IGlobalOptions *operator=;
};

typedef struct IHandlerActivationHost {
    struct IUnknown IUnknown;
    HRESULT BeforeCoCreateInstance;
    HRESULT BeforeCreateProcess;
    VOID IHandlerActivationHost;
    VOID IHandlerActivationHost;
    VOID IHandlerActivationHost;
    struct IHandlerActivationHost *operator=;
    struct IHandlerActivationHost *operator=;
};

typedef struct IHandlerInfo {
    struct IUnknown IUnknown;
    HRESULT GetApplicationDisplayName;
    HRESULT GetApplicationPublisher;
    HRESULT GetApplicationIconReference;
    VOID IHandlerInfo;
    VOID IHandlerInfo;
    VOID IHandlerInfo;
    struct IHandlerInfo *operator=;
    struct IHandlerInfo *operator=;
};

typedef struct IHandlerInfo2 {
    struct IHandlerInfo IHandlerInfo;
    HRESULT GetApplicationId;
    VOID IHandlerInfo2;
    VOID IHandlerInfo2;
    VOID IHandlerInfo2;
    struct IHandlerInfo2 *operator=;
    struct IHandlerInfo2 *operator=;
};

typedef struct IHomeGroup {
    struct IUnknown IUnknown;
    HRESULT IsMember;
    HRESULT ShowSharingWizard;
    VOID IHomeGroup;
    VOID IHomeGroup;
    VOID IHomeGroup;
    struct IHomeGroup *operator=;
    struct IHomeGroup *operator=;
};

typedef struct IHttpNegotiate {
    struct IUnknown IUnknown;
    HRESULT BeginningTransaction;
    HRESULT OnResponse;
    VOID IHttpNegotiate;
    VOID IHttpNegotiate;
    VOID IHttpNegotiate;
    struct IHttpNegotiate *operator=;
    struct IHttpNegotiate *operator=;
};

typedef struct IHttpNegotiate2 {
    struct IHttpNegotiate IHttpNegotiate;
    HRESULT GetRootSecurityId;
    VOID IHttpNegotiate2;
    VOID IHttpNegotiate2;
    VOID IHttpNegotiate2;
    struct IHttpNegotiate2 *operator=;
    struct IHttpNegotiate2 *operator=;
};

typedef struct IHttpNegotiate3 {
    struct IHttpNegotiate2 IHttpNegotiate2;
    HRESULT GetSerializedClientCertContext;
    VOID IHttpNegotiate3;
    VOID IHttpNegotiate3;
    VOID IHttpNegotiate3;
    struct IHttpNegotiate3 *operator=;
    struct IHttpNegotiate3 *operator=;
};

typedef struct IHttpSecurity {
    struct IWindowForBindingUI IWindowForBindingUI;
    HRESULT OnSecurityProblem;
    VOID IHttpSecurity;
    VOID IHttpSecurity;
    VOID IHttpSecurity;
    struct IHttpSecurity *operator=;
    struct IHttpSecurity *operator=;
};

typedef struct IIOCancelInformation {
    struct IUnknown IUnknown;
    HRESULT SetCancelInformation;
    HRESULT GetCancelInformation;
    VOID IIOCancelInformation;
    VOID IIOCancelInformation;
    VOID IIOCancelInformation;
    struct IIOCancelInformation *operator=;
    struct IIOCancelInformation *operator=;
};

typedef struct IIdentityName {
    struct IRelatedItem IRelatedItem;
    VOID IIdentityName;
    VOID IIdentityName;
    VOID IIdentityName;
    struct IIdentityName *operator=;
    struct IIdentityName *operator=;
};

typedef struct IImageList {
    struct IUnknown IUnknown;
    HRESULT Add;
    HRESULT ReplaceIcon;
    HRESULT SetOverlayImage;
    HRESULT Replace;
    HRESULT AddMasked;
    HRESULT Draw;
    HRESULT Remove;
    HRESULT GetIcon;
    HRESULT GetImageInfo;
    HRESULT Copy;
    HRESULT Merge;
    HRESULT Clone;
    HRESULT GetImageRect;
    HRESULT GetIconSize;
    HRESULT SetIconSize;
    HRESULT GetImageCount;
    HRESULT SetImageCount;
    HRESULT SetBkColor;
    HRESULT GetBkColor;
    HRESULT BeginDrag;
    HRESULT EndDrag;
    HRESULT DragEnter;
    HRESULT DragLeave;
    HRESULT DragMove;
    HRESULT SetDragCursorImage;
    HRESULT DragShowNolock;
    HRESULT GetDragImage;
    HRESULT GetItemFlags;
    HRESULT GetOverlayImage;
    VOID IImageList;
    VOID IImageList;
    VOID IImageList;
    struct IImageList *operator=;
    struct IImageList *operator=;
};

typedef struct IInitializeCommand {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeCommand;
    VOID IInitializeCommand;
    VOID IInitializeCommand;
    struct IInitializeCommand *operator=;
    struct IInitializeCommand *operator=;
};

typedef struct IInitializePropertyStore {
    struct IUnknown IUnknown;
    HRESULT InitializeWithKeysAndValues;
    VOID IInitializePropertyStore;
    VOID IInitializePropertyStore;
    VOID IInitializePropertyStore;
    struct IInitializePropertyStore *operator=;
    struct IInitializePropertyStore *operator=;
};

typedef struct IInitializeSpy {
    struct IUnknown IUnknown;
    HRESULT PreInitialize;
    HRESULT PostInitialize;
    HRESULT PreUninitialize;
    HRESULT PostUninitialize;
    VOID IInitializeSpy;
    VOID IInitializeSpy;
    VOID IInitializeSpy;
    struct IInitializeSpy *operator=;
    struct IInitializeSpy *operator=;
};

typedef struct IInitializeWithBindCtx {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithBindCtx;
    VOID IInitializeWithBindCtx;
    VOID IInitializeWithBindCtx;
    struct IInitializeWithBindCtx *operator=;
    struct IInitializeWithBindCtx *operator=;
};

typedef struct IInitializeWithDelegate {
    struct IUnknown IUnknown;
    HRESULT InitializeWithDelegate;
    VOID IInitializeWithDelegate;
    VOID IInitializeWithDelegate;
    VOID IInitializeWithDelegate;
    struct IInitializeWithDelegate *operator=;
    struct IInitializeWithDelegate *operator=;
};

typedef struct IInitializeWithFile {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithFile;
    VOID IInitializeWithFile;
    VOID IInitializeWithFile;
    struct IInitializeWithFile *operator=;
    struct IInitializeWithFile *operator=;
};

typedef struct IInitializeWithItem {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithItem;
    VOID IInitializeWithItem;
    VOID IInitializeWithItem;
    struct IInitializeWithItem *operator=;
    struct IInitializeWithItem *operator=;
};

typedef struct IInitializeWithItemArrayAndGPSFlags {
    struct IUnknown IUnknown;
    HRESULT InitializeWithItemArrayAndGPSFlags;
    VOID IInitializeWithItemArrayAndGPSFlags;
    VOID IInitializeWithItemArrayAndGPSFlags;
    VOID IInitializeWithItemArrayAndGPSFlags;
    struct IInitializeWithItemArrayAndGPSFlags *operator=;
    struct IInitializeWithItemArrayAndGPSFlags *operator=;
};

typedef struct IInitializeWithPropertyFactory {
    struct IUnknown IUnknown;
    HRESULT InitializeWithPropertyFactory;
    VOID IInitializeWithPropertyFactory;
    VOID IInitializeWithPropertyFactory;
    VOID IInitializeWithPropertyFactory;
    struct IInitializeWithPropertyFactory *operator=;
    struct IInitializeWithPropertyFactory *operator=;
};

typedef struct IInitializeWithPropertyKeys {
    struct IPropertyKeyStore IPropertyKeyStore;
    HRESULT InitializeWithPropertyKeys;
    VOID IInitializeWithPropertyKeys;
    VOID IInitializeWithPropertyKeys;
    VOID IInitializeWithPropertyKeys;
    struct IInitializeWithPropertyKeys *operator=;
    struct IInitializeWithPropertyKeys *operator=;
};

typedef struct IInitializeWithPropertyStore {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithPropertyStore;
    VOID IInitializeWithPropertyStore;
    VOID IInitializeWithPropertyStore;
    struct IInitializeWithPropertyStore *operator=;
    struct IInitializeWithPropertyStore *operator=;
};

typedef struct IInitializeWithPropertyStores {
    struct IUnknown IUnknown;
    HRESULT AddStore;
    VOID IInitializeWithPropertyStores;
    VOID IInitializeWithPropertyStores;
    VOID IInitializeWithPropertyStores;
    struct IInitializeWithPropertyStores *operator=;
    struct IInitializeWithPropertyStores *operator=;
};

typedef struct IInitializeWithStream {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithStream;
    VOID IInitializeWithStream;
    VOID IInitializeWithStream;
    struct IInitializeWithStream *operator=;
    struct IInitializeWithStream *operator=;
};

typedef struct IInitializeWithWindow {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IInitializeWithWindow;
    VOID IInitializeWithWindow;
    VOID IInitializeWithWindow;
    struct IInitializeWithWindow *operator=;
    struct IInitializeWithWindow *operator=;
};

typedef struct IInputObject {
    struct IUnknown IUnknown;
    HRESULT UIActivateIO;
    HRESULT HasFocusIO;
    HRESULT TranslateAcceleratorIO;
    VOID IInputObject;
    VOID IInputObject;
    VOID IInputObject;
    struct IInputObject *operator=;
    struct IInputObject *operator=;
};

typedef struct IInputObject2 {
    struct IInputObject IInputObject;
    HRESULT TranslateAcceleratorGlobal;
    VOID IInputObject2;
    VOID IInputObject2;
    VOID IInputObject2;
    struct IInputObject2 *operator=;
    struct IInputObject2 *operator=;
};

typedef struct IInputObjectSite {
    struct IUnknown IUnknown;
    HRESULT OnFocusChangeIS;
    VOID IInputObjectSite;
    VOID IInputObjectSite;
    VOID IInputObjectSite;
    struct IInputObjectSite *operator=;
    struct IInputObjectSite *operator=;
};

typedef struct IInspectable {
    struct IUnknown IUnknown;
    HRESULT GetIids;
    HRESULT GetRuntimeClassName;
    HRESULT GetTrustLevel;
    VOID IInspectable;
    VOID IInspectable;
    VOID IInspectable;
    struct IInspectable *operator=;
    struct IInspectable *operator=;
};

typedef struct IInternalConnection {
    struct IUnknown IUnknown;
    HRESULT AddConnection;
    HRESULT ReleaseConnection;
    VOID IInternalConnection;
    VOID IInternalConnection;
    VOID IInternalConnection;
    struct IInternalConnection *operator=;
    struct IInternalConnection *operator=;
};

typedef struct IInternalUnknown {
    struct IUnknown IUnknown;
    HRESULT QueryInternalInterface;
    VOID IInternalUnknown;
    VOID IInternalUnknown;
    VOID IInternalUnknown;
    struct IInternalUnknown *operator=;
    struct IInternalUnknown *operator=;
};

typedef struct IInternet {
    struct IUnknown IUnknown;
    VOID IInternet;
    VOID IInternet;
    VOID IInternet;
    struct IInternet *operator=;
    struct IInternet *operator=;
};

typedef struct IInternetBindInfo {
    struct IUnknown IUnknown;
    HRESULT GetBindInfo;
    HRESULT GetBindString;
    VOID IInternetBindInfo;
    VOID IInternetBindInfo;
    VOID IInternetBindInfo;
    struct IInternetBindInfo *operator=;
    struct IInternetBindInfo *operator=;
};

typedef struct IInternetBindInfoEx {
    struct IInternetBindInfo IInternetBindInfo;
    HRESULT GetBindInfoEx;
    VOID IInternetBindInfoEx;
    VOID IInternetBindInfoEx;
    VOID IInternetBindInfoEx;
    struct IInternetBindInfoEx *operator=;
    struct IInternetBindInfoEx *operator=;
};

typedef struct IInternetHostSecurityManager {
    struct IUnknown IUnknown;
    HRESULT GetSecurityId;
    HRESULT ProcessUrlAction;
    HRESULT QueryCustomPolicy;
    VOID IInternetHostSecurityManager;
    VOID IInternetHostSecurityManager;
    VOID IInternetHostSecurityManager;
    struct IInternetHostSecurityManager *operator=;
    struct IInternetHostSecurityManager *operator=;
};

typedef struct IInternetPriority {
    struct IUnknown IUnknown;
    HRESULT SetPriority;
    HRESULT GetPriority;
    VOID IInternetPriority;
    VOID IInternetPriority;
    VOID IInternetPriority;
    struct IInternetPriority *operator=;
    struct IInternetPriority *operator=;
};

typedef struct IInternetProtocol {
    struct IInternetProtocolRoot IInternetProtocolRoot;
    HRESULT Read;
    HRESULT Seek;
    HRESULT LockRequest;
    HRESULT UnlockRequest;
    VOID IInternetProtocol;
    VOID IInternetProtocol;
    VOID IInternetProtocol;
    struct IInternetProtocol *operator=;
    struct IInternetProtocol *operator=;
};

typedef struct IInternetProtocolEx {
    struct IInternetProtocol IInternetProtocol;
    HRESULT StartEx;
    VOID IInternetProtocolEx;
    VOID IInternetProtocolEx;
    VOID IInternetProtocolEx;
    struct IInternetProtocolEx *operator=;
    struct IInternetProtocolEx *operator=;
};

typedef struct IInternetProtocolInfo {
    struct IUnknown IUnknown;
    HRESULT ParseUrl;
    HRESULT CombineUrl;
    HRESULT CompareUrl;
    HRESULT QueryInfo;
    VOID IInternetProtocolInfo;
    VOID IInternetProtocolInfo;
    VOID IInternetProtocolInfo;
    struct IInternetProtocolInfo *operator=;
    struct IInternetProtocolInfo *operator=;
};

typedef struct IInternetProtocolRoot {
    struct IUnknown IUnknown;
    HRESULT Start;
    HRESULT Continue;
    HRESULT Abort;
    HRESULT Terminate;
    HRESULT Suspend;
    HRESULT Resume;
    VOID IInternetProtocolRoot;
    VOID IInternetProtocolRoot;
    VOID IInternetProtocolRoot;
    struct IInternetProtocolRoot *operator=;
    struct IInternetProtocolRoot *operator=;
};

typedef struct IInternetProtocolSink {
    struct IUnknown IUnknown;
    HRESULT Switch;
    HRESULT ReportProgress;
    HRESULT ReportData;
    HRESULT ReportResult;
    VOID IInternetProtocolSink;
    VOID IInternetProtocolSink;
    VOID IInternetProtocolSink;
    struct IInternetProtocolSink *operator=;
    struct IInternetProtocolSink *operator=;
};

typedef struct IInternetProtocolSinkStackable {
    struct IUnknown IUnknown;
    HRESULT SwitchSink;
    HRESULT CommitSwitch;
    HRESULT RollbackSwitch;
    VOID IInternetProtocolSinkStackable;
    VOID IInternetProtocolSinkStackable;
    VOID IInternetProtocolSinkStackable;
    struct IInternetProtocolSinkStackable *operator=;
    struct IInternetProtocolSinkStackable *operator=;
};

typedef struct IInternetSecurityManager {
    struct IUnknown IUnknown;
    HRESULT SetSecuritySite;
    HRESULT GetSecuritySite;
    HRESULT MapUrlToZone;
    HRESULT GetSecurityId;
    HRESULT ProcessUrlAction;
    HRESULT QueryCustomPolicy;
    HRESULT SetZoneMapping;
    HRESULT GetZoneMappings;
    VOID IInternetSecurityManager;
    VOID IInternetSecurityManager;
    VOID IInternetSecurityManager;
    struct IInternetSecurityManager *operator=;
    struct IInternetSecurityManager *operator=;
};

typedef struct IInternetSecurityManagerEx {
    struct IInternetSecurityManager IInternetSecurityManager;
    HRESULT ProcessUrlActionEx;
    VOID IInternetSecurityManagerEx;
    VOID IInternetSecurityManagerEx;
    VOID IInternetSecurityManagerEx;
    struct IInternetSecurityManagerEx *operator=;
    struct IInternetSecurityManagerEx *operator=;
};

typedef struct IInternetSecurityManagerEx2 {
    struct IInternetSecurityManagerEx IInternetSecurityManagerEx;
    HRESULT MapUrlToZoneEx2;
    HRESULT ProcessUrlActionEx2;
    HRESULT GetSecurityIdEx2;
    HRESULT QueryCustomPolicyEx2;
    VOID IInternetSecurityManagerEx2;
    VOID IInternetSecurityManagerEx2;
    VOID IInternetSecurityManagerEx2;
    struct IInternetSecurityManagerEx2 *operator=;
    struct IInternetSecurityManagerEx2 *operator=;
};

typedef struct IInternetSecurityMgrSite {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    HRESULT EnableModeless;
    VOID IInternetSecurityMgrSite;
    VOID IInternetSecurityMgrSite;
    VOID IInternetSecurityMgrSite;
    struct IInternetSecurityMgrSite *operator=;
    struct IInternetSecurityMgrSite *operator=;
};

typedef struct IInternetSession {
    struct IUnknown IUnknown;
    HRESULT RegisterNameSpace;
    HRESULT UnregisterNameSpace;
    HRESULT RegisterMimeFilter;
    HRESULT UnregisterMimeFilter;
    HRESULT CreateBinding;
    HRESULT SetSessionOption;
    HRESULT GetSessionOption;
    VOID IInternetSession;
    VOID IInternetSession;
    VOID IInternetSession;
    struct IInternetSession *operator=;
    struct IInternetSession *operator=;
};

typedef struct IInternetThreadSwitch {
    struct IUnknown IUnknown;
    HRESULT Prepare;
    HRESULT Continue;
    VOID IInternetThreadSwitch;
    VOID IInternetThreadSwitch;
    VOID IInternetThreadSwitch;
    struct IInternetThreadSwitch *operator=;
    struct IInternetThreadSwitch *operator=;
};

typedef struct IInternetZoneManager {
    struct IUnknown IUnknown;
    HRESULT GetZoneAttributes;
    HRESULT SetZoneAttributes;
    HRESULT GetZoneCustomPolicy;
    HRESULT SetZoneCustomPolicy;
    HRESULT GetZoneActionPolicy;
    HRESULT SetZoneActionPolicy;
    HRESULT PromptAction;
    HRESULT LogAction;
    HRESULT CreateZoneEnumerator;
    HRESULT GetZoneAt;
    HRESULT DestroyZoneEnumerator;
    HRESULT CopyTemplatePoliciesToZone;
    VOID IInternetZoneManager;
    VOID IInternetZoneManager;
    VOID IInternetZoneManager;
    struct IInternetZoneManager *operator=;
    struct IInternetZoneManager *operator=;
};

typedef struct IInternetZoneManagerEx {
    struct IInternetZoneManager IInternetZoneManager;
    HRESULT GetZoneActionPolicyEx;
    HRESULT SetZoneActionPolicyEx;
    VOID IInternetZoneManagerEx;
    VOID IInternetZoneManagerEx;
    VOID IInternetZoneManagerEx;
    struct IInternetZoneManagerEx *operator=;
    struct IInternetZoneManagerEx *operator=;
};

typedef struct IInternetZoneManagerEx2 {
    struct IInternetZoneManagerEx IInternetZoneManagerEx;
    HRESULT GetZoneAttributesEx;
    HRESULT GetZoneSecurityState;
    HRESULT GetIESecurityState;
    HRESULT FixUnsecureSettings;
    VOID IInternetZoneManagerEx2;
    VOID IInternetZoneManagerEx2;
    VOID IInternetZoneManagerEx2;
    struct IInternetZoneManagerEx2 *operator=;
    struct IInternetZoneManagerEx2 *operator=;
};

typedef struct IItemNameLimits {
    struct IUnknown IUnknown;
    HRESULT GetValidCharacters;
    HRESULT GetMaxLength;
    VOID IItemNameLimits;
    VOID IItemNameLimits;
    VOID IItemNameLimits;
    struct IItemNameLimits *operator=;
    struct IItemNameLimits *operator=;
};

typedef struct IKnownFolder {
    struct IUnknown IUnknown;
    HRESULT GetId;
    HRESULT GetCategory;
    HRESULT GetShellItem;
    HRESULT GetPath;
    HRESULT SetPath;
    HRESULT GetIDList;
    HRESULT GetFolderType;
    HRESULT GetRedirectionCapabilities;
    HRESULT GetFolderDefinition;
    VOID IKnownFolder;
    VOID IKnownFolder;
    VOID IKnownFolder;
    struct IKnownFolder *operator=;
    struct IKnownFolder *operator=;
};

typedef struct IKnownFolderManager {
    struct IUnknown IUnknown;
    HRESULT FolderIdFromCsidl;
    HRESULT FolderIdToCsidl;
    HRESULT GetFolderIds;
    HRESULT GetFolder;
    HRESULT GetFolderByName;
    HRESULT RegisterFolder;
    HRESULT UnregisterFolder;
    HRESULT FindFolderFromPath;
    HRESULT FindFolderFromIDList;
    HRESULT Redirect;
    VOID IKnownFolderManager;
    VOID IKnownFolderManager;
    VOID IKnownFolderManager;
    struct IKnownFolderManager *operator=;
    struct IKnownFolderManager *operator=;
};

typedef struct ILanguageExceptionErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetLanguageException;
    VOID ILanguageExceptionErrorInfo;
    VOID ILanguageExceptionErrorInfo;
    VOID ILanguageExceptionErrorInfo;
    struct ILanguageExceptionErrorInfo *operator=;
    struct ILanguageExceptionErrorInfo *operator=;
};

typedef struct ILanguageExceptionErrorInfo2 {
    struct ILanguageExceptionErrorInfo ILanguageExceptionErrorInfo;
    HRESULT GetPreviousLanguageExceptionErrorInfo;
    HRESULT CapturePropagationContext;
    HRESULT GetPropagationContextHead;
    VOID ILanguageExceptionErrorInfo2;
    VOID ILanguageExceptionErrorInfo2;
    VOID ILanguageExceptionErrorInfo2;
    struct ILanguageExceptionErrorInfo2 *operator=;
    struct ILanguageExceptionErrorInfo2 *operator=;
};

typedef struct ILanguageExceptionStackBackTrace {
    struct IUnknown IUnknown;
    HRESULT GetStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    VOID ILanguageExceptionStackBackTrace;
    struct ILanguageExceptionStackBackTrace *operator=;
    struct ILanguageExceptionStackBackTrace *operator=;
};

typedef struct ILanguageExceptionTransform {
    struct IUnknown IUnknown;
    HRESULT GetTransformedRestrictedErrorInfo;
    VOID ILanguageExceptionTransform;
    VOID ILanguageExceptionTransform;
    VOID ILanguageExceptionTransform;
    struct ILanguageExceptionTransform *operator=;
    struct ILanguageExceptionTransform *operator=;
};

typedef struct ILaunchSourceAppUserModelId {
    struct IUnknown IUnknown;
    HRESULT GetAppUserModelId;
    VOID ILaunchSourceAppUserModelId;
    VOID ILaunchSourceAppUserModelId;
    VOID ILaunchSourceAppUserModelId;
    struct ILaunchSourceAppUserModelId *operator=;
    struct ILaunchSourceAppUserModelId *operator=;
};

typedef struct ILaunchSourceViewSizePreference {
    struct IUnknown IUnknown;
    HRESULT GetSourceViewToPosition;
    HRESULT GetSourceViewSizePreference;
    VOID ILaunchSourceViewSizePreference;
    VOID ILaunchSourceViewSizePreference;
    VOID ILaunchSourceViewSizePreference;
    struct ILaunchSourceViewSizePreference *operator=;
    struct ILaunchSourceViewSizePreference *operator=;
};

typedef struct ILaunchTargetMonitor {
    struct IUnknown IUnknown;
    HRESULT GetMonitor;
    VOID ILaunchTargetMonitor;
    VOID ILaunchTargetMonitor;
    VOID ILaunchTargetMonitor;
    struct ILaunchTargetMonitor *operator=;
    struct ILaunchTargetMonitor *operator=;
};

typedef struct ILaunchTargetViewSizePreference {
    struct IUnknown IUnknown;
    HRESULT GetTargetViewSizePreference;
    VOID ILaunchTargetViewSizePreference;
    VOID ILaunchTargetViewSizePreference;
    VOID ILaunchTargetViewSizePreference;
    struct ILaunchTargetViewSizePreference *operator=;
    struct ILaunchTargetViewSizePreference *operator=;
};

typedef struct ILaunchUIContext {
    struct IUnknown IUnknown;
    HRESULT SetAssociatedWindow;
    HRESULT SetTabGroupingPreference;
    VOID ILaunchUIContext;
    VOID ILaunchUIContext;
    VOID ILaunchUIContext;
    struct ILaunchUIContext *operator=;
    struct ILaunchUIContext *operator=;
};

typedef struct ILaunchUIContextProvider {
    struct IUnknown IUnknown;
    HRESULT UpdateContext;
    VOID ILaunchUIContextProvider;
    VOID ILaunchUIContextProvider;
    VOID ILaunchUIContextProvider;
    struct ILaunchUIContextProvider *operator=;
    struct ILaunchUIContextProvider *operator=;
};

typedef struct ILayoutStorage {
    struct IUnknown IUnknown;
    HRESULT LayoutScript;
    HRESULT BeginMonitor;
    HRESULT EndMonitor;
    HRESULT ReLayoutDocfile;
    HRESULT ReLayoutDocfileOnILockBytes;
    VOID ILayoutStorage;
    VOID ILayoutStorage;
    VOID ILayoutStorage;
    struct ILayoutStorage *operator=;
    struct ILayoutStorage *operator=;
};

typedef struct ILockBytes {
    struct IUnknown IUnknown;
    HRESULT ReadAt;
    HRESULT WriteAt;
    HRESULT Flush;
    HRESULT SetSize;
    HRESULT LockRegion;
    HRESULT UnlockRegion;
    HRESULT Stat;
    VOID ILockBytes;
    VOID ILockBytes;
    VOID ILockBytes;
    struct ILockBytes *operator=;
    struct ILockBytes *operator=;
};

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    UCHAR bAuxType;
    UCHAR bReserved;
    ULONG SymbolTableIndex;
    UCHAR rgbReserved[12];
};

typedef struct IMAGE_COR20_HEADER {
    ULONG cb;
    USHORT MajorRuntimeVersion;
    USHORT MinorRuntimeVersion;
    struct _IMAGE_DATA_DIRECTORY MetaData;
    ULONG Flags;
    ULONG EntryPointToken;
    ULONG EntryPointRVA;
    struct _IMAGE_DATA_DIRECTORY Resources;
    struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
    struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
    struct _IMAGE_DATA_DIRECTORY VTableFixups;
    struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
    struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

typedef struct IMCLR_DERIVATION_RULE {
    ULONG uFlags;
    SHORT sAlpha;
    SHORT sHue;
    SHORT sSat;
    SHORT sLum;
};

typedef struct IMCLR_HUE_PROPERTY_VARIANCE {
    FLOAT flSatVariance;
    FLOAT flLumVariance;
};

typedef struct IMCLR_RANGE_RULE {
    UCHAR cMin;
    UCHAR cMax;
    enum IMMERSIVE_COLOR_TYPE ctColor;
    struct IMCLR_DERIVATION_RULE drRule;
};

typedef struct IMMERSIVE_COLOR_NAMED_TYPES {
    PWCHAR pszColorType;
    enum IMMERSIVE_COLOR_TYPE colorType;
};

typedef struct IMMERSIVE_COLOR_PREFERENCE {
    ULONG crStartColor;
    ULONG crAccentColor;
};

typedef struct IMMERSIVE_COLOR_XAML_INFO {
    PWCHAR pszXamlColorType;
    PWCHAR pszXamlBrushType;
    ULONG cchImmersiveColor;
};

typedef struct IMPORT_OBJECT_HEADER {
    USHORT Sig1;
    USHORT Sig2;
    USHORT Version;
    USHORT Machine;
    ULONG TimeDateStamp;
    ULONG SizeOfData;
    USHORT Ordinal;
    USHORT Hint;
    USHORT Type : 2;
    USHORT NameType : 3;
    USHORT Reserved : 11;
};

typedef struct IMalloc {
    struct IUnknown IUnknown;
    PVOID Alloc;
    PVOID Realloc;
    VOID Free;
    ULONG64 GetSize;
    LONG DidAlloc;
    VOID HeapMinimize;
    VOID IMalloc;
    VOID IMalloc;
    VOID IMalloc;
    struct IMalloc *operator=;
    struct IMalloc *operator=;
};

typedef struct IMallocSpy {
    struct IUnknown IUnknown;
    ULONG64 PreAlloc;
    PVOID PostAlloc;
    PVOID PreFree;
    VOID PostFree;
    ULONG64 PreRealloc;
    PVOID PostRealloc;
    PVOID PreGetSize;
    ULONG64 PostGetSize;
    PVOID PreDidAlloc;
    LONG PostDidAlloc;
    VOID PreHeapMinimize;
    VOID PostHeapMinimize;
    VOID IMallocSpy;
    VOID IMallocSpy;
    VOID IMallocSpy;
    struct IMallocSpy *operator=;
    struct IMallocSpy *operator=;
};

typedef struct IMarshal {
    struct IUnknown IUnknown;
    HRESULT GetUnmarshalClass;
    HRESULT GetMarshalSizeMax;
    HRESULT MarshalInterface;
    HRESULT UnmarshalInterface;
    HRESULT ReleaseMarshalData;
    HRESULT DisconnectObject;
    VOID IMarshal;
    VOID IMarshal;
    VOID IMarshal;
    struct IMarshal *operator=;
    struct IMarshal *operator=;
};

typedef struct IMarshal2 {
    struct IMarshal IMarshal;
    VOID IMarshal2;
    VOID IMarshal2;
    VOID IMarshal2;
    struct IMarshal2 *operator=;
    struct IMarshal2 *operator=;
};

typedef struct IMarshalingStream {
    struct IStream IStream;
    HRESULT GetMarshalingContextAttribute;
    VOID IMarshalingStream;
    VOID IMarshalingStream;
    VOID IMarshalingStream;
    struct IMarshalingStream *operator=;
    struct IMarshalingStream *operator=;
};

typedef struct IMenuBand {
    struct IUnknown IUnknown;
    HRESULT IsMenuMessage;
    HRESULT TranslateMenuMessage;
    VOID IMenuBand;
    VOID IMenuBand;
    VOID IMenuBand;
    struct IMenuBand *operator=;
    struct IMenuBand *operator=;
};

typedef struct IMenuPopup {
    struct IDeskBar IDeskBar;
    HRESULT Popup;
    HRESULT OnSelect;
    HRESULT SetSubMenu;
    VOID IMenuPopup;
    VOID IMenuPopup;
    VOID IMenuPopup;
    struct IMenuPopup *operator=;
    struct IMenuPopup *operator=;
};

typedef struct IMessageFilter {
    struct IUnknown IUnknown;
    ULONG HandleInComingCall;
    ULONG RetryRejectedCall;
    ULONG MessagePending;
    VOID IMessageFilter;
    VOID IMessageFilter;
    VOID IMessageFilter;
    struct IMessageFilter *operator=;
    struct IMessageFilter *operator=;
};

typedef struct IMnemonics {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    VOID IMnemonics;
    VOID IMnemonics;
    VOID IMnemonics;
    struct IMnemonics *operator=;
    struct IMnemonics *operator=;
};

typedef struct IModalWindow {
    struct IUnknown IUnknown;
    HRESULT Show;
    VOID IModalWindow;
    VOID IModalWindow;
    VOID IModalWindow;
    struct IModalWindow *operator=;
    struct IModalWindow *operator=;
};

typedef struct IMoniker {
    struct IPersistStream IPersistStream;
    HRESULT BindToObject;
    HRESULT BindToStorage;
    HRESULT Reduce;
    HRESULT ComposeWith;
    HRESULT Enum;
    HRESULT IsEqual;
    HRESULT Hash;
    HRESULT IsRunning;
    HRESULT GetTimeOfLastChange;
    HRESULT Inverse;
    HRESULT CommonPrefixWith;
    HRESULT RelativePathTo;
    HRESULT GetDisplayName;
    HRESULT ParseDisplayName;
    HRESULT IsSystemMoniker;
    VOID IMoniker;
    VOID IMoniker;
    VOID IMoniker;
    struct IMoniker *operator=;
    struct IMoniker *operator=;
};

typedef struct IMonikerProp {
    struct IUnknown IUnknown;
    HRESULT PutProperty;
    VOID IMonikerProp;
    VOID IMonikerProp;
    VOID IMonikerProp;
    struct IMonikerProp *operator=;
    struct IMonikerProp *operator=;
};

typedef struct IMultiQI {
    struct IUnknown IUnknown;
    HRESULT QueryMultipleInterfaces;
    VOID IMultiQI;
    VOID IMultiQI;
    VOID IMultiQI;
    struct IMultiQI *operator=;
    struct IMultiQI *operator=;
};

typedef struct IMultipleValues {
    struct IPropertyValue IPropertyValue;
    HRESULT HasValue;
    HRESULT InsertValue;
    HRESULT AppendValue;
    HRESULT DeleteValue;
    HRESULT GetValueAt;
    HRESULT GetCount;
    VOID IMultipleValues;
    VOID IMultipleValues;
    VOID IMultipleValues;
    struct IMultipleValues *operator=;
    struct IMultipleValues *operator=;
};

typedef struct INERTIA_INFO {
    FLOAT directionX;
    FLOAT directionY;
    enum INERTIA_SOURCE sourceType;
};

typedef struct INERTIA_REGION {
    struct tagRECT region;
    FLOAT regionTransform[6];
};

typedef struct INPUT_SPACE {
    struct _LUID inputSpaceId;
    enum INPUT_SPACE_FLAGS flags;
};

typedef struct INPUT_SPACE_PAYLOAD {
    struct INPUT_SPACE inputSpace;
    ULONG cRegions;
    struct INPUT_SPACE_REGION *regions;
};

typedef struct INPUT_SPACE_REGION {
    struct tagRECT rcOutput;
    enum INPUT_SPACE_REGION_FLAGS flags;
    USHORT shellPixelDensity;
    USHORT rawPixelDensity;
    struct INPUT_SPACE_REGION_DISPLAY display;
};

typedef struct INPUT_SPACE_REGION_DISPLAY {
    struct _LUID AdapterLuid;
    ULONG VidPnSourceId;
    struct _LUID MappedAdapterLuid;
    ULONG MappedVidPnTargetId;
    ULONG orientation;
    struct tagRECT rcPixel;
    struct tagRECT rcPixelClip;
};

typedef struct INTERNALTHEMEENUM {
    struct _ENUMTHEMEPROPERTIES *petp;
    PVOID hSymbols;
};

typedef struct INameSpaceTreeControl {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT TreeAdvise;
    HRESULT TreeUnadvise;
    HRESULT AppendRoot;
    HRESULT InsertRoot;
    HRESULT RemoveRoot;
    HRESULT RemoveAllRoots;
    HRESULT GetRootItems;
    HRESULT SetItemState;
    HRESULT GetItemState;
    HRESULT GetSelectedItems;
    HRESULT GetItemCustomState;
    HRESULT SetItemCustomState;
    HRESULT EnsureItemVisible;
    HRESULT SetTheme;
    HRESULT GetNextItem;
    HRESULT HitTest;
    HRESULT GetItemRect;
    HRESULT CollapseAll;
    VOID INameSpaceTreeControl;
    VOID INameSpaceTreeControl;
    VOID INameSpaceTreeControl;
    struct INameSpaceTreeControl *operator=;
    struct INameSpaceTreeControl *operator=;
};

typedef struct INameSpaceTreeControlFolderCapabilities {
    struct IUnknown IUnknown;
    HRESULT GetFolderCapabilities;
    VOID INameSpaceTreeControlFolderCapabilities;
    VOID INameSpaceTreeControlFolderCapabilities;
    VOID INameSpaceTreeControlFolderCapabilities;
    struct INameSpaceTreeControlFolderCapabilities *operator=;
    struct INameSpaceTreeControlFolderCapabilities *operator=;
};

typedef struct INamedPropertyBag {
    struct IUnknown IUnknown;
    HRESULT ReadPropertyNPB;
    HRESULT WritePropertyNPB;
    HRESULT RemovePropertyNPB;
    VOID INamedPropertyBag;
    VOID INamedPropertyBag;
    VOID INamedPropertyBag;
    struct INamedPropertyBag *operator=;
    struct INamedPropertyBag *operator=;
};

typedef struct INamedPropertyStore {
    struct IUnknown IUnknown;
    HRESULT GetNamedValue;
    HRESULT SetNamedValue;
    HRESULT GetNameCount;
    HRESULT GetNameAt;
    VOID INamedPropertyStore;
    VOID INamedPropertyStore;
    VOID INamedPropertyStore;
    struct INamedPropertyStore *operator=;
    struct INamedPropertyStore *operator=;
};

typedef struct INamespaceWalk {
    struct IUnknown IUnknown;
    HRESULT Walk;
    HRESULT GetIDArrayResult;
    VOID INamespaceWalk;
    VOID INamespaceWalk;
    VOID INamespaceWalk;
    struct INamespaceWalk *operator=;
    struct INamespaceWalk *operator=;
};

typedef struct INamespaceWalkCB {
    struct IUnknown IUnknown;
    HRESULT FoundItem;
    HRESULT EnterFolder;
    HRESULT LeaveFolder;
    HRESULT InitializeProgressDialog;
    VOID INamespaceWalkCB;
    VOID INamespaceWalkCB;
    VOID INamespaceWalkCB;
    struct INamespaceWalkCB *operator=;
    struct INamespaceWalkCB *operator=;
};

typedef struct INamespaceWalkCB2 {
    struct INamespaceWalkCB INamespaceWalkCB;
    HRESULT WalkComplete;
    VOID INamespaceWalkCB2;
    VOID INamespaceWalkCB2;
    VOID INamespaceWalkCB2;
    struct INamespaceWalkCB2 *operator=;
    struct INamespaceWalkCB2 *operator=;
};

typedef struct INewMenuClient {
    struct IUnknown IUnknown;
    HRESULT IncludeItems;
    HRESULT SelectAndEditItem;
    VOID INewMenuClient;
    VOID INewMenuClient;
    VOID INewMenuClient;
    struct INewMenuClient *operator=;
    struct INewMenuClient *operator=;
};

typedef struct INewWDEvents {
    struct IWebWizardHost IWebWizardHost;
    HRESULT PassportAuthenticate;
    VOID INewWDEvents;
    VOID INewWDEvents;
    VOID INewWDEvents;
    struct INewWDEvents *operator=;
    struct INewWDEvents *operator=;
};

typedef struct INewWindowManager {
    struct IUnknown IUnknown;
    HRESULT EvaluateNewWindow;
    VOID INewWindowManager;
    VOID INewWindowManager;
    VOID INewWindowManager;
    struct INewWindowManager *operator=;
    struct INewWindowManager *operator=;
};

typedef struct INoMarshal {
    struct IUnknown IUnknown;
    VOID INoMarshal;
    VOID INoMarshal;
    VOID INoMarshal;
    struct INoMarshal *operator=;
    struct INoMarshal *operator=;
};

typedef struct IObjMgr {
    struct IUnknown IUnknown;
    HRESULT Append;
    HRESULT Remove;
    VOID IObjMgr;
    VOID IObjMgr;
    VOID IObjMgr;
    struct IObjMgr *operator=;
    struct IObjMgr *operator=;
};

typedef struct IObjectArray {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    VOID IObjectArray;
    VOID IObjectArray;
    VOID IObjectArray;
    struct IObjectArray *operator=;
    struct IObjectArray *operator=;
};

typedef struct IObjectCollection {
    struct IObjectArray IObjectArray;
    HRESULT AddObject;
    HRESULT AddFromArray;
    HRESULT RemoveObjectAt;
    HRESULT Clear;
    VOID IObjectCollection;
    VOID IObjectCollection;
    VOID IObjectCollection;
    struct IObjectCollection *operator=;
    struct IObjectCollection *operator=;
};

typedef struct IObjectProvider {
    struct IUnknown IUnknown;
    HRESULT QueryObject;
    VOID IObjectProvider;
    VOID IObjectProvider;
    VOID IObjectProvider;
    struct IObjectProvider *operator=;
    struct IObjectProvider *operator=;
};

typedef struct IObjectWithAppUserModelID {
    struct IUnknown IUnknown;
    HRESULT SetAppID;
    HRESULT GetAppID;
    VOID IObjectWithAppUserModelID;
    VOID IObjectWithAppUserModelID;
    VOID IObjectWithAppUserModelID;
    struct IObjectWithAppUserModelID *operator=;
    struct IObjectWithAppUserModelID *operator=;
};

typedef struct IObjectWithBackReferences {
    struct IUnknown IUnknown;
    HRESULT RemoveBackReferences;
    VOID IObjectWithBackReferences;
    VOID IObjectWithBackReferences;
    VOID IObjectWithBackReferences;
    struct IObjectWithBackReferences *operator=;
    struct IObjectWithBackReferences *operator=;
};

typedef struct IObjectWithCancelEvent {
    struct IUnknown IUnknown;
    HRESULT GetCancelEvent;
    VOID IObjectWithCancelEvent;
    VOID IObjectWithCancelEvent;
    VOID IObjectWithCancelEvent;
    struct IObjectWithCancelEvent *operator=;
    struct IObjectWithCancelEvent *operator=;
};

typedef struct IObjectWithClassIdentity {
    struct IUnknown IUnknown;
    HRESULT GetClassIdentity;
    VOID IObjectWithClassIdentity;
    VOID IObjectWithClassIdentity;
    VOID IObjectWithClassIdentity;
    struct IObjectWithClassIdentity *operator=;
    struct IObjectWithClassIdentity *operator=;
};

typedef struct IObjectWithFolderEnumMode {
    struct IUnknown IUnknown;
    HRESULT SetMode;
    HRESULT GetMode;
    VOID IObjectWithFolderEnumMode;
    VOID IObjectWithFolderEnumMode;
    VOID IObjectWithFolderEnumMode;
    struct IObjectWithFolderEnumMode *operator=;
    struct IObjectWithFolderEnumMode *operator=;
};

typedef struct IObjectWithProgID {
    struct IUnknown IUnknown;
    HRESULT SetProgID;
    HRESULT GetProgID;
    VOID IObjectWithProgID;
    VOID IObjectWithProgID;
    VOID IObjectWithProgID;
    struct IObjectWithProgID *operator=;
    struct IObjectWithProgID *operator=;
};

typedef struct IObjectWithPropertyKey {
    struct IUnknown IUnknown;
    HRESULT SetPropertyKey;
    HRESULT GetPropertyKey;
    VOID IObjectWithPropertyKey;
    VOID IObjectWithPropertyKey;
    VOID IObjectWithPropertyKey;
    struct IObjectWithPropertyKey *operator=;
    struct IObjectWithPropertyKey *operator=;
};

typedef struct IObjectWithSelection {
    struct IUnknown IUnknown;
    HRESULT SetSelection;
    HRESULT GetSelection;
    VOID IObjectWithSelection;
    VOID IObjectWithSelection;
    VOID IObjectWithSelection;
    struct IObjectWithSelection *operator=;
    struct IObjectWithSelection *operator=;
};

typedef struct IObjectWithSite {
    struct IUnknown IUnknown;
    HRESULT SetSite;
    HRESULT GetSite;
    VOID IObjectWithSite;
    VOID IObjectWithSite;
    VOID IObjectWithSite;
    struct IObjectWithSite *operator=;
    struct IObjectWithSite *operator=;
};

typedef struct IOleAdviseHolder {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT SendOnRename;
    HRESULT SendOnSave;
    HRESULT SendOnClose;
    VOID IOleAdviseHolder;
    VOID IOleAdviseHolder;
    VOID IOleAdviseHolder;
    struct IOleAdviseHolder *operator=;
    struct IOleAdviseHolder *operator=;
};

typedef struct IOleCache {
    struct IUnknown IUnknown;
    HRESULT Cache;
    HRESULT Uncache;
    HRESULT EnumCache;
    HRESULT InitCache;
    HRESULT SetData;
    VOID IOleCache;
    VOID IOleCache;
    VOID IOleCache;
    struct IOleCache *operator=;
    struct IOleCache *operator=;
};

typedef struct IOleCache2 {
    struct IOleCache IOleCache;
    HRESULT UpdateCache;
    HRESULT DiscardCache;
    VOID IOleCache2;
    VOID IOleCache2;
    VOID IOleCache2;
    struct IOleCache2 *operator=;
    struct IOleCache2 *operator=;
};

typedef struct IOleCacheControl {
    struct IUnknown IUnknown;
    HRESULT OnRun;
    HRESULT OnStop;
    VOID IOleCacheControl;
    VOID IOleCacheControl;
    VOID IOleCacheControl;
    struct IOleCacheControl *operator=;
    struct IOleCacheControl *operator=;
};

typedef struct IOleClientSite {
    struct IUnknown IUnknown;
    HRESULT SaveObject;
    HRESULT GetMoniker;
    HRESULT GetContainer;
    HRESULT ShowObject;
    HRESULT OnShowWindow;
    HRESULT RequestNewObjectLayout;
    VOID IOleClientSite;
    VOID IOleClientSite;
    VOID IOleClientSite;
    struct IOleClientSite *operator=;
    struct IOleClientSite *operator=;
};

typedef struct IOleCommandTarget {
    struct IUnknown IUnknown;
    HRESULT QueryStatus;
    HRESULT Exec;
    VOID IOleCommandTarget;
    VOID IOleCommandTarget;
    VOID IOleCommandTarget;
    struct IOleCommandTarget *operator=;
    struct IOleCommandTarget *operator=;
};

typedef struct IOleContainer {
    struct IParseDisplayName IParseDisplayName;
    HRESULT EnumObjects;
    HRESULT LockContainer;
    VOID IOleContainer;
    VOID IOleContainer;
    VOID IOleContainer;
    struct IOleContainer *operator=;
    struct IOleContainer *operator=;
};

typedef struct IOleControl {
    struct IUnknown IUnknown;
    HRESULT GetControlInfo;
    HRESULT OnMnemonic;
    HRESULT OnAmbientPropertyChange;
    HRESULT FreezeEvents;
    VOID IOleControl;
    VOID IOleControl;
    VOID IOleControl;
    struct IOleControl *operator=;
    struct IOleControl *operator=;
};

typedef struct IOleControlSite {
    struct IUnknown IUnknown;
    HRESULT OnControlInfoChanged;
    HRESULT LockInPlaceActive;
    HRESULT GetExtendedControl;
    HRESULT TransformCoords;
    HRESULT TranslateAcceleratorW;
    HRESULT OnFocus;
    HRESULT ShowPropertyFrame;
    VOID IOleControlSite;
    VOID IOleControlSite;
    VOID IOleControlSite;
    struct IOleControlSite *operator=;
    struct IOleControlSite *operator=;
};

typedef struct IOleDocument {
    struct IUnknown IUnknown;
    HRESULT CreateView;
    HRESULT GetDocMiscStatus;
    HRESULT EnumViews;
    VOID IOleDocument;
    VOID IOleDocument;
    VOID IOleDocument;
    struct IOleDocument *operator=;
    struct IOleDocument *operator=;
};

typedef struct IOleDocumentSite {
    struct IUnknown IUnknown;
    HRESULT ActivateMe;
    VOID IOleDocumentSite;
    VOID IOleDocumentSite;
    VOID IOleDocumentSite;
    struct IOleDocumentSite *operator=;
    struct IOleDocumentSite *operator=;
};

typedef struct IOleDocumentView {
    struct IUnknown IUnknown;
    HRESULT SetInPlaceSite;
    HRESULT GetInPlaceSite;
    HRESULT GetDocument;
    HRESULT SetRect;
    HRESULT GetRect;
    HRESULT SetRectComplex;
    HRESULT Show;
    HRESULT UIActivate;
    HRESULT Open;
    HRESULT CloseView;
    HRESULT SaveViewState;
    HRESULT ApplyViewState;
    HRESULT Clone;
    VOID IOleDocumentView;
    VOID IOleDocumentView;
    VOID IOleDocumentView;
    struct IOleDocumentView *operator=;
    struct IOleDocumentView *operator=;
};

typedef struct IOleInPlaceActiveObject {
    struct IOleWindow IOleWindow;
    HRESULT TranslateAcceleratorW;
    HRESULT OnFrameWindowActivate;
    HRESULT OnDocWindowActivate;
    HRESULT ResizeBorder;
    HRESULT EnableModeless;
    VOID IOleInPlaceActiveObject;
    VOID IOleInPlaceActiveObject;
    VOID IOleInPlaceActiveObject;
    struct IOleInPlaceActiveObject *operator=;
    struct IOleInPlaceActiveObject *operator=;
};

typedef struct IOleInPlaceFrame {
    struct IOleInPlaceUIWindow IOleInPlaceUIWindow;
    HRESULT InsertMenus;
    HRESULT SetMenu;
    HRESULT RemoveMenus;
    HRESULT SetStatusText;
    HRESULT EnableModeless;
    HRESULT TranslateAcceleratorW;
    VOID IOleInPlaceFrame;
    VOID IOleInPlaceFrame;
    VOID IOleInPlaceFrame;
    struct IOleInPlaceFrame *operator=;
    struct IOleInPlaceFrame *operator=;
};

typedef struct IOleInPlaceObject {
    struct IOleWindow IOleWindow;
    HRESULT InPlaceDeactivate;
    HRESULT UIDeactivate;
    HRESULT SetObjectRects;
    HRESULT ReactivateAndUndo;
    VOID IOleInPlaceObject;
    VOID IOleInPlaceObject;
    VOID IOleInPlaceObject;
    struct IOleInPlaceObject *operator=;
    struct IOleInPlaceObject *operator=;
};

typedef struct IOleInPlaceObjectWindowless {
    struct IOleInPlaceObject IOleInPlaceObject;
    HRESULT OnWindowMessage;
    HRESULT GetDropTarget;
    VOID IOleInPlaceObjectWindowless;
    VOID IOleInPlaceObjectWindowless;
    VOID IOleInPlaceObjectWindowless;
    struct IOleInPlaceObjectWindowless *operator=;
    struct IOleInPlaceObjectWindowless *operator=;
};

typedef struct IOleInPlaceSite {
    struct IOleWindow IOleWindow;
    HRESULT CanInPlaceActivate;
    HRESULT OnInPlaceActivate;
    HRESULT OnUIActivate;
    HRESULT GetWindowContext;
    HRESULT Scroll;
    HRESULT OnUIDeactivate;
    HRESULT OnInPlaceDeactivate;
    HRESULT DiscardUndoState;
    HRESULT DeactivateAndUndo;
    HRESULT OnPosRectChange;
    VOID IOleInPlaceSite;
    VOID IOleInPlaceSite;
    VOID IOleInPlaceSite;
    struct IOleInPlaceSite *operator=;
    struct IOleInPlaceSite *operator=;
};

typedef struct IOleInPlaceSiteEx {
    struct IOleInPlaceSite IOleInPlaceSite;
    HRESULT OnInPlaceActivateEx;
    HRESULT OnInPlaceDeactivateEx;
    HRESULT RequestUIActivate;
    VOID IOleInPlaceSiteEx;
    VOID IOleInPlaceSiteEx;
    VOID IOleInPlaceSiteEx;
    struct IOleInPlaceSiteEx *operator=;
    struct IOleInPlaceSiteEx *operator=;
};

typedef struct IOleInPlaceSiteWindowless {
    struct IOleInPlaceSiteEx IOleInPlaceSiteEx;
    HRESULT CanWindowlessActivate;
    HRESULT GetCapture;
    HRESULT SetCapture;
    HRESULT GetFocus;
    HRESULT SetFocus;
    HRESULT GetDC;
    HRESULT ReleaseDC;
    HRESULT InvalidateRect;
    HRESULT InvalidateRgn;
    HRESULT ScrollRect;
    HRESULT AdjustRect;
    HRESULT OnDefWindowMessage;
    VOID IOleInPlaceSiteWindowless;
    VOID IOleInPlaceSiteWindowless;
    VOID IOleInPlaceSiteWindowless;
    struct IOleInPlaceSiteWindowless *operator=;
    struct IOleInPlaceSiteWindowless *operator=;
};

typedef struct IOleInPlaceUIWindow {
    struct IOleWindow IOleWindow;
    HRESULT GetBorder;
    HRESULT RequestBorderSpace;
    HRESULT SetBorderSpace;
    HRESULT SetActiveObject;
    VOID IOleInPlaceUIWindow;
    VOID IOleInPlaceUIWindow;
    VOID IOleInPlaceUIWindow;
    struct IOleInPlaceUIWindow *operator=;
    struct IOleInPlaceUIWindow *operator=;
};

typedef struct IOleItemContainer {
    struct IOleContainer IOleContainer;
    HRESULT GetObjectW;
    HRESULT GetObjectStorage;
    HRESULT IsRunning;
    VOID IOleItemContainer;
    VOID IOleItemContainer;
    VOID IOleItemContainer;
    struct IOleItemContainer *operator=;
    struct IOleItemContainer *operator=;
};

typedef struct IOleLink {
    struct IUnknown IUnknown;
    HRESULT SetUpdateOptions;
    HRESULT GetUpdateOptions;
    HRESULT SetSourceMoniker;
    HRESULT GetSourceMoniker;
    HRESULT SetSourceDisplayName;
    HRESULT GetSourceDisplayName;
    HRESULT BindToSource;
    HRESULT BindIfRunning;
    HRESULT GetBoundSource;
    HRESULT UnbindSource;
    HRESULT Update;
    VOID IOleLink;
    VOID IOleLink;
    VOID IOleLink;
    struct IOleLink *operator=;
    struct IOleLink *operator=;
};

typedef struct IOleObject {
    struct IUnknown IUnknown;
    HRESULT SetClientSite;
    HRESULT GetClientSite;
    HRESULT SetHostNames;
    HRESULT Close;
    HRESULT SetMoniker;
    HRESULT GetMoniker;
    HRESULT InitFromData;
    HRESULT GetClipboardData;
    HRESULT DoVerb;
    HRESULT EnumVerbs;
    HRESULT Update;
    HRESULT IsUpToDate;
    HRESULT GetUserClassID;
    HRESULT GetUserType;
    HRESULT SetExtent;
    HRESULT GetExtent;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT EnumAdvise;
    HRESULT GetMiscStatus;
    HRESULT SetColorScheme;
    VOID IOleObject;
    VOID IOleObject;
    VOID IOleObject;
    struct IOleObject *operator=;
    struct IOleObject *operator=;
};

typedef struct IOleParentUndoUnit {
    struct IOleUndoUnit IOleUndoUnit;
    HRESULT Open;
    HRESULT Close;
    HRESULT Add;
    HRESULT FindUnit;
    HRESULT GetParentState;
    VOID IOleParentUndoUnit;
    VOID IOleParentUndoUnit;
    VOID IOleParentUndoUnit;
    struct IOleParentUndoUnit *operator=;
    struct IOleParentUndoUnit *operator=;
};

typedef struct IOleUndoManager {
    struct IUnknown IUnknown;
    HRESULT Open;
    HRESULT Close;
    HRESULT Add;
    HRESULT GetOpenParentState;
    HRESULT DiscardFrom;
    HRESULT UndoTo;
    HRESULT RedoTo;
    HRESULT EnumUndoable;
    HRESULT EnumRedoable;
    HRESULT GetLastUndoDescription;
    HRESULT GetLastRedoDescription;
    HRESULT Enable;
    VOID IOleUndoManager;
    VOID IOleUndoManager;
    VOID IOleUndoManager;
    struct IOleUndoManager *operator=;
    struct IOleUndoManager *operator=;
};

typedef struct IOleUndoUnit {
    struct IUnknown IUnknown;
    HRESULT Do;
    HRESULT GetDescription;
    HRESULT GetUnitType;
    HRESULT OnNextAdd;
    VOID IOleUndoUnit;
    VOID IOleUndoUnit;
    VOID IOleUndoUnit;
    struct IOleUndoUnit *operator=;
    struct IOleUndoUnit *operator=;
};

typedef struct IOleWindow {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    HRESULT ContextSensitiveHelp;
    VOID IOleWindow;
    VOID IOleWindow;
    VOID IOleWindow;
    struct IOleWindow *operator=;
    struct IOleWindow *operator=;
};

typedef struct IOpenControlPanel {
    struct IUnknown IUnknown;
    HRESULT Open;
    HRESULT GetPath;
    HRESULT GetCurrentView;
    VOID IOpenControlPanel;
    VOID IOpenControlPanel;
    VOID IOpenControlPanel;
    struct IOpenControlPanel *operator=;
    struct IOpenControlPanel *operator=;
};

typedef struct IOpenSearchSource {
    struct IUnknown IUnknown;
    HRESULT GetResults;
    VOID IOpenSearchSource;
    VOID IOpenSearchSource;
    VOID IOpenSearchSource;
    struct IOpenSearchSource *operator=;
    struct IOpenSearchSource *operator=;
};

typedef struct IOperationsProgressDialog {
    struct IUnknown IUnknown;
    HRESULT StartProgressDialog;
    HRESULT StopProgressDialog;
    HRESULT SetOperation;
    HRESULT SetMode;
    HRESULT UpdateProgress;
    HRESULT UpdateLocations;
    HRESULT ResetTimer;
    HRESULT PauseTimer;
    HRESULT ResumeTimer;
    HRESULT GetMilliseconds;
    HRESULT GetOperationStatus;
    VOID IOperationsProgressDialog;
    VOID IOperationsProgressDialog;
    VOID IOperationsProgressDialog;
    struct IOperationsProgressDialog *operator=;
    struct IOperationsProgressDialog *operator=;
};

typedef struct IOplockStorage {
    struct IUnknown IUnknown;
    HRESULT CreateStorageEx;
    HRESULT OpenStorageEx;
    VOID IOplockStorage;
    VOID IOplockStorage;
    VOID IOplockStorage;
    struct IOplockStorage *operator=;
    struct IOplockStorage *operator=;
};

typedef struct IOrderList {
    struct IUnknown IUnknown;
    HRESULT GetOrderList;
    HRESULT SetOrderList;
    HRESULT FreeOrderList;
    HRESULT SortOrderList;
    HRESULT AllocOrderItem;
    HRESULT FreeOrderItem;
    VOID IOrderList;
    VOID IOrderList;
    VOID IOrderList;
    struct IOrderList *operator=;
    struct IOrderList *operator=;
};

typedef struct IOrderList2 {
    struct IOrderList IOrderList;
    HRESULT GetOrderList;
    HRESULT SetOrderList;
    HRESULT FreeOrderList;
    HRESULT SortOrderList;
    HRESULT AllocOrderItem;
    HRESULT FreeOrderItem;
    HRESULT LoadFromStream;
    HRESULT SaveToStream;
    VOID IOrderList2;
    VOID IOrderList2;
    VOID IOrderList2;
    struct IOrderList2 *operator=;
    struct IOrderList2 *operator=;
};

typedef struct IPSFactoryBuffer {
    struct IUnknown IUnknown;
    HRESULT CreateProxy;
    HRESULT CreateStub;
    VOID IPSFactoryBuffer;
    VOID IPSFactoryBuffer;
    VOID IPSFactoryBuffer;
    struct IPSFactoryBuffer *operator=;
    struct IPSFactoryBuffer *operator=;
};

typedef struct IPackageDebugSettings {
    struct IUnknown IUnknown;
    HRESULT EnableDebugging;
    HRESULT DisableDebugging;
    HRESULT Suspend;
    HRESULT Resume;
    HRESULT TerminateAllProcesses;
    HRESULT SetTargetSessionId;
    HRESULT EnumerateBackgroundTasks;
    HRESULT ActivateBackgroundTask;
    HRESULT StartServicing;
    HRESULT StopServicing;
    HRESULT StartSessionRedirection;
    HRESULT StopSessionRedirection;
    HRESULT GetPackageExecutionState;
    HRESULT RegisterForPackageStateChanges;
    HRESULT UnregisterForPackageStateChanges;
    VOID IPackageDebugSettings;
    VOID IPackageDebugSettings;
    VOID IPackageDebugSettings;
    struct IPackageDebugSettings *operator=;
    struct IPackageDebugSettings *operator=;
};

typedef struct IPackageDebugSettings2 {
    struct IPackageDebugSettings IPackageDebugSettings;
    HRESULT EnumerateApps;
    VOID IPackageDebugSettings2;
    VOID IPackageDebugSettings2;
    VOID IPackageDebugSettings2;
    struct IPackageDebugSettings2 *operator=;
    struct IPackageDebugSettings2 *operator=;
};

typedef struct IPackageExecutionStateChangeNotification {
    struct IUnknown IUnknown;
    HRESULT OnStateChanged;
    VOID IPackageExecutionStateChangeNotification;
    VOID IPackageExecutionStateChangeNotification;
    VOID IPackageExecutionStateChangeNotification;
    struct IPackageExecutionStateChangeNotification *operator=;
    struct IPackageExecutionStateChangeNotification *operator=;
};

typedef struct IPaintBuffer {
Error: Could not get member name.
    struct HDC__ *GetTargetDC;
    HRESULT GetTargetRect;
    struct HDC__ *GetDC;
    HRESULT GetBits;
    HRESULT Clear;
    HRESULT SetAlpha;
    ULONG GetBitsPerPixel;
    LONG GetBitmapDpiScaleValue;
    VOID IPaintBuffer;
    VOID IPaintBuffer;
    VOID IPaintBuffer;
    struct IPaintBuffer *operator=;
    struct IPaintBuffer *operator=;
};

typedef struct IParentAndItem {
    struct IUnknown IUnknown;
    HRESULT SetParentAndItem;
    HRESULT GetParentAndItem;
    VOID IParentAndItem;
    VOID IParentAndItem;
    VOID IParentAndItem;
    struct IParentAndItem *operator=;
    struct IParentAndItem *operator=;
};

typedef struct IParseAndCreateItem {
    struct IUnknown IUnknown;
    HRESULT SetItem;
    HRESULT GetItem;
    VOID IParseAndCreateItem;
    VOID IParseAndCreateItem;
    VOID IParseAndCreateItem;
    struct IParseAndCreateItem *operator=;
    struct IParseAndCreateItem *operator=;
};

typedef struct IParseDisplayName {
    struct IUnknown IUnknown;
    HRESULT ParseDisplayName;
    VOID IParseDisplayName;
    VOID IParseDisplayName;
    VOID IParseDisplayName;
    struct IParseDisplayName *operator=;
    struct IParseDisplayName *operator=;
};

typedef struct IPerPropertyBrowsing {
    struct IUnknown IUnknown;
    HRESULT GetDisplayString;
    HRESULT MapPropertyToPage;
    HRESULT GetPredefinedStrings;
    HRESULT GetPredefinedValue;
    VOID IPerPropertyBrowsing;
    VOID IPerPropertyBrowsing;
    VOID IPerPropertyBrowsing;
    struct IPerPropertyBrowsing *operator=;
    struct IPerPropertyBrowsing *operator=;
};

typedef struct IPersist {
    struct IUnknown IUnknown;
    HRESULT GetClassID;
    VOID IPersist;
    VOID IPersist;
    VOID IPersist;
    struct IPersist *operator=;
    struct IPersist *operator=;
};

typedef struct IPersistFile {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT GetCurFile;
    VOID IPersistFile;
    VOID IPersistFile;
    VOID IPersistFile;
    struct IPersistFile *operator=;
    struct IPersistFile *operator=;
};

typedef struct IPersistFolder {
    struct IPersist IPersist;
    HRESULT Initialize;
    VOID IPersistFolder;
    VOID IPersistFolder;
    VOID IPersistFolder;
    struct IPersistFolder *operator=;
    struct IPersistFolder *operator=;
};

typedef struct IPersistFolder2 {
    struct IPersistFolder IPersistFolder;
    HRESULT GetCurFolder;
    VOID IPersistFolder2;
    VOID IPersistFolder2;
    VOID IPersistFolder2;
    struct IPersistFolder2 *operator=;
    struct IPersistFolder2 *operator=;
};

typedef struct IPersistFolder3 {
    struct IPersistFolder2 IPersistFolder2;
    HRESULT InitializeEx;
    HRESULT GetFolderTargetInfo;
    VOID IPersistFolder3;
    VOID IPersistFolder3;
    VOID IPersistFolder3;
    struct IPersistFolder3 *operator=;
    struct IPersistFolder3 *operator=;
};

typedef struct IPersistIDList {
    struct IPersist IPersist;
    HRESULT SetIDList;
    HRESULT GetIDList;
    VOID IPersistIDList;
    VOID IPersistIDList;
    VOID IPersistIDList;
    struct IPersistIDList *operator=;
    struct IPersistIDList *operator=;
};

typedef struct IPersistMemory {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    HRESULT InitNew;
    VOID IPersistMemory;
    VOID IPersistMemory;
    VOID IPersistMemory;
    struct IPersistMemory *operator=;
    struct IPersistMemory *operator=;
};

typedef struct IPersistMoniker {
    struct IUnknown IUnknown;
    HRESULT GetClassID;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT GetCurMoniker;
    VOID IPersistMoniker;
    VOID IPersistMoniker;
    VOID IPersistMoniker;
    struct IPersistMoniker *operator=;
    struct IPersistMoniker *operator=;
};

typedef struct IPersistPropertyBag {
    struct IPersist IPersist;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    VOID IPersistPropertyBag;
    VOID IPersistPropertyBag;
    VOID IPersistPropertyBag;
    struct IPersistPropertyBag *operator=;
    struct IPersistPropertyBag *operator=;
};

typedef struct IPersistPropertyBag2 {
    struct IPersist IPersist;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    HRESULT IsDirty;
    VOID IPersistPropertyBag2;
    VOID IPersistPropertyBag2;
    VOID IPersistPropertyBag2;
    struct IPersistPropertyBag2 *operator=;
    struct IPersistPropertyBag2 *operator=;
};

typedef struct IPersistSerializedPropStorage {
    struct IUnknown IUnknown;
    HRESULT SetFlags;
    HRESULT SetPropertyStorage;
    HRESULT GetPropertyStorage;
    VOID IPersistSerializedPropStorage;
    VOID IPersistSerializedPropStorage;
    VOID IPersistSerializedPropStorage;
    struct IPersistSerializedPropStorage *operator=;
    struct IPersistSerializedPropStorage *operator=;
};

typedef struct IPersistSerializedPropStorage2 {
    struct IPersistSerializedPropStorage IPersistSerializedPropStorage;
    HRESULT GetPropertyStorageSize;
    HRESULT GetPropertyStorageBuffer;
    VOID IPersistSerializedPropStorage2;
    VOID IPersistSerializedPropStorage2;
    VOID IPersistSerializedPropStorage2;
    struct IPersistSerializedPropStorage2 *operator=;
    struct IPersistSerializedPropStorage2 *operator=;
};

typedef struct IPersistSerializedPropStoragePriv {
    struct IUnknown IUnknown;
    HRESULT SetFlagsInternal;
    HRESULT SetDirtyState;
    VOID IPersistSerializedPropStoragePriv;
    VOID IPersistSerializedPropStoragePriv;
    VOID IPersistSerializedPropStoragePriv;
    struct IPersistSerializedPropStoragePriv *operator=;
    struct IPersistSerializedPropStoragePriv *operator=;
};

typedef struct IPersistStorage {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT InitNew;
    HRESULT Load;
    HRESULT Save;
    HRESULT SaveCompleted;
    HRESULT HandsOffStorage;
    VOID IPersistStorage;
    VOID IPersistStorage;
    VOID IPersistStorage;
    struct IPersistStorage *operator=;
    struct IPersistStorage *operator=;
};

typedef struct IPersistStream {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    VOID IPersistStream;
    VOID IPersistStream;
    VOID IPersistStream;
    struct IPersistStream *operator=;
    struct IPersistStream *operator=;
};

typedef struct IPersistStreamInit {
    struct IPersist IPersist;
    HRESULT IsDirty;
    HRESULT Load;
    HRESULT Save;
    HRESULT GetSizeMax;
    HRESULT InitNew;
    VOID IPersistStreamInit;
    VOID IPersistStreamInit;
    VOID IPersistStreamInit;
    struct IPersistStreamInit *operator=;
    struct IPersistStreamInit *operator=;
};

typedef struct IPicture {
    struct IUnknown IUnknown;
    HRESULT get_Handle;
    HRESULT get_hPal;
    HRESULT get_Type;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT Render;
    HRESULT set_hPal;
    HRESULT get_CurDC;
    HRESULT SelectPicture;
    HRESULT get_KeepOriginalFormat;
    HRESULT put_KeepOriginalFormat;
    HRESULT PictureChanged;
    HRESULT SaveAsFile;
    HRESULT get_Attributes;
    VOID IPicture;
    VOID IPicture;
    VOID IPicture;
    struct IPicture *operator=;
    struct IPicture *operator=;
};

typedef struct IPicture2 {
    struct IUnknown IUnknown;
    HRESULT get_Handle;
    HRESULT get_hPal;
    HRESULT get_Type;
    HRESULT get_Width;
    HRESULT get_Height;
    HRESULT Render;
    HRESULT set_hPal;
    HRESULT get_CurDC;
    HRESULT SelectPicture;
    HRESULT get_KeepOriginalFormat;
    HRESULT put_KeepOriginalFormat;
    HRESULT PictureChanged;
    HRESULT SaveAsFile;
    HRESULT get_Attributes;
    VOID IPicture2;
    VOID IPicture2;
    VOID IPicture2;
    struct IPicture2 *operator=;
    struct IPicture2 *operator=;
};

typedef struct IPictureDisp {
    struct IDispatch IDispatch;
    VOID IPictureDisp;
    VOID IPictureDisp;
    VOID IPictureDisp;
    struct IPictureDisp *operator=;
    struct IPictureDisp *operator=;
};

typedef struct IPipeByte {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeByte;
    VOID IPipeByte;
    VOID IPipeByte;
    struct IPipeByte *operator=;
    struct IPipeByte *operator=;
};

typedef struct IPipeDouble {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeDouble;
    VOID IPipeDouble;
    VOID IPipeDouble;
    struct IPipeDouble *operator=;
    struct IPipeDouble *operator=;
};

typedef struct IPipeLong {
    struct IUnknown IUnknown;
    HRESULT Pull;
    HRESULT Push;
    VOID IPipeLong;
    VOID IPipeLong;
    VOID IPipeLong;
    struct IPipeLong *operator=;
    struct IPipeLong *operator=;
};

typedef struct IPointerInactive {
    struct IUnknown IUnknown;
    HRESULT GetActivationPolicy;
    HRESULT OnInactiveMouseMove;
    HRESULT OnInactiveSetCursor;
    VOID IPointerInactive;
    VOID IPointerInactive;
    VOID IPointerInactive;
    struct IPointerInactive *operator=;
    struct IPointerInactive *operator=;
};

typedef struct IPreviewHandler {
    struct IUnknown IUnknown;
    HRESULT SetWindow;
    HRESULT SetRect;
    HRESULT DoPreview;
    HRESULT Unload;
    HRESULT SetFocus;
    HRESULT QueryFocus;
    HRESULT TranslateAcceleratorW;
    VOID IPreviewHandler;
    VOID IPreviewHandler;
    VOID IPreviewHandler;
    struct IPreviewHandler *operator=;
    struct IPreviewHandler *operator=;
};

typedef struct IPreviewHandlerFrame {
    struct IUnknown IUnknown;
    HRESULT GetWindowContext;
    HRESULT TranslateAcceleratorW;
    VOID IPreviewHandlerFrame;
    VOID IPreviewHandlerFrame;
    VOID IPreviewHandlerFrame;
    struct IPreviewHandlerFrame *operator=;
    struct IPreviewHandlerFrame *operator=;
};

typedef struct IPreviewHandlerVisuals {
    struct IUnknown IUnknown;
    HRESULT SetBackgroundColor;
    HRESULT SetFont;
    HRESULT SetTextColor;
    VOID IPreviewHandlerVisuals;
    VOID IPreviewHandlerVisuals;
    VOID IPreviewHandlerVisuals;
    struct IPreviewHandlerVisuals *operator=;
    struct IPreviewHandlerVisuals *operator=;
};

typedef struct IPreviewItem {
    struct IRelatedItem IRelatedItem;
    VOID IPreviewItem;
    VOID IPreviewItem;
    VOID IPreviewItem;
    struct IPreviewItem *operator=;
    struct IPreviewItem *operator=;
};

typedef struct IPrint {
    struct IUnknown IUnknown;
    HRESULT SetInitialPageNum;
    HRESULT GetPageInfo;
    HRESULT Print;
    VOID IPrint;
    VOID IPrint;
    VOID IPrint;
    struct IPrint *operator=;
    struct IPrint *operator=;
};

typedef struct IPrintDialogCallback {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT InitDone;
    HRESULT SelectionChange;
    HRESULT HandleMessage;
    VOID IPrintDialogCallback;
    VOID IPrintDialogCallback;
    VOID IPrintDialogCallback;
    struct IPrintDialogCallback *operator=;
    struct IPrintDialogCallback *operator=;
};

typedef struct IPrintDialogServices {
    struct IUnknown IUnknown;
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    HRESULT GetCurrentDevMode;
    HRESULT GetCurrentPrinterName;
    HRESULT GetCurrentPortName;
    VOID IPrintDialogServices;
    VOID IPrintDialogServices;
    VOID IPrintDialogServices;
    struct IPrintDialogServices *operator=;
    struct IPrintDialogServices *operator=;
};

typedef struct IProcessInitControl {
    struct IUnknown IUnknown;
    HRESULT ResetInitializerTimeout;
    VOID IProcessInitControl;
    VOID IProcessInitControl;
    VOID IProcessInitControl;
    struct IProcessInitControl *operator=;
    struct IProcessInitControl *operator=;
};

typedef struct IProcessLock {
    struct IUnknown IUnknown;
    ULONG AddRefOnProcess;
    ULONG ReleaseRefOnProcess;
    VOID IProcessLock;
    VOID IProcessLock;
    VOID IProcessLock;
    struct IProcessLock *operator=;
    struct IProcessLock *operator=;
};

typedef struct IProduceAggregateMultipleValues {
    struct IUnknown IUnknown;
    HRESULT AggregateMultipleValues;
    HRESULT GetUnionOfMultipleValues;
    HRESULT GetIntersectionOfMultipleValues;
    HRESULT SortMultipleValues;
    VOID IProduceAggregateMultipleValues;
    VOID IProduceAggregateMultipleValues;
    VOID IProduceAggregateMultipleValues;
    struct IProduceAggregateMultipleValues *operator=;
    struct IProduceAggregateMultipleValues *operator=;
};

typedef struct IProfferService {
    struct IUnknown IUnknown;
    HRESULT ProfferService;
    HRESULT RevokeService;
    VOID IProfferService;
    VOID IProfferService;
    VOID IProfferService;
    struct IProfferService *operator=;
    struct IProfferService *operator=;
};

typedef struct IProgressDialog {
    struct IUnknown IUnknown;
    HRESULT StartProgressDialog;
    HRESULT StopProgressDialog;
    HRESULT SetTitle;
    HRESULT SetAnimation;
    LONG HasUserCancelled;
    HRESULT SetProgress;
    HRESULT SetProgress64;
    HRESULT SetLine;
    HRESULT SetCancelMsg;
    HRESULT Timer;
    VOID IProgressDialog;
    VOID IProgressDialog;
    VOID IProgressDialog;
    struct IProgressDialog *operator=;
    struct IProgressDialog *operator=;
};

typedef struct IProgressNotify {
    struct IUnknown IUnknown;
    HRESULT OnProgress;
    VOID IProgressNotify;
    VOID IProgressNotify;
    VOID IProgressNotify;
    struct IProgressNotify *operator=;
    struct IProgressNotify *operator=;
};

typedef struct IPropertyBag {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    VOID IPropertyBag;
    VOID IPropertyBag;
    VOID IPropertyBag;
    struct IPropertyBag *operator=;
    struct IPropertyBag *operator=;
};

typedef struct IPropertyBag2 {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    HRESULT CountProperties;
    HRESULT GetPropertyInfo;
    HRESULT LoadObject;
    VOID IPropertyBag2;
    VOID IPropertyBag2;
    VOID IPropertyBag2;
    struct IPropertyBag2 *operator=;
    struct IPropertyBag2 *operator=;
};

typedef struct IPropertyChange {
    struct IObjectWithPropertyKey IObjectWithPropertyKey;
    HRESULT ApplyToPropVariant;
    VOID IPropertyChange;
    VOID IPropertyChange;
    VOID IPropertyChange;
    struct IPropertyChange *operator=;
    struct IPropertyChange *operator=;
};

typedef struct IPropertyChangeArray {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    HRESULT InsertAt;
    HRESULT Append;
    HRESULT AppendOrReplace;
    HRESULT RemoveAt;
    HRESULT IsKeyInArray;
    VOID IPropertyChangeArray;
    VOID IPropertyChangeArray;
    VOID IPropertyChangeArray;
    struct IPropertyChangeArray *operator=;
    struct IPropertyChangeArray *operator=;
};

typedef struct IPropertyChangePriv {
    struct IUnknown IUnknown;
    HRESULT GetInfo;
    VOID IPropertyChangePriv;
    VOID IPropertyChangePriv;
    VOID IPropertyChangePriv;
    struct IPropertyChangePriv *operator=;
    struct IPropertyChangePriv *operator=;
};

typedef struct IPropertyDescription {
    struct IUnknown IUnknown;
    HRESULT GetPropertyKey;
    HRESULT GetCanonicalName;
    HRESULT GetPropertyType;
    HRESULT GetDisplayName;
    HRESULT GetEditInvitation;
    HRESULT GetTypeFlags;
    HRESULT GetViewFlags;
    HRESULT GetDefaultColumnWidth;
    HRESULT GetDisplayType;
    HRESULT GetColumnState;
    HRESULT GetGroupingRange;
    HRESULT GetRelativeDescriptionType;
    HRESULT GetRelativeDescription;
    HRESULT GetSortDescription;
    HRESULT GetSortDescriptionLabel;
    HRESULT GetAggregationType;
    HRESULT GetConditionType;
    HRESULT GetEnumTypeList;
    HRESULT CoerceToCanonicalValue;
    HRESULT FormatForDisplay;
    HRESULT IsValueCanonical;
    VOID IPropertyDescription;
    VOID IPropertyDescription;
    VOID IPropertyDescription;
    struct IPropertyDescription *operator=;
    struct IPropertyDescription *operator=;
};

typedef struct IPropertyDescription2 {
    struct IPropertyDescription IPropertyDescription;
    HRESULT GetImageReferenceForValue;
    VOID IPropertyDescription2;
    VOID IPropertyDescription2;
    VOID IPropertyDescription2;
    struct IPropertyDescription2 *operator=;
    struct IPropertyDescription2 *operator=;
};

typedef struct IPropertyDescriptionAliasInfo {
    struct IPropertyDescription IPropertyDescription;
    HRESULT GetSortByAlias;
    HRESULT GetAdditionalSortByAliases;
    VOID IPropertyDescriptionAliasInfo;
    VOID IPropertyDescriptionAliasInfo;
    VOID IPropertyDescriptionAliasInfo;
    struct IPropertyDescriptionAliasInfo *operator=;
    struct IPropertyDescriptionAliasInfo *operator=;
};

typedef struct IPropertyDescriptionList {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    VOID IPropertyDescriptionList;
    VOID IPropertyDescriptionList;
    VOID IPropertyDescriptionList;
    struct IPropertyDescriptionList *operator=;
    struct IPropertyDescriptionList *operator=;
};

typedef struct IPropertyDescriptionListInit {
    struct IUnknown IUnknown;
    HRESULT InitFromShellItems;
    HRESULT InitFromString;
    HRESULT InitFromKeys;
    HRESULT AddProperty;
    HRESULT AddKeyAndFlags;
    VOID IPropertyDescriptionListInit;
    VOID IPropertyDescriptionListInit;
    VOID IPropertyDescriptionListInit;
    struct IPropertyDescriptionListInit *operator=;
    struct IPropertyDescriptionListInit *operator=;
};

typedef struct IPropertyDescriptionPriv {
    struct IUnknown IUnknown;
    HRESULT GetControlCLSID;
    HRESULT GetEnumTypeListEx;
    HRESULT GetTypeFlagsEx;
    VOID IPropertyDescriptionPriv;
    VOID IPropertyDescriptionPriv;
    VOID IPropertyDescriptionPriv;
    struct IPropertyDescriptionPriv *operator=;
    struct IPropertyDescriptionPriv *operator=;
};

typedef struct IPropertyDescriptionRelatedPropertyInfo {
    struct IPropertyDescription IPropertyDescription;
    HRESULT GetRelatedProperty;
    VOID IPropertyDescriptionRelatedPropertyInfo;
    VOID IPropertyDescriptionRelatedPropertyInfo;
    VOID IPropertyDescriptionRelatedPropertyInfo;
    struct IPropertyDescriptionRelatedPropertyInfo *operator=;
    struct IPropertyDescriptionRelatedPropertyInfo *operator=;
};

typedef struct IPropertyDescriptionSearchInfo {
    struct IPropertyDescription IPropertyDescription;
    HRESULT GetSearchInfoFlags;
    HRESULT GetColumnIndexType;
    HRESULT GetProjectionString;
    HRESULT GetMaxSize;
    VOID IPropertyDescriptionSearchInfo;
    VOID IPropertyDescriptionSearchInfo;
    VOID IPropertyDescriptionSearchInfo;
    struct IPropertyDescriptionSearchInfo *operator=;
    struct IPropertyDescriptionSearchInfo *operator=;
};

typedef struct IPropertyDescriptionSearchInfoPriv {
    struct IUnknown IUnknown;
    HRESULT GetMnemonics;
    HRESULT GetSemanticTypeName;
    HRESULT GetSemanticType;
    HRESULT GetMappedProperties;
    HRESULT GetMappedPropertiesAsString;
    HRESULT GetReIndexPatternInfo;
    VOID IPropertyDescriptionSearchInfoPriv;
    VOID IPropertyDescriptionSearchInfoPriv;
    VOID IPropertyDescriptionSearchInfoPriv;
    struct IPropertyDescriptionSearchInfoPriv *operator=;
    struct IPropertyDescriptionSearchInfoPriv *operator=;
};

typedef struct IPropertyEnumType {
    struct IUnknown IUnknown;
    HRESULT GetEnumType;
    HRESULT GetValue;
    HRESULT GetRangeMinValue;
    HRESULT GetRangeSetValue;
    HRESULT GetDisplayText;
    VOID IPropertyEnumType;
    VOID IPropertyEnumType;
    VOID IPropertyEnumType;
    struct IPropertyEnumType *operator=;
    struct IPropertyEnumType *operator=;
};

typedef struct IPropertyEnumType2 {
    struct IPropertyEnumType IPropertyEnumType;
    HRESULT GetImageReference;
    VOID IPropertyEnumType2;
    VOID IPropertyEnumType2;
    VOID IPropertyEnumType2;
    struct IPropertyEnumType2 *operator=;
    struct IPropertyEnumType2 *operator=;
};

typedef struct IPropertyEnumTypeList {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    HRESULT GetConditionAt;
    HRESULT FindMatchingIndex;
    VOID IPropertyEnumTypeList;
    VOID IPropertyEnumTypeList;
    VOID IPropertyEnumTypeList;
    struct IPropertyEnumTypeList *operator=;
    struct IPropertyEnumTypeList *operator=;
};

typedef struct IPropertyEnumTypePriv {
    struct IUnknown IUnknown;
    HRESULT GetMnemonics;
    HRESULT GetCanonicalName;
    VOID IPropertyEnumTypePriv;
    VOID IPropertyEnumTypePriv;
    VOID IPropertyEnumTypePriv;
    struct IPropertyEnumTypePriv *operator=;
    struct IPropertyEnumTypePriv *operator=;
};

typedef struct IPropertyInfoProvider {
    struct IUnknown IUnknown;
    HRESULT GetFormatForDisplayFlags;
    HRESULT GetColumnState;
    VOID IPropertyInfoProvider;
    VOID IPropertyInfoProvider;
    VOID IPropertyInfoProvider;
    struct IPropertyInfoProvider *operator=;
    struct IPropertyInfoProvider *operator=;
};

typedef struct IPropertyKeyStore {
    struct IUnknown IUnknown;
    HRESULT GetKeyCount;
    HRESULT GetKeyAt;
    HRESULT AppendKey;
    HRESULT DeleteKey;
    HRESULT IsKeyInStore;
    HRESULT RemoveKey;
    VOID IPropertyKeyStore;
    VOID IPropertyKeyStore;
    VOID IPropertyKeyStore;
    struct IPropertyKeyStore *operator=;
    struct IPropertyKeyStore *operator=;
};

typedef struct IPropertyNotifySink {
    struct IUnknown IUnknown;
    HRESULT OnChanged;
    HRESULT OnRequestEdit;
    VOID IPropertyNotifySink;
    VOID IPropertyNotifySink;
    VOID IPropertyNotifySink;
    struct IPropertyNotifySink *operator=;
    struct IPropertyNotifySink *operator=;
};

typedef struct IPropertyPage {
    struct IUnknown IUnknown;
    HRESULT SetPageSite;
    HRESULT Activate;
    HRESULT Deactivate;
    HRESULT GetPageInfo;
    HRESULT SetObjects;
    HRESULT Show;
    HRESULT Move;
    HRESULT IsPageDirty;
    HRESULT Apply;
    HRESULT Help;
    HRESULT TranslateAcceleratorW;
    VOID IPropertyPage;
    VOID IPropertyPage;
    VOID IPropertyPage;
    struct IPropertyPage *operator=;
    struct IPropertyPage *operator=;
};

typedef struct IPropertyPage2 {
    struct IPropertyPage IPropertyPage;
    HRESULT EditProperty;
    VOID IPropertyPage2;
    VOID IPropertyPage2;
    VOID IPropertyPage2;
    struct IPropertyPage2 *operator=;
    struct IPropertyPage2 *operator=;
};

typedef struct IPropertyPageSite {
    struct IUnknown IUnknown;
    HRESULT OnStatusChange;
    HRESULT GetLocaleID;
    HRESULT GetPageContainer;
    HRESULT TranslateAcceleratorW;
    VOID IPropertyPageSite;
    VOID IPropertyPageSite;
    VOID IPropertyPageSite;
    struct IPropertyPageSite *operator=;
    struct IPropertyPageSite *operator=;
};

typedef struct IPropertyProvider {
    struct IPropertyStore IPropertyStore;
    HRESULT GetValueObject;
    VOID IPropertyProvider;
    VOID IPropertyProvider;
    VOID IPropertyProvider;
    struct IPropertyProvider *operator=;
    struct IPropertyProvider *operator=;
};

typedef struct IPropertySetStorage {
    struct IUnknown IUnknown;
    HRESULT Create;
    HRESULT Open;
    HRESULT Delete;
    HRESULT Enum;
    VOID IPropertySetStorage;
    VOID IPropertySetStorage;
    VOID IPropertySetStorage;
    struct IPropertySetStorage *operator=;
    struct IPropertySetStorage *operator=;
};

typedef struct IPropertyStorage {
    struct IUnknown IUnknown;
    HRESULT ReadMultiple;
    HRESULT WriteMultiple;
    HRESULT DeleteMultiple;
    HRESULT ReadPropertyNames;
    HRESULT WritePropertyNames;
    HRESULT DeletePropertyNames;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT Enum;
    HRESULT SetTimes;
    HRESULT SetClass;
    HRESULT Stat;
    VOID IPropertyStorage;
    VOID IPropertyStorage;
    VOID IPropertyStorage;
    struct IPropertyStorage *operator=;
    struct IPropertyStorage *operator=;
};

typedef struct IPropertyStore {
    struct IUnknown IUnknown;
    HRESULT GetCount;
    HRESULT GetAt;
    HRESULT GetValue;
    HRESULT SetValue;
    HRESULT Commit;
    VOID IPropertyStore;
    VOID IPropertyStore;
    VOID IPropertyStore;
    struct IPropertyStore *operator=;
    struct IPropertyStore *operator=;
};

typedef struct IPropertyStoreCache {
    struct IPropertyStore IPropertyStore;
    HRESULT GetState;
    HRESULT GetValueAndState;
    HRESULT SetState;
    HRESULT SetValueAndState;
    VOID IPropertyStoreCache;
    VOID IPropertyStoreCache;
    VOID IPropertyStoreCache;
    struct IPropertyStoreCache *operator=;
    struct IPropertyStoreCache *operator=;
};

typedef struct IPropertyStoreCapabilities {
    struct IUnknown IUnknown;
    HRESULT IsPropertyWritable;
    VOID IPropertyStoreCapabilities;
    VOID IPropertyStoreCapabilities;
    VOID IPropertyStoreCapabilities;
    struct IPropertyStoreCapabilities *operator=;
    struct IPropertyStoreCapabilities *operator=;
};

typedef struct IPropertyStoreContainer {
    struct IUnknown IUnknown;
    HRESULT GetStoreCount;
    HRESULT GetStoreAt;
    VOID IPropertyStoreContainer;
    VOID IPropertyStoreContainer;
    VOID IPropertyStoreContainer;
    struct IPropertyStoreContainer *operator=;
    struct IPropertyStoreContainer *operator=;
};

typedef struct IPropertyStoreFactory {
    struct IUnknown IUnknown;
    HRESULT GetPropertyStore;
    HRESULT GetPropertyStoreForKeys;
    VOID IPropertyStoreFactory;
    VOID IPropertyStoreFactory;
    VOID IPropertyStoreFactory;
    struct IPropertyStoreFactory *operator=;
    struct IPropertyStoreFactory *operator=;
};

typedef struct IPropertyStoreFlagAccess {
    struct IUnknown IUnknown;
    HRESULT GetFlags;
    HRESULT SetFlags;
    VOID IPropertyStoreFlagAccess;
    VOID IPropertyStoreFlagAccess;
    VOID IPropertyStoreFlagAccess;
    struct IPropertyStoreFlagAccess *operator=;
    struct IPropertyStoreFlagAccess *operator=;
};

typedef struct IPropertyStoreInit {
    struct IUnknown IUnknown;
    HRESULT SetCache;
    VOID IPropertyStoreInit;
    VOID IPropertyStoreInit;
    VOID IPropertyStoreInit;
    struct IPropertyStoreInit *operator=;
    struct IPropertyStoreInit *operator=;
};

typedef struct IPropertyStorePriv {
    struct IPropertyStore IPropertyStore;
    HRESULT SetValueAndTakeOwnership;
    HRESULT AcquireReadLock;
    HRESULT ReleaseReadLock;
    HRESULT GetDirectValue;
    VOID IPropertyStorePriv;
    VOID IPropertyStorePriv;
    VOID IPropertyStorePriv;
    struct IPropertyStorePriv *operator=;
    struct IPropertyStorePriv *operator=;
};

typedef struct IPropertyStoreWithDiagnostic {
    struct IUnknown IUnknown;
    HRESULT GetValueAndPath;
    HRESULT GetNamedValueAndPath;
    VOID IPropertyStoreWithDiagnostic;
    VOID IPropertyStoreWithDiagnostic;
    VOID IPropertyStoreWithDiagnostic;
    struct IPropertyStoreWithDiagnostic *operator=;
    struct IPropertyStoreWithDiagnostic *operator=;
};

typedef struct IPropertySystem {
    struct IUnknown IUnknown;
    HRESULT GetPropertyDescription;
    HRESULT GetPropertyDescriptionByName;
    HRESULT GetPropertyDescriptionListFromString;
    HRESULT EnumeratePropertyDescriptions;
    HRESULT FormatForDisplay;
    HRESULT FormatForDisplayAlloc;
    HRESULT RegisterPropertySchema;
    HRESULT UnregisterPropertySchema;
    HRESULT RefreshPropertySchema;
    VOID IPropertySystem;
    VOID IPropertySystem;
    VOID IPropertySystem;
    struct IPropertySystem *operator=;
    struct IPropertySystem *operator=;
};

typedef struct IPropertySystemChangeNotify {
    struct IUnknown IUnknown;
    HRESULT SchemaRefreshed;
    VOID IPropertySystemChangeNotify;
    VOID IPropertySystemChangeNotify;
    VOID IPropertySystemChangeNotify;
    struct IPropertySystemChangeNotify *operator=;
    struct IPropertySystemChangeNotify *operator=;
};

typedef struct IPropertySystemPriv {
    struct IUnknown IUnknown;
    HRESULT GetSemanticTypeByName;
    HRESULT EnumerateSemanticTypes;
    HRESULT CreateSchemaView;
    HRESULT GetLocalMachineSchemaView;
    VOID IPropertySystemPriv;
    VOID IPropertySystemPriv;
    VOID IPropertySystemPriv;
    struct IPropertySystemPriv *operator=;
    struct IPropertySystemPriv *operator=;
};

typedef struct IPropertyUI {
    struct IUnknown IUnknown;
    HRESULT ParsePropertyName;
    HRESULT GetCannonicalName;
    HRESULT GetDisplayName;
    HRESULT GetPropertyDescription;
    HRESULT GetDefaultWidth;
    HRESULT GetFlags;
    HRESULT FormatForDisplay;
    HRESULT GetHelpInfo;
    VOID IPropertyUI;
    VOID IPropertyUI;
    VOID IPropertyUI;
    struct IPropertyUI *operator=;
    struct IPropertyUI *operator=;
};

typedef struct IPropertyValue {
    struct IObjectWithPropertyKey IObjectWithPropertyKey;
    HRESULT GetValue;
    HRESULT InitValue;
    VOID IPropertyValue;
    VOID IPropertyValue;
    VOID IPropertyValue;
    struct IPropertyValue *operator=;
    struct IPropertyValue *operator=;
};

typedef struct IProtectFocus {
    struct IUnknown IUnknown;
    HRESULT AllowFocusChange;
    VOID IProtectFocus;
    VOID IProtectFocus;
    VOID IProtectFocus;
    struct IProtectFocus *operator=;
    struct IProtectFocus *operator=;
};

typedef struct IProtectedModeMenuServices {
    struct IUnknown IUnknown;
    HRESULT CreateMenu;
    HRESULT LoadMenuW;
    HRESULT LoadMenuID;
    VOID IProtectedModeMenuServices;
    VOID IProtectedModeMenuServices;
    VOID IProtectedModeMenuServices;
    struct IProtectedModeMenuServices *operator=;
    struct IProtectedModeMenuServices *operator=;
};

typedef struct IProvideClassInfo {
    struct IUnknown IUnknown;
    HRESULT GetClassInfoW;
    VOID IProvideClassInfo;
    VOID IProvideClassInfo;
    VOID IProvideClassInfo;
    struct IProvideClassInfo *operator=;
    struct IProvideClassInfo *operator=;
};

typedef struct IProvideClassInfo2 {
    struct IProvideClassInfo IProvideClassInfo;
    HRESULT GetGUID;
    VOID IProvideClassInfo2;
    VOID IProvideClassInfo2;
    VOID IProvideClassInfo2;
    struct IProvideClassInfo2 *operator=;
    struct IProvideClassInfo2 *operator=;
};

typedef struct IProvideMultipleClassInfo {
    struct IProvideClassInfo2 IProvideClassInfo2;
    HRESULT GetMultiTypeInfoCount;
    HRESULT GetInfoOfIndex;
    VOID IProvideMultipleClassInfo;
    VOID IProvideMultipleClassInfo;
    VOID IProvideMultipleClassInfo;
    struct IProvideMultipleClassInfo *operator=;
    struct IProvideMultipleClassInfo *operator=;
};

typedef struct IQueryAssociations {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT GetString;
    HRESULT GetKey;
    HRESULT GetData;
    HRESULT GetEnum;
    VOID IQueryAssociations;
    VOID IQueryAssociations;
    VOID IQueryAssociations;
    struct IQueryAssociations *operator=;
    struct IQueryAssociations *operator=;
};

typedef struct IQueryContinue {
    struct IUnknown IUnknown;
    HRESULT QueryContinue;
    VOID IQueryContinue;
    VOID IQueryContinue;
    VOID IQueryContinue;
    struct IQueryContinue *operator=;
    struct IQueryContinue *operator=;
};

typedef struct IQueryInfo {
    struct IUnknown IUnknown;
    HRESULT GetInfoTip;
    HRESULT GetInfoFlags;
    VOID IQueryInfo;
    VOID IQueryInfo;
    VOID IQueryInfo;
    struct IQueryInfo *operator=;
    struct IQueryInfo *operator=;
};

typedef struct IQuickActivate {
    struct IUnknown IUnknown;
    HRESULT QuickActivate;
    HRESULT SetContentExtent;
    HRESULT GetContentExtent;
    VOID IQuickActivate;
    VOID IQuickActivate;
    VOID IQuickActivate;
    struct IQuickActivate *operator=;
    struct IQuickActivate *operator=;
};

typedef struct IROTData {
    struct IUnknown IUnknown;
    HRESULT GetComparisonData;
    VOID IROTData;
    VOID IROTData;
    VOID IROTData;
    struct IROTData *operator=;
    struct IROTData *operator=;
};

typedef struct IRecordInfo {
    struct IUnknown IUnknown;
    HRESULT RecordInit;
    HRESULT RecordClear;
    HRESULT RecordCopy;
    HRESULT GetGuid;
    HRESULT GetName;
    HRESULT GetSize;
    HRESULT GetTypeInfo;
    HRESULT GetField;
    HRESULT GetFieldNoCopy;
    HRESULT PutField;
    HRESULT PutFieldNoCopy;
    HRESULT GetFieldNames;
    LONG IsMatchingType;
    PVOID RecordCreate;
    HRESULT RecordCreateCopy;
    HRESULT RecordDestroy;
    VOID IRecordInfo;
    VOID IRecordInfo;
    VOID IRecordInfo;
    struct IRecordInfo *operator=;
    struct IRecordInfo *operator=;
};

typedef struct IRegTreeItem {
    struct IUnknown IUnknown;
    HRESULT GetCheckState;
    HRESULT SetCheckState;
    VOID IRegTreeItem;
    VOID IRegTreeItem;
    VOID IRegTreeItem;
    struct IRegTreeItem *operator=;
    struct IRegTreeItem *operator=;
};

typedef struct IRegistrar {
    struct IUnknown IUnknown;
    HRESULT AddReplacement;
    HRESULT ClearReplacements;
    HRESULT ResourceRegisterSz;
    HRESULT ResourceUnregisterSz;
    HRESULT FileRegister;
    HRESULT FileUnregister;
    HRESULT StringRegister;
    HRESULT StringUnregister;
    HRESULT ResourceRegister;
    HRESULT ResourceUnregister;
    VOID IRegistrar;
    VOID IRegistrar;
    VOID IRegistrar;
    struct IRegistrar *operator=;
    struct IRegistrar *operator=;
};

typedef struct IRelatedItem {
    struct IUnknown IUnknown;
    HRESULT GetItemIDList;
    HRESULT GetItem;
    VOID IRelatedItem;
    VOID IRelatedItem;
    VOID IRelatedItem;
    struct IRelatedItem *operator=;
    struct IRelatedItem *operator=;
};

typedef struct IReleaseMarshalBuffers {
    struct IUnknown IUnknown;
    HRESULT ReleaseMarshalBuffer;
    VOID IReleaseMarshalBuffers;
    VOID IReleaseMarshalBuffers;
    VOID IReleaseMarshalBuffers;
    struct IReleaseMarshalBuffers *operator=;
    struct IReleaseMarshalBuffers *operator=;
};

typedef struct IRemoteComputer {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IRemoteComputer;
    VOID IRemoteComputer;
    VOID IRemoteComputer;
    struct IRemoteComputer *operator=;
    struct IRemoteComputer *operator=;
};

typedef struct IResolveShellLink {
    struct IUnknown IUnknown;
    HRESULT ResolveShellLink;
    VOID IResolveShellLink;
    VOID IResolveShellLink;
    VOID IResolveShellLink;
    struct IResolveShellLink *operator=;
    struct IResolveShellLink *operator=;
};

typedef struct IRestrict {
    struct IUnknown IUnknown;
    HRESULT IsRestricted;
    VOID IRestrict;
    VOID IRestrict;
    VOID IRestrict;
    struct IRestrict *operator=;
    struct IRestrict *operator=;
};

typedef struct IRestrictedErrorInfo {
    struct IUnknown IUnknown;
    HRESULT GetErrorDetails;
    HRESULT GetReference;
    VOID IRestrictedErrorInfo;
    VOID IRestrictedErrorInfo;
    VOID IRestrictedErrorInfo;
    struct IRestrictedErrorInfo *operator=;
    struct IRestrictedErrorInfo *operator=;
};

typedef struct IRichChunk {
    struct IUnknown IUnknown;
    HRESULT GetData;
    VOID IRichChunk;
    VOID IRichChunk;
    VOID IRichChunk;
    struct IRichChunk *operator=;
    struct IRichChunk *operator=;
};

typedef struct IRootStorage {
    struct IUnknown IUnknown;
    HRESULT SwitchToFile;
    VOID IRootStorage;
    VOID IRootStorage;
    VOID IRootStorage;
    struct IRootStorage *operator=;
    struct IRootStorage *operator=;
};

typedef struct IRpcChannelBuffer {
    struct IUnknown IUnknown;
    HRESULT GetBuffer;
    HRESULT SendReceive;
    HRESULT FreeBuffer;
    HRESULT GetDestCtx;
    HRESULT IsConnected;
    VOID IRpcChannelBuffer;
    VOID IRpcChannelBuffer;
    VOID IRpcChannelBuffer;
    struct IRpcChannelBuffer *operator=;
    struct IRpcChannelBuffer *operator=;
};

typedef struct IRpcChannelBuffer2 {
    struct IRpcChannelBuffer IRpcChannelBuffer;
    HRESULT GetProtocolVersion;
    VOID IRpcChannelBuffer2;
    VOID IRpcChannelBuffer2;
    VOID IRpcChannelBuffer2;
    struct IRpcChannelBuffer2 *operator=;
    struct IRpcChannelBuffer2 *operator=;
};

typedef struct IRpcChannelBuffer3 {
    struct IRpcChannelBuffer2 IRpcChannelBuffer2;
    HRESULT Send;
    HRESULT Receive;
    HRESULT Cancel;
    HRESULT GetCallContext;
    HRESULT GetDestCtxEx;
    HRESULT GetState;
    HRESULT RegisterAsync;
    VOID IRpcChannelBuffer3;
    VOID IRpcChannelBuffer3;
    VOID IRpcChannelBuffer3;
    struct IRpcChannelBuffer3 *operator=;
    struct IRpcChannelBuffer3 *operator=;
};

typedef struct IRpcHelper {
    struct IUnknown IUnknown;
    HRESULT GetDCOMProtocolVersion;
    HRESULT GetIIDFromOBJREF;
    VOID IRpcHelper;
    VOID IRpcHelper;
    VOID IRpcHelper;
    struct IRpcHelper *operator=;
    struct IRpcHelper *operator=;
};

typedef struct IRpcOptions {
    struct IUnknown IUnknown;
    HRESULT Set;
    HRESULT Query;
    VOID IRpcOptions;
    VOID IRpcOptions;
    VOID IRpcOptions;
    struct IRpcOptions *operator=;
    struct IRpcOptions *operator=;
};

typedef struct IRpcProxyBuffer {
    struct IUnknown IUnknown;
    HRESULT Connect;
    VOID Disconnect;
    VOID IRpcProxyBuffer;
    VOID IRpcProxyBuffer;
    VOID IRpcProxyBuffer;
    struct IRpcProxyBuffer *operator=;
    struct IRpcProxyBuffer *operator=;
};

typedef struct IRpcStubBuffer {
    struct IUnknown IUnknown;
    HRESULT Connect;
    VOID Disconnect;
    HRESULT Invoke;
    struct IRpcStubBuffer *IsIIDSupported;
    ULONG CountRefs;
    HRESULT DebugServerQueryInterface;
    VOID DebugServerRelease;
    VOID IRpcStubBuffer;
    VOID IRpcStubBuffer;
    VOID IRpcStubBuffer;
    struct IRpcStubBuffer *operator=;
    struct IRpcStubBuffer *operator=;
};

typedef struct IRpcSyntaxNegotiate {
    struct IUnknown IUnknown;
    HRESULT NegotiateSyntax;
    VOID IRpcSyntaxNegotiate;
    VOID IRpcSyntaxNegotiate;
    VOID IRpcSyntaxNegotiate;
    struct IRpcSyntaxNegotiate *operator=;
    struct IRpcSyntaxNegotiate *operator=;
};

typedef struct IRunnableObject {
    struct IUnknown IUnknown;
    HRESULT GetRunningClass;
    HRESULT Run;
    LONG IsRunning;
    HRESULT LockRunning;
    HRESULT SetContainedObject;
    VOID IRunnableObject;
    VOID IRunnableObject;
    VOID IRunnableObject;
    struct IRunnableObject *operator=;
    struct IRunnableObject *operator=;
};

typedef struct IRunnableTask {
    struct IUnknown IUnknown;
    HRESULT Run;
    HRESULT Kill;
    HRESULT Suspend;
    HRESULT Resume;
    ULONG IsRunning;
    VOID IRunnableTask;
    VOID IRunnableTask;
    VOID IRunnableTask;
    struct IRunnableTask *operator=;
    struct IRunnableTask *operator=;
};

typedef struct IRunningObjectTable {
    struct IUnknown IUnknown;
    HRESULT Register;
    HRESULT Revoke;
    HRESULT IsRunning;
    HRESULT GetObjectW;
    HRESULT NoteChangeTime;
    HRESULT GetTimeOfLastChange;
    HRESULT EnumRunning;
    VOID IRunningObjectTable;
    VOID IRunningObjectTable;
    VOID IRunningObjectTable;
    struct IRunningObjectTable *operator=;
    struct IRunningObjectTable *operator=;
};

typedef struct ISchemaCache {
    struct IUnknown IUnknown;
    HRESULT GetPropertyDescriptionByKey;
    HRESULT GetPropertyDescriptionByName;
    HRESULT GetSemanticTypeByName;
    HRESULT EnumSemanticTypes;
    HRESULT RegisterPerMachineSchema;
    HRESULT UnregisterPerMachineSchema;
    HRESULT CreateSchemaView;
    HRESULT GetLocalMachineSchemaView;
    VOID ISchemaCache;
    VOID ISchemaCache;
    VOID ISchemaCache;
    struct ISchemaCache *operator=;
    struct ISchemaCache *operator=;
};

typedef struct ISchemaView {
    struct IUnknown IUnknown;
    HRESULT GetPropertyDescription;
    HRESULT GetPropertyDescriptionByName;
    HRESULT EnumeratePropertyDescriptions;
    VOID ISchemaView;
    VOID ISchemaView;
    VOID ISchemaView;
    struct ISchemaView *operator=;
    struct ISchemaView *operator=;
};

typedef struct IScriptErrorList {
    struct IDispatch IDispatch;
    HRESULT advanceError;
    HRESULT retreatError;
    HRESULT canAdvanceError;
    HRESULT canRetreatError;
    HRESULT getErrorLine;
    HRESULT getErrorChar;
    HRESULT getErrorCode;
    HRESULT getErrorMsg;
    HRESULT getErrorUrl;
    HRESULT getAlwaysShowLockState;
    HRESULT getDetailsPaneOpen;
    HRESULT setDetailsPaneOpen;
    HRESULT getPerErrorDisplay;
    HRESULT setPerErrorDisplay;
    VOID IScriptErrorList;
    VOID IScriptErrorList;
    VOID IScriptErrorList;
    struct IScriptErrorList *operator=;
    struct IScriptErrorList *operator=;
};

typedef struct ISearchContext {
    struct IUnknown IUnknown;
    HRESULT GetSearchUrl;
    HRESULT GetSearchText;
    HRESULT GetSearchStyle;
    VOID ISearchContext;
    VOID ISearchContext;
    VOID ISearchContext;
    struct ISearchContext *operator=;
    struct ISearchContext *operator=;
};

typedef struct ISearchFolderItemFactory {
    struct IUnknown IUnknown;
    HRESULT SetDisplayName;
    HRESULT SetFolderTypeID;
    HRESULT SetFolderLogicalViewMode;
    HRESULT SetIconSize;
    HRESULT SetVisibleColumns;
    HRESULT SetSortColumns;
    HRESULT SetGroupColumn;
    HRESULT SetStacks;
    HRESULT SetScope;
    HRESULT SetCondition;
    HRESULT GetShellItem;
    HRESULT GetIDList;
    VOID ISearchFolderItemFactory;
    VOID ISearchFolderItemFactory;
    VOID ISearchFolderItemFactory;
    struct ISearchFolderItemFactory *operator=;
    struct ISearchFolderItemFactory *operator=;
};

typedef struct ISemanticNamedEntity {
    struct IUnknown IUnknown;
    HRESULT GetCanonicalName;
    HRESULT GetValue;
    HRESULT GetMnemonics;
    VOID ISemanticNamedEntity;
    VOID ISemanticNamedEntity;
    VOID ISemanticNamedEntity;
    struct ISemanticNamedEntity *operator=;
    struct ISemanticNamedEntity *operator=;
};

typedef struct ISemanticType {
    struct IUnknown IUnknown;
    HRESULT GetCanonicalName;
    HRESULT GetBaseTypeName;
    HRESULT GetBaseType;
    HRESULT GetNamedEntities;
    VOID ISemanticType;
    VOID ISemanticType;
    VOID ISemanticType;
    struct ISemanticType *operator=;
    struct ISemanticType *operator=;
};

typedef struct ISequentialStream {
    struct IUnknown IUnknown;
    HRESULT Read;
    HRESULT Write;
    VOID ISequentialStream;
    VOID ISequentialStream;
    VOID ISequentialStream;
    struct ISequentialStream *operator=;
    struct ISequentialStream *operator=;
};

typedef struct IServerSecurity {
    struct IUnknown IUnknown;
    HRESULT QueryBlanket;
    HRESULT ImpersonateClient;
    HRESULT RevertToSelf;
    LONG IsImpersonating;
    VOID IServerSecurity;
    VOID IServerSecurity;
    VOID IServerSecurity;
    struct IServerSecurity *operator=;
    struct IServerSecurity *operator=;
};

typedef struct IServiceProvider {
    struct IUnknown IUnknown;
    HRESULT QueryService;
    VOID IServiceProvider;
    VOID IServiceProvider;
    VOID IServiceProvider;
    struct IServiceProvider *operator=;
    struct IServiceProvider *operator=;
};

typedef struct ISetPropertyDescription {
    struct IUnknown IUnknown;
    HRESULT SetViewFlagsAndColumnWidth;
    VOID ISetPropertyDescription;
    VOID ISetPropertyDescription;
    VOID ISetPropertyDescription;
    struct ISetPropertyDescription *operator=;
    struct ISetPropertyDescription *operator=;
};

typedef struct ISetPropertyDescriptionList {
    struct IUnknown IUnknown;
    HRESULT OverrideWith;
    VOID ISetPropertyDescriptionList;
    VOID ISetPropertyDescriptionList;
    VOID ISetPropertyDescriptionList;
    struct ISetPropertyDescriptionList *operator=;
    struct ISetPropertyDescriptionList *operator=;
};

typedef struct ISharingConfigurationManager {
    struct IUnknown IUnknown;
    HRESULT CreateShare;
    HRESULT DeleteShare;
    HRESULT ShareExists;
    HRESULT GetSharePermissions;
    HRESULT SharePrinters;
    HRESULT StopSharingPrinters;
    HRESULT ArePrintersShared;
    VOID ISharingConfigurationManager;
    VOID ISharingConfigurationManager;
    VOID ISharingConfigurationManager;
    struct ISharingConfigurationManager *operator=;
    struct ISharingConfigurationManager *operator=;
};

typedef struct IShellBrowser {
    struct IOleWindow IOleWindow;
    HRESULT InsertMenusSB;
    HRESULT SetMenuSB;
    HRESULT RemoveMenusSB;
    HRESULT SetStatusTextSB;
    HRESULT EnableModelessSB;
    HRESULT TranslateAcceleratorSB;
    HRESULT BrowseObject;
    HRESULT GetViewStateStream;
    HRESULT GetControlWindow;
    HRESULT SendControlMsg;
    HRESULT QueryActiveShellView;
    HRESULT OnViewWindowActive;
    HRESULT SetToolbarItems;
    VOID IShellBrowser;
    VOID IShellBrowser;
    VOID IShellBrowser;
    struct IShellBrowser *operator=;
    struct IShellBrowser *operator=;
};

typedef struct IShellChangeNotify {
    struct IUnknown IUnknown;
    HRESULT OnChange;
    VOID IShellChangeNotify;
    VOID IShellChangeNotify;
    VOID IShellChangeNotify;
    struct IShellChangeNotify *operator=;
    struct IShellChangeNotify *operator=;
};

typedef struct IShellDetails {
    struct IUnknown IUnknown;
    HRESULT GetDetailsOf;
    HRESULT ColumnClick;
    VOID IShellDetails;
    VOID IShellDetails;
    VOID IShellDetails;
    struct IShellDetails *operator=;
    struct IShellDetails *operator=;
};

typedef struct IShellDispatch {
    struct IDispatch IDispatch;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT NameSpace;
    HRESULT BrowseForFolder;
    HRESULT Windows;
    HRESULT Open;
    HRESULT Explore;
    HRESULT MinimizeAll;
    HRESULT UndoMinimizeALL;
    HRESULT FileRun;
    HRESULT CascadeWindows;
    HRESULT TileVertically;
    HRESULT TileHorizontally;
    HRESULT ShutdownWindows;
    HRESULT Suspend;
    HRESULT EjectPC;
    HRESULT SetTime;
    HRESULT TrayProperties;
    HRESULT Help;
    HRESULT FindFiles;
    HRESULT FindComputer;
    HRESULT RefreshMenu;
    HRESULT ControlPanelItem;
    VOID IShellDispatch;
    VOID IShellDispatch;
    VOID IShellDispatch;
    struct IShellDispatch *operator=;
    struct IShellDispatch *operator=;
};

typedef struct IShellDispatch2 {
    struct IShellDispatch IShellDispatch;
    HRESULT IsRestricted;
    HRESULT ShellExecuteW;
    HRESULT FindPrinter;
    HRESULT GetSystemInformation;
    HRESULT ServiceStart;
    HRESULT ServiceStop;
    HRESULT IsServiceRunning;
    HRESULT CanStartStopService;
    HRESULT ShowBrowserBar;
    VOID IShellDispatch2;
    VOID IShellDispatch2;
    VOID IShellDispatch2;
    struct IShellDispatch2 *operator=;
    struct IShellDispatch2 *operator=;
};

typedef struct IShellDispatch3 {
    struct IShellDispatch2 IShellDispatch2;
    HRESULT AddToRecent;
    VOID IShellDispatch3;
    VOID IShellDispatch3;
    VOID IShellDispatch3;
    struct IShellDispatch3 *operator=;
    struct IShellDispatch3 *operator=;
};

typedef struct IShellDispatch4 {
    struct IShellDispatch3 IShellDispatch3;
    HRESULT WindowsSecurity;
    HRESULT ToggleDesktop;
    HRESULT ExplorerPolicy;
    HRESULT GetSetting;
    VOID IShellDispatch4;
    VOID IShellDispatch4;
    VOID IShellDispatch4;
    struct IShellDispatch4 *operator=;
    struct IShellDispatch4 *operator=;
};

typedef struct IShellDispatch5 {
    struct IShellDispatch4 IShellDispatch4;
    HRESULT WindowSwitcher;
    VOID IShellDispatch5;
    VOID IShellDispatch5;
    VOID IShellDispatch5;
    struct IShellDispatch5 *operator=;
    struct IShellDispatch5 *operator=;
};

typedef struct IShellDispatch6 {
    struct IShellDispatch5 IShellDispatch5;
    HRESULT SearchCommand;
    VOID IShellDispatch6;
    VOID IShellDispatch6;
    VOID IShellDispatch6;
    struct IShellDispatch6 *operator=;
    struct IShellDispatch6 *operator=;
};

typedef struct IShellExecuteHookA {
    struct IUnknown IUnknown;
    HRESULT Execute;
    VOID IShellExecuteHookA;
    VOID IShellExecuteHookA;
    VOID IShellExecuteHookA;
    struct IShellExecuteHookA *operator=;
    struct IShellExecuteHookA *operator=;
};

typedef struct IShellExecuteHookW {
    struct IUnknown IUnknown;
    HRESULT Execute;
    VOID IShellExecuteHookW;
    VOID IShellExecuteHookW;
    VOID IShellExecuteHookW;
    struct IShellExecuteHookW *operator=;
    struct IShellExecuteHookW *operator=;
};

typedef struct IShellExtInit {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    VOID IShellExtInit;
    VOID IShellExtInit;
    VOID IShellExtInit;
    struct IShellExtInit *operator=;
    struct IShellExtInit *operator=;
};

typedef struct IShellFavoritesNameSpace {
    struct IDispatch IDispatch;
    HRESULT MoveSelectionUp;
    HRESULT MoveSelectionDown;
    HRESULT ResetSort;
    HRESULT NewFolder;
    HRESULT Synchronize;
    HRESULT Import;
    HRESULT Export;
    HRESULT InvokeContextMenuCommand;
    HRESULT MoveSelectionTo;
    HRESULT get_SubscriptionsEnabled;
    HRESULT CreateSubscriptionForSelection;
    HRESULT DeleteSubscriptionForSelection;
    HRESULT SetRoot;
    VOID IShellFavoritesNameSpace;
    VOID IShellFavoritesNameSpace;
    VOID IShellFavoritesNameSpace;
    struct IShellFavoritesNameSpace *operator=;
    struct IShellFavoritesNameSpace *operator=;
};

typedef struct IShellFolder {
    struct IUnknown IUnknown;
    HRESULT ParseDisplayName;
    HRESULT EnumObjects;
    HRESULT BindToObject;
    HRESULT BindToStorage;
    HRESULT CompareIDs;
    HRESULT CreateViewObject;
    HRESULT GetAttributesOf;
    HRESULT GetUIObjectOf;
    HRESULT GetDisplayNameOf;
    HRESULT SetNameOf;
    VOID IShellFolder;
    VOID IShellFolder;
    VOID IShellFolder;
    struct IShellFolder *operator=;
    struct IShellFolder *operator=;
};

typedef struct IShellFolder2 {
    struct IShellFolder IShellFolder;
    HRESULT GetDefaultSearchGUID;
    HRESULT EnumSearches;
    HRESULT GetDefaultColumn;
    HRESULT GetDefaultColumnState;
    HRESULT GetDetailsEx;
    HRESULT GetDetailsOf;
    HRESULT MapColumnToSCID;
    VOID IShellFolder2;
    VOID IShellFolder2;
    VOID IShellFolder2;
    struct IShellFolder2 *operator=;
    struct IShellFolder2 *operator=;
};

typedef struct IShellFolderView {
    struct IUnknown IUnknown;
    HRESULT Rearrange;
    HRESULT GetArrangeParam;
    HRESULT ArrangeGrid;
    HRESULT AutoArrange;
    HRESULT GetAutoArrange;
    HRESULT AddObject;
    HRESULT GetObjectW;
    HRESULT RemoveObject;
    HRESULT GetObjectCount;
    HRESULT SetObjectCount;
    HRESULT UpdateObject;
    HRESULT RefreshObject;
    HRESULT SetRedraw;
    HRESULT GetSelectedCount;
    HRESULT GetSelectedObjects;
    HRESULT IsDropOnSource;
    HRESULT GetDragPoint;
    HRESULT GetDropPoint;
    HRESULT MoveIcons;
    HRESULT SetItemPos;
    HRESULT IsBkDropTarget;
    HRESULT SetClipboard;
    HRESULT SetPoints;
    HRESULT GetItemSpacing;
    HRESULT SetCallback;
    HRESULT Select;
    HRESULT QuerySupport;
    HRESULT SetAutomationObject;
    VOID IShellFolderView;
    VOID IShellFolderView;
    VOID IShellFolderView;
    struct IShellFolderView *operator=;
    struct IShellFolderView *operator=;
};

typedef struct IShellFolderViewCB {
    struct IUnknown IUnknown;
    HRESULT MessageSFVCB;
    VOID IShellFolderViewCB;
    VOID IShellFolderViewCB;
    VOID IShellFolderViewCB;
    struct IShellFolderViewCB *operator=;
    struct IShellFolderViewCB *operator=;
};

typedef struct IShellFolderViewDual {
    struct IDispatch IDispatch;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT get_Folder;
    HRESULT SelectedItems;
    HRESULT get_FocusedItem;
    HRESULT SelectItem;
    HRESULT PopupItemMenu;
    HRESULT get_Script;
    HRESULT get_ViewOptions;
    VOID IShellFolderViewDual;
    VOID IShellFolderViewDual;
    VOID IShellFolderViewDual;
    struct IShellFolderViewDual *operator=;
    struct IShellFolderViewDual *operator=;
};

typedef struct IShellFolderViewDual2 {
    struct IShellFolderViewDual IShellFolderViewDual;
    HRESULT get_CurrentViewMode;
    HRESULT put_CurrentViewMode;
    HRESULT SelectItemRelative;
    VOID IShellFolderViewDual2;
    VOID IShellFolderViewDual2;
    VOID IShellFolderViewDual2;
    struct IShellFolderViewDual2 *operator=;
    struct IShellFolderViewDual2 *operator=;
};

typedef struct IShellFolderViewDual3 {
    struct IShellFolderViewDual2 IShellFolderViewDual2;
    HRESULT get_GroupBy;
    HRESULT put_GroupBy;
    HRESULT get_FolderFlags;
    HRESULT put_FolderFlags;
    HRESULT get_SortColumns;
    HRESULT put_SortColumns;
    HRESULT put_IconSize;
    HRESULT get_IconSize;
    HRESULT FilterView;
    VOID IShellFolderViewDual3;
    VOID IShellFolderViewDual3;
    VOID IShellFolderViewDual3;
    struct IShellFolderViewDual3 *operator=;
    struct IShellFolderViewDual3 *operator=;
};

typedef struct IShellIcon {
    struct IUnknown IUnknown;
    HRESULT GetIconOf;
    VOID IShellIcon;
    VOID IShellIcon;
    VOID IShellIcon;
    struct IShellIcon *operator=;
    struct IShellIcon *operator=;
};

typedef struct IShellIconOverlay {
    struct IUnknown IUnknown;
    HRESULT GetOverlayIndex;
    HRESULT GetOverlayIconIndex;
    VOID IShellIconOverlay;
    VOID IShellIconOverlay;
    VOID IShellIconOverlay;
    struct IShellIconOverlay *operator=;
    struct IShellIconOverlay *operator=;
};

typedef struct IShellIconOverlayIdentifier {
    struct IUnknown IUnknown;
    HRESULT IsMemberOf;
    HRESULT GetOverlayInfo;
    HRESULT GetPriority;
    VOID IShellIconOverlayIdentifier;
    VOID IShellIconOverlayIdentifier;
    VOID IShellIconOverlayIdentifier;
    struct IShellIconOverlayIdentifier *operator=;
    struct IShellIconOverlayIdentifier *operator=;
};

typedef struct IShellIconOverlayManager {
    struct IUnknown IUnknown;
    HRESULT GetFileOverlayInfo;
    HRESULT GetReservedOverlayInfo;
    HRESULT RefreshOverlayImages;
    HRESULT LoadNonloadedOverlayIdentifiers;
    HRESULT OverlayIndexFromImageIndex;
    VOID IShellIconOverlayManager;
    VOID IShellIconOverlayManager;
    VOID IShellIconOverlayManager;
    struct IShellIconOverlayManager *operator=;
    struct IShellIconOverlayManager *operator=;
};

typedef struct IShellItem {
    struct IUnknown IUnknown;
    HRESULT BindToHandler;
    HRESULT GetParent;
    HRESULT GetDisplayName;
    HRESULT GetAttributes;
    HRESULT Compare;
    VOID IShellItem;
    VOID IShellItem;
    VOID IShellItem;
    struct IShellItem *operator=;
    struct IShellItem *operator=;
};

typedef struct IShellItem2 {
    struct IShellItem IShellItem;
    HRESULT GetPropertyStore;
    HRESULT GetPropertyStoreWithCreateObject;
    HRESULT GetPropertyStoreForKeys;
    HRESULT GetPropertyDescriptionList;
    HRESULT Update;
    HRESULT GetProperty;
    HRESULT GetCLSID;
    HRESULT GetFileTime;
    HRESULT GetInt32;
    HRESULT GetString;
    HRESULT GetUInt32;
    HRESULT GetUInt64;
    HRESULT GetBool;
    VOID IShellItem2;
    VOID IShellItem2;
    VOID IShellItem2;
    struct IShellItem2 *operator=;
    struct IShellItem2 *operator=;
};

typedef struct IShellItemArray {
    struct IUnknown IUnknown;
    HRESULT BindToHandler;
    HRESULT GetPropertyStore;
    HRESULT GetPropertyDescriptionList;
    HRESULT GetAttributes;
    HRESULT GetCount;
    HRESULT GetItemAt;
    HRESULT EnumItems;
    VOID IShellItemArray;
    VOID IShellItemArray;
    VOID IShellItemArray;
    struct IShellItemArray *operator=;
    struct IShellItemArray *operator=;
};

typedef struct IShellItemFilter {
    struct IUnknown IUnknown;
    HRESULT IncludeItem;
    HRESULT GetEnumFlagsForItem;
    VOID IShellItemFilter;
    VOID IShellItemFilter;
    VOID IShellItemFilter;
    struct IShellItemFilter *operator=;
    struct IShellItemFilter *operator=;
};

typedef struct IShellItemImageFactory {
    struct IUnknown IUnknown;
    HRESULT GetImage;
    VOID IShellItemImageFactory;
    VOID IShellItemImageFactory;
    VOID IShellItemImageFactory;
    struct IShellItemImageFactory *operator=;
    struct IShellItemImageFactory *operator=;
};

typedef struct IShellItemResources {
    struct IUnknown IUnknown;
    HRESULT GetAttributes;
    HRESULT GetSize;
    HRESULT GetTimes;
    HRESULT SetTimes;
    HRESULT GetResourceDescription;
    HRESULT EnumResources;
    HRESULT SupportsResource;
    HRESULT OpenResource;
    HRESULT CreateResource;
    HRESULT MarkForDelete;
    VOID IShellItemResources;
    VOID IShellItemResources;
    VOID IShellItemResources;
    struct IShellItemResources *operator=;
    struct IShellItemResources *operator=;
};

typedef struct IShellLibrary {
    struct IUnknown IUnknown;
    HRESULT LoadLibraryFromItem;
    HRESULT LoadLibraryFromKnownFolder;
    HRESULT AddFolder;
    HRESULT RemoveFolder;
    HRESULT GetFolders;
    HRESULT ResolveFolder;
    HRESULT GetDefaultSaveFolder;
    HRESULT SetDefaultSaveFolder;
    HRESULT GetOptions;
    HRESULT SetOptions;
    HRESULT GetFolderType;
    HRESULT SetFolderType;
    HRESULT GetIcon;
    HRESULT SetIcon;
    HRESULT Commit;
    HRESULT Save;
    HRESULT SaveInKnownFolder;
    VOID IShellLibrary;
    VOID IShellLibrary;
    VOID IShellLibrary;
    struct IShellLibrary *operator=;
    struct IShellLibrary *operator=;
};

typedef struct IShellLinkA {
    struct IUnknown IUnknown;
    HRESULT GetPath;
    HRESULT GetIDList;
    HRESULT SetIDList;
    HRESULT GetDescription;
    HRESULT SetDescription;
    HRESULT GetWorkingDirectory;
    HRESULT SetWorkingDirectory;
    HRESULT GetArguments;
    HRESULT SetArguments;
    HRESULT GetHotkey;
    HRESULT SetHotkey;
    HRESULT GetShowCmd;
    HRESULT SetShowCmd;
    HRESULT GetIconLocation;
    HRESULT SetIconLocation;
    HRESULT SetRelativePath;
    HRESULT Resolve;
    HRESULT SetPath;
    VOID IShellLinkA;
    VOID IShellLinkA;
    VOID IShellLinkA;
    struct IShellLinkA *operator=;
    struct IShellLinkA *operator=;
};

typedef struct IShellLinkDataList {
    struct IUnknown IUnknown;
    HRESULT AddDataBlock;
    HRESULT CopyDataBlock;
    HRESULT RemoveDataBlock;
    HRESULT GetFlags;
    HRESULT SetFlags;
    VOID IShellLinkDataList;
    VOID IShellLinkDataList;
    VOID IShellLinkDataList;
    struct IShellLinkDataList *operator=;
    struct IShellLinkDataList *operator=;
};

typedef struct IShellLinkDual {
    struct IDispatch IDispatch;
    HRESULT get_Path;
    HRESULT put_Path;
    HRESULT get_Description;
    HRESULT put_Description;
    HRESULT get_WorkingDirectory;
    HRESULT put_WorkingDirectory;
    HRESULT get_Arguments;
    HRESULT put_Arguments;
    HRESULT get_Hotkey;
    HRESULT put_Hotkey;
    HRESULT get_ShowCommand;
    HRESULT put_ShowCommand;
    HRESULT Resolve;
    HRESULT GetIconLocation;
    HRESULT SetIconLocation;
    HRESULT Save;
    VOID IShellLinkDual;
    VOID IShellLinkDual;
    VOID IShellLinkDual;
    struct IShellLinkDual *operator=;
    struct IShellLinkDual *operator=;
};

typedef struct IShellLinkDual2 {
    struct IShellLinkDual IShellLinkDual;
    HRESULT get_Target;
    VOID IShellLinkDual2;
    VOID IShellLinkDual2;
    VOID IShellLinkDual2;
    struct IShellLinkDual2 *operator=;
    struct IShellLinkDual2 *operator=;
};

typedef struct IShellLinkW {
    struct IUnknown IUnknown;
    HRESULT GetPath;
    HRESULT GetIDList;
    HRESULT SetIDList;
    HRESULT GetDescription;
    HRESULT SetDescription;
    HRESULT GetWorkingDirectory;
    HRESULT SetWorkingDirectory;
    HRESULT GetArguments;
    HRESULT SetArguments;
    HRESULT GetHotkey;
    HRESULT SetHotkey;
    HRESULT GetShowCmd;
    HRESULT SetShowCmd;
    HRESULT GetIconLocation;
    HRESULT SetIconLocation;
    HRESULT SetRelativePath;
    HRESULT Resolve;
    HRESULT SetPath;
    VOID IShellLinkW;
    VOID IShellLinkW;
    VOID IShellLinkW;
    struct IShellLinkW *operator=;
    struct IShellLinkW *operator=;
};

typedef struct IShellMenu {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT GetMenuInfo;
    HRESULT SetShellFolder;
    HRESULT GetShellFolder;
    HRESULT SetMenu;
    HRESULT GetMenu;
    HRESULT InvalidateItem;
    HRESULT GetState;
    HRESULT SetMenuToolbar;
    VOID IShellMenu;
    VOID IShellMenu;
    VOID IShellMenu;
    struct IShellMenu *operator=;
    struct IShellMenu *operator=;
};

typedef struct IShellMenuCallback {
    struct IUnknown IUnknown;
    HRESULT CallbackSM;
    VOID IShellMenuCallback;
    VOID IShellMenuCallback;
    VOID IShellMenuCallback;
    struct IShellMenuCallback *operator=;
    struct IShellMenuCallback *operator=;
};

typedef struct IShellNameSpace {
    struct IShellFavoritesNameSpace IShellFavoritesNameSpace;
    HRESULT get_EnumOptions;
    HRESULT put_EnumOptions;
    HRESULT get_SelectedItem;
    HRESULT put_SelectedItem;
    HRESULT get_Root;
    HRESULT put_Root;
    HRESULT get_Depth;
    HRESULT put_Depth;
    HRESULT get_Mode;
    HRESULT put_Mode;
    HRESULT get_Flags;
    HRESULT put_Flags;
    HRESULT put_TVFlags;
    HRESULT get_TVFlags;
    HRESULT get_Columns;
    HRESULT put_Columns;
    HRESULT get_CountViewTypes;
    HRESULT SetViewType;
    HRESULT SelectedItems;
    HRESULT Expand;
    HRESULT UnselectAll;
    VOID IShellNameSpace;
    VOID IShellNameSpace;
    VOID IShellNameSpace;
    struct IShellNameSpace *operator=;
    struct IShellNameSpace *operator=;
};

typedef struct IShellPropSheetExt {
    struct IUnknown IUnknown;
    HRESULT AddPages;
    HRESULT ReplacePage;
    VOID IShellPropSheetExt;
    VOID IShellPropSheetExt;
    VOID IShellPropSheetExt;
    struct IShellPropSheetExt *operator=;
    struct IShellPropSheetExt *operator=;
};

typedef struct IShellTaskScheduler {
    struct IUnknown IUnknown;
    HRESULT AddTask;
    HRESULT RemoveTasks;
    ULONG CountTasks;
    HRESULT Status;
    VOID IShellTaskScheduler;
    VOID IShellTaskScheduler;
    VOID IShellTaskScheduler;
    struct IShellTaskScheduler *operator=;
    struct IShellTaskScheduler *operator=;
};

typedef struct IShellUIHelper {
    struct IDispatch IDispatch;
    HRESULT ResetFirstBootMode;
    HRESULT ResetSafeMode;
    HRESULT RefreshOfflineDesktop;
    HRESULT AddFavorite;
    HRESULT AddChannel;
    HRESULT AddDesktopComponent;
    HRESULT IsSubscribed;
    HRESULT NavigateAndFind;
    HRESULT ImportExportFavorites;
    HRESULT AutoCompleteSaveForm;
    HRESULT AutoScan;
    HRESULT AutoCompleteAttach;
    HRESULT ShowBrowserUI;
    VOID IShellUIHelper;
    VOID IShellUIHelper;
    VOID IShellUIHelper;
    struct IShellUIHelper *operator=;
    struct IShellUIHelper *operator=;
};

typedef struct IShellUIHelper2 {
    struct IShellUIHelper IShellUIHelper;
    HRESULT AddSearchProvider;
    HRESULT RunOnceShown;
    HRESULT SkipRunOnce;
    HRESULT CustomizeSettings;
    HRESULT SqmEnabled;
    HRESULT PhishingEnabled;
    HRESULT BrandImageUri;
    HRESULT SkipTabsWelcome;
    HRESULT DiagnoseConnection;
    HRESULT CustomizeClearType;
    HRESULT IsSearchProviderInstalled;
    HRESULT IsSearchMigrated;
    HRESULT DefaultSearchProvider;
    HRESULT RunOnceRequiredSettingsComplete;
    HRESULT RunOnceHasShown;
    HRESULT SearchGuideUrl;
    VOID IShellUIHelper2;
    VOID IShellUIHelper2;
    VOID IShellUIHelper2;
    struct IShellUIHelper2 *operator=;
    struct IShellUIHelper2 *operator=;
};

typedef struct IShellUIHelper3 {
    struct IShellUIHelper2 IShellUIHelper2;
    HRESULT AddService;
    HRESULT IsServiceInstalled;
    HRESULT InPrivateFilteringEnabled;
    HRESULT AddToFavoritesBar;
    HRESULT BuildNewTabPage;
    HRESULT SetRecentlyClosedVisible;
    HRESULT SetActivitiesVisible;
    HRESULT ContentDiscoveryReset;
    HRESULT IsSuggestedSitesEnabled;
    HRESULT EnableSuggestedSites;
    HRESULT NavigateToSuggestedSites;
    HRESULT ShowTabsHelp;
    HRESULT ShowInPrivateHelp;
    VOID IShellUIHelper3;
    VOID IShellUIHelper3;
    VOID IShellUIHelper3;
    struct IShellUIHelper3 *operator=;
    struct IShellUIHelper3 *operator=;
};

typedef struct IShellUIHelper4 {
    struct IShellUIHelper3 IShellUIHelper3;
    HRESULT msIsSiteMode;
    HRESULT msSiteModeShowThumbBar;
    HRESULT msSiteModeAddThumbBarButton;
    HRESULT msSiteModeUpdateThumbBarButton;
    HRESULT msSiteModeSetIconOverlay;
    HRESULT msSiteModeClearIconOverlay;
    HRESULT msAddSiteMode;
    HRESULT msSiteModeCreateJumpList;
    HRESULT msSiteModeAddJumpListItem;
    HRESULT msSiteModeClearJumpList;
    HRESULT msSiteModeShowJumpList;
    HRESULT msSiteModeAddButtonStyle;
    HRESULT msSiteModeShowButtonStyle;
    HRESULT msSiteModeActivate;
    HRESULT msIsSiteModeFirstRun;
    HRESULT msAddTrackingProtectionList;
    HRESULT msTrackingProtectionEnabled;
    HRESULT msActiveXFilteringEnabled;
    VOID IShellUIHelper4;
    VOID IShellUIHelper4;
    VOID IShellUIHelper4;
    struct IShellUIHelper4 *operator=;
    struct IShellUIHelper4 *operator=;
};

typedef struct IShellUIHelper5 {
    struct IShellUIHelper4 IShellUIHelper4;
    HRESULT msProvisionNetworks;
    HRESULT msReportSafeUrl;
    HRESULT msSiteModeRefreshBadge;
    HRESULT msSiteModeClearBadge;
    HRESULT msDiagnoseConnectionUILess;
    HRESULT msLaunchNetworkClientHelp;
    HRESULT msChangeDefaultBrowser;
    VOID IShellUIHelper5;
    VOID IShellUIHelper5;
    VOID IShellUIHelper5;
    struct IShellUIHelper5 *operator=;
    struct IShellUIHelper5 *operator=;
};

typedef struct IShellUIHelper6 {
    struct IShellUIHelper5 IShellUIHelper5;
    HRESULT msStopPeriodicTileUpdate;
    HRESULT msStartPeriodicTileUpdate;
    HRESULT msStartPeriodicTileUpdateBatch;
    HRESULT msClearTile;
    HRESULT msEnableTileNotificationQueue;
    HRESULT msPinnedSiteState;
    HRESULT msEnableTileNotificationQueueForSquare150x150;
    HRESULT msEnableTileNotificationQueueForWide310x150;
    HRESULT msEnableTileNotificationQueueForSquare310x310;
    HRESULT msScheduledTileNotification;
    HRESULT msRemoveScheduledTileNotification;
    HRESULT msStartPeriodicBadgeUpdate;
    HRESULT msStopPeriodicBadgeUpdate;
    HRESULT msLaunchInternetOptions;
    VOID IShellUIHelper6;
    VOID IShellUIHelper6;
    VOID IShellUIHelper6;
    struct IShellUIHelper6 *operator=;
    struct IShellUIHelper6 *operator=;
};

typedef struct IShellUIHelper7 {
    struct IShellUIHelper6 IShellUIHelper6;
    HRESULT SetExperimentalFlag;
    HRESULT GetExperimentalFlag;
    HRESULT SetExperimentalValue;
    HRESULT GetExperimentalValue;
    HRESULT ResetAllExperimentalFlagsAndValues;
    HRESULT GetNeedIEAutoLaunchFlag;
    HRESULT SetNeedIEAutoLaunchFlag;
    HRESULT HasNeedIEAutoLaunchFlag;
    HRESULT LaunchIE;
    VOID IShellUIHelper7;
    VOID IShellUIHelper7;
    VOID IShellUIHelper7;
    struct IShellUIHelper7 *operator=;
    struct IShellUIHelper7 *operator=;
};

typedef struct IShellUIHelper8 {
    struct IShellUIHelper7 IShellUIHelper7;
    HRESULT GetCVListData;
    HRESULT GetCVListLocalData;
    HRESULT GetEMIEListData;
    HRESULT GetEMIEListLocalData;
    HRESULT OpenFavoritesPane;
    HRESULT OpenFavoritesSettings;
    HRESULT LaunchInHVSI;
    VOID IShellUIHelper8;
    VOID IShellUIHelper8;
    VOID IShellUIHelper8;
    struct IShellUIHelper8 *operator=;
    struct IShellUIHelper8 *operator=;
};

typedef struct IShellUIHelper9 {
    struct IShellUIHelper8 IShellUIHelper8;
    HRESULT GetOSSku;
    VOID IShellUIHelper9;
    VOID IShellUIHelper9;
    VOID IShellUIHelper9;
    struct IShellUIHelper9 *operator=;
    struct IShellUIHelper9 *operator=;
};

typedef struct IShellView {
    struct IOleWindow IOleWindow;
    HRESULT TranslateAcceleratorW;
    HRESULT EnableModeless;
    HRESULT UIActivate;
    HRESULT Refresh;
    HRESULT CreateViewWindow;
    HRESULT DestroyViewWindow;
    HRESULT GetCurrentInfo;
    HRESULT AddPropertySheetPages;
    HRESULT SaveViewState;
    HRESULT SelectItem;
    HRESULT GetItemObject;
    VOID IShellView;
    VOID IShellView;
    VOID IShellView;
    struct IShellView *operator=;
    struct IShellView *operator=;
};

typedef struct IShellView2 {
    struct IShellView IShellView;
    HRESULT GetView;
    HRESULT CreateViewWindow2;
    HRESULT HandleRename;
    HRESULT SelectAndPositionItem;
    VOID IShellView2;
    VOID IShellView2;
    VOID IShellView2;
    struct IShellView2 *operator=;
    struct IShellView2 *operator=;
};

typedef struct IShellWindows {
    struct IDispatch IDispatch;
    HRESULT get_Count;
    HRESULT Item;
    HRESULT _NewEnum;
    HRESULT Register;
    HRESULT RegisterPending;
    HRESULT Revoke;
    HRESULT OnNavigate;
    HRESULT OnActivated;
    HRESULT FindWindowSW;
    HRESULT OnCreated;
    HRESULT ProcessAttachDetach;
    VOID IShellWindows;
    VOID IShellWindows;
    VOID IShellWindows;
    struct IShellWindows *operator=;
    struct IShellWindows *operator=;
};

typedef struct ISimpleFrameSite {
    struct IUnknown IUnknown;
    HRESULT PreMessageFilter;
    HRESULT PostMessageFilter;
    VOID ISimpleFrameSite;
    VOID ISimpleFrameSite;
    VOID ISimpleFrameSite;
    struct ISimpleFrameSite *operator=;
    struct ISimpleFrameSite *operator=;
};

typedef struct ISimplePropertyChangeInit {
    struct IPropertyChange IPropertyChange;
    HRESULT Initialize;
    VOID ISimplePropertyChangeInit;
    VOID ISimplePropertyChangeInit;
    VOID ISimplePropertyChangeInit;
    struct ISimplePropertyChangeInit *operator=;
    struct ISimplePropertyChangeInit *operator=;
};

typedef struct ISoftDistExt {
    struct IUnknown IUnknown;
    HRESULT ProcessSoftDist;
    HRESULT GetFirstCodeBase;
    HRESULT GetNextCodeBase;
    HRESULT AsyncInstallDistributionUnit;
    VOID ISoftDistExt;
    VOID ISoftDistExt;
    VOID ISoftDistExt;
    struct ISoftDistExt *operator=;
    struct ISoftDistExt *operator=;
};

typedef struct ISpecifyPropertyPages {
    struct IUnknown IUnknown;
    HRESULT GetPages;
    VOID ISpecifyPropertyPages;
    VOID ISpecifyPropertyPages;
    VOID ISpecifyPropertyPages;
    struct ISpecifyPropertyPages *operator=;
    struct ISpecifyPropertyPages *operator=;
};

typedef struct IStdMarshalInfo {
    struct IUnknown IUnknown;
    HRESULT GetClassForHandler;
    VOID IStdMarshalInfo;
    VOID IStdMarshalInfo;
    VOID IStdMarshalInfo;
    struct IStdMarshalInfo *operator=;
    struct IStdMarshalInfo *operator=;
};

typedef struct IStorage {
    struct IUnknown IUnknown;
    HRESULT CreateStream;
    HRESULT OpenStream;
    HRESULT CreateStorage;
    HRESULT OpenStorage;
    HRESULT CopyTo;
    HRESULT MoveElementTo;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT EnumElements;
    HRESULT DestroyElement;
    HRESULT RenameElement;
    HRESULT SetElementTimes;
    HRESULT SetClass;
    HRESULT SetStateBits;
    HRESULT Stat;
    VOID IStorage;
    VOID IStorage;
    VOID IStorage;
    struct IStorage *operator=;
    struct IStorage *operator=;
};

typedef struct IStream {
    struct ISequentialStream ISequentialStream;
    HRESULT Seek;
    HRESULT SetSize;
    HRESULT CopyTo;
    HRESULT Commit;
    HRESULT Revert;
    HRESULT LockRegion;
    HRESULT UnlockRegion;
    HRESULT Stat;
    HRESULT Clone;
    VOID IStream;
    VOID IStream;
    VOID IStream;
    struct IStream *operator=;
    struct IStream *operator=;
};

typedef struct ISupportErrorInfo {
    struct IUnknown IUnknown;
    HRESULT InterfaceSupportsErrorInfo;
    VOID ISupportErrorInfo;
    VOID ISupportErrorInfo;
    VOID ISupportErrorInfo;
    struct ISupportErrorInfo *operator=;
    struct ISupportErrorInfo *operator=;
};

typedef struct ISurrogate {
    struct IUnknown IUnknown;
    HRESULT LoadDllServer;
    HRESULT FreeSurrogate;
    VOID ISurrogate;
    VOID ISurrogate;
    VOID ISurrogate;
    struct ISurrogate *operator=;
    struct ISurrogate *operator=;
};

typedef struct ISurrogateService {
    struct IUnknown IUnknown;
    HRESULT Init;
    HRESULT ApplicationLaunch;
    HRESULT ApplicationFree;
    HRESULT CatalogRefresh;
    HRESULT ProcessShutdown;
    VOID ISurrogateService;
    VOID ISurrogateService;
    VOID ISurrogateService;
    struct ISurrogateService *operator=;
    struct ISurrogateService *operator=;
};

typedef struct ISuspensionDependencyManager {
    struct IUnknown IUnknown;
    HRESULT RegisterAsChild;
    HRESULT GroupChildWithParent;
    HRESULT UngroupChildFromParent;
    VOID ISuspensionDependencyManager;
    VOID ISuspensionDependencyManager;
    VOID ISuspensionDependencyManager;
    struct ISuspensionDependencyManager *operator=;
    struct ISuspensionDependencyManager *operator=;
};

typedef struct ISynchronize {
    struct IUnknown IUnknown;
    HRESULT Wait;
    HRESULT Signal;
    HRESULT Reset;
    VOID ISynchronize;
    VOID ISynchronize;
    VOID ISynchronize;
    struct ISynchronize *operator=;
    struct ISynchronize *operator=;
};

typedef struct ISynchronizeContainer {
    struct IUnknown IUnknown;
    HRESULT AddSynchronize;
    HRESULT WaitMultiple;
    VOID ISynchronizeContainer;
    VOID ISynchronizeContainer;
    VOID ISynchronizeContainer;
    struct ISynchronizeContainer *operator=;
    struct ISynchronizeContainer *operator=;
};

typedef struct ISynchronizeEvent {
    struct ISynchronizeHandle ISynchronizeHandle;
    HRESULT SetEventHandle;
    VOID ISynchronizeEvent;
    VOID ISynchronizeEvent;
    VOID ISynchronizeEvent;
    struct ISynchronizeEvent *operator=;
    struct ISynchronizeEvent *operator=;
};

typedef struct ISynchronizeHandle {
    struct IUnknown IUnknown;
    HRESULT GetHandle;
    VOID ISynchronizeHandle;
    VOID ISynchronizeHandle;
    VOID ISynchronizeHandle;
    struct ISynchronizeHandle *operator=;
    struct ISynchronizeHandle *operator=;
};

typedef struct ISynchronizeMutex {
    struct ISynchronize ISynchronize;
    HRESULT ReleaseMutex;
    VOID ISynchronizeMutex;
    VOID ISynchronizeMutex;
    VOID ISynchronizeMutex;
    struct ISynchronizeMutex *operator=;
    struct ISynchronizeMutex *operator=;
};

typedef struct ITaskbarList {
    struct IUnknown IUnknown;
    HRESULT HrInit;
    HRESULT AddTab;
    HRESULT DeleteTab;
    HRESULT ActivateTab;
    HRESULT SetActiveAlt;
    VOID ITaskbarList;
    VOID ITaskbarList;
    VOID ITaskbarList;
    struct ITaskbarList *operator=;
    struct ITaskbarList *operator=;
};

typedef struct ITaskbarList2 {
    struct ITaskbarList ITaskbarList;
    HRESULT MarkFullscreenWindow;
    VOID ITaskbarList2;
    VOID ITaskbarList2;
    VOID ITaskbarList2;
    struct ITaskbarList2 *operator=;
    struct ITaskbarList2 *operator=;
};

typedef struct ITaskbarList3 {
    struct ITaskbarList2 ITaskbarList2;
    HRESULT SetProgressValue;
    HRESULT SetProgressState;
    HRESULT RegisterTab;
    HRESULT UnregisterTab;
    HRESULT SetTabOrder;
    HRESULT SetTabActive;
    HRESULT ThumbBarAddButtons;
    HRESULT ThumbBarUpdateButtons;
    HRESULT ThumbBarSetImageList;
    HRESULT SetOverlayIcon;
    HRESULT SetThumbnailTooltip;
    HRESULT SetThumbnailClip;
    VOID ITaskbarList3;
    VOID ITaskbarList3;
    VOID ITaskbarList3;
    struct ITaskbarList3 *operator=;
    struct ITaskbarList3 *operator=;
};

typedef struct ITaskbarList4 {
    struct ITaskbarList3 ITaskbarList3;
    HRESULT SetTabProperties;
    VOID ITaskbarList4;
    VOID ITaskbarList4;
    VOID ITaskbarList4;
    struct ITaskbarList4 *operator=;
    struct ITaskbarList4 *operator=;
};

typedef struct IThumbnailExtractor {
    struct IUnknown IUnknown;
    HRESULT ExtractThumbnail;
    HRESULT OnFileUpdated;
    VOID IThumbnailExtractor;
    VOID IThumbnailExtractor;
    VOID IThumbnailExtractor;
    struct IThumbnailExtractor *operator=;
    struct IThumbnailExtractor *operator=;
};

typedef struct IThumbnailHandlerFactory {
    struct IUnknown IUnknown;
    HRESULT GetThumbnailHandler;
    VOID IThumbnailHandlerFactory;
    VOID IThumbnailHandlerFactory;
    VOID IThumbnailHandlerFactory;
    struct IThumbnailHandlerFactory *operator=;
    struct IThumbnailHandlerFactory *operator=;
};

typedef struct ITimeAndNoticeControl {
    struct IUnknown IUnknown;
    HRESULT SuppressChanges;
    VOID ITimeAndNoticeControl;
    VOID ITimeAndNoticeControl;
    VOID ITimeAndNoticeControl;
    struct ITimeAndNoticeControl *operator=;
    struct ITimeAndNoticeControl *operator=;
};

typedef struct ITransferAdviseSink {
    struct IUnknown IUnknown;
    HRESULT UpdateProgress;
    HRESULT UpdateTransferState;
    HRESULT ConfirmOverwrite;
    HRESULT ConfirmEncryptionLoss;
    HRESULT FileFailure;
    HRESULT SubStreamFailure;
    HRESULT PropertyFailure;
    VOID ITransferAdviseSink;
    VOID ITransferAdviseSink;
    VOID ITransferAdviseSink;
    struct ITransferAdviseSink *operator=;
    struct ITransferAdviseSink *operator=;
};

typedef struct ITransferDestination {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT CreateItem;
    VOID ITransferDestination;
    VOID ITransferDestination;
    VOID ITransferDestination;
    struct ITransferDestination *operator=;
    struct ITransferDestination *operator=;
};

typedef struct ITransferMediumItem {
    struct IRelatedItem IRelatedItem;
    VOID ITransferMediumItem;
    VOID ITransferMediumItem;
    VOID ITransferMediumItem;
    struct ITransferMediumItem *operator=;
    struct ITransferMediumItem *operator=;
};

typedef struct ITransferSource {
    struct IUnknown IUnknown;
    HRESULT Advise;
    HRESULT Unadvise;
    HRESULT SetProperties;
    HRESULT OpenItem;
    HRESULT MoveItem;
    HRESULT RecycleItem;
    HRESULT RemoveItem;
    HRESULT RenameItem;
    HRESULT LinkItem;
    HRESULT ApplyPropertiesToItem;
    HRESULT GetDefaultDestinationName;
    HRESULT EnterFolder;
    HRESULT LeaveFolder;
    VOID ITransferSource;
    VOID ITransferSource;
    VOID ITransferSource;
    struct ITransferSource *operator=;
    struct ITransferSource *operator=;
};

typedef struct ITypeChangeEvents {
    struct IUnknown IUnknown;
    HRESULT RequestTypeChange;
    HRESULT AfterTypeChange;
    VOID ITypeChangeEvents;
    VOID ITypeChangeEvents;
    VOID ITypeChangeEvents;
    struct ITypeChangeEvents *operator=;
    struct ITypeChangeEvents *operator=;
};

typedef struct ITypeComp {
    struct IUnknown IUnknown;
    HRESULT Bind;
    HRESULT BindType;
    VOID ITypeComp;
    VOID ITypeComp;
    VOID ITypeComp;
    struct ITypeComp *operator=;
    struct ITypeComp *operator=;
};

typedef struct ITypeFactory {
    struct IUnknown IUnknown;
    HRESULT CreateFromTypeInfo;
    VOID ITypeFactory;
    VOID ITypeFactory;
    VOID ITypeFactory;
    struct ITypeFactory *operator=;
    struct ITypeFactory *operator=;
};

typedef struct ITypeInfo {
    struct IUnknown IUnknown;
    HRESULT GetTypeAttr;
    HRESULT GetTypeComp;
    HRESULT GetFuncDesc;
    HRESULT GetVarDesc;
    HRESULT GetNames;
    HRESULT GetRefTypeOfImplType;
    HRESULT GetImplTypeFlags;
    HRESULT GetIDsOfNames;
    HRESULT Invoke;
    HRESULT GetDocumentation;
    HRESULT GetDllEntry;
    HRESULT GetRefTypeInfo;
    HRESULT AddressOfMember;
    HRESULT CreateInstance;
    HRESULT GetMops;
    HRESULT GetContainingTypeLib;
    VOID ReleaseTypeAttr;
    VOID ReleaseFuncDesc;
    VOID ReleaseVarDesc;
    VOID ITypeInfo;
    VOID ITypeInfo;
    VOID ITypeInfo;
    struct ITypeInfo *operator=;
    struct ITypeInfo *operator=;
};

typedef struct ITypeInfo2 {
    struct ITypeInfo ITypeInfo;
    HRESULT GetTypeKind;
    HRESULT GetTypeFlags;
    HRESULT GetFuncIndexOfMemId;
    HRESULT GetVarIndexOfMemId;
    HRESULT GetCustData;
    HRESULT GetFuncCustData;
    HRESULT GetParamCustData;
    HRESULT GetVarCustData;
    HRESULT GetImplTypeCustData;
    HRESULT GetDocumentation2;
    HRESULT GetAllCustData;
    HRESULT GetAllFuncCustData;
    HRESULT GetAllParamCustData;
    HRESULT GetAllVarCustData;
    HRESULT GetAllImplTypeCustData;
    VOID ITypeInfo2;
    VOID ITypeInfo2;
    VOID ITypeInfo2;
    struct ITypeInfo2 *operator=;
    struct ITypeInfo2 *operator=;
};

typedef struct ITypeLib {
    struct IUnknown IUnknown;
    ULONG GetTypeInfoCount;
    HRESULT GetTypeInfo;
    HRESULT GetTypeInfoType;
    HRESULT GetTypeInfoOfGuid;
    HRESULT GetLibAttr;
    HRESULT GetTypeComp;
    HRESULT GetDocumentation;
    HRESULT IsName;
    HRESULT FindName;
    VOID ReleaseTLibAttr;
    VOID ITypeLib;
    VOID ITypeLib;
    VOID ITypeLib;
    struct ITypeLib *operator=;
    struct ITypeLib *operator=;
};

typedef struct ITypeLib2 {
    struct ITypeLib ITypeLib;
    HRESULT GetCustData;
    HRESULT GetLibStatistics;
    HRESULT GetDocumentation2;
    HRESULT GetAllCustData;
    VOID ITypeLib2;
    VOID ITypeLib2;
    VOID ITypeLib2;
    struct ITypeLib2 *operator=;
    struct ITypeLib2 *operator=;
};

typedef struct ITypeLibRegistration {
    struct IUnknown IUnknown;
    HRESULT GetGuid;
    HRESULT GetVersion;
    HRESULT GetLcid;
    HRESULT GetWin32Path;
    HRESULT GetWin64Path;
    HRESULT GetDisplayName;
    HRESULT GetFlags;
    HRESULT GetHelpDir;
    VOID ITypeLibRegistration;
    VOID ITypeLibRegistration;
    VOID ITypeLibRegistration;
    struct ITypeLibRegistration *operator=;
    struct ITypeLibRegistration *operator=;
};

typedef struct ITypeLibRegistrationReader {
    struct IUnknown IUnknown;
    HRESULT EnumTypeLibRegistrations;
    VOID ITypeLibRegistrationReader;
    VOID ITypeLibRegistrationReader;
    VOID ITypeLibRegistrationReader;
    struct ITypeLibRegistrationReader *operator=;
    struct ITypeLibRegistrationReader *operator=;
};

typedef struct ITypeMarshal {
    struct IUnknown IUnknown;
    HRESULT Size;
    HRESULT Marshal;
    HRESULT Unmarshal;
    HRESULT Free;
    VOID ITypeMarshal;
    VOID ITypeMarshal;
    VOID ITypeMarshal;
    struct ITypeMarshal *operator=;
    struct ITypeMarshal *operator=;
};

typedef struct IUICommand {
    struct IUIElement IUIElement;
    HRESULT get_CanonicalName;
    HRESULT get_State;
    HRESULT Invoke;
    VOID IUICommand;
    VOID IUICommand;
    VOID IUICommand;
    struct IUICommand *operator=;
    struct IUICommand *operator=;
};

typedef struct IUIElement {
    struct IUnknown IUnknown;
    HRESULT get_Name;
    HRESULT get_Icon;
    HRESULT get_Tooltip;
    VOID IUIElement;
    VOID IUIElement;
    VOID IUIElement;
    struct IUIElement *operator=;
    struct IUIElement *operator=;
};

typedef struct IURLSearchHook {
    struct IUnknown IUnknown;
    HRESULT Translate;
    VOID IURLSearchHook;
    VOID IURLSearchHook;
    VOID IURLSearchHook;
    struct IURLSearchHook *operator=;
    struct IURLSearchHook *operator=;
};

typedef struct IURLSearchHook2 {
    struct IURLSearchHook IURLSearchHook;
    HRESULT TranslateWithSearchContext;
    VOID IURLSearchHook2;
    VOID IURLSearchHook2;
    VOID IURLSearchHook2;
    struct IURLSearchHook2 *operator=;
    struct IURLSearchHook2 *operator=;
};

typedef struct IUnknown {
Error: Could not get member name.
    HRESULT QueryInterface;
    ULONG AddRef;
    ULONG Release;
    VOID IUnknown;
    VOID IUnknown;
    VOID IUnknown;
    struct IUnknown *operator=;
    struct IUnknown *operator=;
};

typedef struct IUpdateIDList {
    struct IUnknown IUnknown;
    HRESULT Update;
    VOID IUpdateIDList;
    VOID IUpdateIDList;
    VOID IUpdateIDList;
    struct IUpdateIDList *operator=;
    struct IUpdateIDList *operator=;
};

typedef struct IUri {
    struct IUnknown IUnknown;
    HRESULT GetPropertyBSTR;
    HRESULT GetPropertyLength;
    HRESULT GetPropertyDWORD;
    HRESULT HasProperty;
    HRESULT GetAbsoluteUri;
    HRESULT GetAuthority;
    HRESULT GetDisplayUri;
    HRESULT GetDomain;
    HRESULT GetExtension;
    HRESULT GetFragment;
    HRESULT GetHost;
    HRESULT GetPassword;
    HRESULT GetPath;
    HRESULT GetPathAndQuery;
    HRESULT GetQuery;
    HRESULT GetRawUri;
    HRESULT GetSchemeName;
    HRESULT GetUserInfo;
    HRESULT GetUserNameW;
    HRESULT GetHostType;
    HRESULT GetPort;
    HRESULT GetScheme;
    HRESULT GetZone;
    HRESULT GetProperties;
    HRESULT IsEqual;
    VOID IUri;
    VOID IUri;
    VOID IUri;
    struct IUri *operator=;
    struct IUri *operator=;
};

typedef struct IUriBuilder {
    struct IUnknown IUnknown;
    HRESULT CreateUriSimple;
    HRESULT CreateUri;
    HRESULT CreateUriWithFlags;
    HRESULT GetIUri;
    HRESULT SetIUri;
    HRESULT GetFragment;
    HRESULT GetHost;
    HRESULT GetPassword;
    HRESULT GetPath;
    HRESULT GetPort;
    HRESULT GetQuery;
    HRESULT GetSchemeName;
    HRESULT GetUserNameW;
    HRESULT SetFragment;
    HRESULT SetHost;
    HRESULT SetPassword;
    HRESULT SetPath;
    HRESULT SetPortW;
    HRESULT SetQuery;
    HRESULT SetSchemeName;
    HRESULT SetUserName;
    HRESULT RemoveProperties;
    HRESULT HasBeenModified;
    VOID IUriBuilder;
    VOID IUriBuilder;
    VOID IUriBuilder;
    struct IUriBuilder *operator=;
    struct IUriBuilder *operator=;
};

typedef struct IUriBuilderFactory {
    struct IUnknown IUnknown;
    HRESULT CreateIUriBuilder;
    HRESULT CreateInitializedIUriBuilder;
    VOID IUriBuilderFactory;
    VOID IUriBuilderFactory;
    VOID IUriBuilderFactory;
    struct IUriBuilderFactory *operator=;
    struct IUriBuilderFactory *operator=;
};

typedef struct IUriContainer {
    struct IUnknown IUnknown;
    HRESULT GetIUri;
    VOID IUriContainer;
    VOID IUriContainer;
    VOID IUriContainer;
    struct IUriContainer *operator=;
    struct IUriContainer *operator=;
};

typedef struct IUrlMon {
    struct IUnknown IUnknown;
    HRESULT AsyncGetClassBits;
    VOID IUrlMon;
    VOID IUrlMon;
    VOID IUrlMon;
    struct IUrlMon *operator=;
    struct IUrlMon *operator=;
};

typedef struct IUserNotification {
    struct IUnknown IUnknown;
    HRESULT SetBalloonInfo;
    HRESULT SetBalloonRetry;
    HRESULT SetIconInfo;
    HRESULT Show;
    HRESULT PlaySoundW;
    VOID IUserNotification;
    VOID IUserNotification;
    VOID IUserNotification;
    struct IUserNotification *operator=;
    struct IUserNotification *operator=;
};

typedef struct IViewObject {
    struct IUnknown IUnknown;
    HRESULT Draw;
    HRESULT GetColorSet;
    HRESULT Freeze;
    HRESULT Unfreeze;
    HRESULT SetAdvise;
    HRESULT GetAdvise;
    VOID IViewObject;
    VOID IViewObject;
    VOID IViewObject;
    struct IViewObject *operator=;
    struct IViewObject *operator=;
};

typedef struct IViewObject2 {
    struct IViewObject IViewObject;
    HRESULT GetExtent;
    VOID IViewObject2;
    VOID IViewObject2;
    VOID IViewObject2;
    struct IViewObject2 *operator=;
    struct IViewObject2 *operator=;
};

typedef struct IViewObjectEx {
    struct IViewObject2 IViewObject2;
    HRESULT GetRect;
    HRESULT GetViewStatus;
    HRESULT QueryHitPoint;
    HRESULT QueryHitRect;
    HRESULT GetNaturalExtent;
    VOID IViewObjectEx;
    VOID IViewObjectEx;
    VOID IViewObjectEx;
    struct IViewObjectEx *operator=;
    struct IViewObjectEx *operator=;
};

typedef struct IViewStateIdentityItem {
    struct IRelatedItem IRelatedItem;
    VOID IViewStateIdentityItem;
    VOID IViewStateIdentityItem;
    VOID IViewStateIdentityItem;
    struct IViewStateIdentityItem *operator=;
    struct IViewStateIdentityItem *operator=;
};

typedef struct IVirtualDesktopManager {
    struct IUnknown IUnknown;
    HRESULT IsWindowOnCurrentVirtualDesktop;
    HRESULT GetWindowDesktopId;
    HRESULT MoveWindowToDesktop;
    VOID IVirtualDesktopManager;
    VOID IVirtualDesktopManager;
    VOID IVirtualDesktopManager;
    struct IVirtualDesktopManager *operator=;
    struct IVirtualDesktopManager *operator=;
};

typedef struct IWICBitmap {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Lock;
    HRESULT SetPalette;
    HRESULT SetResolution;
    VOID IWICBitmap;
    VOID IWICBitmap;
    VOID IWICBitmap;
    struct IWICBitmap *operator=;
    struct IWICBitmap *operator=;
};

typedef struct IWICBitmapClipper {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Initialize;
    VOID IWICBitmapClipper;
    VOID IWICBitmapClipper;
    VOID IWICBitmapClipper;
    struct IWICBitmapClipper *operator=;
    struct IWICBitmapClipper *operator=;
};

typedef struct IWICBitmapCodecInfo {
    struct IWICComponentInfo IWICComponentInfo;
    HRESULT GetContainerFormat;
    HRESULT GetPixelFormats;
    HRESULT GetColorManagementVersion;
    HRESULT GetDeviceManufacturer;
    HRESULT GetDeviceModels;
    HRESULT GetMimeTypes;
    HRESULT GetFileExtensions;
    HRESULT DoesSupportAnimation;
    HRESULT DoesSupportChromakey;
    HRESULT DoesSupportLossless;
    HRESULT DoesSupportMultiframe;
    HRESULT MatchesMimeType;
    VOID IWICBitmapCodecInfo;
    VOID IWICBitmapCodecInfo;
    VOID IWICBitmapCodecInfo;
    struct IWICBitmapCodecInfo *operator=;
    struct IWICBitmapCodecInfo *operator=;
};

typedef struct IWICBitmapDecoder {
    struct IUnknown IUnknown;
    HRESULT QueryCapability;
    HRESULT Initialize;
    HRESULT GetContainerFormat;
    HRESULT GetDecoderInfo;
    HRESULT CopyPalette;
    HRESULT GetMetadataQueryReader;
    HRESULT GetPreview;
    HRESULT GetColorContexts;
    HRESULT GetThumbnail;
    HRESULT GetFrameCount;
    HRESULT GetFrame;
    VOID IWICBitmapDecoder;
    VOID IWICBitmapDecoder;
    VOID IWICBitmapDecoder;
    struct IWICBitmapDecoder *operator=;
    struct IWICBitmapDecoder *operator=;
};

typedef struct IWICBitmapDecoderInfo {
    struct IWICBitmapCodecInfo IWICBitmapCodecInfo;
    HRESULT GetPatterns;
    HRESULT MatchesPattern;
    HRESULT CreateInstance;
    VOID IWICBitmapDecoderInfo;
    VOID IWICBitmapDecoderInfo;
    VOID IWICBitmapDecoderInfo;
    struct IWICBitmapDecoderInfo *operator=;
    struct IWICBitmapDecoderInfo *operator=;
};

typedef struct IWICBitmapEncoder {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT GetContainerFormat;
    HRESULT GetEncoderInfo;
    HRESULT SetColorContexts;
    HRESULT SetPalette;
    HRESULT SetThumbnail;
    HRESULT SetPreview;
    HRESULT CreateNewFrame;
    HRESULT Commit;
    HRESULT GetMetadataQueryWriter;
    VOID IWICBitmapEncoder;
    VOID IWICBitmapEncoder;
    VOID IWICBitmapEncoder;
    struct IWICBitmapEncoder *operator=;
    struct IWICBitmapEncoder *operator=;
};

typedef struct IWICBitmapEncoderInfo {
    struct IWICBitmapCodecInfo IWICBitmapCodecInfo;
    HRESULT CreateInstance;
    VOID IWICBitmapEncoderInfo;
    VOID IWICBitmapEncoderInfo;
    VOID IWICBitmapEncoderInfo;
    struct IWICBitmapEncoderInfo *operator=;
    struct IWICBitmapEncoderInfo *operator=;
};

typedef struct IWICBitmapFlipRotator {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Initialize;
    VOID IWICBitmapFlipRotator;
    VOID IWICBitmapFlipRotator;
    VOID IWICBitmapFlipRotator;
    struct IWICBitmapFlipRotator *operator=;
    struct IWICBitmapFlipRotator *operator=;
};

typedef struct IWICBitmapFrameDecode {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT GetMetadataQueryReader;
    HRESULT GetColorContexts;
    HRESULT GetThumbnail;
    VOID IWICBitmapFrameDecode;
    VOID IWICBitmapFrameDecode;
    VOID IWICBitmapFrameDecode;
    struct IWICBitmapFrameDecode *operator=;
    struct IWICBitmapFrameDecode *operator=;
};

typedef struct IWICBitmapFrameEncode {
    struct IUnknown IUnknown;
    HRESULT Initialize;
    HRESULT SetSize;
    HRESULT SetResolution;
    HRESULT SetPixelFormat;
    HRESULT SetColorContexts;
    HRESULT SetPalette;
    HRESULT SetThumbnail;
    HRESULT WritePixels;
    HRESULT WriteSource;
    HRESULT Commit;
    HRESULT GetMetadataQueryWriter;
    VOID IWICBitmapFrameEncode;
    VOID IWICBitmapFrameEncode;
    VOID IWICBitmapFrameEncode;
    struct IWICBitmapFrameEncode *operator=;
    struct IWICBitmapFrameEncode *operator=;
};

typedef struct IWICBitmapLock {
    struct IUnknown IUnknown;
    HRESULT GetSize;
    HRESULT GetStride;
    HRESULT GetDataPointer;
    HRESULT GetPixelFormat;
    VOID IWICBitmapLock;
    VOID IWICBitmapLock;
    VOID IWICBitmapLock;
    struct IWICBitmapLock *operator=;
    struct IWICBitmapLock *operator=;
};

typedef struct IWICBitmapScaler {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Initialize;
    VOID IWICBitmapScaler;
    VOID IWICBitmapScaler;
    VOID IWICBitmapScaler;
    struct IWICBitmapScaler *operator=;
    struct IWICBitmapScaler *operator=;
};

typedef struct IWICBitmapSource {
    struct IUnknown IUnknown;
    HRESULT GetSize;
    HRESULT GetPixelFormat;
    HRESULT GetResolution;
    HRESULT CopyPalette;
    HRESULT CopyPixels;
    VOID IWICBitmapSource;
    VOID IWICBitmapSource;
    VOID IWICBitmapSource;
    struct IWICBitmapSource *operator=;
    struct IWICBitmapSource *operator=;
};

typedef struct IWICColorContext {
    struct IUnknown IUnknown;
    HRESULT InitializeFromFilename;
    HRESULT InitializeFromMemory;
    HRESULT InitializeFromExifColorSpace;
    HRESULT GetType;
    HRESULT GetProfileBytes;
    HRESULT GetExifColorSpace;
    VOID IWICColorContext;
    VOID IWICColorContext;
    VOID IWICColorContext;
    struct IWICColorContext *operator=;
    struct IWICColorContext *operator=;
};

typedef struct IWICColorTransform {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Initialize;
    VOID IWICColorTransform;
    VOID IWICColorTransform;
    VOID IWICColorTransform;
    struct IWICColorTransform *operator=;
    struct IWICColorTransform *operator=;
};

typedef struct IWICComponentInfo {
    struct IUnknown IUnknown;
    HRESULT GetComponentType;
    HRESULT GetCLSID;
    HRESULT GetSigningStatus;
    HRESULT GetAuthor;
    HRESULT GetVendorGUID;
    HRESULT GetVersion;
    HRESULT GetSpecVersion;
    HRESULT GetFriendlyName;
    VOID IWICComponentInfo;
    VOID IWICComponentInfo;
    VOID IWICComponentInfo;
    struct IWICComponentInfo *operator=;
    struct IWICComponentInfo *operator=;
};

typedef struct IWICFastMetadataEncoder {
    struct IUnknown IUnknown;
    HRESULT Commit;
    HRESULT GetMetadataQueryWriter;
    VOID IWICFastMetadataEncoder;
    VOID IWICFastMetadataEncoder;
    VOID IWICFastMetadataEncoder;
    struct IWICFastMetadataEncoder *operator=;
    struct IWICFastMetadataEncoder *operator=;
};

typedef struct IWICFormatConverter {
    struct IWICBitmapSource IWICBitmapSource;
    HRESULT Initialize;
    HRESULT CanConvert;
    VOID IWICFormatConverter;
    VOID IWICFormatConverter;
    VOID IWICFormatConverter;
    struct IWICFormatConverter *operator=;
    struct IWICFormatConverter *operator=;
};

typedef struct IWICImagingFactory {
    struct IUnknown IUnknown;
    HRESULT CreateDecoderFromFilename;
    HRESULT CreateDecoderFromStream;
    HRESULT CreateDecoderFromFileHandle;
    HRESULT CreateComponentInfo;
    HRESULT CreateDecoder;
    HRESULT CreateEncoder;
    HRESULT CreatePalette;
    HRESULT CreateFormatConverter;
    HRESULT CreateBitmapScaler;
    HRESULT CreateBitmapClipper;
    HRESULT CreateBitmapFlipRotator;
    HRESULT CreateStream;
    HRESULT CreateColorContext;
    HRESULT CreateColorTransformer;
    HRESULT CreateBitmap;
    HRESULT CreateBitmapFromSource;
    HRESULT CreateBitmapFromSourceRect;
    HRESULT CreateBitmapFromMemory;
    HRESULT CreateBitmapFromHBITMAP;
    HRESULT CreateBitmapFromHICON;
    HRESULT CreateComponentEnumerator;
    HRESULT CreateFastMetadataEncoderFromDecoder;
    HRESULT CreateFastMetadataEncoderFromFrameDecode;
    HRESULT CreateQueryWriter;
    HRESULT CreateQueryWriterFromReader;
    VOID IWICImagingFactory;
    VOID IWICImagingFactory;
    VOID IWICImagingFactory;
    struct IWICImagingFactory *operator=;
    struct IWICImagingFactory *operator=;
};

typedef struct IWICMetadataQueryReader {
    struct IUnknown IUnknown;
    HRESULT GetContainerFormat;
    HRESULT GetLocation;
    HRESULT GetMetadataByName;
    HRESULT GetEnumerator;
    VOID IWICMetadataQueryReader;
    VOID IWICMetadataQueryReader;
    VOID IWICMetadataQueryReader;
    struct IWICMetadataQueryReader *operator=;
    struct IWICMetadataQueryReader *operator=;
};

typedef struct IWICMetadataQueryWriter {
    struct IWICMetadataQueryReader IWICMetadataQueryReader;
    HRESULT SetMetadataByName;
    HRESULT RemoveMetadataByName;
    VOID IWICMetadataQueryWriter;
    VOID IWICMetadataQueryWriter;
    VOID IWICMetadataQueryWriter;
    struct IWICMetadataQueryWriter *operator=;
    struct IWICMetadataQueryWriter *operator=;
};

typedef struct IWICPalette {
    struct IUnknown IUnknown;
    HRESULT InitializePredefined;
    HRESULT InitializeCustom;
    HRESULT InitializeFromBitmap;
    HRESULT InitializeFromPalette;
    HRESULT GetType;
    HRESULT GetColorCount;
    HRESULT GetColors;
    HRESULT IsBlackWhite;
    HRESULT IsGrayscale;
    HRESULT HasAlpha;
    VOID IWICPalette;
    VOID IWICPalette;
    VOID IWICPalette;
    struct IWICPalette *operator=;
    struct IWICPalette *operator=;
};

typedef struct IWICStream {
    struct IStream IStream;
    HRESULT InitializeFromIStream;
    HRESULT InitializeFromFilename;
    HRESULT InitializeFromMemory;
    HRESULT InitializeFromIStreamRegion;
    VOID IWICStream;
    VOID IWICStream;
    VOID IWICStream;
    struct IWICStream *operator=;
    struct IWICStream *operator=;
};

typedef struct IWaitMultiple {
    struct IUnknown IUnknown;
    HRESULT WaitMultiple;
    HRESULT AddSynchronize;
    VOID IWaitMultiple;
    VOID IWaitMultiple;
    VOID IWaitMultiple;
    struct IWaitMultiple *operator=;
    struct IWaitMultiple *operator=;
};

typedef struct IWeakReference {
    struct IUnknown IUnknown;
    HRESULT Resolve;
    VOID IWeakReference;
    VOID IWeakReference;
    VOID IWeakReference;
    struct IWeakReference *operator=;
    struct IWeakReference *operator=;
};

typedef struct IWeakReferenceSource {
    struct IUnknown IUnknown;
    HRESULT GetWeakReference;
    VOID IWeakReferenceSource;
    VOID IWeakReferenceSource;
    VOID IWeakReferenceSource;
    struct IWeakReferenceSource *operator=;
    struct IWeakReferenceSource *operator=;
};

typedef struct IWebBrowser {
    struct IDispatch IDispatch;
    HRESULT GoBack;
    HRESULT GoForward;
    HRESULT GoHome;
    HRESULT GoSearch;
    HRESULT Navigate;
    HRESULT Refresh;
    HRESULT Refresh2;
    HRESULT Stop;
    HRESULT get_Application;
    HRESULT get_Parent;
    HRESULT get_Container;
    HRESULT get_Document;
    HRESULT get_TopLevelContainer;
    HRESULT get_Type;
    HRESULT get_Left;
    HRESULT put_Left;
    HRESULT get_Top;
    HRESULT put_Top;
    HRESULT get_Width;
    HRESULT put_Width;
    HRESULT get_Height;
    HRESULT put_Height;
    HRESULT get_LocationName;
    HRESULT get_LocationURL;
    HRESULT get_Busy;
    VOID IWebBrowser;
    VOID IWebBrowser;
    VOID IWebBrowser;
    struct IWebBrowser *operator=;
    struct IWebBrowser *operator=;
};

typedef struct IWebBrowser2 {
    struct IWebBrowserApp IWebBrowserApp;
    HRESULT Navigate2;
    HRESULT QueryStatusWB;
    HRESULT ExecWB;
    HRESULT ShowBrowserBar;
    HRESULT get_ReadyState;
    HRESULT get_Offline;
    HRESULT put_Offline;
    HRESULT get_Silent;
    HRESULT put_Silent;
    HRESULT get_RegisterAsBrowser;
    HRESULT put_RegisterAsBrowser;
    HRESULT get_RegisterAsDropTarget;
    HRESULT put_RegisterAsDropTarget;
    HRESULT get_TheaterMode;
    HRESULT put_TheaterMode;
    HRESULT get_AddressBar;
    HRESULT put_AddressBar;
    HRESULT get_Resizable;
    HRESULT put_Resizable;
    VOID IWebBrowser2;
    VOID IWebBrowser2;
    VOID IWebBrowser2;
    struct IWebBrowser2 *operator=;
    struct IWebBrowser2 *operator=;
};

typedef struct IWebBrowserApp {
    struct IWebBrowser IWebBrowser;
    HRESULT Quit;
    HRESULT ClientToWindow;
    HRESULT PutProperty;
    HRESULT GetProperty;
    HRESULT get_Name;
    HRESULT get_HWND;
    HRESULT get_FullName;
    HRESULT get_Path;
    HRESULT get_Visible;
    HRESULT put_Visible;
    HRESULT get_StatusBar;
    HRESULT put_StatusBar;
    HRESULT get_StatusText;
    HRESULT put_StatusText;
    HRESULT get_ToolBar;
    HRESULT put_ToolBar;
    HRESULT get_MenuBar;
    HRESULT put_MenuBar;
    HRESULT get_FullScreen;
    HRESULT put_FullScreen;
    VOID IWebBrowserApp;
    VOID IWebBrowserApp;
    VOID IWebBrowserApp;
    struct IWebBrowserApp *operator=;
    struct IWebBrowserApp *operator=;
};

typedef struct IWebWizardHost {
    struct IDispatch IDispatch;
    HRESULT FinalBack;
    HRESULT FinalNext;
    HRESULT Cancel;
    HRESULT put_Caption;
    HRESULT get_Caption;
    HRESULT put_Property;
    HRESULT get_Property;
    HRESULT SetWizardButtons;
    HRESULT SetHeaderText;
    VOID IWebWizardHost;
    VOID IWebWizardHost;
    VOID IWebWizardHost;
    struct IWebWizardHost *operator=;
    struct IWebWizardHost *operator=;
};

typedef struct IWebWizardHost2 {
    struct IWebWizardHost IWebWizardHost;
    HRESULT SignString;
    VOID IWebWizardHost2;
    VOID IWebWizardHost2;
    VOID IWebWizardHost2;
    struct IWebWizardHost2 *operator=;
    struct IWebWizardHost2 *operator=;
};

typedef struct IWinInetCacheHints {
    struct IUnknown IUnknown;
    HRESULT SetCacheExtension;
    VOID IWinInetCacheHints;
    VOID IWinInetCacheHints;
    VOID IWinInetCacheHints;
    struct IWinInetCacheHints *operator=;
    struct IWinInetCacheHints *operator=;
};

typedef struct IWinInetCacheHints2 {
    struct IWinInetCacheHints IWinInetCacheHints;
    HRESULT SetCacheExtension2;
    VOID IWinInetCacheHints2;
    VOID IWinInetCacheHints2;
    VOID IWinInetCacheHints2;
    struct IWinInetCacheHints2 *operator=;
    struct IWinInetCacheHints2 *operator=;
};

typedef struct IWinInetFileStream {
    struct IUnknown IUnknown;
    HRESULT SetHandleForUnlock;
    HRESULT SetDeleteFile;
    VOID IWinInetFileStream;
    VOID IWinInetFileStream;
    VOID IWinInetFileStream;
    struct IWinInetFileStream *operator=;
    struct IWinInetFileStream *operator=;
};

typedef struct IWinInetHttpInfo {
    struct IWinInetInfo IWinInetInfo;
    HRESULT QueryInfo;
    VOID IWinInetHttpInfo;
    VOID IWinInetHttpInfo;
    VOID IWinInetHttpInfo;
    struct IWinInetHttpInfo *operator=;
    struct IWinInetHttpInfo *operator=;
};

typedef struct IWinInetHttpTimeouts {
    struct IUnknown IUnknown;
    HRESULT GetRequestTimeouts;
    VOID IWinInetHttpTimeouts;
    VOID IWinInetHttpTimeouts;
    VOID IWinInetHttpTimeouts;
    struct IWinInetHttpTimeouts *operator=;
    struct IWinInetHttpTimeouts *operator=;
};

typedef struct IWinInetInfo {
    struct IUnknown IUnknown;
    HRESULT QueryOption;
    VOID IWinInetInfo;
    VOID IWinInetInfo;
    VOID IWinInetInfo;
    struct IWinInetInfo *operator=;
    struct IWinInetInfo *operator=;
};

typedef struct IWindowForBindingUI {
    struct IUnknown IUnknown;
    HRESULT GetWindow;
    VOID IWindowForBindingUI;
    VOID IWindowForBindingUI;
    VOID IWindowForBindingUI;
    struct IWindowForBindingUI *operator=;
    struct IWindowForBindingUI *operator=;
};

typedef struct IWrappedProtocol {
    struct IUnknown IUnknown;
    HRESULT GetWrapperCode;
    VOID IWrappedProtocol;
    VOID IWrappedProtocol;
    VOID IWrappedProtocol;
    struct IWrappedProtocol *operator=;
    struct IWrappedProtocol *operator=;
};

typedef struct IXMLAttribute {
    struct IDispatch IDispatch;
    HRESULT get_name;
    HRESULT get_value;
    VOID IXMLAttribute;
    VOID IXMLAttribute;
    VOID IXMLAttribute;
    struct IXMLAttribute *operator=;
    struct IXMLAttribute *operator=;
};

typedef struct IXMLDOMAttribute {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_name;
    HRESULT get_value;
    HRESULT put_value;
    VOID IXMLDOMAttribute;
    VOID IXMLDOMAttribute;
    VOID IXMLDOMAttribute;
    struct IXMLDOMAttribute *operator=;
    struct IXMLDOMAttribute *operator=;
};

typedef struct IXMLDOMCDATASection {
    struct IXMLDOMText IXMLDOMText;
    VOID IXMLDOMCDATASection;
    VOID IXMLDOMCDATASection;
    VOID IXMLDOMCDATASection;
    struct IXMLDOMCDATASection *operator=;
    struct IXMLDOMCDATASection *operator=;
};

typedef struct IXMLDOMCharacterData {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_data;
    HRESULT put_data;
    HRESULT get_length;
    HRESULT substringData;
    HRESULT appendData;
    HRESULT insertData;
    HRESULT deleteData;
    HRESULT replaceData;
    VOID IXMLDOMCharacterData;
    VOID IXMLDOMCharacterData;
    VOID IXMLDOMCharacterData;
    struct IXMLDOMCharacterData *operator=;
    struct IXMLDOMCharacterData *operator=;
};

typedef struct IXMLDOMComment {
    struct IXMLDOMCharacterData IXMLDOMCharacterData;
    VOID IXMLDOMComment;
    VOID IXMLDOMComment;
    VOID IXMLDOMComment;
    struct IXMLDOMComment *operator=;
    struct IXMLDOMComment *operator=;
};

typedef struct IXMLDOMDocument {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_doctype;
    HRESULT get_implementation;
    HRESULT get_documentElement;
    HRESULT putref_documentElement;
    HRESULT createElement;
    HRESULT createDocumentFragment;
    HRESULT createTextNode;
    HRESULT createComment;
    HRESULT createCDATASection;
    HRESULT createProcessingInstruction;
    HRESULT createAttribute;
    HRESULT createEntityReference;
    HRESULT getElementsByTagName;
    HRESULT createNode;
    HRESULT nodeFromID;
    HRESULT load;
    HRESULT get_readyState;
    HRESULT get_parseError;
    HRESULT get_url;
    HRESULT get_async;
    HRESULT put_async;
    HRESULT abort;
    HRESULT loadXML;
    HRESULT save;
    HRESULT get_validateOnParse;
    HRESULT put_validateOnParse;
    HRESULT get_resolveExternals;
    HRESULT put_resolveExternals;
    HRESULT get_preserveWhiteSpace;
    HRESULT put_preserveWhiteSpace;
    HRESULT put_onreadystatechange;
    HRESULT put_ondataavailable;
    HRESULT put_ontransformnode;
    VOID IXMLDOMDocument;
    VOID IXMLDOMDocument;
    VOID IXMLDOMDocument;
    struct IXMLDOMDocument *operator=;
    struct IXMLDOMDocument *operator=;
};

typedef struct IXMLDOMDocumentFragment {
    struct IXMLDOMNode IXMLDOMNode;
    VOID IXMLDOMDocumentFragment;
    VOID IXMLDOMDocumentFragment;
    VOID IXMLDOMDocumentFragment;
    struct IXMLDOMDocumentFragment *operator=;
    struct IXMLDOMDocumentFragment *operator=;
};

typedef struct IXMLDOMDocumentType {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_name;
    HRESULT get_entities;
    HRESULT get_notations;
    VOID IXMLDOMDocumentType;
    VOID IXMLDOMDocumentType;
    VOID IXMLDOMDocumentType;
    struct IXMLDOMDocumentType *operator=;
    struct IXMLDOMDocumentType *operator=;
};

typedef struct IXMLDOMElement {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_tagName;
    HRESULT getAttribute;
    HRESULT setAttribute;
    HRESULT removeAttribute;
    HRESULT getAttributeNode;
    HRESULT setAttributeNode;
    HRESULT removeAttributeNode;
    HRESULT getElementsByTagName;
    HRESULT normalize;
    VOID IXMLDOMElement;
    VOID IXMLDOMElement;
    VOID IXMLDOMElement;
    struct IXMLDOMElement *operator=;
    struct IXMLDOMElement *operator=;
};

typedef struct IXMLDOMEntity {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_publicId;
    HRESULT get_systemId;
    HRESULT get_notationName;
    VOID IXMLDOMEntity;
    VOID IXMLDOMEntity;
    VOID IXMLDOMEntity;
    struct IXMLDOMEntity *operator=;
    struct IXMLDOMEntity *operator=;
};

typedef struct IXMLDOMEntityReference {
    struct IXMLDOMNode IXMLDOMNode;
    VOID IXMLDOMEntityReference;
    VOID IXMLDOMEntityReference;
    VOID IXMLDOMEntityReference;
    struct IXMLDOMEntityReference *operator=;
    struct IXMLDOMEntityReference *operator=;
};

typedef struct IXMLDOMImplementation {
    struct IDispatch IDispatch;
    HRESULT hasFeature;
    VOID IXMLDOMImplementation;
    VOID IXMLDOMImplementation;
    VOID IXMLDOMImplementation;
    struct IXMLDOMImplementation *operator=;
    struct IXMLDOMImplementation *operator=;
};

typedef struct IXMLDOMNamedNodeMap {
    struct IDispatch IDispatch;
    HRESULT getNamedItem;
    HRESULT setNamedItem;
    HRESULT removeNamedItem;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT getQualifiedItem;
    HRESULT removeQualifiedItem;
    HRESULT nextNode;
    HRESULT reset;
    HRESULT get__newEnum;
    VOID IXMLDOMNamedNodeMap;
    VOID IXMLDOMNamedNodeMap;
    VOID IXMLDOMNamedNodeMap;
    struct IXMLDOMNamedNodeMap *operator=;
    struct IXMLDOMNamedNodeMap *operator=;
};

typedef struct IXMLDOMNode {
    struct IDispatch IDispatch;
    HRESULT get_nodeName;
    HRESULT get_nodeValue;
    HRESULT put_nodeValue;
    HRESULT get_nodeType;
    HRESULT get_parentNode;
    HRESULT get_childNodes;
    HRESULT get_firstChild;
    HRESULT get_lastChild;
    HRESULT get_previousSibling;
    HRESULT get_nextSibling;
    HRESULT get_attributes;
    HRESULT insertBefore;
    HRESULT replaceChild;
    HRESULT removeChild;
    HRESULT appendChild;
    HRESULT hasChildNodes;
    HRESULT get_ownerDocument;
    HRESULT cloneNode;
    HRESULT get_nodeTypeString;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT get_specified;
    HRESULT get_definition;
    HRESULT get_nodeTypedValue;
    HRESULT put_nodeTypedValue;
    HRESULT get_dataType;
    HRESULT put_dataType;
    HRESULT get_xml;
    HRESULT transformNode;
    HRESULT selectNodes;
    HRESULT selectSingleNode;
    HRESULT get_parsed;
    HRESULT get_namespaceURI;
    HRESULT get_prefix;
    HRESULT get_baseName;
    HRESULT transformNodeToObject;
    VOID IXMLDOMNode;
    VOID IXMLDOMNode;
    VOID IXMLDOMNode;
    struct IXMLDOMNode *operator=;
    struct IXMLDOMNode *operator=;
};

typedef struct IXMLDOMNodeList {
    struct IDispatch IDispatch;
    HRESULT get_item;
    HRESULT get_length;
    HRESULT nextNode;
    HRESULT reset;
    HRESULT get__newEnum;
    VOID IXMLDOMNodeList;
    VOID IXMLDOMNodeList;
    VOID IXMLDOMNodeList;
    struct IXMLDOMNodeList *operator=;
    struct IXMLDOMNodeList *operator=;
};

typedef struct IXMLDOMNotation {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_publicId;
    HRESULT get_systemId;
    VOID IXMLDOMNotation;
    VOID IXMLDOMNotation;
    VOID IXMLDOMNotation;
    struct IXMLDOMNotation *operator=;
    struct IXMLDOMNotation *operator=;
};

typedef struct IXMLDOMParseError {
    struct IDispatch IDispatch;
    HRESULT get_errorCode;
    HRESULT get_url;
    HRESULT get_reason;
    HRESULT get_srcText;
    HRESULT get_line;
    HRESULT get_linepos;
    HRESULT get_filepos;
    VOID IXMLDOMParseError;
    VOID IXMLDOMParseError;
    VOID IXMLDOMParseError;
    struct IXMLDOMParseError *operator=;
    struct IXMLDOMParseError *operator=;
};

typedef struct IXMLDOMProcessingInstruction {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT get_target;
    HRESULT get_data;
    HRESULT put_data;
    VOID IXMLDOMProcessingInstruction;
    VOID IXMLDOMProcessingInstruction;
    VOID IXMLDOMProcessingInstruction;
    struct IXMLDOMProcessingInstruction *operator=;
    struct IXMLDOMProcessingInstruction *operator=;
};

typedef struct IXMLDOMText {
    struct IXMLDOMCharacterData IXMLDOMCharacterData;
    HRESULT splitText;
    VOID IXMLDOMText;
    VOID IXMLDOMText;
    VOID IXMLDOMText;
    struct IXMLDOMText *operator=;
    struct IXMLDOMText *operator=;
};

typedef struct IXMLDSOControl {
    struct IDispatch IDispatch;
    HRESULT get_XMLDocument;
    HRESULT put_XMLDocument;
    HRESULT get_JavaDSOCompatible;
    HRESULT put_JavaDSOCompatible;
    HRESULT get_readyState;
    VOID IXMLDSOControl;
    VOID IXMLDSOControl;
    VOID IXMLDSOControl;
    struct IXMLDSOControl *operator=;
    struct IXMLDSOControl *operator=;
};

typedef struct IXMLDocument {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_fileSize;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_URL;
    HRESULT put_URL;
    HRESULT get_mimeType;
    HRESULT get_readyState;
    HRESULT get_charset;
    HRESULT put_charset;
    HRESULT get_version;
    HRESULT get_doctype;
    HRESULT get_dtdURL;
    HRESULT createElement;
    VOID IXMLDocument;
    VOID IXMLDocument;
    VOID IXMLDocument;
    struct IXMLDocument *operator=;
    struct IXMLDocument *operator=;
};

typedef struct IXMLDocument2 {
    struct IDispatch IDispatch;
    HRESULT get_root;
    HRESULT get_fileSize;
    HRESULT get_fileModifiedDate;
    HRESULT get_fileUpdatedDate;
    HRESULT get_URL;
    HRESULT put_URL;
    HRESULT get_mimeType;
    HRESULT get_readyState;
    HRESULT get_charset;
    HRESULT put_charset;
    HRESULT get_version;
    HRESULT get_doctype;
    HRESULT get_dtdURL;
    HRESULT createElement;
    HRESULT get_async;
    HRESULT put_async;
    VOID IXMLDocument2;
    VOID IXMLDocument2;
    VOID IXMLDocument2;
    struct IXMLDocument2 *operator=;
    struct IXMLDocument2 *operator=;
};

typedef struct IXMLElement {
    struct IDispatch IDispatch;
    HRESULT get_tagName;
    HRESULT put_tagName;
    HRESULT get_parent;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT get_children;
    HRESULT get_type;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT addChild;
    HRESULT removeChild;
    VOID IXMLElement;
    VOID IXMLElement;
    VOID IXMLElement;
    struct IXMLElement *operator=;
    struct IXMLElement *operator=;
};

typedef struct IXMLElement2 {
    struct IDispatch IDispatch;
    HRESULT get_tagName;
    HRESULT put_tagName;
    HRESULT get_parent;
    HRESULT setAttribute;
    HRESULT getAttribute;
    HRESULT removeAttribute;
    HRESULT get_children;
    HRESULT get_type;
    HRESULT get_text;
    HRESULT put_text;
    HRESULT addChild;
    HRESULT removeChild;
    HRESULT get_attributes;
    VOID IXMLElement2;
    VOID IXMLElement2;
    VOID IXMLElement2;
    struct IXMLElement2 *operator=;
    struct IXMLElement2 *operator=;
};

typedef struct IXMLElementCollection {
    struct IDispatch IDispatch;
    HRESULT put_length;
    HRESULT get_length;
    HRESULT get__newEnum;
    HRESULT item;
    VOID IXMLElementCollection;
    VOID IXMLElementCollection;
    VOID IXMLElementCollection;
    struct IXMLElementCollection *operator=;
    struct IXMLElementCollection *operator=;
};

typedef struct IXMLError {
    struct IUnknown IUnknown;
    HRESULT GetErrorInfo;
    VOID IXMLError;
    VOID IXMLError;
    VOID IXMLError;
    struct IXMLError *operator=;
    struct IXMLError *operator=;
};

typedef struct IXMLHttpRequest {
    struct IDispatch IDispatch;
    HRESULT open;
    HRESULT setRequestHeader;
    HRESULT getResponseHeader;
    HRESULT getAllResponseHeaders;
    HRESULT send;
    HRESULT abort;
    HRESULT get_status;
    HRESULT get_statusText;
    HRESULT get_responseXML;
    HRESULT get_responseText;
    HRESULT get_responseBody;
    HRESULT get_responseStream;
    HRESULT get_readyState;
    HRESULT put_onreadystatechange;
    VOID IXMLHttpRequest;
    VOID IXMLHttpRequest;
    VOID IXMLHttpRequest;
    struct IXMLHttpRequest *operator=;
    struct IXMLHttpRequest *operator=;
};

typedef struct IXTLRuntime {
    struct IXMLDOMNode IXMLDOMNode;
    HRESULT uniqueID;
    HRESULT depth;
    HRESULT childNumber;
    HRESULT ancestorChildNumber;
    HRESULT absoluteChildNumber;
    HRESULT formatIndex;
    HRESULT formatNumber;
    HRESULT formatDate;
    HRESULT formatTime;
    VOID IXTLRuntime;
    VOID IXTLRuntime;
    VOID IXTLRuntime;
    struct IXTLRuntime *operator=;
    struct IXTLRuntime *operator=;
};

typedef struct IZoneIdentifier {
    struct IUnknown IUnknown;
    HRESULT GetId;
    HRESULT SetId;
    HRESULT Remove;
    VOID IZoneIdentifier;
    VOID IZoneIdentifier;
    VOID IZoneIdentifier;
    struct IZoneIdentifier *operator=;
    struct IZoneIdentifier *operator=;
};

typedef struct IZoneIdentifier2 {
    struct IZoneIdentifier IZoneIdentifier;
    HRESULT GetLastWriterPackageFamilyName;
    HRESULT SetLastWriterPackageFamilyName;
    HRESULT RemoveLastWriterPackageFamilyName;
    HRESULT GetAppZoneId;
    HRESULT SetAppZoneId;
    HRESULT RemoveAppZoneId;
    VOID IZoneIdentifier2;
    VOID IZoneIdentifier2;
    VOID IZoneIdentifier2;
    struct IZoneIdentifier2 *operator=;
    struct IZoneIdentifier2 *operator=;
};

typedef struct IZoomEvents {
    struct IUnknown IUnknown;
    HRESULT OnZoomPercentChanged;
    VOID IZoomEvents;
    VOID IZoomEvents;
    VOID IZoomEvents;
    struct IZoomEvents *operator=;
    struct IZoomEvents *operator=;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    ULONG ControlFlags;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2 {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
    LONG64 CriticalReservationIops;
    LONG64 ReservationBandwidth;
    LONG64 CriticalReservationBandwidth;
    LONG64 MaxTimePercent;
    LONG64 ReservationTimePercent;
    LONG64 CriticalReservationTimePercent;
};

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 {
    LONG64 MaxIops;
    LONG64 MaxBandwidth;
    LONG64 ReservationIops;
    PWCHAR VolumeName;
    ULONG BaseIoSize;
    enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
    USHORT VolumeNameLength;
    LONG64 CriticalReservationIops;
    LONG64 ReservationBandwidth;
    LONG64 CriticalReservationBandwidth;
    LONG64 MaxTimePercent;
    LONG64 ReservationTimePercent;
    LONG64 CriticalReservationTimePercent;
    LONG64 SoftMaxIops;
    LONG64 SoftMaxBandwidth;
    LONG64 SoftMaxTimePercent;
    LONG64 LimitExcessNotifyIops;
    LONG64 LimitExcessNotifyBandwidth;
    LONG64 LimitExcessNotifyTimePercent;
};

typedef struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2 {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobHighMemoryLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
    ULONG64 JobLowMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlToleranceLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlToleranceLimit;
};

typedef struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION {
    ULONG64 MaxBandwidth;
    enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS ControlFlags;
    UCHAR DscpTag;
};

typedef struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2 {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobHighMemoryLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL CpuRateControlToleranceInterval;
    ULONG LimitFlags;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
    ULONG64 JobLowMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL IoRateControlToleranceInterval;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL NetRateControlToleranceInterval;
};

typedef struct JUMPTOPARENTHDR {
    LONG iParentOffset;
};

typedef struct KERB_CRYPTO_KEY {
    LONG KeyType;
    ULONG Length;
    PUCHAR Value;
};

typedef struct KERB_CRYPTO_KEY32 {
    LONG KeyType;
    ULONG Length;
    ULONG Offset;
};

typedef struct KEY_PID_ARRAY {
    PVOID PID;
    struct _UNICODE_STRING KeyName;
};

typedef struct KNOWNFOLDER_DEFINITION {
    enum KF_CATEGORY category;
    PWCHAR pszName;
    PWCHAR pszDescription;
    struct _GUID fidParent;
    PWCHAR pszRelativePath;
    PWCHAR pszParsingName;
    PWCHAR pszTooltip;
    PWCHAR pszLocalizedName;
    PWCHAR pszIcon;
    PWCHAR pszSecurity;
    ULONG dwAttributes;
    ULONG kfdFlags;
    struct _GUID ftidType;
};

typedef struct LCPOLICYINFOGENERIC {
    ULONG ulVersion;
};

typedef struct LCPOLICYINFO_V1A {
    ULONG ulVersion;
    PCHAR lpPolicyName;
    PCHAR lpPolicyDescription;
};

typedef struct LCPOLICYINFO_V1W {
    ULONG ulVersion;
    PWCHAR lpPolicyName;
    PWCHAR lpPolicyDescription;
};

typedef struct LIST_ENTRY32 {
    ULONG Flink;
    ULONG Blink;
};

typedef struct LIST_ENTRY64 {
    ULONG64 Flink;
    ULONG64 Blink;
};

typedef struct LOADTHEMEFORTESTPARAMS {
    ULONG cbSize;
    PWCHAR pszThemeName;
    PWCHAR pszColorParam;
    PWCHAR pszSizeParam;
    USHORT wDesiredLangID;
    LONG iDesiredDpi;
    LONG rgConnectedDpis[7];
    LONG fEmulateGlobal;
    LONG fForceHighContrast;
    CUxThemeFile *pLoadedUxThemeFile;
};

typedef struct LOADTHEMEMETRICS {
    struct THEMEMETRICS THEMEMETRICS;
    CWideString wsStrings[4];
    VOID LOADTHEMEMETRICS;
    VOID LOADTHEMEMETRICS;
    VOID LOADTHEMEMETRICS;
    VOID ~LOADTHEMEMETRICS;
    struct LOADTHEMEMETRICS *operator=;
    struct LOADTHEMEMETRICS *operator=;
    PVOID __vecDelDtor;
};

typedef struct LVINSERTMARK {
    ULONG cbSize;
    ULONG dwFlags;
    LONG iItem;
    ULONG dwReserved;
};

typedef struct MAPTOIMAGELISTINDEXPARAMS {
    struct IShellTaskScheduler *psts;
    struct IShellFolder *psf;
    struct _ITEMIDLIST *pidlChild;
    PVOID pfnCallback;
    PVOID pvCallbackData;
    PVOID pvCallbackHint;
    ULONG uQueryFlags;
};

typedef struct MARK_HANDLE_INFO {
    ULONG UsnSourceInfo;
    ULONG CopyNumber;
    PVOID VolumeHandle;
    ULONG HandleInfo;
};

typedef struct MARK_HANDLE_INFO32 {
    ULONG UsnSourceInfo;
    ULONG CopyNumber;
    ULONG VolumeHandle;
    ULONG HandleInfo;
};

typedef struct MCHITTESTINFO {
    ULONG cbSize;
    struct tagPOINT pt;
    ULONG uHit;
    struct _SYSTEMTIME st;
    struct tagRECT rc;
    LONG iOffset;
    LONG iRow;
    LONG iCol;
};

typedef struct MDIBTN {
    ULONG wID;
    enum WINDOWPARTS iPartId;
    enum SIZINGTYPE sizingType;
    struct tagSIZE size;
    ULONG fTypePrev;
    struct HBITMAP__ *hbmPrev;
    struct HBITMAP__ *hbmTheme;
};

typedef struct MEM_EXTENDED_PARAMETER {
    ULONG64 Type : 8;
    ULONG64 Reserved : 56;
    ULONG64 ULong64;
    PVOID Pointer;
    ULONG64 Size;
    PVOID Handle;
    ULONG ULong;
};

typedef struct MENUITEMTEMPLATE {
    USHORT mtOption;
    USHORT mtID;
    WCHAR mtString[1];
};

typedef struct MENUITEMTEMPLATE2 {
    ULONG dwHelpID;
    ULONG fType;
    ULONG fState;
    ULONG menuId;
    USHORT wResInfo;
    WCHAR mtString[1];
};

typedef struct MENUITEMTEMPLATEHEADER {
    USHORT versionNumber;
    USHORT offset;
};

typedef struct MFT_ENUM_DATA_V0 {
    ULONG64 StartFileReferenceNumber;
    LONG64 LowUsn;
    LONG64 HighUsn;
};

typedef struct MFT_ENUM_DATA_V1 {
    ULONG64 StartFileReferenceNumber;
    LONG64 LowUsn;
    LONG64 HighUsn;
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct MOVE_FILE_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER StartingLcn;
    ULONG ClusterCount;
};

typedef struct MOVE_FILE_RECORD_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileRecord;
    union _LARGE_INTEGER TargetFileRecord;
};

typedef struct Microsoft::WRL::CloakedIid<IMarshal> {
    struct IMarshal IMarshal;
    VOID CloakedIid<IMarshal>;
    VOID CloakedIid<IMarshal>;
    VOID CloakedIid<IMarshal>;
    struct Microsoft::WRL::CloakedIid<IMarshal> *operator=;
    struct Microsoft::WRL::CloakedIid<IMarshal> *operator=;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<2>,1> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > Type;
};

typedef struct Microsoft::WRL::Details::AdjustImplements<Microsoft::WRL::RuntimeClassFlags<3>,1> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Type;
};

typedef struct Microsoft::WRL::Details::AreAllNil<Microsoft::WRL::Details::Nil> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::BoolStruct {
    LONG Member;
};

typedef struct Microsoft::WRL::Details::CreatorMap {
    HRESULT *factoryCreator;
     <unnamed-type-activationId>;
    union {
        struct _GUID *clsid;
        PWCHAR *getRuntimeName;
    } activationId;
    enum TrustLevel *getTrustLevel;
    struct Microsoft::WRL::Details::FactoryCache *factoryCache;
    PWCHAR serverName;
};

typedef struct Microsoft::WRL::Details::EnableIf<1,void *> {
    PVOID type;
};

typedef struct Microsoft::WRL::Details::FactoryCache {
    struct IUnknown *factory;
     <unnamed-type-cookie>;
    union {
        struct {
        } *winrt;
        ULONG com;
    } cookie;
};

typedef struct Microsoft::WRL::Details::Identity<IUnknown * &> {
    struct IUnknown **Type;
};

typedef struct Microsoft::WRL::Details::ImplementsBase {
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct IActivationFactory IActivationFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> {
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> {
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> {
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> {
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMe;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMe;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMe;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationM;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::IReference<float> Windows::Foundation::IReference<float>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IReference<float>,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescription Windows::UI::Core::AnimationMetrics::IAnimationDescription;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> {
    struct IWeakReferenceSource IWeakReferenceSource;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > {
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > CurrentType;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> {
    struct Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> {
    struct Windows::UI::Core::AnimationMetrics::IOpacityAnimation Windows::UI::Core::AnimationMetrics::IOpacityAnimation;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> {
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation Windows::UI::Core::AnimationMetrics::IPropertyAnimation;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID ~ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation> {
    struct Windows::UI::Core::AnimationMetrics::IScaleAnimation Windows::UI::Core::AnimationMetrics::IScaleAnimation;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IScaleAnimation> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> {
    struct IWeakReference IWeakReference;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> {
    struct IMarshal IMarshal;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal> CurrentType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
};

typedef struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1> {
    HRESULT CanCastTo;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil> {
    Microsoft::WRL::Details::Nil Base;
    ULONG IidCount;
    VOID FillArrayWithIid;
};

typedef struct Microsoft::WRL::Details::IsSame<IAgileReference,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IAgileReference,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IInspectable,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IInspectable,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IMarshal,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IMarshal,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IUnknown,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IUnknown,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IWeakReference,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<IWeakReference,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IInspectable> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::IsSame<Microsoft::WRL::Details::WeakReferenceImpl,IUnknown> {
    BOOLEAN value;
};

typedef struct Microsoft::WRL::Details::MarkImplements<IMarshal,0> {
    struct IMarshal Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<IWeakReference,0> {
    struct IWeakReference Type;
};

typedef struct Microsoft::WRL::Details::MarkImplements<Microsoft::WRL::CloakedIid<IMarshal>,0> {
    struct Microsoft::WRL::CloakedIid<IMarshal> Type;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsof;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsof;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsof;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > *operator=;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft:;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft:;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft:;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > *operator=;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,I;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,I;
    VOID Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,I;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > *operator=;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > {
    Microsoft::WRL::FtmBase Microsoft::WRL::FtmBase;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    VOID ~Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > {
    WinRTAnimationBase WinRTAnimationBase;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    VOID ~Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > *operator=;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > {
    WinRTAnimationBase WinRTAnimationBase;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    VOID ~Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > *operator=;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > {
    WinRTAnimationBase WinRTAnimationBase;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    VOID Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    VOID ~Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> >;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > *operator=;
    struct Microsoft::WRL::Details::Selector<WinRTAnimationBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource> > *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IActivationFactory,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::FtmBase,1,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,WinRTAnimationBase,0,1> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IReference<float>,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IAnimationDescription,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IOpacityAnimation,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::UI::Core::AnimationMetrics::IScaleAnimation,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0> {
    VOID Verify;
};

typedef struct Microsoft::WRL::ErrorHelper<0> {
    VOID OriginateError;
};

typedef struct Microsoft::WRL::ErrorHelper<16> {
    VOID OriginateError;
};

typedef struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<1> ClassFlags;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    VOID ~Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase>;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> *operator=;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,Microsoft::WRL::FtmBase> *operator=;
    PVOID __vecDelDtor;
};

typedef struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > {
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Details::ImplementsBase Microsoft::WRL::Details::ImplementsBase;
    struct Microsoft::WRL::RuntimeClassFlags<3> ClassFlags;
    struct Microsoft::WRL::CloakedIid<IMarshal> FirstInterface;
    struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> > BaseType;
    HRESULT CanCastTo;
    struct IUnknown *CastToUnknown;
    ULONG GetIidCount;
    VOID FillArrayWithIid;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    VOID Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
    struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> > *operator=;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<13> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<1> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<2> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<3> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<4> {
    ULONG value;
};

typedef struct Microsoft::WRL::RuntimeClassFlags<5> {
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits {
    struct _RTL_CRITICAL_SECTION *Type;
    struct _RTL_CRITICAL_SECTION *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits {
    PVOID Type;
    BOOLEAN Close;
    PVOID GetInvalidValue;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits {
    PVOID Type;
    BOOLEAN Close;
    PVOID GetInvalidValue;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits {
    struct _RTL_SRWLOCK *Type;
    struct _RTL_SRWLOCK *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits {
    struct _RTL_SRWLOCK *Type;
    struct _RTL_SRWLOCK *GetInvalidValue;
    VOID Unlock;
};

typedef struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits {
    struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
    VOID Unlock;
};

typedef struct NCADORNMENT_INFO {
    enum NCADORNMENT adornment;
    struct tagRECT rcWindow;
};

typedef struct NCRYPT_ALLOC_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER {
    ULONG magic;
    ULONG cbHeader;
    ULONG cbPublic;
    ULONG cbPrivate;
    ULONG cbName;
};

typedef struct NCTRANSPARENCY {
    LONG fCaption : 1;
    LONG fSmallCaption : 1;
    LONG fMinCaption : 1;
    LONG fSmallMinCaption : 1;
    LONG fMaxCaption : 1;
    LONG fSmallMaxCaption : 1;
    LONG fFrameLeft : 1;
    LONG fFrameRight : 1;
    LONG fFrameBottom : 1;
    LONG fSmFrameLeft : 1;
    LONG fSmFrameRight : 1;
    LONG fSmFrameBottom : 1;
    LONG fReserved0 : 1;
    LONG fReserved1 : 1;
    LONG fReserved2 : 1;
    LONG fReserved3 : 1;
};

typedef struct NCryptKeyName {
    PWCHAR pszName;
    PWCHAR pszAlgid;
    ULONG dwLegacyKeySpec;
    ULONG dwFlags;
};

typedef struct NCryptProviderName {
    PWCHAR pszName;
    PWCHAR pszComment;
};

typedef struct NDR_ALLOC_ALL_NODES_CONTEXT {
};

typedef struct NDR_POINTER_QUEUE_STATE {
};

typedef struct NET_ADDRESS_INFO_ {
};

typedef struct NINEGRIDPOS {
    LONG xLeft;
    LONG xRight;
    LONG yTop;
    LONG yBottom;
};

typedef struct NMCBEDRAGBEGINA {
    struct tagNMHDR hdr;
    LONG iItemid;
    CHAR szText[260];
};

typedef struct NMCBEDRAGBEGINW {
    struct tagNMHDR hdr;
    LONG iItemid;
    WCHAR szText[260];
};

typedef struct NMCBEENDEDITA {
    struct tagNMHDR hdr;
    LONG fChanged;
    LONG iNewSelection;
    CHAR szText[260];
    LONG iWhy;
};

typedef struct NMCBEENDEDITW {
    struct tagNMHDR hdr;
    LONG fChanged;
    LONG iNewSelection;
    WCHAR szText[260];
    LONG iWhy;
};

typedef struct NMCOMBOBOXEXA {
    struct tagNMHDR hdr;
    struct tagCOMBOBOXEXITEMA ceItem;
};

typedef struct NMCOMBOBOXEXW {
    struct tagNMHDR hdr;
    struct tagCOMBOBOXEXITEMW ceItem;
};

typedef struct NMPGCALCSIZE {
    struct tagNMHDR hdr;
    ULONG dwFlag;
    LONG iWidth;
    LONG iHeight;
};

typedef struct NMPGSCROLL {
    struct tagNMHDR hdr;
    USHORT fwKeys;
    struct tagRECT rcParent;
    LONG iDir;
    LONG iXpos;
    LONG iYpos;
    LONG iScroll;
};

typedef struct NMSEARCHWEB {
    struct tagNMHDR hdr;
    enum EC_SEARCHWEB_ENTRYPOINT entrypoint;
    LONG hasQueryText;
    LONG invokeSucceeded;
};

typedef struct NMTBDISPINFOA {
    struct tagNMHDR hdr;
    ULONG dwMask;
    LONG idCommand;
    ULONG64 lParam;
    LONG iImage;
    PCHAR pszText;
    LONG cchText;
};

typedef struct NMTBDISPINFOW {
    struct tagNMHDR hdr;
    ULONG dwMask;
    LONG idCommand;
    ULONG64 lParam;
    LONG iImage;
    PWCHAR pszText;
    LONG cchText;
};

typedef struct NONSHARABLEDATAHDR {
    ULONG dwFlags;
    LONG iLoadId;
    LONG cBitmaps;
    LONG iBitmapsOffset;
};

typedef struct NOTIFY_USER_POWER_SETTING {
    struct _GUID Guid;
};

typedef struct NTFS_EXTENDED_VOLUME_DATA {
    ULONG ByteCount;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG BytesPerPhysicalSector;
    USHORT LfsMajorVersion;
    USHORT LfsMinorVersion;
    ULONG MaxDeviceTrimExtentCount;
    ULONG MaxDeviceTrimByteCount;
    ULONG MaxVolumeTrimExtentCount;
    ULONG MaxVolumeTrimByteCount;
};

typedef struct NTFS_FILE_RECORD_INPUT_BUFFER {
    union _LARGE_INTEGER FileReferenceNumber;
};

typedef struct NTFS_FILE_RECORD_OUTPUT_BUFFER {
    union _LARGE_INTEGER FileReferenceNumber;
    ULONG FileRecordLength;
    UCHAR FileRecordBuffer[1];
};

typedef struct NTFS_VOLUME_DATA_BUFFER {
    union _LARGE_INTEGER VolumeSerialNumber;
    union _LARGE_INTEGER NumberSectors;
    union _LARGE_INTEGER TotalClusters;
    union _LARGE_INTEGER FreeClusters;
    union _LARGE_INTEGER TotalReserved;
    ULONG BytesPerSector;
    ULONG BytesPerCluster;
    ULONG BytesPerFileRecordSegment;
    ULONG ClustersPerFileRecordSegment;
    union _LARGE_INTEGER MftValidDataLength;
    union _LARGE_INTEGER MftStartLcn;
    union _LARGE_INTEGER Mft2StartLcn;
    union _LARGE_INTEGER MftZoneStart;
    union _LARGE_INTEGER MftZoneEnd;
};

typedef struct NT_CONSOLE_PROPS {
    struct tagDATABLOCKHEADER dbh;
    USHORT wFillAttribute;
    USHORT wPopupFillAttribute;
    struct _COORD dwScreenBufferSize;
    struct _COORD dwWindowSize;
    struct _COORD dwWindowOrigin;
    ULONG nFont;
    ULONG nInputBufferSize;
    struct _COORD dwFontSize;
    ULONG uFontFamily;
    ULONG uFontWeight;
    WCHAR FaceName[32];
    ULONG uCursorSize;
    LONG bFullScreen;
    LONG bQuickEdit;
    LONG bInsertMode;
    LONG bAutoPosition;
    ULONG uHistoryBufferSize;
    ULONG uNumberOfHistoryBuffers;
    LONG bHistoryNoDup;
    ULONG ColorTable[16];
};

typedef struct NT_FE_CONSOLE_PROPS {
    struct tagDATABLOCKHEADER dbh;
    ULONG uCodePage;
};

typedef struct NUMPARSE {
    LONG cDig;
    ULONG dwInFlags;
    ULONG dwOutFlags;
    LONG cchUsed;
    LONG nBaseShift;
    LONG nPwr10;
};

typedef struct Node {
    wil::details::ThreadFailureCallbackHolder *value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node *pNext;
    VOID Node;
};

typedef struct OPENCARDNAMEA {
    ULONG dwStructSize;
    struct HWND__ *hwndOwner;
    ULONG64 hSCardContext;
    PCHAR lpstrGroupNames;
    ULONG nMaxGroupNames;
    PCHAR lpstrCardNames;
    ULONG nMaxCardNames;
    struct _GUID *rgguidInterfaces;
    ULONG cguidInterfaces;
    PCHAR lpstrRdr;
    ULONG nMaxRdr;
    PCHAR lpstrCard;
    ULONG nMaxCard;
    PCHAR lpstrTitle;
    ULONG dwFlags;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
    ULONG dwActiveProtocol;
    PULONG64 lpfnConnect;
    PLONG lpfnCheck;
    PVOID lpfnDisconnect;
    ULONG64 hCardHandle;
};

typedef struct OPENCARDNAMEW {
    ULONG dwStructSize;
    struct HWND__ *hwndOwner;
    ULONG64 hSCardContext;
    PWCHAR lpstrGroupNames;
    ULONG nMaxGroupNames;
    PWCHAR lpstrCardNames;
    ULONG nMaxCardNames;
    struct _GUID *rgguidInterfaces;
    ULONG cguidInterfaces;
    PWCHAR lpstrRdr;
    ULONG nMaxRdr;
    PWCHAR lpstrCard;
    ULONG nMaxCard;
    PWCHAR lpstrTitle;
    ULONG dwFlags;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
    ULONG dwActiveProtocol;
    PULONG64 lpfnConnect;
    PLONG lpfnCheck;
    PVOID lpfnDisconnect;
    ULONG64 hCardHandle;
};

typedef struct OPENCARDNAME_EXA {
    ULONG dwStructSize;
    ULONG64 hSCardContext;
    struct HWND__ *hwndOwner;
    ULONG dwFlags;
    PCHAR lpstrTitle;
    PCHAR lpstrSearchDesc;
    struct HICON__ *hIcon;
    struct OPENCARD_SEARCH_CRITERIAA *pOpenCardSearchCriteria;
    PULONG64 lpfnConnect;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
    PCHAR lpstrRdr;
    ULONG nMaxRdr;
    PCHAR lpstrCard;
    ULONG nMaxCard;
    ULONG dwActiveProtocol;
    ULONG64 hCardHandle;
};

typedef struct OPENCARDNAME_EXW {
    ULONG dwStructSize;
    ULONG64 hSCardContext;
    struct HWND__ *hwndOwner;
    ULONG dwFlags;
    PWCHAR lpstrTitle;
    PWCHAR lpstrSearchDesc;
    struct HICON__ *hIcon;
    struct OPENCARD_SEARCH_CRITERIAW *pOpenCardSearchCriteria;
    PULONG64 lpfnConnect;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
    PWCHAR lpstrRdr;
    ULONG nMaxRdr;
    PWCHAR lpstrCard;
    ULONG nMaxCard;
    ULONG dwActiveProtocol;
    ULONG64 hCardHandle;
};

typedef struct OPENCARD_SEARCH_CRITERIAA {
    ULONG dwStructSize;
    PCHAR lpstrGroupNames;
    ULONG nMaxGroupNames;
    struct _GUID *rgguidInterfaces;
    ULONG cguidInterfaces;
    PCHAR lpstrCardNames;
    ULONG nMaxCardNames;
    PLONG lpfnCheck;
    PULONG64 lpfnConnect;
    PVOID lpfnDisconnect;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
};

typedef struct OPENCARD_SEARCH_CRITERIAW {
    ULONG dwStructSize;
    PWCHAR lpstrGroupNames;
    ULONG nMaxGroupNames;
    struct _GUID *rgguidInterfaces;
    ULONG cguidInterfaces;
    PWCHAR lpstrCardNames;
    ULONG nMaxCardNames;
    PLONG lpfnCheck;
    PULONG64 lpfnConnect;
    PVOID lpfnDisconnect;
    PVOID pvUserData;
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
};

typedef struct ORDERITEM {
    struct _ITEMIDLIST *pidl;
    LONG nOrder;
    ULONG lParam;
};

typedef struct PARSETABLE {
    enum THEMEPRIMITIVEID tpi;
    HRESULT *pfnAlloc;
    HRESULT *pfnAllocRes;
    HRESULT *pfnLoad;
    PVOID pfnUnload;
};

typedef struct PARTJUMPTABLEHDR {
    LONG iBaseClassIndex;
    LONG iFirstDrawObjIndex;
    LONG iFirstTextObjIndex;
    UCHAR cParts;
};

typedef struct PARTOBJHDR {
    LONG iPartId;
    LONG iStateId;
};

typedef struct PART_STATE_INDEX {
    LONG iPartId;
    LONG iStateId;
    LONG iIndex;
    LONG iLen;
};

typedef struct PBRANGE {
    LONG iLow;
    LONG iHigh;
};

typedef struct PFNS {
    HRESULT *ImageList_QIProc;
    PLONG DrawShadowText;
    PVOID DrawSizeBox;
    PVOID DrawScrollBar;
    struct HWND__ **SizeBoxHwnd;
    PLONG ScrollBar_MouseMove;
    PVOID ScrollBar_Menu;
    PVOID HandleScrollCmd;
    PVOID DetachScrollBars;
    PVOID AttachScrollBars;
    PLONG SetScrollInfo;
    PLONG GetScrollInfo;
    PLONG EnableScrollBar;
    PLONG64 QuerySystemGestureStatus;
};

typedef struct PFNSUXCTRL::PFNS {
    HRESULT *ImageList_QIProc;
    PLONG DrawShadowText;
    PVOID DrawSizeBox;
    PVOID DrawScrollBar;
    struct HWND__ **SizeBoxHwnd;
    PLONG ScrollBar_MouseMove;
    PVOID ScrollBar_Menu;
    PVOID HandleScrollCmd;
    PVOID DetachScrollBars;
    PVOID AttachScrollBars;
    PLONG SetScrollInfo;
    PLONG GetScrollInfo;
    PLONG EnableScrollBar;
    PLONG64 QuerySystemGestureStatus;
};

typedef struct POWERBROADCAST_SETTING {
    struct _GUID PowerSetting;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct POWER_ACTION_POLICY {
    enum POWER_ACTION Action;
    ULONG Flags;
    ULONG EventCode;
};

typedef struct POWER_STATE_HANDLER {
    enum POWER_STATE_HANDLER_TYPE Type;
    UCHAR RtcWake;
    UCHAR Spare[3];
    PLONG Handler;
    PVOID Context;
};

typedef struct POWER_STATE_NOTIFY_HANDLER {
    PLONG Handler;
    PVOID Context;
};

typedef struct PPM_IDLESTATE_EVENT {
    ULONG NewState;
    ULONG OldState;
    ULONG64 Processors;
};

typedef struct PPM_IDLE_ACCOUNTING {
    ULONG StateCount;
    ULONG TotalTransitions;
    ULONG ResetCount;
    ULONG64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING State[1];
};

typedef struct PPM_IDLE_ACCOUNTING_EX {
    ULONG StateCount;
    ULONG TotalTransitions;
    ULONG ResetCount;
    ULONG AbortCount;
    ULONG64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
};

typedef struct PPM_IDLE_STATE_ACCOUNTING {
    ULONG IdleTransitions;
    ULONG FailedTransitions;
    ULONG InvalidBucketIndex;
    ULONG64 TotalTime;
    ULONG IdleTimeBuckets[6];
};

typedef struct PPM_IDLE_STATE_ACCOUNTING_EX {
    ULONG64 TotalTime;
    ULONG IdleTransitions;
    ULONG FailedTransitions;
    ULONG InvalidBucketIndex;
    ULONG MinTimeUs;
    ULONG MaxTimeUs;
    ULONG CancelledTransitions;
    struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
};

typedef struct PPM_IDLE_STATE_BUCKET_EX {
    ULONG64 TotalTimeUs;
    ULONG MinTimeUs;
    ULONG MaxTimeUs;
    ULONG Count;
};

typedef struct PPM_PERFSTATE_DOMAIN_EVENT {
    ULONG State;
    ULONG Latency;
    ULONG Speed;
    ULONG64 Processors;
};

typedef struct PPM_PERFSTATE_EVENT {
    ULONG State;
    ULONG Status;
    ULONG Latency;
    ULONG Speed;
    ULONG Processor;
};

typedef struct PPM_THERMALCHANGE_EVENT {
    ULONG ThermalConstraint;
    ULONG64 Processors;
};

typedef struct PPM_THERMAL_POLICY_EVENT {
    UCHAR Mode;
    ULONG64 Processors;
};

typedef struct PPM_WMI_IDLE_STATE {
    ULONG Latency;
    ULONG Power;
    ULONG TimeCheck;
    UCHAR PromotePercent;
    UCHAR DemotePercent;
    UCHAR StateType;
    UCHAR Reserved;
    ULONG StateFlags;
    ULONG Context;
    ULONG IdleHandler;
    ULONG Reserved1;
};

typedef struct PPM_WMI_IDLE_STATES {
    ULONG Type;
    ULONG Count;
    ULONG TargetState;
    ULONG OldState;
    ULONG64 TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_IDLE_STATES_EX {
    ULONG Type;
    ULONG Count;
    ULONG TargetState;
    ULONG OldState;
    PVOID TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_LEGACY_PERFSTATE {
    ULONG Frequency;
    ULONG Flags;
    ULONG PercentFrequency;
};

typedef struct PPM_WMI_PERF_STATE {
    ULONG Frequency;
    ULONG Power;
    UCHAR PercentFrequency;
    UCHAR IncreaseLevel;
    UCHAR DecreaseLevel;
    UCHAR Type;
    ULONG IncreaseTime;
    ULONG DecreaseTime;
    ULONG64 Control;
    ULONG64 Status;
    ULONG HitCount;
    ULONG Reserved1;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
};

typedef struct PPM_WMI_PERF_STATES {
    ULONG Count;
    ULONG MaxFrequency;
    ULONG CurrentState;
    ULONG MaxPerfState;
    ULONG MinPerfState;
    ULONG LowestPerfState;
    ULONG ThermalConstraint;
    UCHAR BusyAdjThreshold;
    UCHAR PolicyType;
    UCHAR Type;
    UCHAR Reserved;
    ULONG TimerInterval;
    ULONG64 TargetProcessors;
    ULONG PStateHandler;
    ULONG PStateContext;
    ULONG TStateHandler;
    ULONG TStateContext;
    ULONG FeedbackHandler;
    ULONG Reserved1;
    ULONG64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef struct PPM_WMI_PERF_STATES_EX {
    ULONG Count;
    ULONG MaxFrequency;
    ULONG CurrentState;
    ULONG MaxPerfState;
    ULONG MinPerfState;
    ULONG LowestPerfState;
    ULONG ThermalConstraint;
    UCHAR BusyAdjThreshold;
    UCHAR PolicyType;
    UCHAR Type;
    UCHAR Reserved;
    ULONG TimerInterval;
    PVOID TargetProcessors;
    ULONG PStateHandler;
    ULONG PStateContext;
    ULONG TStateHandler;
    ULONG TStateContext;
    ULONG FeedbackHandler;
    ULONG Reserved1;
    ULONG64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef struct PREVIEWHANDLERFRAMEINFO {
    struct HACCEL__ *haccel;
    ULONG cAccelEntries;
};

typedef struct PRINT_EXECUTION_DATA {
    enum PRINT_EXECUTION_CONTEXT context;
    ULONG clientAppPID;
};

typedef struct PROCESSOR_IDLESTATE_INFO {
    ULONG TimeCheck;
    UCHAR DemotePercent;
    UCHAR PromotePercent;
    UCHAR Spare[2];
};

typedef struct PROCESSOR_IDLESTATE_POLICY {
    USHORT Revision;
     <unnamed-type-Flags>;
    union {
        USHORT AsUSHORT;
        USHORT AllowScaling : 1;
        USHORT Disabled : 1;
        USHORT Reserved : 14;
    } Flags;
    ULONG PolicyCount;
    struct PROCESSOR_IDLESTATE_INFO Policy[3];
};

typedef struct PROCESSOR_IDLE_TIMES {
    ULONG64 StartTime;
    ULONG64 EndTime;
    ULONG Reserved[4];
};

typedef struct PROCESSOR_PERFSTATE_POLICY {
    ULONG Revision;
    UCHAR MaxThrottle;
    UCHAR MinThrottle;
    UCHAR BusyAdjThreshold;
    UCHAR Spare;
    union {
        UCHAR AsUCHAR;
        UCHAR NoDomainAccounting : 1;
        UCHAR IncreasePolicy : 2;
        UCHAR DecreasePolicy : 2;
        UCHAR Reserved : 3;
    } Flags;
    ULONG TimeCheck;
    ULONG IncreaseTime;
    ULONG DecreaseTime;
    ULONG IncreasePercent;
    ULONG DecreasePercent;
};

typedef struct PROCESS_PROTECTION_LEVEL_INFORMATION {
    ULONG ProtectionLevel;
};

typedef struct PROCESS_UICONTEXT_INFORMATION {
    enum PROCESS_UICONTEXT processUIContext;
    enum PROCESS_UI_FLAGS flags;
};

typedef struct PROPERTYMAP {
    enum THEMEPRIMITIVEID tpi;
    LONG lSymbolVal;
    LONG lType;
    LONG cbType;
};

typedef struct PROPERTY_MAP {
    PWCHAR pszPropName;
    struct _GUID fmtid;
    ULONG pid;
};

typedef struct PROPPRG {
    USHORT flPrg;
    USHORT flPrgInit;
    CHAR achTitle[30];
    CHAR achCmdLine[128];
    CHAR achWorkDir[64];
    USHORT wHotKey;
    CHAR achIconFile[80];
    USHORT wIconIndex;
    ULONG dwEnhModeFlags;
    ULONG dwRealModeFlags;
    CHAR achOtherFile[80];
    CHAR achPIFFile[260];
};

typedef struct PVLCustomTimingFunction {
    struct tagVARIANT varName;
    LONG nTimingFunctionId;
    struct TA_TIMINGFUNCTION *pTimingFunction;
};

typedef struct PVLCustomTransform {
    LONG iStoryboardId;
    LONG iTargetId;
    struct AnimationProperty prop;
    CDynamicItemArray<TA_TRANSFORM *> *pdaTransforms;
};

typedef struct PrintNamedProperty {
    PWCHAR propertyName;
    struct PrintPropertyValue propertyValue;
};

typedef struct PrintPropertiesCollection {
    ULONG numberOfProperties;
    struct PrintNamedProperty *propertiesCollection;
};

typedef struct PrintPropertyValue {
    enum EPrintPropertyType ePropertyType;
     <unnamed-type-value>;
    union {
        UCHAR propertyByte;
        PWCHAR propertyString;
        LONG propertyInt32;
        LONG64 propertyInt64;
         <unnamed-type-propertyBlob>;
        struct {
            ULONG cbBuf;
            PVOID pBuf;
        } propertyBlob;
    } value;
};

typedef struct PropertyFieldTable {
    ULONG dwProperty;
    ULONG dwOffset;
    ULONG cbSize;
};

typedef struct QITAB {
    struct _GUID *piid;
    ULONG dwOffset;
};

typedef struct QUERYNAMESPACEINFO {
    ULONG cbSize;
    ULONG dwMask;
    ULONG dwFlags;
    struct IShellFolder *psf;
    struct _GUID guidObject;
    struct _ITEMIDLIST *pidl;
    ULONG uGroupID;
};

typedef struct READER_SEL_REQUEST {
    ULONG dwShareMode;
    ULONG dwPreferredProtocols;
    enum READER_SEL_REQUEST_MATCH_TYPE MatchType;
    struct {
        ULONG cbReaderNameOffset;
        ULONG cchReaderNameLength;
        ULONG cbContainerNameOffset;
        ULONG cchContainerNameLength;
        ULONG dwDesiredCardModuleVersion;
        ULONG dwCspFlags;
    } ReaderAndContainerParameter;
    struct {
        ULONG cbSerialNumberOffset;
        ULONG cbSerialNumberLength;
        ULONG dwDesiredCardModuleVersion;
    } SerialNumberParameter;
};

typedef struct READER_SEL_RESPONSE {
    ULONG cbReaderNameOffset;
    ULONG cchReaderNameLength;
    ULONG cbCardNameOffset;
    ULONG cchCardNameLength;
};

typedef struct READ_FILE_USN_DATA {
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct READ_USN_JOURNAL_DATA_V0 {
    LONG64 StartUsn;
    ULONG ReasonMask;
    ULONG ReturnOnlyOnClose;
    ULONG64 Timeout;
    ULONG64 BytesToWaitFor;
    ULONG64 UsnJournalID;
};

typedef struct READ_USN_JOURNAL_DATA_V1 {
    LONG64 StartUsn;
    ULONG ReasonMask;
    ULONG ReturnOnlyOnClose;
    ULONG64 Timeout;
    ULONG64 BytesToWaitFor;
    ULONG64 UsnJournalID;
    USHORT MinMajorVersion;
    USHORT MaxMajorVersion;
};

typedef struct REFS_VOLUME_DATA_BUFFER {
    ULONG ByteCount;
    ULONG MajorVersion;
    ULONG MinorVersion;
    ULONG BytesPerPhysicalSector;
    union _LARGE_INTEGER VolumeSerialNumber;
    union _LARGE_INTEGER NumberSectors;
    union _LARGE_INTEGER TotalClusters;
    union _LARGE_INTEGER FreeClusters;
    union _LARGE_INTEGER TotalReserved;
    ULONG BytesPerSector;
    ULONG BytesPerCluster;
    union _LARGE_INTEGER MaximumSizeOfResidentFile;
    union _LARGE_INTEGER Reserved[10];
};

typedef struct REGIONLISTHDR {
    UCHAR cStates;
};

typedef struct RENDER_OBJ_ENTRY {
    CRenderObj *pRenderObj;
    ULONG dwRecycleNum;
    LONG iRefCount;
    LONG iInUseCount;
    LONG iLoadId;
    LONG fClosing;
    struct HWND__ *hwnd;
};

typedef struct RESOURCECOMMENTTABLE {
    enum THEMEPRIMITIVEID tpi;
    PWCHAR szComment;
};

typedef struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER {
    ULONG ExtentCount;
    union _LARGE_INTEGER StartingVcn;
     <unnamed-type-Extents>;
    struct {
        union _LARGE_INTEGER NextVcn;
        union _LARGE_INTEGER Lcn;
        ULONG ReferenceCount;
    } Extents[1];
};

typedef struct RETRIEVAL_POINTERS_BUFFER {
    ULONG ExtentCount;
    union _LARGE_INTEGER StartingVcn;
     <unnamed-type-Extents>;
    struct {
        union _LARGE_INTEGER NextVcn;
        union _LARGE_INTEGER Lcn;
    } Extents[1];
};

typedef struct RETRIEVAL_POINTER_COUNT {
    ULONG ExtentCount;
};

typedef struct REUSEDATAHDR {
    WCHAR szSharableSectionName[260];
    LONG iDIBReuseRecordsCount;
    LONG iDIBReuseRecordsOffset;
    ULONG dwTotalLength;
};

typedef struct RGBA {
    UCHAR bRed;
    UCHAR bGreen;
    UCHAR bBlue;
    UCHAR bAlpha;
};

typedef struct ROOTSECTION {
    WCHAR szSharableSectionName[260];
    WCHAR szNonSharableSectionName[260];
    ULONG dwClientChangeNumber;
};

typedef struct RPC_CLIENT_INFORMATION1 {
    PUCHAR UserName;
    PUCHAR ComputerName;
    USHORT Privilege;
    ULONG AuthFlags;
};

typedef struct RPC_DISPATCH_TABLE {
    ULONG DispatchTableCount;
    PVOID *DispatchTable;
    LONG64 Reserved;
};

typedef struct RPC_ENDPOINT_TEMPLATEA {
    ULONG Version;
    PUCHAR ProtSeq;
    PUCHAR Endpoint;
    PVOID SecurityDescriptor;
    ULONG Backlog;
};

typedef struct RPC_ENDPOINT_TEMPLATEW {
    ULONG Version;
    PWCHAR ProtSeq;
    PWCHAR Endpoint;
    PVOID SecurityDescriptor;
    ULONG Backlog;
};

typedef struct RPC_IF_ID_VECTOR {
    ULONG Count;
    struct _RPC_IF_ID *IfId[1];
};

typedef struct RPC_IMPORT_CONTEXT_P {
    PVOID LookupContext;
    PVOID ProposedHandle;
    struct _RPC_BINDING_VECTOR *Bindings;
};

typedef struct RPC_INTERFACE_TEMPLATEA {
    ULONG Version;
    PVOID IfSpec;
    struct _GUID *MgrTypeUuid;
    PVOID MgrEpv;
    ULONG Flags;
    ULONG MaxCalls;
    ULONG MaxRpcSize;
    PLONG IfCallback;
    struct _UUID_VECTOR *UuidVector;
    PUCHAR Annotation;
    PVOID SecurityDescriptor;
};

typedef struct RPC_INTERFACE_TEMPLATEW {
    ULONG Version;
    PVOID IfSpec;
    struct _GUID *MgrTypeUuid;
    PVOID MgrEpv;
    ULONG Flags;
    ULONG MaxCalls;
    ULONG MaxRpcSize;
    PLONG IfCallback;
    struct _UUID_VECTOR *UuidVector;
    PWCHAR Annotation;
    PVOID SecurityDescriptor;
};

typedef struct RPC_STATS_VECTOR {
    ULONG Count;
    ULONG Stats[1];
};

typedef struct RTLWOW64_CROSSPROCESS_WORK_HEAD {
    ULONG First;
    ULONG Sequence;
    LONG64 Value;
    VOID RTLWOW64_CROSSPROCESS_WORK_HEAD;
    VOID RTLWOW64_CROSSPROCESS_WORK_HEAD;
    struct RTLWOW64_CROSSPROCESS_WORK_HEAD *operator=;
    struct RTLWOW64_CROSSPROCESS_WORK_HEAD *operator=;
};

typedef struct RTLWOW64_CROSSPROCESS_WORK_ITEM {
    ULONG Next;
    enum RTLWOW64_CROSSPROCESS_WORK_OPERATION Operation;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG AllocationType;
        ULONG Protect;
        LONG SyscallStatus;
    } MemoryAllocData;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG FreeType;
        LONG SyscallStatus;
    } MemoryFreeData;
    struct {
        PVOID BaseAddress;
        ULONG64 RegionSize;
        ULONG NewProtect;
        LONG SyscallStatus;
    } MemoryProtectData;
    struct {
        PVOID BaseAddress;
        ULONG64 Length;
    } InstructionCacheFlushData;
};

typedef struct RTL_ACE_DATA {
    UCHAR AceType;
    UCHAR InheritFlags;
    UCHAR AceFlags;
    ULONG Mask;
    PVOID *Sid;
};

typedef struct RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct Row {
    UCHAR f1;
    UCHAR f2;
};

typedef struct SCARD_READERSTATEA {
    PCHAR szReader;
    PVOID pvUserData;
    ULONG dwCurrentState;
    ULONG dwEventState;
    ULONG cbAtr;
    UCHAR rgbAtr[36];
};

typedef struct SCARD_READERSTATEW {
    PWCHAR szReader;
    PVOID pvUserData;
    ULONG dwCurrentState;
    ULONG dwEventState;
    ULONG cbAtr;
    UCHAR rgbAtr[36];
};

typedef struct SC_HANDLE__ {
    LONG unused;
};

typedef struct SChannelHookCallInfo {
    struct _GUID iid;
    ULONG cbSize;
    struct _GUID uCausality;
    ULONG dwServerPid;
    ULONG iMethod;
    PVOID pObject;
};

typedef struct SERVICE_STATUS_HANDLE__ {
    LONG unused;
};

typedef struct SERVICE_TRIGGER_CUSTOM_STATE_ID {
    ULONG Data[2];
};

typedef struct SET_POWER_SETTING_VALUE {
    ULONG Version;
    struct _GUID Guid;
    enum SYSTEM_POWER_CONDITION PowerCondition;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct SFVM_DEFERRED_VIEW_SETTINGS {
    enum FOLDERVIEWMODE fvm;
    LONG fGroupView;
    ULONG uSortCol;
    LONG iSortDirection;
    enum FOLDERFLAGS fFlags;
};

typedef struct SFVM_WEBVIEW_TASKSECTION_DATA {
    struct IEnumUICommand *penumSpecialTasks;
    struct IEnumUICommand *penumFolderTasks;
    ULONG dwUpdateFlags;
};

typedef struct SHAKETHRESHOLD {
    DOUBLE timeout;
    DOUBLE triggerTimeout;
    DOUBLE inSpeed;
    DOUBLE outSpeed;
    DOUBLE angle;
    DOUBLE minLength;
    DOUBLE maxLength;
    DOUBLE ratio;
    DOUBLE maxTime;
    ULONG shake;
};

typedef struct SHARDAPPIDINFO {
    struct IShellItem *psi;
    PWCHAR pszAppID;
};

typedef struct SHARDAPPIDINFOIDLIST {
    struct _ITEMIDLIST *pidl;
    PWCHAR pszAppID;
};

typedef struct SHARDAPPIDINFOLINK {
    struct IShellLinkW *psl;
    PWCHAR pszAppID;
};

typedef struct SHCSCHANGENOTIFYSTRUCT {
    LONG lEvent;
    struct _ITEMIDLIST *pidl1;
    struct _ITEMIDLIST *pidl2;
};

typedef struct SHDRAGIMAGE {
    struct tagSIZE sizeDragImage;
    struct tagPOINT ptOffset;
    struct HBITMAP__ *hbmpDragImage;
    ULONG crColorKey;
};

typedef struct SHELLFLAGSTATE {
    LONG fShowAllObjects : 1;
    LONG fShowExtensions : 1;
    LONG fNoConfirmRecycle : 1;
    LONG fShowSysFiles : 1;
    LONG fShowCompColor : 1;
    LONG fDoubleClickInWebView : 1;
    LONG fDesktopHTML : 1;
    LONG fWin95Classic : 1;
    LONG fDontPrettyPath : 1;
    LONG fShowAttribCol : 1;
    LONG fMapNetDrvBtn : 1;
    LONG fShowInfoTip : 1;
    LONG fHideIcons : 1;
    LONG fAutoCheckSelect : 1;
    LONG fIconsOnly : 1;
    ULONG fRestFlags : 1;
};

typedef struct SHELLHOOKINFO {
    struct HWND__ *hwnd;
    struct tagRECT rc;
};

typedef struct SHELLSTATEA {
    LONG fShowAllObjects : 1;
    LONG fShowExtensions : 1;
    LONG fNoConfirmRecycle : 1;
    LONG fShowSysFiles : 1;
    LONG fShowCompColor : 1;
    LONG fDoubleClickInWebView : 1;
    LONG fDesktopHTML : 1;
    LONG fWin95Classic : 1;
    LONG fDontPrettyPath : 1;
    LONG fShowAttribCol : 1;
    LONG fMapNetDrvBtn : 1;
    LONG fShowInfoTip : 1;
    LONG fHideIcons : 1;
    LONG fWebView : 1;
    LONG fFilter : 1;
    LONG fShowSuperHidden : 1;
    LONG fNoNetCrawling : 1;
    ULONG dwWin95Unused;
    ULONG uWin95Unused;
    LONG lParamSort;
    LONG iSortDirection;
    ULONG version;
    ULONG uNotUsed;
    LONG fSepProcess : 1;
    LONG fStartPanelOn : 1;
    LONG fShowStartPage : 1;
    LONG fAutoCheckSelect : 1;
    LONG fIconsOnly : 1;
    LONG fShowTypeOverlay : 1;
    LONG fShowStatusBar : 1;
    ULONG fSpareFlags : 9;
};

typedef struct SHELLSTATEW {
    LONG fShowAllObjects : 1;
    LONG fShowExtensions : 1;
    LONG fNoConfirmRecycle : 1;
    LONG fShowSysFiles : 1;
    LONG fShowCompColor : 1;
    LONG fDoubleClickInWebView : 1;
    LONG fDesktopHTML : 1;
    LONG fWin95Classic : 1;
    LONG fDontPrettyPath : 1;
    LONG fShowAttribCol : 1;
    LONG fMapNetDrvBtn : 1;
    LONG fShowInfoTip : 1;
    LONG fHideIcons : 1;
    LONG fWebView : 1;
    LONG fFilter : 1;
    LONG fShowSuperHidden : 1;
    LONG fNoNetCrawling : 1;
    ULONG dwWin95Unused;
    ULONG uWin95Unused;
    LONG lParamSort;
    LONG iSortDirection;
    ULONG version;
    ULONG uNotUsed;
    LONG fSepProcess : 1;
    LONG fStartPanelOn : 1;
    LONG fShowStartPage : 1;
    LONG fAutoCheckSelect : 1;
    LONG fIconsOnly : 1;
    LONG fShowTypeOverlay : 1;
    LONG fShowStatusBar : 1;
    ULONG fSpareFlags : 9;
};

typedef struct SHELL_ITEM_RESOURCE {
    struct _GUID guidType;
    WCHAR szName[260];
};

typedef struct SHELL_LINK_DATA {
    ULONG cbSize;
    struct _GUID clsid;
    ULONG dwFlags;
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeLow;
    LONG iIcon;
    LONG iShowCmd;
    USHORT wHotkey;
    USHORT wUnused;
    ULONG dwRes1;
    ULONG dwRes2;
};

typedef struct SHFOLDERCUSTOMSETTINGS {
    ULONG dwSize;
    ULONG dwMask;
    struct _GUID *pvid;
    PWCHAR pszWebViewTemplate;
    ULONG cchWebViewTemplate;
    PWCHAR pszWebViewTemplateVersion;
    PWCHAR pszInfoTip;
    ULONG cchInfoTip;
    struct _GUID *pclsid;
    ULONG dwFlags;
    PWCHAR pszIconFile;
    ULONG cchIconFile;
    LONG iIconIndex;
    PWCHAR pszLogo;
    ULONG cchLogo;
};

typedef struct SHINVOKEPARAMS {
    ULONG flags;
    LONG dispidMember;
    struct _GUID *piid;
    ULONG lcid;
    USHORT wFlags;
    struct tagDISPPARAMS *pdispparams;
    struct tagVARIANT *pvarResult;
    struct tagEXCEPINFO *pexcepinfo;
    PULONG puArgErr;
    HRESULT *Callback;
};

typedef struct SHRESTRICTIONITEMS {
    LONG iFlag;
    PWCHAR pszKey;
    PWCHAR pszValue;
};

typedef struct SIGNATURE {
    CHAR cSignature[128];
};

typedef struct SIGNATURE_BLOB_TAIL {
    ULONG dwTag;
    ULONG dwSigSize;
    union _ULARGE_INTEGER ulFileSize;
};

typedef struct SORTCOLUMN {
    struct _tagpropertykey propkey;
    LONG direction;
};

typedef struct STARTING_LCN_INPUT_BUFFER {
    union _LARGE_INTEGER StartingLcn;
};

typedef struct STARTING_LCN_INPUT_BUFFER_EX {
    union _LARGE_INTEGER StartingLcn;
    ULONG Flags;
};

typedef struct STARTING_VCN_INPUT_BUFFER {
    union _LARGE_INTEGER StartingVcn;
};

typedef struct STATEJUMPTABLEHDR {
    UCHAR cStates;
};

typedef struct STORAGE_BREAK_RESERVATION_REQUEST {
    ULONG Length;
    UCHAR _unused;
    UCHAR PathId;
    UCHAR TargetId;
    UCHAR Lun;
};

typedef struct SYMBOLTOKEN {
    PCHAR psz;
    LONG cch;
};

typedef struct SYMBOL_PRIMITIVE {
    PWCHAR pszName;
    UCHAR eVal;
};

typedef struct SYSTEM_BATTERY_STATE {
    UCHAR AcOnLine;
    UCHAR BatteryPresent;
    UCHAR Charging;
    UCHAR Discharging;
    UCHAR Spare1[3];
    UCHAR Tag;
    ULONG MaxCapacity;
    ULONG RemainingCapacity;
    ULONG Rate;
    ULONG EstimatedTime;
    ULONG DefaultAlert1;
    ULONG DefaultAlert2;
};

typedef struct SYSTEM_POWER_CAPABILITIES {
    UCHAR PowerButtonPresent;
    UCHAR SleepButtonPresent;
    UCHAR LidPresent;
    UCHAR SystemS1;
    UCHAR SystemS2;
    UCHAR SystemS3;
    UCHAR SystemS4;
    UCHAR SystemS5;
    UCHAR HiberFilePresent;
    UCHAR FullWake;
    UCHAR VideoDimPresent;
    UCHAR ApmPresent;
    UCHAR UpsPresent;
    UCHAR ThermalControl;
    UCHAR ProcessorThrottle;
    UCHAR ProcessorMinThrottle;
    UCHAR ProcessorMaxThrottle;
    UCHAR FastSystemS4;
    UCHAR Hiberboot;
    UCHAR WakeAlarmPresent;
    UCHAR AoAc;
    UCHAR DiskSpinDown;
    UCHAR HiberFileType;
    UCHAR AoAcConnectivitySupported;
    UCHAR spare3[6];
    UCHAR SystemBatteriesPresent;
    UCHAR BatteriesAreShortTerm;
    struct BATTERY_REPORTING_SCALE BatteryScale[3];
    enum _SYSTEM_POWER_STATE AcOnLineWake;
    enum _SYSTEM_POWER_STATE SoftLidWake;
    enum _SYSTEM_POWER_STATE RtcWake;
    enum _SYSTEM_POWER_STATE MinDeviceWakeState;
    enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

typedef struct SYSTEM_POWER_LEVEL {
    UCHAR Enable;
    UCHAR Spare[3];
    ULONG BatteryLevel;
    struct POWER_ACTION_POLICY PowerPolicy;
    enum _SYSTEM_POWER_STATE MinSystemState;
};

typedef struct SaturationModifiersForHues {
    LONG originalIndex;
    FLOAT hue;
    FLOAT saturation;
    FLOAT luminosity;
    FLOAT saturationModifiers[6];
};

typedef struct StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct Subscription {
    PVOID callback;
    PVOID context;
};

typedef struct SymTypeConvertTable {
    ULONG dwPGType;
    ULONG dwType;
    ULONG dwActualSize;
};

typedef struct TARGETMAPPING {
    UCHAR rgTargets[4];
};

typedef struct TA_CUBIC_BEZIER {
    struct TA_TIMINGFUNCTION header;
    FLOAT rX0;
    FLOAT rY0;
    FLOAT rX1;
    FLOAT rY1;
};

typedef struct TA_TIMINGFUNCTION {
    enum TA_TIMINGFUNCTION_TYPE eTimingFunctionType;
};

typedef struct TA_TRANSFORM {
    enum TA_TRANSFORM_TYPE eTransformType;
    ULONG dwTimingFunctionId;
    ULONG dwStartTime;
    ULONG dwDurationTime;
    enum TA_TRANSFORM_FLAG eFlags;
};

typedef struct TA_TRANSFORM_2D {
    struct TA_TRANSFORM header;
    FLOAT rX;
    FLOAT rY;
    FLOAT rInitialX;
    FLOAT rInitialY;
    FLOAT rOriginX;
    FLOAT rOriginY;
};

typedef struct TA_TRANSFORM_3D {
    struct TA_TRANSFORM header;
    FLOAT rX;
    FLOAT rY;
    FLOAT rZ;
    FLOAT rInitialX;
    FLOAT rInitialY;
    FLOAT rInitialZ;
    FLOAT rOriginX;
    FLOAT rOriginY;
    FLOAT rOriginZ;
};

typedef struct TA_TRANSFORM_CLIP {
    struct TA_TRANSFORM header;
    FLOAT rLeft;
    FLOAT rTop;
    FLOAT rRight;
    FLOAT rBottom;
    FLOAT rInitialLeft;
    FLOAT rInitialTop;
    FLOAT rInitialRight;
    FLOAT rInitialBottom;
};

typedef struct TA_TRANSFORM_OPACITY {
    struct TA_TRANSFORM header;
    FLOAT rOpacity;
    FLOAT rInitialOpacity;
};

typedef struct TBBUTTONINFOA {
    ULONG cbSize;
    ULONG dwMask;
    LONG idCommand;
    LONG iImage;
    UCHAR fsState;
    UCHAR fsStyle;
    USHORT cx;
    ULONG64 lParam;
    PCHAR pszText;
    LONG cchText;
};

typedef struct TBBUTTONINFOW {
    ULONG cbSize;
    ULONG dwMask;
    LONG idCommand;
    LONG iImage;
    UCHAR fsState;
    UCHAR fsStyle;
    USHORT cx;
    ULONG64 lParam;
    PWCHAR pszText;
    LONG cchText;
};

typedef struct TBINSERTMARK {
    LONG iButton;
    ULONG dwFlags;
};

typedef struct TBMETRICS {
    ULONG cbSize;
    ULONG dwMask;
    LONG cxPad;
    LONG cyPad;
    LONG cxBarPad;
    LONG cyBarPad;
    LONG cxButtonSpacing;
    LONG cyButtonSpacing;
};

typedef struct TBREPLACEBITMAP {
    struct HINSTANCE__ *hInstOld;
    ULONG64 nIDOld;
    struct HINSTANCE__ *hInstNew;
    ULONG64 nIDNew;
    LONG nButtons;
};

typedef struct THEMEHDR {
    CHAR szSignature[8];
    ULONG dwVersion;
    struct _FILETIME ftModifTimeStamp;
    ULONG dwTotalLength;
    LONG iDllNameOffset;
    LONG iColorParamOffset;
    LONG iSizeParamOffset;
    ULONG dwLangID;
    LONG iLoadDPI;
    ULONG dwLoadDPIs;
    LONG iLoadPPI;
    LONG iStringsOffset;
    LONG iStringsLength;
    LONG iSectionIndexOffset;
    LONG iSectionIndexLength;
    LONG iGlobalsOffset;
    LONG iGlobalsTextObjOffset;
    LONG iGlobalsDrawObjOffset;
    LONG iSysMetricsOffset;
    LONG iFontsOffset;
    LONG cFonts;
};

typedef struct THEMEMETRICS {
    struct tagLOGFONTW lfFonts[9];
    ULONG crColors[31];
    LONG iSizes[10];
    LONG fBools[1];
    LONG iStringOffsets[4];
    LONG iInts[1];
};

typedef struct THEMEMETRICS_THREADINFO {
    struct THEMEMETRICS tm;
    PVOID hUserToken;
    ULONG dwFlags;
};

typedef struct THEMESAPI_PORT_MESSAGE {
    struct _PORT_MESSAGE portMessage;
    struct API_THEMES apiThemes;
};

typedef struct THEME_FILE_ENTRY {
    LONG iRefCount;
    CUxThemeFile *pThemeFile;
};

typedef struct THUMBBUTTON {
    enum THUMBBUTTONMASK dwMask;
    ULONG iId;
    ULONG iBitmap;
    struct HICON__ *hIcon;
    WCHAR szTip[260];
    enum THUMBBUTTONFLAGS dwFlags;
};

typedef struct TMBITMAPHEADER {
    ULONG dwSize;
    LONG iBitmapIndex;
    LONG fPartiallyTransparent;
};

typedef struct TMERRINFO {
    ULONG dwParseErrCode;
    WCHAR szMsgParam1[260];
    WCHAR szMsgParam2[260];
    WCHAR szFileName[260];
    WCHAR szSourceLine[260];
    LONG iLineNum;
};

typedef struct TRUESTRETCHINFO {
    LONG fForceStretch;
    LONG fFullStretch;
    LONG fGdiScaledContent;
    LONG fGdiScaledBitBlt;
    struct tagSIZE szDrawSize;
};

typedef struct TZI_FOR_YEAR {
    USHORT wYear;
    LONG Bias;
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct ThemeLogging::StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct ThemeMapDpiKey<HMENU__ *> {
    VOID ThemeMapDpiKey<HMENU__ *>;
    struct HMENU__ *key;
    LONG dpi;
    BOOLEAN operator==;
    BOOLEAN operator<;
};

typedef struct ThemeMapDpiKey<HWND__ *> {
    VOID ThemeMapDpiKey<HWND__ *>;
    struct HWND__ *key;
    LONG dpi;
    BOOLEAN operator==;
    BOOLEAN operator<;
};

typedef struct ThemeSettingsLogging::StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct ThreadData {
    PWCHAR pszPath;
    DiagnosticAnimationXML *pXMLData;
};

typedef struct UDATE {
    struct _SYSTEMTIME st;
    USHORT wDayOfYear;
};

typedef struct USN_JOURNAL_DATA_V0 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
};

typedef struct USN_JOURNAL_DATA_V1 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
    USHORT MinSupportedMajorVersion;
    USHORT MaxSupportedMajorVersion;
};

typedef struct USN_JOURNAL_DATA_V2 {
    ULONG64 UsnJournalID;
    LONG64 FirstUsn;
    LONG64 NextUsn;
    LONG64 LowestValidUsn;
    LONG64 MaxUsn;
    ULONG64 MaximumSize;
    ULONG64 AllocationDelta;
    USHORT MinSupportedMajorVersion;
    USHORT MaxSupportedMajorVersion;
    ULONG Flags;
    ULONG64 RangeTrackChunkSize;
    LONG64 RangeTrackFileSizeThreshold;
};

typedef struct USN_RANGE_TRACK_OUTPUT {
    LONG64 Usn;
};

typedef struct USN_RECORD_COMMON_HEADER {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct USN_RECORD_EXTENT {
    LONG64 Offset;
    LONG64 Length;
};

typedef struct USN_RECORD_V2 {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG64 FileReferenceNumber;
    ULONG64 ParentFileReferenceNumber;
    LONG64 Usn;
    union _LARGE_INTEGER TimeStamp;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG SecurityId;
    ULONG FileAttributes;
    USHORT FileNameLength;
    USHORT FileNameOffset;
    WCHAR FileName[1];
};

typedef struct USN_RECORD_V3 {
    ULONG RecordLength;
    USHORT MajorVersion;
    USHORT MinorVersion;
    struct _FILE_ID_128 FileReferenceNumber;
    struct _FILE_ID_128 ParentFileReferenceNumber;
    LONG64 Usn;
    union _LARGE_INTEGER TimeStamp;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG SecurityId;
    ULONG FileAttributes;
    USHORT FileNameLength;
    USHORT FileNameOffset;
    WCHAR FileName[1];
};

typedef struct USN_RECORD_V4 {
    struct USN_RECORD_COMMON_HEADER Header;
    struct _FILE_ID_128 FileReferenceNumber;
    struct _FILE_ID_128 ParentFileReferenceNumber;
    LONG64 Usn;
    ULONG Reason;
    ULONG SourceInfo;
    ULONG RemainingExtents;
    USHORT NumberOfExtents;
    USHORT ExtentSize;
    struct USN_RECORD_EXTENT Extents[1];
};

typedef struct USN_TRACK_MODIFIED_RANGES {
    ULONG Flags;
    ULONG Unused;
    ULONG64 ChunkSize;
    LONG64 FileSizeThreshold;
};

typedef struct UXTHEMEHOOKS {
    struct HINSTANCE__ *hInst;
    struct tagUSERAPIHOOK uahReal;
};

typedef struct UxThemeTelemetry::StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct VOLUME_BITMAP_BUFFER {
    union _LARGE_INTEGER StartingLcn;
    union _LARGE_INTEGER BitmapSize;
    UCHAR Buffer[1];
};

typedef struct VSCOLORPROPENTRY {
    LONG lHCSymbolVal;
    LONG lSymbolVal;
};

typedef struct VSDOCPROPENTRY {
    PWCHAR pszProperty;
    LONG lSymbolVal;
};

typedef struct VisualPoint {
    FLOAT X;
    FLOAT Y;
};

typedef struct WICBitmapPattern {
    union _ULARGE_INTEGER Position;
    ULONG Length;
    PUCHAR Pattern;
    PUCHAR Mask;
    LONG EndOfStream;
};

typedef struct WICRect {
    LONG X;
    LONG Y;
    LONG Width;
    LONG Height;
};

typedef struct WIN32_MEMORY_REGION_INFORMATION {
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG Flags;
    ULONG Private : 1;
    ULONG MappedDataFile : 1;
    ULONG MappedImage : 1;
    ULONG MappedPageFile : 1;
    ULONG MappedPhysical : 1;
    ULONG DirectMapped : 1;
    ULONG Reserved : 26;
    ULONG64 RegionSize;
    ULONG64 CommitSize;
};

typedef struct WINDOWCOMPOSITIONINFO {
    LONG fExiled : 1;
    LONG fAllowNCPaint : 1;
    LONG fNonClientRTLLayout : 1;
    LONG fForceIconicSWR : 1;
    LONG fExcludedFromLivePreview : 1;
    LONG fHasIconicBitmap : 1;
    LONG fTransitionsForceDisabled : 1;
    LONG fVideoOverlayActive : 1;
    LONG fForceActiveWindowAppearance : 1;
    LONG fDisallowPeek : 1;
    LONG fCloakedApp : 1;
    LONG fCloakedShell : 1;
    LONG fFreezeSWR : 1;
    LONG fHolographic : 1;
    LONG fExcludedFromDDA : 1;
    LONG fPassiveUpdateMode : 1;
    enum NCRENDERINGPOLICY NCRenderPolicy;
    struct ACCENT_POLICY AccentPolicy;
    struct HWND__ *hWndVisualOwner;
    struct FRAME_MARGIN FrameMargin;
};

typedef struct WINDOW_GROUP_ID {
    ULONG dwGroupId;
};

typedef struct WINSTATIONREMOTEADDRESS {
    USHORT sin_family;
    struct {
        USHORT sin_port;
        ULONG in_addr;
        UCHAR sin_zero[8];
    } ipv4;
    struct {
        USHORT sin6_port;
        ULONG sin6_flowinfo;
        USHORT sin6_addr[8];
        ULONG sin6_scope_id;
    } ipv6;
};

typedef struct WSAData {
    USHORT wVersion;
    USHORT wHighVersion;
    USHORT iMaxSockets;
    USHORT iMaxUdpDg;
    PCHAR lpVendorInfo;
    CHAR szDescription[257];
    CHAR szSystemStatus[129];
};

typedef struct Windows::Foundation::Collections::IIterable<HSTRING__ *> {
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<HSTRING__ *>;
    VOID IIterable<HSTRING__ *>;
    VOID IIterable<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterable<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterable<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<IInspectable *> {
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> Windows::Foundation::Collections::IIterable_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<IInspectable *>;
    VOID IIterable<IInspectable *>;
    VOID IIterable<IInspectable *>;
    struct Windows::Foundation::Collections::IIterable<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterable<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Point>;
    VOID IIterable<Windows::Foundation::Point>;
    VOID IIterable<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::Foundation::Rect>;
    VOID IIterable<Windows::Foundation::Rect>;
    VOID IIterable<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
    struct Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<_GUID> {
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> Windows::Foundation::Collections::IIterable_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<_GUID>;
    VOID IIterable<_GUID>;
    VOID IIterable<_GUID>;
    struct Windows::Foundation::Collections::IIterable<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterable<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<__int64> {
    struct Windows::Foundation::Collections::IIterable_impl<__int64> Windows::Foundation::Collections::IIterable_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<__int64>;
    VOID IIterable<__int64>;
    VOID IIterable<__int64>;
    struct Windows::Foundation::Collections::IIterable<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterable<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<bool> {
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<bool>;
    VOID IIterable<bool>;
    VOID IIterable<bool>;
    struct Windows::Foundation::Collections::IIterable<bool> *operator=;
    struct Windows::Foundation::Collections::IIterable<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<double> {
    struct Windows::Foundation::Collections::IIterable_impl<double> Windows::Foundation::Collections::IIterable_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<double>;
    VOID IIterable<double>;
    VOID IIterable<double>;
    struct Windows::Foundation::Collections::IIterable<double> *operator=;
    struct Windows::Foundation::Collections::IIterable<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<float> {
    struct Windows::Foundation::Collections::IIterable_impl<float> Windows::Foundation::Collections::IIterable_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<float>;
    VOID IIterable<float>;
    VOID IIterable<float>;
    struct Windows::Foundation::Collections::IIterable<float> *operator=;
    struct Windows::Foundation::Collections::IIterable<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<int> {
    struct Windows::Foundation::Collections::IIterable_impl<int> Windows::Foundation::Collections::IIterable_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<int>;
    VOID IIterable<int>;
    VOID IIterable<int>;
    struct Windows::Foundation::Collections::IIterable<int> *operator=;
    struct Windows::Foundation::Collections::IIterable<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<short> {
    struct Windows::Foundation::Collections::IIterable_impl<short> Windows::Foundation::Collections::IIterable_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<short>;
    VOID IIterable<short>;
    VOID IIterable<short>;
    struct Windows::Foundation::Collections::IIterable<short> *operator=;
    struct Windows::Foundation::Collections::IIterable<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned __int64> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> Windows::Foundation::Collections::IIterable_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned __int64>;
    VOID IIterable<unsigned __int64>;
    VOID IIterable<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterable<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned char> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> Windows::Foundation::Collections::IIterable_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned char>;
    VOID IIterable<unsigned char>;
    VOID IIterable<unsigned char>;
    struct Windows::Foundation::Collections::IIterable<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable<unsigned int> {
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> Windows::Foundation::Collections::IIterable_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterable<unsigned int>;
    VOID IIterable<unsigned int>;
    VOID IIterable<unsigned int>;
    struct Windows::Foundation::Collections::IIterable<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterable<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT First;
    VOID IIterable_impl<HSTRING__ *>;
    VOID IIterable_impl<HSTRING__ *>;
    VOID IIterable_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT First;
    VOID IIterable_impl<IInspectable *>;
    VOID IIterable_impl<IInspectable *>;
    VOID IIterable_impl<IInspectable *>;
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_abi;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_logical;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Point>;
    VOID IIterable_impl<Windows::Foundation::Point>;
    VOID IIterable_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    VOID IIterable_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    struct IInspectable IInspectable;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_abi;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_logical;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_complex;
    HRESULT First;
    VOID IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT First;
    VOID IIterable_impl<_GUID>;
    VOID IIterable_impl<_GUID>;
    VOID IIterable_impl<_GUID>;
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT First;
    VOID IIterable_impl<__int64>;
    VOID IIterable_impl<__int64>;
    VOID IIterable_impl<__int64>;
    struct Windows::Foundation::Collections::IIterable_impl<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT First;
    VOID IIterable_impl<double>;
    VOID IIterable_impl<double>;
    VOID IIterable_impl<double>;
    struct Windows::Foundation::Collections::IIterable_impl<double> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT First;
    VOID IIterable_impl<float>;
    VOID IIterable_impl<float>;
    VOID IIterable_impl<float>;
    struct Windows::Foundation::Collections::IIterable_impl<float> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT First;
    VOID IIterable_impl<int>;
    VOID IIterable_impl<int>;
    VOID IIterable_impl<int>;
    struct Windows::Foundation::Collections::IIterable_impl<int> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT First;
    VOID IIterable_impl<short>;
    VOID IIterable_impl<short>;
    VOID IIterable_impl<short>;
    struct Windows::Foundation::Collections::IIterable_impl<short> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned __int64>;
    VOID IIterable_impl<unsigned __int64>;
    VOID IIterable_impl<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned char>;
    VOID IIterable_impl<unsigned char>;
    VOID IIterable_impl<unsigned char>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterable_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT First;
    VOID IIterable_impl<unsigned int>;
    VOID IIterable_impl<unsigned int>;
    VOID IIterable_impl<unsigned int>;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterable_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<HSTRING__ *> {
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<HSTRING__ *>;
    VOID IIterator<HSTRING__ *>;
    VOID IIterator<HSTRING__ *>;
    struct Windows::Foundation::Collections::IIterator<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IIterator<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<IInspectable *> {
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<IInspectable *>;
    VOID IIterator<IInspectable *>;
    VOID IIterator<IInspectable *>;
    struct Windows::Foundation::Collections::IIterator<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IIterator<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    VOID IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    VOID IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    VOID IIterator<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Point>;
    VOID IIterator<Windows::Foundation::Point>;
    VOID IIterator<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::Foundation::Rect>;
    VOID IIterator<Windows::Foundation::Rect>;
    VOID IIterator<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
    struct Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<_GUID> {
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> Windows::Foundation::Collections::IIterator_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<_GUID>;
    VOID IIterator<_GUID>;
    VOID IIterator<_GUID>;
    struct Windows::Foundation::Collections::IIterator<_GUID> *operator=;
    struct Windows::Foundation::Collections::IIterator<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<__int64> {
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> Windows::Foundation::Collections::IIterator_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<__int64>;
    VOID IIterator<__int64>;
    VOID IIterator<__int64>;
    struct Windows::Foundation::Collections::IIterator<__int64> *operator=;
    struct Windows::Foundation::Collections::IIterator<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<bool> {
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<bool>;
    VOID IIterator<bool>;
    VOID IIterator<bool>;
    struct Windows::Foundation::Collections::IIterator<bool> *operator=;
    struct Windows::Foundation::Collections::IIterator<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<double> {
    struct Windows::Foundation::Collections::IIterator_impl<double,1> Windows::Foundation::Collections::IIterator_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<double>;
    VOID IIterator<double>;
    VOID IIterator<double>;
    struct Windows::Foundation::Collections::IIterator<double> *operator=;
    struct Windows::Foundation::Collections::IIterator<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<float> {
    struct Windows::Foundation::Collections::IIterator_impl<float,1> Windows::Foundation::Collections::IIterator_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<float>;
    VOID IIterator<float>;
    VOID IIterator<float>;
    struct Windows::Foundation::Collections::IIterator<float> *operator=;
    struct Windows::Foundation::Collections::IIterator<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<int> {
    struct Windows::Foundation::Collections::IIterator_impl<int,1> Windows::Foundation::Collections::IIterator_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<int>;
    VOID IIterator<int>;
    VOID IIterator<int>;
    struct Windows::Foundation::Collections::IIterator<int> *operator=;
    struct Windows::Foundation::Collections::IIterator<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<short> {
    struct Windows::Foundation::Collections::IIterator_impl<short,1> Windows::Foundation::Collections::IIterator_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<short>;
    VOID IIterator<short>;
    VOID IIterator<short>;
    struct Windows::Foundation::Collections::IIterator<short> *operator=;
    struct Windows::Foundation::Collections::IIterator<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned __int64> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned __int64>;
    VOID IIterator<unsigned __int64>;
    VOID IIterator<unsigned __int64>;
    struct Windows::Foundation::Collections::IIterator<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned char> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> Windows::Foundation::Collections::IIterator_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned char>;
    VOID IIterator<unsigned char>;
    VOID IIterator<unsigned char>;
    struct Windows::Foundation::Collections::IIterator<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator<unsigned int> {
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> Windows::Foundation::Collections::IIterator_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IIterator<unsigned int>;
    VOID IIterator<unsigned int>;
    VOID IIterator<unsigned int>;
    struct Windows::Foundation::Collections::IIterator<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IIterator<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<HSTRING__ *,1>;
    VOID IIterator_impl<HSTRING__ *,1>;
    VOID IIterator_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<IInspectable *,1>;
    VOID IIterator_impl<IInspectable *,1>;
    VOID IIterator_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_abi;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_logical;
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    VOID IIterator_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    VOID IIterator_impl<Windows::Foundation::Rect,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> {
    struct IInspectable IInspectable;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_abi;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_logical;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    VOID IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    VOID IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<_GUID,1>;
    VOID IIterator_impl<_GUID,1>;
    VOID IIterator_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<__int64,1>;
    VOID IIterator_impl<__int64,1>;
    VOID IIterator_impl<__int64,1>;
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<double,1>;
    VOID IIterator_impl<double,1>;
    VOID IIterator_impl<double,1>;
    struct Windows::Foundation::Collections::IIterator_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<float,1>;
    VOID IIterator_impl<float,1>;
    VOID IIterator_impl<float,1>;
    struct Windows::Foundation::Collections::IIterator_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<int,1>;
    VOID IIterator_impl<int,1>;
    VOID IIterator_impl<int,1>;
    struct Windows::Foundation::Collections::IIterator_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<short,1>;
    VOID IIterator_impl<short,1>;
    VOID IIterator_impl<short,1>;
    struct Windows::Foundation::Collections::IIterator_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned __int64,1>;
    VOID IIterator_impl<unsigned __int64,1>;
    VOID IIterator_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned char,1>;
    VOID IIterator_impl<unsigned char,1>;
    VOID IIterator_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Current;
    HRESULT get_HasCurrent;
    HRESULT MoveNext;
    HRESULT GetMany;
    VOID IIterator_impl<unsigned int,1>;
    VOID IIterator_impl<unsigned int,1>;
    VOID IIterator_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    VOID IKeyValuePair<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    VOID IKeyValuePair<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,double>;
    VOID IKeyValuePair<HSTRING__ *,double>;
    VOID IKeyValuePair<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,float>;
    VOID IKeyValuePair<HSTRING__ *,float>;
    VOID IKeyValuePair<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,short>;
    VOID IKeyValuePair<HSTRING__ *,short>;
    VOID IKeyValuePair<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    VOID IKeyValuePair<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    VOID IKeyValuePair<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    VOID IKeyValuePair<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<_GUID,bool>;
    VOID IKeyValuePair<_GUID,bool>;
    VOID IKeyValuePair<_GUID,bool>;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    VOID IKeyValuePair<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,__int64>;
    VOID IKeyValuePair<__int64,__int64>;
    VOID IKeyValuePair<__int64,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,double>;
    VOID IKeyValuePair<__int64,double>;
    VOID IKeyValuePair<__int64,double>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<__int64,float>;
    VOID IKeyValuePair<__int64,float>;
    VOID IKeyValuePair<__int64,float>;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    VOID IKeyValuePair<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    VOID IKeyValuePair<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    VOID IKeyValuePair_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    VOID IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    VOID IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    VOID IKeyValuePair_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    VOID IKeyValuePair_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    VOID IKeyValuePair_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    VOID IKeyValuePair_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    VOID IKeyValuePair_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    VOID IKeyValuePair_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    VOID IKeyValuePair_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    VOID IKeyValuePair_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    VOID IKeyValuePair_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,__int64>;
    VOID IKeyValuePair_impl<__int64,__int64>;
    VOID IKeyValuePair_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,double>;
    VOID IKeyValuePair_impl<__int64,double>;
    VOID IKeyValuePair_impl<__int64,double>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<__int64,float>;
    VOID IKeyValuePair_impl<__int64,float>;
    VOID IKeyValuePair_impl<__int64,float>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    VOID IKeyValuePair_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    VOID IKeyValuePair_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT get_Key;
    HRESULT get_Value;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    VOID IKeyValuePair_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<EventRegistrationToken,int>;
    VOID IMap<EventRegistrationToken,int>;
    VOID IMap<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    VOID IMap<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,IInspectable *>;
    VOID IMap<HSTRING__ *,IInspectable *>;
    VOID IMap<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    VOID IMap<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,__int64>;
    VOID IMap<HSTRING__ *,__int64>;
    VOID IMap<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,double>;
    VOID IMap<HSTRING__ *,double>;
    VOID IMap<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,float>;
    VOID IMap<HSTRING__ *,float>;
    VOID IMap<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,short>;
    VOID IMap<HSTRING__ *,short>;
    VOID IMap<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,unsigned char>;
    VOID IMap<HSTRING__ *,unsigned char>;
    VOID IMap<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<HSTRING__ *,unsigned int>;
    VOID IMap<HSTRING__ *,unsigned int>;
    VOID IMap<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<IInspectable *,IInspectable *>;
    VOID IMap<IInspectable *,IInspectable *>;
    VOID IMap<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,HSTRING__ *>;
    VOID IMap<_GUID,HSTRING__ *>;
    VOID IMap<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,IInspectable *>;
    VOID IMap<_GUID,IInspectable *>;
    VOID IMap<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<_GUID,bool> {
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<_GUID,bool>;
    VOID IMap<_GUID,bool>;
    VOID IMap<_GUID,bool>;
    struct Windows::Foundation::Collections::IMap<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IMap<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,HSTRING__ *>;
    VOID IMap<__int64,HSTRING__ *>;
    VOID IMap<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,__int64> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> Windows::Foundation::Collections::IMap_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,__int64>;
    VOID IMap<__int64,__int64>;
    VOID IMap<__int64,__int64>;
    struct Windows::Foundation::Collections::IMap<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,double> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> Windows::Foundation::Collections::IMap_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,double>;
    VOID IMap<__int64,double>;
    VOID IMap<__int64,double>;
    struct Windows::Foundation::Collections::IMap<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<__int64,float> {
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> Windows::Foundation::Collections::IMap_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<__int64,float>;
    VOID IMap<__int64,float>;
    VOID IMap<__int64,float>;
    struct Windows::Foundation::Collections::IMap<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMap<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,HSTRING__ *>;
    VOID IMap<unsigned int,HSTRING__ *>;
    VOID IMap<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,IInspectable *>;
    VOID IMap<unsigned int,IInspectable *>;
    VOID IMap<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMap<unsigned int,IWeakReference *>;
    VOID IMap<unsigned int,IWeakReference *>;
    VOID IMap<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    VOID IMapChangedEventArgs<HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> {
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapChangedEventArgs<_GUID>;
    VOID IMapChangedEventArgs<_GUID>;
    VOID IMapChangedEventArgs<_GUID>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_complex;
    HRESULT get_CollectionChange;
    HRESULT get_Key;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    VOID IMapChangedEventArgs_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_complex;
    HRESULT get_CollectionChange;
    HRESULT get_Key;
    VOID IMapChangedEventArgs_impl<_GUID>;
    VOID IMapChangedEventArgs_impl<_GUID>;
    VOID IMapChangedEventArgs_impl<_GUID>;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> *operator=;
    struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> {
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<EventRegistrationToken,int>;
    VOID IMapView<EventRegistrationToken,int>;
    VOID IMapView<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    VOID IMapView<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    VOID IMapView<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    VOID IMapView<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,__int64>;
    VOID IMapView<HSTRING__ *,__int64>;
    VOID IMapView<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,double>;
    VOID IMapView<HSTRING__ *,double>;
    VOID IMapView<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,float>;
    VOID IMapView<HSTRING__ *,float>;
    VOID IMapView<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,short>;
    VOID IMapView<HSTRING__ *,short>;
    VOID IMapView<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,unsigned char>;
    VOID IMapView<HSTRING__ *,unsigned char>;
    VOID IMapView<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> {
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<HSTRING__ *,unsigned int>;
    VOID IMapView<HSTRING__ *,unsigned int>;
    VOID IMapView<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<IInspectable *,IInspectable *>;
    VOID IMapView<IInspectable *,IInspectable *>;
    VOID IMapView<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,HSTRING__ *>;
    VOID IMapView<_GUID,HSTRING__ *>;
    VOID IMapView<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,IInspectable *>;
    VOID IMapView<_GUID,IInspectable *>;
    VOID IMapView<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<_GUID,bool> {
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<_GUID,bool>;
    VOID IMapView<_GUID,bool>;
    VOID IMapView<_GUID,bool>;
    struct Windows::Foundation::Collections::IMapView<_GUID,bool> *operator=;
    struct Windows::Foundation::Collections::IMapView<_GUID,bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,HSTRING__ *>;
    VOID IMapView<__int64,HSTRING__ *>;
    VOID IMapView<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,__int64> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> Windows::Foundation::Collections::IMapView_impl<__int64,__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,__int64>;
    VOID IMapView<__int64,__int64>;
    VOID IMapView<__int64,__int64>;
    struct Windows::Foundation::Collections::IMapView<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,double> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> Windows::Foundation::Collections::IMapView_impl<__int64,double>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,double>;
    VOID IMapView<__int64,double>;
    VOID IMapView<__int64,double>;
    struct Windows::Foundation::Collections::IMapView<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<__int64,float> {
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> Windows::Foundation::Collections::IMapView_impl<__int64,float>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<__int64,float>;
    VOID IMapView<__int64,float>;
    VOID IMapView<__int64,float>;
    struct Windows::Foundation::Collections::IMapView<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMapView<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,HSTRING__ *>;
    VOID IMapView<unsigned int,HSTRING__ *>;
    VOID IMapView<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,IInspectable *>;
    VOID IMapView<unsigned int,IInspectable *>;
    VOID IMapView<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> {
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>;
    PWCHAR z_get_rc_name_impl;
    VOID IMapView<unsigned int,IWeakReference *>;
    VOID IMapView<unsigned int,IWeakReference *>;
    VOID IMapView<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<EventRegistrationToken,int>;
    VOID IMapView_impl<EventRegistrationToken,int>;
    VOID IMapView_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMapView_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    VOID IMapView_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    VOID IMapView_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    VOID IMapView_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,double>;
    VOID IMapView_impl<HSTRING__ *,double>;
    VOID IMapView_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,float>;
    VOID IMapView_impl<HSTRING__ *,float>;
    VOID IMapView_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,short>;
    VOID IMapView_impl<HSTRING__ *,short>;
    VOID IMapView_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    VOID IMapView_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    VOID IMapView_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    VOID IMapView_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    VOID IMapView_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,IInspectable *>;
    VOID IMapView_impl<_GUID,IInspectable *>;
    VOID IMapView_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    VOID IMapView_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,__int64>;
    VOID IMapView_impl<__int64,__int64>;
    VOID IMapView_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,double>;
    VOID IMapView_impl<__int64,double>;
    VOID IMapView_impl<__int64,double>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<__int64,float>;
    VOID IMapView_impl<__int64,float>;
    VOID IMapView_impl<__int64,float>;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    VOID IMapView_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    VOID IMapView_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT Split;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    VOID IMapView_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> {
    struct IInspectable IInspectable;
    struct EventRegistrationToken K_abi;
    struct EventRegistrationToken K_logical;
    LONG V_abi;
    LONG V_logical;
    struct EventRegistrationToken K_complex;
    LONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<EventRegistrationToken,int>;
    VOID IMap_impl<EventRegistrationToken,int>;
    VOID IMap_impl<EventRegistrationToken,int>;
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IMap_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    VOID IMap_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    struct HSTRING__ *K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    VOID IMap_impl<HSTRING__ *,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    struct Windows::Foundation::IPropertyValue *V_abi;
    struct Windows::Foundation::IPropertyValue *V_logical;
    struct HSTRING__ *K_complex;
    struct Windows::Foundation::IPropertyValue *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    VOID IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    struct HSTRING__ *K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,__int64>;
    VOID IMap_impl<HSTRING__ *,__int64>;
    VOID IMap_impl<HSTRING__ *,__int64>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    struct HSTRING__ *K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,double>;
    VOID IMap_impl<HSTRING__ *,double>;
    VOID IMap_impl<HSTRING__ *,double>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    struct HSTRING__ *K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,float>;
    VOID IMap_impl<HSTRING__ *,float>;
    VOID IMap_impl<HSTRING__ *,float>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    SHORT V_abi;
    SHORT V_logical;
    struct HSTRING__ *K_complex;
    SHORT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,short>;
    VOID IMap_impl<HSTRING__ *,short>;
    VOID IMap_impl<HSTRING__ *,short>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    UCHAR V_abi;
    UCHAR V_logical;
    struct HSTRING__ *K_complex;
    UCHAR V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    VOID IMap_impl<HSTRING__ *,unsigned char>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_abi;
    struct HSTRING__ *K_logical;
    ULONG V_abi;
    ULONG V_logical;
    struct HSTRING__ *K_complex;
    ULONG V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    VOID IMap_impl<HSTRING__ *,unsigned int>;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *K_abi;
    struct IInspectable *K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct IInspectable *K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    VOID IMap_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    struct _GUID K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    VOID IMap_impl<_GUID,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    struct _GUID K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,IInspectable *>;
    VOID IMap_impl<_GUID,IInspectable *>;
    VOID IMap_impl<_GUID,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    struct _GUID K_abi;
    struct _GUID K_logical;
    UCHAR V_abi;
    BOOLEAN V_logical;
    struct _GUID K_complex;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    LONG64 K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,HSTRING__ *>;
    VOID IMap_impl<__int64,HSTRING__ *>;
    VOID IMap_impl<__int64,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    LONG64 V_abi;
    LONG64 V_logical;
    LONG64 K_complex;
    LONG64 V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,__int64>;
    VOID IMap_impl<__int64,__int64>;
    VOID IMap_impl<__int64,__int64>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,double> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    DOUBLE V_abi;
    DOUBLE V_logical;
    LONG64 K_complex;
    DOUBLE V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,double>;
    VOID IMap_impl<__int64,double>;
    VOID IMap_impl<__int64,double>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,double> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<__int64,float> {
    struct IInspectable IInspectable;
    LONG64 K_abi;
    LONG64 K_logical;
    FLOAT V_abi;
    FLOAT V_logical;
    LONG64 K_complex;
    FLOAT V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<__int64,float>;
    VOID IMap_impl<__int64,float>;
    VOID IMap_impl<__int64,float>;
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<__int64,float> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct HSTRING__ *V_abi;
    struct HSTRING__ *V_logical;
    ULONG K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    VOID IMap_impl<unsigned int,HSTRING__ *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IInspectable *V_abi;
    struct IInspectable *V_logical;
    ULONG K_complex;
    struct IInspectable *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,IInspectable *>;
    VOID IMap_impl<unsigned int,IInspectable *>;
    VOID IMap_impl<unsigned int,IInspectable *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> {
    struct IInspectable IInspectable;
    ULONG K_abi;
    ULONG K_logical;
    struct IWeakReference *V_abi;
    struct IWeakReference *V_logical;
    ULONG K_complex;
    struct IWeakReference *V_complex;
    HRESULT Lookup;
    HRESULT get_Size;
    HRESULT HasKey;
    HRESULT GetView;
    HRESULT Insert;
    HRESULT Remove;
    HRESULT Clear;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    VOID IMap_impl<unsigned int,IWeakReference *>;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> *operator=;
    struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    VOID IObservableMap<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT add_MapChanged;
    HRESULT remove_MapChanged;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    VOID IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT add_MapChanged;
    HRESULT remove_MapChanged;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    VOID IObservableMap_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> {
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<HSTRING__ *>;
    VOID IObservableVector<HSTRING__ *>;
    VOID IObservableVector<HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<IInspectable *> {
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<IInspectable *>;
    VOID IObservableVector<IInspectable *>;
    VOID IObservableVector<IInspectable *>;
    struct Windows::Foundation::Collections::IObservableVector<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector<float> {
    struct Windows::Foundation::Collections::IObservableVector_impl<float> Windows::Foundation::Collections::IObservableVector_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IObservableVector<float>;
    VOID IObservableVector<float>;
    VOID IObservableVector<float>;
    struct Windows::Foundation::Collections::IObservableVector<float> *operator=;
    struct Windows::Foundation::Collections::IObservableVector<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<HSTRING__ *>;
    VOID IObservableVector_impl<HSTRING__ *>;
    VOID IObservableVector_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<IInspectable *>;
    VOID IObservableVector_impl<IInspectable *>;
    VOID IObservableVector_impl<IInspectable *>;
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IObservableVector_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT add_VectorChanged;
    HRESULT remove_VectorChanged;
    VOID IObservableVector_impl<float>;
    VOID IObservableVector_impl<float>;
    VOID IObservableVector_impl<float>;
    struct Windows::Foundation::Collections::IObservableVector_impl<float> *operator=;
    struct Windows::Foundation::Collections::IObservableVector_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IPropertySet {
    struct IInspectable IInspectable;
    VOID IPropertySet;
    VOID IPropertySet;
    VOID IPropertySet;
    struct Windows::Foundation::Collections::IPropertySet *operator=;
    struct Windows::Foundation::Collections::IPropertySet *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<HSTRING__ *> {
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<HSTRING__ *>;
    VOID IVector<HSTRING__ *>;
    VOID IVector<HSTRING__ *>;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<IInspectable *> {
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> Windows::Foundation::Collections::IVector_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<IInspectable *>;
    VOID IVector<IInspectable *>;
    VOID IVector<IInspectable *>;
    struct Windows::Foundation::Collections::IVector<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IVector<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVector<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<Windows::Foundation::Point>;
    VOID IVector<Windows::Foundation::Point>;
    VOID IVector<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<_GUID> {
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> Windows::Foundation::Collections::IVector_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<_GUID>;
    VOID IVector<_GUID>;
    VOID IVector<_GUID>;
    struct Windows::Foundation::Collections::IVector<_GUID> *operator=;
    struct Windows::Foundation::Collections::IVector<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<__int64> {
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> Windows::Foundation::Collections::IVector_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<__int64>;
    VOID IVector<__int64>;
    VOID IVector<__int64>;
    struct Windows::Foundation::Collections::IVector<__int64> *operator=;
    struct Windows::Foundation::Collections::IVector<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<bool> {
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<bool>;
    VOID IVector<bool>;
    VOID IVector<bool>;
    struct Windows::Foundation::Collections::IVector<bool> *operator=;
    struct Windows::Foundation::Collections::IVector<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<double> {
    struct Windows::Foundation::Collections::IVector_impl<double,1> Windows::Foundation::Collections::IVector_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<double>;
    VOID IVector<double>;
    VOID IVector<double>;
    struct Windows::Foundation::Collections::IVector<double> *operator=;
    struct Windows::Foundation::Collections::IVector<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<float> {
    struct Windows::Foundation::Collections::IVector_impl<float,1> Windows::Foundation::Collections::IVector_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<float>;
    VOID IVector<float>;
    VOID IVector<float>;
    struct Windows::Foundation::Collections::IVector<float> *operator=;
    struct Windows::Foundation::Collections::IVector<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<int> {
    struct Windows::Foundation::Collections::IVector_impl<int,1> Windows::Foundation::Collections::IVector_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<int>;
    VOID IVector<int>;
    VOID IVector<int>;
    struct Windows::Foundation::Collections::IVector<int> *operator=;
    struct Windows::Foundation::Collections::IVector<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<short> {
    struct Windows::Foundation::Collections::IVector_impl<short,1> Windows::Foundation::Collections::IVector_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<short>;
    VOID IVector<short>;
    VOID IVector<short>;
    struct Windows::Foundation::Collections::IVector<short> *operator=;
    struct Windows::Foundation::Collections::IVector<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned __int64> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned __int64>;
    VOID IVector<unsigned __int64>;
    VOID IVector<unsigned __int64>;
    struct Windows::Foundation::Collections::IVector<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned char> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> Windows::Foundation::Collections::IVector_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned char>;
    VOID IVector<unsigned char>;
    VOID IVector<unsigned char>;
    struct Windows::Foundation::Collections::IVector<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector<unsigned int> {
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> Windows::Foundation::Collections::IVector_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVector<unsigned int>;
    VOID IVector<unsigned int>;
    VOID IVector<unsigned int>;
    struct Windows::Foundation::Collections::IVector<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IVector<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorChangedEventArgs {
    struct IInspectable IInspectable;
    HRESULT get_CollectionChange;
    HRESULT get_Index;
    VOID IVectorChangedEventArgs;
    VOID IVectorChangedEventArgs;
    VOID IVectorChangedEventArgs;
    struct Windows::Foundation::Collections::IVectorChangedEventArgs *operator=;
    struct Windows::Foundation::Collections::IVectorChangedEventArgs *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> {
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<HSTRING__ *>;
    VOID IVectorView<HSTRING__ *>;
    VOID IVectorView<HSTRING__ *>;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<IInspectable *> {
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<IInspectable *>;
    VOID IVectorView<IInspectable *>;
    VOID IVectorView<IInspectable *>;
    struct Windows::Foundation::Collections::IVectorView<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    VOID IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    VOID IVectorView<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Point>;
    VOID IVectorView<Windows::Foundation::Point>;
    VOID IVectorView<Windows::Foundation::Point>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::Foundation::Rect>;
    VOID IVectorView<Windows::Foundation::Rect>;
    VOID IVectorView<Windows::Foundation::Rect>;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    VOID IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *>;
    struct Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
    struct Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<_GUID> {
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> Windows::Foundation::Collections::IVectorView_impl<_GUID,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<_GUID>;
    VOID IVectorView<_GUID>;
    VOID IVectorView<_GUID>;
    struct Windows::Foundation::Collections::IVectorView<_GUID> *operator=;
    struct Windows::Foundation::Collections::IVectorView<_GUID> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<__int64> {
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> Windows::Foundation::Collections::IVectorView_impl<__int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<__int64>;
    VOID IVectorView<__int64>;
    VOID IVectorView<__int64>;
    struct Windows::Foundation::Collections::IVectorView<__int64> *operator=;
    struct Windows::Foundation::Collections::IVectorView<__int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<bool> {
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<bool>;
    VOID IVectorView<bool>;
    VOID IVectorView<bool>;
    struct Windows::Foundation::Collections::IVectorView<bool> *operator=;
    struct Windows::Foundation::Collections::IVectorView<bool> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<double> {
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> Windows::Foundation::Collections::IVectorView_impl<double,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<double>;
    VOID IVectorView<double>;
    VOID IVectorView<double>;
    struct Windows::Foundation::Collections::IVectorView<double> *operator=;
    struct Windows::Foundation::Collections::IVectorView<double> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<float> {
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> Windows::Foundation::Collections::IVectorView_impl<float,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<float>;
    VOID IVectorView<float>;
    VOID IVectorView<float>;
    struct Windows::Foundation::Collections::IVectorView<float> *operator=;
    struct Windows::Foundation::Collections::IVectorView<float> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<int> {
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> Windows::Foundation::Collections::IVectorView_impl<int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<int>;
    VOID IVectorView<int>;
    VOID IVectorView<int>;
    struct Windows::Foundation::Collections::IVectorView<int> *operator=;
    struct Windows::Foundation::Collections::IVectorView<int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<short> {
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> Windows::Foundation::Collections::IVectorView_impl<short,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<short>;
    VOID IVectorView<short>;
    VOID IVectorView<short>;
    struct Windows::Foundation::Collections::IVectorView<short> *operator=;
    struct Windows::Foundation::Collections::IVectorView<short> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned __int64> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned __int64>;
    VOID IVectorView<unsigned __int64>;
    VOID IVectorView<unsigned __int64>;
    struct Windows::Foundation::Collections::IVectorView<unsigned __int64> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned char> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned char>;
    VOID IVectorView<unsigned char>;
    VOID IVectorView<unsigned char>;
    struct Windows::Foundation::Collections::IVectorView<unsigned char> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned char> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView<unsigned int> {
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>;
    PWCHAR z_get_rc_name_impl;
    VOID IVectorView<unsigned int>;
    VOID IVectorView<unsigned int>;
    VOID IVectorView<unsigned int>;
    struct Windows::Foundation::Collections::IVectorView<unsigned int> *operator=;
    struct Windows::Foundation::Collections::IVectorView<unsigned int> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<HSTRING__ *,1>;
    VOID IVectorView_impl<HSTRING__ *,1>;
    VOID IVectorView_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<IInspectable *,1>;
    VOID IVectorView_impl<IInspectable *,1>;
    VOID IVectorView_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    VOID IVectorView_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    VOID IVectorView_impl<Windows::Foundation::Rect,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> {
    struct IInspectable IInspectable;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_abi;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_logical;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    VOID IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    VOID IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<_GUID,1>;
    VOID IVectorView_impl<_GUID,1>;
    VOID IVectorView_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<__int64,1>;
    VOID IVectorView_impl<__int64,1>;
    VOID IVectorView_impl<__int64,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<double,1>;
    VOID IVectorView_impl<double,1>;
    VOID IVectorView_impl<double,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<float,1>;
    VOID IVectorView_impl<float,1>;
    VOID IVectorView_impl<float,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<int,1>;
    VOID IVectorView_impl<int,1>;
    VOID IVectorView_impl<int,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<short,1>;
    VOID IVectorView_impl<short,1>;
    VOID IVectorView_impl<short,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned __int64,1>;
    VOID IVectorView_impl<unsigned __int64,1>;
    VOID IVectorView_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned char,1>;
    VOID IVectorView_impl<unsigned char,1>;
    VOID IVectorView_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT IndexOf;
    HRESULT GetMany;
    VOID IVectorView_impl<unsigned int,1>;
    VOID IVectorView_impl<unsigned int,1>;
    VOID IVectorView_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<HSTRING__ *,1>;
    VOID IVector_impl<HSTRING__ *,1>;
    VOID IVector_impl<HSTRING__ *,1>;
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<IInspectable *,1>;
    VOID IVector_impl<IInspectable *,1>;
    VOID IVector_impl<IInspectable *,1>;
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_abi;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_logical;
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *T_abi;
    struct Windows::Foundation::Collections::IPropertySet *T_logical;
    struct Windows::Foundation::Collections::IPropertySet *T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    VOID IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    VOID IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    VOID IVector_impl<Windows::Foundation::Point,1>;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<_GUID,1> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<_GUID,1>;
    VOID IVector_impl<_GUID,1>;
    VOID IVector_impl<_GUID,1>;
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<_GUID,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<__int64,1> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<__int64,1>;
    VOID IVector_impl<__int64,1>;
    VOID IVector_impl<__int64,1>;
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<__int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<double,1> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<double,1>;
    VOID IVector_impl<double,1>;
    VOID IVector_impl<double,1>;
    struct Windows::Foundation::Collections::IVector_impl<double,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<double,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<float,1> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<float,1>;
    VOID IVector_impl<float,1>;
    VOID IVector_impl<float,1>;
    struct Windows::Foundation::Collections::IVector_impl<float,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<float,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<int,1> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<int,1>;
    VOID IVector_impl<int,1>;
    VOID IVector_impl<int,1>;
    struct Windows::Foundation::Collections::IVector_impl<int,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<short,1> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<short,1>;
    VOID IVector_impl<short,1>;
    VOID IVector_impl<short,1>;
    struct Windows::Foundation::Collections::IVector_impl<short,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<short,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned __int64,1>;
    VOID IVector_impl<unsigned __int64,1>;
    VOID IVector_impl<unsigned __int64,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned char,1>;
    VOID IVector_impl<unsigned char,1>;
    VOID IVector_impl<unsigned char,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned char,1> *operator=;
};

typedef struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT GetAt;
    HRESULT get_Size;
    HRESULT GetView;
    HRESULT IndexOf;
    HRESULT SetAt;
    HRESULT InsertAt;
    HRESULT RemoveAt;
    HRESULT Append;
    HRESULT RemoveAtEnd;
    HRESULT Clear;
    HRESULT GetMany;
    HRESULT ReplaceAll;
    VOID IVector_impl<unsigned int,1>;
    VOID IVector_impl<unsigned int,1>;
    VOID IVector_impl<unsigned int,1>;
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> *operator=;
    struct Windows::Foundation::Collections::IVector_impl<unsigned int,1> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> {
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> {
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *K_logical;
    struct HSTRING__ *V_logical;
    struct HSTRING__ *K_complex;
    struct HSTRING__ *V_complex;
    HRESULT Invoke;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *K_logical;
    struct IInspectable *V_logical;
    struct HSTRING__ *K_complex;
    struct IInspectable *V_complex;
    HRESULT Invoke;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    VOID MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> *operator=;
    struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    VOID VectorChangedEventHandler<HSTRING__ *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<IInspectable *>;
    VOID VectorChangedEventHandler<IInspectable *>;
    VOID VectorChangedEventHandler<IInspectable *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler<float> {
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID VectorChangedEventHandler<float>;
    VOID VectorChangedEventHandler<float>;
    VOID VectorChangedEventHandler<float>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<float> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler<float> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    VOID VectorChangedEventHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    VOID VectorChangedEventHandler_impl<IInspectable *>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> {
    struct IUnknown IUnknown;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT Invoke;
    VOID VectorChangedEventHandler_impl<float>;
    VOID VectorChangedEventHandler_impl<float>;
    VOID VectorChangedEventHandler_impl<float>;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> *operator=;
    struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float> *operator=;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<_GUID> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<__int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<double> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<float> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<short> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned char> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_foundation_struct<unsigned int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<HSTRING__ *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<IInspectable *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<_GUID> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<__int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<double> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<float> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<short> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned __int64> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned char> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::is_pointer<unsigned int> {
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *> {
    struct HSTRING__ *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<IInspectable *> {
    struct IInspectable *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *> {
    struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,double> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<__int64,float> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *> {
    struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::Collections::IPropertySet *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    UCHAR _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point> {
    struct Windows::Foundation::Point _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect> {
    struct Windows::Foundation::Rect _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<Windows::UI::Core::AnimationMetrics::IPropertyAnimation *> {
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *_abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<_GUID> {
    struct _GUID _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<__int64> {
    LONG64 _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<double> {
    DOUBLE _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<float> {
    FLOAT _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<int> {
    LONG _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<short> {
    SHORT _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64> {
    ULONG64 _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned char> {
    UCHAR _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::Collections::supports_cleanup<unsigned int> {
    ULONG _abi_type;
    LONG <unnamed-enum-value>;
};

typedef struct Windows::Foundation::DateTime {
    LONG64 UniversalTime;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<double> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> Windows::Foundation::IAsyncActionProgressHandler_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<double>;
    VOID IAsyncActionProgressHandler<double>;
    VOID IAsyncActionProgressHandler<double>;
    struct Windows::Foundation::IAsyncActionProgressHandler<double> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    VOID IAsyncActionProgressHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> {
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionProgressHandler<unsigned int>;
    VOID IAsyncActionProgressHandler<unsigned int>;
    VOID IAsyncActionProgressHandler<unsigned int>;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> {
    struct IUnknown IUnknown;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<double>;
    VOID IAsyncActionProgressHandler_impl<double>;
    VOID IAsyncActionProgressHandler_impl<double>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    VOID IAsyncActionProgressHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    VOID IAsyncActionProgressHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<double> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> Windows::Foundation::IAsyncActionWithProgress_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<double>;
    VOID IAsyncActionWithProgress<double>;
    VOID IAsyncActionWithProgress<double>;
    struct Windows::Foundation::IAsyncActionWithProgress<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    VOID IAsyncActionWithProgress<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> {
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgress<unsigned int>;
    VOID IAsyncActionWithProgress<unsigned int>;
    VOID IAsyncActionWithProgress<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    VOID IAsyncActionWithProgressCompletedHandler<double>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> {
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> {
    struct IUnknown IUnknown;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<double>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT Invoke;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    VOID IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE TProgress_abi;
    DOUBLE TProgress_logical;
    DOUBLE TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<double>;
    VOID IAsyncActionWithProgress_impl<double>;
    VOID IAsyncActionWithProgress_impl<double>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<double> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    VOID IAsyncActionWithProgress_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TProgress_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    VOID IAsyncActionWithProgress_impl<unsigned int>;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<HSTRING__ *> {
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<HSTRING__ *>;
    VOID IAsyncOperation<HSTRING__ *>;
    VOID IAsyncOperation<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperation<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperation<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<IInspectable *> {
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> Windows::Foundation::IAsyncOperation_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<IInspectable *>;
    VOID IAsyncOperation<IInspectable *>;
    VOID IAsyncOperation<IInspectable *>;
    struct Windows::Foundation::IAsyncOperation<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperation<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<_GUID> {
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> Windows::Foundation::IAsyncOperation_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<_GUID>;
    VOID IAsyncOperation<_GUID>;
    VOID IAsyncOperation<_GUID>;
    struct Windows::Foundation::IAsyncOperation<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperation<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<__int64> {
    struct Windows::Foundation::IAsyncOperation_impl<__int64> Windows::Foundation::IAsyncOperation_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<__int64>;
    VOID IAsyncOperation<__int64>;
    VOID IAsyncOperation<__int64>;
    struct Windows::Foundation::IAsyncOperation<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperation<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<bool> {
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<bool>;
    VOID IAsyncOperation<bool>;
    VOID IAsyncOperation<bool>;
    struct Windows::Foundation::IAsyncOperation<bool> *operator=;
    struct Windows::Foundation::IAsyncOperation<bool> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<int> {
    struct Windows::Foundation::IAsyncOperation_impl<int> Windows::Foundation::IAsyncOperation_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<int>;
    VOID IAsyncOperation<int>;
    VOID IAsyncOperation<int>;
    struct Windows::Foundation::IAsyncOperation<int> *operator=;
    struct Windows::Foundation::IAsyncOperation<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<unsigned __int64> {
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> Windows::Foundation::IAsyncOperation_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<unsigned __int64>;
    VOID IAsyncOperation<unsigned __int64>;
    VOID IAsyncOperation<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperation<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperation<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation<unsigned int> {
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> Windows::Foundation::IAsyncOperation_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperation<unsigned int>;
    VOID IAsyncOperation<unsigned int>;
    VOID IAsyncOperation<unsigned int>;
    struct Windows::Foundation::IAsyncOperation<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperation<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    VOID IAsyncOperationCompletedHandler<IInspectable *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    VOID IAsyncOperationCompletedHandler<_GUID>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<__int64>;
    VOID IAsyncOperationCompletedHandler<__int64>;
    VOID IAsyncOperationCompletedHandler<__int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<bool>;
    VOID IAsyncOperationCompletedHandler<bool>;
    VOID IAsyncOperationCompletedHandler<bool>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<bool> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<int> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<int>;
    VOID IAsyncOperationCompletedHandler<int>;
    VOID IAsyncOperationCompletedHandler<int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> {
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    VOID IAsyncOperationCompletedHandler<unsigned int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    VOID IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *TResult_abi;
    struct IInspectable *TResult_logical;
    struct IInspectable *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    VOID IAsyncOperationCompletedHandler_impl<IInspectable *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IPropertySet *TResult_abi;
    struct Windows::Foundation::Collections::IPropertySet *TResult_logical;
    struct Windows::Foundation::Collections::IPropertySet *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IUnknown IUnknown;
    UCHAR TResult_abi;
    BOOLEAN TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::TimeSpan TResult_abi;
    struct Windows::Foundation::TimeSpan TResult_logical;
    struct Windows::Foundation::TimeSpan TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> {
    struct IUnknown IUnknown;
    struct _GUID TResult_abi;
    struct _GUID TResult_logical;
    struct _GUID TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    VOID IAsyncOperationCompletedHandler_impl<_GUID>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> {
    struct IUnknown IUnknown;
    LONG64 TResult_abi;
    LONG64 TResult_logical;
    LONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    VOID IAsyncOperationCompletedHandler_impl<__int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> {
    struct IUnknown IUnknown;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    VOID IAsyncOperationCompletedHandler_impl<int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> {
    struct IUnknown IUnknown;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    VOID IAsyncOperationCompletedHandler_impl<unsigned int>;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<int,int>;
    VOID IAsyncOperationProgressHandler<int,int>;
    VOID IAsyncOperationProgressHandler<int,int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> {
    struct IUnknown IUnknown;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    VOID IAsyncOperationProgressHandler_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<int,int> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<int,int>;
    VOID IAsyncOperationWithProgress<int,int>;
    VOID IAsyncOperationWithProgress<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgress<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> {
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> {
    struct IUnknown IUnknown;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> {
    struct IUnknown IUnknown;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> {
    struct IUnknown IUnknown;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT Invoke;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    ULONG64 TProgress_complex;
    struct HSTRING__ *TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> {
    struct IInspectable IInspectable;
    LONG TProgress_abi;
    LONG TProgress_logical;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TProgress_complex;
    LONG TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    VOID IAsyncOperationWithProgress_impl<int,int>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TProgress_abi;
    ULONG64 TProgress_logical;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TProgress_complex;
    ULONG64 TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    VOID IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> {
    struct IInspectable IInspectable;
    ULONG TProgress_abi;
    ULONG TProgress_logical;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TProgress_complex;
    ULONG TResult_complex;
    HRESULT put_Progress;
    HRESULT get_Progress;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    VOID IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *TResult_abi;
    struct HSTRING__ *TResult_logical;
    struct HSTRING__ *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    VOID IAsyncOperation_impl<HSTRING__ *>;
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *TResult_abi;
    struct IInspectable *TResult_logical;
    struct IInspectable *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<IInspectable *>;
    VOID IAsyncOperation_impl<IInspectable *>;
    VOID IAsyncOperation_impl<IInspectable *>;
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_abi;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_logical;
    struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IPropertySet *TResult_abi;
    struct Windows::Foundation::Collections::IPropertySet *TResult_logical;
    struct Windows::Foundation::Collections::IPropertySet *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_abi;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_logical;
    struct Windows::Foundation::Collections::IVector<unsigned int> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<HSTRING__ *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_abi;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_logical;
    struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    VOID IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR TResult_abi;
    BOOLEAN TResult_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan TResult_abi;
    struct Windows::Foundation::TimeSpan TResult_logical;
    struct Windows::Foundation::TimeSpan TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    VOID IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID TResult_abi;
    struct _GUID TResult_logical;
    struct _GUID TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<_GUID>;
    VOID IAsyncOperation_impl<_GUID>;
    VOID IAsyncOperation_impl<_GUID>;
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 TResult_abi;
    LONG64 TResult_logical;
    LONG64 TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<__int64>;
    VOID IAsyncOperation_impl<__int64>;
    VOID IAsyncOperation_impl<__int64>;
    struct Windows::Foundation::IAsyncOperation_impl<__int64> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<int> {
    struct IInspectable IInspectable;
    LONG TResult_abi;
    LONG TResult_logical;
    LONG TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<int>;
    VOID IAsyncOperation_impl<int>;
    VOID IAsyncOperation_impl<int>;
    struct Windows::Foundation::IAsyncOperation_impl<int> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<int> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 TResult_abi;
    ULONG64 TResult_logical;
    ULONG64 TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<unsigned __int64>;
    VOID IAsyncOperation_impl<unsigned __int64>;
    VOID IAsyncOperation_impl<unsigned __int64>;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IAsyncOperation_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG TResult_abi;
    ULONG TResult_logical;
    ULONG TResult_complex;
    HRESULT put_Completed;
    HRESULT get_Completed;
    HRESULT GetResults;
    VOID IAsyncOperation_impl<unsigned int>;
    VOID IAsyncOperation_impl<unsigned int>;
    VOID IAsyncOperation_impl<unsigned int>;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> *operator=;
    struct Windows::Foundation::IAsyncOperation_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<HSTRING__ *> {
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> Windows::Foundation::IEventHandler_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<HSTRING__ *>;
    VOID IEventHandler<HSTRING__ *>;
    VOID IEventHandler<HSTRING__ *>;
    struct Windows::Foundation::IEventHandler<HSTRING__ *> *operator=;
    struct Windows::Foundation::IEventHandler<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<IInspectable *> {
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> Windows::Foundation::IEventHandler_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<IInspectable *>;
    VOID IEventHandler<IInspectable *>;
    VOID IEventHandler<IInspectable *>;
    struct Windows::Foundation::IEventHandler<IInspectable *> *operator=;
    struct Windows::Foundation::IEventHandler<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler<bool> {
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IEventHandler<bool>;
    VOID IEventHandler<bool>;
    VOID IEventHandler<bool>;
    struct Windows::Foundation::IEventHandler<bool> *operator=;
    struct Windows::Foundation::IEventHandler<bool> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> {
    struct IUnknown IUnknown;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<HSTRING__ *>;
    VOID IEventHandler_impl<HSTRING__ *>;
    VOID IEventHandler_impl<HSTRING__ *>;
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IEventHandler_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<IInspectable *>;
    VOID IEventHandler_impl<IInspectable *>;
    VOID IEventHandler_impl<IInspectable *>;
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IEventHandler_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IUnknown IUnknown;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT Invoke;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IExtensionRegistration {
};

typedef struct Windows::Foundation::IMemoryBufferReference {
    struct IInspectable IInspectable;
    HRESULT get_Capacity;
    HRESULT add_Closed;
    HRESULT remove_Closed;
    VOID IMemoryBufferReference;
    VOID IMemoryBufferReference;
    VOID IMemoryBufferReference;
    struct Windows::Foundation::IMemoryBufferReference *operator=;
    struct Windows::Foundation::IMemoryBufferReference *operator=;
};

typedef struct Windows::Foundation::IPropertyValue {
    struct IInspectable IInspectable;
    HRESULT get_Type;
    HRESULT get_IsNumericScalar;
    HRESULT GetUInt8;
    HRESULT GetInt16;
    HRESULT GetUInt16;
    HRESULT GetInt32;
    HRESULT GetUInt32;
    HRESULT GetInt64;
    HRESULT GetUInt64;
    HRESULT GetSingle;
    HRESULT GetDouble;
    HRESULT GetChar16;
    HRESULT GetBoolean;
    HRESULT GetString;
    HRESULT GetGuid;
    HRESULT GetDateTime;
    HRESULT GetTimeSpan;
    HRESULT GetPoint;
    HRESULT GetSize;
    HRESULT GetRect;
    HRESULT GetUInt8Array;
    HRESULT GetInt16Array;
    HRESULT GetUInt16Array;
    HRESULT GetInt32Array;
    HRESULT GetUInt32Array;
    HRESULT GetInt64Array;
    HRESULT GetUInt64Array;
    HRESULT GetSingleArray;
    HRESULT GetDoubleArray;
    HRESULT GetChar16Array;
    HRESULT GetBooleanArray;
    HRESULT GetStringArray;
    HRESULT GetInspectableArray;
    HRESULT GetGuidArray;
    HRESULT GetDateTimeArray;
    HRESULT GetTimeSpanArray;
    HRESULT GetPointArray;
    HRESULT GetSizeArray;
    HRESULT GetRectArray;
    VOID IPropertyValue;
    VOID IPropertyValue;
    VOID IPropertyValue;
    struct Windows::Foundation::IPropertyValue *operator=;
    struct Windows::Foundation::IPropertyValue *operator=;
};

typedef struct Windows::Foundation::IReference<HSTRING__ *> {
    struct Windows::Foundation::IReference_impl<HSTRING__ *> Windows::Foundation::IReference_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<HSTRING__ *>;
    VOID IReference<HSTRING__ *>;
    VOID IReference<HSTRING__ *>;
    struct Windows::Foundation::IReference<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReference<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::DateTime> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::DateTime>;
    VOID IReference<Windows::Foundation::DateTime>;
    VOID IReference<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReference<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Point> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> Windows::Foundation::IReference_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Point>;
    VOID IReference<Windows::Foundation::Point>;
    VOID IReference<Windows::Foundation::Point>;
    struct Windows::Foundation::IReference<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Rect> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> Windows::Foundation::IReference_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Rect>;
    VOID IReference<Windows::Foundation::Rect>;
    VOID IReference<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReference<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::Size> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> Windows::Foundation::IReference_impl<Windows::Foundation::Size>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::Size>;
    VOID IReference<Windows::Foundation::Size>;
    VOID IReference<Windows::Foundation::Size>;
    struct Windows::Foundation::IReference<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<Windows::Foundation::TimeSpan>;
    VOID IReference<Windows::Foundation::TimeSpan>;
    VOID IReference<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReference<_GUID> {
    struct Windows::Foundation::IReference_impl<_GUID> Windows::Foundation::IReference_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<_GUID>;
    VOID IReference<_GUID>;
    VOID IReference<_GUID>;
    struct Windows::Foundation::IReference<_GUID> *operator=;
    struct Windows::Foundation::IReference<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReference<__int64> {
    struct Windows::Foundation::IReference_impl<__int64> Windows::Foundation::IReference_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<__int64>;
    VOID IReference<__int64>;
    VOID IReference<__int64>;
    struct Windows::Foundation::IReference<__int64> *operator=;
    struct Windows::Foundation::IReference<__int64> *operator=;
};

typedef struct Windows::Foundation::IReference<bool> {
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<bool>;
    VOID IReference<bool>;
    VOID IReference<bool>;
    struct Windows::Foundation::IReference<bool> *operator=;
    struct Windows::Foundation::IReference<bool> *operator=;
};

typedef struct Windows::Foundation::IReference<double> {
    struct Windows::Foundation::IReference_impl<double> Windows::Foundation::IReference_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<double>;
    VOID IReference<double>;
    VOID IReference<double>;
    struct Windows::Foundation::IReference<double> *operator=;
    struct Windows::Foundation::IReference<double> *operator=;
};

typedef struct Windows::Foundation::IReference<float> {
    struct Windows::Foundation::IReference_impl<float> Windows::Foundation::IReference_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<float>;
    VOID IReference<float>;
    VOID IReference<float>;
    struct Windows::Foundation::IReference<float> *operator=;
    struct Windows::Foundation::IReference<float> *operator=;
};

typedef struct Windows::Foundation::IReference<int> {
    struct Windows::Foundation::IReference_impl<int> Windows::Foundation::IReference_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<int>;
    VOID IReference<int>;
    VOID IReference<int>;
    struct Windows::Foundation::IReference<int> *operator=;
    struct Windows::Foundation::IReference<int> *operator=;
};

typedef struct Windows::Foundation::IReference<short> {
    struct Windows::Foundation::IReference_impl<short> Windows::Foundation::IReference_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<short>;
    VOID IReference<short>;
    VOID IReference<short>;
    struct Windows::Foundation::IReference<short> *operator=;
    struct Windows::Foundation::IReference<short> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned __int64> {
    struct Windows::Foundation::IReference_impl<unsigned __int64> Windows::Foundation::IReference_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned __int64>;
    VOID IReference<unsigned __int64>;
    VOID IReference<unsigned __int64>;
    struct Windows::Foundation::IReference<unsigned __int64> *operator=;
    struct Windows::Foundation::IReference<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned char> {
    struct Windows::Foundation::IReference_impl<unsigned char> Windows::Foundation::IReference_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned char>;
    VOID IReference<unsigned char>;
    VOID IReference<unsigned char>;
    struct Windows::Foundation::IReference<unsigned char> *operator=;
    struct Windows::Foundation::IReference<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReference<unsigned int> {
    struct Windows::Foundation::IReference_impl<unsigned int> Windows::Foundation::IReference_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReference<unsigned int>;
    VOID IReference<unsigned int>;
    VOID IReference<unsigned int>;
    struct Windows::Foundation::IReference<unsigned int> *operator=;
    struct Windows::Foundation::IReference<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<HSTRING__ *> {
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> Windows::Foundation::IReferenceArray_impl<HSTRING__ *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<HSTRING__ *>;
    VOID IReferenceArray<HSTRING__ *>;
    VOID IReferenceArray<HSTRING__ *>;
    struct Windows::Foundation::IReferenceArray<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReferenceArray<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<IInspectable *> {
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> Windows::Foundation::IReferenceArray_impl<IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<IInspectable *>;
    VOID IReferenceArray<IInspectable *>;
    VOID IReferenceArray<IInspectable *>;
    struct Windows::Foundation::IReferenceArray<IInspectable *> *operator=;
    struct Windows::Foundation::IReferenceArray<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    VOID IReferenceArray<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Point>;
    VOID IReferenceArray<Windows::Foundation::Point>;
    VOID IReferenceArray<Windows::Foundation::Point>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    VOID IReferenceArray<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::Size>;
    VOID IReferenceArray<Windows::Foundation::Size>;
    VOID IReferenceArray<Windows::Foundation::Size>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<_GUID> {
    struct Windows::Foundation::IReferenceArray_impl<_GUID> Windows::Foundation::IReferenceArray_impl<_GUID>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<_GUID>;
    VOID IReferenceArray<_GUID>;
    VOID IReferenceArray<_GUID>;
    struct Windows::Foundation::IReferenceArray<_GUID> *operator=;
    struct Windows::Foundation::IReferenceArray<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<__int64> {
    struct Windows::Foundation::IReferenceArray_impl<__int64> Windows::Foundation::IReferenceArray_impl<__int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<__int64>;
    VOID IReferenceArray<__int64>;
    VOID IReferenceArray<__int64>;
    struct Windows::Foundation::IReferenceArray<__int64> *operator=;
    struct Windows::Foundation::IReferenceArray<__int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<bool> {
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<bool>;
    VOID IReferenceArray<bool>;
    VOID IReferenceArray<bool>;
    struct Windows::Foundation::IReferenceArray<bool> *operator=;
    struct Windows::Foundation::IReferenceArray<bool> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<double> {
    struct Windows::Foundation::IReferenceArray_impl<double> Windows::Foundation::IReferenceArray_impl<double>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<double>;
    VOID IReferenceArray<double>;
    VOID IReferenceArray<double>;
    struct Windows::Foundation::IReferenceArray<double> *operator=;
    struct Windows::Foundation::IReferenceArray<double> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<float> {
    struct Windows::Foundation::IReferenceArray_impl<float> Windows::Foundation::IReferenceArray_impl<float>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<float>;
    VOID IReferenceArray<float>;
    VOID IReferenceArray<float>;
    struct Windows::Foundation::IReferenceArray<float> *operator=;
    struct Windows::Foundation::IReferenceArray<float> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<int> {
    struct Windows::Foundation::IReferenceArray_impl<int> Windows::Foundation::IReferenceArray_impl<int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<int>;
    VOID IReferenceArray<int>;
    VOID IReferenceArray<int>;
    struct Windows::Foundation::IReferenceArray<int> *operator=;
    struct Windows::Foundation::IReferenceArray<int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<short> {
    struct Windows::Foundation::IReferenceArray_impl<short> Windows::Foundation::IReferenceArray_impl<short>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<short>;
    VOID IReferenceArray<short>;
    VOID IReferenceArray<short>;
    struct Windows::Foundation::IReferenceArray<short> *operator=;
    struct Windows::Foundation::IReferenceArray<short> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned __int64> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> Windows::Foundation::IReferenceArray_impl<unsigned __int64>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned __int64>;
    VOID IReferenceArray<unsigned __int64>;
    VOID IReferenceArray<unsigned __int64>;
    struct Windows::Foundation::IReferenceArray<unsigned __int64> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned char> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> Windows::Foundation::IReferenceArray_impl<unsigned char>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned char>;
    VOID IReferenceArray<unsigned char>;
    VOID IReferenceArray<unsigned char>;
    struct Windows::Foundation::IReferenceArray<unsigned char> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray<unsigned int> {
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> Windows::Foundation::IReferenceArray_impl<unsigned int>;
    PWCHAR z_get_rc_name_impl;
    VOID IReferenceArray<unsigned int>;
    VOID IReferenceArray<unsigned int>;
    VOID IReferenceArray<unsigned int>;
    struct Windows::Foundation::IReferenceArray<unsigned int> *operator=;
    struct Windows::Foundation::IReferenceArray<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<HSTRING__ *>;
    VOID IReferenceArray_impl<HSTRING__ *>;
    VOID IReferenceArray_impl<HSTRING__ *>;
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<IInspectable *> {
    struct IInspectable IInspectable;
    struct IInspectable *T_abi;
    struct IInspectable *T_logical;
    struct IInspectable *T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<IInspectable *>;
    VOID IReferenceArray_impl<IInspectable *>;
    VOID IReferenceArray_impl<IInspectable *>;
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<IInspectable *> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::DateTime T_abi;
    struct Windows::Foundation::DateTime T_logical;
    struct Windows::Foundation::DateTime T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    VOID IReferenceArray_impl<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    VOID IReferenceArray_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    VOID IReferenceArray_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Size T_abi;
    struct Windows::Foundation::Size T_logical;
    struct Windows::Foundation::Size T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    VOID IReferenceArray_impl<Windows::Foundation::Size>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan T_abi;
    struct Windows::Foundation::TimeSpan T_logical;
    struct Windows::Foundation::TimeSpan T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    VOID IReferenceArray_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<_GUID>;
    VOID IReferenceArray_impl<_GUID>;
    VOID IReferenceArray_impl<_GUID>;
    struct Windows::Foundation::IReferenceArray_impl<_GUID> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<__int64>;
    VOID IReferenceArray_impl<__int64>;
    VOID IReferenceArray_impl<__int64>;
    struct Windows::Foundation::IReferenceArray_impl<__int64> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<double>;
    VOID IReferenceArray_impl<double>;
    VOID IReferenceArray_impl<double>;
    struct Windows::Foundation::IReferenceArray_impl<double> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<double> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<float>;
    VOID IReferenceArray_impl<float>;
    VOID IReferenceArray_impl<float>;
    struct Windows::Foundation::IReferenceArray_impl<float> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<float> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<int>;
    VOID IReferenceArray_impl<int>;
    VOID IReferenceArray_impl<int>;
    struct Windows::Foundation::IReferenceArray_impl<int> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<int> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<short>;
    VOID IReferenceArray_impl<short>;
    VOID IReferenceArray_impl<short>;
    struct Windows::Foundation::IReferenceArray_impl<short> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<short> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned __int64>;
    VOID IReferenceArray_impl<unsigned __int64>;
    VOID IReferenceArray_impl<unsigned __int64>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned char>;
    VOID IReferenceArray_impl<unsigned char>;
    VOID IReferenceArray_impl<unsigned char>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReferenceArray_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Value;
    VOID IReferenceArray_impl<unsigned int>;
    VOID IReferenceArray_impl<unsigned int>;
    VOID IReferenceArray_impl<unsigned int>;
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> *operator=;
    struct Windows::Foundation::IReferenceArray_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<HSTRING__ *> {
    struct IInspectable IInspectable;
    struct HSTRING__ *T_abi;
    struct HSTRING__ *T_logical;
    struct HSTRING__ *T_complex;
    HRESULT get_Value;
    VOID IReference_impl<HSTRING__ *>;
    VOID IReference_impl<HSTRING__ *>;
    VOID IReference_impl<HSTRING__ *>;
    struct Windows::Foundation::IReference_impl<HSTRING__ *> *operator=;
    struct Windows::Foundation::IReference_impl<HSTRING__ *> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::DateTime T_abi;
    struct Windows::Foundation::DateTime T_logical;
    struct Windows::Foundation::DateTime T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    VOID IReference_impl<Windows::Foundation::DateTime>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    BOOLEAN T_logical;
    struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    VOID IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> > *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Point T_abi;
    struct Windows::Foundation::Point T_logical;
    struct Windows::Foundation::Point T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Point>;
    VOID IReference_impl<Windows::Foundation::Point>;
    VOID IReference_impl<Windows::Foundation::Point>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Point> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Rect T_abi;
    struct Windows::Foundation::Rect T_logical;
    struct Windows::Foundation::Rect T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Rect>;
    VOID IReference_impl<Windows::Foundation::Rect>;
    VOID IReference_impl<Windows::Foundation::Rect>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::Size T_abi;
    struct Windows::Foundation::Size T_logical;
    struct Windows::Foundation::Size T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::Size>;
    VOID IReference_impl<Windows::Foundation::Size>;
    VOID IReference_impl<Windows::Foundation::Size>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::Size> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> {
    struct IInspectable IInspectable;
    struct Windows::Foundation::TimeSpan T_abi;
    struct Windows::Foundation::TimeSpan T_logical;
    struct Windows::Foundation::TimeSpan T_complex;
    HRESULT get_Value;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    VOID IReference_impl<Windows::Foundation::TimeSpan>;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> *operator=;
    struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<_GUID> {
    struct IInspectable IInspectable;
    struct _GUID T_abi;
    struct _GUID T_logical;
    struct _GUID T_complex;
    HRESULT get_Value;
    VOID IReference_impl<_GUID>;
    VOID IReference_impl<_GUID>;
    VOID IReference_impl<_GUID>;
    struct Windows::Foundation::IReference_impl<_GUID> *operator=;
    struct Windows::Foundation::IReference_impl<_GUID> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<__int64> {
    struct IInspectable IInspectable;
    LONG64 T_abi;
    LONG64 T_logical;
    LONG64 T_complex;
    HRESULT get_Value;
    VOID IReference_impl<__int64>;
    VOID IReference_impl<__int64>;
    VOID IReference_impl<__int64>;
    struct Windows::Foundation::IReference_impl<__int64> *operator=;
    struct Windows::Foundation::IReference_impl<__int64> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<double> {
    struct IInspectable IInspectable;
    DOUBLE T_abi;
    DOUBLE T_logical;
    DOUBLE T_complex;
    HRESULT get_Value;
    VOID IReference_impl<double>;
    VOID IReference_impl<double>;
    VOID IReference_impl<double>;
    struct Windows::Foundation::IReference_impl<double> *operator=;
    struct Windows::Foundation::IReference_impl<double> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<float> {
    struct IInspectable IInspectable;
    FLOAT T_abi;
    FLOAT T_logical;
    FLOAT T_complex;
    HRESULT get_Value;
    VOID IReference_impl<float>;
    VOID IReference_impl<float>;
    VOID IReference_impl<float>;
    struct Windows::Foundation::IReference_impl<float> *operator=;
    struct Windows::Foundation::IReference_impl<float> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<int> {
    struct IInspectable IInspectable;
    LONG T_abi;
    LONG T_logical;
    LONG T_complex;
    HRESULT get_Value;
    VOID IReference_impl<int>;
    VOID IReference_impl<int>;
    VOID IReference_impl<int>;
    struct Windows::Foundation::IReference_impl<int> *operator=;
    struct Windows::Foundation::IReference_impl<int> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<short> {
    struct IInspectable IInspectable;
    SHORT T_abi;
    SHORT T_logical;
    SHORT T_complex;
    HRESULT get_Value;
    VOID IReference_impl<short>;
    VOID IReference_impl<short>;
    VOID IReference_impl<short>;
    struct Windows::Foundation::IReference_impl<short> *operator=;
    struct Windows::Foundation::IReference_impl<short> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned __int64> {
    struct IInspectable IInspectable;
    ULONG64 T_abi;
    ULONG64 T_logical;
    ULONG64 T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned __int64>;
    VOID IReference_impl<unsigned __int64>;
    VOID IReference_impl<unsigned __int64>;
    struct Windows::Foundation::IReference_impl<unsigned __int64> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned __int64> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned char> {
    struct IInspectable IInspectable;
    UCHAR T_abi;
    UCHAR T_logical;
    UCHAR T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned char>;
    VOID IReference_impl<unsigned char>;
    VOID IReference_impl<unsigned char>;
    struct Windows::Foundation::IReference_impl<unsigned char> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned char> *operator=;
};

typedef struct Windows::Foundation::IReference_impl<unsigned int> {
    struct IInspectable IInspectable;
    ULONG T_abi;
    ULONG T_logical;
    ULONG T_complex;
    HRESULT get_Value;
    VOID IReference_impl<unsigned int>;
    VOID IReference_impl<unsigned int>;
    VOID IReference_impl<unsigned int>;
    struct Windows::Foundation::IReference_impl<unsigned int> *operator=;
    struct Windows::Foundation::IReference_impl<unsigned int> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler<IInspectable *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> {
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    PWCHAR z_get_rc_name_impl;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> {
    struct IUnknown IUnknown;
    struct IInspectable *TSender_abi;
    struct IInspectable *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct IInspectable *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    VOID ITypedEventHandler_impl<IInspectable *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> {
    struct IUnknown IUnknown;
    struct Windows::Foundation::IMemoryBufferReference *TSender_abi;
    struct Windows::Foundation::IMemoryBufferReference *TSender_logical;
    struct IInspectable *TArgs_abi;
    struct IInspectable *TArgs_logical;
    struct Windows::Foundation::IMemoryBufferReference *TSender_complex;
    struct IInspectable *TArgs_complex;
    HRESULT Invoke;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    VOID ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
    struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *> *operator=;
};

typedef struct Windows::Foundation::Internal::AggregateType<bool,unsigned char> {
};

typedef struct Windows::Foundation::Point {
    FLOAT X;
    FLOAT Y;
};

typedef struct Windows::Foundation::Rect {
    FLOAT X;
    FLOAT Y;
    FLOAT Width;
    FLOAT Height;
};

typedef struct Windows::Foundation::Size {
    FLOAT Width;
    FLOAT Height;
};

typedef struct Windows::Foundation::TimeSpan {
    LONG64 Duration;
};

typedef struct Windows::UI::Core::AnimationMetrics::IAnimationDescription {
    struct IInspectable IInspectable;
    HRESULT get_Animations;
    HRESULT get_StaggerDelay;
    HRESULT get_StaggerDelayFactor;
    HRESULT get_DelayLimit;
    HRESULT get_ZOrder;
    VOID IAnimationDescription;
    VOID IAnimationDescription;
    VOID IAnimationDescription;
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescription *operator=;
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescription *operator=;
};

typedef struct Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory {
    struct IInspectable IInspectable;
    HRESULT CreateInstance;
    VOID IAnimationDescriptionFactory;
    VOID IAnimationDescriptionFactory;
    VOID IAnimationDescriptionFactory;
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory *operator=;
    struct Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory *operator=;
};

typedef struct Windows::UI::Core::AnimationMetrics::IOpacityAnimation {
    struct IInspectable IInspectable;
    HRESULT get_InitialOpacity;
    HRESULT get_FinalOpacity;
    VOID IOpacityAnimation;
    VOID IOpacityAnimation;
    VOID IOpacityAnimation;
    struct Windows::UI::Core::AnimationMetrics::IOpacityAnimation *operator=;
    struct Windows::UI::Core::AnimationMetrics::IOpacityAnimation *operator=;
};

typedef struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation {
    struct IInspectable IInspectable;
    HRESULT get_Type;
    HRESULT get_Delay;
    HRESULT get_Duration;
    HRESULT get_Control1;
    HRESULT get_Control2;
    VOID IPropertyAnimation;
    VOID IPropertyAnimation;
    VOID IPropertyAnimation;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *operator=;
    struct Windows::UI::Core::AnimationMetrics::IPropertyAnimation *operator=;
};

typedef struct Windows::UI::Core::AnimationMetrics::IScaleAnimation {
    struct IInspectable IInspectable;
    HRESULT get_InitialScaleX;
    HRESULT get_InitialScaleY;
    HRESULT get_FinalScaleX;
    HRESULT get_FinalScaleY;
    HRESULT get_NormalizedOrigin;
    VOID IScaleAnimation;
    VOID IScaleAnimation;
    VOID IScaleAnimation;
    struct Windows::UI::Core::AnimationMetrics::IScaleAnimation *operator=;
    struct Windows::UI::Core::AnimationMetrics::IScaleAnimation *operator=;
};

typedef struct XMLDOMDocumentEvents {
    struct IDispatch IDispatch;
    VOID XMLDOMDocumentEvents;
    VOID XMLDOMDocumentEvents;
    VOID XMLDOMDocumentEvents;
    struct XMLDOMDocumentEvents *operator=;
    struct XMLDOMDocumentEvents *operator=;
};

typedef struct XSAVE_CPU_ERRATA {
    ULONG NumberOfErrata;
    struct XSAVE_CPU_INFO Errata[1];
};

typedef struct XSAVE_CPU_INFO {
    UCHAR Processor;
    USHORT Family;
    USHORT Model;
    USHORT Stepping;
    USHORT ExtendedModel;
    ULONG ExtendedFamily;
    ULONG64 MicrocodeVersion;
    ULONG Reserved;
};

typedef struct _ABC {
    LONG abcA;
    ULONG abcB;
    LONG abcC;
};

typedef struct _ABCFLOAT {
    FLOAT abcfA;
    FLOAT abcfB;
    FLOAT abcfC;
};

typedef struct _ACCESS_ALLOWED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_DENIED_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _ACCESS_REASONS {
    ULONG Data[32];
};

typedef struct _ACE_HEADER {
    UCHAR AceType;
    UCHAR AceFlags;
    USHORT AceSize;
};

typedef struct _ACL {
    UCHAR AclRevision;
    UCHAR Sbz1;
    USHORT AclSize;
    USHORT AceCount;
    USHORT Sbz2;
};

typedef struct _ACL_REVISION_INFORMATION {
    ULONG AclRevision;
};

typedef struct _ACL_SIZE_INFORMATION {
    ULONG AceCount;
    ULONG AclBytesInUse;
    ULONG AclBytesFree;
};

typedef struct _ACTION_HEADER {
    ULONG transport_id;
    USHORT action_code;
    USHORT reserved;
};

typedef struct _ACTIVATION_CONTEXT {
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA {
    ULONG Size;
    ULONG Flags;
    PWCHAR AssemblyName;
    ULONG AssemblyNameLength;
    ULONG HashAlgorithm;
    ULONG PseudoKey;
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    ULONG ulFlags;
    ULONG ulEncodedAssemblyIdentityLength;
    ULONG ulManifestPathType;
    ULONG ulManifestPathLength;
    union _LARGE_INTEGER liManifestLastWriteTime;
    ULONG ulPolicyPathType;
    ULONG ulPolicyPathLength;
    union _LARGE_INTEGER liPolicyLastWriteTime;
    ULONG ulMetadataSatelliteRosterIndex;
    ULONG ulManifestVersionMajor;
    ULONG ulManifestVersionMinor;
    ULONG ulPolicyVersionMajor;
    ULONG ulPolicyVersionMinor;
    ULONG ulAssemblyDirectoryNameLength;
    PWCHAR lpAssemblyEncodedAssemblyIdentity;
    PWCHAR lpAssemblyManifestPath;
    PWCHAR lpAssemblyPolicyPath;
    PWCHAR lpAssemblyDirectoryName;
    ULONG ulFileCount;
};

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {
    struct _ACTIVATION_CONTEXT *ActivationContext;
    PVOID hActCtx;
    ULONG Flags;
    ULONG dwFlags;
};

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
    ULONG ElementCount;
    struct _COMPATIBILITY_CONTEXT_ELEMENT Elements[0];
};

typedef struct _ACTIVATION_CONTEXT_DATA {
};

typedef struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION {
};

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    ULONG dwFlags;
    ULONG ulFormatVersion;
    ULONG ulAssemblyCount;
    ULONG ulRootManifestPathType;
    ULONG ulRootManifestPathChars;
    ULONG ulRootConfigurationPathType;
    ULONG ulRootConfigurationPathChars;
    ULONG ulAppDirPathType;
    ULONG ulAppDirPathChars;
    PWCHAR lpRootManifestPath;
    PWCHAR lpRootConfigurationPath;
    PWCHAR lpAppDirPath;
};

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    ULONG ulAssemblyIndex;
    ULONG ulFileIndexInAssembly;
};

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
    ULONG ulFlags;
    enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
    ULONG UiAccess;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA {
    ULONG Size;
    ULONG DataFormatVersion;
    PVOID Data;
    ULONG Length;
    PVOID SectionGlobalData;
    ULONG SectionGlobalDataLength;
    PVOID SectionBase;
    ULONG SectionTotalLength;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG AssemblyRosterIndex;
    ULONG Flags;
    struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600 {
    ULONG Size;
    ULONG DataFormatVersion;
    PVOID Data;
    ULONG Length;
    PVOID SectionGlobalData;
    ULONG SectionGlobalDataLength;
    PVOID SectionBase;
    ULONG SectionTotalLength;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG AssemblyRosterIndex;
    ULONG Flags;
};

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION *Information;
    PVOID SectionBase;
    ULONG SectionLength;
    PVOID SectionGlobalDataBase;
    ULONG SectionGlobalDataLength;
};

typedef struct _ACTIVATION_CONTEXT_STACK {
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
    struct _LIST_ENTRY FrameListCache;
    ULONG Flags;
    ULONG NextCookieSequenceNumber;
    ULONG StackId;
};

typedef struct _ADAPTER_STATUS {
    UCHAR adapter_address[6];
    UCHAR rev_major;
    UCHAR reserved0;
    UCHAR adapter_type;
    UCHAR rev_minor;
    USHORT duration;
    USHORT frmr_recv;
    USHORT frmr_xmit;
    USHORT iframe_recv_err;
    USHORT xmit_aborts;
    ULONG xmit_success;
    ULONG recv_success;
    USHORT iframe_xmit_err;
    USHORT recv_buff_unavail;
    USHORT t1_timeouts;
    USHORT ti_timeouts;
    ULONG reserved1;
    USHORT free_ncbs;
    USHORT max_cfg_ncbs;
    USHORT max_ncbs;
    USHORT xmit_buf_unavail;
    USHORT max_dgram_size;
    USHORT pending_sess;
    USHORT max_cfg_sess;
    USHORT max_sess;
    USHORT max_sess_pkt_size;
    USHORT name_count;
};

typedef struct _ADDJOB_INFO_1A {
    PCHAR Path;
    ULONG JobId;
};

typedef struct _ADDJOB_INFO_1W {
    PWCHAR Path;
    ULONG JobId;
};

typedef struct _ADMINISTRATOR_POWER_POLICY {
    enum _SYSTEM_POWER_STATE MinSleep;
    enum _SYSTEM_POWER_STATE MaxSleep;
    ULONG MinVideoTimeout;
    ULONG MaxVideoTimeout;
    ULONG MinSpindownTimeout;
    ULONG MaxSpindownTimeout;
};

typedef struct _ALPC_BASIC_INFORMATION {
    ULONG Flags;
    ULONG SequenceNo;
    PVOID PortContext;
};

typedef struct _ALPC_CONTEXT_ATTR {
    PVOID PortContext;
    PVOID MessageContext;
    ULONG Sequence;
    ULONG MessageId;
    ULONG CallbackId;
};

typedef struct _ALPC_DATA_VIEW_ATTR {
    ULONG Flags;
    PVOID SectionHandle;
    PVOID ViewBase;
    ULONG64 ViewSize;
};

typedef struct _ALPC_DIRECT_ATTR {
    PVOID Event;
};

typedef struct _ALPC_HANDLE_ATTR {
    ULONG Flags;
    ULONG Reserved0 : 16;
    ULONG SameAccess : 1;
    ULONG SameAttributes : 1;
    ULONG Indirect : 1;
    ULONG Inherit : 1;
    ULONG Reserved1 : 12;
    PVOID Handle;
    struct _ALPC_HANDLE_ATTR32 *HandleAttrArray;
    ULONG ObjectType;
    ULONG HandleCount;
    ULONG DesiredAccess;
    ULONG GrantedAccess;
};

typedef struct _ALPC_HANDLE_ATTR32 {
    ULONG Flags;
    ULONG Reserved0 : 16;
    ULONG SameAccess : 1;
    ULONG SameAttributes : 1;
    ULONG Indirect : 1;
    ULONG Inherit : 1;
    ULONG Reserved1 : 12;
    ULONG Handle;
    ULONG ObjectType;
    ULONG DesiredAccess;
    ULONG GrantedAccess;
};

typedef struct _ALPC_MESSAGE_ATTRIBUTES {
    ULONG AllocatedAttributes;
    ULONG ValidAttributes;
};

typedef struct _ALPC_MESSAGE_HANDLE_INFORMATION {
    ULONG Index;
    ULONG Flags;
    ULONG Handle;
    ULONG ObjectType;
    ULONG GrantedAccess;
};

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    PVOID CompletionPort;
};

typedef struct _ALPC_PORT_ATTRIBUTES {
    ULONG Flags;
    struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
    ULONG64 MaxMessageLength;
    ULONG64 MemoryBandwidth;
    ULONG64 MaxPoolUsage;
    ULONG64 MaxSectionSize;
    ULONG64 MaxViewSize;
    ULONG64 MaxTotalSectionSize;
    ULONG DupObjectTypes;
    ULONG Reserved;
};

typedef struct _ALPC_PORT_CALLBACK_INFORMATION {
    PVOID CallbackObject;
    PVOID Context;
};

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION {
    PVOID Buffer;
    ULONG Size;
    ULONG ConcurrencyCount;
    ULONG AttributeFlags;
};

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION {
    PVOID Buffer;
    ULONG Size;
};

typedef struct _ALPC_SECURITY_ATTR {
    ULONG Flags;
    struct _SECURITY_QUALITY_OF_SERVICE *QoS;
    PVOID ContextHandle;
};

typedef struct _ALPC_SERVER_INFORMATION {
    struct {
        PVOID ThreadHandle;
    } In;
    struct {
        UCHAR ThreadBlocked;
        PVOID ConnectedProcessId;
        struct _UNICODE_STRING ConnectionPortName;
    } Out;
};

typedef struct _ALPC_TOKEN_ATTR {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    struct _LUID ModifiedId;
};

typedef struct _ALPC_WORK_ON_BEHALF_ATTR {
    struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
};

typedef struct _ALPC_WORK_ON_BEHALF_TICKET {
    ULONG ThreadId;
    ULONG ThreadCreationTimeLow;
};

typedef struct _AMD64_CONTEXT {
};

typedef struct _ANIHEADER {
    ULONG cbSizeof;
    ULONG cFrames;
    ULONG cSteps;
    ULONG cx;
    ULONG cy;
    ULONG cBitCount;
    ULONG cPlanes;
    ULONG jifRate;
    ULONG fl;
};

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {
    union _LARGE_INTEGER ActivationTime;
    ULONG Flags;
    ULONG ButtonInstanceID;
};

typedef struct _APP_MEMORY_INFORMATION {
    ULONG64 AvailableCommit;
    ULONG64 PrivateCommitUsage;
    ULONG64 PeakPrivateCommitUsage;
    ULONG64 TotalCommitUsage;
};

typedef struct _ARM64_CONTEXT {
};

typedef struct _ARM_CONTEXT {
};

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    ULONG ulFlags;
    ULONG ulFilenameLength;
    ULONG ulPathLength;
    PWCHAR lpFileName;
    PWCHAR lpFilePath;
};

typedef struct _ASSEMBLY_STORAGE_MAP {
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT {
    PVOID ResolutionContext;
    ULONG64 RootIndex;
    UCHAR CancelResolution;
    UCHAR NoMoreEntries;
    struct _UNICODE_STRING Root;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING {
    PVOID Data;
    ULONG AssemblyRosterIndex;
    PVOID ResolutionContext;
    struct _UNICODE_STRING Root;
    UCHAR KnownRoot;
    ULONG64 RootCount;
    UCHAR CancelResolution;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING {
    PVOID ResolutionContext;
};

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL {
    PVOID ResolutionContext;
    ULONG RootIndexUsed;
};

typedef struct _ASYNCCONFIGA {
    CHAR DeviceName[129];
    CHAR ModemName[129];
    ULONG BaudRate;
    ULONG Parity;
    ULONG StopBits;
    ULONG ByteSize;
    ULONG fEnableDsrSensitivity : 1;
    ULONG fConnectionDriver : 1;
    struct _FLOWCONTROLCONFIG FlowControl;
    struct _CONNECTCONFIG Connect;
};

typedef struct _ASYNCCONFIGW {
    WCHAR DeviceName[129];
    WCHAR ModemName[129];
    ULONG BaudRate;
    ULONG Parity;
    ULONG StopBits;
    ULONG ByteSize;
    ULONG fEnableDsrSensitivity : 1;
    ULONG fConnectionDriver : 1;
    struct _FLOWCONTROLCONFIG FlowControl;
    struct _CONNECTCONFIG Connect;
};

typedef struct _ATOM_BASIC_INFORMATION {
    USHORT UsageCount;
    USHORT Flags;
    USHORT NameLength;
    WCHAR Name[1];
};

typedef struct _ATOM_TABLE_INFORMATION {
    ULONG NumberOfAtoms;
    USHORT Atoms[1];
};

typedef struct _AUDIT_POLICY_INFORMATION {
    struct _GUID AuditSubCategoryGuid;
    ULONG AuditingInformation;
    struct _GUID AuditCategoryGuid;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRegPolicySettings;
    struct _CMSG_SIGNER_INFO *pSignerInfo;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    LONG fCommercial;
};

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRegPolicySettings;
    LONG fCommercial;
};

typedef struct _AppBarData {
    ULONG cbSize;
    struct HWND__ *hWnd;
    ULONG uCallbackMessage;
    ULONG uEdge;
    struct tagRECT rc;
    LONG64 lParam;
};

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER {
    PWCHAR pszName;
    ULONG dwClass;
    ULONG dwFlags;
};

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO {
    ULONG cbSize;
    ULONG dwInfoVersion;
    PUCHAR pbNonce;
    ULONG cbNonce;
    PUCHAR pbAuthData;
    ULONG cbAuthData;
    PUCHAR pbTag;
    ULONG cbTag;
    PUCHAR pbMacContext;
    ULONG cbMacContext;
    ULONG cbAAD;
    ULONG64 cbData;
    ULONG dwFlags;
};

typedef struct _BCRYPT_DH_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_DH_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
};

typedef struct _BCRYPT_DSA_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_DSA_KEY_BLOB_V2 {
    ULONG dwMagic;
    ULONG cbKey;
    enum HASHALGORITHM_ENUM hashAlgorithm;
    enum DSAFIPSVERSION_ENUM standardVersion;
    ULONG cbSeedLength;
    ULONG cbGroupSize;
    UCHAR Count[4];
};

typedef struct _BCRYPT_DSA_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2 {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
    enum HASHALGORITHM_ENUM hashAlgorithm;
    enum DSAFIPSVERSION_ENUM standardVersion;
    ULONG cbSeedLength;
    ULONG cbGroupSize;
    UCHAR Count[4];
};

typedef struct _BCRYPT_ECCFULLKEY_BLOB {
    ULONG dwMagic;
    ULONG dwVersion;
    enum ECC_CURVE_TYPE_ENUM dwCurveType;
    enum ECC_CURVE_ALG_ID_ENUM dwCurveGenerationAlgId;
    ULONG cbFieldLength;
    ULONG cbSubgroupOrder;
    ULONG cbCofactor;
    ULONG cbSeed;
};

typedef struct _BCRYPT_ECCKEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_ECC_CURVE_NAMES {
    ULONG dwEccCurveNames;
    PWCHAR *pEccCurveNames;
};

typedef struct _BCRYPT_INTERFACE_VERSION {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _BCRYPT_KEY_BLOB {
    ULONG Magic;
};

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER {
    ULONG dwMagic;
    ULONG dwVersion;
    ULONG cbKeyData;
};

typedef struct _BCRYPT_MULTI_HASH_OPERATION {
    ULONG iHash;
    enum BCRYPT_HASH_OPERATION_TYPE hashOperation;
    PUCHAR pbBuffer;
    ULONG cbBuffer;
};

typedef struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT {
    ULONG cbPerObject;
    ULONG cbPerElement;
};

typedef struct _BCRYPT_OAEP_PADDING_INFO {
    PWCHAR pszAlgId;
    PUCHAR pbLabel;
    ULONG cbLabel;
};

typedef struct _BCRYPT_OID {
    ULONG cbOID;
    PUCHAR pbOID;
};

typedef struct _BCRYPT_OID_LIST {
    ULONG dwOIDCount;
    struct _BCRYPT_OID *pOIDs;
};

typedef struct _BCRYPT_PKCS1_PADDING_INFO {
    PWCHAR pszAlgId;
};

typedef struct _BCRYPT_PROVIDER_NAME {
    PWCHAR pszProviderName;
};

typedef struct _BCRYPT_PSS_PADDING_INFO {
    PWCHAR pszAlgId;
    ULONG cbSalt;
};

typedef struct _BCRYPT_RSAKEY_BLOB {
    ULONG Magic;
    ULONG BitLength;
    ULONG cbPublicExp;
    ULONG cbModulus;
    ULONG cbPrime1;
    ULONG cbPrime2;
};

typedef struct _BCryptBuffer {
    ULONG cbBuffer;
    ULONG BufferType;
    PVOID pvBuffer;
};

typedef struct _BCryptBufferDesc {
    ULONG ulVersion;
    ULONG cBuffers;
    struct _BCryptBuffer *pBuffers;
};

typedef struct _BEEPINPUT {
    ULONG uType;
};

typedef struct _BIDI_DATA {
    ULONG dwBidiType;
     <unnamed-type-u>;
    union {
        LONG bData;
        LONG iData;
        PWCHAR sData;
        FLOAT fData;
        struct _BINARY_CONTAINER biData;
    } u;
};

typedef struct _BIDI_REQUEST_CONTAINER {
    ULONG Version;
    ULONG Flags;
    ULONG Count;
    struct _BIDI_REQUEST_DATA aData[1];
};

typedef struct _BIDI_REQUEST_DATA {
    ULONG dwReqNumber;
    PWCHAR pSchema;
    struct _BIDI_DATA data;
};

typedef struct _BIDI_RESPONSE_CONTAINER {
    ULONG Version;
    ULONG Flags;
    ULONG Count;
    struct _BIDI_RESPONSE_DATA aData[1];
};

typedef struct _BIDI_RESPONSE_DATA {
    ULONG dwResult;
    ULONG dwReqNumber;
    PWCHAR pSchema;
    struct _BIDI_DATA data;
};

typedef struct _BINARY_CONTAINER {
    ULONG cbBuf;
    PUCHAR pData;
};

typedef struct _BIN_COUNT {
    struct _BIN_RANGE BinRange;
    ULONG BinCount;
};

typedef struct _BIN_RANGE {
    union _LARGE_INTEGER StartValue;
    union _LARGE_INTEGER Length;
};

typedef struct _BIN_RESULTS {
    ULONG NumberOfBins;
    struct _BIN_COUNT BinCounts[1];
};

typedef struct _BITMAPHEADER {
    struct tagBITMAPINFOHEADER bmih;
    ULONG masks[3];
};

typedef struct _BITMAPREF {
    PUCHAR pBytes;
    ULONG dwBytes;
    LONG64 dwInt64;
};

typedef struct _BLENDFUNCTION {
    UCHAR BlendOp;
    UCHAR BlendFlags;
    UCHAR SourceConstantAlpha;
    UCHAR AlphaFormat;
};

typedef struct _BOOT_AREA_INFO {
    ULONG BootSectorCount;
     <unnamed-type-BootSectors>;
    struct {
        union _LARGE_INTEGER Offset;
    } BootSectors[2];
};

typedef struct _BOOT_ENTROPY_NT_RESULT {
    ULONG maxEntropySources;
    struct _BOOT_ENTROPY_SOURCE_NT_RESULT EntropySourceResult[10];
    UCHAR SeedBytesForCng[48];
};

typedef struct _BOOT_ENTROPY_SOURCE_NT_RESULT {
    enum _BOOT_ENTROPY_SOURCE_ID SourceId;
    ULONG64 Policy;
    enum _BOOT_ENTROPY_SOURCE_RESULT_CODE ResultCode;
    LONG ResultStatus;
    ULONG64 Time;
    ULONG EntropyLength;
    UCHAR EntropyData[64];
};

typedef struct _BOOT_ENTRY {
    ULONG Version;
    ULONG Length;
    ULONG Id;
    ULONG Attributes;
    ULONG FriendlyNameOffset;
    ULONG BootFilePathOffset;
    ULONG OsOptionsLength;
    UCHAR OsOptions[1];
};

typedef struct _BOOT_ENTRY_LIST {
    ULONG NextEntryOffset;
    struct _BOOT_ENTRY BootEntry;
};

typedef struct _BOOT_OPTIONS {
    ULONG Version;
    ULONG Length;
    ULONG Timeout;
    ULONG CurrentBootEntryId;
    ULONG NextBootEntryId;
    WCHAR HeadlessRedirection[1];
};

typedef struct _BP_ANIMATIONPARAMS {
    ULONG cbSize;
    ULONG dwFlags;
    enum _BP_ANIMATIONSTYLE style;
    ULONG dwDuration;
};

typedef struct _BP_PAINTPARAMS {
    ULONG cbSize;
    ULONG dwFlags;
    struct tagRECT *prcExclude;
    struct _BLENDFUNCTION *pBlendFunction;
};

typedef struct _BYTE_BLOB {
    ULONG clSize;
    UCHAR abData[1];
};

typedef struct _BYTE_SIZEDARR {
    ULONG clSize;
    PUCHAR pData;
};

typedef struct _BY_HANDLE_FILE_INFORMATION {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG dwVolumeSerialNumber;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG nNumberOfLinks;
    ULONG nFileIndexHigh;
    ULONG nFileIndexLow;
};

typedef struct _CACHE_DESCRIPTOR {
    UCHAR Level;
    UCHAR Associativity;
    USHORT LineSize;
    ULONG Size;
    enum _PROCESSOR_CACHE_TYPE Type;
};

typedef struct _CACHE_RELATIONSHIP {
    UCHAR Level;
    UCHAR Associativity;
    USHORT LineSize;
    ULONG CacheSize;
    enum _PROCESSOR_CACHE_TYPE Type;
    UCHAR Reserved[20];
    struct _GROUP_AFFINITY GroupMask;
};

typedef struct _CALL_FRAME {
    PVOID ReturnAddress;
    PVOID Param1Home;
    PVOID Param2Home;
    PVOID Param3Home;
    PVOID Param4Home;
};

typedef struct _CDCONFIGA {
    enum _CDCLASS CdClass;
    CHAR CdName[33];
    CHAR CdDLL[33];
    ULONG CdFlag;
};

typedef struct _CDCONFIGW {
    enum _CDCLASS CdClass;
    WCHAR CdName[33];
    WCHAR CdDLL[33];
    ULONG CdFlag;
};

typedef struct _CD_HLSURF_CREATIONCONTEXT {
    PVOID hwnd;
    ULONG uiWidth;
    ULONG uiHeight;
    struct _LUID AdapterLuid;
};

typedef struct _CD_NOTIFY_COMPOSITORREF_TRACKING {
    PVOID hlsurface;
    LONG Tracked;
};

typedef struct _CD_NOTIFY_LSURFACE {
    PVOID hlsurface;
    ULONG Flags;
    struct _CD_HLSURF_CREATIONCONTEXT CreationContext;
};

typedef struct _CD_NOTIFY_REDIR_ASSOC_LSURFACE {
    PVOID SurfObj;
    PVOID hSurf;
    PVOID hlsurface;
};

typedef struct _CD_NOTIFY_REDIR_CREATED {
    PVOID SurfObj;
};

typedef struct _CD_NOTIFY_REDIR_DESTROY {
    PVOID SurfObj;
};

typedef struct _CENTRAL_ACCESS_POLICY {
    PVOID CAPID;
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING Description;
    struct _UNICODE_STRING ChangeId;
    ULONG Flags;
    ULONG CAPECount;
    struct _CENTRAL_ACCESS_POLICY_ENTRY **CAPEs;
};

typedef struct _CENTRAL_ACCESS_POLICY_ENTRY {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING Description;
    struct _UNICODE_STRING ChangeId;
    ULONG LengthAppliesTo;
    PUCHAR AppliesTo;
    ULONG LengthSD;
    PVOID SD;
    ULONG LengthStagedSD;
    PVOID StagedSD;
    ULONG Flags;
};

typedef struct _CERTIFICATE_BLOB {
    ULONG dwCertEncodingType;
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _CERT_ACCESS_DESCRIPTION {
    PCHAR pszAccessMethod;
    struct _CERT_ALT_NAME_ENTRY AccessLocation;
};

typedef struct _CERT_ALT_NAME_ENTRY {
    ULONG dwAltNameChoice;
    struct _CERT_OTHER_NAME *pOtherName;
    PWCHAR pwszRfc822Name;
    PWCHAR pwszDNSName;
    struct _CRYPTOAPI_BLOB DirectoryName;
    PWCHAR pwszURL;
    struct _CRYPTOAPI_BLOB IPAddress;
    PCHAR pszRegisteredID;
};

typedef struct _CERT_ALT_NAME_INFO {
    ULONG cAltEntry;
    struct _CERT_ALT_NAME_ENTRY *rgAltEntry;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS {
    ULONG cAccDescr;
    struct _CERT_ACCESS_DESCRIPTION *rgAccDescr;
};

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
    struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
};

typedef struct _CERT_AUTHORITY_KEY_ID_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPTOAPI_BLOB CertIssuer;
    struct _CRYPTOAPI_BLOB CertSerialNumber;
};

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO {
    LONG fCA;
    LONG fPathLenConstraint;
    ULONG dwPathLenConstraint;
};

typedef struct _CERT_BASIC_CONSTRAINTS_INFO {
    struct _CRYPT_BIT_BLOB SubjectType;
    LONG fPathLenConstraint;
    ULONG dwPathLenConstraint;
    ULONG cSubtreesConstraint;
    struct _CRYPTOAPI_BLOB *rgSubtreesConstraint;
};

typedef struct _CERT_BIOMETRIC_DATA {
    ULONG dwTypeOfBiometricDataChoice;
    ULONG dwPredefined;
    PCHAR pszObjId;
    struct _CERT_HASHED_URL HashedUrl;
};

typedef struct _CERT_BIOMETRIC_EXT_INFO {
    ULONG cBiometricData;
    struct _CERT_BIOMETRIC_DATA *rgBiometricData;
};

typedef struct _CERT_CHAIN {
    ULONG cCerts;
    struct _CRYPTOAPI_BLOB *certs;
    struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

typedef struct _CERT_CHAIN_CONTEXT {
    ULONG cbSize;
    struct _CERT_TRUST_STATUS TrustStatus;
    ULONG cChain;
    struct _CERT_SIMPLE_CHAIN **rgpChain;
    ULONG cLowerQualityChainContext;
    struct _CERT_CHAIN_CONTEXT **rgpLowerQualityChainContext;
    LONG fHasRevocationFreshnessTime;
    ULONG dwRevocationFreshnessTime;
    ULONG dwCreateFlags;
    struct _GUID ChainId;
};

typedef struct _CERT_CHAIN_ELEMENT {
    ULONG cbSize;
    struct _CERT_CONTEXT *pCertContext;
    struct _CERT_TRUST_STATUS TrustStatus;
    struct _CERT_REVOCATION_INFO *pRevocationInfo;
    struct _CTL_USAGE *pIssuanceUsage;
    struct _CTL_USAGE *pApplicationUsage;
    PWCHAR pwszExtendedErrorInfo;
};

typedef struct _CERT_CHAIN_ENGINE_CONFIG {
    ULONG cbSize;
    PVOID hRestrictedRoot;
    PVOID hRestrictedTrust;
    PVOID hRestrictedOther;
    ULONG cAdditionalStore;
    PVOID *rghAdditionalStore;
    ULONG dwFlags;
    ULONG dwUrlRetrievalTimeout;
    ULONG MaximumCachedCertificates;
    ULONG CycleDetectionModulus;
    PVOID hExclusiveRoot;
    PVOID hExclusiveTrustedPeople;
    ULONG dwExclusiveFlags;
};

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
    ULONG cbSize;
    PCHAR pszUsageIdentifier;
    ULONG dwKeySpec;
    ULONG dwAcquirePrivateKeyFlags;
    ULONG cIssuer;
    struct _CRYPTOAPI_BLOB *rgIssuer;
    PLONG pfnFindCallback;
    PVOID pvFindArg;
};

typedef struct _CERT_CHAIN_PARA {
    ULONG cbSize;
    struct _CERT_USAGE_MATCH RequestedUsage;
};

typedef struct _CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwFlags;
    PVOID pvExtraPolicyPara;
};

typedef struct _CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwError;
    LONG lChainIndex;
    LONG lElementIndex;
    PVOID pvExtraPolicyStatus;
};

typedef struct _CERT_CONTEXT {
    ULONG dwCertEncodingType;
    PUCHAR pbCertEncoded;
    ULONG cbCertEncoded;
    struct _CERT_INFO *pCertInfo;
    PVOID hCertStore;
};

typedef struct _CERT_CREATE_CONTEXT_PARA {
    ULONG cbSize;
    PVOID pfnFree;
    PVOID pvFree;
    PLONG pfnSort;
    PVOID pvSort;
};

typedef struct _CERT_CRL_CONTEXT_PAIR {
    struct _CERT_CONTEXT *pCertContext;
    struct _CRL_CONTEXT *pCrlContext;
};

typedef struct _CERT_DH_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB g;
};

typedef struct _CERT_DSS_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB q;
    struct _CRYPTOAPI_BLOB g;
};

typedef struct _CERT_ECC_SIGNATURE {
    struct _CRYPTOAPI_BLOB r;
    struct _CRYPTOAPI_BLOB s;
};

typedef struct _CERT_EXTENSION {
    PCHAR pszObjId;
    LONG fCritical;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_EXTENSIONS {
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CERT_FORTEZZA_DATA_PROP {
    UCHAR SerialNumber[8];
    LONG CertIndex;
    UCHAR CertLabel[36];
};

typedef struct _CERT_GENERAL_SUBTREE {
    struct _CERT_ALT_NAME_ENTRY Base;
    ULONG dwMinimum;
    LONG fMaximum;
    ULONG dwMaximum;
};

typedef struct _CERT_HASHED_URL {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB Hash;
    PWCHAR pwszUrl;
};

typedef struct _CERT_ID {
    ULONG dwIdChoice;
    struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPTOAPI_BLOB HashId;
};

typedef struct _CERT_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _FILETIME NotBefore;
    struct _FILETIME NotAfter;
    struct _CRYPTOAPI_BLOB Subject;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    struct _CRYPT_BIT_BLOB IssuerUniqueId;
    struct _CRYPT_BIT_BLOB SubjectUniqueId;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CERT_ISSUER_SERIAL_NUMBER {
    struct _CRYPTOAPI_BLOB Issuer;
    struct _CRYPTOAPI_BLOB SerialNumber;
};

typedef struct _CERT_KEYGEN_REQUEST_INFO {
    ULONG dwVersion;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    PWCHAR pwszChallengeString;
};

typedef struct _CERT_KEY_ATTRIBUTES_INFO {
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPT_BIT_BLOB IntendedKeyUsage;
    struct _CERT_PRIVATE_KEY_VALIDITY *pPrivateKeyUsagePeriod;
};

typedef struct _CERT_KEY_CONTEXT {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
};

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO {
    ULONG cCertPolicyId;
    struct _CERT_POLICY_ID *rgCertPolicyId;
    struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
};

typedef struct _CERT_LDAP_STORE_OPENED_PARA {
    PVOID pvLdapSessionHandle;
    PWCHAR pwszLdapUrl;
};

typedef struct _CERT_LOGOTYPE_AUDIO {
    struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
    struct _CERT_LOGOTYPE_AUDIO_INFO *pLogotypeAudioInfo;
};

typedef struct _CERT_LOGOTYPE_AUDIO_INFO {
    ULONG dwFileSize;
    ULONG dwPlayTime;
    ULONG dwChannels;
    ULONG dwSampleRate;
    PWCHAR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_DATA {
    ULONG cLogotypeImage;
    struct _CERT_LOGOTYPE_IMAGE *rgLogotypeImage;
    ULONG cLogotypeAudio;
    struct _CERT_LOGOTYPE_AUDIO *rgLogotypeAudio;
};

typedef struct _CERT_LOGOTYPE_DETAILS {
    PWCHAR pwszMimeType;
    ULONG cHashedUrl;
    struct _CERT_HASHED_URL *rgHashedUrl;
};

typedef struct _CERT_LOGOTYPE_EXT_INFO {
    ULONG cCommunityLogo;
    struct _CERT_LOGOTYPE_INFO *rgCommunityLogo;
    struct _CERT_LOGOTYPE_INFO *pIssuerLogo;
    struct _CERT_LOGOTYPE_INFO *pSubjectLogo;
    ULONG cOtherLogo;
    struct _CERT_OTHER_LOGOTYPE_INFO *rgOtherLogo;
};

typedef struct _CERT_LOGOTYPE_IMAGE {
    struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
    struct _CERT_LOGOTYPE_IMAGE_INFO *pLogotypeImageInfo;
};

typedef struct _CERT_LOGOTYPE_IMAGE_INFO {
    ULONG dwLogotypeImageInfoChoice;
    ULONG dwFileSize;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwLogotypeImageResolutionChoice;
    ULONG dwNumBits;
    ULONG dwTableSize;
    PWCHAR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_INFO {
    ULONG dwLogotypeInfoChoice;
    struct _CERT_LOGOTYPE_DATA *pLogotypeDirectInfo;
    struct _CERT_LOGOTYPE_REFERENCE *pLogotypeIndirectInfo;
};

typedef struct _CERT_LOGOTYPE_REFERENCE {
    ULONG cHashedUrl;
    struct _CERT_HASHED_URL *rgHashedUrl;
};

typedef struct _CERT_NAME_CONSTRAINTS_INFO {
    ULONG cPermittedSubtree;
    struct _CERT_GENERAL_SUBTREE *rgPermittedSubtree;
    ULONG cExcludedSubtree;
    struct _CERT_GENERAL_SUBTREE *rgExcludedSubtree;
};

typedef struct _CERT_NAME_INFO {
    ULONG cRDN;
    struct _CERT_RDN *rgRDN;
};

typedef struct _CERT_NAME_VALUE {
    ULONG dwValueType;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_OR_CRL_BLOB {
    ULONG dwChoice;
    ULONG cbEncoded;
    PUCHAR pbEncoded;
};

typedef struct _CERT_OR_CRL_BUNDLE {
    ULONG cItem;
    struct _CERT_OR_CRL_BLOB *rgItem;
};

typedef struct _CERT_OTHER_LOGOTYPE_INFO {
    PCHAR pszObjId;
    struct _CERT_LOGOTYPE_INFO LogotypeInfo;
};

typedef struct _CERT_OTHER_NAME {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_PAIR {
    struct _CRYPTOAPI_BLOB Forward;
    struct _CRYPTOAPI_BLOB Reverse;
};

typedef struct _CERT_PHYSICAL_STORE_INFO {
    ULONG cbSize;
    PCHAR pszOpenStoreProvider;
    ULONG dwOpenEncodingType;
    ULONG dwOpenFlags;
    struct _CRYPTOAPI_BLOB OpenParameters;
    ULONG dwFlags;
    ULONG dwPriority;
};

typedef struct _CERT_POLICIES_INFO {
    ULONG cPolicyInfo;
    struct _CERT_POLICY_INFO *rgPolicyInfo;
};

typedef struct _CERT_POLICY95_QUALIFIER1 {
    PWCHAR pszPracticesReference;
    PCHAR pszNoticeIdentifier;
    PCHAR pszNSINoticeIdentifier;
    ULONG cCPSURLs;
    struct _CPS_URLS *rgCPSURLs;
};

typedef struct _CERT_POLICY_CONSTRAINTS_INFO {
    LONG fRequireExplicitPolicy;
    ULONG dwRequireExplicitPolicySkipCerts;
    LONG fInhibitPolicyMapping;
    ULONG dwInhibitPolicyMappingSkipCerts;
};

typedef struct _CERT_POLICY_ID {
    ULONG cCertPolicyElementId;
    PCHAR *rgpszCertPolicyElementId;
};

typedef struct _CERT_POLICY_INFO {
    PCHAR pszPolicyIdentifier;
    ULONG cPolicyQualifier;
    struct _CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

typedef struct _CERT_POLICY_MAPPING {
    PCHAR pszIssuerDomainPolicy;
    PCHAR pszSubjectDomainPolicy;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO {
    ULONG cPolicyMapping;
    struct _CERT_POLICY_MAPPING *rgPolicyMapping;
};

typedef struct _CERT_POLICY_QUALIFIER_INFO {
    PCHAR pszPolicyQualifierId;
    struct _CRYPTOAPI_BLOB Qualifier;
};

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
    PCHAR pszOrganization;
    ULONG cNoticeNumbers;
    PLONG rgNoticeNumbers;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
    struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
    PWCHAR pszDisplayText;
};

typedef struct _CERT_PRIVATE_KEY_VALIDITY {
    struct _FILETIME NotBefore;
    struct _FILETIME NotAfter;
};

typedef struct _CERT_PUBLIC_KEY_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPT_BIT_BLOB PublicKey;
};

typedef struct _CERT_QC_STATEMENT {
    PCHAR pszStatementId;
    struct _CRYPTOAPI_BLOB StatementInfo;
};

typedef struct _CERT_QC_STATEMENTS_EXT_INFO {
    ULONG cStatement;
    struct _CERT_QC_STATEMENT *rgStatement;
};

typedef struct _CERT_RDN {
    ULONG cRDNAttr;
    struct _CERT_RDN_ATTR *rgRDNAttr;
};

typedef struct _CERT_RDN_ATTR {
    PCHAR pszObjId;
    ULONG dwValueType;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
    struct HKEY__ *hKeyBase;
    PWCHAR pwszRegPath;
};

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA {
    struct HKEY__ *hKey;
    PWCHAR pwszStoreDirectory;
};

typedef struct _CERT_REQUEST_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB Subject;
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CERT_REVOCATION_CHAIN_PARA {
    ULONG cbSize;
    PVOID hChainEngine;
    PVOID hAdditionalStore;
    ULONG dwChainFlags;
    ULONG dwUrlRetrievalTimeout;
    struct _FILETIME *pftCurrentTime;
    struct _FILETIME *pftCacheResync;
    ULONG cbMaxUrlRetrievalByteCount;
};

typedef struct _CERT_REVOCATION_CRL_INFO {
    ULONG cbSize;
    struct _CRL_CONTEXT *pBaseCrlContext;
    struct _CRL_CONTEXT *pDeltaCrlContext;
    struct _CRL_ENTRY *pCrlEntry;
    LONG fDeltaCrlEntry;
};

typedef struct _CERT_REVOCATION_INFO {
    ULONG cbSize;
    ULONG dwRevocationResult;
    PCHAR pszRevocationOid;
    PVOID pvOidSpecificInfo;
    LONG fHasFreshnessTime;
    ULONG dwFreshnessTime;
    struct _CERT_REVOCATION_CRL_INFO *pCrlInfo;
};

typedef struct _CERT_REVOCATION_PARA {
    ULONG cbSize;
    struct _CERT_CONTEXT *pIssuerCert;
    ULONG cCertStore;
    PVOID *rgCertStore;
    PVOID hCrlStore;
    struct _FILETIME *pftTimeToUse;
};

typedef struct _CERT_REVOCATION_STATUS {
    ULONG cbSize;
    ULONG dwIndex;
    ULONG dwError;
    ULONG dwReason;
    LONG fHasFreshnessTime;
    ULONG dwFreshnessTime;
};

typedef struct _CERT_SELECT_CHAIN_PARA {
    PVOID hChainEngine;
    struct _FILETIME *pTime;
    PVOID hAdditionalStore;
    struct _CERT_CHAIN_PARA *pChainPara;
    ULONG dwFlags;
};

typedef struct _CERT_SELECT_CRITERIA {
    ULONG dwType;
    ULONG cPara;
    PVOID *ppPara;
};

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT {
    ULONG cbSize;
    PUCHAR pbEncodedOcspResponse;
    ULONG cbEncodedOcspResponse;
};

typedef struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA {
    ULONG cbSize;
    ULONG dwFlags;
    PULONG pcbUsedSize;
    PWCHAR pwszOcspDirectory;
    PVOID pfnUpdateCallback;
    PVOID pvUpdateCallbackArg;
};

typedef struct _CERT_SIGNED_CONTENT_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPT_BIT_BLOB Signature;
};

typedef struct _CERT_SIMPLE_CHAIN {
    ULONG cbSize;
    struct _CERT_TRUST_STATUS TrustStatus;
    ULONG cElement;
    struct _CERT_CHAIN_ELEMENT **rgpElement;
    struct _CERT_TRUST_LIST_INFO *pTrustListInfo;
    LONG fHasRevocationFreshnessTime;
    ULONG dwRevocationFreshnessTime;
};

typedef struct _CERT_STORE_PROV_FIND_INFO {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG dwFindFlags;
    ULONG dwFindType;
    PVOID pvFindPara;
};

typedef struct _CERT_STORE_PROV_INFO {
    ULONG cbSize;
    ULONG cStoreProvFunc;
    PVOID *rgpvStoreProvFunc;
    PVOID hStoreProv;
    ULONG dwStoreProvFlags;
    PVOID hStoreProvFuncAddr2;
};

typedef struct _CERT_STRONG_SIGN_PARA {
    ULONG cbSize;
    ULONG dwInfoChoice;
    PVOID pvInfo;
    struct _CERT_STRONG_SIGN_SERIALIZED_INFO *pSerializedInfo;
    PCHAR pszOID;
};

typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO {
    ULONG dwFlags;
    PWCHAR pwszCNGSignHashAlgids;
    PWCHAR pwszCNGPubKeyMinBitLengths;
};

typedef struct _CERT_SUPPORTED_ALGORITHM_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPT_BIT_BLOB IntendedKeyUsage;
    struct _CERT_POLICIES_INFO IntendedCertPolicies;
};

typedef struct _CERT_SYSTEM_STORE_INFO {
    ULONG cbSize;
};

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
    struct HKEY__ *hKeyBase;
    PVOID pvBase;
    PVOID pvSystemStore;
    PCHAR pszSystemStore;
    PWCHAR pwszSystemStore;
};

typedef struct _CERT_TEMPLATE_EXT {
    PCHAR pszObjId;
    ULONG dwMajorVersion;
    LONG fMinorVersion;
    ULONG dwMinorVersion;
};

typedef struct _CERT_TPM_SPECIFICATION_INFO {
    PWCHAR pwszFamily;
    ULONG dwLevel;
    ULONG dwRevision;
};

typedef struct _CERT_TRUST_LIST_INFO {
    ULONG cbSize;
    struct _CTL_ENTRY *pCtlEntry;
    struct _CTL_CONTEXT *pCtlContext;
};

typedef struct _CERT_TRUST_STATUS {
    ULONG dwErrorStatus;
    ULONG dwInfoStatus;
};

typedef struct _CERT_USAGE_MATCH {
    ULONG dwType;
    struct _CTL_USAGE Usage;
};

typedef struct _CERT_X942_DH_PARAMETERS {
    struct _CRYPTOAPI_BLOB p;
    struct _CRYPTOAPI_BLOB g;
    struct _CRYPTOAPI_BLOB q;
    struct _CRYPTOAPI_BLOB j;
    struct _CERT_X942_DH_VALIDATION_PARAMS *pValidationParams;
};

typedef struct _CERT_X942_DH_VALIDATION_PARAMS {
    struct _CRYPT_BIT_BLOB seed;
    ULONG pgenCounter;
};

typedef struct _CFG_CALL_TARGET_INFO {
    ULONG64 Offset;
    ULONG64 Flags;
};

typedef struct _CFG_CALL_TARGET_LIST_INFORMATION {
    ULONG NumberOfEntries;
    ULONG Reserved;
    PULONG NumberOfEntriesProcessed;
    struct _CFG_CALL_TARGET_INFO *CallTargetInfo;
    PVOID Section;
    ULONG64 FileOffset;
};

typedef struct _CHANGER_ELEMENT {
    enum _ELEMENT_TYPE ElementType;
    ULONG ElementAddress;
};

typedef struct _CHANGER_ELEMENT_LIST {
    struct _CHANGER_ELEMENT Element;
    ULONG NumberOfElements;
};

typedef struct _CHANGER_ELEMENT_STATUS {
    struct _CHANGER_ELEMENT Element;
    struct _CHANGER_ELEMENT SrcElementAddress;
    ULONG Flags;
    ULONG ExceptionCode;
    UCHAR TargetId;
    UCHAR Lun;
    USHORT Reserved;
    UCHAR PrimaryVolumeID[36];
    UCHAR AlternateVolumeID[36];
};

typedef struct _CHANGER_ELEMENT_STATUS_EX {
    struct _CHANGER_ELEMENT Element;
    struct _CHANGER_ELEMENT SrcElementAddress;
    ULONG Flags;
    ULONG ExceptionCode;
    UCHAR TargetId;
    UCHAR Lun;
    USHORT Reserved;
    UCHAR PrimaryVolumeID[36];
    UCHAR AlternateVolumeID[36];
    UCHAR VendorIdentification[8];
    UCHAR ProductIdentification[16];
    UCHAR SerialNumber[32];
};

typedef struct _CHANGER_EXCHANGE_MEDIUM {
    struct _CHANGER_ELEMENT Transport;
    struct _CHANGER_ELEMENT Source;
    struct _CHANGER_ELEMENT Destination1;
    struct _CHANGER_ELEMENT Destination2;
    UCHAR Flip1;
    UCHAR Flip2;
};

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS {
    struct _CHANGER_ELEMENT_LIST ElementList;
    UCHAR BarCodeScan;
};

typedef struct _CHANGER_MOVE_MEDIUM {
    struct _CHANGER_ELEMENT Transport;
    struct _CHANGER_ELEMENT Source;
    struct _CHANGER_ELEMENT Destination;
    UCHAR Flip;
};

typedef struct _CHANGER_PRODUCT_DATA {
    UCHAR VendorId[8];
    UCHAR ProductId[16];
    UCHAR Revision[4];
    UCHAR SerialNumber[32];
    UCHAR DeviceType;
};

typedef struct _CHANGER_READ_ELEMENT_STATUS {
    struct _CHANGER_ELEMENT_LIST ElementList;
    UCHAR VolumeTagInfo;
};

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {
    struct _CHANGER_ELEMENT StartingElement;
    ULONG ActionCode;
    UCHAR VolumeIDTemplate[40];
};

typedef struct _CHANGER_SET_ACCESS {
    struct _CHANGER_ELEMENT Element;
    ULONG Control;
};

typedef struct _CHANGER_SET_POSITION {
    struct _CHANGER_ELEMENT Transport;
    struct _CHANGER_ELEMENT Destination;
    UCHAR Flip;
};

typedef struct _CHAR_INFO {
     <unnamed-type-Char>;
    union {
        WCHAR UnicodeChar;
        CHAR AsciiChar;
    } Char;
    USHORT Attributes;
};

typedef struct _CHWIDTHINFO {
    LONG lMaxNegA;
    LONG lMaxNegC;
    LONG lMinWidthD;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    ULONG AttributeCount;
     <unnamed-type-Attribute>;
    union {
        struct _CLAIM_SECURITY_ATTRIBUTE_V1 *pAttributeV1;
    } Attribute;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {
    ULONG64 Version;
    PWCHAR Name;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
    PVOID pValue;
    ULONG ValueLength;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {
    ULONG Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        ULONG pInt64[1];
        ULONG pUint64[1];
        ULONG ppString[1];
        ULONG pFqbn[1];
        ULONG pOctetString[1];
    } Values;
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {
    PWCHAR Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        PLONG64 pInt64;
        PULONG64 pUint64;
        PWCHAR *ppString;
        struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE *pFqbn;
        struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *pOctetString;
    } Values;
};

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT {
    ULONG MediaChangeCount;
    ULONG NewState;
};

typedef struct _CLIENT_DEVICE_NOTIFICATION {
    enum _CannonicalDeviceType deviceType;
    enum _DEVICE_NOTIFICATION_ID messageId;
     <unnamed-type-data>;
    union {
        struct _PnpNotification pnpNotification;
        struct _InputMessageNotification inputMessage;
        struct _MouseProcessorInterceptionCallout interceptMessage;
        struct _RawMouseInputMessage rawMouseInputMsg;
        struct _CursorPositionNotification cursorPosNotification;
        struct _PnpNotificationBulk pnpNotificationBulk;
    } data;
};

typedef struct _CLIENT_ID {
    PVOID UniqueProcess;
    PVOID UniqueThread;
};

typedef struct _CLIENT_ID64 {
    ULONG64 UniqueProcess;
    ULONG64 UniqueThread;
};

typedef struct _CLUSTER_RANGE {
    union _LARGE_INTEGER StartingCluster;
    union _LARGE_INTEGER ClusterCount;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO {
    ULONG dwCmcDataReference;
    ULONG cCertReference;
    PULONG rgdwCertReference;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CMC_ADD_EXTENSIONS_INFO {
    ULONG dwCmcDataReference;
    ULONG cCertReference;
    PULONG rgdwCertReference;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CMC_DATA_INFO {
    ULONG cTaggedAttribute;
    struct _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
    ULONG cTaggedRequest;
    struct _CMC_TAGGED_REQUEST *rgTaggedRequest;
    ULONG cTaggedContentInfo;
    struct _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
    ULONG cTaggedOtherMsg;
    struct _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

typedef struct _CMC_PEND_INFO {
    struct _CRYPTOAPI_BLOB PendToken;
    struct _FILETIME PendTime;
};

typedef struct _CMC_RESPONSE_INFO {
    ULONG cTaggedAttribute;
    struct _CMC_TAGGED_ATTRIBUTE *rgTaggedAttribute;
    ULONG cTaggedContentInfo;
    struct _CMC_TAGGED_CONTENT_INFO *rgTaggedContentInfo;
    ULONG cTaggedOtherMsg;
    struct _CMC_TAGGED_OTHER_MSG *rgTaggedOtherMsg;
};

typedef struct _CMC_STATUS_INFO {
    ULONG dwStatus;
    ULONG cBodyList;
    PULONG rgdwBodyList;
    PWCHAR pwszStatusString;
    ULONG dwOtherInfoChoice;
    ULONG dwFailInfo;
    struct _CMC_PEND_INFO *pPendInfo;
};

typedef struct _CMC_TAGGED_ATTRIBUTE {
    ULONG dwBodyPartID;
    struct _CRYPT_ATTRIBUTE Attribute;
};

typedef struct _CMC_TAGGED_CERT_REQUEST {
    ULONG dwBodyPartID;
    struct _CRYPTOAPI_BLOB SignedCertRequest;
};

typedef struct _CMC_TAGGED_CONTENT_INFO {
    ULONG dwBodyPartID;
    struct _CRYPTOAPI_BLOB EncodedContentInfo;
};

typedef struct _CMC_TAGGED_OTHER_MSG {
    ULONG dwBodyPartID;
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CMC_TAGGED_REQUEST {
    ULONG dwTaggedRequestChoice;
    struct _CMC_TAGGED_CERT_REQUEST *pTaggedCertRequest;
};

typedef struct _CMINVOKECOMMANDINFO {
    ULONG cbSize;
    ULONG fMask;
    struct HWND__ *hwnd;
    PCHAR lpVerb;
    PCHAR lpParameters;
    PCHAR lpDirectory;
    LONG nShow;
    ULONG dwHotKey;
    PVOID hIcon;
};

typedef struct _CMINVOKECOMMANDINFOEX {
    ULONG cbSize;
    ULONG fMask;
    struct HWND__ *hwnd;
    PCHAR lpVerb;
    PCHAR lpParameters;
    PCHAR lpDirectory;
    LONG nShow;
    ULONG dwHotKey;
    PVOID hIcon;
    PCHAR lpTitle;
    PWCHAR lpVerbW;
    PWCHAR lpParametersW;
    PWCHAR lpDirectoryW;
    PWCHAR lpTitleW;
    struct tagPOINT ptInvoke;
};

typedef struct _CMSG_CMS_RECIPIENT_INFO {
    ULONG dwRecipientChoice;
    struct _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
    struct _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
    struct _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
};

typedef struct _CMSG_CMS_SIGNER_INFO {
    ULONG dwVersion;
    struct _CERT_ID SignerId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedHash;
    struct _CRYPT_ATTRIBUTES AuthAttrs;
    struct _CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID *pfnAlloc;
    PVOID pfnFree;
    ULONG64 hNCryptKey;
    PUCHAR pbContentEncryptKey;
    ULONG cbContentEncryptKey;
    PVOID hCNGContentEncryptKey;
    PUCHAR pbCNGContentEncryptKeyObject;
};

typedef struct _CMSG_CONTENT_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG cRecipients;
    struct _CMSG_RECIPIENT_ENCODE_INFO *rgCmsRecipients;
    PVOID *pfnAlloc;
    PVOID pfnFree;
    ULONG dwEncryptFlags;
    ULONG64 hContentEncryptKey;
    PVOID hCNGContentEncryptKey;
    ULONG dwFlags;
    LONG fCNG;
    PUCHAR pbCNGContentEncryptKeyObject;
    PUCHAR pbContentEncryptKey;
    ULONG cbContentEncryptKey;
};

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
    ULONG cbSize;
    ULONG dwSignerIndex;
    struct _CRYPTOAPI_BLOB blob;
};

typedef struct _CMSG_CTRL_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    ULONG dwRecipientIndex;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
    ULONG cbSize;
    ULONG dwSignerIndex;
    ULONG dwUnauthAttrIndex;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CMSG_KEY_AGREE_RECIPIENT_INFO *pKeyAgree;
    ULONG dwRecipientIndex;
    ULONG dwRecipientEncryptedKeyIndex;
    struct _CRYPT_BIT_BLOB OriginatorPublicKey;
};

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CMSG_KEY_TRANS_RECIPIENT_INFO *pKeyTrans;
    ULONG dwRecipientIndex;
};

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CMSG_MAIL_LIST_RECIPIENT_INFO *pMailList;
    ULONG dwRecipientIndex;
    ULONG dwKeyChoice;
    ULONG64 hKeyEncryptionKey;
    PVOID pvKeyEncryptionKey;
};

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
    ULONG cbSize;
    ULONG64 hCryptProv;
    ULONG dwSignerIndex;
    ULONG dwSignerType;
    PVOID pvSigner;
};

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
};

typedef struct _CMSG_ENVELOPED_ENCODE_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG cRecipients;
    struct _CERT_INFO **rgpRecipients;
};

typedef struct _CMSG_HASHED_ENCODE_INFO {
    ULONG cbSize;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
};

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    ULONG dwOriginatorChoice;
    struct _CERT_ID OriginatorCertId;
    struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
    ULONG cKeyAgreeKeyEncryptInfo;
    struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO **rgpKeyAgreeKeyEncryptInfo;
    ULONG dwFlags;
};

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
    ULONG cbSize;
    struct _CRYPTOAPI_BLOB EncryptedKey;
};

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
    PVOID pvKeyWrapAuxInfo;
    ULONG64 hCryptProv;
    ULONG dwKeySpec;
    ULONG dwKeyChoice;
    struct _CRYPT_ALGORITHM_IDENTIFIER *pEphemeralAlgorithm;
    struct _CERT_ID *pSenderId;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    ULONG cRecipientEncryptedKeys;
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO **rgpRecipientEncryptedKeys;
};

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
    ULONG dwVersion;
    ULONG dwOriginatorChoice;
    struct _CERT_ID OriginatorCertId;
    struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
    struct _CRYPTOAPI_BLOB UserKeyingMaterial;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    ULONG cRecipientEncryptedKeys;
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO **rgpRecipientEncryptedKeys;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    ULONG dwFlags;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    ULONG64 hCryptProv;
    struct _CRYPT_BIT_BLOB RecipientPublicKey;
    struct _CERT_ID RecipientId;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
    ULONG dwVersion;
    struct _CERT_ID RecipientId;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
    ULONG cbSize;
    ULONG dwRecipientIndex;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    ULONG dwFlags;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    PVOID pvKeyEncryptionAuxInfo;
    ULONG64 hCryptProv;
    ULONG dwKeyChoice;
    ULONG64 hKeyEncryptionKey;
    PVOID pvKeyEncryptionKey;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB KeyId;
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_RC2_AUX_INFO {
    ULONG cbSize;
    ULONG dwBitLen;
};

typedef struct _CMSG_RC4_AUX_INFO {
    ULONG cbSize;
    ULONG dwBitLen;
};

typedef struct _CMSG_RECIPIENT_ENCODE_INFO {
    ULONG dwRecipientChoice;
    struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *pKeyTrans;
    struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *pKeyAgree;
    struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *pMailList;
};

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
    ULONG cbSize;
    struct _CRYPT_BIT_BLOB RecipientPublicKey;
    struct _CERT_ID RecipientId;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
    struct _CERT_ID RecipientId;
    struct _CRYPTOAPI_BLOB EncryptedKey;
    struct _FILETIME Date;
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE *pOtherAttr;
};

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
    ULONG cbSize;
    struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
    struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

typedef struct _CMSG_SIGNED_ENCODE_INFO {
    ULONG cbSize;
    ULONG cSigners;
    struct _CMSG_SIGNER_ENCODE_INFO *rgSigners;
    ULONG cCertEncoded;
    struct _CRYPTOAPI_BLOB *rgCertEncoded;
    ULONG cCrlEncoded;
    struct _CRYPTOAPI_BLOB *rgCrlEncoded;
};

typedef struct _CMSG_SIGNER_ENCODE_INFO {
    ULONG cbSize;
    struct _CERT_INFO *pCertInfo;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    ULONG cAuthAttr;
    struct _CRYPT_ATTRIBUTE *rgAuthAttr;
    ULONG cUnauthAttr;
    struct _CRYPT_ATTRIBUTE *rgUnauthAttr;
};

typedef struct _CMSG_SIGNER_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedHash;
    struct _CRYPT_ATTRIBUTES AuthAttrs;
    struct _CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct _CMSG_STREAM_INFO {
    ULONG cbContent;
    PLONG pfnStreamOutput;
    PVOID pvArg;
};

typedef struct _CMS_DH_KEY_INFO {
    ULONG dwVersion;
    ULONG Algid;
    PCHAR pszContentEncObjId;
    struct _CRYPTOAPI_BLOB PubInfo;
    PVOID pReserved;
};

typedef struct _CMS_KEY_INFO {
    ULONG dwVersion;
    ULONG Algid;
    PUCHAR pbOID;
    ULONG cbOID;
};

typedef struct _CM_COMPONENT_INFORMATION {
    struct _DEVICE_FLAGS Flags;
    ULONG Version;
    ULONG Key;
    ULONG64 AffinityMask;
};

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA {
    ULONG BytesPerSector;
    ULONG NumberOfCylinders;
    ULONG SectorsPerTrack;
    ULONG NumberOfHeads;
};

typedef struct _CM_EISA_FUNCTION_INFORMATION {
    ULONG CompressedId;
    UCHAR IdSlotFlags1;
    UCHAR IdSlotFlags2;
    UCHAR MinorRevision;
    UCHAR MajorRevision;
    UCHAR Selections[26];
    UCHAR FunctionFlags;
    UCHAR TypeString[80];
    struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
    struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
    struct _EISA_DMA_CONFIGURATION EisaDma[4];
    struct _EISA_PORT_CONFIGURATION EisaPort[20];
    UCHAR InitializationData[60];
};

typedef struct _CM_EISA_SLOT_INFORMATION {
    UCHAR ReturnCode;
    UCHAR ReturnFlags;
    UCHAR MajorRevision;
    UCHAR MinorRevision;
    USHORT Checksum;
    UCHAR NumberFunctions;
    UCHAR FunctionInformation;
    ULONG CompressedId;
};

typedef struct _CM_FLOPPY_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    CHAR Size[8];
    ULONG MaxDensity;
    ULONG MountDensity;
    UCHAR StepRateHeadUnloadTime;
    UCHAR HeadLoadTime;
    UCHAR MotorOffTime;
    UCHAR SectorLengthCode;
    UCHAR SectorPerTrack;
    UCHAR ReadWriteGapLength;
    UCHAR DataTransferLength;
    UCHAR FormatGapLength;
    UCHAR FormatFillCharacter;
    UCHAR HeadSettleTime;
    UCHAR MotorSettleTime;
    UCHAR MaximumTrackValue;
    UCHAR DataTransferRate;
};

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR {
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

typedef struct _CM_INT13_DRIVE_PARAMETER {
    USHORT DriveSelect;
    ULONG MaxCylinders;
    USHORT SectorsPerTrack;
    USHORT MaxHeads;
    USHORT NumberDrives;
};

typedef struct _CM_KEYBOARD_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    UCHAR Type;
    UCHAR Subtype;
    USHORT KeyboardFlags;
};

typedef struct _CM_MCA_POS_DATA {
    USHORT AdapterId;
    UCHAR PosData1;
    UCHAR PosData2;
    UCHAR PosData3;
    UCHAR PosData4;
};

typedef struct _CM_MONITOR_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    USHORT HorizontalScreenSize;
    USHORT VerticalScreenSize;
    USHORT HorizontalResolution;
    USHORT VerticalResolution;
    USHORT HorizontalDisplayTimeLow;
    USHORT HorizontalDisplayTime;
    USHORT HorizontalDisplayTimeHigh;
    USHORT HorizontalBackPorchLow;
    USHORT HorizontalBackPorch;
    USHORT HorizontalBackPorchHigh;
    USHORT HorizontalFrontPorchLow;
    USHORT HorizontalFrontPorch;
    USHORT HorizontalFrontPorchHigh;
    USHORT HorizontalSyncLow;
    USHORT HorizontalSync;
    USHORT HorizontalSyncHigh;
    USHORT VerticalBackPorchLow;
    USHORT VerticalBackPorch;
    USHORT VerticalBackPorchHigh;
    USHORT VerticalFrontPorchLow;
    USHORT VerticalFrontPorch;
    USHORT VerticalFrontPorchHigh;
    USHORT VerticalSyncLow;
    USHORT VerticalSync;
    USHORT VerticalSyncHigh;
};

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {
    UCHAR Type;
    UCHAR ShareDisposition;
    USHORT Flags;
     <unnamed-type-u>;
    union {
         <unnamed-type-Generic>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Generic;
         <unnamed-type-Port>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Port;
         <unnamed-type-Interrupt>;
        struct {
            ULONG Level;
            ULONG Vector;
            ULONG64 Affinity;
        } Interrupt;
         <unnamed-type-MessageInterrupt>;
        struct {
            struct {
                USHORT Reserved;
                USHORT MessageCount;
                ULONG Vector;
                ULONG64 Affinity;
            } Raw;
            struct {
                ULONG Level;
                ULONG Vector;
                ULONG64 Affinity;
            } Translated;
        } MessageInterrupt;
         <unnamed-type-Memory>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length;
        } Memory;
         <unnamed-type-Dma>;
        struct {
            ULONG Channel;
            ULONG Port;
            ULONG Reserved1;
        } Dma;
         <unnamed-type-DmaV3>;
        struct {
            ULONG Channel;
            ULONG RequestLine;
            UCHAR TransferWidth;
            UCHAR Reserved1;
            UCHAR Reserved2;
            UCHAR Reserved3;
        } DmaV3;
         <unnamed-type-DevicePrivate>;
        struct {
            ULONG Data[3];
        } DevicePrivate;
         <unnamed-type-BusNumber>;
        struct {
            ULONG Start;
            ULONG Length;
            ULONG Reserved;
        } BusNumber;
         <unnamed-type-DeviceSpecificData>;
        struct {
            ULONG DataSize;
            ULONG Reserved1;
            ULONG Reserved2;
        } DeviceSpecificData;
         <unnamed-type-Memory40>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length40;
        } Memory40;
         <unnamed-type-Memory48>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length48;
        } Memory48;
         <unnamed-type-Memory64>;
        struct {
            union _LARGE_INTEGER Start;
            ULONG Length64;
        } Memory64;
         <unnamed-type-Connection>;
        struct {
            UCHAR Class;
            UCHAR Type;
            UCHAR Reserved1;
            UCHAR Reserved2;
            ULONG IdLowPart;
            ULONG IdHighPart;
        } Connection;
    } u;
};

typedef struct _CM_PARTIAL_RESOURCE_LIST {
    USHORT Version;
    USHORT Revision;
    ULONG Count;
    struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

typedef struct _CM_PCCARD_DEVICE_DATA {
    UCHAR Flags;
    UCHAR ErrorCode;
    USHORT Reserved;
    ULONG BusData;
    ULONG DeviceId;
    ULONG LegacyBaseAddress;
    UCHAR IRQMap[16];
};

typedef struct _CM_PNP_BIOS_DEVICE_NODE {
    USHORT Size;
    UCHAR Node;
    ULONG ProductId;
    UCHAR DeviceType[3];
    USHORT DeviceAttributes;
};

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK {
    UCHAR Signature[4];
    UCHAR Revision;
    UCHAR Length;
    USHORT ControlField;
    UCHAR Checksum;
    ULONG EventFlagAddress;
    USHORT RealModeEntryOffset;
    USHORT RealModeEntrySegment;
    USHORT ProtectedModeEntryOffset;
    ULONG ProtectedModeCodeBaseAddress;
    ULONG OemDeviceId;
    USHORT RealModeDataBaseAddress;
    ULONG ProtectedModeDataBaseAddress;
};

typedef struct _CM_RESOURCE_LIST {
    ULONG Count;
    struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

typedef struct _CM_ROM_BLOCK {
    ULONG Address;
    ULONG Size;
};

typedef struct _CM_SCSI_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    UCHAR HostIdentifier;
};

typedef struct _CM_SERIAL_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    ULONG BaudClock;
};

typedef struct _CM_SONIC_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    USHORT DataConfigurationRegister;
    UCHAR EthernetAddress[8];
};

typedef struct _CM_VIDEO_DEVICE_DATA {
    USHORT Version;
    USHORT Revision;
    ULONG VideoClock;
};

typedef struct _COAUTHIDENTITY {
    PWCHAR User;
    ULONG UserLength;
    PWCHAR Domain;
    ULONG DomainLength;
    PWCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _COAUTHINFO {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PWCHAR pwszServerPrincName;
    ULONG dwAuthnLevel;
    ULONG dwImpersonationLevel;
    struct _COAUTHIDENTITY *pAuthIdentityData;
    ULONG dwCapabilities;
};

typedef struct _COLORMAP {
    ULONG from;
    ULONG to;
};

typedef struct _COMDLG_FILTERSPEC {
    PWCHAR pszName;
    PWCHAR pszSpec;
};

typedef struct _COMMCONFIG {
    ULONG dwSize;
    USHORT wVersion;
    USHORT wReserved;
    struct _DCB dcb;
    ULONG dwProviderSubType;
    ULONG dwProviderOffset;
    ULONG dwProviderSize;
    WCHAR wcProviderData[1];
};

typedef struct _COMMPROP {
    USHORT wPacketLength;
    USHORT wPacketVersion;
    ULONG dwServiceMask;
    ULONG dwReserved1;
    ULONG dwMaxTxQueue;
    ULONG dwMaxRxQueue;
    ULONG dwMaxBaud;
    ULONG dwProvSubType;
    ULONG dwProvCapabilities;
    ULONG dwSettableParams;
    ULONG dwSettableBaud;
    USHORT wSettableData;
    USHORT wSettableStopParity;
    ULONG dwCurrentTxQueue;
    ULONG dwCurrentRxQueue;
    ULONG dwProvSpec1;
    ULONG dwProvSpec2;
    WCHAR wcProvChar[1];
};

typedef struct _COMMTIMEOUTS {
    ULONG ReadIntervalTimeout;
    ULONG ReadTotalTimeoutMultiplier;
    ULONG ReadTotalTimeoutConstant;
    ULONG WriteTotalTimeoutMultiplier;
    ULONG WriteTotalTimeoutConstant;
};

typedef struct _COMM_FAULT_OFFSETS {
    SHORT CommOffset;
    SHORT FaultOffset;
};

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {
    struct _GUID Id;
    enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
};

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    USHORT CompoundAceType;
    USHORT Reserved;
    ULONG SidStart;
};

typedef struct _COMPRESSED_DATA_INFO {
    USHORT CompressionFormatAndEngine;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved;
    USHORT NumberOfChunks;
    ULONG CompressedChunkSizes[1];
};

typedef struct _COMSTAT {
    ULONG fCtsHold : 1;
    ULONG fDsrHold : 1;
    ULONG fRlsdHold : 1;
    ULONG fXoffHold : 1;
    ULONG fXoffSent : 1;
    ULONG fEof : 1;
    ULONG fTxim : 1;
    ULONG fReserved : 25;
    ULONG cbInQue;
    ULONG cbOutQue;
};

typedef struct _CONNECTCONFIG {
    enum _ASYNCCONNECTCLASS Type;
    ULONG fEnableBreakDisconnect : 1;
};

typedef struct _CONNECTDLGSTRUCTA {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    struct _NETRESOURCEA *lpConnRes;
    ULONG dwFlags;
    ULONG dwDevNum;
};

typedef struct _CONNECTDLGSTRUCTW {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    struct _NETRESOURCEW *lpConnRes;
    ULONG dwFlags;
    ULONG dwDevNum;
};

typedef struct _CONSOLE_CURSOR_INFO {
    ULONG dwSize;
    LONG bVisible;
};

typedef struct _CONSOLE_FONT_INFO {
    ULONG nFont;
    struct _COORD dwFontSize;
};

typedef struct _CONSOLE_FONT_INFOEX {
    ULONG cbSize;
    ULONG nFont;
    struct _COORD dwFontSize;
    ULONG FontFamily;
    ULONG FontWeight;
    WCHAR FaceName[32];
};

typedef struct _CONSOLE_HISTORY_INFO {
    ULONG cbSize;
    ULONG HistoryBufferSize;
    ULONG NumberOfHistoryBuffers;
    ULONG dwFlags;
};

typedef struct _CONSOLE_READCONSOLE_CONTROL {
    ULONG nLength;
    ULONG nInitialChars;
    ULONG dwCtrlWakeupMask;
    ULONG dwControlKeyState;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFO {
    struct _COORD dwSize;
    struct _COORD dwCursorPosition;
    USHORT wAttributes;
    struct _SMALL_RECT srWindow;
    struct _COORD dwMaximumWindowSize;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX {
    ULONG cbSize;
    struct _COORD dwSize;
    struct _COORD dwCursorPosition;
    USHORT wAttributes;
    struct _SMALL_RECT srWindow;
    struct _COORD dwMaximumWindowSize;
    USHORT wPopupAttributes;
    LONG bFullscreenSupported;
    ULONG ColorTable[16];
};

typedef struct _CONSOLE_SELECTION_INFO {
    ULONG dwFlags;
    struct _COORD dwSelectionAnchor;
    struct _SMALL_RECT srSelection;
};

typedef struct _CONTAINER_ROOT_INFO_INPUT {
    ULONG Flags;
};

typedef struct _CONTAINER_ROOT_INFO_OUTPUT {
    USHORT ContainerRootIdLength;
    UCHAR ContainerRootId[1];
};

typedef struct _CONTAINER_VOLUME_STATE {
    ULONG Flags;
};

typedef struct _CONTEXT {
    ULONG64 P1Home;
    ULONG64 P2Home;
    ULONG64 P3Home;
    ULONG64 P4Home;
    ULONG64 P5Home;
    ULONG64 P6Home;
    ULONG ContextFlags;
    ULONG MxCsr;
    USHORT SegCs;
    USHORT SegDs;
    USHORT SegEs;
    USHORT SegFs;
    USHORT SegGs;
    USHORT SegSs;
    ULONG EFlags;
    ULONG64 Dr0;
    ULONG64 Dr1;
    ULONG64 Dr2;
    ULONG64 Dr3;
    ULONG64 Dr6;
    ULONG64 Dr7;
    ULONG64 Rax;
    ULONG64 Rcx;
    ULONG64 Rdx;
    ULONG64 Rbx;
    ULONG64 Rsp;
    ULONG64 Rbp;
    ULONG64 Rsi;
    ULONG64 Rdi;
    ULONG64 R8;
    ULONG64 R9;
    ULONG64 R10;
    ULONG64 R11;
    ULONG64 R12;
    ULONG64 R13;
    ULONG64 R14;
    ULONG64 R15;
    ULONG64 Rip;
    struct _XSAVE_FORMAT FltSave;
    struct _M128A Header[2];
    struct _M128A Legacy[8];
    struct _M128A Xmm0;
    struct _M128A Xmm1;
    struct _M128A Xmm2;
    struct _M128A Xmm3;
    struct _M128A Xmm4;
    struct _M128A Xmm5;
    struct _M128A Xmm6;
    struct _M128A Xmm7;
    struct _M128A Xmm8;
    struct _M128A Xmm9;
    struct _M128A Xmm10;
    struct _M128A Xmm11;
    struct _M128A Xmm12;
    struct _M128A Xmm13;
    struct _M128A Xmm14;
    struct _M128A Xmm15;
    struct _M128A VectorRegister[26];
    ULONG64 VectorControl;
    ULONG64 DebugControl;
    ULONG64 LastBranchToRip;
    ULONG64 LastBranchFromRip;
    ULONG64 LastExceptionToRip;
    ULONG64 LastExceptionFromRip;
};

typedef struct _CONTEXT_CHUNK {
    LONG Offset;
    ULONG Length;
};

typedef struct _CONTEXT_EX {
    struct _CONTEXT_CHUNK All;
    struct _CONTEXT_CHUNK Legacy;
    struct _CONTEXT_CHUNK XState;
};

typedef struct _COORD {
    SHORT X;
    SHORT Y;
};

typedef struct _CORE_PRINTER_DRIVERA {
    struct _GUID CoreDriverGUID;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    CHAR szPackageID[260];
};

typedef struct _CORE_PRINTER_DRIVERW {
    struct _GUID CoreDriverGUID;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    WCHAR szPackageID[260];
};

typedef struct _COSERVERINFO {
    ULONG dwReserved1;
    PWCHAR pwszName;
    struct _COAUTHINFO *pAuthInfo;
    ULONG dwReserved2;
};

typedef struct _COUNTED_REASON_CONTEXT {
    ULONG Version;
    ULONG Flags;
    struct _UNICODE_STRING ResourceFileName;
    USHORT ResourceReasonId;
    ULONG StringCount;
    struct _UNICODE_STRING *ReasonStrings;
    struct _UNICODE_STRING SimpleString;
};

typedef struct _COUNTER_READING {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Index;
    ULONG64 Start;
    ULONG64 Total;
};

typedef struct _COVERAGE_MODULES {
    ULONG ListAndReset;
    ULONG NumberOfModules;
    struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
    struct _COVERAGE_MODULE_INFO Modules[1];
};

typedef struct _COVERAGE_MODULE_INFO {
    ULONG ModuleInfoSize;
    ULONG IsBinaryLoaded;
    struct _UNICODE_STRING ModulePathName;
    ULONG CoverageSectionSize;
    UCHAR CoverageSection[1];
};

typedef struct _COVERAGE_MODULE_REQUEST {
    enum _COVERAGE_REQUEST_CODES RequestType;
     <unnamed-type-SearchInfo>;
    union {
        UCHAR MD5Hash[16];
        struct _UNICODE_STRING ModuleName;
    } SearchInfo;
};

typedef struct _COVERAGE_SECTION_HEADER {
    ULONG Signature;
    ULONG CoverageType;
    UCHAR MD5Hash[16];
    ULONG CoverageSectionSize;
    ULONG CoverageVectorSize;
    ULONG CoverageVectorOffset;
    ULONG ExtraDataOffset;
};

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY {
    struct _LIST_ENTRY NextEntry;
    struct _UNICODE_STRING BaseDllName;
    struct _UNICODE_STRING FullDllName;
    ULONG CoverageSectionSize;
    PVOID CoverageSection;
};

typedef struct _CPS_URLS {
    PWCHAR pszURL;
    struct _CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
    struct _CRYPTOAPI_BLOB *pDigest;
};

typedef struct _CPTABLEINFO {
    USHORT CodePage;
    USHORT MaximumCharacterSize;
    USHORT DefaultChar;
    USHORT UniDefaultChar;
    USHORT TransDefaultChar;
    USHORT TransUniDefaultChar;
    USHORT DBCSCodePage;
    UCHAR LeadByte[12];
    PWCHAR MultiByteTable;
    PVOID WideCharTable;
    PWCHAR DBCSRanges;
    PWCHAR DBCSOffsets;
};

typedef struct _CREATEFILE2_EXTENDED_PARAMETERS {
    ULONG dwSize;
    ULONG dwFileAttributes;
    ULONG dwFileFlags;
    ULONG dwSecurityQosFlags;
    struct _SECURITY_ATTRIBUTES *lpSecurityAttributes;
    PVOID hTemplateFile;
};

typedef struct _CREATE_DISK {
    enum _PARTITION_STYLE PartitionStyle;
    struct _CREATE_DISK_MBR Mbr;
    struct _CREATE_DISK_GPT Gpt;
};

typedef struct _CREATE_DISK_GPT {
    struct _GUID DiskId;
    ULONG MaxPartitionCount;
};

typedef struct _CREATE_DISK_MBR {
    ULONG Signature;
};

typedef struct _CREATE_PROCESS_DEBUG_INFO {
    PVOID hFile;
    PVOID hProcess;
    PVOID hThread;
    PVOID lpBaseOfImage;
    ULONG dwDebugInfoFileOffset;
    ULONG nDebugInfoSize;
    PVOID lpThreadLocalBase;
    PULONG lpStartAddress;
    PVOID lpImageName;
    USHORT fUnicode;
};

typedef struct _CREATE_THREAD_DEBUG_INFO {
    PVOID hThread;
    PVOID lpThreadLocalBase;
    PULONG lpStartAddress;
};

typedef struct _CREDENTIALS_INFO {
    WCHAR UserName[256];
    WCHAR Password[256];
    WCHAR Domain[256];
    ULONG AuthFlags;
};

typedef struct _CRITICAL_PROCESS_EXCEPTION_DATA {
    struct _GUID ReportId;
    struct _UNICODE_STRING ModuleName;
    ULONG ModuleTimestamp;
    ULONG ModuleSize;
    ULONG64 Offset;
};

typedef struct _CRL_CONTEXT {
    ULONG dwCertEncodingType;
    PUCHAR pbCrlEncoded;
    ULONG cbCrlEncoded;
    struct _CRL_INFO *pCrlInfo;
    PVOID hCertStore;
};

typedef struct _CRL_DIST_POINT {
    struct _CRL_DIST_POINT_NAME DistPointName;
    struct _CRYPT_BIT_BLOB ReasonFlags;
    struct _CERT_ALT_NAME_INFO CRLIssuer;
};

typedef struct _CRL_DIST_POINTS_INFO {
    ULONG cDistPoint;
    struct _CRL_DIST_POINT *rgDistPoint;
};

typedef struct _CRL_DIST_POINT_NAME {
    ULONG dwDistPointNameChoice;
    struct _CERT_ALT_NAME_INFO FullName;
};

typedef struct _CRL_ENTRY {
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _FILETIME RevocationDate;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA {
    struct _CERT_CONTEXT *pSubjectCert;
    struct _CERT_CONTEXT *pIssuerCert;
};

typedef struct _CRL_INFO {
    ULONG dwVersion;
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPTOAPI_BLOB Issuer;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    ULONG cCRLEntry;
    struct _CRL_ENTRY *rgCRLEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRL_ISSUING_DIST_POINT {
    struct _CRL_DIST_POINT_NAME DistPointName;
    LONG fOnlyContainsUserCerts;
    LONG fOnlyContainsCACerts;
    struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
    LONG fIndirectCRL;
};

typedef struct _CRL_REVOCATION_INFO {
    struct _CRL_ENTRY *pCrlEntry;
    struct _CRL_CONTEXT *pCrlContext;
    struct _CERT_CHAIN_CONTEXT *pCrlIssuerChain;
};

typedef struct _CROSS_CERT_DIST_POINTS_INFO {
    ULONG dwSyncDeltaTime;
    ULONG cDistPoint;
    struct _CERT_ALT_NAME_INFO *rgDistPoint;
};

typedef struct _CRT_DOUBLE {
    DOUBLE x;
};

typedef struct _CRT_FLOAT {
    FLOAT f;
};

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO {
    ULONG cbSize;
    ULONG dwExemptSeconds;
    struct _FILETIME ExpireTime;
};

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {
    ULONG cbSize;
    ULONG dwObjectType;
    ULONG dwError;
    ULONG dwReserved;
    struct _FILETIME ThisUpdateTime;
    struct _FILETIME NextUpdateTime;
    struct _FILETIME PublishTime;
};

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {
    ULONG cbSize;
    USHORT wResponseType;
    USHORT wResponseFlags;
    struct _FILETIME LastModifiedTime;
    ULONG dwMaxAge;
    PWCHAR pwszETag;
    ULONG dwProxyId;
};

typedef struct _CRYPTOAPI_BLOB {
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _CRYPTPROTECT_PROMPTSTRUCT {
    ULONG cbSize;
    ULONG dwPromptFlags;
    struct HWND__ *hwndApp;
    PWCHAR szPrompt;
};

typedef struct _CRYPT_3DES_KEY_STATE {
    UCHAR Key[24];
    UCHAR IV[8];
    UCHAR Feedback[8];
};

typedef struct _CRYPT_AES_128_KEY_STATE {
    UCHAR Key[16];
    UCHAR IV[16];
    UCHAR EncryptionState[11][16];
    UCHAR DecryptionState[11][16];
    UCHAR Feedback[16];
};

typedef struct _CRYPT_AES_256_KEY_STATE {
    UCHAR Key[32];
    UCHAR IV[16];
    UCHAR EncryptionState[15][16];
    UCHAR DecryptionState[15][16];
    UCHAR Feedback[16];
};

typedef struct _CRYPT_ALGORITHM_IDENTIFIER {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Parameters;
};

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
    PVOID pfnCompletion;
    PVOID pvCompletion;
};

typedef struct _CRYPT_ATTRIBUTE {
    PCHAR pszObjId;
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_ATTRIBUTES {
    ULONG cAttr;
    struct _CRYPT_ATTRIBUTE *rgAttr;
};

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _CRYPT_BIT_BLOB {
    ULONG cbData;
    PUCHAR pbData;
    ULONG cUnusedBits;
};

typedef struct _CRYPT_BLOB_ARRAY {
    ULONG cBlob;
    struct _CRYPTOAPI_BLOB *rgBlob;
};

typedef struct _CRYPT_CONTENT_INFO {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Content;
};

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
    PCHAR pszObjId;
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_CONTEXTS {
    ULONG cContexts;
    PWCHAR *rgpszContexts;
};

typedef struct _CRYPT_CONTEXT_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTIONS {
    ULONG cFunctions;
    PWCHAR *rgpszFunctions;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS {
    ULONG cProviders;
    PWCHAR *rgpszProviders;
};

typedef struct _CRYPT_CREDENTIALS {
    ULONG cbSize;
    PCHAR pszCredentialsOid;
    PVOID pvCredentials;
};

typedef struct _CRYPT_CSP_PROVIDER {
    ULONG dwKeySpec;
    PWCHAR pwszProviderName;
    struct _CRYPT_BIT_BLOB Signature;
};

typedef struct _CRYPT_DECODE_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG cCertStore;
    PVOID *rghCertStore;
};

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
    ULONG cOID;
    PCHAR *rgpszOID;
};

typedef struct _CRYPT_DES_KEY_STATE {
    UCHAR Key[8];
    UCHAR IV[8];
    UCHAR Feedback[8];
};

typedef struct _CRYPT_ECC_CMS_SHARED_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPTOAPI_BLOB EntityUInfo;
    UCHAR rgbSuppPubInfo[4];
};

typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO {
    ULONG dwVersion;
    struct _CRYPTOAPI_BLOB PrivateKey;
    PCHAR szCurveOid;
    struct _CRYPT_BIT_BLOB PublicKey;
};

typedef struct _CRYPT_ENCODE_PARA {
    ULONG cbSize;
    PVOID *pfnAlloc;
    PVOID pfnFree;
};

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
    struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
};

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PVOID pvEncryptionAuxInfo;
    ULONG dwFlags;
    ULONG dwInnerContentType;
};

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
    PWCHAR pwszName;
    PWCHAR pwszValue;
};

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
    ULONG cbSize;
    LONG iDeltaCrlIndicator;
    struct _FILETIME *pftCacheResync;
    struct _FILETIME *pLastSyncTime;
    struct _FILETIME *pMaxAgeTime;
    struct _CERT_REVOCATION_CHAIN_PARA *pChainPara;
    struct _CRYPTOAPI_BLOB *pDeltaCrlIndicator;
};

typedef struct _CRYPT_HASH_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB Hash;
};

typedef struct _CRYPT_HASH_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
};

typedef struct _CRYPT_IMAGE_REF {
    PWCHAR pszImage;
    ULONG dwFlags;
};

typedef struct _CRYPT_IMAGE_REG {
    PWCHAR pszImage;
    ULONG cInterfaces;
    struct _CRYPT_INTERFACE_REG **rgpInterfaces;
};

typedef struct _CRYPT_INTERFACE_REG {
    ULONG dwInterface;
    ULONG dwFlags;
    ULONG cFunctions;
    PWCHAR *rgpszFunctions;
};

typedef struct _CRYPT_KEY_PROV_INFO {
    PWCHAR pwszContainerName;
    PWCHAR pwszProvName;
    ULONG dwProvType;
    ULONG dwFlags;
    ULONG cProvParam;
    struct _CRYPT_KEY_PROV_PARAM *rgProvParam;
    ULONG dwKeySpec;
};

typedef struct _CRYPT_KEY_PROV_PARAM {
    ULONG dwParam;
    PUCHAR pbData;
    ULONG cbData;
    ULONG dwFlags;
};

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG64 hCryptProv;
    ULONG64 hNCryptKey;
    ULONG dwKeySpec;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    ULONG64 hCryptProv;
};

typedef struct _CRYPT_MASK_GEN_ALGORITHM {
    PCHAR pszObjId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
};

typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE {
    ULONG cbSize;
    PLONG pfnGet;
    PVOID pfnRelease;
    PVOID pfnFreePassword;
    PVOID pfnFree;
    PVOID pfnFreeIdentifier;
};

typedef struct _CRYPT_OBJID_TABLE {
    ULONG dwAlgId;
    PCHAR pszObjId;
};

typedef struct _CRYPT_OID_FUNC_ENTRY {
    PCHAR pszOID;
    PVOID pvFuncAddr;
};

typedef struct _CRYPT_OID_INFO {
    ULONG cbSize;
    PCHAR pszOID;
    PWCHAR pwszName;
    ULONG dwGroupId;
    ULONG dwValue;
    ULONG Algid;
    ULONG dwLength;
    struct _CRYPTOAPI_BLOB ExtraInfo;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSA {
    ULONG cbSize;
    PCHAR pszUsername;
    PCHAR pszPassword;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSW {
    ULONG cbSize;
    PWCHAR pszUsername;
    PWCHAR pszPassword;
};

typedef struct _CRYPT_PKCS12_PBE_PARAMS {
    LONG iIterations;
    ULONG cbSalt;
};

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS {
    ULONG64 hCryptProv;
    ULONG dwKeySpec;
    PCHAR pszPrivateKeyObjId;
    PLONG pEncryptPrivateKeyFunc;
    PVOID pVoidEncryptFunc;
};

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS {
    struct _CRYPTOAPI_BLOB PrivateKey;
    PLONG pResolvehCryptProvFunc;
    PVOID pVoidResolveFunc;
    PLONG pDecryptPrivateKeyFunc;
    PVOID pVoidDecryptFunc;
};

typedef struct _CRYPT_PRIVATE_KEY_INFO {
    ULONG Version;
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    struct _CRYPTOAPI_BLOB PrivateKey;
    struct _CRYPT_ATTRIBUTES *pAttributes;
};

typedef struct _CRYPT_PROPERTY_REF {
    PWCHAR pszProperty;
    ULONG cbValue;
    PUCHAR pbValue;
};

typedef struct _CRYPT_PROVIDERS {
    ULONG cProviders;
    PWCHAR *rgpszProviders;
};

typedef struct _CRYPT_PROVIDER_REF {
    ULONG dwInterface;
    PWCHAR pszFunction;
    PWCHAR pszProvider;
    ULONG cProperties;
    struct _CRYPT_PROPERTY_REF **rgpProperties;
    struct _CRYPT_IMAGE_REF *pUM;
    struct _CRYPT_IMAGE_REF *pKM;
};

typedef struct _CRYPT_PROVIDER_REFS {
    ULONG cProviders;
    struct _CRYPT_PROVIDER_REF **rgpProviders;
};

typedef struct _CRYPT_PROVIDER_REG {
    ULONG cAliases;
    PWCHAR *rgpszAliases;
    struct _CRYPT_IMAGE_REG *pUM;
    struct _CRYPT_IMAGE_REG *pKM;
};

typedef struct _CRYPT_PSOURCE_ALGORITHM {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB EncodingParameters;
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS {
    ULONG dwVersion;
    LONG fIV;
    UCHAR rgbIV[8];
};

typedef struct _CRYPT_RC4_KEY_STATE {
    UCHAR Key[16];
    UCHAR SBox[256];
    UCHAR i;
    UCHAR j;
};

typedef struct _CRYPT_RETRIEVE_AUX_INFO {
    ULONG cbSize;
    struct _FILETIME *pLastSyncTime;
    ULONG dwMaxUrlRetrievalByteCount;
    struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO *pPreFetchInfo;
    struct _CRYPTNET_URL_CACHE_FLUSH_INFO *pFlushInfo;
    struct _CRYPTNET_URL_CACHE_RESPONSE_INFO **ppResponseInfo;
    PWCHAR pwszCacheFileNamePrefix;
    struct _FILETIME *pftCacheResync;
    LONG fProxyCacheRetrieval;
    ULONG dwHttpStatusCode;
    PWCHAR *ppwszErrorResponseHeaders;
    struct _CRYPTOAPI_BLOB **ppErrorContentBlob;
};

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
};

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    ULONG dwSaltLength;
    ULONG dwTrailerField;
};

typedef struct _CRYPT_SEQUENCE_OF_ANY {
    ULONG cValue;
    struct _CRYPTOAPI_BLOB *rgValue;
};

typedef struct _CRYPT_SIGN_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgEncodingType;
    struct _CERT_CONTEXT *pSigningCert;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    PVOID pvHashAuxInfo;
    ULONG cMsgCert;
    struct _CERT_CONTEXT **rgpMsgCert;
    ULONG cMsgCrl;
    struct _CRL_CONTEXT **rgpMsgCrl;
    ULONG cAuthAttr;
    struct _CRYPT_ATTRIBUTE *rgAuthAttr;
    ULONG cUnauthAttr;
    struct _CRYPT_ATTRIBUTE *rgUnauthAttr;
    ULONG dwFlags;
    ULONG dwInnerContentType;
};

typedef struct _CRYPT_SMART_CARD_ROOT_INFO {
    UCHAR rgbCardID[16];
    struct _ROOT_INFO_LUID luid;
};

typedef struct _CRYPT_SMIME_CAPABILITIES {
    ULONG cCapability;
    struct _CRYPT_SMIME_CAPABILITY *rgCapability;
};

typedef struct _CRYPT_SMIME_CAPABILITY {
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Parameters;
};

typedef struct _CRYPT_TIMESTAMP_ACCURACY {
    ULONG dwSeconds;
    ULONG dwMillis;
    ULONG dwMicros;
};

typedef struct _CRYPT_TIMESTAMP_CONTEXT {
    ULONG cbEncoded;
    PUCHAR pbEncoded;
    struct _CRYPT_TIMESTAMP_INFO *pTimeStamp;
};

typedef struct _CRYPT_TIMESTAMP_INFO {
    ULONG dwVersion;
    PCHAR pszTSAPolicyId;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB HashedMessage;
    struct _CRYPTOAPI_BLOB SerialNumber;
    struct _FILETIME ftTime;
    struct _CRYPT_TIMESTAMP_ACCURACY *pvAccuracy;
    LONG fOrdering;
    struct _CRYPTOAPI_BLOB Nonce;
    struct _CRYPTOAPI_BLOB Tsa;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_PARA {
    PCHAR pszTSAPolicyId;
    LONG fRequestCerts;
    struct _CRYPTOAPI_BLOB Nonce;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_REQUEST {
    ULONG dwVersion;
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB HashedMessage;
    PCHAR pszTSAPolicyId;
    struct _CRYPTOAPI_BLOB Nonce;
    LONG fCertReq;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CRYPT_TIMESTAMP_RESPONSE {
    ULONG dwStatus;
    ULONG cFreeText;
    PWCHAR *rgFreeText;
    struct _CRYPT_BIT_BLOB FailureInfo;
    struct _CRYPTOAPI_BLOB ContentInfo;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO {
    PCHAR pszTimeStampAlgorithm;
    PCHAR pszContentType;
    struct _CRYPTOAPI_BLOB Content;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CRYPT_URL_ARRAY {
    ULONG cUrl;
    PWCHAR *rgwszUrl;
};

typedef struct _CRYPT_URL_INFO {
    ULONG cbSize;
    ULONG dwSyncDeltaTime;
    ULONG cGroup;
    PULONG rgcGroupEntry;
};

typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO {
    struct _CRYPTOAPI_BLOB CertSignHashCNGAlgPropData;
    struct _CRYPTOAPI_BLOB CertIssuerPubKeyBitLengthPropData;
};

typedef struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO {
    ULONG cCNGHashAlgid;
    PWCHAR *rgpwszCNGHashAlgid;
    ULONG dwWeakIndex;
};

typedef struct _CRYPT_VERIFY_MESSAGE_PARA {
    ULONG cbSize;
    ULONG dwMsgAndCertEncodingType;
    ULONG64 hCryptProv;
    struct _CERT_CONTEXT **pfnGetSignerCertificate;
    PVOID pvGetArg;
};

typedef struct _CRYPT_X942_OTHER_INFO {
    PCHAR pszContentEncryptionObjId;
    UCHAR rgbCounter[4];
    UCHAR rgbKeyLength[4];
    struct _CRYPTOAPI_BLOB PubInfo;
};

typedef struct _CSFV {
    ULONG cbSize;
    struct IShellFolder *pshf;
    struct IShellView *psvOuter;
    struct _ITEMIDLIST *pidl;
    LONG lEvents;
    HRESULT *pfnCallback;
    enum FOLDERVIEWMODE fvm;
};

typedef struct _CSTRING {
    USHORT Length;
    USHORT MaximumLength;
    PCHAR Buffer;
};

typedef struct _CSV_CONTROL_PARAM {
    enum _CSV_CONTROL_OP Operation;
    LONG64 Unused;
};

typedef struct _CSV_IS_OWNED_BY_CSVFS {
    UCHAR OwnedByCSVFS;
};

typedef struct _CSV_MGMT_LOCK {
    ULONG Flags;
};

typedef struct _CSV_NAMESPACE_INFO {
    ULONG Version;
    ULONG DeviceNumber;
    union _LARGE_INTEGER StartingOffset;
    ULONG SectorSize;
};

typedef struct _CSV_QUERY_FILE_REVISION {
    LONG64 FileId;
    LONG64 FileRevision[3];
};

typedef struct _CSV_QUERY_FILE_REVISION_FILE_ID_128 {
    struct _FILE_ID_128 FileId;
    LONG64 FileRevision[3];
};

typedef struct _CSV_QUERY_MDS_PATH {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    ULONG PathLength;
    WCHAR Path[1];
};

typedef struct _CSV_QUERY_MDS_PATH_V2 {
    LONG64 Version;
    ULONG RequiredSize;
    ULONG MdsNodeId;
    ULONG DsNodeId;
    ULONG Flags;
    enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
    struct _GUID VolumeId;
    ULONG IpAddressOffset;
    ULONG IpAddressLength;
    ULONG PathOffset;
    ULONG PathLength;
};

typedef struct _CSV_QUERY_REDIRECT_STATE {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    UCHAR FileRedirected;
};

typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT {
    ULONG64 VetoedFromAltitudeIntegral;
    ULONG64 VetoedFromAltitudeDecimal;
    WCHAR Reason[256];
};

typedef struct _CSV_QUERY_VOLUME_REDIRECT_STATE {
    ULONG MdsNodeId;
    ULONG DsNodeId;
    UCHAR IsDiskConnected;
    UCHAR ClusterEnableDirectIo;
    enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
};

typedef struct _CTL_ANY_SUBJECT_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    struct _CRYPTOAPI_BLOB SubjectIdentifier;
};

typedef struct _CTL_CONTEXT {
    ULONG dwMsgAndCertEncodingType;
    PUCHAR pbCtlEncoded;
    ULONG cbCtlEncoded;
    struct _CTL_INFO *pCtlInfo;
    PVOID hCertStore;
    PVOID hCryptMsg;
    PUCHAR pbCtlContent;
    ULONG cbCtlContent;
};

typedef struct _CTL_ENTRY {
    struct _CRYPTOAPI_BLOB SubjectIdentifier;
    ULONG cAttribute;
    struct _CRYPT_ATTRIBUTE *rgAttribute;
};

typedef struct _CTL_FIND_SUBJECT_PARA {
    ULONG cbSize;
    struct _CTL_FIND_USAGE_PARA *pUsagePara;
    ULONG dwSubjectType;
    PVOID pvSubject;
};

typedef struct _CTL_FIND_USAGE_PARA {
    ULONG cbSize;
    struct _CTL_USAGE SubjectUsage;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    struct _CERT_INFO *pSigner;
};

typedef struct _CTL_INFO {
    ULONG dwVersion;
    struct _CTL_USAGE SubjectUsage;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    struct _CRYPTOAPI_BLOB SequenceNumber;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    ULONG cCTLEntry;
    struct _CTL_ENTRY *rgCTLEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _CTL_USAGE {
    ULONG cUsageIdentifier;
    PCHAR *rgpszUsageIdentifier;
};

typedef struct _CTL_USAGE_MATCH {
    ULONG dwType;
    struct _CTL_USAGE Usage;
};

typedef struct _CTL_VERIFY_USAGE_PARA {
    ULONG cbSize;
    struct _CRYPTOAPI_BLOB ListIdentifier;
    ULONG cCtlStore;
    PVOID *rghCtlStore;
    ULONG cSignerStore;
    PVOID *rghSignerStore;
};

typedef struct _CTL_VERIFY_USAGE_STATUS {
    ULONG cbSize;
    ULONG dwError;
    ULONG dwFlags;
    struct _CTL_CONTEXT **ppCtl;
    ULONG dwCtlEntryIndex;
    struct _CERT_CONTEXT **ppSigner;
    ULONG dwSignerIndex;
};

typedef struct _CURDIR {
    struct _UNICODE_STRING DosPath;
    PVOID Handle;
};

typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG {
    ULONG Size;
    PWCHAR TriggerId;
};

typedef struct _CrtMemBlockHeader {
};

typedef struct _CrtMemState {
    struct _CrtMemBlockHeader *pBlockHeader;
    ULONG64 lCounts[5];
    ULONG64 lSizes[5];
    ULONG64 lHighWaterCount;
    ULONG64 lTotalCount;
};

typedef struct _CursorPositionNotification {
    struct tagPOINT ptCursor;
    ULONG deviceId;
    LONG64 qpcTime;
};

typedef struct _D3DADAPTER_IDENTIFIER9 {
    CHAR Driver[512];
    CHAR Description[512];
    CHAR DeviceName[32];
    union _LARGE_INTEGER DriverVersion;
    ULONG VendorId;
    ULONG DeviceId;
    ULONG SubSysId;
    ULONG Revision;
    struct _GUID DeviceIdentifier;
    ULONG WHQLLevel;
};

typedef struct _D3DAES_CTR_IV {
    ULONG64 IV;
    ULONG64 Count;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION {
    struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT Parameters;
    PVOID DXVA2DecodeHandle;
    PVOID CryptoSessionHandle;
    PVOID DeviceHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE {
    struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT Parameters;
    ULONG StartSequenceQuery;
    ULONG StartSequenceConfigure;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION {
    struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT Parameters;
    struct _D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS Protections;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE {
    struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT Parameters;
    enum _D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE ProcessIdentiferType;
    PVOID ProcessHandle;
    LONG AllowAccess;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION {
    struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT Parameters;
    struct _GUID EncryptionGuid;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT {
    struct _D3D_OMAC omac;
    struct _GUID ConfigureType;
    PVOID hChannel;
    ULONG SequenceNumber;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT {
    struct _D3D_OMAC omac;
    struct _GUID ConfigureType;
    PVOID hChannel;
    ULONG SequenceNumber;
    HRESULT ReturnCode;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS {
    ULONG ProtectionEnabled : 1;
    ULONG OverlayOrFullscreenRequired : 1;
    ULONG Reserved : 30;
    ULONG Value;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    enum _D3DAUTHENTICATEDCHANNELTYPE ChannelType;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;
    PVOID DXVA2DecodeHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    PVOID DXVA2DecodeHandle;
    PVOID CryptoSessionHandle;
    PVOID DeviceHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    PVOID DeviceHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    ULONG NumEncryptionGuids;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;
    ULONG EncryptionGuidIndex;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    ULONG EncryptionGuidIndex;
    struct _GUID EncryptionGuid;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    enum _D3DBUSTYPE BusType;
    LONG bAccessibleInContiguousBlocks;
    LONG bAccessibleInNonContiguousBlocks;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;
    PVOID DeviceHandle;
    PVOID CryptoSessionHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    PVOID DeviceHandle;
    PVOID CryptoSessionHandle;
    ULONG NumOutputIDs;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;
    PVOID DeviceHandle;
    PVOID CryptoSessionHandle;
    ULONG OutputIDIndex;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    PVOID DeviceHandle;
    PVOID CryptoSessionHandle;
    ULONG OutputIDIndex;
    ULONG64 OutputID;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    struct _D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS ProtectionFlags;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    ULONG NumRestrictedSharedResourceProcesses;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;
    ULONG ProcessIndex;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    ULONG ProcessIndex;
    enum _D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE ProcessIdentifer;
    PVOID ProcessHandle;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    struct _GUID EncryptionGuid;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT {
    struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;
    ULONG NumUnrestrictedProtectedSharedResources;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT {
    struct _GUID QueryType;
    PVOID hChannel;
    ULONG SequenceNumber;
};

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT {
    struct _D3D_OMAC omac;
    struct _GUID QueryType;
    PVOID hChannel;
    ULONG SequenceNumber;
    HRESULT ReturnCode;
};

typedef struct _D3DBOX {
    ULONG Left;
    ULONG Top;
    ULONG Right;
    ULONG Bottom;
    ULONG Front;
    ULONG Back;
};

typedef struct _D3DCAPS9 {
    enum _D3DDEVTYPE DeviceType;
    ULONG AdapterOrdinal;
    ULONG Caps;
    ULONG Caps2;
    ULONG Caps3;
    ULONG PresentationIntervals;
    ULONG CursorCaps;
    ULONG DevCaps;
    ULONG PrimitiveMiscCaps;
    ULONG RasterCaps;
    ULONG ZCmpCaps;
    ULONG SrcBlendCaps;
    ULONG DestBlendCaps;
    ULONG AlphaCmpCaps;
    ULONG ShadeCaps;
    ULONG TextureCaps;
    ULONG TextureFilterCaps;
    ULONG CubeTextureFilterCaps;
    ULONG VolumeTextureFilterCaps;
    ULONG TextureAddressCaps;
    ULONG VolumeTextureAddressCaps;
    ULONG LineCaps;
    ULONG MaxTextureWidth;
    ULONG MaxTextureHeight;
    ULONG MaxVolumeExtent;
    ULONG MaxTextureRepeat;
    ULONG MaxTextureAspectRatio;
    ULONG MaxAnisotropy;
    FLOAT MaxVertexW;
    FLOAT GuardBandLeft;
    FLOAT GuardBandTop;
    FLOAT GuardBandRight;
    FLOAT GuardBandBottom;
    FLOAT ExtentsAdjust;
    ULONG StencilCaps;
    ULONG FVFCaps;
    ULONG TextureOpCaps;
    ULONG MaxTextureBlendStages;
    ULONG MaxSimultaneousTextures;
    ULONG VertexProcessingCaps;
    ULONG MaxActiveLights;
    ULONG MaxUserClipPlanes;
    ULONG MaxVertexBlendMatrices;
    ULONG MaxVertexBlendMatrixIndex;
    FLOAT MaxPointSize;
    ULONG MaxPrimitiveCount;
    ULONG MaxVertexIndex;
    ULONG MaxStreams;
    ULONG MaxStreamStride;
    ULONG VertexShaderVersion;
    ULONG MaxVertexShaderConst;
    ULONG PixelShaderVersion;
    FLOAT PixelShader1xMaxValue;
    ULONG DevCaps2;
    FLOAT MaxNpatchTessellationLevel;
    ULONG Reserved5;
    ULONG MasterAdapterOrdinal;
    ULONG AdapterOrdinalInGroup;
    ULONG NumberOfAdaptersInGroup;
    ULONG DeclTypes;
    ULONG NumSimultaneousRTs;
    ULONG StretchRectFilterCaps;
    struct _D3DVSHADERCAPS2_0 VS20Caps;
    struct _D3DPSHADERCAPS2_0 PS20Caps;
    ULONG VertexTextureFilterCaps;
    ULONG MaxVShaderInstructionsExecuted;
    ULONG MaxPShaderInstructionsExecuted;
    ULONG MaxVertexShader30InstructionSlots;
    ULONG MaxPixelShader30InstructionSlots;
};

typedef struct _D3DCLIPSTATUS9 {
    ULONG ClipUnion;
    ULONG ClipIntersection;
};

typedef struct _D3DCOLORVALUE {
    FLOAT r;
    FLOAT g;
    FLOAT b;
    FLOAT a;
};

typedef struct _D3DCOMPOSERECTDESC {
    USHORT X;
    USHORT Y;
    USHORT Width;
    USHORT Height;
};

typedef struct _D3DCOMPOSERECTDESTINATION {
    USHORT SrcRectIndex;
    USHORT Reserved;
    SHORT X;
    SHORT Y;
};

typedef struct _D3DCONTENTPROTECTIONCAPS {
    ULONG Caps;
    struct _GUID KeyExchangeType;
    ULONG BufferAlignmentStart;
    ULONG BlockAlignmentSize;
    ULONG64 ProtectedMemorySize;
};

typedef struct _D3DDEVICE_CREATION_PARAMETERS {
    ULONG AdapterOrdinal;
    enum _D3DDEVTYPE DeviceType;
    struct HWND__ *hFocusWindow;
    ULONG BehaviorFlags;
};

typedef struct _D3DDEVINFO_D3D9BANDWIDTHTIMINGS {
    FLOAT MaxBandwidthUtilized;
    FLOAT FrontEndUploadMemoryUtilizedPercent;
    FLOAT VertexRateUtilizedPercent;
    FLOAT TriangleSetupRateUtilizedPercent;
    FLOAT FillRateUtilizedPercent;
};

typedef struct _D3DDEVINFO_D3D9CACHEUTILIZATION {
    FLOAT TextureCacheHitRate;
    FLOAT PostTransformVertexCacheHitRate;
};

typedef struct _D3DDEVINFO_D3D9INTERFACETIMINGS {
    FLOAT WaitingForGPUToUseApplicationResourceTimePercent;
    FLOAT WaitingForGPUToAcceptMoreCommandsTimePercent;
    FLOAT WaitingForGPUToStayWithinLatencyTimePercent;
    FLOAT WaitingForGPUExclusiveResourceTimePercent;
    FLOAT WaitingForGPUOtherTimePercent;
};

typedef struct _D3DDEVINFO_D3D9PIPELINETIMINGS {
    FLOAT VertexProcessingTimePercent;
    FLOAT PixelProcessingTimePercent;
    FLOAT OtherGPUProcessingTimePercent;
    FLOAT GPUIdleTimePercent;
};

typedef struct _D3DDEVINFO_D3D9STAGETIMINGS {
    FLOAT MemoryProcessingPercent;
    FLOAT ComputationProcessingPercent;
};

typedef struct _D3DDEVINFO_D3DVERTEXSTATS {
    ULONG NumRenderedTriangles;
    ULONG NumExtraClippingTriangles;
};

typedef struct _D3DDEVINFO_RESOURCEMANAGER {
    struct _D3DRESOURCESTATS stats[8];
};

typedef struct _D3DDEVINFO_VCACHE {
    ULONG Pattern;
    ULONG OptMethod;
    ULONG CacheSize;
    ULONG MagicNumber;
};

typedef struct _D3DDISPLAYMODE {
    ULONG Width;
    ULONG Height;
    ULONG RefreshRate;
    enum _D3DFORMAT Format;
};

typedef struct _D3DENCRYPTED_BLOCK_INFO {
    ULONG NumEncryptedBytesAtBeginning;
    ULONG NumBytesInSkipPattern;
    ULONG NumBytesInEncryptPattern;
};

typedef struct _D3DGAMMARAMP {
    USHORT red[256];
    USHORT green[256];
    USHORT blue[256];
};

typedef struct _D3DINDEXBUFFER_DESC {
    enum _D3DFORMAT Format;
    enum _D3DRESOURCETYPE Type;
    ULONG Usage;
    enum _D3DPOOL Pool;
    ULONG Size;
};

typedef struct _D3DLIGHT9 {
    enum _D3DLIGHTTYPE Type;
    struct _D3DCOLORVALUE Diffuse;
    struct _D3DCOLORVALUE Specular;
    struct _D3DCOLORVALUE Ambient;
    struct _D3DVECTOR Position;
    struct _D3DVECTOR Direction;
    FLOAT Range;
    FLOAT Falloff;
    FLOAT Attenuation0;
    FLOAT Attenuation1;
    FLOAT Attenuation2;
    FLOAT Theta;
    FLOAT Phi;
};

typedef struct _D3DLOCKED_BOX {
    LONG RowPitch;
    LONG SlicePitch;
    PVOID pBits;
};

typedef struct _D3DLOCKED_RECT {
    LONG Pitch;
    PVOID pBits;
};

typedef struct _D3DMATERIAL9 {
    struct _D3DCOLORVALUE Diffuse;
    struct _D3DCOLORVALUE Ambient;
    struct _D3DCOLORVALUE Specular;
    struct _D3DCOLORVALUE Emissive;
    FLOAT Power;
};

typedef struct _D3DMATRIX {
    FLOAT _11;
    FLOAT _12;
    FLOAT _13;
    FLOAT _14;
    FLOAT _21;
    FLOAT _22;
    FLOAT _23;
    FLOAT _24;
    FLOAT _31;
    FLOAT _32;
    FLOAT _33;
    FLOAT _34;
    FLOAT _41;
    FLOAT _42;
    FLOAT _43;
    FLOAT _44;
    FLOAT m[4][4];
};

typedef struct _D3DMEMORYPRESSURE {
    ULONG64 BytesEvictedFromProcess;
    ULONG64 SizeOfInefficientAllocation;
    ULONG LevelOfEfficiency;
};

typedef struct _D3DOVERLAYCAPS {
    ULONG Caps;
    ULONG MaxOverlayDisplayWidth;
    ULONG MaxOverlayDisplayHeight;
};

typedef struct _D3DPRESENTSTATS {
    ULONG PresentCount;
    ULONG PresentRefreshCount;
    ULONG SyncRefreshCount;
    union _LARGE_INTEGER SyncQPCTime;
    union _LARGE_INTEGER SyncGPUTime;
};

typedef struct _D3DPRESENT_PARAMETERS_ {
    ULONG BackBufferWidth;
    ULONG BackBufferHeight;
    enum _D3DFORMAT BackBufferFormat;
    ULONG BackBufferCount;
    enum _D3DMULTISAMPLE_TYPE MultiSampleType;
    ULONG MultiSampleQuality;
    enum _D3DSWAPEFFECT SwapEffect;
    struct HWND__ *hDeviceWindow;
    LONG Windowed;
    LONG EnableAutoDepthStencil;
    enum _D3DFORMAT AutoDepthStencilFormat;
    ULONG Flags;
    ULONG FullScreen_RefreshRateInHz;
    ULONG PresentationInterval;
};

typedef struct _D3DPSHADERCAPS2_0 {
    ULONG Caps;
    LONG DynamicFlowControlDepth;
    LONG NumTemps;
    LONG StaticFlowControlDepth;
    LONG NumInstructionSlots;
};

typedef struct _D3DRANGE {
    ULONG Offset;
    ULONG Size;
};

typedef struct _D3DRASTER_STATUS {
    LONG InVBlank;
    ULONG ScanLine;
};

typedef struct _D3DRECT {
    LONG x1;
    LONG y1;
    LONG x2;
    LONG y2;
};

typedef struct _D3DRECTPATCH_INFO {
    ULONG StartVertexOffsetWidth;
    ULONG StartVertexOffsetHeight;
    ULONG Width;
    ULONG Height;
    ULONG Stride;
    enum _D3DBASISTYPE Basis;
    enum _D3DDEGREETYPE Degree;
};

typedef struct _D3DRESOURCESTATS {
    LONG bThrashing;
    ULONG ApproxBytesDownloaded;
    ULONG NumEvicts;
    ULONG NumVidCreates;
    ULONG LastPri;
    ULONG NumUsed;
    ULONG NumUsedInVidMem;
    ULONG WorkingSet;
    ULONG WorkingSetBytes;
    ULONG TotalManaged;
    ULONG TotalBytes;
};

typedef struct _D3DSURFACE_DESC {
    enum _D3DFORMAT Format;
    enum _D3DRESOURCETYPE Type;
    ULONG Usage;
    enum _D3DPOOL Pool;
    enum _D3DMULTISAMPLE_TYPE MultiSampleType;
    ULONG MultiSampleQuality;
    ULONG Width;
    ULONG Height;
};

typedef struct _D3DTRIPATCH_INFO {
    ULONG StartVertexOffset;
    ULONG NumVertices;
    enum _D3DBASISTYPE Basis;
    enum _D3DDEGREETYPE Degree;
};

typedef struct _D3DVECTOR {
    FLOAT x;
    FLOAT y;
    FLOAT z;
};

typedef struct _D3DVERTEXBUFFER_DESC {
    enum _D3DFORMAT Format;
    enum _D3DRESOURCETYPE Type;
    ULONG Usage;
    enum _D3DPOOL Pool;
    ULONG Size;
    ULONG FVF;
};

typedef struct _D3DVERTEXELEMENT9 {
    USHORT Stream;
    USHORT Offset;
    UCHAR Type;
    UCHAR Method;
    UCHAR Usage;
    UCHAR UsageIndex;
};

typedef struct _D3DVIEWPORT9 {
    ULONG X;
    ULONG Y;
    ULONG Width;
    ULONG Height;
    FLOAT MinZ;
    FLOAT MaxZ;
};

typedef struct _D3DVOLUME_DESC {
    enum _D3DFORMAT Format;
    enum _D3DRESOURCETYPE Type;
    ULONG Usage;
    enum _D3DPOOL Pool;
    ULONG Width;
    ULONG Height;
    ULONG Depth;
};

typedef struct _D3DVSHADERCAPS2_0 {
    ULONG Caps;
    LONG DynamicFlowControlDepth;
    LONG NumTemps;
    LONG StaticFlowControlDepth;
};

typedef struct _D3D_OMAC {
    UCHAR Omac[16];
};

typedef struct _DATATYPES_INFO_1A {
    PCHAR pName;
};

typedef struct _DATATYPES_INFO_1W {
    PWCHAR pName;
};

typedef struct _DCB {
    ULONG DCBlength;
    ULONG BaudRate;
    ULONG fBinary : 1;
    ULONG fParity : 1;
    ULONG fOutxCtsFlow : 1;
    ULONG fOutxDsrFlow : 1;
    ULONG fDtrControl : 2;
    ULONG fDsrSensitivity : 1;
    ULONG fTXContinueOnXoff : 1;
    ULONG fOutX : 1;
    ULONG fInX : 1;
    ULONG fErrorChar : 1;
    ULONG fNull : 1;
    ULONG fRtsControl : 2;
    ULONG fAbortOnError : 1;
    ULONG fDummy2 : 17;
    USHORT wReserved;
    USHORT XonLim;
    USHORT XoffLim;
    UCHAR ByteSize;
    UCHAR Parity;
    UCHAR StopBits;
    CHAR XonChar;
    CHAR XoffChar;
    CHAR ErrorChar;
    CHAR EofChar;
    CHAR EvtChar;
    USHORT wReserved1;
};

typedef struct _DEBUG_EVENT {
    ULONG dwDebugEventCode;
    ULONG dwProcessId;
    ULONG dwThreadId;
     <unnamed-type-u>;
    union {
        struct _EXCEPTION_DEBUG_INFO Exception;
        struct _CREATE_THREAD_DEBUG_INFO CreateThread;
        struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
        struct _EXIT_THREAD_DEBUG_INFO ExitThread;
        struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
        struct _LOAD_DLL_DEBUG_INFO LoadDll;
        struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
        struct _OUTPUT_DEBUG_STRING_INFO DebugString;
        struct _RIP_INFO RipInfo;
    } u;
};

typedef struct _DECRYPTION_STATUS_BUFFER {
    UCHAR NoEncryptedStreams;
};

typedef struct _DEDUP_CHUNK_INFORMATION_HASH32 {
    ULONG ChunkFlags;
    LONG64 ChunkOffsetInFile;
    LONG64 ChunkSize;
    UCHAR HashVal[32];
};

typedef struct _DEDUP_FILE_OPERATION {
    ULONG Code;
};

typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER {
    ULONG Version;
    ULONG QueryFlags;
    ULONG HashAlgorithm;
    union _LARGE_INTEGER RangeOffsetInFile;
    union _LARGE_INTEGER RangeLength;
};

typedef struct _DEFINE_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaDefinitionOffset;
    ULONG AreaDefinitionCount;
    struct _STORAGE_RESERVE_AREA_DEFINITION AreaDefinition[1];
};

typedef struct _DELAYLOAD_INFO {
    ULONG Size;
    struct _IMAGE_DELAYLOAD_DESCRIPTOR *DelayloadDescriptor;
    struct _IMAGE_THUNK_DATA64 *ThunkAddress;
    PCHAR TargetDllName;
    struct _DELAYLOAD_PROC_DESCRIPTOR TargetApiDescriptor;
    PVOID TargetModuleBase;
    PVOID Unused;
    ULONG LastError;
};

typedef struct _DELAYLOAD_PROC_DESCRIPTOR {
    ULONG ImportDescribedByName;
    union {
        PCHAR Name;
        ULONG Ordinal;
    } Description;
};

typedef struct _DELETE_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _DETAILSINFO {
    struct _ITEMIDLIST *pidl;
    LONG fmt;
    LONG cxChar;
    struct _STRRET str;
    LONG iImage;
};

typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION {
    ULONG dwFlags;
    struct _GP_LOG_PAGE_DESCRIPTOR GPLogId;
    UCHAR bData[1];
};

typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION {
    ULONG dwFlags;
    struct _GP_LOG_PAGE_DESCRIPTOR GPLogTable[16];
    CHAR szDescription[16];
    UCHAR bData[1];
};

typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION {
    UCHAR bData[1];
};

typedef struct _DEVICEDUMP_SECTION_HEADER {
    struct _GUID guidDeviceDataId;
    UCHAR sOrganizationID[16];
    ULONG dwFirmwareRevision;
    UCHAR sModelNumber[32];
    UCHAR szDeviceManufacturingID[32];
    ULONG dwFlags;
    ULONG bRestrictedPrivateDataVersion;
    ULONG dwFirmwareIssueId;
    UCHAR szIssueDescriptionString[132];
};

typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA {
    struct _DEVICEDUMP_STRUCTURE_VERSION Descriptor;
    struct _DEVICEDUMP_SECTION_HEADER SectionHeader;
    ULONG dwBufferSize;
    ULONG dwReasonForCollection;
    struct _DEVICEDUMP_SUBSECTION_POINTER PublicData;
    struct _DEVICEDUMP_SUBSECTION_POINTER RestrictedData;
    struct _DEVICEDUMP_SUBSECTION_POINTER PrivateData;
};

typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP {
    struct _DEVICEDUMP_STRUCTURE_VERSION Descriptor;
    ULONG dwReasonForCollection;
    UCHAR cDriverName[16];
    ULONG uiNumRecords;
    struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD RecordArray[1];
};

typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD {
    UCHAR Cdb[16];
    UCHAR Command[16];
    ULONG64 StartTime;
    ULONG64 EndTime;
    ULONG OperationStatus;
    ULONG OperationError;
     <unnamed-type-StackSpecific>;
    union {
         <unnamed-type-ExternalStack>;
        struct {
            ULONG dwReserved;
        } ExternalStack;
         <unnamed-type-AtaPort>;
        struct {
            ULONG dwAtaPortSpecific;
        } AtaPort;
         <unnamed-type-StorPort>;
        struct {
            ULONG SrbTag;
        } StorPort;
    } StackSpecific;
};

typedef struct _DEVICEDUMP_STRUCTURE_VERSION {
    ULONG dwSignature;
    ULONG dwVersion;
    ULONG dwSize;
};

typedef struct _DEVICEDUMP_SUBSECTION_POINTER {
    ULONG dwSize;
    ULONG dwFlags;
    ULONG dwOffset;
};

typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG MaximumTokenLifetime;
    ULONG DefaultTokenLifetime;
    ULONG64 MaximumTransferSize;
    ULONG64 OptimalTransferCount;
    ULONG MaximumDataDescriptors;
    ULONG MaximumTransferLengthPerDescriptor;
    ULONG OptimalTransferLengthPerDescriptor;
    USHORT OptimalTransferLengthGranularity;
    UCHAR Reserved[2];
};

typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG OutputVersion;
};

typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE {
    ULONG Size;
    ULONG Version;
    ULONG64 SlabSizeInBytes;
    ULONG SlabOffsetDeltaInBytes;
    ULONG SlabAllocationBitMapBitCount;
    ULONG SlabAllocationBitMapLength;
    ULONG SlabAllocationBitMap[1];
};

typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 {
    ULONG Size;
    ULONG Version;
    ULONG64 SlabSizeInBytes;
    ULONG64 SlabOffsetDeltaInBytes;
    ULONG SlabAllocationBitMapBitCount;
    ULONG SlabAllocationBitMapLength;
    ULONG SlabAllocationBitMap[1];
};

typedef struct _DEVICE_DATA_SET_RANGE {
    LONG64 StartingOffset;
    ULONG64 LengthInBytes;
};

typedef struct _DEVICE_DATA_SET_REPAIR_OUTPUT {
    struct _DEVICE_DATA_SET_RANGE ParityExtent;
};

typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS {
    ULONG NumberOfRepairCopies;
    ULONG SourceCopy;
    ULONG RepairCopies[1];
};

typedef struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT {
    ULONG64 BytesProcessed;
    ULONG64 BytesRepaired;
    ULONG64 BytesFailed;
    struct _DEVICE_DATA_SET_RANGE ParityExtent;
};

typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT {
    ULONG64 BytesProcessed;
    ULONG64 BytesRepaired;
    ULONG64 BytesFailed;
};

typedef struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT {
    ULONG64 TopologyRangeBytes;
    UCHAR TopologyId[16];
};

typedef struct _DEVICE_DSM_DEFINITION {
    ULONG Action;
    UCHAR SingleRange;
    ULONG ParameterBlockAlignment;
    ULONG ParameterBlockLength;
    UCHAR HasOutput;
    ULONG OutputBlockAlignment;
    ULONG OutputBlockLength;
};

typedef struct _DEVICE_DSM_FREE_SPACE_OUTPUT {
    ULONG Version;
    ULONG64 FreeSpace;
};

typedef struct _DEVICE_DSM_LOST_QUERY_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG64 Alignment;
    ULONG NumberOfBits;
    ULONG BitMap[1];
};

typedef struct _DEVICE_DSM_LOST_QUERY_PARAMETERS {
    ULONG Version;
    ULONG64 Granularity;
};

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS {
    ULONG Size;
    ULONG Flags;
    ULONG NumFileTypeIDs;
    struct _GUID FileTypeID[1];
};

typedef struct _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS {
    ULONG Size;
    UCHAR TargetPriority;
    UCHAR Reserved[3];
};

typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS {
    ULONG Flags;
    ULONG TimeToLive;
    ULONG Reserved[2];
};

typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS {
    ULONG Flags;
    ULONG Reserved;
    ULONG64 TokenOffset;
    struct _STORAGE_OFFLOAD_TOKEN Token;
};

typedef struct _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT {
    ULONG Version;
    ULONG Flags;
    ULONG TotalNumberOfRanges;
    ULONG NumberOfRangesReturned;
    struct _DEVICE_STORAGE_ADDRESS_RANGE Ranges[1];
};

typedef struct _DEVICE_DSM_RANGE_ERROR_INFO {
    ULONG Version;
    ULONG Flags;
    ULONG TotalNumberOfRanges;
    ULONG NumberOfRangesReturned;
    struct _DEVICE_STORAGE_RANGE_ATTRIBUTES Ranges[1];
};

typedef struct _DEVICE_DSM_REPORT_ZONES_DATA {
    ULONG Size;
    ULONG ZoneCount;
    enum _STORAGE_ZONES_ATTRIBUTES Attributes;
    ULONG Reserved0;
    struct _STORAGE_ZONE_DESCRIPTOR ZoneDescriptors[1];
};

typedef struct _DEVICE_DSM_REPORT_ZONES_PARAMETERS {
    ULONG Size;
    UCHAR ReportOption;
    UCHAR Partial;
    UCHAR Reserved[2];
};

typedef struct _DEVICE_DSM_TIERING_QUERY_INPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG NumberOfTierIds;
    struct _GUID TierIds[1];
};

typedef struct _DEVICE_DSM_TIERING_QUERY_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG Reserved;
    ULONG64 Alignment;
    ULONG TotalNumberOfRegions;
    ULONG NumberOfRegionsReturned;
    struct _STORAGE_TIER_REGION Regions[1];
};

typedef struct _DEVICE_FLAGS {
    ULONG Failed : 1;
    ULONG ReadOnly : 1;
    ULONG Removable : 1;
    ULONG ConsoleIn : 1;
    ULONG ConsoleOut : 1;
    ULONG Input : 1;
    ULONG Output : 1;
};

typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR ThinProvisioningEnabled : 1;
    UCHAR ThinProvisioningReadZeros : 1;
    UCHAR AnchorSupported : 3;
    UCHAR UnmapGranularityAlignmentValid : 1;
    UCHAR Reserved0 : 2;
    UCHAR Reserved1[7];
    ULONG64 OptimalUnmapGranularity;
    ULONG64 UnmapGranularityAlignment;
    ULONG MaxUnmapLbaCount;
    ULONG MaxUnmapBlockDescriptorCount;
};

typedef struct _DEVICE_LOCATION {
    ULONG Socket;
    ULONG Slot;
    ULONG Adapter;
    ULONG Port;
    ULONG Channel;
    ULONG Device;
    ULONG Target;
    ULONG Lun;
};

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES {
    ULONG Size;
    ULONG Action;
    ULONG Flags;
    ULONG ParameterBlockOffset;
    ULONG ParameterBlockLength;
    ULONG DataSetRangesOffset;
    ULONG DataSetRangesLength;
};

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {
    ULONG Size;
    ULONG Action;
    ULONG Flags;
    ULONG OperationStatus;
    ULONG ExtendedError;
    ULONG TargetDetailedError;
    ULONG ReservedStatus;
    ULONG OutputBlockOffset;
    ULONG OutputBlockLength;
};

typedef struct _DEVICE_MEDIA_INFO {
     <unnamed-type-DeviceSpecific>;
    union {
         <unnamed-type-DiskInfo>;
        struct {
            union _LARGE_INTEGER Cylinders;
            enum _STORAGE_MEDIA_TYPE MediaType;
            ULONG TracksPerCylinder;
            ULONG SectorsPerTrack;
            ULONG BytesPerSector;
            ULONG NumberMediaSides;
            ULONG MediaCharacteristics;
        } DiskInfo;
         <unnamed-type-RemovableDiskInfo>;
        struct {
            union _LARGE_INTEGER Cylinders;
            enum _STORAGE_MEDIA_TYPE MediaType;
            ULONG TracksPerCylinder;
            ULONG SectorsPerTrack;
            ULONG BytesPerSector;
            ULONG NumberMediaSides;
            ULONG MediaCharacteristics;
        } RemovableDiskInfo;
         <unnamed-type-TapeInfo>;
        struct {
            enum _STORAGE_MEDIA_TYPE MediaType;
            ULONG MediaCharacteristics;
            ULONG CurrentBlockSize;
            enum _STORAGE_BUS_TYPE BusType;
             <unnamed-type-BusSpecificData>;
            union {
                 <unnamed-type-ScsiInformation>;
                struct {
                    UCHAR MediumType;
                    UCHAR DensityCode;
                } ScsiInformation;
            } BusSpecificData;
        } TapeInfo;
    } DeviceSpecific;
};

typedef struct _DEVICE_POWER_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR DeviceAttentionSupported;
    UCHAR AsynchronousNotificationSupported;
    UCHAR IdlePowerManagementEnabled;
    UCHAR D3ColdEnabled;
    UCHAR D3ColdSupported;
    UCHAR NoVerifyDuringIdlePower;
    UCHAR Reserved[2];
    ULONG IdleTimeoutInMS;
};

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR IncursSeekPenalty;
};

typedef struct _DEVICE_STORAGE_ADDRESS_RANGE {
    LONG64 StartAddress;
    ULONG64 LengthInBytes;
};

typedef struct _DEVICE_STORAGE_RANGE_ATTRIBUTES {
    ULONG64 LengthInBytes;
    ULONG AllFlags;
    ULONG IsRangeBad : 1;
    ULONG Reserved;
};

typedef struct _DEVICE_TRIM_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR TrimEnabled;
};

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR BenefitsFromWriteAggregation;
};

typedef struct _DEV_BROADCAST_POWERSETTING {
    ULONG dbcp_size;
    ULONG dbcp_devicetype;
    ULONG dbcp_reserved;
    struct _GUID dbcp_settingguid;
};

typedef struct _DIAGNOSTIC_BUFFER {
    ULONG64 Size;
    enum _REQUESTER_TYPE CallerType;
    ULONG64 ProcessImageNameOffset;
    ULONG ProcessId;
    ULONG ServiceTag;
    ULONG64 DeviceDescriptionOffset;
    ULONG64 DevicePathOffset;
    ULONG64 ReasonOffset;
};

typedef struct _DISCDLGSTRUCTA {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    PCHAR lpLocalName;
    PCHAR lpRemoteName;
    ULONG dwFlags;
};

typedef struct _DISCDLGSTRUCTW {
    ULONG cbStructure;
    struct HWND__ *hwndOwner;
    PWCHAR lpLocalName;
    PWCHAR lpRemoteName;
    ULONG dwFlags;
};

typedef struct _DISK_CACHE_INFORMATION {
    UCHAR ParametersSavable;
    UCHAR ReadCacheEnabled;
    UCHAR WriteCacheEnabled;
    enum DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
    enum DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
    USHORT DisablePrefetchTransferLength;
    UCHAR PrefetchScalar;
    struct {
        USHORT Minimum;
        USHORT Maximum;
        USHORT MaximumBlocks;
    } ScalarPrefetch;
    struct {
        USHORT Minimum;
        USHORT Maximum;
    } BlockPrefetch;
};

typedef struct _DISK_CONTROLLER_NUMBER {
    ULONG ControllerNumber;
    ULONG DiskNumber;
};

typedef struct _DISK_DETECTION_INFO {
    ULONG SizeOfDetectInfo;
    enum _DETECTION_TYPE DetectionType;
    struct _DISK_INT13_INFO Int13;
    struct _DISK_EX_INT13_INFO ExInt13;
};

typedef struct _DISK_EXTENT {
    ULONG DiskNumber;
    union _LARGE_INTEGER StartingOffset;
    union _LARGE_INTEGER ExtentLength;
};

typedef struct _DISK_EX_INT13_INFO {
    USHORT ExBufferSize;
    USHORT ExFlags;
    ULONG ExCylinders;
    ULONG ExHeads;
    ULONG ExSectorsPerTrack;
    ULONG64 ExSectorsPerDrive;
    USHORT ExSectorSize;
    USHORT ExReserved;
};

typedef struct _DISK_GEOMETRY {
    union _LARGE_INTEGER Cylinders;
    enum _MEDIA_TYPE MediaType;
    ULONG TracksPerCylinder;
    ULONG SectorsPerTrack;
    ULONG BytesPerSector;
};

typedef struct _DISK_GEOMETRY_EX {
    struct _DISK_GEOMETRY Geometry;
    union _LARGE_INTEGER DiskSize;
    UCHAR Data[1];
};

typedef struct _DISK_GROW_PARTITION {
    ULONG PartitionNumber;
    union _LARGE_INTEGER BytesToGrow;
};

typedef struct _DISK_HISTOGRAM {
    union _LARGE_INTEGER DiskSize;
    union _LARGE_INTEGER Start;
    union _LARGE_INTEGER End;
    union _LARGE_INTEGER Average;
    union _LARGE_INTEGER AverageRead;
    union _LARGE_INTEGER AverageWrite;
    ULONG Granularity;
    ULONG Size;
    ULONG ReadCount;
    ULONG WriteCount;
    struct _HISTOGRAM_BUCKET *Histogram;
};

typedef struct _DISK_INT13_INFO {
    USHORT DriveSelect;
    ULONG MaxCylinders;
    USHORT SectorsPerTrack;
    USHORT MaxHeads;
    USHORT NumberDrives;
};

typedef struct _DISK_LOGGING {
    UCHAR Function;
    PVOID BufferAddress;
    ULONG BufferSize;
};

typedef struct _DISK_PARTITION_INFO {
    ULONG SizeOfPartitionInfo;
    enum _PARTITION_STYLE PartitionStyle;
    struct {
        ULONG Signature;
        ULONG CheckSum;
    } Mbr;
    struct {
        struct _GUID DiskId;
    } Gpt;
};

typedef struct _DISK_PERFORMANCE {
    union _LARGE_INTEGER BytesRead;
    union _LARGE_INTEGER BytesWritten;
    union _LARGE_INTEGER ReadTime;
    union _LARGE_INTEGER WriteTime;
    union _LARGE_INTEGER IdleTime;
    ULONG ReadCount;
    ULONG WriteCount;
    ULONG QueueDepth;
    ULONG SplitCount;
    union _LARGE_INTEGER QueryTime;
    ULONG StorageDeviceNumber;
    WCHAR StorageManagerName[8];
};

typedef struct _DISK_RECORD {
    union _LARGE_INTEGER ByteOffset;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    PVOID VirtualAddress;
    ULONG NumberOfBytes;
    UCHAR DeviceNumber;
    UCHAR ReadRequest;
};

typedef struct _DISPATCHER_CONTEXT {
    ULONG64 ControlPc;
    ULONG64 ImageBase;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry;
    ULONG64 EstablisherFrame;
    ULONG64 TargetIp;
    struct _CONTEXT *ContextRecord;
    enum _EXCEPTION_DISPOSITION *LanguageHandler;
    PVOID HandlerData;
    struct _UNWIND_HISTORY_TABLE *HistoryTable;
    ULONG ScopeIndex;
    ULONG Fill0;
};

typedef struct _DISPLAYCONFIG_BRIGHTNESS_CAPS {
    UCHAR LegacyLevels[101];
    ULONG LegacyLevelCount;
    struct _DISPLAYCONFIG_BRIGHTNESS_NIT_RANGE NitRanges[16];
    ULONG NormalRangeCount;
    ULONG TotalRangeCount;
    ULONG PreferredMaximumBrightness;
    ULONG bLegacySupported : 1;
    ULONG bNitsSupported : 1;
    ULONG bCalibrated : 1;
    ULONG bSmoothBrightnessSupported : 1;
    ULONG bAdaptiveBrightnessSupported : 1;
    ULONG value;
};

typedef struct _DISPLAYCONFIG_BRIGHTNESS_NIT_RANGE {
    ULONG MinMillinits;
    ULONG MaxMillinits;
    ULONG StepSizeMillinits;
};

typedef struct _DISPLAYCONFIG_COLORIMETRICCONTROL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    LONG bDisableColorimetricProcessing;
};

typedef struct _DISPLAYCONFIG_DEVICEDESC {
    struct _DISPLAYCONFIG_DEVICEID DeviceId;
    ULONG WddmVersion;
    WCHAR wszDeviceDescription[128];
    WCHAR wszInterfaceName[260];
    LONG MismatchedLda;
    LONG IsLda;
};

typedef struct _DISPLAYCONFIG_DEVICEID {
    enum _DISPLAYCONFIG_BUSTYPE BusType;
    ULONG VendorID;
    ULONG DeviceID;
    ULONG SubVendorID;
    ULONG SubSystemID;
    ULONG RevisionID;
};

typedef struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG advancedColorSupported : 1;
    ULONG advancedColorEnabled : 1;
    ULONG wideColorEnforced : 1;
    ULONG advancedColorForceDisabled : 1;
    ULONG reserved : 28;
    ULONG value;
    enum _DISPLAYCONFIG_COLOR_ENCODING colorEncoding;
    ULONG bitsPerColorChannel;
};

typedef struct _DISPLAYCONFIG_GET_DISPLAY_INFO {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct _DISPLAYCONFIG_DEVICEDESC AdapterDeviceDesc;
    struct _DISPLAYCONFIG_DEVICEDESC RenderDeviceDesc;
    struct _RECTL rclDesktop;
    WCHAR wszDisplayName[128];
    ULONG TargetId;
    ULONG DisplayId;
    ULONG MonitorResolutionWidth;
    ULONG MonitorResolutionHeight;
    enum DISPLAYCONFIG_PIXELFORMAT PixelFormat;
    struct DISPLAYCONFIG_RATIONAL RefreshRate;
    enum DISPLAYCONFIG_ROTATION Rotation;
    enum DISPLAYCONFIG_SCANLINE_ORDERING ScanLineOrdering;
    struct _RECTL ClipBox;
    struct _LUID CloneGroupLuid;
    ULONG BitsPerColor;
    ULONG ColorSpace;
    ULONG RedPrimary[2];
    ULONG GreenPrimary[2];
    ULONG BluePrimary[2];
    ULONG WhitePoint[2];
    ULONG MinLuminance;
    ULONG MaxLuminance;
    ULONG MaxFullFrameLuminance;
    enum DISPLAYCONFIG_TARGET_USAGE TargetUsage;
    ULONG SyncLockGroupId;
    enum _DISPLAYCONFIG_SYNC_LOCK_STYLE SyncLockStyle;
    enum _DISPLAYCONFIG_HDR_PIXEL_FORMAT HdrPixelFormat;
     <unnamed-type-Flags>;
    union {
        ULONG IsRemote : 1;
        ULONG IsGdiPrimary : 1;
        ULONG IsPrimaryInCloneGroup : 1;
        ULONG AnyStereoExists : 1;
        ULONG CurModeSupportsStereo : 1;
        ULONG LinkCapsValid : 1;
        ULONG LinkStereo : 1;
        ULONG LinkHighColorSpace : 1;
        ULONG LinkWideColorSpace : 1;
        ULONG LuminanceValuesRaw : 1;
        ULONG IndependentPrimary : 1;
        ULONG Hdr10PlusSupported : 1;
        ULONG LuminanceValuesDefault : 1;
        ULONG PortraitFirst : 1;
        ULONG Reserved : 18;
        ULONG value;
    } Flags;
};

typedef struct _DISPLAYCONFIG_GET_MONITOR_DISPLAYID {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG Length;
    PUCHAR pData;
};

typedef struct _DISPLAYCONFIG_GET_MONITOR_EDID {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG EdidLength;
    UCHAR EdidData[512];
};

typedef struct _DISPLAYCONFIG_GET_MONITOR_INTERNAL_INFO {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR monitorUniqueName[260];
    ULONG RedPrimary[2];
    ULONG GreenPrimary[2];
    ULONG BluePrimary[2];
    ULONG WhitePoint[2];
    ULONG MinLuminance;
    ULONG MaxLuminance;
    ULONG MaxFullFrameLuminance;
     <unnamed-type-ColorspaceSupport>;
    union {
        ULONG BT709 : 1;
        ULONG BT2020YCC : 1;
        ULONG BT2020RGB : 1;
        ULONG value;
    } ColorspaceSupport;
     <unnamed-type-Flags>;
    union {
        ULONG LuminanceValuesRaw : 1;
        ULONG Eotf2084Supported : 1;
        ULONG Hdr10PlusSupported : 1;
        ULONG PortraitFirst : 1;
        ULONG HasEdid : 1;
        ULONG HasDisplayId : 1;
        ULONG DolbyVisionLowLatencySupported : 1;
        ULONG value;
    } Flags;
    struct _DISPLAYCONFIG_BRIGHTNESS_CAPS BrightnessCaps;
    ULONG UsageSubClass;
    ULONG DisplayTech;
    ULONG NativeWidth;
    ULONG NativeHeight;
    ULONG PhysicalWidthInMm;
    ULONG PhysicalHeightInMm;
};

typedef struct _DISPLAYCONFIG_GET_MONITOR_INVERTED {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    LONG bInverted;
};

typedef struct _DISPLAYCONFIG_GET_RENDER_ADAPTER {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct _LUID renderAdapter;
};

typedef struct _DISPLAYCONFIG_GET_SCALE_FACTOR_OVERRIDES {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct _DPI_OVERRIDE_RANGE OverrideRange;
};

typedef struct _DISPLAYCONFIG_GET_TARGET_COLORSPACETRANSFORM_CAPS {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
     <unnamed-type-caps>;
    union {
        ULONG Transform_3x4Matrix : 1;
        ULONG Transform_3x4Matrix_WideColor : 1;
        ULONG Transform_3x4Matrix_HighColor : 1;
        ULONG value;
    } caps;
};

typedef struct _DISPLAYCONFIG_INTERNAL_DISPLAY_ROTATION_MODE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    enum DISPLAYCONFIG_ROTATION RotationMode;
    LONG bNeedSDC;
};

typedef struct _DISPLAYCONFIG_SDR_WHITE_LEVEL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG SDRWhiteLevel;
};

typedef struct _DISPLAYCONFIG_SESSION_INFO {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    LONG RemoteSessionUseWddm;
    LONG RemoteConnectedSessionUsingWddm;
    LONG RemoteConnectedSessionUsingXddm;
    LONG IsWddmConnectedSession;
    LONG IsConsoleSession;
    LONG IsConsoleConnection;
    LONG IsDisconnectConnection;
    USHORT CurrentConnection;
    struct _LUID TerminalLuid;
};

typedef struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_PARAM {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG RedPoint[2];
    ULONG GreenPoint[2];
    ULONG BluePoint[2];
    ULONG WhitePoint[2];
    ULONG MinLuminance;
    ULONG MaxLuminance;
    ULONG MaxFullFrameLuminance;
    LONG EnforceWideColorMode;
};

typedef struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG enableAdvancedColor : 1;
    ULONG reserved : 31;
    ULONG value;
};

typedef struct _DISPLAYCONFIG_SET_SCALE_FACTOR_OVERRIDE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    LONG Override;
};

typedef struct _DISPLAYCONFIG_SET_SDR_WHITE_LEVEL {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    ULONG SDRWhiteLevel;
    UCHAR finalValue;
};

typedef struct _DISPLAY_DEVICEA {
    ULONG cb;
    CHAR DeviceName[32];
    CHAR DeviceString[128];
    ULONG StateFlags;
    CHAR DeviceID[128];
    CHAR DeviceKey[128];
};

typedef struct _DISPLAY_DEVICEW {
    ULONG cb;
    WCHAR DeviceName[32];
    WCHAR DeviceString[128];
    ULONG StateFlags;
    WCHAR DeviceID[128];
    WCHAR DeviceKey[128];
};

typedef struct _DLLVERSIONINFO {
    ULONG cbSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformID;
};

typedef struct _DLLVERSIONINFO2 {
    struct _DLLVERSIONINFO info1;
    ULONG dwFlags;
    ULONG64 ullVersion;
};

typedef struct _DMA_CONFIGURATION_BYTE0 {
    UCHAR Channel : 3;
    UCHAR Reserved : 3;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _DMA_CONFIGURATION_BYTE1 {
    UCHAR Reserved0 : 2;
    UCHAR TransferSize : 2;
    UCHAR Timing : 2;
    UCHAR Reserved1 : 2;
};

typedef struct _DOCINFOA {
    LONG cbSize;
    PCHAR lpszDocName;
    PCHAR lpszOutput;
    PCHAR lpszDatatype;
    ULONG fwType;
};

typedef struct _DOCINFOW {
    LONG cbSize;
    PWCHAR lpszDocName;
    PWCHAR lpszOutput;
    PWCHAR lpszDatatype;
    ULONG fwType;
};

typedef struct _DOC_INFO_1A {
    PCHAR pDocName;
    PCHAR pOutputFile;
    PCHAR pDatatype;
};

typedef struct _DOC_INFO_1W {
    PWCHAR pDocName;
    PWCHAR pOutputFile;
    PWCHAR pDatatype;
};

typedef struct _DOC_INFO_2A {
    PCHAR pDocName;
    PCHAR pOutputFile;
    PCHAR pDatatype;
    ULONG dwMode;
    ULONG JobId;
};

typedef struct _DOC_INFO_2W {
    PWCHAR pDocName;
    PWCHAR pOutputFile;
    PWCHAR pDatatype;
    ULONG dwMode;
    ULONG JobId;
};

typedef struct _DOC_INFO_3A {
    PCHAR pDocName;
    PCHAR pOutputFile;
    PCHAR pDatatype;
    ULONG dwFlags;
};

typedef struct _DOC_INFO_3W {
    PWCHAR pDocName;
    PWCHAR pOutputFile;
    PWCHAR pDatatype;
    ULONG dwFlags;
};

typedef struct _DOMAIN_PASSWORD_INFORMATION {
    USHORT MinPasswordLength;
    USHORT PasswordHistoryLength;
    ULONG PasswordProperties;
    union _LARGE_INTEGER MaxPasswordAge;
    union _LARGE_INTEGER MinPasswordAge;
};

typedef struct _DPA {
};

typedef struct _DPASTREAMINFO {
    LONG iPos;
    PVOID pvItem;
};

typedef struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK {
    ULONG Signature;
    USHORT Revision;
    USHORT Size;
    USHORT DpcWatchdogProfileOffset;
    ULONG DpcWatchdogProfileLength;
};

typedef struct _DPI_INFORMATION {
};

typedef struct _DPI_OVERRIDE_RANGE {
    LONG nMinimum;
    LONG nCurrent;
    LONG nMaximum;
};

typedef struct _DRAGINFOA {
    ULONG uSize;
    struct tagPOINT pt;
    LONG fNC;
    PCHAR lpFileList;
    ULONG grfKeyState;
};

typedef struct _DRAGINFOW {
    ULONG uSize;
    struct tagPOINT pt;
    LONG fNC;
    PWCHAR lpFileList;
    ULONG grfKeyState;
};

typedef struct _DRAWPATRECT {
    struct tagPOINT ptPosition;
    struct tagPOINT ptSize;
    USHORT wStyle;
    USHORT wPattern;
};

typedef struct _DRIVERSTATUS {
    UCHAR bDriverError;
    UCHAR bIDEError;
    UCHAR bReserved[2];
    ULONG dwReserved[2];
};

typedef struct _DRIVER_INFO_1A {
    PCHAR pName;
};

typedef struct _DRIVER_INFO_1W {
    PWCHAR pName;
};

typedef struct _DRIVER_INFO_2A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
};

typedef struct _DRIVER_INFO_2W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
};

typedef struct _DRIVER_INFO_3A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
    PCHAR pHelpFile;
    PCHAR pDependentFiles;
    PCHAR pMonitorName;
    PCHAR pDefaultDataType;
};

typedef struct _DRIVER_INFO_3W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
    PWCHAR pHelpFile;
    PWCHAR pDependentFiles;
    PWCHAR pMonitorName;
    PWCHAR pDefaultDataType;
};

typedef struct _DRIVER_INFO_4A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
    PCHAR pHelpFile;
    PCHAR pDependentFiles;
    PCHAR pMonitorName;
    PCHAR pDefaultDataType;
    PCHAR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_4W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
    PWCHAR pHelpFile;
    PWCHAR pDependentFiles;
    PWCHAR pMonitorName;
    PWCHAR pDefaultDataType;
    PWCHAR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_5A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
    ULONG dwDriverAttributes;
    ULONG dwConfigVersion;
    ULONG dwDriverVersion;
};

typedef struct _DRIVER_INFO_5W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
    ULONG dwDriverAttributes;
    ULONG dwConfigVersion;
    ULONG dwDriverVersion;
};

typedef struct _DRIVER_INFO_6A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
    PCHAR pHelpFile;
    PCHAR pDependentFiles;
    PCHAR pMonitorName;
    PCHAR pDefaultDataType;
    PCHAR pszzPreviousNames;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    PCHAR pszMfgName;
    PCHAR pszOEMUrl;
    PCHAR pszHardwareID;
    PCHAR pszProvider;
};

typedef struct _DRIVER_INFO_6W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
    PWCHAR pHelpFile;
    PWCHAR pDependentFiles;
    PWCHAR pMonitorName;
    PWCHAR pDefaultDataType;
    PWCHAR pszzPreviousNames;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    PWCHAR pszMfgName;
    PWCHAR pszOEMUrl;
    PWCHAR pszHardwareID;
    PWCHAR pszProvider;
};

typedef struct _DRIVER_INFO_8A {
    ULONG cVersion;
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDriverPath;
    PCHAR pDataFile;
    PCHAR pConfigFile;
    PCHAR pHelpFile;
    PCHAR pDependentFiles;
    PCHAR pMonitorName;
    PCHAR pDefaultDataType;
    PCHAR pszzPreviousNames;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    PCHAR pszMfgName;
    PCHAR pszOEMUrl;
    PCHAR pszHardwareID;
    PCHAR pszProvider;
    PCHAR pszPrintProcessor;
    PCHAR pszVendorSetup;
    PCHAR pszzColorProfiles;
    PCHAR pszInfPath;
    ULONG dwPrinterDriverAttributes;
    PCHAR pszzCoreDriverDependencies;
    struct _FILETIME ftMinInboxDriverVerDate;
    ULONG64 dwlMinInboxDriverVerVersion;
};

typedef struct _DRIVER_INFO_8W {
    ULONG cVersion;
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDriverPath;
    PWCHAR pDataFile;
    PWCHAR pConfigFile;
    PWCHAR pHelpFile;
    PWCHAR pDependentFiles;
    PWCHAR pMonitorName;
    PWCHAR pDefaultDataType;
    PWCHAR pszzPreviousNames;
    struct _FILETIME ftDriverDate;
    ULONG64 dwlDriverVersion;
    PWCHAR pszMfgName;
    PWCHAR pszOEMUrl;
    PWCHAR pszHardwareID;
    PWCHAR pszProvider;
    PWCHAR pszPrintProcessor;
    PWCHAR pszVendorSetup;
    PWCHAR pszzColorProfiles;
    PWCHAR pszInfPath;
    ULONG dwPrinterDriverAttributes;
    PWCHAR pszzCoreDriverDependencies;
    struct _FILETIME ftMinInboxDriverVerDate;
    ULONG64 dwlMinInboxDriverVerVersion;
};

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS {
    PULONG64 PristineRoutine;
    PULONG64 NewRoutine;
};

typedef struct _DRIVE_LAYOUT_INFORMATION {
    ULONG PartitionCount;
    ULONG Signature;
    struct _PARTITION_INFORMATION PartitionEntry[1];
};

typedef struct _DRIVE_LAYOUT_INFORMATION_EX {
    ULONG PartitionStyle;
    ULONG PartitionCount;
    struct _DRIVE_LAYOUT_INFORMATION_MBR Mbr;
    struct _DRIVE_LAYOUT_INFORMATION_GPT Gpt;
    struct _PARTITION_INFORMATION_EX PartitionEntry[1];
};

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT {
    struct _GUID DiskId;
    union _LARGE_INTEGER StartingUsableOffset;
    union _LARGE_INTEGER UsableLength;
    ULONG MaxPartitionCount;
};

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR {
    ULONG Signature;
    ULONG CheckSum;
};

typedef struct _DROPFILES {
    ULONG pFiles;
    struct tagPOINT pt;
    LONG fNC;
    LONG fWide;
};

typedef struct _DROPFILES16 {
    USHORT pFiles;
    struct tagPOINTS pt;
    USHORT fNC;
};

typedef struct _DSA {
};

typedef struct _DSSSEED {
    ULONG counter;
    UCHAR seed[20];
};

typedef struct _DS_HEADER {
    ULONG magic;
};

typedef struct _DS_NINEGRID {
    ULONG ulCmdID;
    struct _RECTL rclDst;
    struct _RECTL rclSrc;
    struct _DS_NINEGRIDINFO ngi;
};

typedef struct _DS_NINEGRIDINFO {
    ULONG flFlags;
    LONG ulLeftWidth;
    LONG ulRightWidth;
    LONG ulTopHeight;
    LONG ulBottomHeight;
    ULONG crTransparent;
};

typedef struct _DS_SETSOURCE {
    ULONG ulCmdID;
    ULONG hbm;
};

typedef struct _DS_SETTARGET {
    ULONG ulCmdID;
    ULONG hdc;
    struct _RECTL rclDstClip;
};

typedef struct _DTBGOPTS {
    ULONG dwSize;
    ULONG dwFlags;
    struct tagRECT rcClip;
};

typedef struct _DTTOPTS {
    ULONG dwSize;
    ULONG dwFlags;
    ULONG crText;
    ULONG crBorder;
    ULONG crShadow;
    LONG iTextShadowType;
    struct tagPOINT ptShadowOffset;
    LONG iBorderSize;
    LONG iFontPropId;
    LONG iColorPropId;
    LONG iStateId;
    LONG fApplyOverlay;
    LONG iGlowSize;
    PLONG pfnDrawTextCallback;
    LONG64 lParam;
};

typedef struct _DUPLICATE_EXTENTS_DATA {
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _DUPLICATE_EXTENTS_DATA32 {
    ULONG FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _DUPLICATE_EXTENTS_DATA_EX {
    ULONG64 Size;
    PVOID FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
    ULONG Flags;
};

typedef struct _DUPLICATE_EXTENTS_DATA_EX32 {
    ULONG Size;
    ULONG FileHandle;
    union _LARGE_INTEGER SourceFileOffset;
    union _LARGE_INTEGER TargetFileOffset;
    union _LARGE_INTEGER ByteCount;
    ULONG Flags;
};

typedef struct _DWMREDIR_SPRITEFLAGS {
    ULONG fVisible : 1;
    ULONG fHintedShape : 1;
    ULONG fClipToDirty : 1;
    ULONG fNewSurface : 1;
    ULONG fComposeOnce : 1;
    ULONG fMonoRender : 1;
    ULONG fProtectedContent : 1;
    ULONG fSurfaceComplete : 1;
    ULONG fSynchronizedLayoutResizeStarted : 1;
    ULONG fReserved : 23;
};

typedef struct _DWM_BLURBEHIND {
    ULONG dwFlags;
    LONG fEnable;
    struct HRGN__ *hRgnBlur;
    LONG fTransitionOnMaximized;
};

typedef struct _DWM_COLORIZATION_PARAMETERS {
    ULONG color;
    ULONG afterglow;
    ULONG colorBalance;
    ULONG afterglowBalance;
    ULONG blurBalance;
    LONG enableWindowColorization;
    enum DWMPGLASSATTRIBUTE glassAttribute;
};

typedef struct _DWM_GLOBAL_STATE {
    ULONG cbSize;
    ULONG dwFlags;
    LONG fTransparentBlendAllowed;
    LONG fColorizationChangesAllowed;
};

typedef struct _DWM_NCADORNMENT_INFO {
    enum DWMNCADORNMENT adornment;
    struct tagRECT rcWindow;
};

typedef struct _DWM_PRESENT_PARAMETERS {
    ULONG cbSize;
    LONG fQueue;
    ULONG64 cRefreshStart;
    ULONG cBuffer;
    LONG fUseSourceRate;
    struct _UNSIGNED_RATIO rateSource;
    ULONG cRefreshesPerFrame;
    enum DWM_SOURCE_FRAME_SAMPLING eSampling;
};

typedef struct _DWM_SWAPCHAINRENDERTARGET_METADATA_DATA_FRAMETIME {
    ULONG64 frameTime;
    ULONG64 frameTimeFrequency;
};

typedef struct _DWM_THUMBNAIL_PROPERTIES {
    ULONG dwFlags;
    struct tagRECT rcDestination;
    struct tagRECT rcSource;
    UCHAR opacity;
    LONG fVisible;
    LONG fSourceClientAreaOnly;
};

typedef struct _DWM_TIMING_INFO {
    ULONG cbSize;
    struct _UNSIGNED_RATIO rateRefresh;
    ULONG64 qpcRefreshPeriod;
    struct _UNSIGNED_RATIO rateCompose;
    ULONG64 qpcVBlank;
    ULONG64 cRefresh;
    ULONG cDXRefresh;
    ULONG64 qpcCompose;
    ULONG64 cFrame;
    ULONG cDXPresent;
    ULONG64 cRefreshFrame;
    ULONG64 cFrameSubmitted;
    ULONG cDXPresentSubmitted;
    ULONG64 cFrameConfirmed;
    ULONG cDXPresentConfirmed;
    ULONG64 cRefreshConfirmed;
    ULONG cDXRefreshConfirmed;
    ULONG64 cFramesLate;
    ULONG cFramesOutstanding;
    ULONG64 cFrameDisplayed;
    ULONG64 qpcFrameDisplayed;
    ULONG64 cRefreshFrameDisplayed;
    ULONG64 cFrameComplete;
    ULONG64 qpcFrameComplete;
    ULONG64 cFramePending;
    ULONG64 qpcFramePending;
    ULONG64 cFramesDisplayed;
    ULONG64 cFramesComplete;
    ULONG64 cFramesPending;
    ULONG64 cFramesAvailable;
    ULONG64 cFramesDropped;
    ULONG64 cFramesMissed;
    ULONG64 cRefreshNextDisplayed;
    ULONG64 cRefreshNextPresented;
    ULONG64 cRefreshesDisplayed;
    ULONG64 cRefreshesPresented;
    ULONG64 cRefreshStarted;
    ULONG64 cPixelsReceived;
    ULONG64 cPixelsDrawn;
    ULONG64 cBuffersEmpty;
};

typedef struct _DWM_TIMING_INFO_EX {
    struct _DWM_TIMING_INFO TimingInfo;
    ULONG64 uliSerialNumber;
    ULONG64 uliSerialNumberLastPresent;
    ULONG64 uliSerialNumberDisplayed;
};

typedef struct _DWORD_BLOB {
    ULONG clSize;
    ULONG alData[1];
};

typedef struct _DYNAMIC_FUNCTION_TABLE {
    struct _LIST_ENTRY ListEntry;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionTable;
    union _LARGE_INTEGER TimeStamp;
    ULONG64 MinimumAddress;
    ULONG64 MaximumAddress;
    ULONG64 BaseAddress;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY **Callback;
    PVOID Context;
    PWCHAR OutOfProcessCallbackDll;
    enum _FUNCTION_TABLE_TYPE Type;
    ULONG EntryCount;
    struct _RTL_BALANCED_NODE TreeNode;
};

typedef struct _DesiredStorageClass {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _EFI_DRIVER_ENTRY {
    ULONG Version;
    ULONG Length;
    ULONG Id;
    ULONG FriendlyNameOffset;
    ULONG DriverFilePathOffset;
};

typedef struct _EFI_DRIVER_ENTRY_LIST {
    ULONG NextEntryOffset;
    struct _EFI_DRIVER_ENTRY DriverEntry;
};

typedef struct _EFS_COMPATIBILITY_INFO {
    ULONG EfsVersion;
};

typedef struct _EFS_DECRYPTION_STATUS_INFO {
    ULONG dwDecryptionError;
    ULONG dwHashOffset;
    ULONG cbHash;
};

typedef struct _EFS_ENCRYPTION_STATUS_INFO {
    LONG bHasCurrentKey;
    ULONG dwEncryptionError;
};

typedef struct _EFS_HASH_BLOB {
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _EFS_KEY_INFO {
    ULONG dwVersion;
    ULONG Entropy;
    ULONG Algorithm;
    ULONG KeyLength;
};

typedef struct _EFS_PIN_BLOB {
    ULONG cbPadding;
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _EFS_RPC_BLOB {
    ULONG cbData;
    PUCHAR pbData;
};

typedef struct _EFS_VERSION_INFO {
    ULONG EfsVersion;
    ULONG SubVersion;
};

typedef struct _EISA_DMA_CONFIGURATION {
    struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
    struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
};

typedef struct _EISA_IRQ_CONFIGURATION {
    struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
    UCHAR Reserved;
};

typedef struct _EISA_IRQ_DESCRIPTOR {
    UCHAR Interrupt : 4;
    UCHAR Reserved : 1;
    UCHAR LevelTriggered : 1;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _EISA_MEMORY_CONFIGURATION {
    struct _EISA_MEMORY_TYPE ConfigurationByte;
    UCHAR DataSize;
    USHORT AddressLowWord;
    UCHAR AddressHighByte;
    USHORT MemorySize;
};

typedef struct _EISA_MEMORY_TYPE {
    UCHAR ReadWrite : 1;
    UCHAR Cached : 1;
    UCHAR Reserved0 : 1;
    UCHAR Type : 2;
    UCHAR Shared : 1;
    UCHAR Reserved1 : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _EISA_PORT_CONFIGURATION {
    struct _EISA_PORT_DESCRIPTOR Configuration;
    USHORT PortAddress;
};

typedef struct _EISA_PORT_DESCRIPTOR {
    UCHAR NumberPorts : 5;
    UCHAR Reserved : 1;
    UCHAR Shared : 1;
    UCHAR MoreEntries : 1;
};

typedef struct _ENCLAVE_CREATE_INFO_SGX {
    UCHAR Secs[4096];
};

typedef struct _ENCLAVE_CREATE_INFO_VBS {
    ULONG Flags;
    UCHAR OwnerID[32];
};

typedef struct _ENCLAVE_INIT_INFO_SGX {
    UCHAR SigStruct[1808];
    UCHAR Reserved1[240];
    UCHAR EInitToken[304];
    UCHAR Reserved2[1744];
};

typedef struct _ENCLAVE_INIT_INFO_VBS {
    ULONG Length;
    ULONG ThreadCount;
};

typedef struct _ENCLAVE_LOAD_INFO_VBS {
    PVOID ImageHandle;
    ULONG64 Unused;
    USHORT NameLength;
    WCHAR Name[1];
};

typedef struct _ENCRYPTED_DATA_INFO {
    ULONG64 StartingFileOffset;
    ULONG OutputBufferOffset;
    ULONG BytesWithinFileSize;
    ULONG BytesWithinValidDataLength;
    USHORT CompressionFormat;
    UCHAR DataUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR EncryptionFormat;
    USHORT NumberOfDataBlocks;
    ULONG DataBlockSize[1];
};

typedef struct _ENCRYPTED_FILE_METADATA_SIGNATURE {
    ULONG dwEfsAccessType;
    struct _ENCRYPTION_CERTIFICATE_HASH_LIST *pCertificatesAdded;
    struct _ENCRYPTION_CERTIFICATE *pEncryptionCertificate;
    struct _EFS_RPC_BLOB *pEfsStreamSignature;
};

typedef struct _ENCRYPTION_BUFFER {
    ULONG EncryptionOperation;
    UCHAR Private[1];
};

typedef struct _ENCRYPTION_CERTIFICATE {
    ULONG cbTotalLength;
    struct _SID *pUserSid;
    struct _CERTIFICATE_BLOB *pCertBlob;
};

typedef struct _ENCRYPTION_CERTIFICATE_HASH {
    ULONG cbTotalLength;
    struct _SID *pUserSid;
    struct _EFS_HASH_BLOB *pHash;
    PWCHAR lpDisplayInformation;
};

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST {
    ULONG nCert_Hash;
    struct _ENCRYPTION_CERTIFICATE_HASH **pUsers;
};

typedef struct _ENCRYPTION_CERTIFICATE_LIST {
    ULONG nUsers;
    struct _ENCRYPTION_CERTIFICATE **pUsers;
};

typedef struct _ENCRYPTION_KEY_CTRL_INPUT {
    ULONG HeaderSize;
    ULONG StructureSize;
    USHORT KeyOffset;
    USHORT KeySize;
    ULONG DplLock;
    ULONG64 DplUserId;
    ULONG64 DplCredentialId;
};

typedef struct _ENCRYPTION_PROTECTOR {
    ULONG cbTotalLength;
    struct _SID *pUserSid;
    PWCHAR lpProtectorDescriptor;
};

typedef struct _ENCRYPTION_PROTECTOR_LIST {
    ULONG nProtectors;
    struct _ENCRYPTION_PROTECTOR **pProtectors;
};

typedef struct _ENLISTMENT_BASIC_INFORMATION {
    struct _GUID EnlistmentId;
    struct _GUID TransactionId;
    struct _GUID ResourceManagerId;
};

typedef struct _ENLISTMENT_CRM_INFORMATION {
    struct _GUID CrmTransactionManagerId;
    struct _GUID CrmResourceManagerId;
    struct _GUID CrmEnlistmentId;
};

typedef struct _ENUMTHEMEPROPERTIES {
    ULONG cbStruct;
    PWCHAR pszMSStylesFile;
    PWCHAR pszColorVariant;
    PWCHAR pszSizeVariant;
    PWCHAR *prgClassFilter;
    ULONG cClassFilter;
    PLONG prgSymbolFilter;
    ULONG cSymbolFilter;
    PLONG prgTypeFilter;
    ULONG cTypeFilter;
    PVOID pvParam;
    PLONG pfnCB;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<1> {
    CHAR type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<2> {
    SHORT type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<4> {
    LONG type;
};

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<8> {
    LONG64 type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ACTIVATEOPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ADJACENT_DISPLAY_EDGES> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ASSOC_FILTER> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CATEGORYINFO_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CATSORT_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CDCONTROLSTATEF> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CM_ENUM_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CM_MASK> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CM_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DATAOBJ_GET_ITEM_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DEFAULT_FOLDER_MENU_RESTRICTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DESKTOP_SLIDESHOW_OPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DESKTOP_SLIDESHOW_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIT_HITTESTATTRIBUTES> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DWMTRANSITION_TARGET> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DWM_SHOWCONTACT> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DWM_TAB_WINDOW_REQUIREMENTS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum EXPLORER_BROWSER_FILL_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum EXPLORER_BROWSER_OPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum EXTCOCREATEFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ExtensionListStalenessFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FILETYPEATTRIBUTEFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FILE_OPERATION_FLAGS2> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FOLDERFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum GETPROPERTYSTOREFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum GROUP_WINDOW_MANAGEMENT_POLICY> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum HOMEGROUPSHARINGCHOICES> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum INPUTDELEGATION_MODE_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_DESTINATION_IDENTITY> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_SPACE_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum INPUT_SPACE_REGION_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum KNOWN_FOLDER_FLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYMANAGEDIALOGOPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYOPTIONFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum LIBRARYSAVEFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum MCFFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum NAMESPACEWALKFLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum NSTCFOLDERCAPABILITIES> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum NWMF> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PERSIST_SPROPSTORE_FLAGS_PRIV> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PLACEHOLDER_STATES> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROCESS_UI_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_FORMAT_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_SEARCHINFO_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_TYPE_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_TYPE_FLAGS_EX> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PROPDESC_VIEW_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum RO_ERROR_REPORTING_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SCALE_CHANGE_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SCHEMAVIEW_AGGREGATIONRULE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SET_WINDOW_GROUP_OPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SHELL_EXEC_CMD_LINE_OPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SHELL_LINK_DATA_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SIATTRIBFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SIMPLE_IDLIST_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SLGP_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SLR_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SPATIAL_INPUT_ACTIVATION_POLICY> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum STORAGE_PROVIDER_FILE_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum STPFLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum SYNC_TRANSFER_STATUS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum TA_PROPERTY_FLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum TA_TRANSFORM_FLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum TA_TRANSFORM_FLAG_EXT> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum TBPFLAG> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum THREADFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum THUMBBUTTONFLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum THUMBBUTTONMASK> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum Windows::Foundation::Diagnostics::RoErrorReportingFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _INTERCEPTOR_MOUSE_SYSTEM_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _InputMessageNotificationFlags> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _MOUSEPROCESSOR_PROCESSING_OPTIONS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _MOUSE_PREINTERCEPT_BEHAVIOR> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _SVGIO> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::ActivityOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::EventOptions> {
    LONG type;
};

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum wil::details::ReportFailureOptions> {
    LONG type;
};

typedef struct _ENUM_SERVICE_STATUSA {
    PCHAR lpServiceName;
    PCHAR lpDisplayName;
    struct _SERVICE_STATUS ServiceStatus;
};

typedef struct _ENUM_SERVICE_STATUSW {
    PWCHAR lpServiceName;
    PWCHAR lpDisplayName;
    struct _SERVICE_STATUS ServiceStatus;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSA {
    PCHAR lpServiceName;
    PCHAR lpDisplayName;
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSW {
    PWCHAR lpServiceName;
    PWCHAR lpDisplayName;
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _ERROR_CODES_INFO {
    ULONG ClientErrorCode;
    LONG WinlogonErrorCode;
};

typedef struct _ETW_BUFFER_CONTEXT {
    UCHAR ProcessorNumber;
    UCHAR Alignment;
    USHORT ProcessorIndex;
    USHORT LoggerId;
};

typedef struct _EVENTLOGRECORD {
    ULONG Length;
    ULONG Reserved;
    ULONG RecordNumber;
    ULONG TimeGenerated;
    ULONG TimeWritten;
    ULONG EventID;
    USHORT EventType;
    USHORT NumStrings;
    USHORT EventCategory;
    USHORT ReservedFlags;
    ULONG ClosingRecordNumber;
    ULONG StringOffset;
    ULONG UserSidLength;
    ULONG UserSidOffset;
    ULONG DataLength;
    ULONG DataOffset;
};

typedef struct _EVENTLOG_FULL_INFORMATION {
    ULONG dwFull;
};

typedef struct _EVENTSFORLOGFILE {
    ULONG ulSize;
    WCHAR szLogicalLogFile[256];
    ULONG ulNumRecords;
    struct _EVENTLOGRECORD pEventLogRecords[0];
};

typedef struct _EVENT_BASIC_INFORMATION {
    enum _EVENT_TYPE EventType;
    LONG EventState;
};

typedef struct _EVENT_DATA_DESCRIPTOR {
    ULONG64 Ptr;
    ULONG Size;
    ULONG Reserved;
    UCHAR Type;
    UCHAR Reserved1;
    USHORT Reserved2;
};

typedef struct _EVENT_DESCRIPTOR {
    USHORT Id;
    UCHAR Version;
    UCHAR Channel;
    UCHAR Level;
    UCHAR Opcode;
    USHORT Task;
    ULONG64 Keyword;
};

typedef struct _EVENT_FILTER_DESCRIPTOR {
    ULONG64 Ptr;
    ULONG Size;
    ULONG Type;
};

typedef struct _EVENT_FILTER_EVENT_ID {
    UCHAR FilterIn;
    UCHAR Reserved;
    USHORT Count;
    USHORT Events[1];
};

typedef struct _EVENT_FILTER_EVENT_NAME {
    ULONG64 MatchAnyKeyword;
    ULONG64 MatchAllKeyword;
    UCHAR Level;
    UCHAR FilterIn;
    USHORT NameCount;
    UCHAR Names[1];
};

typedef struct _EVENT_FILTER_HEADER {
    USHORT Id;
    UCHAR Version;
    UCHAR Reserved[5];
    ULONG64 InstanceId;
    ULONG Size;
    ULONG NextOffset;
};

typedef struct _EVENT_FILTER_LEVEL_KW {
    ULONG64 MatchAnyKeyword;
    ULONG64 MatchAllKeyword;
    UCHAR Level;
    UCHAR FilterIn;
};

typedef struct _EVENT_HEADER {
    USHORT Size;
    USHORT HeaderType;
    USHORT Flags;
    USHORT EventProperty;
    ULONG ThreadId;
    ULONG ProcessId;
    union _LARGE_INTEGER TimeStamp;
    struct _GUID ProviderId;
    struct _EVENT_DESCRIPTOR EventDescriptor;
    ULONG KernelTime;
    ULONG UserTime;
    ULONG64 ProcessorTime;
    struct _GUID ActivityId;
};

typedef struct _EVENT_HEADER_EXTENDED_DATA_ITEM {
    USHORT Reserved1;
    USHORT ExtType;
    USHORT Linkage : 1;
    USHORT Reserved2 : 15;
    USHORT DataSize;
    ULONG64 DataPtr;
};

typedef struct _EVENT_RECORD {
    struct _EVENT_HEADER EventHeader;
    struct _ETW_BUFFER_CONTEXT BufferContext;
    USHORT ExtendedDataCount;
    USHORT UserDataLength;
    struct _EVENT_HEADER_EXTENDED_DATA_ITEM *ExtendedData;
    PVOID UserData;
    PVOID UserContext;
};

typedef struct _EVENT_TRACE_HEADER {
    USHORT Size;
    USHORT FieldTypeFlags;
    UCHAR HeaderType;
    UCHAR MarkerFlags;
    ULONG Version;
    struct {
        UCHAR Type;
        UCHAR Level;
        USHORT Version;
    } Class;
    ULONG ThreadId;
    ULONG ProcessId;
    union _LARGE_INTEGER TimeStamp;
    struct _GUID Guid;
    ULONG64 GuidPtr;
    ULONG KernelTime;
    ULONG UserTime;
    ULONG64 ProcessorTime;
    ULONG ClientContext;
    ULONG Flags;
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwRootProgramQualifierFlags;
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwQualifiers;
    ULONG dwIssuanceUsageIndex;
};

typedef struct _EXCEPTION_DEBUG_INFO {
    struct _EXCEPTION_RECORD ExceptionRecord;
    ULONG dwFirstChance;
};

typedef struct _EXCEPTION_LOG {
    struct _EXCEPTION_RECORD ExceptionRecord;
    struct _CONTEXT ContextRecord;
    enum _EXCEPTION_LOG_TYPE Type;
    LONG Disposition;
    ULONG64 Thread;
    ULONG64 ControlPc;
    PVOID Handler;
};

typedef struct _EXCEPTION_POINTERS {
    struct _EXCEPTION_RECORD *ExceptionRecord;
    struct _CONTEXT *ContextRecord;
};

typedef struct _EXCEPTION_RECORD {
    LONG ExceptionCode;
    ULONG ExceptionFlags;
    struct _EXCEPTION_RECORD *ExceptionRecord;
    PVOID ExceptionAddress;
    ULONG NumberParameters;
    ULONG64 ExceptionInformation[15];
};

typedef struct _EXCEPTION_RECORD32 {
    LONG ExceptionCode;
    ULONG ExceptionFlags;
    ULONG ExceptionRecord;
    ULONG ExceptionAddress;
    ULONG NumberParameters;
    ULONG ExceptionInformation[15];
};

typedef struct _EXCEPTION_RECORD64 {
    LONG ExceptionCode;
    ULONG ExceptionFlags;
    ULONG64 ExceptionRecord;
    ULONG64 ExceptionAddress;
    ULONG NumberParameters;
    ULONG __unusedAlignment;
    ULONG64 ExceptionInformation[15];
};

typedef struct _EXCEPTION_REGISTRATION_RECORD {
    struct _EXCEPTION_REGISTRATION_RECORD *Next;
    enum _EXCEPTION_DISPOSITION *Handler;
};

typedef struct _EXECENVDATAEX {
    ULONG Level;
    union _ExecEnvDataEx Data;
};

typedef struct _EXECENVDATAEX_LEVEL1 {
    LONG ExecEnvId;
    LONG State;
    LONG AbsSessionId;
    PWCHAR pszSessionName;
    PWCHAR pszHostName;
    PWCHAR pszUserName;
    PWCHAR pszDomainName;
    PWCHAR pszFarmName;
};

typedef struct _EXECENV_ENUMINFOW {
    LONG ExecEnvId;
    LONG State;
    WCHAR SessionName[33];
    LONG AbsSessionId;
    WCHAR HostName[33];
    WCHAR UserName[33];
    WCHAR DomainName[33];
    WCHAR FarmName[33];
};

typedef struct _EXFAT_STATISTICS {
    ULONG CreateHits;
    ULONG SuccessfulCreates;
    ULONG FailedCreates;
    ULONG NonCachedReads;
    ULONG NonCachedReadBytes;
    ULONG NonCachedWrites;
    ULONG NonCachedWriteBytes;
    ULONG NonCachedDiskReads;
    ULONG NonCachedDiskWrites;
};

typedef struct _EXIT_PROCESS_DEBUG_INFO {
    ULONG dwExitCode;
};

typedef struct _EXIT_THREAD_DEBUG_INFO {
    ULONG dwExitCode;
};

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO {
    ULONG ExtendedCode;
    ULONG Length;
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _EXTENT_READ_CACHE_INFO_BUFFER {
    union _LARGE_INTEGER AllocatedCache;
    union _LARGE_INTEGER PopulatedCache;
    union _LARGE_INTEGER InErrorCache;
};

typedef struct _EXTTEXTMETRIC {
    SHORT etmSize;
    SHORT etmPointSize;
    SHORT etmOrientation;
    SHORT etmMasterHeight;
    SHORT etmMinScale;
    SHORT etmMaxScale;
    SHORT etmMasterUnits;
    SHORT etmCapHeight;
    SHORT etmXHeight;
    SHORT etmLowerCaseAscent;
    SHORT etmLowerCaseDescent;
    SHORT etmSlant;
    SHORT etmSuperScript;
    SHORT etmSubScript;
    SHORT etmSuperScriptSize;
    SHORT etmSubScriptSize;
    SHORT etmUnderlineOffset;
    SHORT etmUnderlineWidth;
    SHORT etmDoubleUpperUnderlineOffset;
    SHORT etmDoubleLowerUnderlineOffset;
    SHORT etmDoubleUpperUnderlineWidth;
    SHORT etmDoubleLowerUnderlineWidth;
    SHORT etmStrikeOutOffset;
    SHORT etmStrikeOutWidth;
    USHORT etmNKernPairs;
    USHORT etmNKernTracks;
};

typedef struct _EX_WNF_SUBSCRIPTION {
};

typedef struct _ExtendedClientCredentials {
    WCHAR UserName[256];
    WCHAR Password[256];
    WCHAR Domain[256];
};

typedef struct _ExtensibilityMouseInputData {
    PVOID hDevice;
    ULONG time;
    ULONG64 qpcTime;
    USHORT mouseFlags;
    USHORT buttonFlags;
    USHORT buttonData;
    LONG dx;
    LONG dy;
};

typedef struct _FAT_STATISTICS {
    ULONG CreateHits;
    ULONG SuccessfulCreates;
    ULONG FailedCreates;
    ULONG NonCachedReads;
    ULONG NonCachedReadBytes;
    ULONG NonCachedWrites;
    ULONG NonCachedWriteBytes;
    ULONG NonCachedDiskReads;
    ULONG NonCachedDiskWrites;
};

typedef struct _FDSA {
    LONG cItem;
    PVOID aItem;
    LONG cItemAlloc;
    LONG cItemGrow : 8;
    LONG cbItem : 8;
    ULONG fAllocated : 1;
    ULONG unused : 15;
};

typedef struct _FIBER {
    PVOID FiberData;
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID DeallocationStack;
    struct _CONTEXT FiberContext;
    struct _Wx86TIB *Wx86Tib;
    struct _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
    PVOID FlsData;
    ULONG GuaranteedStackBytes;
    USHORT TebFlags;
    USHORT ReservedPad;
    ULONG64 FiberCookie;
};

typedef struct _FILEDESCRIPTORA {
    ULONG dwFlags;
    struct _GUID clsid;
    struct tagSIZE sizel;
    struct _POINTL pointl;
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    CHAR cFileName[260];
};

typedef struct _FILEDESCRIPTORW {
    ULONG dwFlags;
    struct _GUID clsid;
    struct tagSIZE sizel;
    struct _POINTL pointl;
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    WCHAR cFileName[260];
};

typedef struct _FILEGROUPDESCRIPTORA {
    ULONG cItems;
    struct _FILEDESCRIPTORA fgd[1];
};

typedef struct _FILEGROUPDESCRIPTORW {
    ULONG cItems;
    struct _FILEDESCRIPTORW fgd[1];
};

typedef struct _FILEMUIINFO {
    ULONG dwSize;
    ULONG dwVersion;
    ULONG dwFileType;
    UCHAR pChecksum[16];
    UCHAR pServiceChecksum[16];
    ULONG dwLanguageNameOffset;
    ULONG dwTypeIDMainSize;
    ULONG dwTypeIDMainOffset;
    ULONG dwTypeNameMainOffset;
    ULONG dwTypeIDMUISize;
    ULONG dwTypeIDMUIOffset;
    ULONG dwTypeNameMUIOffset;
    UCHAR abBuffer[8];
};

typedef struct _FILEOFFSET_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 Offset : 48;
    ULONG64 Reserved : 7;
};

typedef struct _FILESYSTEM_STATISTICS {
    USHORT FileSystemType;
    USHORT Version;
    ULONG SizeOfCompleteStructure;
    ULONG UserFileReads;
    ULONG UserFileReadBytes;
    ULONG UserDiskReads;
    ULONG UserFileWrites;
    ULONG UserFileWriteBytes;
    ULONG UserDiskWrites;
    ULONG MetaDataReads;
    ULONG MetaDataReadBytes;
    ULONG MetaDataDiskReads;
    ULONG MetaDataWrites;
    ULONG MetaDataWriteBytes;
    ULONG MetaDataDiskWrites;
};

typedef struct _FILESYSTEM_STATISTICS_EX {
    USHORT FileSystemType;
    USHORT Version;
    ULONG SizeOfCompleteStructure;
    ULONG64 UserFileReads;
    ULONG64 UserFileReadBytes;
    ULONG64 UserDiskReads;
    ULONG64 UserFileWrites;
    ULONG64 UserFileWriteBytes;
    ULONG64 UserDiskWrites;
    ULONG64 MetaDataReads;
    ULONG64 MetaDataReadBytes;
    ULONG64 MetaDataDiskReads;
    ULONG64 MetaDataWrites;
    ULONG64 MetaDataWriteBytes;
    ULONG64 MetaDataDiskWrites;
};

typedef struct _FILETIME {
    ULONG dwLowDateTime;
    ULONG dwHighDateTime;
};

typedef struct _FILE_ACCESS_INFORMATION {
    ULONG AccessFlags;
};

typedef struct _FILE_ALIGNMENT_INFO {
    ULONG AlignmentRequirement;
};

typedef struct _FILE_ALIGNMENT_INFORMATION {
    ULONG AlignmentRequirement;
};

typedef struct _FILE_ALLOCATED_RANGE_BUFFER {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER Length;
};

typedef struct _FILE_ALLOCATION_INFO {
    union _LARGE_INTEGER AllocationSize;
};

typedef struct _FILE_ALLOCATION_INFORMATION {
    union _LARGE_INTEGER AllocationSize;
};

typedef struct _FILE_ALL_INFORMATION {
    struct _FILE_BASIC_INFORMATION BasicInformation;
    struct _FILE_STANDARD_INFORMATION StandardInformation;
    struct _FILE_INTERNAL_INFORMATION InternalInformation;
    struct _FILE_EA_INFORMATION EaInformation;
    struct _FILE_ACCESS_INFORMATION AccessInformation;
    struct _FILE_POSITION_INFORMATION PositionInformation;
    struct _FILE_MODE_INFORMATION ModeInformation;
    struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
    struct _FILE_NAME_INFORMATION NameInformation;
};

typedef struct _FILE_ATTRIBUTE_TAG_INFO {
    ULONG FileAttributes;
    ULONG ReparseTag;
};

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION {
    ULONG FileAttributes;
    ULONG ReparseTag;
};

typedef struct _FILE_BASIC_INFO {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    ULONG FileAttributes;
};

typedef struct _FILE_BASIC_INFORMATION {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    ULONG FileAttributes;
};

typedef struct _FILE_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    WCHAR FileName[1];
};

typedef struct _FILE_CASE_SENSITIVE_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_COMPLETION_INFORMATION {
    PVOID Port;
    PVOID Key;
};

typedef struct _FILE_COMPRESSION_INFO {
    union _LARGE_INTEGER CompressedFileSize;
    USHORT CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
};

typedef struct _FILE_COMPRESSION_INFORMATION {
    union _LARGE_INTEGER CompressedFileSize;
    USHORT CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
};

typedef struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _FILE_DIRECTORY_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_DISPOSITION_INFO {
    UCHAR DeleteFileW;
};

typedef struct _FILE_DISPOSITION_INFORMATION {
    UCHAR DeleteFile;
};

typedef struct _FILE_DISPOSITION_INFORMATION_EX {
    ULONG Flags;
};

typedef struct _FILE_DISPOSITION_INFO_EX {
    ULONG Flags;
};

typedef struct _FILE_EA_INFORMATION {
    ULONG EaSize;
};

typedef struct _FILE_END_OF_FILE_INFO {
    union _LARGE_INTEGER EndOfFile;
};

typedef struct _FILE_END_OF_FILE_INFORMATION {
    union _LARGE_INTEGER EndOfFile;
};

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION {
    ULONG FileSystemAttributes;
    LONG MaximumComponentNameLength;
    ULONG FileSystemNameLength;
    WCHAR FileSystemName[1];
};

typedef struct _FILE_FS_CONTROL_INFORMATION {
    union _LARGE_INTEGER FreeSpaceStartFiltering;
    union _LARGE_INTEGER FreeSpaceThreshold;
    union _LARGE_INTEGER FreeSpaceStopFiltering;
    union _LARGE_INTEGER DefaultQuotaThreshold;
    union _LARGE_INTEGER DefaultQuotaLimit;
    ULONG FileSystemControlFlags;
};

typedef struct _FILE_FS_DATA_COPY_INFORMATION {
    ULONG NumberOfCopies;
};

typedef struct _FILE_FS_DEVICE_INFORMATION {
    ULONG DeviceType;
    ULONG Characteristics;
};

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION {
    UCHAR DriverInPath;
    ULONG DriverNameLength;
    WCHAR DriverName[1];
};

typedef struct _FILE_FS_FULL_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalAllocationUnits;
    union _LARGE_INTEGER CallerAvailableAllocationUnits;
    union _LARGE_INTEGER ActualAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_FULL_SIZE_INFORMATION_EX {
    ULONG64 ActualTotalAllocationUnits;
    ULONG64 ActualAvailableAllocationUnits;
    ULONG64 ActualPoolUnavailableAllocationUnits;
    ULONG64 CallerTotalAllocationUnits;
    ULONG64 CallerAvailableAllocationUnits;
    ULONG64 CallerPoolUnavailableAllocationUnits;
    ULONG64 UsedAllocationUnits;
    ULONG64 TotalReservedAllocationUnits;
    ULONG64 VolumeStorageReserveAllocationUnits;
    ULONG64 AvailableCommittedAllocationUnits;
    ULONG64 PoolAvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_LABEL_INFORMATION {
    ULONG VolumeLabelLength;
    WCHAR VolumeLabel[1];
};

typedef struct _FILE_FS_METADATA_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalMetadataAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_OBJECTID_INFORMATION {
    UCHAR ObjectId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION {
    ULONG VolumeFlags;
    ULONG FlagMask;
    ULONG Version;
    ULONG Reserved;
};

typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION {
    ULONG LogicalBytesPerSector;
    ULONG PhysicalBytesPerSectorForAtomicity;
    ULONG PhysicalBytesPerSectorForPerformance;
    ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
    ULONG Flags;
    ULONG ByteOffsetForSectorAlignment;
    ULONG ByteOffsetForPartitionAlignment;
};

typedef struct _FILE_FS_SIZE_INFORMATION {
    union _LARGE_INTEGER TotalAllocationUnits;
    union _LARGE_INTEGER AvailableAllocationUnits;
    ULONG SectorsPerAllocationUnit;
    ULONG BytesPerSector;
};

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_FS_VOLUME_INFORMATION {
    union _LARGE_INTEGER VolumeCreationTime;
    ULONG VolumeSerialNumber;
    ULONG VolumeLabelLength;
    UCHAR SupportsObjects;
    WCHAR VolumeLabel[1];
};

typedef struct _FILE_FULL_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    WCHAR FileName[1];
};

typedef struct _FILE_FULL_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    WCHAR FileName[1];
};

typedef struct _FILE_FULL_EA_INFORMATION {
    ULONG NextEntryOffset;
    UCHAR Flags;
    UCHAR EaNameLength;
    USHORT EaValueLength;
    CHAR EaName[1];
};

typedef struct _FILE_GET_EA_INFORMATION {
    ULONG NextEntryOffset;
    UCHAR EaNameLength;
    CHAR EaName[1];
};

typedef struct _FILE_GET_QUOTA_INFORMATION {
    ULONG NextEntryOffset;
    ULONG SidLength;
    struct _SID Sid;
};

typedef struct _FILE_ID_128 {
    UCHAR Identifier[16];
};

typedef struct _FILE_ID_BOTH_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    CHAR ShortNameLength;
    WCHAR ShortName[12];
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_DIR_INFO {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_EXTD_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    ULONG ReparsePointTag;
    struct _FILE_ID_128 FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_FULL_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    ULONG EaSize;
    union _LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER EndOfFile;
    union _LARGE_INTEGER AllocationSize;
    ULONG FileAttributes;
    ULONG FileNameLength;
    union _LARGE_INTEGER FileId;
    struct _GUID LockingTransactionId;
    ULONG TxInfoFlags;
    WCHAR FileName[1];
};

typedef struct _FILE_ID_INFO {
    ULONG64 VolumeSerialNumber;
    struct _FILE_ID_128 FileId;
};

typedef struct _FILE_ID_INFORMATION {
    ULONG64 VolumeSerialNumber;
    struct _FILE_ID_128 FileId;
};

typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER {
    ULONG64 Hint1;
    ULONG64 Hint2;
    ULONG64 Clsn;
    LONG Status;
};

typedef struct _FILE_INTERNAL_INFORMATION {
    union _LARGE_INTEGER IndexNumber;
};

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION {
    PUCHAR IoStatusBlockRange;
    ULONG Length;
};

typedef struct _FILE_IO_COMPLETION_INFORMATION {
    PVOID KeyContext;
    PVOID ApcContext;
    struct _IO_STATUS_BLOCK IoStatusBlock;
};

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION {
    ULONG Flags;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFO {
    enum _PRIORITY_HINT PriorityHint;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION {
    enum _IO_PRIORITY_HINT PriorityHint;
};

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX {
    enum _IO_PRIORITY_HINT PriorityHint;
    UCHAR BoostOutstanding;
};

typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION {
    UCHAR IsRemote;
};

typedef struct _FILE_LAYOUT_ENTRY {
    ULONG Version;
    ULONG NextFileOffset;
    ULONG Flags;
    ULONG FileAttributes;
    ULONG64 FileReferenceNumber;
    ULONG FirstNameOffset;
    ULONG FirstStreamOffset;
    ULONG ExtraInfoOffset;
    ULONG ExtraInfoLength;
};

typedef struct _FILE_LAYOUT_INFO_ENTRY {
     <unnamed-type-BasicInformation>;
    struct {
        union _LARGE_INTEGER CreationTime;
        union _LARGE_INTEGER LastAccessTime;
        union _LARGE_INTEGER LastWriteTime;
        union _LARGE_INTEGER ChangeTime;
        ULONG FileAttributes;
    } BasicInformation;
    ULONG OwnerId;
    ULONG SecurityId;
    LONG64 Usn;
    enum _STORAGE_RESERVE_ID StorageReserveId;
};

typedef struct _FILE_LAYOUT_NAME_ENTRY {
    ULONG NextNameOffset;
    ULONG Flags;
    ULONG64 ParentFileReferenceNumber;
    ULONG FileNameLength;
    ULONG Reserved;
    WCHAR FileName[1];
};

typedef struct _FILE_LEVEL_TRIM {
    ULONG Key;
    ULONG NumRanges;
    struct _FILE_LEVEL_TRIM_RANGE Ranges[1];
};

typedef struct _FILE_LEVEL_TRIM_OUTPUT {
    ULONG NumRangesProcessed;
};

typedef struct _FILE_LEVEL_TRIM_RANGE {
    ULONG64 Offset;
    ULONG64 Length;
};

typedef struct _FILE_LINKS_FULL_ID_INFORMATION {
    ULONG BytesNeeded;
    ULONG EntriesReturned;
    struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION Entry;
};

typedef struct _FILE_LINKS_INFORMATION {
    ULONG BytesNeeded;
    ULONG EntriesReturned;
    struct _FILE_LINK_ENTRY_INFORMATION Entry;
};

typedef struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION {
    ULONG NextEntryOffset;
    struct _FILE_ID_128 ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_LINK_ENTRY_INFORMATION {
    ULONG NextEntryOffset;
    LONG64 ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_LINK_INFORMATION {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_MAILSLOT_PEEK_BUFFER {
    ULONG ReadDataAvailable;
    ULONG NumberOfMessages;
    ULONG MessageLength;
};

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION {
    ULONG MaximumMessageSize;
    ULONG MailslotQuota;
    ULONG NextMessageSize;
    ULONG MessagesAvailable;
    union _LARGE_INTEGER ReadTimeout;
};

typedef struct _FILE_MAILSLOT_SET_INFORMATION {
    union _LARGE_INTEGER *ReadTimeout;
};

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER {
    UCHAR CloseDisc;
};

typedef struct _FILE_MEMORY_PARTITION_INFORMATION {
    ULONG64 OwnerPartitionHandle;
     <unnamed-type-Flags>;
    union {
        UCHAR NoCrossPartitionAccess;
        UCHAR Spare[3];
        ULONG AllFlags;
    } Flags;
};

typedef struct _FILE_MODE_INFORMATION {
    ULONG Mode;
};

typedef struct _FILE_MOVE_CLUSTER_INFORMATION {
    ULONG ClusterCount;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAMES_INFORMATION {
    ULONG NextEntryOffset;
    ULONG FileIndex;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAME_INFO {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NAME_INFORMATION {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NETWORK_OPEN_INFORMATION {
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
};

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION {
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NOTIFY_EXTENDED_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Action;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastModificationTime;
    union _LARGE_INTEGER LastChangeTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER AllocatedLength;
    union _LARGE_INTEGER FileSize;
    ULONG FileAttributes;
    ULONG ReparsePointTag;
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER ParentFileId;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NOTIFY_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Action;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_NUMA_NODE_INFORMATION {
    USHORT NodeNumber;
};

typedef struct _FILE_OBJECTID_BUFFER {
    UCHAR ObjectId[16];
    UCHAR BirthVolumeId[16];
    UCHAR BirthObjectId[16];
    UCHAR DomainId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_OBJECTID_INFORMATION {
    LONG64 FileReference;
    UCHAR ObjectId[16];
    UCHAR BirthVolumeId[16];
    UCHAR BirthObjectId[16];
    UCHAR DomainId[16];
    UCHAR ExtendedInfo[48];
};

typedef struct _FILE_PATH {
    ULONG Version;
    ULONG Length;
    ULONG Type;
    UCHAR FilePath[1];
};

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER {
    PVOID EventHandle;
    ULONG KeyValue;
};

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER {
    PVOID ClientSession;
    PVOID ClientProcess;
};

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX {
    PVOID ClientSession;
    PVOID ClientProcess;
    USHORT ClientComputerNameLength;
    WCHAR ClientComputerBuffer[16];
};

typedef struct _FILE_PIPE_CREATE_SYMLINK_INPUT {
    USHORT NameOffset;
    USHORT NameLength;
    USHORT SubstituteNameOffset;
    USHORT SubstituteNameLength;
    ULONG Flags;
};

typedef struct _FILE_PIPE_DELETE_SYMLINK_INPUT {
    USHORT NameOffset;
    USHORT NameLength;
};

typedef struct _FILE_PIPE_EVENT_BUFFER {
    ULONG NamedPipeState;
    ULONG EntryType;
    ULONG ByteCount;
    ULONG KeyValue;
    ULONG NumberRequests;
};

typedef struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER {
    ULONG64 EventHandle;
};

typedef struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER {
    ULONG EventTypes;
};

typedef struct _FILE_PIPE_EVENT_SELECT_BUFFER {
    ULONG EventTypes;
    ULONG64 EventHandle;
};

typedef struct _FILE_PIPE_INFORMATION {
    ULONG ReadMode;
    ULONG CompletionMode;
};

typedef struct _FILE_PIPE_LOCAL_INFORMATION {
    ULONG NamedPipeType;
    ULONG NamedPipeConfiguration;
    ULONG MaximumInstances;
    ULONG CurrentInstances;
    ULONG InboundQuota;
    ULONG ReadDataAvailable;
    ULONG OutboundQuota;
    ULONG WriteQuotaAvailable;
    ULONG NamedPipeState;
    ULONG NamedPipeEnd;
};

typedef struct _FILE_PIPE_PEEK_BUFFER {
    ULONG NamedPipeState;
    ULONG ReadDataAvailable;
    ULONG NumberOfMessages;
    ULONG MessageLength;
    CHAR Data[1];
};

typedef struct _FILE_PIPE_REMOTE_INFORMATION {
    union _LARGE_INTEGER CollectDataTime;
    ULONG MaximumCollectionCount;
};

typedef struct _FILE_PIPE_SILO_ARRIVAL_INPUT {
    PVOID JobHandle;
};

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER {
    union _LARGE_INTEGER Timeout;
    ULONG NameLength;
    UCHAR TimeoutSpecified;
    WCHAR Name[1];
};

typedef struct _FILE_POSITION_INFORMATION {
    union _LARGE_INTEGER CurrentByteOffset;
};

typedef struct _FILE_PREFETCH {
    ULONG Type;
    ULONG Count;
    ULONG64 Prefetch[1];
};

typedef struct _FILE_PREFETCH_EX {
    ULONG Type;
    ULONG Count;
    PVOID Context;
    ULONG64 Prefetch[1];
};

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION {
    ULONG NumberOfProcessIdsInList;
    ULONG64 ProcessIdList[1];
};

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V0 {
    ULONG Version;
    ULONG Algorithm;
};

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V1 {
    ULONG Version;
    ULONG Algorithm;
    ULONG Flags;
};

typedef struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT {
    enum _FILE_METADATA_OPTIMIZATION_STATE State;
    ULONG AttributeListSize;
    ULONG MetadataSpaceUsed;
    ULONG MetadataSpaceAllocated;
    ULONG NumberOfFileRecords;
    ULONG NumberOfResidentAttributes;
    ULONG NumberOfNonresidentAttributes;
    ULONG TotalInProgress;
    ULONG TotalPending;
};

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER {
    union _LARGE_INTEGER DirectoryCount;
    union _LARGE_INTEGER FileCount;
    USHORT FsFormatMajVersion;
    USHORT FsFormatMinVersion;
    WCHAR FsFormatName[12];
    union _LARGE_INTEGER FormatTime;
    union _LARGE_INTEGER LastUpdateTime;
    WCHAR CopyrightInfo[34];
    WCHAR AbstractInfo[34];
    WCHAR FormattingImplementationInfo[34];
    WCHAR LastModifyingImplementationInfo[34];
};

typedef struct _FILE_QUERY_SPARING_BUFFER {
    ULONG SparingUnitBytes;
    UCHAR SoftwareSparing;
    ULONG TotalSpareBlocks;
    ULONG FreeSpareBlocks;
};

typedef struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX {
    enum _STORAGE_RESERVE_ID StorageReserveId;
    LONG64 SpaceUsed;
};

typedef struct _FILE_QUOTA_INFORMATION {
    ULONG NextEntryOffset;
    ULONG SidLength;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER QuotaUsed;
    union _LARGE_INTEGER QuotaThreshold;
    union _LARGE_INTEGER QuotaLimit;
    struct _SID Sid;
};

typedef struct _FILE_REFERENCE_RANGE {
    ULONG64 StartingFileReferenceNumber;
    ULONG64 EndingFileReferenceNumber;
};

typedef struct _FILE_REGION_INFO {
    LONG64 FileOffset;
    LONG64 Length;
    ULONG Usage;
    ULONG Reserved;
};

typedef struct _FILE_REGION_INPUT {
    LONG64 FileOffset;
    LONG64 Length;
    ULONG DesiredUsage;
};

typedef struct _FILE_REGION_OUTPUT {
    ULONG Flags;
    ULONG TotalRegionEntryCount;
    ULONG RegionEntryCount;
    ULONG Reserved;
    struct _FILE_REGION_INFO Region[1];
};

typedef struct _FILE_REMOTE_PROTOCOL_INFO {
    USHORT StructureVersion;
    USHORT StructureSize;
    ULONG Protocol;
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    USHORT Reserved;
    ULONG Flags;
     <unnamed-type-GenericReserved>;
    struct {
        ULONG Reserved[8];
    } GenericReserved;
     <unnamed-type-ProtocolSpecific>;
    union {
         <unnamed-type-Smb2>;
        struct {
             <unnamed-type-Server>;
            struct {
                ULONG Capabilities;
            } Server;
             <unnamed-type-Share>;
            struct {
                ULONG Capabilities;
                ULONG CachingFlags;
            } Share;
        } Smb2;
        ULONG Reserved[16];
    } ProtocolSpecific;
};

typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION {
    USHORT StructureVersion;
    USHORT StructureSize;
    ULONG Protocol;
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    USHORT Reserved;
    ULONG Flags;
     <unnamed-type-GenericReserved>;
    struct {
        ULONG Reserved[8];
    } GenericReserved;
     <unnamed-type-ProtocolSpecific>;
    union {
         <unnamed-type-Smb2>;
        struct {
             <unnamed-type-Server>;
            struct {
                ULONG Capabilities;
            } Server;
             <unnamed-type-Share>;
            struct {
                ULONG Capabilities;
                ULONG CachingFlags;
                UCHAR ShareType;
                UCHAR Reserved0[3];
                ULONG Reserved1;
            } Share;
        } Smb2;
        ULONG Reserved[16];
    } ProtocolSpecific;
};

typedef struct _FILE_RENAME_INFO {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_RENAME_INFORMATION {
    UCHAR ReplaceIfExists;
    ULONG Flags;
    PVOID RootDirectory;
    ULONG FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_REPARSE_POINT_INFORMATION {
    LONG64 FileReference;
    ULONG Tag;
};

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER {
    UCHAR Disable;
};

typedef struct _FILE_SET_SPARSE_BUFFER {
    UCHAR SetSparse;
};

typedef struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX {
    enum _STORAGE_RESERVE_ID StorageReserveId;
    ULONG Flags;
};

typedef struct _FILE_SFIO_RESERVE_INFORMATION {
    ULONG RequestsPerPeriod;
    ULONG Period;
    UCHAR RetryFailures;
    UCHAR Discardable;
    ULONG RequestSize;
    ULONG NumOutstandingRequests;
};

typedef struct _FILE_SFIO_VOLUME_INFORMATION {
    ULONG MaximumRequestsPerPeriod;
    ULONG MinimumPeriod;
    ULONG MinimumTransferSize;
};

typedef struct _FILE_STANDARD_INFO {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STANDARD_INFORMATION {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STANDARD_INFORMATION_EX {
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG NumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
    UCHAR AlternateStream;
    UCHAR MetadataAttribute;
};

typedef struct _FILE_STANDARD_LINK_INFORMATION {
    ULONG NumberOfAccessibleLinks;
    ULONG TotalNumberOfLinks;
    UCHAR DeletePending;
    UCHAR Directory;
};

typedef struct _FILE_STAT_INFORMATION {
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
    ULONG ReparseTag;
    ULONG NumberOfLinks;
    ULONG EffectiveAccess;
};

typedef struct _FILE_STAT_LX_INFORMATION {
    union _LARGE_INTEGER FileId;
    union _LARGE_INTEGER CreationTime;
    union _LARGE_INTEGER LastAccessTime;
    union _LARGE_INTEGER LastWriteTime;
    union _LARGE_INTEGER ChangeTime;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG FileAttributes;
    ULONG ReparseTag;
    ULONG NumberOfLinks;
    ULONG EffectiveAccess;
    ULONG LxFlags;
    ULONG LxUid;
    ULONG LxGid;
    ULONG LxMode;
    ULONG LxDeviceIdMajor;
    ULONG LxDeviceIdMinor;
};

typedef struct _FILE_STORAGE_INFO {
    ULONG LogicalBytesPerSector;
    ULONG PhysicalBytesPerSectorForAtomicity;
    ULONG PhysicalBytesPerSectorForPerformance;
    ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
    ULONG Flags;
    ULONG ByteOffsetForSectorAlignment;
    ULONG ByteOffsetForPartitionAlignment;
};

typedef struct _FILE_STORAGE_RESERVE_ID_INFORMATION {
    enum _STORAGE_RESERVE_ID StorageReserveId;
};

typedef struct _FILE_STORAGE_TIER {
    struct _GUID Id;
    WCHAR Name[256];
    WCHAR Description[256];
    ULONG64 Flags;
    ULONG64 ProvisionedCapacity;
    enum _FILE_STORAGE_TIER_MEDIA_TYPE MediaType;
    enum _FILE_STORAGE_TIER_CLASS Class;
};

typedef struct _FILE_STORAGE_TIER_REGION {
    struct _GUID TierId;
    ULONG64 Offset;
    ULONG64 Length;
};

typedef struct _FILE_STREAM_INFO {
    ULONG NextEntryOffset;
    ULONG StreamNameLength;
    union _LARGE_INTEGER StreamSize;
    union _LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
};

typedef struct _FILE_STREAM_INFORMATION {
    ULONG NextEntryOffset;
    ULONG StreamNameLength;
    union _LARGE_INTEGER StreamSize;
    union _LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
};

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION {
    CHAR FileSystem[9];
};

typedef struct _FILE_TRACKING_INFORMATION {
    PVOID DestinationFile;
    ULONG ObjectInformationLength;
    CHAR ObjectInformation[1];
};

typedef struct _FILE_TYPE_NOTIFICATION_INPUT {
    ULONG Flags;
    ULONG NumFileTypeIDs;
    struct _GUID FileTypeID[1];
};

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION {
    union _LARGE_INTEGER ValidDataLength;
};

typedef struct _FILE_VOLUME_NAME_INFORMATION {
    ULONG DeviceNameLength;
    WCHAR DeviceName[1];
};

typedef struct _FILE_ZERO_DATA_INFORMATION {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER BeyondFinalZero;
};

typedef struct _FILE_ZERO_DATA_INFORMATION_EX {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER BeyondFinalZero;
    ULONG Flags;
};

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION {
    ULONG Size;
    ULONG Flags;
    struct _GUID *ExtensionGuid;
    ULONG Id;
    ULONG Depth;
    ULONG OutFlags;
};

typedef struct _FIND_NAME_BUFFER {
    UCHAR length;
    UCHAR access_control;
    UCHAR frame_control;
    UCHAR destination_addr[6];
    UCHAR source_addr[6];
    UCHAR routing_info[18];
};

typedef struct _FIND_NAME_HEADER {
    USHORT node_count;
    UCHAR reserved;
    UCHAR unique_group;
};

typedef struct _FIXED {
    USHORT fract;
    SHORT value;
};

typedef struct _FLAGGED_BYTE_BLOB {
    ULONG fFlags;
    ULONG clSize;
    UCHAR abData[1];
};

typedef struct _FLAGGED_WORD_BLOB {
    ULONG fFlags;
    ULONG clSize;
    USHORT asData[1];
};

typedef struct _FLAG_STGMEDIUM {
    LONG ContextFlags;
    LONG fPassOwnership;
    struct tagSTGMEDIUM Stgmed;
};

typedef struct _FLOAT128 {
    LONG64 LowPart;
    LONG64 HighPart;
};

typedef struct _FLOWCONTROLCONFIG {
    ULONG fEnableSoftwareTx : 1;
    ULONG fEnableSoftwareRx : 1;
    ULONG fEnableDTR : 1;
    ULONG fEnableRTS : 1;
    CHAR XonChar;
    CHAR XoffChar;
    enum _FLOWCONTROLCLASS Type;
    enum _RECEIVEFLOWCONTROLCLASS HardwareReceive;
    enum _TRANSMITFLOWCONTROLCLASS HardwareTransmit;
};

typedef struct _FLS_CALLBACK_INFO {
};

typedef struct _FLS_DATA {
    struct _LIST_ENTRY Entry;
    PVOID Slots[128];
};

typedef struct _FNSAVE_FORMAT {
    ULONG ControlWord;
    ULONG StatusWord;
    ULONG TagWord;
    ULONG ErrorOffset;
    ULONG ErrorSelector;
    ULONG DataOffset;
    ULONG DataSelector;
    UCHAR RegisterArea[80];
};

typedef struct _FOCUS_EVENT_RECORD {
    LONG bSetFocus;
};

typedef struct _FORMAT_EX_PARAMETERS {
    enum _MEDIA_TYPE MediaType;
    ULONG StartCylinderNumber;
    ULONG EndCylinderNumber;
    ULONG StartHeadNumber;
    ULONG EndHeadNumber;
    USHORT FormatGapLength;
    USHORT SectorsPerTrack;
    USHORT SectorNumber[1];
};

typedef struct _FORMAT_PARAMETERS {
    enum _MEDIA_TYPE MediaType;
    ULONG StartCylinderNumber;
    ULONG EndCylinderNumber;
    ULONG StartHeadNumber;
    ULONG EndHeadNumber;
};

typedef struct _FORM_INFO_1A {
    ULONG Flags;
    PCHAR pName;
    struct tagSIZE Size;
    struct _RECTL ImageableArea;
};

typedef struct _FORM_INFO_1W {
    ULONG Flags;
    PWCHAR pName;
    struct tagSIZE Size;
    struct _RECTL ImageableArea;
};

typedef struct _FORM_INFO_2A {
    ULONG Flags;
    PCHAR pName;
    struct tagSIZE Size;
    struct _RECTL ImageableArea;
    PCHAR pKeyword;
    ULONG StringType;
    PCHAR pMuiDll;
    ULONG dwResourceId;
    PCHAR pDisplayName;
    USHORT wLangId;
};

typedef struct _FORM_INFO_2W {
    ULONG Flags;
    PWCHAR pName;
    struct tagSIZE Size;
    struct _RECTL ImageableArea;
    PCHAR pKeyword;
    ULONG StringType;
    PWCHAR pMuiDll;
    ULONG dwResourceId;
    PWCHAR pDisplayName;
    USHORT wLangId;
};

typedef struct _FPO_DATA {
    ULONG ulOffStart;
    ULONG cbProcSize;
    ULONG cdwLocals;
    USHORT cdwParams;
    USHORT cbProlog : 8;
    USHORT cbRegs : 3;
    USHORT fHasSEH : 1;
    USHORT fUseBP : 1;
    USHORT reserved : 1;
    USHORT cbFrame : 2;
};

typedef struct _FP_128 {
    ULONG W[4];
};

typedef struct _FP_32 {
    ULONG W[1];
};

typedef struct _FP_64 {
    ULONG W[2];
};

typedef struct _FP_80 {
    ULONG W[3];
};

typedef struct _FP_IEEE_RECORD {
    struct _FP_IEEE_VALUE Operand1;
    struct _FP_IEEE_VALUE Operand2;
    struct _FP_IEEE_VALUE Result;
};

typedef struct _FP_IEEE_VALUE {
     <unnamed-type-Value>;
    union {
        SHORT I16Value;
        USHORT U16Value;
        LONG I32Value;
        ULONG U32Value;
        PVOID StringValue;
        ULONG CompareValue;
        struct _FP_32 Fp32Value;
        union _LARGE_INTEGER I64Value;
        union _ULARGE_INTEGER U64Value;
        struct _FP_64 Fp64Value;
        struct _FP_80 Fp80Value;
        struct _FP_128 Fp128Value;
    } Value;
     <unnamed-type-Control>;
    struct {
        ULONG RoundingMode : 2;
        ULONG Inexact : 1;
        ULONG Underflow : 1;
        ULONG Overflow : 1;
        ULONG ZeroDivide : 1;
        ULONG InvalidOperation : 1;
        ULONG OperandValid : 1;
        ULONG Format : 4;
        ULONG Precision : 4;
        ULONG Operation : 12;
        ULONG Spare : 3;
        ULONG HardwareException : 1;
    } Control;
};

typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER {
    USHORT ChecksumAlgorithm;
    USHORT Reserved;
    ULONG Flags;
    ULONG ChecksumChunkSizeInBytes;
    ULONG ClusterSizeInBytes;
};

typedef struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
    struct _GUID RecallOwnerGuid;
    ULONG RecallMetadataBufferSize;
    UCHAR RecallMetadataBuffer[1];
};

typedef struct _FSCTL_OFFLOAD_READ_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG TokenTimeToLive;
    ULONG Reserved;
    ULONG64 FileOffset;
    ULONG64 CopyLength;
};

typedef struct _FSCTL_OFFLOAD_READ_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 TransferLength;
    UCHAR Token[512];
};

typedef struct _FSCTL_OFFLOAD_WRITE_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 FileOffset;
    ULONG64 CopyLength;
    ULONG64 TransferOffset;
    UCHAR Token[512];
};

typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG64 LengthWritten;
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER {
    UCHAR First0x24BytesOfBootSector[36];
};

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
};

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT {
    ULONG ExtentCount;
    ULONG TotalExtentCount;
    UCHAR Extents[1];
};

typedef struct _FSCTL_QUERY_REGION_INFO_INPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG NumberOfTierIds;
    struct _GUID TierIds[1];
};

typedef struct _FSCTL_QUERY_REGION_INFO_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG Reserved;
    ULONG64 Alignment;
    ULONG TotalNumberOfRegions;
    ULONG NumberOfRegionsReturned;
    struct _FILE_STORAGE_TIER_REGION Regions[1];
};

typedef struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG TotalNumberOfTiers;
    ULONG NumberOfTiersReturned;
    struct _FILE_STORAGE_TIER Tiers[1];
};

typedef struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT {
    ULONG NumaNode;
};

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER {
    USHORT ChecksumAlgorithm;
    USHORT Reserved;
    ULONG Flags;
};

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX {
    UCHAR EnableIntegrity;
    UCHAR KeepIntegrityStateUnchanged;
    USHORT Reserved;
    ULONG Flags;
    UCHAR Version;
    UCHAR Reserved2[7];
};

typedef struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER {
    union _LARGE_INTEGER BytesToUnmap;
};

typedef struct _FSCTL_UNMAP_SPACE_OUTPUT {
    union _LARGE_INTEGER BytesUnmapped;
};

typedef struct _FSTEXTMODE {
    UCHAR Index;
    UCHAR Flags;
    USHORT Columns;
    USHORT Rows;
    USHORT ResolutionX;
    USHORT ResolutionY;
    UCHAR FontSizeX;
    UCHAR FontSizeY;
};

typedef struct _FULL_PTR_XLAT_TABLES {
    PVOID RefIdToPointer;
    PVOID PointerToRefId;
    ULONG NextRefId;
    enum XLAT_SIDE XlatSide;
};

typedef struct _GDI_NONREMOTE {
    LONG fContext;
     __MIDL_IWinTypes_0002;
    union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
};

typedef struct _GDI_OBJECT {
    ULONG ObjectType;
     __MIDL_IAdviseSink_0002;
    union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
};

typedef struct _GDI_TEB_BATCH {
    ULONG Offset : 31;
    ULONG HasRenderingCommand : 1;
    ULONG64 HDC;
    ULONG Buffer[310];
};

typedef struct _GENERATE_NAME_CONTEXT {
    USHORT Checksum;
    UCHAR ChecksumInserted;
    UCHAR NameLength;
    WCHAR NameBuffer[8];
    ULONG ExtensionLength;
    WCHAR ExtensionBuffer[4];
    ULONG LastIndexValue;
};

typedef struct _GENERIC_BINDING_ROUTINE_PAIR {
    PVOID *pfnBind;
    PVOID pfnUnbind;
};

typedef struct _GENERIC_MAPPING {
    ULONG GenericRead;
    ULONG GenericWrite;
    ULONG GenericExecute;
    ULONG GenericAll;
};

typedef struct _GETVERSIONINPARAMS {
    UCHAR bVersion;
    UCHAR bRevision;
    UCHAR bReserved;
    UCHAR bIDEDeviceMap;
    ULONG fCapabilities;
    ULONG dwReserved[4];
};

typedef struct _GET_CHANGER_PARAMETERS {
    ULONG Size;
    USHORT NumberTransportElements;
    USHORT NumberStorageElements;
    USHORT NumberCleanerSlots;
    USHORT NumberIEElements;
    USHORT NumberDataTransferElements;
    USHORT NumberOfDoors;
    USHORT FirstSlotNumber;
    USHORT FirstDriveNumber;
    USHORT FirstTransportNumber;
    USHORT FirstIEPortNumber;
    USHORT FirstCleanerSlotAddress;
    USHORT MagazineSize;
    ULONG DriveCleanTimeout;
    ULONG Features0;
    ULONG Features1;
    UCHAR MoveFromTransport;
    UCHAR MoveFromSlot;
    UCHAR MoveFromIePort;
    UCHAR MoveFromDrive;
    UCHAR ExchangeFromTransport;
    UCHAR ExchangeFromSlot;
    UCHAR ExchangeFromIePort;
    UCHAR ExchangeFromDrive;
    UCHAR LockUnlockCapabilities;
    UCHAR PositionCapabilities;
    UCHAR Reserved1[2];
    ULONG Reserved2[2];
};

typedef struct _GET_DISK_ATTRIBUTES {
    ULONG Version;
    ULONG Reserved1;
    ULONG64 Attributes;
};

typedef struct _GET_FILTER_FILE_IDENTIFIER_INPUT {
    USHORT AltitudeLength;
    WCHAR Altitude[1];
};

typedef struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT {
    USHORT FilterFileIdentifierLength;
    UCHAR FilterFileIdentifier[1];
};

typedef struct _GET_LENGTH_INFORMATION {
    union _LARGE_INTEGER Length;
};

typedef struct _GET_MEDIA_TYPES {
    ULONG DeviceType;
    ULONG MediaInfoCount;
    struct _DEVICE_MEDIA_INFO MediaInfo[1];
};

typedef struct _GHOSTED_FILE_EXTENT {
    union _LARGE_INTEGER FileOffset;
    union _LARGE_INTEGER ByteCount;
    struct _GUID RecallOwnerGuid;
    ULONG NextEntryOffset;
    ULONG RecallMetadataBufferSize;
    UCHAR RecallMetadataBuffer[1];
};

typedef struct _GHOSTINFO {
    enum GHOSTREASON gr;
    struct HWND__ *hwnd;
    ULONG dwProcessId;
    ULONG dwThreadId;
    struct HWND__ *hwndWerDlg;
    struct HWND__ *hwndGhost;
};

typedef struct _GLYPHMETRICS {
    ULONG gmBlackBoxX;
    ULONG gmBlackBoxY;
    struct tagPOINT gmptGlyphOrigin;
    SHORT gmCellIncX;
    SHORT gmCellIncY;
};

typedef struct _GLYPHMETRICSFLOAT {
    FLOAT gmfBlackBoxX;
    FLOAT gmfBlackBoxY;
    struct _POINTFLOAT gmfptGlyphOrigin;
    FLOAT gmfCellIncX;
    FLOAT gmfCellIncY;
};

typedef struct _GP_LOG_PAGE_DESCRIPTOR {
    USHORT LogAddress;
    USHORT LogSectors;
};

typedef struct _GRADIENT_RECT {
    ULONG UpperLeft;
    ULONG LowerRight;
};

typedef struct _GRADIENT_TRIANGLE {
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
};

typedef struct _GROUP_AFFINITY {
    ULONG64 Mask;
    USHORT Group;
    USHORT Reserved[3];
};

typedef struct _GROUP_RELATIONSHIP {
    USHORT MaximumGroupCount;
    USHORT ActiveGroupCount;
    UCHAR Reserved[20];
    struct _PROCESSOR_GROUP_INFO GroupInfo[1];
};

typedef struct _GS_HANDLER_DATA {
    union {
        struct {
            ULONG EHandler : 1;
            ULONG UHandler : 1;
            ULONG HasAlignment : 1;
        } Bits;
        LONG CookieOffset;
    } u;
    LONG AlignedBaseOffset;
    LONG Alignment;
};

typedef struct _GUID {
    ULONG Data1;
    USHORT Data2;
    USHORT Data3;
    UCHAR Data4[8];
};

typedef struct _HARDERROR_MSG {
    struct _PORT_MESSAGE h;
    LONG Status;
    union _LARGE_INTEGER ErrorTime;
    ULONG ValidResponseOptions;
    ULONG Response;
    ULONG NumberOfParameters;
    ULONG UnicodeStringParameterMask;
    ULONG64 Parameters[5];
};

typedef struct _HARDWARE_COUNTER {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Reserved;
    ULONG64 Index;
};

typedef struct _HARDWARE_COUNTER_DATA {
    enum _HARDWARE_COUNTER_TYPE Type;
    ULONG Reserved;
    ULONG64 Value;
};

typedef struct _HCIMAGEPROPERTIES {
    LONG lHCBorderColor;
    LONG lHCBackgroundColor;
};

typedef struct _HD_HITTESTINFO {
    struct tagPOINT pt;
    ULONG flags;
    LONG iItem;
};

typedef struct _HD_ITEMA {
    ULONG mask;
    LONG cxy;
    PCHAR pszText;
    struct HBITMAP__ *hbm;
    LONG cchTextMax;
    LONG fmt;
    LONG64 lParam;
    LONG iImage;
    LONG iOrder;
    ULONG type;
    PVOID pvFilter;
    ULONG state;
};

typedef struct _HD_ITEMW {
    ULONG mask;
    LONG cxy;
    PWCHAR pszText;
    struct HBITMAP__ *hbm;
    LONG cchTextMax;
    LONG fmt;
    LONG64 lParam;
    LONG iImage;
    LONG iOrder;
    ULONG type;
    PVOID pvFilter;
    ULONG state;
};

typedef struct _HD_LAYOUT {
    struct tagRECT *prc;
    struct tagWINDOWPOS *pwpos;
};

typedef struct _HD_TEXTFILTERA {
    PCHAR pszText;
    LONG cchTextMax;
};

typedef struct _HD_TEXTFILTERW {
    PWCHAR pszText;
    LONG cchTextMax;
};

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION {
    UCHAR Next;
    ULONG Type;
    ULONG64 Size;
};

typedef struct _HEAP_BLOCK_INFORMATION {
    ULONG64 Address;
    ULONG Flags;
    ULONG64 DataSize;
    ULONG64 OverheadSize;
    ULONG64 NextBlockInformationOffset;
};

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION {
    ULONG64 Settable;
    USHORT TagIndex;
    USHORT AllocatorBackTraceIndex;
};

typedef struct _HEAP_EXTENDED_INFORMATION {
    PVOID Process;
    ULONG64 Heap;
    ULONG Level;
    PLONG CallbackRoutine;
    PVOID CallbackContext;
    struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    struct _HEAP_INFORMATION HeapInformation;
};

typedef struct _HEAP_INFORMATION {
    ULONG64 Address;
    ULONG Mode;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG64 FirstRegionInformationOffset;
    ULONG64 NextHeapInformationOffset;
};

typedef struct _HEAP_INFORMATION_ITEM {
    ULONG Level;
    ULONG64 Size;
    struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    struct _HEAP_INFORMATION HeapInformation;
    struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    ULONG64 DynamicStart;
};

typedef struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION {
    ULONG Version;
    ULONG Flags;
};

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION {
    ULONG Size;
    ULONG Version;
    ULONG HeapIndex;
    ULONG LastHeapIndex;
    ULONG64 BaseAddress;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG SegmentCount;
    ULONG64 LargeUCRMemory;
    ULONG UCRLength;
    ULONG64 AllocatedSpace;
    ULONG64 FreeSpace;
    ULONG FreeListLength;
    ULONG Contention;
    ULONG VirtualBlocks;
    ULONG CommitRate;
    ULONG DecommitRate;
    struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION SegmentHeapPerfInformation;
};

typedef struct _HEAP_RANGE_INFORMATION {
    ULONG64 Address;
    ULONG64 Size;
    ULONG Type;
    ULONG Protection;
    ULONG64 FirstBlockInformationOffset;
    ULONG64 NextRangeInformationOffset;
};

typedef struct _HEAP_REGION_INFORMATION {
    ULONG64 Address;
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG64 FirstRangeInformationOffset;
    ULONG64 NextRegionInformationOffset;
};

typedef struct _HEAP_SUMMARY {
    ULONG cb;
    ULONG64 cbAllocated;
    ULONG64 cbCommitted;
    ULONG64 cbReserved;
    ULONG64 cbMaxReserve;
};

typedef struct _HIBERFILE_BUCKET {
    ULONG64 MaxPhysicalMemory;
    ULONG PhysicalMemoryPercent[3];
};

typedef struct _HISTOGRAM_BUCKET {
    ULONG Reads;
    ULONG Writes;
};

typedef struct _HLSURF_INFORMATION_DIRTYREGIONS {
    ULONG64 uiCookie;
    struct HRGN__ *hrgn;
    struct HRGN__ *hrgnClip;
    struct HRGN__ *hrgnMoveClip;
    struct HRGN__ *hrgnMove;
    struct _POINTL ptMoveOffset;
    LONG bComposeOnce;
    LONG bHasMoveRect;
};

typedef struct _HLSURF_INFORMATION_PRESENTFLAGS {
    ULONG PresentFlags;
};

typedef struct _HLSURF_INFORMATION_REDIRSTYLE {
    enum _HLSURF_REDIRECTIONSTYLE RedirStyle;
    ULONG Width;
    ULONG Height;
    struct _LUID AdapterLuid;
    PVOID hPhysicalSurface;
};

typedef struct _HLSURF_INFORMATION_SET_GERNERATE_MOVE_DATA {
    ULONG fGenerateMoveData;
};

typedef struct _HLSURF_INFORMATION_SET_SIGNALING {
    ULONG fSignalOnDirty;
    ULONG Spare;
    struct _LUID AdapterLuid;
    PVOID hDxSharedSurface;
};

typedef struct _HLSURF_INFORMATION_SURFACE {
    enum DXGI_FORMAT dxgiFormat;
    ULONG uiWidth;
    ULONG uiHeight;
    ULONG Spare;
    struct _LUID AdapterLuid;
    PVOID hDxSharedSurface;
};

typedef struct _HLSURF_INFORMATION_TOKENUPDATEID {
    ULONG64 UpdateId;
};

typedef struct _HMAC_Info {
    ULONG HashAlgid;
    PUCHAR pbInnerString;
    ULONG cbInnerString;
    PUCHAR pbOuterString;
    ULONG cbOuterString;
};

typedef struct _HMDSTATUS {
    LONG HMDDetected;
    ULONG DisplayIdleState;
    LONG UserPresent;
    struct _LUID OutputAdapter;
    struct _LUID RenderAdapter;
    ULONG DisplayTargetId;
};

typedef struct _HOT_PATCH_IMAGE_INFO {
    ULONG CheckSum;
    ULONG TimeDateStamp;
};

typedef struct _HOVER_INPUT_INFO {
    ULONG dwType;
    struct HMONITOR__ *hMonitor;
    struct tagPOINT ptScreen;
    ULONG uPointerId;
    ULONG dwWorkspaceId;
};

typedef struct _HSM_OPCODE {
    ULONG Tag;
    ULONG Code;
};

typedef struct _HTTPSPolicyCallbackData {
    ULONG cbStruct;
    ULONG cbSize;
    ULONG dwAuthType;
    ULONG fdwChecks;
    PWCHAR pwszServerName;
};

typedef struct _HV_DETAILS {
    ULONG Data[4];
};

typedef struct _HWND_LOGSURF_CREATECONTEXT {
    ULONG Width;
    ULONG Height;
    struct _LUID AdapterLuid;
};

typedef struct _HWND_REDIRECTION_DXREGION {
    ULONG uiDirtyIndex;
    struct HRGN__ *hrgn;
};

typedef struct _HWND_REDIRECTION_DXUPDATERECT {
    struct tagRECT UpdateRect;
};

typedef struct _HWND_REDIRECTION_SURFACE {
    enum DXGI_FORMAT dxgiFormat;
    ULONG uiPresentFlags;
    ULONG64 UpdateId;
    struct _LUID AdapterLuid;
    PVOID hDxSharedSurface;
};

typedef struct _HWND_REDIRECTION_TOKENUPDATEID {
    ULONG64 UpdateId;
    ULONG64 ConfirmedUpdateId;
};

typedef struct _HYPER_SIZEDARR {
    ULONG clSize;
    PLONG64 pData;
};

typedef struct _ICA_CACHE {
    struct _THINWIRECACHE ThinWireCache[4];
};

typedef struct _ICA_COUNTERS {
    ULONG Reserved;
};

typedef struct _ICA_STACK_ADDRESS {
    UCHAR Address[128];
};

typedef struct _ICONINFO {
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
};

typedef struct _ICONINFOEXA {
    ULONG cbSize;
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
    USHORT wResID;
    CHAR szModName[260];
    CHAR szResName[260];
};

typedef struct _ICONINFOEXW {
    ULONG cbSize;
    LONG fIcon;
    ULONG xHotspot;
    ULONG yHotspot;
    struct HBITMAP__ *hbmMask;
    struct HBITMAP__ *hbmColor;
    USHORT wResID;
    WCHAR szModName[260];
    WCHAR szResName[260];
};

typedef struct _IDA {
    ULONG cidl;
    ULONG aoffset[1];
};

typedef struct _IDEREGS {
    UCHAR bFeaturesReg;
    UCHAR bSectorCountReg;
    UCHAR bSectorNumberReg;
    UCHAR bCylLowReg;
    UCHAR bCylHighReg;
    UCHAR bDriveHeadReg;
    UCHAR bCommandReg;
    UCHAR bReserved;
};

typedef struct _IMAGEINFO {
    struct HBITMAP__ *hbmImage;
    struct HBITMAP__ *hbmMask;
    LONG Unused1;
    LONG Unused2;
    struct tagRECT rcImage;
};

typedef struct _IMAGELIST {
};

typedef struct _IMAGELISTDRAWPARAMS {
    ULONG cbSize;
    struct _IMAGELIST *himl;
    LONG i;
    struct HDC__ *hdcDst;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    LONG xBitmap;
    LONG yBitmap;
    ULONG rgbBk;
    ULONG rgbFg;
    ULONG fStyle;
    ULONG dwRop;
    ULONG fState;
    ULONG Frame;
    ULONG crEffect;
};

typedef struct _IMAGEPROPERTIES {
    ULONG dwBorderColor;
    ULONG dwBackgroundColor;
};

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONG64 BeginAddress;
    ULONG64 EndAddress;
    ULONG64 ExceptionHandler;
    ULONG64 HandlerData;
    ULONG64 PrologEndAddress;
};

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG EndAddress;
    ULONG ExceptionHandler;
    ULONG HandlerData;
    ULONG PrologEndAddress;
};

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    UCHAR Name[16];
    UCHAR Date[12];
    UCHAR UserID[6];
    UCHAR GroupID[6];
    UCHAR Mode[8];
    UCHAR Size[10];
    UCHAR EndHeader[2];
};

typedef struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG UnwindData;
    ULONG Flag : 2;
    ULONG FunctionLength : 11;
    ULONG RegF : 3;
    ULONG RegI : 4;
    ULONG H : 1;
    ULONG CR : 2;
    ULONG FrameSize : 9;
};

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG UnwindData;
    ULONG Flag : 2;
    ULONG FunctionLength : 11;
    ULONG Ret : 2;
    ULONG H : 1;
    ULONG Reg : 3;
    ULONG R : 1;
    ULONG L : 1;
    ULONG C : 1;
    ULONG StackAdjust : 10;
};

typedef struct _IMAGE_BASE_RELOCATION {
    ULONG VirtualAddress;
    ULONG SizeOfBlock;
};

typedef struct _IMAGE_BOUND_FORWARDER_REF {
    ULONG TimeDateStamp;
    USHORT OffsetModuleName;
    USHORT Reserved;
};

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    ULONG TimeDateStamp;
    USHORT OffsetModuleName;
    USHORT NumberOfModuleForwarderRefs;
};

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    ULONG FuncStart;
    ULONG PrologLen : 8;
    ULONG FuncLen : 22;
    ULONG ThirtyTwoBit : 1;
    ULONG ExceptionFlag : 1;
};

typedef struct _IMAGE_CHPE_METADATA_X86 {
    ULONG Version;
    ULONG CHPECodeAddressRangeOffset;
    ULONG CHPECodeAddressRangeCount;
    ULONG WowA64ExceptionHandlerFunctionPointer;
    ULONG WowA64DispatchCallFunctionPointer;
    ULONG WowA64DispatchIndirectCallFunctionPointer;
    ULONG WowA64DispatchIndirectCallCfgFunctionPointer;
    ULONG WowA64DispatchRetFunctionPointer;
    ULONG WowA64DispatchRetLeafFunctionPointer;
    ULONG WowA64DispatchJumpFunctionPointer;
    ULONG CompilerIATPointer;
    ULONG WowA64RdtscFunctionPointer;
};

typedef struct _IMAGE_CHPE_RANGE_ENTRY {
    ULONG StartOffset;
    ULONG NativeCode : 1;
    ULONG AddressBits : 31;
    ULONG Length;
};

typedef struct _IMAGE_COFF_SYMBOLS_HEADER {
    ULONG NumberOfSymbols;
    ULONG LvaToFirstSymbol;
    ULONG NumberOfLinenumbers;
    ULONG LvaToFirstLinenumber;
    ULONG RvaToFirstByteOfCode;
    ULONG RvaToLastByteOfCode;
    ULONG RvaToFirstByteOfData;
    ULONG RvaToLastByteOfData;
};

typedef struct _IMAGE_DATA_DIRECTORY {
    ULONG VirtualAddress;
    ULONG Size;
};

typedef struct _IMAGE_DEBUG_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG Type;
    ULONG SizeOfData;
    ULONG AddressOfRawData;
    ULONG PointerToRawData;
};

typedef struct _IMAGE_DEBUG_MISC {
    ULONG DataType;
    ULONG Length;
    UCHAR Unicode;
    UCHAR Reserved[3];
    UCHAR Data[1];
};

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR {
     <unnamed-type-Attributes>;
    union {
        ULONG AllAttributes;
        ULONG RvaBased : 1;
        ULONG ReservedAttributes : 31;
    } Attributes;
    ULONG DllNameRVA;
    ULONG ModuleHandleRVA;
    ULONG ImportAddressTableRVA;
    ULONG ImportNameTableRVA;
    ULONG BoundImportAddressTableRVA;
    ULONG UnloadInformationTableRVA;
    ULONG TimeDateStamp;
};

typedef struct _IMAGE_DOS_HEADER {
    USHORT e_magic;
    USHORT e_cblp;
    USHORT e_cp;
    USHORT e_crlc;
    USHORT e_cparhdr;
    USHORT e_minalloc;
    USHORT e_maxalloc;
    USHORT e_ss;
    USHORT e_sp;
    USHORT e_csum;
    USHORT e_ip;
    USHORT e_cs;
    USHORT e_lfarlc;
    USHORT e_ovno;
    USHORT e_res[4];
    USHORT e_oemid;
    USHORT e_oeminfo;
    USHORT e_res2[10];
    LONG e_lfanew;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION32 {
    ULONG Symbol;
    ULONG BaseRelocSize;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION32_V2 {
    ULONG HeaderSize;
    ULONG FixupInfoSize;
    ULONG Symbol;
    ULONG SymbolGroup;
    ULONG Flags;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION64 {
    ULONG64 Symbol;
    ULONG BaseRelocSize;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION64_V2 {
    ULONG HeaderSize;
    ULONG FixupInfoSize;
    ULONG64 Symbol;
    ULONG SymbolGroup;
    ULONG Flags;
};

typedef struct _IMAGE_DYNAMIC_RELOCATION_TABLE {
    ULONG Version;
    ULONG Size;
};

typedef struct _IMAGE_ENCLAVE_CONFIG32 {
    ULONG Size;
    ULONG MinimumRequiredConfigSize;
    ULONG PolicyFlags;
    ULONG NumberOfImports;
    ULONG ImportList;
    ULONG ImportEntrySize;
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImageVersion;
    ULONG SecurityVersion;
    ULONG EnclaveSize;
    ULONG NumberOfThreads;
    ULONG EnclaveFlags;
};

typedef struct _IMAGE_ENCLAVE_CONFIG64 {
    ULONG Size;
    ULONG MinimumRequiredConfigSize;
    ULONG PolicyFlags;
    ULONG NumberOfImports;
    ULONG ImportList;
    ULONG ImportEntrySize;
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImageVersion;
    ULONG SecurityVersion;
    ULONG64 EnclaveSize;
    ULONG NumberOfThreads;
    ULONG EnclaveFlags;
};

typedef struct _IMAGE_ENCLAVE_IMPORT {
    ULONG MatchType;
    ULONG MinimumSecurityVersion;
    UCHAR UniqueOrAuthorID[32];
    UCHAR FamilyID[16];
    UCHAR ImageID[16];
    ULONG ImportName;
    ULONG Reserved;
};

typedef struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER {
    ULONG EpilogueCount;
    UCHAR EpilogueByteCount;
    UCHAR BranchDescriptorElementSize;
    USHORT BranchDescriptorCount;
};

typedef struct _IMAGE_EXPORT_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG Name;
    ULONG Base;
    ULONG NumberOfFunctions;
    ULONG NumberOfNames;
    ULONG AddressOfFunctions;
    ULONG AddressOfNames;
    ULONG AddressOfNameOrdinals;
};

typedef struct _IMAGE_FILE_HEADER {
    USHORT Machine;
    USHORT NumberOfSections;
    ULONG TimeDateStamp;
    ULONG PointerToSymbolTable;
    ULONG NumberOfSymbols;
    USHORT SizeOfOptionalHeader;
    USHORT Characteristics;
};

typedef struct _IMAGE_FUNCTION_ENTRY {
    ULONG StartingAddress;
    ULONG EndingAddress;
    ULONG EndOfPrologue;
};

typedef struct _IMAGE_FUNCTION_ENTRY64 {
    ULONG64 StartingAddress;
    ULONG64 EndingAddress;
    ULONG64 EndOfPrologue;
    ULONG64 UnwindInfoAddress;
};

typedef struct _IMAGE_HOT_PATCH_BASE {
    ULONG SequenceNumber;
    ULONG Flags;
    ULONG OriginalTimeDateStamp;
    ULONG OriginalCheckSum;
    ULONG CodeIntegrityInfo;
    ULONG CodeIntegritySize;
    ULONG PatchTable;
    ULONG BufferOffset;
};

typedef struct _IMAGE_HOT_PATCH_HASHES {
    UCHAR SHA256[32];
    UCHAR SHA1[20];
};

typedef struct _IMAGE_HOT_PATCH_INFO {
    ULONG Version;
    ULONG Size;
    ULONG SequenceNumber;
    ULONG BaseImageList;
    ULONG BaseImageCount;
    ULONG BufferOffset;
    ULONG ExtraPatchSize;
};

typedef struct _IMAGE_IMPORT_BY_NAME {
    USHORT Hint;
    CHAR Name[1];
};

typedef struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
    ULONG PageRelativeOffset : 12;
    ULONG IndirectCall : 1;
    ULONG IATIndex : 19;
};

typedef struct _IMAGE_IMPORT_DESCRIPTOR {
    ULONG Characteristics;
    ULONG OriginalFirstThunk;
    ULONG TimeDateStamp;
    ULONG ForwarderChain;
    ULONG Name;
    ULONG FirstThunk;
};

typedef struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
    USHORT PageRelativeOffset : 12;
    USHORT IndirectCall : 1;
    USHORT RexWPrefix : 1;
    USHORT CfgCheck : 1;
    USHORT Reserved : 1;
};

typedef struct _IMAGE_LINENUMBER {
     <unnamed-type-Type>;
    union {
        ULONG SymbolTableIndex;
        ULONG VirtualAddress;
    } Type;
    USHORT Linenumber;
};

typedef struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY {
    USHORT Flags;
    USHORT Catalog;
    ULONG CatalogOffset;
    ULONG Reserved;
};

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32 {
    ULONG Size;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG GlobalFlagsClear;
    ULONG GlobalFlagsSet;
    ULONG CriticalSectionDefaultTimeout;
    ULONG DeCommitFreeBlockThreshold;
    ULONG DeCommitTotalFreeThreshold;
    ULONG LockPrefixTable;
    ULONG MaximumAllocationSize;
    ULONG VirtualMemoryThreshold;
    ULONG ProcessHeapFlags;
    ULONG ProcessAffinityMask;
    USHORT CSDVersion;
    USHORT DependentLoadFlags;
    ULONG EditList;
    ULONG SecurityCookie;
    ULONG SEHandlerTable;
    ULONG SEHandlerCount;
    ULONG GuardCFCheckFunctionPointer;
    ULONG GuardCFDispatchFunctionPointer;
    ULONG GuardCFFunctionTable;
    ULONG GuardCFFunctionCount;
    ULONG GuardFlags;
    struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
    ULONG GuardAddressTakenIatEntryTable;
    ULONG GuardAddressTakenIatEntryCount;
    ULONG GuardLongJumpTargetTable;
    ULONG GuardLongJumpTargetCount;
    ULONG DynamicValueRelocTable;
    ULONG CHPEMetadataPointer;
    ULONG GuardRFFailureRoutine;
    ULONG GuardRFFailureRoutineFunctionPointer;
    ULONG DynamicValueRelocTableOffset;
    USHORT DynamicValueRelocTableSection;
    USHORT Reserved2;
    ULONG GuardRFVerifyStackPointerFunctionPointer;
    ULONG HotPatchTableOffset;
    ULONG Reserved3;
    ULONG EnclaveConfigurationPointer;
    ULONG VolatileMetadataPointer;
};

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64 {
    ULONG Size;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    ULONG GlobalFlagsClear;
    ULONG GlobalFlagsSet;
    ULONG CriticalSectionDefaultTimeout;
    ULONG64 DeCommitFreeBlockThreshold;
    ULONG64 DeCommitTotalFreeThreshold;
    ULONG64 LockPrefixTable;
    ULONG64 MaximumAllocationSize;
    ULONG64 VirtualMemoryThreshold;
    ULONG64 ProcessAffinityMask;
    ULONG ProcessHeapFlags;
    USHORT CSDVersion;
    USHORT DependentLoadFlags;
    ULONG64 EditList;
    ULONG64 SecurityCookie;
    ULONG64 SEHandlerTable;
    ULONG64 SEHandlerCount;
    ULONG64 GuardCFCheckFunctionPointer;
    ULONG64 GuardCFDispatchFunctionPointer;
    ULONG64 GuardCFFunctionTable;
    ULONG64 GuardCFFunctionCount;
    ULONG GuardFlags;
    struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
    ULONG64 GuardAddressTakenIatEntryTable;
    ULONG64 GuardAddressTakenIatEntryCount;
    ULONG64 GuardLongJumpTargetTable;
    ULONG64 GuardLongJumpTargetCount;
    ULONG64 DynamicValueRelocTable;
    ULONG64 CHPEMetadataPointer;
    ULONG64 GuardRFFailureRoutine;
    ULONG64 GuardRFFailureRoutineFunctionPointer;
    ULONG DynamicValueRelocTableOffset;
    USHORT DynamicValueRelocTableSection;
    USHORT Reserved2;
    ULONG64 GuardRFVerifyStackPointerFunctionPointer;
    ULONG HotPatchTableOffset;
    ULONG Reserved3;
    ULONG64 EnclaveConfigurationPointer;
    ULONG64 VolatileMetadataPointer;
};

typedef struct _IMAGE_NT_HEADERS {
    ULONG Signature;
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_NT_HEADERS64 {
    ULONG Signature;
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

typedef struct _IMAGE_OPTIONAL_HEADER {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG BaseOfData;
    ULONG ImageBase;
    ULONG SectionAlignment;
    ULONG FileAlignment;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    USHORT MajorImageVersion;
    USHORT MinorImageVersion;
    USHORT MajorSubsystemVersion;
    USHORT MinorSubsystemVersion;
    ULONG Win32VersionValue;
    ULONG SizeOfImage;
    ULONG SizeOfHeaders;
    ULONG CheckSum;
    USHORT Subsystem;
    USHORT DllCharacteristics;
    ULONG SizeOfStackReserve;
    ULONG SizeOfStackCommit;
    ULONG SizeOfHeapReserve;
    ULONG SizeOfHeapCommit;
    ULONG LoaderFlags;
    ULONG NumberOfRvaAndSizes;
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _IMAGE_OPTIONAL_HEADER64 {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG64 ImageBase;
    ULONG SectionAlignment;
    ULONG FileAlignment;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    USHORT MajorImageVersion;
    USHORT MinorImageVersion;
    USHORT MajorSubsystemVersion;
    USHORT MinorSubsystemVersion;
    ULONG Win32VersionValue;
    ULONG SizeOfImage;
    ULONG SizeOfHeaders;
    ULONG CheckSum;
    USHORT Subsystem;
    USHORT DllCharacteristics;
    ULONG64 SizeOfStackReserve;
    ULONG64 SizeOfStackCommit;
    ULONG64 SizeOfHeapReserve;
    ULONG64 SizeOfHeapCommit;
    ULONG LoaderFlags;
    ULONG NumberOfRvaAndSizes;
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _IMAGE_OS2_HEADER {
    USHORT ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    USHORT ne_enttab;
    USHORT ne_cbenttab;
    LONG ne_crc;
    USHORT ne_flags;
    USHORT ne_autodata;
    USHORT ne_heap;
    USHORT ne_stack;
    LONG ne_csip;
    LONG ne_sssp;
    USHORT ne_cseg;
    USHORT ne_cmod;
    USHORT ne_cbnrestab;
    USHORT ne_segtab;
    USHORT ne_rsrctab;
    USHORT ne_restab;
    USHORT ne_modtab;
    USHORT ne_imptab;
    LONG ne_nrestab;
    USHORT ne_cmovent;
    USHORT ne_align;
    USHORT ne_cres;
    UCHAR ne_exetyp;
    UCHAR ne_flagsothers;
    USHORT ne_pretthunks;
    USHORT ne_psegrefbytes;
    USHORT ne_swaparea;
    USHORT ne_expver;
};

typedef struct _IMAGE_POLICY_ENTRY {
    enum _IMAGE_POLICY_ENTRY_TYPE Type;
    enum _IMAGE_POLICY_ID PolicyId;
     <unnamed-type-u>;
    union {
        PVOID None;
        UCHAR BoolValue;
        CHAR Int8Value;
        UCHAR UInt8Value;
        SHORT Int16Value;
        USHORT UInt16Value;
        LONG Int32Value;
        ULONG UInt32Value;
        LONG64 Int64Value;
        ULONG64 UInt64Value;
        PCHAR AnsiStringValue;
        PWCHAR UnicodeStringValue;
    } u;
};

typedef struct _IMAGE_POLICY_METADATA {
    UCHAR Version;
    UCHAR Reserved0[7];
    ULONG64 ApplicationId;
    struct _IMAGE_POLICY_ENTRY Policies[0];
};

typedef struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER {
    UCHAR PrologueByteCount;
};

typedef struct _IMAGE_RELOCATION {
    ULONG VirtualAddress;
    ULONG RelocCount;
    ULONG SymbolTableIndex;
    USHORT Type;
};

typedef struct _IMAGE_RESOURCE_DATA_ENTRY {
    ULONG OffsetToData;
    ULONG Size;
    ULONG CodePage;
    ULONG Reserved;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY {
    ULONG Characteristics;
    ULONG TimeDateStamp;
    USHORT MajorVersion;
    USHORT MinorVersion;
    USHORT NumberOfNamedEntries;
    USHORT NumberOfIdEntries;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    ULONG NameOffset : 31;
    ULONG NameIsString : 1;
    ULONG Name;
    USHORT Id;
    ULONG OffsetToData;
    ULONG OffsetToDirectory : 31;
    ULONG DataIsDirectory : 1;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    USHORT Length;
    CHAR NameString[1];
};

typedef struct _IMAGE_RESOURCE_DIR_STRING_U {
    USHORT Length;
    WCHAR NameString[1];
};

typedef struct _IMAGE_ROM_HEADERS {
    struct _IMAGE_FILE_HEADER FileHeader;
    struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {
    USHORT Magic;
    UCHAR MajorLinkerVersion;
    UCHAR MinorLinkerVersion;
    ULONG SizeOfCode;
    ULONG SizeOfInitializedData;
    ULONG SizeOfUninitializedData;
    ULONG AddressOfEntryPoint;
    ULONG BaseOfCode;
    ULONG BaseOfData;
    ULONG BaseOfBss;
    ULONG GprMask;
    ULONG CprMask[4];
    ULONG GpValue;
};

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    ULONG BeginAddress;
    ULONG EndAddress;
    ULONG UnwindInfoAddress;
    ULONG UnwindData;
};

typedef struct _IMAGE_SECTION_HEADER {
    UCHAR Name[8];
     <unnamed-type-Misc>;
    union {
        ULONG PhysicalAddress;
        ULONG VirtualSize;
    } Misc;
    ULONG VirtualAddress;
    ULONG SizeOfRawData;
    ULONG PointerToRawData;
    ULONG PointerToRelocations;
    ULONG PointerToLinenumbers;
    USHORT NumberOfRelocations;
    USHORT NumberOfLinenumbers;
    ULONG Characteristics;
};

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {
    USHORT Signature;
    USHORT Flags;
    USHORT Machine;
    USHORT Characteristics;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    ULONG ImageBase;
    ULONG SizeOfImage;
    ULONG NumberOfSections;
    ULONG ExportedNamesSize;
    ULONG DebugDirectorySize;
    ULONG SectionAlignment;
    ULONG Reserved[2];
};

typedef struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION {
    USHORT PageRelativeOffset : 12;
    USHORT RegisterNumber : 4;
};

typedef struct _IMAGE_SYMBOL {
     <unnamed-type-N>;
    union {
        UCHAR ShortName[8];
         <unnamed-type-Name>;
        struct {
            ULONG Short;
            ULONG Long;
        } Name;
        ULONG LongName[2];
    } N;
    ULONG Value;
    SHORT SectionNumber;
    USHORT Type;
    UCHAR StorageClass;
    UCHAR NumberOfAuxSymbols;
};

typedef struct _IMAGE_SYMBOL_EX {
     <unnamed-type-N>;
    union {
        UCHAR ShortName[8];
         <unnamed-type-Name>;
        struct {
            ULONG Short;
            ULONG Long;
        } Name;
        ULONG LongName[2];
    } N;
    ULONG Value;
    LONG SectionNumber;
    USHORT Type;
    UCHAR StorageClass;
    UCHAR NumberOfAuxSymbols;
};

typedef struct _IMAGE_THUNK_DATA32 {
     <unnamed-type-u1>;
    union {
        ULONG ForwarderString;
        ULONG Function;
        ULONG Ordinal;
        ULONG AddressOfData;
    } u1;
};

typedef struct _IMAGE_THUNK_DATA64 {
     <unnamed-type-u1>;
    union {
        ULONG64 ForwarderString;
        ULONG64 Function;
        ULONG64 Ordinal;
        ULONG64 AddressOfData;
    } u1;
};

typedef struct _IMAGE_TLS_DIRECTORY32 {
    ULONG StartAddressOfRawData;
    ULONG EndAddressOfRawData;
    ULONG AddressOfIndex;
    ULONG AddressOfCallBacks;
    ULONG SizeOfZeroFill;
    ULONG Characteristics;
    ULONG Reserved0 : 20;
    ULONG Alignment : 4;
    ULONG Reserved1 : 8;
};

typedef struct _IMAGE_TLS_DIRECTORY64 {
    ULONG64 StartAddressOfRawData;
    ULONG64 EndAddressOfRawData;
    ULONG64 AddressOfIndex;
    ULONG64 AddressOfCallBacks;
    ULONG SizeOfZeroFill;
    ULONG Characteristics;
    ULONG Reserved0 : 20;
    ULONG Alignment : 4;
    ULONG Reserved1 : 8;
};

typedef struct _IMAGE_VXD_HEADER {
    USHORT e32_magic;
    UCHAR e32_border;
    UCHAR e32_worder;
    ULONG e32_level;
    USHORT e32_cpu;
    USHORT e32_os;
    ULONG e32_ver;
    ULONG e32_mflags;
    ULONG e32_mpages;
    ULONG e32_startobj;
    ULONG e32_eip;
    ULONG e32_stackobj;
    ULONG e32_esp;
    ULONG e32_pagesize;
    ULONG e32_lastpagesize;
    ULONG e32_fixupsize;
    ULONG e32_fixupsum;
    ULONG e32_ldrsize;
    ULONG e32_ldrsum;
    ULONG e32_objtab;
    ULONG e32_objcnt;
    ULONG e32_objmap;
    ULONG e32_itermap;
    ULONG e32_rsrctab;
    ULONG e32_rsrccnt;
    ULONG e32_restab;
    ULONG e32_enttab;
    ULONG e32_dirtab;
    ULONG e32_dircnt;
    ULONG e32_fpagetab;
    ULONG e32_frectab;
    ULONG e32_impmod;
    ULONG e32_impmodcnt;
    ULONG e32_impproc;
    ULONG e32_pagesum;
    ULONG e32_datapage;
    ULONG e32_preload;
    ULONG e32_nrestab;
    ULONG e32_cbnrestab;
    ULONG e32_nressum;
    ULONG e32_autodata;
    ULONG e32_debuginfo;
    ULONG e32_debuglen;
    ULONG e32_instpreload;
    ULONG e32_instdemand;
    ULONG e32_heapsize;
    UCHAR e32_res3[12];
    ULONG e32_winresoff;
    ULONG e32_winreslen;
    USHORT e32_devid;
    USHORT e32_ddkver;
};

typedef struct _INITIAL_TEB {
     <unnamed-type-OldInitialTeb>;
    struct {
        PVOID OldStackBase;
        PVOID OldStackLimit;
    } OldInitialTeb;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID StackAllocationBase;
};

typedef struct _INPUT_RECORD {
    USHORT EventType;
     <unnamed-type-Event>;
    union {
        struct _KEY_EVENT_RECORD KeyEvent;
        struct _MOUSE_EVENT_RECORD MouseEvent;
        struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
        struct _MENU_EVENT_RECORD MenuEvent;
        struct _FOCUS_EVENT_RECORD FocusEvent;
    } Event;
};

typedef struct _INTERNAL_SWITCHBRANCH_MODULE_TABLE {
    ULONG TableEntries;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *Table[0];
};

typedef struct _INTLIST {
    LONG iValueCount;
    LONG iValues[402];
};

typedef struct _INVERTED_FUNCTION_TABLE {
    ULONG CurrentSize;
    ULONG MaximumSize;
    ULONG Epoch;
    UCHAR Overflow;
    struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
    VOID _INVERTED_FUNCTION_TABLE;
    VOID _INVERTED_FUNCTION_TABLE;
    struct _INVERTED_FUNCTION_TABLE *operator=;
    struct _INVERTED_FUNCTION_TABLE *operator=;
};

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY {
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionTable;
    struct _DYNAMIC_FUNCTION_TABLE *DynamicTable;
    PVOID ImageBase;
    ULONG SizeOfImage;
    ULONG SizeOfTable;
};

typedef struct _IO_COMPLETION_BASIC_INFORMATION {
    LONG Depth;
};

typedef struct _IO_COUNTERS {
    ULONG64 ReadOperationCount;
    ULONG64 WriteOperationCount;
    ULONG64 OtherOperationCount;
    ULONG64 ReadTransferCount;
    ULONG64 WriteTransferCount;
    ULONG64 OtherTransferCount;
};

typedef struct _IO_ERROR_LOG_MESSAGE {
    USHORT Type;
    USHORT Size;
    USHORT DriverNameLength;
    union _LARGE_INTEGER TimeStamp;
    ULONG DriverNameOffset;
    struct _IO_ERROR_LOG_PACKET EntryData;
};

typedef struct _IO_ERROR_LOG_PACKET {
    UCHAR MajorFunctionCode;
    UCHAR RetryCount;
    USHORT DumpDataSize;
    USHORT NumberOfStrings;
    USHORT StringOffset;
    USHORT EventCategory;
    LONG ErrorCode;
    ULONG UniqueErrorValue;
    LONG FinalStatus;
    ULONG SequenceNumber;
    ULONG IoControlCode;
    union _LARGE_INTEGER DeviceOffset;
    ULONG DumpData[1];
};

typedef struct _IO_IRP_EXT_TRACK_OFFSET_HEADER {
    USHORT Validation;
    USHORT Flags;
    PVOID TrackedOffsetCallback;
};

typedef struct _IO_RESOURCE_DESCRIPTOR {
    UCHAR Option;
    UCHAR Type;
    UCHAR ShareDisposition;
    UCHAR Spare1;
    USHORT Flags;
    USHORT Spare2;
     <unnamed-type-u>;
    union {
         <unnamed-type-Port>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Port;
         <unnamed-type-Memory>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory;
         <unnamed-type-Interrupt>;
        struct {
            ULONG MinimumVector;
            ULONG MaximumVector;
            enum _IRQ_DEVICE_POLICY AffinityPolicy;
            enum _IRQ_PRIORITY PriorityPolicy;
            ULONG64 TargetedProcessors;
        } Interrupt;
         <unnamed-type-Dma>;
        struct {
            ULONG MinimumChannel;
            ULONG MaximumChannel;
        } Dma;
         <unnamed-type-DmaV3>;
        struct {
            ULONG RequestLine;
            ULONG Reserved;
            ULONG Channel;
            ULONG TransferWidth;
        } DmaV3;
         <unnamed-type-Generic>;
        struct {
            ULONG Length;
            ULONG Alignment;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Generic;
         <unnamed-type-DevicePrivate>;
        struct {
            ULONG Data[3];
        } DevicePrivate;
         <unnamed-type-BusNumber>;
        struct {
            ULONG Length;
            ULONG MinBusNumber;
            ULONG MaxBusNumber;
            ULONG Reserved;
        } BusNumber;
         <unnamed-type-ConfigData>;
        struct {
            ULONG Priority;
            ULONG Reserved1;
            ULONG Reserved2;
        } ConfigData;
         <unnamed-type-Memory40>;
        struct {
            ULONG Length40;
            ULONG Alignment40;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory40;
         <unnamed-type-Memory48>;
        struct {
            ULONG Length48;
            ULONG Alignment48;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory48;
         <unnamed-type-Memory64>;
        struct {
            ULONG Length64;
            ULONG Alignment64;
            union _LARGE_INTEGER MinimumAddress;
            union _LARGE_INTEGER MaximumAddress;
        } Memory64;
         <unnamed-type-Connection>;
        struct {
            UCHAR Class;
            UCHAR Type;
            UCHAR Reserved1;
            UCHAR Reserved2;
            ULONG IdLowPart;
            ULONG IdHighPart;
        } Connection;
    } u;
};

typedef struct _IO_RESOURCE_LIST {
    USHORT Version;
    USHORT Revision;
    ULONG Count;
    struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST {
    ULONG ListSize;
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    ULONG SlotNumber;
    ULONG Reserved[3];
    ULONG AlternativeLists;
    struct _IO_RESOURCE_LIST List[1];
};

typedef struct _IO_SESSION_CONNECT_INFO {
    ULONG SessionId;
    UCHAR LocalSession;
};

typedef struct _IO_STATUS_BLOCK {
    LONG Status;
    PVOID Pointer;
    ULONG64 Information;
};

typedef struct _IO_STATUS_BLOCK32 {
    LONG Status;
    ULONG Information;
};

typedef struct _IR_TIMER_EXTRA_CREATE_PARAMETER {
    USHORT ComponentId;
    USHORT RelativeId;
};

typedef struct _ITEMIDLIST {
    struct _SHITEMID mkid;
};

typedef struct _ITEMIDLIST_ABSOLUTE {
    struct _ITEMIDLIST_RELATIVE _ITEMIDLIST_RELATIVE;
};

typedef struct _ITEMIDLIST_RELATIVE {
    struct _ITEMIDLIST _ITEMIDLIST;
};

typedef struct _ITEMID_CHILD {
    struct _ITEMIDLIST_RELATIVE _ITEMIDLIST_RELATIVE;
};

typedef struct _ITEMSPACING {
    LONG cxSmall;
    LONG cySmall;
    LONG cxLarge;
    LONG cyLarge;
};

typedef struct _ImageArchitectureEntry {
    ULONG FixupInstRVA;
    ULONG NewInst;
};

typedef struct _ImageArchitectureHeader {
    ULONG AmaskValue : 1;
    ULONG AmaskShift : 8;
    ULONG FirstEntryRVA;
};

typedef struct _InputHitTestRequest {
    ULONG dwType;
    struct HMONITOR__ *hMonitor;
    struct tagPOINT ptScreen;
    ULONG uPointerId;
    struct tagINPUT_TRANSFORM xForm;
    enum DIT_HITTESTATTRIBUTES hitTestAttributes;
    ULONG dwWorkspaceId;
    struct _LUID inputSpaceId;
};

typedef struct _InputHitTestResult {
    struct tagPOINT ptScreen;
    struct HWND__ *hWnd;
    PVOID hInputSink;
    struct tagINPUT_TRANSFORM xForm;
    ULONG hHitTestedInteraction;
    struct tagMsgRoutingInfo routingInfo;
    LONG bRouteToMT : 1;
    PVOID viewInstanceId;
    enum SPATIAL_INPUT_ACTIVATION_POLICY activationPolicy;
};

typedef struct _InputMessageNotification {
    struct tagINPUTDEST destination;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
    ULONG time;
    ULONG64 qpcTime;
    PVOID hDevice;
    struct tagPOINT ptHimetric;
    enum _InputMessageNotificationFlags flags;
};

typedef struct _InputNotificationBuffer {
    ULONG cbInputStream;
    PVOID inputStream;
};

typedef struct _JIT_DEBUG_INFO {
    ULONG dwSize;
    ULONG dwProcessorArchitecture;
    ULONG dwThreadID;
    ULONG dwReserved0;
    ULONG64 lpExceptionAddress;
    ULONG64 lpExceptionRecord;
    ULONG64 lpContextRecord;
};

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    PVOID CompletionPort;
};

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    union _LARGE_INTEGER TotalUserTime;
    union _LARGE_INTEGER TotalKernelTime;
    union _LARGE_INTEGER ThisPeriodTotalUserTime;
    union _LARGE_INTEGER ThisPeriodTotalKernelTime;
    ULONG TotalPageFaultCount;
    ULONG TotalProcesses;
    ULONG ActiveProcesses;
    ULONG TotalTerminatedProcesses;
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    struct _IO_COUNTERS IoInfo;
};

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    union _LARGE_INTEGER PerProcessUserTimeLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG LimitFlags;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG ActiveProcessLimit;
    ULONG64 Affinity;
    ULONG PriorityClass;
    ULONG SchedulingClass;
};

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    ULONG NumberOfAssignedProcesses;
    ULONG NumberOfProcessIdsInList;
    ULONG64 ProcessIdList[1];
};

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    ULONG UIRestrictionsClass;
};

typedef struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2 {
    struct _GUID ContainerId;
    struct _GUID ContainerTelemetryId;
    ULONG JobId;
};

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {
    ULONG ControlFlags;
    ULONG CpuRate;
    ULONG Weight;
    USHORT MinRate;
    USHORT MaxRate;
};

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    ULONG EndOfJobTimeAction;
};

typedef struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION {
    struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    struct _IO_COUNTERS IoInfo;
    struct _PROCESS_DISK_COUNTERS DiskIoInfo;
    ULONG64 ContextSwitches;
    union _LARGE_INTEGER TotalCycleTime;
    ULONG64 ReadyTime;
    struct _PROCESS_ENERGY_VALUES EnergyValues;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    struct _IO_COUNTERS IoInfo;
    ULONG64 ProcessMemoryLimit;
    ULONG64 JobMemoryLimit;
    ULONG64 PeakProcessMemoryUsed;
    ULONG64 PeakJobMemoryUsed;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2 {
    struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    struct _IO_COUNTERS IoInfo;
    ULONG64 ProcessMemoryLimit;
    ULONG64 JobMemoryLimit;
    ULONG64 PeakProcessMemoryUsed;
    ULONG64 PeakJobMemoryUsed;
    ULONG64 JobTotalMemoryLimit;
};

typedef struct _JOBOBJECT_FREEZE_INFORMATION {
    ULONG Flags;
    ULONG FreezeOperation : 1;
    ULONG FilterOperation : 1;
    ULONG SwapOperation : 1;
    ULONG Reserved : 29;
    UCHAR Freeze;
    UCHAR Swap;
    UCHAR Reserved0[2];
    struct _JOBOBJECT_WAKE_FILTER WakeFilter;
};

typedef struct _JOBOBJECT_INTERFERENCE_INFORMATION {
    ULONG64 Count;
};

typedef struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION {
    ULONG ControlFlags;
    struct _JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats;
    struct _JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats;
};

typedef struct _JOBOBJECT_IO_ATTRIBUTION_STATS {
    ULONG64 IoCount;
    ULONG64 TotalNonOverlappedQueueTime;
    ULONG64 TotalNonOverlappedServiceTime;
    ULONG64 TotalSize;
};

typedef struct _JOBOBJECT_JOBSET_INFORMATION {
    ULONG MemberLevel;
};

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
};

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2 {
    ULONG LimitFlags;
    ULONG ViolationLimitFlags;
    ULONG64 IoReadBytes;
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytes;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTime;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemory;
    ULONG64 JobLowMemoryLimit;
    ULONG64 JobHighMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
};

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION {
    ULONG64 JobMemory;
    ULONG64 PeakJobMemoryUsed;
};

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2 {
    struct _JOBOBJECT_MEMORY_USAGE_INFORMATION BasicInfo;
    ULONG64 JobSharedMemory;
    ULONG64 Reserved[2];
};

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    ULONG LimitFlags;
};

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2 {
    ULONG64 IoReadBytesLimit;
    ULONG64 IoWriteBytesLimit;
    union _LARGE_INTEGER PerJobUserTimeLimit;
    ULONG64 JobLowMemoryLimit;
    ULONG64 JobHighMemoryLimit;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    ULONG LimitFlags;
};

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    ULONG SecurityLimitFlags;
    PVOID JobToken;
    struct _TOKEN_GROUPS *SidsToDisable;
    struct _TOKEN_PRIVILEGES *PrivilegesToDelete;
    struct _TOKEN_GROUPS *RestrictedSids;
};

typedef struct _JOBOBJECT_WAKE_FILTER {
    ULONG HighEdgeFilter;
    ULONG LowEdgeFilter;
};

typedef struct _JOBOBJECT_WAKE_INFORMATION {
    ULONG64 NotificationChannel;
    ULONG64 WakeCounters[7];
};

typedef struct _JOBOBJECT_WAKE_INFORMATION_V1 {
    ULONG64 NotificationChannel;
    ULONG64 WakeCounters[4];
};

typedef struct _JOB_INFO_1A {
    ULONG JobId;
    PCHAR pPrinterName;
    PCHAR pMachineName;
    PCHAR pUserName;
    PCHAR pDocument;
    PCHAR pDatatype;
    PCHAR pStatus;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG TotalPages;
    ULONG PagesPrinted;
    struct _SYSTEMTIME Submitted;
};

typedef struct _JOB_INFO_1W {
    ULONG JobId;
    PWCHAR pPrinterName;
    PWCHAR pMachineName;
    PWCHAR pUserName;
    PWCHAR pDocument;
    PWCHAR pDatatype;
    PWCHAR pStatus;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG TotalPages;
    ULONG PagesPrinted;
    struct _SYSTEMTIME Submitted;
};

typedef struct _JOB_INFO_2A {
    ULONG JobId;
    PCHAR pPrinterName;
    PCHAR pMachineName;
    PCHAR pUserName;
    PCHAR pDocument;
    PCHAR pNotifyName;
    PCHAR pDatatype;
    PCHAR pPrintProcessor;
    PCHAR pParameters;
    PCHAR pDriverName;
    struct _devicemodeA *pDevMode;
    PCHAR pStatus;
    PVOID pSecurityDescriptor;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG TotalPages;
    ULONG Size;
    struct _SYSTEMTIME Submitted;
    ULONG Time;
    ULONG PagesPrinted;
};

typedef struct _JOB_INFO_2W {
    ULONG JobId;
    PWCHAR pPrinterName;
    PWCHAR pMachineName;
    PWCHAR pUserName;
    PWCHAR pDocument;
    PWCHAR pNotifyName;
    PWCHAR pDatatype;
    PWCHAR pPrintProcessor;
    PWCHAR pParameters;
    PWCHAR pDriverName;
    struct _devicemodeW *pDevMode;
    PWCHAR pStatus;
    PVOID pSecurityDescriptor;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG TotalPages;
    ULONG Size;
    struct _SYSTEMTIME Submitted;
    ULONG Time;
    ULONG PagesPrinted;
};

typedef struct _JOB_INFO_3 {
    ULONG JobId;
    ULONG NextJobId;
    ULONG Reserved;
};

typedef struct _JOB_INFO_4A {
    ULONG JobId;
    PCHAR pPrinterName;
    PCHAR pMachineName;
    PCHAR pUserName;
    PCHAR pDocument;
    PCHAR pNotifyName;
    PCHAR pDatatype;
    PCHAR pPrintProcessor;
    PCHAR pParameters;
    PCHAR pDriverName;
    struct _devicemodeA *pDevMode;
    PCHAR pStatus;
    PVOID pSecurityDescriptor;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG TotalPages;
    ULONG Size;
    struct _SYSTEMTIME Submitted;
    ULONG Time;
    ULONG PagesPrinted;
    LONG SizeHigh;
};

typedef struct _JOB_INFO_4W {
    ULONG JobId;
    PWCHAR pPrinterName;
    PWCHAR pMachineName;
    PWCHAR pUserName;
    PWCHAR pDocument;
    PWCHAR pNotifyName;
    PWCHAR pDatatype;
    PWCHAR pPrintProcessor;
    PWCHAR pParameters;
    PWCHAR pDriverName;
    struct _devicemodeW *pDevMode;
    PWCHAR pStatus;
    PVOID pSecurityDescriptor;
    ULONG Status;
    ULONG Priority;
    ULONG Position;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG TotalPages;
    ULONG Size;
    struct _SYSTEMTIME Submitted;
    ULONG Time;
    ULONG PagesPrinted;
    LONG SizeHigh;
};

typedef struct _JOB_SET_ARRAY {
    PVOID JobHandle;
    ULONG MemberLevel;
    ULONG Flags;
};

typedef struct _JOURNAL_ABSOLUTE_INFORMATION {
    union _LARGE_INTEGER StartTimeStamp;
    union _LARGE_INTEGER EndTimeStamp;
    ULONG64 NumberOfRecords;
    ULONG FillLevel;
};

typedef struct _JOURNAL_CLIENT_INFORMATION {
    union _LARGE_INTEGER StartTimeStamp;
    union _LARGE_INTEGER CurrentTimeStamp;
    ULONG64 RecordsToProcess;
    ULONG RelativeFillLevel;
};

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG SecurityDescriptorLength;
    PVOID SecurityDescriptor;
    USHORT ClassLength;
    PVOID ClassData;
    UCHAR SymbolicLink;
};

typedef struct _JOURNAL_RENAME_KEY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    struct _UNICODE_STRING KeyKeyName;
};

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    struct _UNICODE_STRING ValueName;
    ULONG OldValueType;
    ULONG OldDataLength;
    PVOID OldData;
    ULONG NewValueType;
    ULONG NewDataLength;
    PVOID NewData;
};

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    union _LARGE_INTEGER OldLastWriteTime;
    union _LARGE_INTEGER NewLastWriteTime;
};

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG OldSecurityDescriptorLength;
    PVOID OldSecurityDescriptor;
    ULONG NewSecurityDescriptorLength;
    PVOID NewSecurityDescriptor;
};

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _UNICODE_STRING KeyPathName;
    ULONG OldFlags;
    ULONG NewFlags;
};

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION {
    enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
    ULONG64 RecordNumber;
    union _LARGE_INTEGER TimeStamp;
    struct _GUID TransactionID;
};

typedef struct _JUMP_BUFFER {
    ULONG64 Frame;
    ULONG64 Rbx;
    ULONG64 Rsp;
    ULONG64 Rbp;
    ULONG64 Rsi;
    ULONG64 Rdi;
    ULONG64 R12;
    ULONG64 R13;
    ULONG64 R14;
    ULONG64 R15;
    ULONG64 Rip;
    ULONG MxCsr;
    USHORT FpCsr;
    USHORT Spare;
    struct _SETJMP_FLOAT128 Xmm6;
    struct _SETJMP_FLOAT128 Xmm7;
    struct _SETJMP_FLOAT128 Xmm8;
    struct _SETJMP_FLOAT128 Xmm9;
    struct _SETJMP_FLOAT128 Xmm10;
    struct _SETJMP_FLOAT128 Xmm11;
    struct _SETJMP_FLOAT128 Xmm12;
    struct _SETJMP_FLOAT128 Xmm13;
    struct _SETJMP_FLOAT128 Xmm14;
    struct _SETJMP_FLOAT128 Xmm15;
};

typedef struct _KAFFINITY_ENUMERATION_CONTEXT {
    struct _KAFFINITY_EX *Affinity;
    ULONG64 CurrentMask;
    USHORT CurrentIndex;
};

typedef struct _KAFFINITY_EX {
    USHORT Count;
    USHORT Size;
    ULONG Reserved;
    ULONG64 Bitmap[20];
};

typedef struct _KCRM_MARSHAL_HEADER {
    ULONG VersionMajor;
    ULONG VersionMinor;
    ULONG NumProtocols;
    ULONG Unused;
};

typedef struct _KCRM_PROTOCOL_BLOB {
    struct _GUID ProtocolId;
    ULONG StaticInfoLength;
    ULONG TransactionIdInfoLength;
    ULONG Unused1;
    ULONG Unused2;
};

typedef struct _KCRM_TRANSACTION_BLOB {
    struct _GUID UOW;
    struct _GUID TmIdentity;
    ULONG IsolationLevel;
    ULONG IsolationFlags;
    ULONG Timeout;
    WCHAR Description[64];
};

typedef struct _KDC_PROXY_CACHE_ENTRY_DATA {
    ULONG64 SinceLastUsed;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING ProxyServerName;
    struct _UNICODE_STRING ProxyServerVdir;
    USHORT ProxyServerPort;
    struct _LUID LogonId;
    struct _UNICODE_STRING CredUserName;
    struct _UNICODE_STRING CredDomainName;
    UCHAR GlobalCache;
};

typedef struct _KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING RealmName;
    struct _UNICODE_STRING KdcAddress;
    ULONG AddressType;
    ULONG DcFlags;
};

typedef struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING RealmName;
    struct _UNICODE_STRING KdcAddress;
    ULONG AddressType;
};

typedef struct _KERB_ADD_CREDENTIALS_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING Password;
    struct _LUID LogonId;
    ULONG Flags;
};

typedef struct _KERB_ADD_CREDENTIALS_REQUEST_EX {
    struct _KERB_ADD_CREDENTIALS_REQUEST Credentials;
    ULONG PrincipalNameCount;
    struct _UNICODE_STRING PrincipalNames[1];
};

typedef struct _KERB_AUTH_DATA {
    ULONG Type;
    ULONG Length;
    PUCHAR Data;
};

typedef struct _KERB_BINDING_CACHE_ENTRY_DATA {
    ULONG64 DiscoveryTime;
    struct _UNICODE_STRING RealmName;
    struct _UNICODE_STRING KdcAddress;
    ULONG AddressType;
    ULONG Flags;
    ULONG DcFlags;
    ULONG CacheFlags;
    struct _UNICODE_STRING KdcName;
};

typedef struct _KERB_CERTIFICATE_HASHINFO {
    USHORT StoreNameLength;
    USHORT HashLength;
};

typedef struct _KERB_CERTIFICATE_INFO {
    ULONG CertInfoSize;
    ULONG InfoType;
};

typedef struct _KERB_CERTIFICATE_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING Pin;
    ULONG Flags;
    ULONG CspDataLength;
    PUCHAR CspData;
};

typedef struct _KERB_CERTIFICATE_S4U_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    struct _UNICODE_STRING UserPrincipalName;
    struct _UNICODE_STRING DomainName;
    ULONG CertificateLength;
    PUCHAR Certificate;
};

typedef struct _KERB_CERTIFICATE_UNLOCK_LOGON {
    struct _KERB_CERTIFICATE_LOGON Logon;
    struct _LUID LogonId;
};

typedef struct _KERB_CHANGEPASSWORD_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING AccountName;
    struct _UNICODE_STRING OldPassword;
    struct _UNICODE_STRING NewPassword;
    UCHAR Impersonating;
};

typedef struct _KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
};

typedef struct _KERB_DECRYPT_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    ULONG Flags;
    LONG CryptoType;
    LONG KeyUsage;
    struct KERB_CRYPTO_KEY Key;
    ULONG EncryptedDataSize;
    ULONG InitialVectorSize;
    PUCHAR InitialVector;
    PUCHAR EncryptedData;
};

typedef struct _KERB_DECRYPT_RESPONSE {
    UCHAR DecryptedData[1];
};

typedef struct _KERB_EXTERNAL_NAME {
    SHORT NameType;
    USHORT NameCount;
    struct _UNICODE_STRING Names[1];
};

typedef struct _KERB_EXTERNAL_TICKET {
    struct _KERB_EXTERNAL_NAME *ServiceName;
    struct _KERB_EXTERNAL_NAME *TargetName;
    struct _KERB_EXTERNAL_NAME *ClientName;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING TargetDomainName;
    struct _UNICODE_STRING AltTargetDomainName;
    struct KERB_CRYPTO_KEY SessionKey;
    ULONG TicketFlags;
    ULONG Flags;
    union _LARGE_INTEGER KeyExpirationTime;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    union _LARGE_INTEGER RenewUntil;
    union _LARGE_INTEGER TimeSkew;
    ULONG EncodedTicketSize;
    PUCHAR EncodedTicket;
};

typedef struct _KERB_INTERACTIVE_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING LogonDomainName;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING Password;
};

typedef struct _KERB_INTERACTIVE_PROFILE {
    enum _KERB_PROFILE_BUFFER_TYPE MessageType;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    union _LARGE_INTEGER LogonTime;
    union _LARGE_INTEGER LogoffTime;
    union _LARGE_INTEGER KickOffTime;
    union _LARGE_INTEGER PasswordLastSet;
    union _LARGE_INTEGER PasswordCanChange;
    union _LARGE_INTEGER PasswordMustChange;
    struct _UNICODE_STRING LogonScript;
    struct _UNICODE_STRING HomeDirectory;
    struct _UNICODE_STRING FullName;
    struct _UNICODE_STRING ProfilePath;
    struct _UNICODE_STRING HomeDirectoryDrive;
    struct _UNICODE_STRING LogonServer;
    ULONG UserFlags;
};

typedef struct _KERB_INTERACTIVE_UNLOCK_LOGON {
    struct _KERB_INTERACTIVE_LOGON Logon;
    struct _LUID LogonId;
};

typedef struct _KERB_NET_ADDRESS {
    ULONG Family;
    ULONG Length;
    PCHAR Address;
};

typedef struct _KERB_NET_ADDRESSES {
    ULONG Number;
    struct _KERB_NET_ADDRESS Addresses[1];
};

typedef struct _KERB_PURGE_BINDING_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
};

typedef struct _KERB_PURGE_KDC_PROXY_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Flags;
    struct _LUID LogonId;
};

typedef struct _KERB_PURGE_KDC_PROXY_CACHE_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfPurged;
};

typedef struct _KERB_PURGE_TKT_CACHE_EX_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    ULONG Flags;
    struct _KERB_TICKET_CACHE_INFO_EX TicketTemplate;
};

typedef struct _KERB_PURGE_TKT_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    struct _UNICODE_STRING ServerName;
    struct _UNICODE_STRING RealmName;
};

typedef struct _KERB_QUERY_BINDING_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
};

typedef struct _KERB_QUERY_BINDING_CACHE_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfEntries;
    struct _KERB_BINDING_CACHE_ENTRY_DATA *Entries;
};

typedef struct _KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Flags;
    struct _UNICODE_STRING DomainName;
};

typedef struct _KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Flags;
    ULONG ExtendedPolicies;
    ULONG DsFlags;
};

typedef struct _KERB_QUERY_KDC_PROXY_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Flags;
    struct _LUID LogonId;
};

typedef struct _KERB_QUERY_KDC_PROXY_CACHE_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfEntries;
    struct _KDC_PROXY_CACHE_ENTRY_DATA *Entries;
};

typedef struct _KERB_QUERY_S4U2PROXY_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Flags;
    struct _LUID LogonId;
};

typedef struct _KERB_QUERY_S4U2PROXY_CACHE_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfCreds;
    struct _KERB_S4U2PROXY_CRED *Creds;
};

typedef struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    struct _KERB_TICKET_CACHE_INFO_EX2 Tickets[1];
};

typedef struct _KERB_QUERY_TKT_CACHE_EX3_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    struct _KERB_TICKET_CACHE_INFO_EX3 Tickets[1];
};

typedef struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    struct _KERB_TICKET_CACHE_INFO_EX Tickets[1];
};

typedef struct _KERB_QUERY_TKT_CACHE_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
};

typedef struct _KERB_QUERY_TKT_CACHE_RESPONSE {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    struct _KERB_TICKET_CACHE_INFO Tickets[1];
};

typedef struct _KERB_REFRESH_SCCRED_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING CredentialBlob;
    struct _LUID LogonId;
    ULONG Flags;
};

typedef struct _KERB_RETRIEVE_TKT_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    struct _UNICODE_STRING TargetName;
    ULONG TicketFlags;
    ULONG CacheOptions;
    LONG EncryptionType;
    struct _SecHandle CredentialsHandle;
};

typedef struct _KERB_RETRIEVE_TKT_RESPONSE {
    struct _KERB_EXTERNAL_TICKET Ticket;
};

typedef struct _KERB_S4U2PROXY_CACHE_ENTRY_INFO {
    struct _UNICODE_STRING ServerName;
    ULONG Flags;
    LONG LastStatus;
    union _LARGE_INTEGER Expiry;
};

typedef struct _KERB_S4U2PROXY_CRED {
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING DomainName;
    ULONG Flags;
    LONG LastStatus;
    union _LARGE_INTEGER Expiry;
    ULONG CountOfEntries;
    struct _KERB_S4U2PROXY_CACHE_ENTRY_INFO *Entries;
};

typedef struct _KERB_S4U_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    struct _UNICODE_STRING ClientUpn;
    struct _UNICODE_STRING ClientRealm;
};

typedef struct _KERB_SETPASSWORD_EX_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    struct _SecHandle CredentialsHandle;
    ULONG Flags;
    struct _UNICODE_STRING AccountRealm;
    struct _UNICODE_STRING AccountName;
    struct _UNICODE_STRING Password;
    struct _UNICODE_STRING ClientRealm;
    struct _UNICODE_STRING ClientName;
    UCHAR Impersonating;
    struct _UNICODE_STRING KdcAddress;
    ULONG KdcAddressType;
};

typedef struct _KERB_SETPASSWORD_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    struct _SecHandle CredentialsHandle;
    ULONG Flags;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING AccountName;
    struct _UNICODE_STRING Password;
};

typedef struct _KERB_SMART_CARD_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING Pin;
    ULONG CspDataLength;
    PUCHAR CspData;
};

typedef struct _KERB_SMART_CARD_PROFILE {
    struct _KERB_INTERACTIVE_PROFILE Profile;
    ULONG CertificateSize;
    PUCHAR CertificateData;
};

typedef struct _KERB_SMART_CARD_UNLOCK_LOGON {
    struct _KERB_SMART_CARD_LOGON Logon;
    struct _LUID LogonId;
};

typedef struct _KERB_SUBMIT_TKT_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID LogonId;
    ULONG Flags;
    struct KERB_CRYPTO_KEY32 Key;
    ULONG KerbCredSize;
    ULONG KerbCredOffset;
};

typedef struct _KERB_TICKET_CACHE_INFO {
    struct _UNICODE_STRING ServerName;
    struct _UNICODE_STRING RealmName;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    union _LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
};

typedef struct _KERB_TICKET_CACHE_INFO_EX {
    struct _UNICODE_STRING ClientName;
    struct _UNICODE_STRING ClientRealm;
    struct _UNICODE_STRING ServerName;
    struct _UNICODE_STRING ServerRealm;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    union _LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
};

typedef struct _KERB_TICKET_CACHE_INFO_EX2 {
    struct _UNICODE_STRING ClientName;
    struct _UNICODE_STRING ClientRealm;
    struct _UNICODE_STRING ServerName;
    struct _UNICODE_STRING ServerRealm;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    union _LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
    ULONG SessionKeyType;
    ULONG BranchId;
};

typedef struct _KERB_TICKET_CACHE_INFO_EX3 {
    struct _UNICODE_STRING ClientName;
    struct _UNICODE_STRING ClientRealm;
    struct _UNICODE_STRING ServerName;
    struct _UNICODE_STRING ServerRealm;
    union _LARGE_INTEGER StartTime;
    union _LARGE_INTEGER EndTime;
    union _LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
    ULONG SessionKeyType;
    ULONG BranchId;
    ULONG CacheFlags;
    struct _UNICODE_STRING KdcCalled;
};

typedef struct _KERB_TICKET_LOGON {
    enum _KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    ULONG ServiceTicketLength;
    ULONG TicketGrantingTicketLength;
    PUCHAR ServiceTicket;
    PUCHAR TicketGrantingTicket;
};

typedef struct _KERB_TICKET_PROFILE {
    struct _KERB_INTERACTIVE_PROFILE Profile;
    struct KERB_CRYPTO_KEY SessionKey;
};

typedef struct _KERB_TICKET_UNLOCK_LOGON {
    struct _KERB_TICKET_LOGON Logon;
    struct _LUID LogonId;
};

typedef struct _KERB_TRANSFER_CRED_REQUEST {
    enum _KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _LUID OriginLogonId;
    struct _LUID DestinationLogonId;
    ULONG Flags;
};

typedef struct _KERNEL_USER_TIMES {
    union _LARGE_INTEGER CreateTime;
    union _LARGE_INTEGER ExitTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
};

typedef struct _KERNPAIR {
    USHORT wBoth;
    SHORT sAmount;
};

typedef struct _KEYBOARD_CORRECTION_INFO {
    struct HWND__ *hwnd;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
    UCHAR abKeyStates[256];
    ULONG dwScancode;
    ULONG dwVkey;
    ULONG dwChar;
    ULONG dwFlags;
    struct tagINPUT_MESSAGE_SOURCE isi;
    PVOID hDevice;
    struct HKL__ *hkl;
};

typedef struct _KEY_BASIC_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_CACHED_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG SubKeys;
    ULONG MaxNameLen;
    ULONG Values;
    ULONG MaxValueNameLen;
    ULONG MaxValueDataLen;
    ULONG NameLength;
};

typedef struct _KEY_CONTROL_FLAGS_INFORMATION {
    ULONG ControlFlags;
};

typedef struct _KEY_EVENT_RECORD {
    LONG bKeyDown;
    USHORT wRepeatCount;
    USHORT wVirtualKeyCode;
    USHORT wVirtualScanCode;
     <unnamed-type-uChar>;
    union {
        WCHAR UnicodeChar;
        CHAR AsciiChar;
    } uChar;
    ULONG dwControlKeyState;
};

typedef struct _KEY_FLAGS_INFORMATION {
    ULONG Wow64Flags;
    ULONG KeyFlags;
    ULONG ControlFlags;
};

typedef struct _KEY_FULL_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG ClassOffset;
    ULONG ClassLength;
    ULONG SubKeys;
    ULONG MaxNameLen;
    ULONG MaxClassLen;
    ULONG Values;
    ULONG MaxValueNameLen;
    ULONG MaxValueDataLen;
    WCHAR Class[1];
};

typedef struct _KEY_HANDLE_TAGS_INFORMATION {
    ULONG HandleTags;
};

typedef struct _KEY_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG IsSupersedeLocal : 1;
    ULONG IsSupersedeTree : 1;
    ULONG ClassIsInherited : 1;
    ULONG Reserved : 28;
};

typedef struct _KEY_NAME_INFORMATION {
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_NODE_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
    ULONG TitleIndex;
    ULONG ClassOffset;
    ULONG ClassLength;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION {
    ULONG Count;
    struct KEY_PID_ARRAY KeyArray[1];
};

typedef struct _KEY_SET_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG IsSupersedeLocal : 1;
    ULONG IsSupersedeTree : 1;
    ULONG ClassIsInherited : 1;
    ULONG Reserved : 28;
};

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION {
    ULONG VirtualTarget : 1;
    ULONG VirtualStore : 1;
    ULONG VirtualSource : 1;
    ULONG Reserved : 29;
};

typedef struct _KEY_TRUST_INFORMATION {
    ULONG TrustedKey : 1;
    ULONG Reserved : 31;
};

typedef struct _KEY_TYPE_SUBTYPE {
    ULONG dwKeySpec;
    struct _GUID Type;
    struct _GUID Subtype;
};

typedef struct _KEY_VALUE_BASIC_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_VALUE_ENTRY {
    struct _UNICODE_STRING *ValueName;
    ULONG DataLength;
    ULONG DataOffset;
    ULONG Type;
};

typedef struct _KEY_VALUE_FULL_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG DataOffset;
    ULONG DataLength;
    ULONG NameLength;
    WCHAR Name[1];
};

typedef struct _KEY_VALUE_LAYER_INFORMATION {
    ULONG IsTombstone : 1;
    ULONG Reserved : 31;
};

typedef struct _KEY_VALUE_PARTIAL_INFORMATION {
    ULONG TitleIndex;
    ULONG Type;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {
    ULONG Type;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct _KEY_VIRTUALIZATION_INFORMATION {
    ULONG VirtualizationCandidate : 1;
    ULONG VirtualizationEnabled : 1;
    ULONG VirtualTarget : 1;
    ULONG VirtualStore : 1;
    ULONG VirtualSource : 1;
    ULONG Reserved : 27;
};

typedef struct _KEY_WOW64_FLAGS_INFORMATION {
    ULONG UserFlags;
};

typedef struct _KEY_WRITE_TIME_INFORMATION {
    union _LARGE_INTEGER LastWriteTime;
};

typedef struct _KLDR_DATA_TABLE_ENTRY {
    struct _LIST_ENTRY InLoadOrderLinks;
    PVOID ExceptionTable;
    ULONG ExceptionTableSize;
    PVOID GpValue;
    struct _NON_PAGED_DEBUG_INFO *NonPagedDebugInfo;
    PVOID DllBase;
    PVOID EntryPoint;
    ULONG SizeOfImage;
    struct _UNICODE_STRING FullDllName;
    struct _UNICODE_STRING BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
     <unnamed-type-u1>;
    union {
        USHORT SignatureLevel : 4;
        USHORT SignatureType : 3;
        USHORT Unused : 9;
        USHORT EntireField;
    } u1;
    PVOID SectionPointer;
    ULONG CheckSum;
    ULONG CoverageSectionSize;
    PVOID CoverageSection;
    PVOID LoadedImports;
    PVOID Spare;
    ULONG SizeOfImageNotRounded;
    ULONG TimeDateStamp;
};

typedef struct _KLDR_DATA_TABLE_ENTRY32 {
    struct LIST_ENTRY32 InLoadOrderLinks;
    ULONG __Undefined1;
    ULONG __Undefined2;
    ULONG __Undefined3;
    ULONG NonPagedDebugInfo;
    ULONG DllBase;
    ULONG EntryPoint;
    ULONG SizeOfImage;
    struct _STRING32 FullDllName;
    struct _STRING32 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT __Undefined5;
    ULONG __Undefined6;
    ULONG CheckSum;
    ULONG TimeDateStamp;
};

typedef struct _KLDR_DATA_TABLE_ENTRY64 {
    struct LIST_ENTRY64 InLoadOrderLinks;
    ULONG64 __Undefined1;
    ULONG64 __Undefined2;
    ULONG64 __Undefined3;
    ULONG64 NonPagedDebugInfo;
    ULONG64 DllBase;
    ULONG64 EntryPoint;
    ULONG SizeOfImage;
    struct _STRING64 FullDllName;
    struct _STRING64 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT __Undefined5;
    ULONG64 __Undefined6;
    ULONG CheckSum;
    ULONG __padding1;
    ULONG TimeDateStamp;
    ULONG __padding2;
};

typedef struct _KLOCK_QUEUE_HANDLE {
    struct _KSPIN_LOCK_QUEUE LockQueue;
    UCHAR OldIrql;
    VOID _KLOCK_QUEUE_HANDLE;
    VOID _KLOCK_QUEUE_HANDLE;
    struct _KLOCK_QUEUE_HANDLE *operator=;
    struct _KLOCK_QUEUE_HANDLE *operator=;
};

typedef struct _KNONVOLATILE_CONTEXT_POINTERS {
    struct _M128A *FloatingContext[16];
    struct _M128A *Xmm0;
    struct _M128A *Xmm1;
    struct _M128A *Xmm2;
    struct _M128A *Xmm3;
    struct _M128A *Xmm4;
    struct _M128A *Xmm5;
    struct _M128A *Xmm6;
    struct _M128A *Xmm7;
    struct _M128A *Xmm8;
    struct _M128A *Xmm9;
    struct _M128A *Xmm10;
    struct _M128A *Xmm11;
    struct _M128A *Xmm12;
    struct _M128A *Xmm13;
    struct _M128A *Xmm14;
    struct _M128A *Xmm15;
    PULONG64 IntegerContext[16];
    PULONG64 Rax;
    PULONG64 Rcx;
    PULONG64 Rdx;
    PULONG64 Rbx;
    PULONG64 Rsp;
    PULONG64 Rbp;
    PULONG64 Rsi;
    PULONG64 Rdi;
    PULONG64 R8;
    PULONG64 R9;
    PULONG64 R10;
    PULONG64 R11;
    PULONG64 R12;
    PULONG64 R13;
    PULONG64 R14;
    PULONG64 R15;
};

typedef struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64 {
    PULONG64 X19;
    PULONG64 X20;
    PULONG64 X21;
    PULONG64 X22;
    PULONG64 X23;
    PULONG64 X24;
    PULONG64 X25;
    PULONG64 X26;
    PULONG64 X27;
    PULONG64 X28;
    PULONG64 Fp;
    PULONG64 Lr;
    PULONG64 D8;
    PULONG64 D9;
    PULONG64 D10;
    PULONG64 D11;
    PULONG64 D12;
    PULONG64 D13;
    PULONG64 D14;
    PULONG64 D15;
};

typedef struct _KSPIN_LOCK_QUEUE {
    struct _KSPIN_LOCK_QUEUE *Next;
    PULONG64 Lock;
    VOID _KSPIN_LOCK_QUEUE;
    VOID _KSPIN_LOCK_QUEUE;
    struct _KSPIN_LOCK_QUEUE *operator=;
    struct _KSPIN_LOCK_QUEUE *operator=;
};

typedef struct _KSYSTEM_TIME {
    ULONG LowPart;
    LONG High1Time;
    LONG High2Time;
};

typedef struct _KTMOBJECT_CURSOR {
    struct _GUID LastQuery;
    ULONG ObjectIdCount;
    struct _GUID ObjectIds[1];
};

typedef struct _KUSER_SHARED_DATA {
    ULONG TickCountLowDeprecated;
    ULONG TickCountMultiplier;
    struct _KSYSTEM_TIME InterruptTime;
    struct _KSYSTEM_TIME SystemTime;
    struct _KSYSTEM_TIME TimeZoneBias;
    USHORT ImageNumberLow;
    USHORT ImageNumberHigh;
    WCHAR NtSystemRoot[260];
    ULONG MaxStackTraceDepth;
    ULONG CryptoExponent;
    ULONG TimeZoneId;
    ULONG LargePageMinimum;
    ULONG AitSamplingValue;
    ULONG AppCompatFlag;
    ULONG64 RNGSeedVersion;
    ULONG GlobalValidationRunlevel;
    LONG TimeZoneBiasStamp;
    ULONG NtBuildNumber;
    enum _NT_PRODUCT_TYPE NtProductType;
    UCHAR ProductTypeIsValid;
    UCHAR Reserved0[1];
    USHORT NativeProcessorArchitecture;
    ULONG NtMajorVersion;
    ULONG NtMinorVersion;
    UCHAR ProcessorFeatures[64];
    ULONG Reserved1;
    ULONG Reserved3;
    ULONG TimeSlip;
    enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
    ULONG BootId;
    union _LARGE_INTEGER SystemExpirationDate;
    ULONG SuiteMask;
    UCHAR KdDebuggerEnabled;
    UCHAR MitigationPolicies;
    UCHAR NXSupportPolicy : 2;
    UCHAR SEHValidationPolicy : 2;
    UCHAR CurDirDevicesSkippedForDlls : 2;
    UCHAR Reserved : 2;
    UCHAR Reserved6[2];
    ULONG ActiveConsoleId;
    ULONG DismountCount;
    ULONG ComPlusPackage;
    ULONG LastSystemRITEventTickCount;
    ULONG NumberOfPhysicalPages;
    UCHAR SafeBootMode;
    UCHAR VirtualizationFlags;
    UCHAR Reserved12[2];
    ULONG SharedDataFlags;
    ULONG DbgErrorPortPresent : 1;
    ULONG DbgElevationEnabled : 1;
    ULONG DbgVirtEnabled : 1;
    ULONG DbgInstallerDetectEnabled : 1;
    ULONG DbgLkgEnabled : 1;
    ULONG DbgDynProcessorEnabled : 1;
    ULONG DbgConsoleBrokerEnabled : 1;
    ULONG DbgSecureBootEnabled : 1;
    ULONG DbgMultiSessionSku : 1;
    ULONG DbgMultiUsersInSessionSku : 1;
    ULONG DbgStateSeparationEnabled : 1;
    ULONG SpareBits : 21;
    ULONG DataFlagsPad[1];
    ULONG64 TestRetInstruction;
    LONG64 QpcFrequency;
    ULONG SystemCall;
    ULONG SystemCallPad0;
    ULONG64 SystemCallPad[2];
    struct _KSYSTEM_TIME TickCount;
    ULONG64 TickCountQuad;
    ULONG ReservedTickCountOverlay[3];
    ULONG TickCountPad[1];
    ULONG Cookie;
    ULONG CookiePad[1];
    LONG64 ConsoleSessionForegroundProcessId;
    ULONG64 TimeUpdateLock;
    ULONG64 BaselineSystemTimeQpc;
    ULONG64 BaselineInterruptTimeQpc;
    ULONG64 QpcSystemTimeIncrement;
    ULONG64 QpcInterruptTimeIncrement;
    UCHAR QpcSystemTimeIncrementShift;
    UCHAR QpcInterruptTimeIncrementShift;
    USHORT UnparkedProcessorCount;
    ULONG EnclaveFeatureMask[4];
    ULONG TelemetryCoverageRound;
    USHORT UserModeGlobalLogger[16];
    ULONG ImageFileExecutionOptions;
    ULONG LangGenerationCount;
    ULONG64 Reserved4;
    ULONG64 InterruptTimeBias;
    ULONG64 QpcBias;
    ULONG ActiveProcessorCount;
    UCHAR ActiveGroupCount;
    UCHAR Reserved9;
    USHORT QpcData;
    UCHAR QpcBypassEnabled;
    UCHAR QpcShift;
    union _LARGE_INTEGER TimeZoneBiasEffectiveStart;
    union _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
    struct _XSTATE_CONFIGURATION XState;
};

typedef struct _LANA_ENUM {
    UCHAR length;
    UCHAR lana[255];
};

typedef struct _LAST_EXCEPTION_LOG {
    struct _EXCEPTION_RECORD ExceptionRecord;
    struct _CONTEXT ContextRecord;
    ULONG ControlPc;
    enum _EXCEPTION_DISPOSITION Disposition;
    ULONG HandlerData[5];
};

typedef struct _LBLOB {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PUCHAR Buffer;
};

typedef struct _LDBL12 {
    UCHAR ld12[12];
};

typedef struct _LDOUBLE {
    UCHAR ld[10];
};

typedef struct _LDRP_CSLIST {
    struct _SINGLE_LIST_ENTRY *Tail;
};

typedef struct _LDRP_LOAD_CONTEXT {
};

typedef struct _LDR_DATA_TABLE_ENTRY {
    struct _LIST_ENTRY InLoadOrderLinks;
    struct _LIST_ENTRY InMemoryOrderLinks;
    struct _LIST_ENTRY InInitializationOrderLinks;
    PVOID DllBase;
    PVOID EntryPoint;
    ULONG SizeOfImage;
    struct _UNICODE_STRING FullDllName;
    struct _UNICODE_STRING BaseDllName;
    UCHAR FlagGroup[4];
    ULONG Flags;
    ULONG PackagedBinary : 1;
    ULONG MarkedForRemoval : 1;
    ULONG ImageDll : 1;
    ULONG LoadNotificationsSent : 1;
    ULONG TelemetryEntryProcessed : 1;
    ULONG ProcessStaticImport : 1;
    ULONG InLegacyLists : 1;
    ULONG InIndexes : 1;
    ULONG ShimDll : 1;
    ULONG InExceptionTable : 1;
    ULONG ReservedFlags1 : 2;
    ULONG LoadInProgress : 1;
    ULONG LoadConfigProcessed : 1;
    ULONG EntryProcessed : 1;
    ULONG ProtectDelayLoad : 1;
    ULONG ReservedFlags3 : 2;
    ULONG DontCallForThreads : 1;
    ULONG ProcessAttachCalled : 1;
    ULONG ProcessAttachFailed : 1;
    ULONG CorDeferredValidate : 1;
    ULONG CorImage : 1;
    ULONG DontRelocate : 1;
    ULONG CorILOnly : 1;
    ULONG ChpeImage : 1;
    ULONG ReservedFlags5 : 2;
    ULONG Redirected : 1;
    ULONG ReservedFlags6 : 2;
    ULONG CompatDatabaseProcessed : 1;
    USHORT ObsoleteLoadCount;
    USHORT TlsIndex;
    struct _LIST_ENTRY HashLinks;
    ULONG TimeDateStamp;
    struct _ACTIVATION_CONTEXT *EntryPointActivationContext;
    PVOID Lock;
    struct _LDR_DDAG_NODE *DdagNode;
    struct _LIST_ENTRY NodeModuleLink;
    struct _LDRP_LOAD_CONTEXT *LoadContext;
    PVOID ParentDllBase;
    PVOID SwitchBackContext;
    struct _RTL_BALANCED_NODE BaseAddressIndexNode;
    struct _RTL_BALANCED_NODE MappingInfoIndexNode;
    ULONG64 OriginalBase;
    union _LARGE_INTEGER LoadTime;
    ULONG BaseNameHashValue;
    enum _LDR_DLL_LOAD_REASON LoadReason;
    ULONG ImplicitPathOptions;
    ULONG ReferenceCount;
    ULONG DependentLoadFlags;
    UCHAR SigningLevel;
};

typedef struct _LDR_DATA_TABLE_ENTRY32 {
    struct LIST_ENTRY32 InLoadOrderLinks;
    struct LIST_ENTRY32 InMemoryOrderLinks;
    struct LIST_ENTRY32 InInitializationOrderLinks;
    ULONG DllBase;
    ULONG EntryPoint;
    ULONG SizeOfImage;
    struct _STRING32 FullDllName;
    struct _STRING32 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT TlsIndex;
    struct LIST_ENTRY32 HashLinks;
    ULONG SectionPointer;
    ULONG CheckSum;
    ULONG TimeDateStamp;
    ULONG LoadedImports;
};

typedef struct _LDR_DATA_TABLE_ENTRY64 {
    struct LIST_ENTRY64 InLoadOrderLinks;
    struct LIST_ENTRY64 InMemoryOrderLinks;
    struct LIST_ENTRY64 InInitializationOrderLinks;
    ULONG64 DllBase;
    ULONG64 EntryPoint;
    ULONG SizeOfImage;
    struct _STRING64 FullDllName;
    struct _STRING64 BaseDllName;
    ULONG Flags;
    USHORT LoadCount;
    USHORT TlsIndex;
    struct LIST_ENTRY64 HashLinks;
    ULONG64 SectionPointer;
    ULONG CheckSum;
    ULONG TimeDateStamp;
    ULONG64 LoadedImports;
};

typedef struct _LDR_DDAG_NODE {
    struct _LIST_ENTRY Modules;
    struct _LDR_SERVICE_TAG_RECORD *ServiceTagList;
    ULONG LoadCount;
    ULONG LoadWhileUnloadingCount;
    ULONG LowestLink;
    struct _LDRP_CSLIST Dependencies;
    struct _LDRP_CSLIST IncomingDependencies;
    enum _LDR_DDAG_STATE State;
    struct _SINGLE_LIST_ENTRY CondenseLink;
    ULONG PreorderNumber;
};

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA {
    ULONG Flags;
    struct _UNICODE_STRING *FullDllName;
    struct _UNICODE_STRING *BaseDllName;
    PVOID DllBase;
    ULONG SizeOfImage;
};

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA {
    ULONG Flags;
    struct _UNICODE_STRING *FullDllName;
    struct _UNICODE_STRING *BaseDllName;
    PVOID DllBase;
    ULONG SizeOfImage;
};

typedef struct _LDR_ENUM_RESOURCE_ENTRY {
     <unnamed-type-Path>;
    union {
        ULONG64 NameOrId;
        struct _IMAGE_RESOURCE_DIRECTORY_STRING *Name;
        USHORT Id;
        USHORT NameIsPresent;
    } Path[3];
    PVOID Data;
    ULONG Size;
    ULONG Reserved;
};

typedef struct _LDR_FAILURE_DATA {
    LONG Status;
    WCHAR ImageName[32];
    WCHAR AdditionalInfo[32];
};

typedef struct _LDR_IMPORT_CALLBACK_INFO {
    PVOID ImportCallbackRoutine;
    PVOID ImportCallbackParameter;
};

typedef struct _LDR_RESLOADER_RET {
    PVOID Module;
    PVOID DataEntry;
    PVOID TargetModule;
};

typedef struct _LDR_SECTION_INFO {
    PVOID SectionHandle;
    ULONG DesiredAccess;
    struct _OBJECT_ATTRIBUTES *ObjA;
    ULONG SectionPageProtection;
    ULONG AllocationAttributes;
};

typedef struct _LDR_SERVICE_TAG_RECORD {
    struct _LDR_SERVICE_TAG_RECORD *Next;
    ULONG ServiceTag;
};

typedef struct _LDR_VERIFY_IMAGE_INFO {
    ULONG Size;
    ULONG Flags;
    struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
    struct _LDR_SECTION_INFO SectionInfo;
    USHORT ImageCharacteristics;
};

typedef struct _LDT_ENTRY {
    USHORT LimitLow;
    USHORT BaseLow;
     <unnamed-type-HighWord>;
    union {
         <unnamed-type-Bytes>;
        struct {
            UCHAR BaseMid;
            UCHAR Flags1;
            UCHAR Flags2;
            UCHAR BaseHi;
        } Bytes;
         <unnamed-type-Bits>;
        struct {
            ULONG BaseMid : 8;
            ULONG Type : 5;
            ULONG Dpl : 2;
            ULONG Pres : 1;
            ULONG LimitHi : 4;
            ULONG Sys : 1;
            ULONG Reserved_0 : 1;
            ULONG Default_Big : 1;
            ULONG Granularity : 1;
            ULONG BaseHi : 8;
        } Bits;
    } HighWord;
};

typedef struct _LEAP_SECOND_DATA {
};

typedef struct _LEAP_SECOND_DATA_REGISTRY_ENTRY {
    SHORT Year;
    SHORT Month;
    SHORT Day;
    SHORT Hour;
    SHORT Flags;
    SHORT Reserved;
};

typedef struct _LEARNING_MODE_OBJECT_INFORMATION {
    struct _SINGLE_LIST_ENTRY ListEntry;
    enum _LEARNING_MODE_LOG_LEVEL LogLevel;
    struct _UNICODE_STRING *ObjectType;
    struct _UNICODE_STRING *ObjectName;
    PVOID RootDirectory;
    struct _UNICODE_STRING FullObjectName;
};

typedef struct _LINK_TRACKING_INFORMATION {
    enum _LINK_TRACKING_INFORMATION_TYPE Type;
    UCHAR VolumeId[16];
};

typedef struct _LIST_ENTRY {
    struct _LIST_ENTRY *Flink;
    struct _LIST_ENTRY *Blink;
};

typedef struct _LOAD_ASDATA_TABLE {
    PVOID Module;
    PWCHAR FilePath;
    ULONG64 Size;
    PVOID Handle;
    LONG RefCount;
    struct _ACTIVATION_CONTEXT *EntryPointActivationContext;
};

typedef struct _LOAD_DLL_DEBUG_INFO {
    PVOID hFile;
    PVOID lpBaseOfDll;
    ULONG dwDebugInfoFileOffset;
    ULONG nDebugInfoSize;
    PVOID lpImageName;
    USHORT fUnicode;
};

typedef struct _LONGDOUBLE {
    DOUBLE x;
};

typedef struct _LONG_SIZEDARR {
    ULONG clSize;
    PULONG pData;
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY {
    ULONG OffsetToNext;
    ULONG Flags;
    union _LARGE_INTEGER Reserved;
    union _LARGE_INTEGER Cluster;
    WCHAR FileName[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT {
    ULONG Flags;
    ULONG NumberOfClusters;
    union _LARGE_INTEGER Cluster[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT {
    ULONG Offset;
    ULONG NumberOfMatches;
    ULONG BufferSizeRequired;
};

typedef struct _LPC_CLIENT_DIED_MSG {
    struct _PORT_MESSAGE PortMsg;
    union _LARGE_INTEGER CreateTime;
};

typedef struct _LPC_UNREGISTER_PROCESS_MSG {
    struct _PORT_MESSAGE PortMsg;
    PVOID UniqueProcessId;
};

typedef struct _LSA_AUTH_INFORMATION {
    union _LARGE_INTEGER LastUpdateTime;
    ULONG AuthType;
    ULONG AuthInfoLength;
    PUCHAR AuthInfo;
};

typedef struct _LSA_ENUMERATION_INFORMATION {
    PVOID Sid;
};

typedef struct _LSA_FOREST_TRUST_BINARY_DATA {
    ULONG Length;
    PUCHAR Buffer;
};

typedef struct _LSA_FOREST_TRUST_COLLISION_INFORMATION {
    ULONG RecordCount;
    struct _LSA_FOREST_TRUST_COLLISION_RECORD **Entries;
};

typedef struct _LSA_FOREST_TRUST_COLLISION_RECORD {
    ULONG Index;
    enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE Type;
    ULONG Flags;
    struct _UNICODE_STRING Name;
};

typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO {
    PVOID Sid;
    struct _UNICODE_STRING DnsName;
    struct _UNICODE_STRING NetbiosName;
};

typedef struct _LSA_FOREST_TRUST_INFORMATION {
    ULONG RecordCount;
    struct _LSA_FOREST_TRUST_RECORD **Entries;
};

typedef struct _LSA_FOREST_TRUST_RECORD {
    ULONG Flags;
    enum LSA_FOREST_TRUST_RECORD_TYPE ForestTrustType;
    union _LARGE_INTEGER Time;
     <unnamed-type-ForestTrustData>;
    union {
        struct _UNICODE_STRING TopLevelName;
        struct _LSA_FOREST_TRUST_DOMAIN_INFO DomainInfo;
        struct _LSA_FOREST_TRUST_BINARY_DATA Data;
    } ForestTrustData;
};

typedef struct _LSA_LAST_INTER_LOGON_INFO {
    union _LARGE_INTEGER LastSuccessfulLogon;
    union _LARGE_INTEGER LastFailedLogon;
    ULONG FailedAttemptCountSinceLastSuccessfulLogon;
};

typedef struct _LSA_REFERENCED_DOMAIN_LIST {
    ULONG Entries;
    struct _LSA_TRUST_INFORMATION *Domains;
};

typedef struct _LSA_TRANSLATED_NAME {
    enum _SID_NAME_USE Use;
    struct _UNICODE_STRING Name;
    LONG DomainIndex;
};

typedef struct _LSA_TRANSLATED_SID {
    enum _SID_NAME_USE Use;
    ULONG RelativeId;
    LONG DomainIndex;
};

typedef struct _LSA_TRANSLATED_SID2 {
    enum _SID_NAME_USE Use;
    PVOID Sid;
    LONG DomainIndex;
    ULONG Flags;
};

typedef struct _LSA_TRUST_INFORMATION {
    struct _UNICODE_STRING Name;
    PVOID Sid;
};

typedef struct _LUID {
    ULONG LowPart;
    LONG HighPart;
};

typedef struct _LUID_AND_ATTRIBUTES {
    struct _LUID Luid;
    ULONG Attributes;
};

typedef struct _LUNICODE_STRING {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PWCHAR Buffer;
};

typedef struct _LUTF8_STRING {
    ULONG64 Length;
    ULONG64 MaximumLength;
    PUCHAR Buffer;
};

typedef struct _M128A {
    ULONG64 Low;
    LONG64 High;
};

typedef struct _MAGN_COLOR_TRANSFORM {
    FLOAT ColorFactor[5][5];
};

typedef struct _MAGN_DEST_TRANSFORM {
    DOUBLE m11;
    DOUBLE m22;
    DOUBLE dx;
    DOUBLE dy;
};

typedef struct _MAGN_INPUT_TRANSFORM {
    struct tagRECT rcSource;
    struct tagRECT rcScreen;
    enum _MAGINPUT_OPERATION opcode;
};

typedef struct _MAGN_LENS_FLAGS {
    ULONG Flags;
};

typedef struct _MAGN_OFFSET_TEXTURE {
    struct _LUID AdapterLuid;
    struct HMONITOR__ *hmonAssoc;
    ULONG OffSet;
};

typedef struct _MAGN_SHARED_TEXTURE {
    struct _LUID AdapterLuid;
    struct HMONITOR__ *hmonAssoc;
    PVOID hDxSharedTexture;
};

typedef struct _MAGN_SHARED_TEXTURES {
    ULONG cSharedTextures;
    enum DXGI_FORMAT PixelFormat;
    ULONG Width;
    ULONG Height;
    struct _MAGN_SHARED_TEXTURE Textures[1];
};

typedef struct _MAGN_SHARED_TEXTURES_P {
    ULONG cSharedTextures;
    enum DXGI_FORMAT PixelFormat;
    ULONG Width;
    ULONG Height;
    struct _MAGN_SHARED_TEXTURE *Textures;
};

typedef struct _MAGN_SOURCE_TRANSFORM {
    struct tagRECT rcSource;
};

typedef struct _MAGN_UPDATED_TEXTURES {
    ULONG RenderResult;
    ULONG cSharedTextures;
    LONG UpdateFromSysMem;
    enum DXGI_FORMAT PixelFormat;
    ULONG Width;
    ULONG Height;
    ULONG64 UpdateId;
    ULONG Spare0;
    ULONG cBits;
    PVOID hSectionBits;
};

typedef struct _MAGN_WINDOW_FILTERLIST {
    ULONG cWndExclude;
    ULONG cWndInclude;
    struct HWND__ *Filters[1];
};

typedef struct _MAGN_WINDOW_FILTERLIST_P {
    ULONG cWndExclude;
    ULONG cWndInclude;
    struct HWND__ **Filters;
};

typedef struct _MALLOC_FREE_STRUCT {
    PVOID *pfnAllocate;
    PVOID pfnFree;
};

typedef struct _MANAGE_HOT_PATCH_LOAD_PATCH {
    ULONG Version;
    struct _UNICODE_STRING PatchPath;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
    struct _HOT_PATCH_IMAGE_INFO BaseInfo;
};

typedef struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES {
    ULONG Version;
    PVOID ProcessHandle;
    ULONG PatchCount;
    struct _UNICODE_STRING *PatchPathStrings;
    struct _HOT_PATCH_IMAGE_INFO *BaseInfos;
};

typedef struct _MANAGE_HOT_PATCH_QUERY_PATCHES {
    ULONG Version;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
    ULONG PatchCount;
    struct _UNICODE_STRING *PatchPathStrings;
    struct _HOT_PATCH_IMAGE_INFO *BaseInfos;
};

typedef struct _MANAGE_HOT_PATCH_UNLOAD_PATCH {
    ULONG Version;
    struct _HOT_PATCH_IMAGE_INFO BaseInfo;
     <unnamed-type-UserSid>;
    union {
        struct _SID Sid;
        UCHAR Buffer[68];
    } UserSid;
};

typedef struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY {
    ULONG Version : 8;
    ULONG ProcessEnableWriteExceptions : 1;
    ULONG ThreadAllowWrites : 1;
    ULONG Spare : 22;
};

typedef struct _MARGINS {
    LONG cxLeftWidth;
    LONG cxRightWidth;
    LONG cyTopHeight;
    LONG cyBottomHeight;
};

typedef struct _MAT2 {
    struct _FIXED eM11;
    struct _FIXED eM12;
    struct _FIXED eM21;
    struct _FIXED eM22;
};

typedef struct _MCA_EXCEPTION {
    ULONG VersionNumber;
    enum MCA_EXCEPTION_TYPE ExceptionType;
    union _LARGE_INTEGER TimeStamp;
    ULONG ProcessorNumber;
    ULONG Reserved1;
     <unnamed-type-u>;
    union {
         <unnamed-type-Mca>;
        struct {
            UCHAR BankNumber;
            UCHAR Reserved2[7];
            union _MCI_STATS Status;
            union _MCI_ADDR Address;
            ULONG64 Misc;
        } Mca;
         <unnamed-type-Mce>;
        struct {
            ULONG64 Address;
            ULONG64 Type;
        } Mce;
    } u;
    ULONG ExtCnt;
    ULONG Reserved3;
    ULONG64 ExtReg[24];
};

typedef struct _MCGEN_TRACE_CONTEXT {
    ULONG64 RegistrationHandle;
    ULONG64 Logger;
    ULONG64 MatchAnyKeyword;
    ULONG64 MatchAllKeyword;
    ULONG Flags;
    ULONG IsEnabled;
    UCHAR Level;
    UCHAR Reserve;
    USHORT EnableBitsCount;
    PULONG EnableBitMask;
    PULONG64 EnableKeyWords;
    PUCHAR EnableLevel;
};

typedef struct _MEMORYSTATUS {
    ULONG dwLength;
    ULONG dwMemoryLoad;
    ULONG64 dwTotalPhys;
    ULONG64 dwAvailPhys;
    ULONG64 dwTotalPageFile;
    ULONG64 dwAvailPageFile;
    ULONG64 dwTotalVirtual;
    ULONG64 dwAvailVirtual;
};

typedef struct _MEMORYSTATUSEX {
    ULONG dwLength;
    ULONG dwMemoryLoad;
    ULONG64 ullTotalPhys;
    ULONG64 ullAvailPhys;
    ULONG64 ullTotalPageFile;
    ULONG64 ullAvailPageFile;
    ULONG64 ullTotalVirtual;
    ULONG64 ullAvailVirtual;
    ULONG64 ullAvailExtendedVirtual;
};

typedef struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG64 RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
};

typedef struct _MEMORY_BASIC_INFORMATION32 {
    ULONG BaseAddress;
    ULONG AllocationBase;
    ULONG AllocationProtect;
    ULONG RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
};

typedef struct _MEMORY_BASIC_INFORMATION64 {
    ULONG64 BaseAddress;
    ULONG64 AllocationBase;
    ULONG AllocationProtect;
    ULONG __alignment1;
    ULONG64 RegionSize;
    ULONG State;
    ULONG Protect;
    ULONG Type;
    ULONG __alignment2;
};

typedef struct _MEMORY_COMBINE_INFORMATION {
    PVOID Handle;
    ULONG64 PagesCombined;
};

typedef struct _MEMORY_COMBINE_INFORMATION_EX {
    PVOID Handle;
    ULONG64 PagesCombined;
    ULONG Flags;
};

typedef struct _MEMORY_COMBINE_INFORMATION_EX2 {
    PVOID Handle;
    ULONG64 PagesCombined;
    ULONG Flags;
    PVOID ProcessHandle;
};

typedef struct _MEMORY_ENCLAVE_IMAGE_INFORMATION {
    struct _MEMORY_IMAGE_INFORMATION ImageInfo;
    UCHAR UniqueID[32];
    UCHAR AuthorID[32];
};

typedef struct _MEMORY_EXHAUSTION_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    enum _MEMORY_EXHAUSTION_TYPE Type;
    ULONG64 Value;
};

typedef struct _MEMORY_FRAME_INFORMATION {
    ULONG64 UseDescription : 4;
    ULONG64 ListDescription : 3;
    ULONG64 Cold : 1;
    ULONG64 Pinned : 1;
    ULONG64 DontUse : 48;
    ULONG64 Priority : 3;
    ULONG64 Reserved : 4;
};

typedef struct _MEMORY_IMAGE_INFORMATION {
    PVOID ImageBase;
    ULONG64 SizeOfImage;
    ULONG ImageFlags;
    ULONG ImagePartialMap : 1;
    ULONG ImageNotExecutable : 1;
    ULONG ImageSigningLevel : 4;
    ULONG Reserved : 26;
};

typedef struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION {
    ULONG Flags;
    ULONG NumaNode;
    ULONG Channel;
    ULONG NumberOfNumaNodes;
    ULONG64 ResidentAvailablePages;
    ULONG64 CommittedPages;
    ULONG64 CommitLimit;
    ULONG64 PeakCommitment;
    ULONG64 TotalNumberOfPages;
    ULONG64 AvailablePages;
    ULONG64 ZeroPages;
    ULONG64 FreePages;
    ULONG64 StandbyPages;
    ULONG64 StandbyPageCountByPriority[8];
    ULONG64 RepurposedPagesByPriority[8];
    ULONG64 MaximumCommitLimit;
    ULONG64 DonatedPagesToPartitions;
    ULONG PartitionId;
};

typedef struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION {
    ULONG Flags;
    ULONG NumberOfRanges;
    ULONG64 NumberOfPagesAdded;
    struct _MEMORY_PARTITION_PAGE_RANGE PartitionRanges[1];
};

typedef struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION {
     <unnamed-type-Flags>;
    union {
        ULONG CommitEvents : 1;
        ULONG Spare : 31;
        ULONG AllFlags;
    } Flags;
    ULONG HandleAttributes;
    ULONG DesiredAccess;
    PVOID LowCommitCondition;
    PVOID HighCommitCondition;
    PVOID MaximumCommitCondition;
};

typedef struct _MEMORY_PARTITION_PAGEFILE_INFORMATION {
    struct _UNICODE_STRING PageFileName;
    union _LARGE_INTEGER MinimumSize;
    union _LARGE_INTEGER MaximumSize;
    ULONG Flags;
};

typedef struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION {
    PVOID StopHandle;
    ULONG Flags;
    ULONG64 TotalNumberOfPages;
};

typedef struct _MEMORY_PARTITION_PAGE_RANGE {
    ULONG64 StartPage;
    ULONG64 NumberOfPages;
};

typedef struct _MEMORY_PARTITION_TRANSFER_INFORMATION {
    ULONG64 NumberOfPages;
    ULONG NumaNode;
    ULONG Flags;
};

typedef struct _MEMORY_PRIORITY_INFORMATION {
    ULONG MemoryPriority;
};

typedef struct _MEMORY_RANGE_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NumberOfBytes;
};

typedef struct _MEMORY_REGION_INFORMATION {
    PVOID AllocationBase;
    ULONG AllocationProtect;
    ULONG RegionType;
    ULONG Private : 1;
    ULONG MappedDataFile : 1;
    ULONG MappedImage : 1;
    ULONG MappedPageFile : 1;
    ULONG MappedPhysical : 1;
    ULONG DirectMapped : 1;
    ULONG SoftwareEnclave : 1;
    ULONG PageSize64K : 1;
    ULONG PlaceholderReservation : 1;
    ULONG Reserved : 23;
    ULONG64 RegionSize;
    ULONG64 CommitSize;
};

typedef struct _MEMORY_SCRUB_INFORMATION {
    PVOID Handle;
    ULONG64 PagesScrubbed;
};

typedef struct _MEMORY_SHARED_COMMIT_INFORMATION {
    ULONG64 CommitSize;
};

typedef struct _MEMORY_WORKING_SET_BLOCK {
    ULONG64 Protection : 5;
    ULONG64 ShareCount : 3;
    ULONG64 Shared : 1;
    ULONG64 Node : 3;
    ULONG64 VirtualPage : 52;
};

typedef struct _MEMORY_WORKING_SET_EX_BLOCK {
    ULONG64 Valid : 1;
    ULONG64 ShareCount : 3;
    ULONG64 Win32Protection : 11;
    ULONG64 Shared : 1;
    ULONG64 Node : 6;
    ULONG64 Locked : 1;
    ULONG64 LargePage : 1;
    ULONG64 Priority : 3;
    ULONG64 Reserved : 3;
    ULONG64 SharedOriginal : 1;
    ULONG64 Bad : 1;
    ULONG64 ReservedUlong : 32;
    struct {
        ULONG64 Valid : 1;
        ULONG64 Reserved0 : 14;
        ULONG64 Shared : 1;
        ULONG64 Reserved1 : 5;
        ULONG64 PageTable : 1;
        ULONG64 Location : 2;
        ULONG64 Priority : 3;
        ULONG64 ModifiedList : 1;
        ULONG64 Reserved2 : 2;
        ULONG64 SharedOriginal : 1;
        ULONG64 Bad : 1;
        ULONG64 ReservedUlong : 32;
    } Invalid;
};

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION {
    PVOID VirtualAddress;
     <unnamed-type-u1>;
    union {
        struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
        ULONG64 Long;
    } u1;
};

typedef struct _MEMORY_WORKING_SET_INFORMATION {
    ULONG64 NumberOfEntries;
    struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
};

typedef struct _MEM_ADDRESS_REQUIREMENTS {
    PVOID LowestStartingAddress;
    PVOID HighestEndingAddress;
    ULONG64 Alignment;
};

typedef struct _MENU_EVENT_RECORD {
    ULONG dwCommandId;
};

typedef struct _MESSAGE_RESOURCE_BLOCK {
    ULONG LowId;
    ULONG HighId;
    ULONG OffsetToEntries;
};

typedef struct _MESSAGE_RESOURCE_DATA {
    ULONG NumberOfBlocks;
    struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
};

typedef struct _MESSAGE_RESOURCE_ENTRY {
    USHORT Length;
    USHORT Flags;
    UCHAR Text[1];
};

typedef struct _MIDL_FORMAT_STRING {
    SHORT Pad;
    UCHAR Format[0];
};

typedef struct _MIDL_INTERCEPTION_INFO {
    ULONG Version;
    PUCHAR ProcString;
    PUSHORT ProcFormatOffsetTable;
    ULONG ProcCount;
    PUCHAR TypeString;
};

typedef struct _MIDL_INTERFACE_METHOD_PROPERTIES {
    USHORT MethodCount;
    struct _MIDL_METHOD_PROPERTY_MAP **MethodProperties;
};

typedef struct _MIDL_METHOD_PROPERTY {
    ULONG Id;
    ULONG64 Value;
};

typedef struct _MIDL_METHOD_PROPERTY_MAP {
    ULONG Count;
    struct _MIDL_METHOD_PROPERTY *Properties;
};

typedef struct _MIDL_SERVER_INFO_ {
    struct _MIDL_STUB_DESC *pStubDesc;
    PLONG *DispatchTable;
    PUCHAR ProcString;
    PUSHORT FmtStringOffset;
    PVOID *ThunkTable;
    struct _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
    ULONG64 nCount;
    struct _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

typedef struct _MIDL_STUBLESS_PROXY_INFO {
    struct _MIDL_STUB_DESC *pStubDesc;
    PUCHAR ProcFormatString;
    PUSHORT FormatStringOffset;
    struct _RPC_SYNTAX_IDENTIFIER *pTransferSyntax;
    ULONG64 nCount;
    struct _MIDL_SYNTAX_INFO *pSyntaxInfo;
};

typedef struct _MIDL_STUB_DESC {
    PVOID RpcInterfaceInformation;
    PVOID *pfnAllocate;
    PVOID pfnFree;
     <unnamed-type-IMPLICIT_HANDLE_INFO>;
    union {
        PVOID *pAutoHandle;
        PVOID *pPrimitiveHandle;
        struct __GENERIC_BINDING_INFO *pGenericBindingInfo;
    } IMPLICIT_HANDLE_INFO;
    PVOID *apfnNdrRundownRoutines;
    struct _GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
    PVOID *apfnExprEval;
    struct _XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
    PUCHAR pFormatTypes;
    LONG fCheckBounds;
    ULONG Version;
    struct _MALLOC_FREE_STRUCT *pMallocFreeStruct;
    LONG MIDLVersion;
    struct _COMM_FAULT_OFFSETS *CommFaultOffsets;
    struct _USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
    PVOID *NotifyRoutineTable;
    ULONG64 mFlags;
    struct _NDR_CS_ROUTINES *CsRoutineTables;
    PVOID ProxyServerInfo;
    struct _NDR_EXPR_DESC *pExprInfo;
};

typedef struct _MIDL_STUB_MESSAGE {
    struct _RPC_MESSAGE *RpcMsg;
    PUCHAR Buffer;
    PUCHAR BufferStart;
    PUCHAR BufferEnd;
    PUCHAR BufferMark;
    ULONG BufferLength;
    ULONG MemorySize;
    PUCHAR Memory;
    UCHAR IsClient;
    UCHAR Pad;
    USHORT uFlags2;
    LONG ReuseBuffer;
    struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
    LONG IgnoreEmbeddedPointers;
    PUCHAR PointerBufferMark;
    UCHAR CorrDespIncrement;
    UCHAR uFlags;
    USHORT UniquePtrCount;
    ULONG64 MaxCount;
    ULONG Offset;
    ULONG ActualCount;
    PVOID *pfnAllocate;
    PVOID pfnFree;
    PUCHAR StackTop;
    PUCHAR pPresentedType;
    PUCHAR pTransmitType;
    PVOID SavedHandle;
    struct _MIDL_STUB_DESC *StubDesc;
    struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
    ULONG FullPtrRefId;
    ULONG PointerLength;
    LONG fInDontFree : 1;
    LONG fDontCallFreeInst : 1;
    LONG fUnused1 : 1;
    LONG fHasReturn : 1;
    LONG fHasExtensions : 1;
    LONG fHasNewCorrDesc : 1;
    LONG fIsIn : 1;
    LONG fIsOut : 1;
    LONG fIsOicf : 1;
    LONG fBufferValid : 1;
    LONG fHasMemoryValidateCallback : 1;
    LONG fInFree : 1;
    LONG fNeedMCCP : 1;
    LONG fUnused2 : 3;
    LONG fUnused3 : 16;
    ULONG dwDestContext;
    PVOID pvDestContext;
    struct {
        PVOID pad[2];
        PVOID userContext;
    } **SavedContextHandles;
    LONG ParamNumber;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    struct ARRAY_INFO *pArrayInfo;
    PULONG SizePtrCountArray;
    PULONG SizePtrOffsetArray;
    PULONG SizePtrLengthArray;
    PVOID pArgQueue;
    ULONG dwStubPhase;
    PVOID LowStackMark;
    struct _NDR_ASYNC_MESSAGE *pAsyncMsg;
    struct _NDR_CORRELATION_INFO *pCorrInfo;
    PUCHAR pCorrMemory;
    PVOID pMemoryList;
    LONG64 pCSInfo;
    PUCHAR ConformanceMark;
    PUCHAR VarianceMark;
    LONG64 Unused;
    struct _NDR_PROC_CONTEXT *pContext;
    PVOID ContextHandleHash;
    PVOID pUserMarshalList;
    LONG64 Reserved51_3;
    LONG64 Reserved51_4;
    LONG64 Reserved51_5;
};

typedef struct _MIDL_SYNTAX_INFO {
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    PUCHAR ProcString;
    PUSHORT FmtStringOffset;
    PUCHAR TypeString;
    PVOID aUserMarshalQuadruple;
    struct _MIDL_INTERFACE_METHOD_PROPERTIES *pMethodProperties;
    ULONG64 pReserved2;
};

typedef struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO {
    ULONG Version;
    PUCHAR TypeFormatString;
    USHORT FormatStringSize;
    USHORT TypeOffset;
    struct _MIDL_STUB_DESC *StubDesc;
};

typedef struct _MIT_CURSOR_MANAGEMENT_MESSAGE {
    enum _MIT_CURSOR_MANAGEMENT_MESSAGE_ID Id;
    LONG visible;
    struct tagRECT appClip;
    struct _MIT_CURSOR_MANAGEMENT_POSITIONINFO PositionInfo;
    struct _MIT_CURSOR_MANAGEMENT_SHELLCLIPINFO ShellClipInfo;
    struct _MIT_CURSOR_MANAGEMENT_SUPPRESSCURSORINFO SuppressCursorInfo;
    ULONG orientation;
};

typedef struct _MIT_CURSOR_MANAGEMENT_POSITIONINFO {
    struct tagPOINT position;
    LONG64 qpcTime;
};

typedef struct _MIT_CURSOR_MANAGEMENT_SHELLCLIPINFO {
    ULONG cClips;
    struct tagRECT rcClips[1];
};

typedef struct _MIT_CURSOR_MANAGEMENT_SUPPRESSCURSORINFO {
    LONG bSuppress;
    struct HMONITOR__ *hMonitor;
};

typedef struct _MIT_DEVICE_IDENTIFICATION_MESSAGE {
    enum _MIT_DEVICE_ID_MESSAGE_ID message;
     <unnamed-type-payload>;
    union {
        ULONG departedId;
        struct _MIT_DEVICE_IDENTITY_CREATED created;
    } payload;
};

typedef struct _MIT_DEVICE_IDENTITY_CREATED {
    ULONG dwLocalId;
    ULONG dwParentLocalId;
    struct _MIT_DEVICE_IDENTITY_EXTRA_INFO extraInfo;
};

typedef struct _MIT_DEVICE_IDENTITY_EXTRA_INFO {
    enum _KnownRIMDeviceKind deviceKind;
    LONG fHasProprietaryId;
    USHORT usagePage;
    USHORT usage;
};

typedef struct _MIT_INPUT_CONFIG_MESSAGE {
    enum _MIT_INPUT_CONFIG_MESSAGE_TYPE type;
     <unnamed-type-payload>;
    struct {
        struct INPUT_SPACE inputSpace;
        ULONG cRegions;
        struct INPUT_SPACE_REGION regions[1];
    } payload;
};

typedef struct _MIT_INPUT_FOCUS_MESSAGE {
    ULONG pid;
    ULONG tid;
    ULONG vid;
    ULONG64 wid;
    ULONG delegateSourceVid;
    ULONG delegateSourcePid;
    ULONG delegateInputMode;
};

typedef struct _MIT_INPUT_INTEROP_MESSAGE {
    enum MIT_INPUT_INTEROP_CALLBACK Callback;
    struct tagMANIPULATION_INPUT_INFO ManipulationInputInfo;
    struct _HOVER_INPUT_INFO HoverInputInfo;
};

typedef struct _MIT_INVALIDATE_INPUT_MESSAGE {
    PVOID hRIM;
    PVOID hRIMDev;
};

typedef struct _MIT_KEYBOARD_INPUT_ATTEMPTED_MESSAGE {
    struct HWND__ *hwnd;
};

typedef struct _MIT_KEYBOARD_INPUT_MESSAGE {
    PVOID deviceInfoHandle;
    struct _RawKeyboardInputMessage rawKeyboard;
};

typedef struct _MIT_POINTER_INPUT_DOWN_MESSAGE {
    PVOID viewInstanceId;
    PVOID device;
    ULONG inputType;
    struct HMONITOR__ *monitor;
    struct tagPOINT screenCoordinates;
};

typedef struct _MMCKINFO {
    ULONG ckid;
    ULONG cksize;
    ULONG fccType;
    ULONG dwDataOffset;
    ULONG dwFlags;
};

typedef struct _MMIOINFO {
    ULONG dwFlags;
    ULONG fccIOProc;
    PLONG64 pIOProc;
    ULONG wErrorRet;
    struct HTASK__ *htask;
    LONG cchBuffer;
    PCHAR pchBuffer;
    PCHAR pchNext;
    PCHAR pchEndRead;
    PCHAR pchEndWrite;
    LONG lBufOffset;
    LONG lDiskOffset;
    ULONG adwInfo[3];
    ULONG dwReserved1;
    ULONG dwReserved2;
    struct HMMIO__ *hmmio;
};

typedef struct _MMPFN_IDENTITY {
     <unnamed-type-u1>;
    union {
        struct _MEMORY_FRAME_INFORMATION e1;
        struct _FILEOFFSET_INFORMATION e2;
        struct _PAGEDIR_INFORMATION e3;
        struct _UNIQUE_PROCESS_INFORMATION e4;
    } u1;
    ULONG64 PageFrameIndex;
     <unnamed-type-u2>;
    union {
         <unnamed-type-e1>;
        struct {
            ULONG64 Image : 1;
            ULONG64 Mismatch : 1;
        } e1;
         <unnamed-type-e2>;
        struct {
            ULONG64 CombinedPage : 1;
        } e2;
        PVOID FileObject;
        PVOID UniqueFileObjectKey;
        PVOID ProtoPteAddress;
        PVOID VirtualAddress;
    } u2;
};

typedef struct _MM_ETW_PAGE_INFO {
    struct _MMPFN_IDENTITY PfnIdentity;
};

typedef struct _MM_ETW_PAGE_INFO_EX {
    struct _MM_ETW_PAGE_INFO PageInfo;
    union _MM_ETW_PAGE_EXTRA_INFO Info;
};

typedef struct _MM_ETW_WORKING_SET_PFN_RUNDOWN {
    ULONG64 ProcessId;
    ULONG64 EntryCount;
    struct _MM_ETW_PAGE_INFO_EX WorkingSetInfo[1];
};

typedef struct _MODEMDEVCAPS {
    ULONG dwActualSize;
    ULONG dwRequiredSize;
    ULONG dwDevSpecificOffset;
    ULONG dwDevSpecificSize;
    ULONG dwModemProviderVersion;
    ULONG dwModemManufacturerOffset;
    ULONG dwModemManufacturerSize;
    ULONG dwModemModelOffset;
    ULONG dwModemModelSize;
    ULONG dwModemVersionOffset;
    ULONG dwModemVersionSize;
    ULONG dwDialOptions;
    ULONG dwCallSetupFailTimer;
    ULONG dwInactivityTimeout;
    ULONG dwSpeakerVolume;
    ULONG dwSpeakerMode;
    ULONG dwModemOptions;
    ULONG dwMaxDTERate;
    ULONG dwMaxDCERate;
    UCHAR abVariablePortion[1];
};

typedef struct _MODEMSETTINGS {
    ULONG dwActualSize;
    ULONG dwRequiredSize;
    ULONG dwDevSpecificOffset;
    ULONG dwDevSpecificSize;
    ULONG dwCallSetupFailTimer;
    ULONG dwInactivityTimeout;
    ULONG dwSpeakerVolume;
    ULONG dwSpeakerMode;
    ULONG dwPreferredModemOptions;
    ULONG dwNegotiatedModemOptions;
    ULONG dwNegotiatedDCERate;
    UCHAR abVariablePortion[1];
};

typedef struct _MONITORCONFIG {
    ULONG MaxMonitors;
    ULONG MaxXResolution;
    ULONG MaxYResolution;
};

typedef struct _MONITOR_INFO_1A {
    PCHAR pName;
};

typedef struct _MONITOR_INFO_1W {
    PWCHAR pName;
};

typedef struct _MONITOR_INFO_2A {
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDLLName;
};

typedef struct _MONITOR_INFO_2W {
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDLLName;
};

typedef struct _MONITOR_THERMAL_BRIGHTNESS_LIMIT {
    struct _LUID AdapterLuid;
    ULONG TargetId;
    enum _MONITOR_THERMAL_BRIGHTNESS_LIMIT_TYPE Type;
    ULONG Limit;
};

typedef struct _MONITOR_THERMAL_BRIGHTNESS_LIMIT_LIST {
    ULONG Count;
    struct _MONITOR_THERMAL_BRIGHTNESS_LIMIT Limits[16];
};

typedef struct _MOUSE_EVENT_RECORD {
    struct _COORD dwMousePosition;
    ULONG dwButtonState;
    ULONG dwControlKeyState;
    ULONG dwEventFlags;
};

typedef struct _MOVE_FILE_DATA32 {
    ULONG FileHandle;
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER StartingLcn;
    ULONG ClusterCount;
};

typedef struct _MSGENTRY {
    ULONG nMsg;
    PLONG64 pfnHandler;
    PLONG64 pfnHandler2;
    PLONG64 pfnHandler3;
};

typedef struct _MSV1_0_AV_PAIR {
    USHORT AvId;
    USHORT AvLen;
};

typedef struct _MSV1_0_CHANGEPASSWORD_REQUEST {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING AccountName;
    struct _UNICODE_STRING OldPassword;
    struct _UNICODE_STRING NewPassword;
    UCHAR Impersonating;
};

typedef struct _MSV1_0_CHANGEPASSWORD_RESPONSE {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    UCHAR PasswordInfoValid;
    struct _DOMAIN_PASSWORD_INFORMATION DomainPasswordInfo;
};

typedef struct _MSV1_0_CREDENTIAL_KEY {
    UCHAR Data[20];
};

typedef struct _MSV1_0_INTERACTIVE_LOGON {
    enum _MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING LogonDomainName;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING Password;
};

typedef struct _MSV1_0_INTERACTIVE_PROFILE {
    enum _MSV1_0_PROFILE_BUFFER_TYPE MessageType;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    union _LARGE_INTEGER LogonTime;
    union _LARGE_INTEGER LogoffTime;
    union _LARGE_INTEGER KickOffTime;
    union _LARGE_INTEGER PasswordLastSet;
    union _LARGE_INTEGER PasswordCanChange;
    union _LARGE_INTEGER PasswordMustChange;
    struct _UNICODE_STRING LogonScript;
    struct _UNICODE_STRING HomeDirectory;
    struct _UNICODE_STRING FullName;
    struct _UNICODE_STRING ProfilePath;
    struct _UNICODE_STRING HomeDirectoryDrive;
    struct _UNICODE_STRING LogonServer;
    ULONG UserFlags;
};

typedef struct _MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL {
    ULONG Version;
    ULONG EncryptedCredsSize;
    UCHAR EncryptedCreds[1];
};

typedef struct _MSV1_0_LM20_LOGON {
    enum _MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING LogonDomainName;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING Workstation;
    UCHAR ChallengeToClient[8];
    struct _STRING CaseSensitiveChallengeResponse;
    struct _STRING CaseInsensitiveChallengeResponse;
    ULONG ParameterControl;
};

typedef struct _MSV1_0_LM20_LOGON_PROFILE {
    enum _MSV1_0_PROFILE_BUFFER_TYPE MessageType;
    union _LARGE_INTEGER KickOffTime;
    union _LARGE_INTEGER LogoffTime;
    ULONG UserFlags;
    UCHAR UserSessionKey[16];
    struct _UNICODE_STRING LogonDomainName;
    UCHAR LanmanSessionKey[8];
    struct _UNICODE_STRING LogonServer;
    struct _UNICODE_STRING UserParameters;
};

typedef struct _MSV1_0_NTLM3_RESPONSE {
    UCHAR Response[16];
    UCHAR RespType;
    UCHAR HiRespType;
    USHORT Flags;
    ULONG MsgWord;
    ULONG64 TimeStamp;
    UCHAR ChallengeFromClient[8];
    ULONG AvPairsOff;
    UCHAR Buffer[1];
};

typedef struct _MSV1_0_PASSTHROUGH_REQUEST {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    struct _UNICODE_STRING DomainName;
    struct _UNICODE_STRING PackageName;
    ULONG DataLength;
    PUCHAR LogonData;
    ULONG Pad;
};

typedef struct _MSV1_0_PASSTHROUGH_RESPONSE {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Pad;
    ULONG DataLength;
    PUCHAR ValidationData;
};

typedef struct _MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL {
    ULONG Version;
    ULONG Flags;
    struct _MSV1_0_CREDENTIAL_KEY CredentialKey;
    enum _MSV1_0_CREDENTIAL_KEY_TYPE CredentialKeyType;
    ULONG EncryptedCredsSize;
    UCHAR EncryptedCreds[1];
};

typedef struct _MSV1_0_S4U_LOGON {
    enum _MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    struct _UNICODE_STRING UserPrincipalName;
    struct _UNICODE_STRING DomainName;
};

typedef struct _MSV1_0_SUBAUTH_LOGON {
    enum _MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    struct _UNICODE_STRING LogonDomainName;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING Workstation;
    UCHAR ChallengeToClient[8];
    struct _STRING AuthenticationInfo1;
    struct _STRING AuthenticationInfo2;
    ULONG ParameterControl;
    ULONG SubAuthPackageId;
};

typedef struct _MSV1_0_SUBAUTH_REQUEST {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG SubAuthPackageId;
    ULONG SubAuthInfoLength;
    PUCHAR SubAuthSubmitBuffer;
};

typedef struct _MSV1_0_SUBAUTH_RESPONSE {
    enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG SubAuthInfoLength;
    PUCHAR SubAuthReturnBuffer;
};

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL {
    ULONG Version;
    ULONG Flags;
    UCHAR LmPassword[16];
    UCHAR NtPassword[16];
};

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2 {
    ULONG Version;
    ULONG Flags;
    UCHAR NtPassword[16];
    struct _MSV1_0_CREDENTIAL_KEY CredentialKey;
};

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3 {
    ULONG Version;
    ULONG Flags;
    enum _MSV1_0_CREDENTIAL_KEY_TYPE CredentialKeyType;
    UCHAR NtPassword[16];
    struct _MSV1_0_CREDENTIAL_KEY CredentialKey;
    UCHAR ShaPassword[20];
};

typedef struct _MUICCENTRY {
    ULONG lCultureNameOffset;
    ULONG ulCultureID;
    ULONG ulLanguageType;
    struct _MUICCENTRY *pNeutralCulture;
    struct _MUICCENTRY *lBaseLanguageIndices[4];
    LONG lParentLanguageIndices[4];
};

typedef struct _MUICCHEADER {
    ULONG ulMaxStringsSize;
    ULONG ulSizeStrings;
    ULONG ulMaxNumInstalledCultures;
    ULONG ulNumInstalledCultures;
    ULONG ulMaxNumUnverifiedCultures;
    ULONG ulNumUnverifiedCultures;
};

typedef struct _MUILANGCFGLIST {
    ULONG TotalSize;
    USHORT NumLanguages;
    USHORT MaxNumLanguages;
    struct _MUILANGCFGNODE *LanguageConfigs;
};

typedef struct _MUILANGCFGNODE {
    SHORT LangSpec;
    USHORT FallbackTypes;
    USHORT Reserved;
    SHORT FallbackSpecs[3];
};

typedef struct _MUILANGINFO {
    USHORT Flags;
    USHORT Reserved;
    USHORT LangId;
    SHORT LangNameIndex;
    USHORT FallbackTypes;
    SHORT NeutralLangSpec;
    SHORT FallbackSpecs[4];
    SHORT AlternateCodePage[4];
};

typedef struct _MUILANGLIST {
    ULONG TotalSize;
    USHORT NumLanguages;
    USHORT MaxNumLanguages;
    UCHAR bUseUseMachineConfigList;
    struct _MUIREGISTRYINFO *RegInfo;
    struct _MUILANGLISTNODE *Languages;
    ULONG64 ullMask;
    ULONG uConsoleFlag;
    WCHAR Checksum[10];
};

typedef struct _MUILANGLISTNODE {
    USHORT LanguageType;
    USHORT Reserved;
    SHORT LanguageSpec;
};

typedef struct _MUILANGUAGES {
    ULONG TotalSize;
    USHORT MaxNumLanguages;
    USHORT NumLanguages;
    USHORT NumInstalledLanguages;
    struct _MUILANGINFO *LangInfos;
};

typedef struct _MUIREGISTRYINFO {
    ULONG Owned;
    USHORT InstallLanguageFallback[4];
    ULONG Generation;
    ULONG ProcessGeneration;
    struct _MUILANGUAGES *Installed;
    struct _MUISTRINGPOOL *Strings;
    struct _MUILANGCFGLIST *MachineConfig;
    struct _MUILANGCFGLIST *UserConfig;
    struct _MUILANGLIST *MachinePreferred;
    struct _MUILANGLIST *UserPreferred;
    struct _MUILANGLIST *ProcessPreferred;
    struct _MUILANGLIST *MergedUser;
    struct _MUILANGLIST *MergedMachine;
    struct _MUILANGLIST *MergedFallback;
    struct _MUIREGISTRYINFO *PrevRegInfo;
    ULONG MUI_Locked;
    ULONG MUI_SE;
    ULONG MUI_NumberAllowed;
    PWCHAR MUI_AllowedLanguage;
    PWCHAR MUI_InstalledSKU;
    ULONG cbInstalledSKU;
    ULONG cbAllowedLanguage;
    PWCHAR MUI_DisallowedLanguage;
    ULONG cbDisallowedLanguage;
};

typedef struct _MUISTRINGPOOL {
    ULONG TotalSize;
    USHORT MaxNumStrings;
    USHORT NumStrings;
    USHORT MaxNumCharsInPool;
    USHORT NumCharsInPool;
    PSHORT Strings;
    PWCHAR Pool;
};

typedef struct _MULTIMEDIACONFIG {
    UCHAR fDisableAudioCapture;
    ULONG AllowedAudioQualityMode;
    ULONG cbExtraData;
    UCHAR ExtraData[512];
};

typedef struct _MULTI_TIME {
    union _LARGE_INTEGER Qpc;
    union _LARGE_INTEGER HostQpc;
    LONG64 SystemTime;
};

typedef struct _MUTANT_BASIC_INFORMATION {
    LONG CurrentCount;
    UCHAR OwnedByCaller;
    UCHAR AbandonedState;
};

typedef struct _MUTANT_OWNER_INFORMATION {
    struct _CLIENT_ID ClientId;
};

typedef struct _MilMatrix3x2D {
    DOUBLE S_11;
    DOUBLE S_12;
    DOUBLE S_21;
    DOUBLE S_22;
    DOUBLE DX;
    DOUBLE DY;
};

typedef struct _MouseInterceptorData {
    struct _ExtensibilityMouseInputData mouseInputData;
    enum _INTERCEPTOR_MOUSE_SYSTEM_STATE mouseSystemState;
};

typedef struct _MouseProcessorData {
    enum _MOUSE_INTERCEPTION_RESULT interceptionResult;
    LONG dx;
    LONG dy;
    USHORT mouseFlags;
    ULONG dwHitTestContext;
    enum _MOUSEPROCESSOR_PROCESSING_OPTIONS options;
};

typedef struct _MouseProcessorInterceptionCallout {
    struct _MouseInterceptorData interceptorData;
    struct _MouseProcessorData mouseProcessorData;
};

typedef struct _NAME_BUFFER {
    UCHAR name[16];
    UCHAR name_num;
    UCHAR name_flags;
};

typedef struct _NASICONFIGA {
    CHAR SpecificName[15];
    CHAR UserName[48];
    CHAR PassWord[25];
    CHAR SessionName[17];
    CHAR FileServer[48];
    UCHAR GlobalSession;
};

typedef struct _NASICONFIGW {
    WCHAR SpecificName[15];
    WCHAR UserName[48];
    WCHAR PassWord[25];
    WCHAR SessionName[17];
    WCHAR FileServer[48];
    UCHAR GlobalSession;
};

typedef struct _NCB {
    UCHAR ncb_command;
    UCHAR ncb_retcode;
    UCHAR ncb_lsn;
    UCHAR ncb_num;
    PUCHAR ncb_buffer;
    USHORT ncb_length;
    UCHAR ncb_callname[16];
    UCHAR ncb_name[16];
    UCHAR ncb_rto;
    UCHAR ncb_sto;
    PVOID ncb_post;
    UCHAR ncb_lana_num;
    UCHAR ncb_cmd_cplt;
    UCHAR ncb_reserve[18];
    PVOID ncb_event;
};

typedef struct _NCEVALUATE {
    LONG fIgnoreWndRgn;
    ULONG fClassFlags;
    ULONG dwStyle;
    ULONG dwExStyle;
    LONG fExile;
    LONG fDialog;
};

typedef struct _NCPAINTOVERIDE {
    struct _NCWNDMET *pncwm;
    struct _NCTHEMEMET nctm;
};

typedef struct _NCRYPT_CIPHER_PADDING_INFO {
    ULONG cbSize;
    ULONG dwFlags;
    PUCHAR pbIV;
    ULONG cbIV;
    PUCHAR pbOtherInfo;
    ULONG cbOtherInfo;
};

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE {
    struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER Header;
};

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER {
    ULONG Version;
    ULONG KeyUsage;
    ULONG PerBootKey : 1;
    ULONG Reserved : 31;
    ULONG cbAlgName;
    ULONG cbNonce;
    ULONG cbAuthTag;
    ULONG cbWrappingKey;
    ULONG cbIsolatedKey;
};

typedef struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES {
    ULONG Version;
    ULONG Flags;
    ULONG cbPublicKeyBlob;
};

typedef struct _NCRYPT_KEY_ATTEST_PADDING_INFO {
    ULONG magic;
    PUCHAR pbKeyBlob;
    ULONG cbKeyBlob;
    PUCHAR pbKeyAuth;
    ULONG cbKeyAuth;
};

typedef struct _NCRYPT_KEY_BLOB_HEADER {
    ULONG cbSize;
    ULONG dwMagic;
    ULONG cbAlgName;
    ULONG cbKeyData;
};

typedef struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO {
    ULONG magic;
    ULONG pcrMask;
};

typedef struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG pcrAlg;
    ULONG cbSignature;
    ULONG cbQuote;
    ULONG cbPcrs;
};

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS {
    ULONG Version;
    ULONG64 TrustletId;
    ULONG MinSvn;
    ULONG FlagsMask;
    ULONG FlagsExpected;
    ULONG AllowDebugging : 1;
    ULONG Reserved : 31;
};

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG cbSignature;
    ULONG cbReport;
    ULONG cbAttributes;
};

typedef struct _NCTHEMEMET {
    VOID Initialize;
    VOID Clear;
    PVOID hTheme;
    PVOID hThemeTab;
    LONG dpi;
    LONG fCapSizingTemplate : 1;
    LONG fLeftSizingTemplate : 1;
    LONG fRightSizingTemplate : 1;
    LONG fBottomSizingTemplate : 1;
    LONG fSmCapSizingTemplate : 1;
    LONG fSmLeftSizingTemplate : 1;
    LONG fSmRightSizingTemplate : 1;
    LONG fSmBottomSizingTemplate : 1;
    struct _MARGINS marCaptionText;
    struct _MARGINS marMinCaptionText;
    struct _MARGINS marMaxCaptionText;
    struct _MARGINS marSmCaptionText;
    LONG dyMenuBar;
    LONG cnSmallMaximizedWidth;
    LONG cnSmallMaximizedHeight;
    struct tagSIZE sizeBtn;
    struct tagSIZE sizeSmBtn;
    struct HBRUSH__ *hbrTabDialog;
    struct HBITMAP__ *hbmTabDialog;
    struct HBRUSH__ *hbrAeroTabDialog;
    struct HBITMAP__ *hbmAeroTabDialog;
    struct NCTRANSPARENCY nct;
    LONG nGlowSize;
};

typedef struct _NCWNDMET {
    LONG fValid;
    LONG fFrame;
    LONG fSmallFrame;
    LONG fMin;
    LONG fMaxed;
    LONG fFullMaxed;
    LONG fDirtyRects;
    LONG fCustomFrame;
    LONG fCustom;
    ULONG dwStyle;
    ULONG dwExStyle;
    ULONG dwWindowStatus;
    ULONG dwStyleClass;
    enum WINDOWPARTS rgframeparts[4];
    enum WINDOWPARTS rgsizehitparts[4];
    enum FRAMESTATES framestate;
    struct HFONT__ *hfCaption;
    struct tagSIZE sizeCaptionText;
    struct _MARGINS CaptionMargins;
    LONG iMinButtonPart;
    LONG iMaxButtonPart;
    enum CLOSEBUTTONSTATES rawCloseBtnState;
    enum CLOSEBUTTONSTATES rawMinBtnState;
    enum CLOSEBUTTONSTATES rawMaxBtnState;
    enum CLOSEBUTTONSTATES rawHelpBtnState;
    LONG cyMenu;
    LONG cnMenuOffsetLeft;
    LONG cnMenuOffsetRight;
    LONG cnMenuOffsetTop;
    LONG cnBorders;
    struct tagRECT rcS0[26];
    struct tagRECT rcW0[26];
    ULONG GetCaptionColor;
    VOID MarkCaptionColorAsDirty;
    ULONG _rgbCaption;
    BOOLEAN _fIsCaptionColorValid;
};

typedef struct _NCryptAlgorithmName {
    PWCHAR pszName;
    ULONG dwClass;
    ULONG dwAlgOperations;
    ULONG dwFlags;
};

typedef struct _NDR_ASYNC_MESSAGE {
};

typedef struct _NDR_CORRELATION_INFO {
};

typedef struct _NDR_CS_ROUTINES {
    struct _NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
    PVOID *pTagGettingRoutines;
};

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES {
    PVOID pfnNetSize;
    PVOID pfnToNetCs;
    PVOID pfnLocalSize;
    PVOID pfnFromNetCs;
};

typedef struct _NDR_EXPR_DESC {
    PUSHORT pOffset;
    PUCHAR pFormatExpr;
};

typedef struct _NDR_PROC_CONTEXT {
};

typedef struct _NDR_USER_MARSHAL_INFO {
    ULONG InformationLevel;
    struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 {
    PVOID Buffer;
    ULONG BufferSize;
    PVOID *pfnAllocate;
    PVOID pfnFree;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    ULONG64 Reserved[5];
};

typedef struct _NEGOTIATE_CALLER_NAME_REQUEST {
    ULONG MessageType;
    struct _LUID LogonId;
};

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE {
    ULONG MessageType;
    PWCHAR CallerName;
};

typedef struct _NEGOTIATE_PACKAGE_PREFIX {
    ULONG64 PackageId;
    PVOID PackageDataA;
    PVOID PackageDataW;
    ULONG64 PrefixLen;
    UCHAR Prefix[32];
};

typedef struct _NEGOTIATE_PACKAGE_PREFIXES {
    ULONG MessageType;
    ULONG PrefixCount;
    ULONG Offset;
    ULONG Pad;
};

typedef struct _NETCONNECTINFOSTRUCT {
    ULONG cbStructure;
    ULONG dwFlags;
    ULONG dwSpeed;
    ULONG dwDelay;
    ULONG dwOptDataSize;
};

typedef struct _NETINFOSTRUCT {
    ULONG cbStructure;
    ULONG dwProviderVersion;
    ULONG dwStatus;
    ULONG dwCharacteristics;
    ULONG64 dwHandle;
    USHORT wNetType;
    ULONG dwPrinters;
    ULONG dwDrives;
};

typedef struct _NETRESOURCEA {
    ULONG dwScope;
    ULONG dwType;
    ULONG dwDisplayType;
    ULONG dwUsage;
    PCHAR lpLocalName;
    PCHAR lpRemoteName;
    PCHAR lpComment;
    PCHAR lpProvider;
};

typedef struct _NETRESOURCEW {
    ULONG dwScope;
    ULONG dwType;
    ULONG dwDisplayType;
    ULONG dwUsage;
    PWCHAR lpLocalName;
    PWCHAR lpRemoteName;
    PWCHAR lpComment;
    PWCHAR lpProvider;
};

typedef struct _NETWORKCONFIGA {
    LONG LanAdapter;
    CHAR NetworkName[129];
    ULONG Flags;
};

typedef struct _NETWORKCONFIGW {
    LONG LanAdapter;
    WCHAR NetworkName[129];
    ULONG Flags;
};

typedef struct _NETWORK_APP_INSTANCE_EA {
    struct _GUID AppInstanceID;
    ULONG CsvFlags;
};

typedef struct _NLSTABLEINFO {
    struct _CPTABLEINFO OemTableInfo;
    struct _CPTABLEINFO AnsiTableInfo;
    PWCHAR UpperCaseTable;
    PWCHAR LowerCaseTable;
};

typedef struct _NMTBCUSTOMDRAW {
    struct tagNMCUSTOMDRAWINFO nmcd;
    struct HBRUSH__ *hbrMonoDither;
    struct HBRUSH__ *hbrLines;
    struct HPEN__ *hpenLines;
    ULONG clrText;
    ULONG clrMark;
    ULONG clrTextHighlight;
    ULONG clrBtnFace;
    ULONG clrBtnHighlight;
    ULONG clrHighlightHotTrack;
    struct tagRECT rcText;
    LONG nStringBkMode;
    LONG nHLStringBkMode;
    LONG iListGap;
};

typedef struct _NM_UPDOWN {
    struct tagNMHDR hdr;
    LONG iPos;
    LONG iDelta;
};

typedef struct _NON_PAGED_DEBUG_INFO {
    USHORT Signature;
    USHORT Flags;
    ULONG Size;
    USHORT Machine;
    USHORT Characteristics;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    ULONG SizeOfImage;
    ULONG64 ImageBase;
};

typedef struct _NOTIFYICONDATAA {
    ULONG cbSize;
    struct HWND__ *hWnd;
    ULONG uID;
    ULONG uFlags;
    ULONG uCallbackMessage;
    struct HICON__ *hIcon;
    CHAR szTip[128];
    ULONG dwState;
    ULONG dwStateMask;
    CHAR szInfo[256];
    ULONG uTimeout;
    ULONG uVersion;
    CHAR szInfoTitle[64];
    ULONG dwInfoFlags;
    struct _GUID guidItem;
    struct HICON__ *hBalloonIcon;
};

typedef struct _NOTIFYICONDATAW {
    ULONG cbSize;
    struct HWND__ *hWnd;
    ULONG uID;
    ULONG uFlags;
    ULONG uCallbackMessage;
    struct HICON__ *hIcon;
    WCHAR szTip[128];
    ULONG dwState;
    ULONG dwStateMask;
    WCHAR szInfo[256];
    ULONG uTimeout;
    ULONG uVersion;
    WCHAR szInfoTitle[64];
    ULONG dwInfoFlags;
    struct _GUID guidItem;
    struct HICON__ *hBalloonIcon;
};

typedef struct _NOTIFYICONIDENTIFIER {
    ULONG cbSize;
    struct HWND__ *hWnd;
    ULONG uID;
    struct _GUID guidItem;
};

typedef struct _NRESARRAY {
    ULONG cItems;
    struct _NETRESOURCEW nr[1];
};

typedef struct _NTFS_STATISTICS {
    ULONG LogFileFullExceptions;
    ULONG OtherExceptions;
    ULONG MftReads;
    ULONG MftReadBytes;
    ULONG MftWrites;
    ULONG MftWriteBytes;
     <unnamed-type-MftWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } MftWritesUserLevel;
    USHORT MftWritesFlushForLogFileFull;
    USHORT MftWritesLazyWriter;
    USHORT MftWritesUserRequest;
    ULONG Mft2Writes;
    ULONG Mft2WriteBytes;
     <unnamed-type-Mft2WritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } Mft2WritesUserLevel;
    USHORT Mft2WritesFlushForLogFileFull;
    USHORT Mft2WritesLazyWriter;
    USHORT Mft2WritesUserRequest;
    ULONG RootIndexReads;
    ULONG RootIndexReadBytes;
    ULONG RootIndexWrites;
    ULONG RootIndexWriteBytes;
    ULONG BitmapReads;
    ULONG BitmapReadBytes;
    ULONG BitmapWrites;
    ULONG BitmapWriteBytes;
    USHORT BitmapWritesFlushForLogFileFull;
    USHORT BitmapWritesLazyWriter;
    USHORT BitmapWritesUserRequest;
     <unnamed-type-BitmapWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
    } BitmapWritesUserLevel;
    ULONG MftBitmapReads;
    ULONG MftBitmapReadBytes;
    ULONG MftBitmapWrites;
    ULONG MftBitmapWriteBytes;
    USHORT MftBitmapWritesFlushForLogFileFull;
    USHORT MftBitmapWritesLazyWriter;
    USHORT MftBitmapWritesUserRequest;
     <unnamed-type-MftBitmapWritesUserLevel>;
    struct {
        USHORT Write;
        USHORT Create;
        USHORT SetInfo;
        USHORT Flush;
    } MftBitmapWritesUserLevel;
    ULONG UserIndexReads;
    ULONG UserIndexReadBytes;
    ULONG UserIndexWrites;
    ULONG UserIndexWriteBytes;
    ULONG LogFileReads;
    ULONG LogFileReadBytes;
    ULONG LogFileWrites;
    ULONG LogFileWriteBytes;
     <unnamed-type-Allocate>;
    struct {
        ULONG Calls;
        ULONG Clusters;
        ULONG Hints;
        ULONG RunsReturned;
        ULONG HintsHonored;
        ULONG HintsClusters;
        ULONG Cache;
        ULONG CacheClusters;
        ULONG CacheMiss;
        ULONG CacheMissClusters;
    } Allocate;
    ULONG DiskResourcesExhausted;
};

typedef struct _NTFS_STATISTICS_EX {
    ULONG LogFileFullExceptions;
    ULONG OtherExceptions;
    ULONG64 MftReads;
    ULONG64 MftReadBytes;
    ULONG64 MftWrites;
    ULONG64 MftWriteBytes;
     <unnamed-type-MftWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } MftWritesUserLevel;
    ULONG MftWritesFlushForLogFileFull;
    ULONG MftWritesLazyWriter;
    ULONG MftWritesUserRequest;
    ULONG64 Mft2Writes;
    ULONG64 Mft2WriteBytes;
     <unnamed-type-Mft2WritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } Mft2WritesUserLevel;
    ULONG Mft2WritesFlushForLogFileFull;
    ULONG Mft2WritesLazyWriter;
    ULONG Mft2WritesUserRequest;
    ULONG64 RootIndexReads;
    ULONG64 RootIndexReadBytes;
    ULONG64 RootIndexWrites;
    ULONG64 RootIndexWriteBytes;
    ULONG64 BitmapReads;
    ULONG64 BitmapReadBytes;
    ULONG64 BitmapWrites;
    ULONG64 BitmapWriteBytes;
    ULONG BitmapWritesFlushForLogFileFull;
    ULONG BitmapWritesLazyWriter;
    ULONG BitmapWritesUserRequest;
     <unnamed-type-BitmapWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } BitmapWritesUserLevel;
    ULONG64 MftBitmapReads;
    ULONG64 MftBitmapReadBytes;
    ULONG64 MftBitmapWrites;
    ULONG64 MftBitmapWriteBytes;
    ULONG MftBitmapWritesFlushForLogFileFull;
    ULONG MftBitmapWritesLazyWriter;
    ULONG MftBitmapWritesUserRequest;
     <unnamed-type-MftBitmapWritesUserLevel>;
    struct {
        ULONG Write;
        ULONG Create;
        ULONG SetInfo;
        ULONG Flush;
    } MftBitmapWritesUserLevel;
    ULONG64 UserIndexReads;
    ULONG64 UserIndexReadBytes;
    ULONG64 UserIndexWrites;
    ULONG64 UserIndexWriteBytes;
    ULONG64 LogFileReads;
    ULONG64 LogFileReadBytes;
    ULONG64 LogFileWrites;
    ULONG64 LogFileWriteBytes;
     <unnamed-type-Allocate>;
    struct {
        ULONG Calls;
        ULONG RunsReturned;
        ULONG Hints;
        ULONG HintsHonored;
        ULONG Cache;
        ULONG CacheMiss;
        ULONG64 Clusters;
        ULONG64 HintsClusters;
        ULONG64 CacheClusters;
        ULONG64 CacheMissClusters;
    } Allocate;
    ULONG DiskResourcesExhausted;
    ULONG64 VolumeTrimCount;
    ULONG64 VolumeTrimTime;
    ULONG64 VolumeTrimByteCount;
    ULONG64 FileLevelTrimCount;
    ULONG64 FileLevelTrimTime;
    ULONG64 FileLevelTrimByteCount;
    ULONG64 VolumeTrimSkippedCount;
    ULONG64 VolumeTrimSkippedByteCount;
    ULONG64 NtfsFillStatInfoFromMftRecordCalledCount;
    ULONG64 NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
    ULONG64 NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
};

typedef struct _NTMW_INTERNAL {
    struct _TMDIFF tmdNtmw;
    struct tagENUMTEXTMETRICW entmw;
};

typedef struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;
    PVOID FiberData;
    ULONG Version;
    PVOID ArbitraryUserPointer;
    struct _NT_TIB *Self;
};

typedef struct _NT_TIB32 {
    ULONG ExceptionList;
    ULONG StackBase;
    ULONG StackLimit;
    ULONG SubSystemTib;
    ULONG FiberData;
    ULONG Version;
    ULONG ArbitraryUserPointer;
    ULONG Self;
};

typedef struct _NT_TIB64 {
    ULONG64 ExceptionList;
    ULONG64 StackBase;
    ULONG64 StackLimit;
    ULONG64 SubSystemTib;
    ULONG64 FiberData;
    ULONG Version;
    ULONG64 ArbitraryUserPointer;
    ULONG64 Self;
};

typedef struct _NUMA_NODE_RELATIONSHIP {
    ULONG NodeNumber;
    UCHAR Reserved[20];
    struct _GROUP_AFFINITY GroupMask;
};

typedef struct _NV_MEMORY_RANGE {
    PVOID BaseAddress;
    ULONG64 Length;
};

typedef struct _NWLOGONADMIN {
    WCHAR Username[21];
    WCHAR Password[15];
    WCHAR Domain[18];
};

typedef struct _OBJECTID {
    struct _GUID Lineage;
    ULONG Uniquifier;
};

typedef struct _OBJECT_ATTRIBUTES {
    ULONG Length;
    PVOID RootDirectory;
    struct _UNICODE_STRING *ObjectName;
    ULONG Attributes;
    PVOID SecurityDescriptor;
    PVOID SecurityQualityOfService;
};

typedef struct _OBJECT_ATTRIBUTES32 {
    ULONG Length;
    ULONG RootDirectory;
    ULONG ObjectName;
    ULONG Attributes;
    ULONG SecurityDescriptor;
    ULONG SecurityQualityOfService;
};

typedef struct _OBJECT_ATTRIBUTES64 {
    ULONG Length;
    ULONG64 RootDirectory;
    ULONG64 ObjectName;
    ULONG Attributes;
    ULONG64 SecurityDescriptor;
    ULONG64 SecurityQualityOfService;
};

typedef struct _OBJECT_BASIC_INFORMATION {
    ULONG Attributes;
    ULONG GrantedAccess;
    ULONG HandleCount;
    ULONG PointerCount;
    ULONG PagedPoolCharge;
    ULONG NonPagedPoolCharge;
    ULONG Reserved[3];
    ULONG NameInfoSize;
    ULONG TypeInfoSize;
    ULONG SecurityDescriptorSize;
    union _LARGE_INTEGER CreationTime;
};

typedef struct _OBJECT_DIRECTORY_INFORMATION {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING TypeName;
};

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION {
    UCHAR Inherit;
    UCHAR ProtectFromClose;
};

typedef struct _OBJECT_NAME_INFORMATION {
    struct _UNICODE_STRING Name;
};

typedef struct _OBJECT_TYPES_INFORMATION {
    ULONG NumberOfTypes;
};

typedef struct _OBJECT_TYPE_INFORMATION {
    struct _UNICODE_STRING TypeName;
    ULONG TotalNumberOfObjects;
    ULONG TotalNumberOfHandles;
    ULONG TotalPagedPoolUsage;
    ULONG TotalNonPagedPoolUsage;
    ULONG TotalNamePoolUsage;
    ULONG TotalHandleTableUsage;
    ULONG HighWaterNumberOfObjects;
    ULONG HighWaterNumberOfHandles;
    ULONG HighWaterPagedPoolUsage;
    ULONG HighWaterNonPagedPoolUsage;
    ULONG HighWaterNamePoolUsage;
    ULONG HighWaterHandleTableUsage;
    ULONG InvalidAttributes;
    struct _GENERIC_MAPPING GenericMapping;
    ULONG ValidAccessMask;
    UCHAR SecurityRequired;
    UCHAR MaintainHandleCount;
    UCHAR TypeIndex;
    CHAR ReservedByte;
    ULONG PoolType;
    ULONG DefaultPagedPoolCharge;
    ULONG DefaultNonPagedPoolCharge;
};

typedef struct _OBJECT_TYPE_LIST {
    USHORT Level;
    USHORT Sbz;
    struct _GUID *ObjectType;
};

typedef struct _OCSP_BASIC_RESPONSE_ENTRY {
    struct _OCSP_CERT_ID CertId;
    ULONG dwCertStatus;
    struct _OCSP_BASIC_REVOKED_INFO *pRevokedInfo;
    struct _FILETIME ThisUpdate;
    struct _FILETIME NextUpdate;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_BASIC_RESPONSE_INFO {
    ULONG dwVersion;
    ULONG dwResponderIdChoice;
    struct _CRYPTOAPI_BLOB ByNameResponderId;
    struct _CRYPTOAPI_BLOB ByKeyResponderId;
    struct _FILETIME ProducedAt;
    ULONG cResponseEntry;
    struct _OCSP_BASIC_RESPONSE_ENTRY *rgResponseEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_BASIC_REVOKED_INFO {
    struct _FILETIME RevocationDate;
    ULONG dwCrlReasonCode;
};

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _OCSP_SIGNATURE_INFO SignatureInfo;
};

typedef struct _OCSP_CERT_ID {
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    struct _CRYPTOAPI_BLOB IssuerNameHash;
    struct _CRYPTOAPI_BLOB IssuerKeyHash;
    struct _CRYPTOAPI_BLOB SerialNumber;
};

typedef struct _OCSP_REQUEST_ENTRY {
    struct _OCSP_CERT_ID CertId;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_REQUEST_INFO {
    ULONG dwVersion;
    struct _CERT_ALT_NAME_ENTRY *pRequestorName;
    ULONG cRequestEntry;
    struct _OCSP_REQUEST_ENTRY *rgRequestEntry;
    ULONG cExtension;
    struct _CERT_EXTENSION *rgExtension;
};

typedef struct _OCSP_RESPONSE_INFO {
    ULONG dwStatus;
    PCHAR pszObjId;
    struct _CRYPTOAPI_BLOB Value;
};

typedef struct _OCSP_SIGNATURE_INFO {
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    struct _CRYPT_BIT_BLOB Signature;
    ULONG cCertEncoded;
    struct _CRYPTOAPI_BLOB *rgCertEncoded;
};

typedef struct _OCSP_SIGNED_REQUEST_INFO {
    struct _CRYPTOAPI_BLOB ToBeSigned;
    struct _OCSP_SIGNATURE_INFO *pOptionalSignatureInfo;
};

typedef struct _OEMTDCONFIGA {
    LONG Adapter;
    CHAR DeviceName[129];
    ULONG Flags;
};

typedef struct _OEMTDCONFIGW {
    LONG Adapter;
    WCHAR DeviceName[129];
    ULONG Flags;
};

typedef struct _OFNOTIFYA {
    struct tagNMHDR hdr;
    struct tagOFNA *lpOFN;
    PCHAR pszFile;
};

typedef struct _OFNOTIFYEXA {
    struct tagNMHDR hdr;
    struct tagOFNA *lpOFN;
    PVOID psf;
    PVOID pidl;
};

typedef struct _OFNOTIFYEXW {
    struct tagNMHDR hdr;
    struct tagOFNW *lpOFN;
    PVOID psf;
    PVOID pidl;
};

typedef struct _OFNOTIFYW {
    struct tagNMHDR hdr;
    struct tagOFNW *lpOFN;
    PWCHAR pszFile;
};

typedef struct _OFSTRUCT {
    UCHAR cBytes;
    UCHAR fFixedDisk;
    USHORT nErrCode;
    USHORT Reserved1;
    USHORT Reserved2;
    CHAR szPathName[128];
};

typedef struct _OLESTREAM {
    struct _OLESTREAMVTBL *lpstbl;
};

typedef struct _OLESTREAMVTBL {
    PULONG Get;
    PULONG Put;
};

typedef struct _OPEN_PRINTER_PROPS_INFOA {
    ULONG dwSize;
    PCHAR pszSheetName;
    ULONG uSheetIndex;
    ULONG dwFlags;
    LONG bModal;
};

typedef struct _OPEN_PRINTER_PROPS_INFOW {
    ULONG dwSize;
    PWCHAR pszSheetName;
    ULONG uSheetIndex;
    ULONG dwFlags;
    LONG bModal;
};

typedef struct _OPERATION_END_PARAMETERS {
    ULONG Version;
    ULONG OperationId;
    ULONG Flags;
};

typedef struct _OPERATION_START_PARAMETERS {
    ULONG Version;
    ULONG OperationId;
    ULONG Flags;
};

typedef struct _OSVERSIONINFOA {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef struct _OSVERSIONINFOEX2A {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
    ULONG wSuiteMaskEx;
    ULONG wReserved2;
};

typedef struct _OSVERSIONINFOEX2W {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
    ULONG wSuiteMaskEx;
    ULONG wReserved2;
};

typedef struct _OSVERSIONINFOEXA {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    CHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
};

typedef struct _OSVERSIONINFOEXW {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
    USHORT wServicePackMajor;
    USHORT wServicePackMinor;
    USHORT wSuiteMask;
    UCHAR wProductType;
    UCHAR wReserved;
};

typedef struct _OSVERSIONINFOW {
    ULONG dwOSVersionInfoSize;
    ULONG dwMajorVersion;
    ULONG dwMinorVersion;
    ULONG dwBuildNumber;
    ULONG dwPlatformId;
    WCHAR szCSDVersion[128];
};

typedef struct _OUTLINETEXTMETRICA {
    ULONG otmSize;
    struct tagTEXTMETRICA otmTextMetrics;
    UCHAR otmFiller;
    struct tagPANOSE otmPanoseNumber;
    ULONG otmfsSelection;
    ULONG otmfsType;
    LONG otmsCharSlopeRise;
    LONG otmsCharSlopeRun;
    LONG otmItalicAngle;
    ULONG otmEMSquare;
    LONG otmAscent;
    LONG otmDescent;
    ULONG otmLineGap;
    ULONG otmsCapEmHeight;
    ULONG otmsXHeight;
    struct tagRECT otmrcFontBox;
    LONG otmMacAscent;
    LONG otmMacDescent;
    ULONG otmMacLineGap;
    ULONG otmusMinimumPPEM;
    struct tagPOINT otmptSubscriptSize;
    struct tagPOINT otmptSubscriptOffset;
    struct tagPOINT otmptSuperscriptSize;
    struct tagPOINT otmptSuperscriptOffset;
    ULONG otmsStrikeoutSize;
    LONG otmsStrikeoutPosition;
    LONG otmsUnderscoreSize;
    LONG otmsUnderscorePosition;
    PCHAR otmpFamilyName;
    PCHAR otmpFaceName;
    PCHAR otmpStyleName;
    PCHAR otmpFullName;
};

typedef struct _OUTLINETEXTMETRICW {
    ULONG otmSize;
    struct tagTEXTMETRICW otmTextMetrics;
    UCHAR otmFiller;
    struct tagPANOSE otmPanoseNumber;
    ULONG otmfsSelection;
    ULONG otmfsType;
    LONG otmsCharSlopeRise;
    LONG otmsCharSlopeRun;
    LONG otmItalicAngle;
    ULONG otmEMSquare;
    LONG otmAscent;
    LONG otmDescent;
    ULONG otmLineGap;
    ULONG otmsCapEmHeight;
    ULONG otmsXHeight;
    struct tagRECT otmrcFontBox;
    LONG otmMacAscent;
    LONG otmMacDescent;
    ULONG otmMacLineGap;
    ULONG otmusMinimumPPEM;
    struct tagPOINT otmptSubscriptSize;
    struct tagPOINT otmptSubscriptOffset;
    struct tagPOINT otmptSuperscriptSize;
    struct tagPOINT otmptSuperscriptOffset;
    ULONG otmsStrikeoutSize;
    LONG otmsStrikeoutPosition;
    LONG otmsUnderscoreSize;
    LONG otmsUnderscorePosition;
    PCHAR otmpFamilyName;
    PCHAR otmpFaceName;
    PCHAR otmpStyleName;
    PCHAR otmpFullName;
};

typedef struct _OUTPUT_DEBUG_STRING_INFO {
    PCHAR lpDebugStringData;
    USHORT fUnicode;
    USHORT nDebugStringLength;
};

typedef struct _OVERLAPPED {
    ULONG64 Internal;
    ULONG64 InternalHigh;
    ULONG Offset;
    ULONG OffsetHigh;
    PVOID Pointer;
    PVOID hEvent;
};

typedef struct _OVERLAPPED_ENTRY {
    ULONG64 lpCompletionKey;
    struct _OVERLAPPED *lpOverlapped;
    ULONG64 Internal;
    ULONG dwNumberOfBytesTransferred;
};

typedef struct _PACKEDEVENTINFO {
    ULONG ulSize;
    ULONG ulNumEventsForLogFile;
    ULONG ulOffsets[0];
};

typedef struct _PAGEDIR_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 PageDirectoryBase : 48;
    ULONG64 Reserved : 7;
};

typedef struct _PAGE_PRIORITY_INFORMATION {
    ULONG PagePriority;
};

typedef struct _PARSE_ERROR_INFO {
    ULONG dwSize;
    ULONG dwParseErrCode;
    WCHAR szMsg[520];
    WCHAR szFileName[260];
    WCHAR szSourceLine[260];
    LONG iLineNum;
};

typedef struct _PARSE_MESSAGE_CONTEXT {
    ULONG fFlags;
    ULONG cwSavColumn;
    ULONG64 iwSrc;
    ULONG64 iwDst;
    ULONG64 iwDstSpace;
    PCHAR lpvArgStart;
};

typedef struct _PARTITION_INFORMATION {
    union _LARGE_INTEGER StartingOffset;
    union _LARGE_INTEGER PartitionLength;
    ULONG HiddenSectors;
    ULONG PartitionNumber;
    UCHAR PartitionType;
    UCHAR BootIndicator;
    UCHAR RecognizedPartition;
    UCHAR RewritePartition;
};

typedef struct _PARTITION_INFORMATION_EX {
    enum _PARTITION_STYLE PartitionStyle;
    union _LARGE_INTEGER StartingOffset;
    union _LARGE_INTEGER PartitionLength;
    ULONG PartitionNumber;
    UCHAR RewritePartition;
    UCHAR IsServicePartition;
    struct _PARTITION_INFORMATION_MBR Mbr;
    struct _PARTITION_INFORMATION_GPT Gpt;
};

typedef struct _PARTITION_INFORMATION_GPT {
    struct _GUID PartitionType;
    struct _GUID PartitionId;
    ULONG64 Attributes;
    WCHAR Name[36];
};

typedef struct _PARTITION_INFORMATION_MBR {
    UCHAR PartitionType;
    UCHAR BootIndicator;
    UCHAR RecognizedPartition;
    ULONG HiddenSectors;
    struct _GUID PartitionId;
};

typedef struct _PATHNAME_BUFFER {
    ULONG PathNameLength;
    WCHAR Name[1];
};

typedef struct _PDCONFIG2A {
    CHAR PdName[33];
    enum _SDCLASS SdClass;
    CHAR PdDLL[33];
    ULONG PdFlag;
    ULONG OutBufLength;
    ULONG OutBufCount;
    ULONG OutBufDelay;
    ULONG InteractiveDelay;
    ULONG PortNumber;
    ULONG KeepAliveTimeout;
    ULONG fSupportFastReconnect : 1;
};

typedef struct _PDCONFIG2W {
    WCHAR PdName[33];
    enum _SDCLASS SdClass;
    WCHAR PdDLL[33];
    ULONG PdFlag;
    ULONG OutBufLength;
    ULONG OutBufCount;
    ULONG OutBufDelay;
    ULONG InteractiveDelay;
    ULONG PortNumber;
    ULONG KeepAliveTimeout;
    ULONG fSupportFastReconnect : 1;
};

typedef struct _PDCONFIG3A {
    struct _PDCONFIG2A Data;
    CHAR ServiceName[33];
    CHAR ConfigDLL[33];
    ULONG RequiredPdCount;
    CHAR RequiredPds[10][33];
};

typedef struct _PDCONFIG3W {
    struct _PDCONFIG2W Data;
    WCHAR ServiceName[33];
    WCHAR ConfigDLL[33];
    ULONG RequiredPdCount;
    WCHAR RequiredPds[10][33];
};

typedef struct _PDCONFIGA {
    struct _PDCONFIG2A Create;
    struct _PDPARAMSA Params;
};

typedef struct _PDCONFIGW {
    struct _PDCONFIG2W Create;
    struct _PDPARAMSW Params;
};

typedef struct _PDPARAMSA {
    enum _SDCLASS SdClass;
    struct _NETWORKCONFIGA Network;
    struct _ASYNCCONFIGA Async;
    struct _NASICONFIGA Nasi;
    struct _OEMTDCONFIGA OemTd;
};

typedef struct _PDPARAMSW {
    enum _SDCLASS SdClass;
    struct _NETWORKCONFIGW Network;
    struct _ASYNCCONFIGW Async;
    struct _NASICONFIGW Nasi;
    struct _OEMTDCONFIGW OemTd;
};

typedef struct _PEB {
    UCHAR InheritedAddressSpace;
    UCHAR ReadImageFileExecOptions;
    UCHAR BeingDebugged;
    UCHAR BitField;
    UCHAR ImageUsesLargePages : 1;
    UCHAR IsProtectedProcess : 1;
    UCHAR IsImageDynamicallyRelocated : 1;
    UCHAR SkipPatchingUser32Forwarders : 1;
    UCHAR IsPackagedProcess : 1;
    UCHAR IsAppContainer : 1;
    UCHAR IsProtectedProcessLight : 1;
    UCHAR IsLongPathAwareProcess : 1;
    UCHAR Padding0[4];
    PVOID Mutant;
    PVOID ImageBaseAddress;
    struct _PEB_LDR_DATA *Ldr;
    struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
    PVOID SubSystemData;
    PVOID ProcessHeap;
    struct _RTL_CRITICAL_SECTION *FastPebLock;
    union _SLIST_HEADER *AtlThunkSListPtr;
    PVOID IFEOKey;
    ULONG CrossProcessFlags;
    ULONG ProcessInJob : 1;
    ULONG ProcessInitializing : 1;
    ULONG ProcessUsingVEH : 1;
    ULONG ProcessUsingVCH : 1;
    ULONG ProcessUsingFTH : 1;
    ULONG ProcessPreviouslyThrottled : 1;
    ULONG ProcessCurrentlyThrottled : 1;
    ULONG ProcessImagesHotPatched : 1;
    ULONG ReservedBits0 : 24;
    UCHAR Padding1[4];
    PVOID KernelCallbackTable;
    PVOID UserSharedInfoPtr;
    ULONG SystemReserved;
    ULONG AtlThunkSListPtr32;
    PVOID ApiSetMap;
    ULONG TlsExpansionCounter;
    UCHAR Padding2[4];
    PVOID TlsBitmap;
    ULONG TlsBitmapBits[2];
    PVOID ReadOnlySharedMemoryBase;
    PVOID SharedData;
    PVOID *ReadOnlyStaticServerData;
    PVOID AnsiCodePageData;
    PVOID OemCodePageData;
    PVOID UnicodeCaseTableData;
    ULONG NumberOfProcessors;
    ULONG NtGlobalFlag;
    union _LARGE_INTEGER CriticalSectionTimeout;
    ULONG64 HeapSegmentReserve;
    ULONG64 HeapSegmentCommit;
    ULONG64 HeapDeCommitTotalFreeThreshold;
    ULONG64 HeapDeCommitFreeBlockThreshold;
    ULONG NumberOfHeaps;
    ULONG MaximumNumberOfHeaps;
    PVOID *ProcessHeaps;
    PVOID GdiSharedHandleTable;
    PVOID ProcessStarterHelper;
    ULONG GdiDCAttributeList;
    UCHAR Padding3[4];
    struct _RTL_CRITICAL_SECTION *LoaderLock;
    ULONG OSMajorVersion;
    ULONG OSMinorVersion;
    USHORT OSBuildNumber;
    USHORT OSCSDVersion;
    ULONG OSPlatformId;
    ULONG ImageSubsystem;
    ULONG ImageSubsystemMajorVersion;
    ULONG ImageSubsystemMinorVersion;
    UCHAR Padding4[4];
    ULONG64 ActiveProcessAffinityMask;
    ULONG GdiHandleBuffer[60];
    PVOID PostProcessInitRoutine;
    PVOID TlsExpansionBitmap;
    ULONG TlsExpansionBitmapBits[32];
    ULONG SessionId;
    UCHAR Padding5[4];
    union _ULARGE_INTEGER AppCompatFlags;
    union _ULARGE_INTEGER AppCompatFlagsUser;
    PVOID pShimData;
    PVOID AppCompatInfo;
    struct _UNICODE_STRING CSDVersion;
    struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
    struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
    struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
    struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
    ULONG64 MinimumStackCommit;
    struct _FLS_CALLBACK_INFO *FlsCallback;
    struct _LIST_ENTRY FlsListHead;
    PVOID FlsBitmap;
    ULONG FlsBitmapBits[4];
    ULONG FlsHighIndex;
    PVOID WerRegistrationData;
    PVOID WerShipAssertPtr;
    PVOID pUnused;
    PVOID pImageHeaderHash;
    ULONG TracingFlags;
    ULONG HeapTracingEnabled : 1;
    ULONG CritSecTracingEnabled : 1;
    ULONG LibLoaderTracingEnabled : 1;
    ULONG SpareTracingBits : 29;
    UCHAR Padding6[4];
    ULONG64 CsrServerReadOnlySharedMemoryBase;
    ULONG64 TppWorkerpListLock;
    struct _LIST_ENTRY TppWorkerpList;
    PVOID WaitOnAddressHashTable[128];
    PVOID TelemetryCoverageHeader;
    ULONG CloudFileFlags;
    ULONG CloudFileDiagFlags;
    CHAR PlaceholderCompatibilityMode;
    CHAR PlaceholderCompatibilityModeReserved[7];
    struct _LEAP_SECOND_DATA *LeapSecondData;
    ULONG LeapSecondFlags;
    ULONG SixtySecondEnabled : 1;
    ULONG Reserved : 31;
    ULONG NtGlobalFlag2;
    VOID _PEB;
    VOID _PEB;
    struct _PEB *operator=;
    struct _PEB *operator=;
};

typedef struct _PEBS_DS_SAVE_AREA {
    ULONG64 BtsBufferBase;
    ULONG64 BtsIndex;
    ULONG64 BtsAbsoluteMaximum;
    ULONG64 BtsInterruptThreshold;
    ULONG64 PebsBufferBase;
    ULONG64 PebsIndex;
    ULONG64 PebsAbsoluteMaximum;
    ULONG64 PebsInterruptThreshold;
    ULONG64 PebsCounterReset0;
    ULONG64 PebsCounterReset1;
    ULONG64 PebsCounterReset2;
    ULONG64 PebsCounterReset3;
};

typedef struct _PEB_LDR_DATA {
    ULONG Length;
    UCHAR Initialized;
    PVOID SsHandle;
    struct _LIST_ENTRY InLoadOrderModuleList;
    struct _LIST_ENTRY InMemoryOrderModuleList;
    struct _LIST_ENTRY InInitializationOrderModuleList;
    PVOID EntryInProgress;
    UCHAR ShutdownInProgress;
    PVOID ShutdownThreadId;
};

typedef struct _PERFINFO_GROUPMASK {
    ULONG Masks[8];
};

typedef struct _PERFORMANCE_DATA {
    USHORT Size;
    UCHAR Version;
    UCHAR HwCountersCount;
    ULONG ContextSwitchCount;
    ULONG64 WaitReasonBitMap;
    ULONG64 CycleTime;
    ULONG RetryCount;
    ULONG Reserved;
    struct _HARDWARE_COUNTER_DATA HwCounters[16];
};

typedef struct _PERF_BIN {
    ULONG NumberOfBins;
    ULONG TypeOfBin;
    struct _BIN_RANGE BinsRanges[1];
};

typedef struct _PERF_COUNTER_BLOCK {
    ULONG ByteLength;
};

typedef struct _PERF_COUNTER_DEFINITION {
    ULONG ByteLength;
    ULONG CounterNameTitleIndex;
    ULONG CounterNameTitle;
    ULONG CounterHelpTitleIndex;
    ULONG CounterHelpTitle;
    LONG DefaultScale;
    ULONG DetailLevel;
    ULONG CounterType;
    ULONG CounterSize;
    ULONG CounterOffset;
};

typedef struct _PERF_DATA_BLOCK {
    WCHAR Signature[4];
    ULONG LittleEndian;
    ULONG Version;
    ULONG Revision;
    ULONG TotalByteLength;
    ULONG HeaderLength;
    ULONG NumObjectTypes;
    LONG DefaultObject;
    struct _SYSTEMTIME SystemTime;
    union _LARGE_INTEGER PerfTime;
    union _LARGE_INTEGER PerfFreq;
    union _LARGE_INTEGER PerfTime100nSec;
    ULONG SystemNameLength;
    ULONG SystemNameOffset;
};

typedef struct _PERF_INSTANCE_DEFINITION {
    ULONG ByteLength;
    ULONG ParentObjectTitleIndex;
    ULONG ParentObjectInstance;
    LONG UniqueID;
    ULONG NameOffset;
    ULONG NameLength;
};

typedef struct _PERF_OBJECT_TYPE {
    ULONG TotalByteLength;
    ULONG DefinitionLength;
    ULONG HeaderLength;
    ULONG ObjectNameTitleIndex;
    ULONG ObjectNameTitle;
    ULONG ObjectHelpTitleIndex;
    ULONG ObjectHelpTitle;
    ULONG DetailLevel;
    ULONG NumCounters;
    LONG DefaultCounter;
    LONG NumInstances;
    ULONG CodePage;
    union _LARGE_INTEGER PerfTime;
    union _LARGE_INTEGER PerfFreq;
};

typedef struct _PERSISTENT_RESERVE_COMMAND {
    ULONG Version;
    ULONG Size;
    struct {
        UCHAR ServiceAction : 5;
        UCHAR Reserved1 : 3;
        USHORT AllocationLength;
    } PR_IN;
    struct {
        UCHAR ServiceAction : 5;
        UCHAR Reserved1 : 3;
        UCHAR Type : 4;
        UCHAR Scope : 4;
        UCHAR ParameterList[0];
    } PR_OUT;
};

typedef struct _PERSIST_FOLDER_TARGET_INFO {
    struct _ITEMIDLIST *pidlTargetFolder;
    WCHAR szTargetParsingName[260];
    WCHAR szNetworkProvider[260];
    ULONG dwAttributes;
    LONG csidl;
};

typedef struct _PHYSICAL_CHANNEL_RUN {
    ULONG NodeNumber;
    ULONG ChannelNumber;
    ULONG64 BasePage;
    ULONG64 PageCount;
    ULONG64 Flags;
};

typedef struct _PHYSICAL_ELEMENT_STATUS {
    ULONG Version;
    ULONG Size;
    ULONG DescriptorCount;
    ULONG ReturnedDescriptorCount;
    ULONG ElementIdentifierBeingDepoped;
    ULONG Reserved;
    struct _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR Descriptors[1];
};

typedef struct _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG ElementIdentifier;
    UCHAR PhysicalElementType;
    UCHAR PhysicalElementHealth;
    UCHAR Reserved1[2];
    ULONG64 AssociatedCapacity;
    ULONG Reserved2[4];
};

typedef struct _PHYSICAL_ELEMENT_STATUS_REQUEST {
    ULONG Version;
    ULONG Size;
    ULONG StartingElement;
    UCHAR Filter;
    UCHAR ReportType;
    UCHAR Reserved[2];
};

typedef struct _PKCS12_PBES2_EXPORT_PARAMS {
    ULONG dwSize;
    PVOID hNcryptDescriptor;
    PWCHAR pwszPbes2Alg;
};

typedef struct _PKU2U_CERTIFICATE_S4U_LOGON {
    enum _PKU2U_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    struct _UNICODE_STRING UserPrincipalName;
    struct _UNICODE_STRING DomainName;
    ULONG CertificateLength;
    PUCHAR Certificate;
};

typedef struct _PKU2U_CERT_BLOB {
    ULONG CertOffset;
    USHORT CertLength;
};

typedef struct _PKU2U_CREDUI_CONTEXT {
    ULONG64 Version;
    USHORT cbHeaderLength;
    ULONG cbStructureLength;
    USHORT CertArrayCount;
    ULONG CertArrayOffset;
};

typedef struct _PLEX_READ_DATA_REQUEST {
    union _LARGE_INTEGER ByteOffset;
    ULONG ByteLength;
    ULONG PlexNumber;
};

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA {
    ULONG Flags;
    ULONG BufferLength;
    PVOID Buffer;
};

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _GUID *InterfaceGuid;
    struct _UNICODE_STRING Reference;
    UCHAR Register;
    PWCHAR SymLink;
    ULONG SymLinkLength;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _CM_RESOURCE_LIST *ResourceList;
    ULONG ResourceListSize;
    struct _PLUGPLAY_CONTROL_CONFLICT_LIST *ConflictBuffer;
    ULONG ConflictBufferSize;
    ULONG Flags;
    LONG Status;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY {
    ULONG DeviceInstance;
    ULONG DeviceFlags;
    ULONG ResourceType;
    ULONG64 ResourceStart;
    ULONG64 ResourceEnd;
    ULONG ResourceFlags;
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST {
    ULONG Reserved1;
    ULONG Reserved2;
    ULONG ConflictsCounted;
    ULONG ConflictsListed;
    ULONG RequiredBufferSize;
    struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
};

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS {
    ULONG NullDeviceInstance;
    WCHAR DeviceInstanceStrings[1];
};

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG DeviceDepth;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Flags;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED {
    struct _UNICODE_STRING DeviceInterface;
    ULONG Flags;
    UCHAR Enabled;
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA {
    struct _UNICODE_STRING DeviceInstance;
    enum _PNP_QUERY_RELATION Operation;
    ULONG BufferLength;
    PWCHAR Buffer;
};

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA {
    ULONG BufferLength;
    PWCHAR Buffer;
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA {
    struct _UNICODE_STRING SymbolicLinkName;
    struct _GUID *AliasClassGuid;
    PWCHAR AliasSymbolicLinkName;
    ULONG AliasSymbolicLinkNameLength;
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA {
    struct _UNICODE_STRING DeviceInstance;
    struct _GUID *InterfaceGuid;
    PWCHAR InterfaceList;
    ULONG InterfaceListSize;
    ULONG Flags;
};

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA {
    struct _UNICODE_STRING ServiceName;
    PWCHAR DeviceInstance;
    ULONG DeviceInstanceLength;
};

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG PropertyType;
    PVOID Buffer;
    ULONG BufferSize;
};

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Flags;
    enum _PNP_VETO_TYPE VetoType;
    PWCHAR VetoName;
    ULONG VetoNameLength;
};

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA {
    struct _UNICODE_STRING TargetDeviceInstance;
    ULONG Relation;
    PWCHAR RelatedDeviceInstance;
    ULONG RelatedDeviceInstanceLength;
};

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA {
    ULONG DeviceInstanceLength;
    PWCHAR DeviceInstance;
};

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA {
    struct _UNICODE_STRING DeviceInstance;
    ULONG Operation;
    ULONG DeviceStatus;
    ULONG DeviceProblem;
    ULONG Flags;
    LONG ProblemStatus;
};

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA {
    PVOID UserFileHandle;
    LONG Status;
    ULONG DeviceInstanceLen;
    PWCHAR DeviceInstance;
};

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA {
    ULONG Response;
    enum _PNP_VETO_TYPE VetoType;
    PWCHAR VetoName;
    ULONG VetoNameLength;
};

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION {
    struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
    PVOID FileObject;
    LONG NameBufferOffset;
    UCHAR CustomDataBuffer[1];
};

typedef struct _PLUGPLAY_EVENT_BLOCK {
    struct _GUID EventGuid;
    enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
    PULONG Result;
    ULONG Flags;
    ULONG TotalSize;
    PVOID DeviceObject;
     <unnamed-type-u>;
    union {
         <unnamed-type-DeviceClass>;
        struct {
            struct _GUID ClassGuid;
            WCHAR SymbolicLinkName[1];
        } DeviceClass;
         <unnamed-type-TargetDevice>;
        struct {
            WCHAR DeviceId[1];
        } TargetDevice;
         <unnamed-type-InstallDevice>;
        struct {
            WCHAR DeviceId[1];
        } InstallDevice;
         <unnamed-type-CustomNotification>;
        struct {
            PVOID NotificationStructure;
            WCHAR DeviceId[1];
        } CustomNotification;
         <unnamed-type-ProfileNotification>;
        struct {
            PVOID Notification;
        } ProfileNotification;
         <unnamed-type-PowerNotification>;
        struct {
            ULONG NotificationCode;
            ULONG NotificationData;
        } PowerNotification;
         <unnamed-type-VetoNotification>;
        struct {
            enum _PNP_VETO_TYPE VetoType;
            WCHAR DeviceIdVetoNameBuffer[1];
        } VetoNotification;
         <unnamed-type-BlockedDriverNotification>;
        struct {
            struct _GUID BlockedDriverGuid;
        } BlockedDriverNotification;
         <unnamed-type-InvalidIDNotification>;
        struct {
            WCHAR ParentId[1];
        } InvalidIDNotification;
         <unnamed-type-PowerSettingNotification>;
        struct {
            struct _GUID PowerSettingGuid;
            ULONG Flags;
            ULONG SessionId;
            ULONG DataLength;
            UCHAR Data[1];
        } PowerSettingNotification;
         <unnamed-type-PropertyChangeNotification>;
        struct {
            WCHAR DeviceId[1];
        } PropertyChangeNotification;
         <unnamed-type-DeviceInstanceNotification>;
        struct {
            WCHAR DeviceId[1];
        } DeviceInstanceNotification;
    } u;
};

typedef struct _PLUGPLAY_NOTIFY_HDR {
    USHORT Version;
    USHORT Size;
    struct _GUID Event;
};

typedef struct _PMD {
    LONG mdisp;
    LONG pdisp;
    LONG vdisp;
};

typedef struct _POINTFLOAT {
    FLOAT x;
    FLOAT y;
};

typedef struct _POINTL {
    LONG x;
    LONG y;
};

typedef struct _POLICY_ACCOUNT_DOMAIN_INFO {
    struct _UNICODE_STRING DomainName;
    PVOID DomainSid;
};

typedef struct _POLICY_AUDIT_CATEGORIES_INFO {
    ULONG MaximumCategoryCount;
    struct _POLICY_AUDIT_SUBCATEGORIES_INFO *SubCategoriesInfo;
};

typedef struct _POLICY_AUDIT_EVENTS_INFO {
    UCHAR AuditingMode;
    PULONG EventAuditingOptions;
    ULONG MaximumAuditEventCount;
};

typedef struct _POLICY_AUDIT_FULL_QUERY_INFO {
    UCHAR ShutDownOnFull;
    UCHAR LogIsFull;
};

typedef struct _POLICY_AUDIT_FULL_SET_INFO {
    UCHAR ShutDownOnFull;
};

typedef struct _POLICY_AUDIT_LOG_INFO {
    ULONG AuditLogPercentFull;
    ULONG MaximumLogSize;
    union _LARGE_INTEGER AuditRetentionPeriod;
    UCHAR AuditLogFullShutdownInProgress;
    union _LARGE_INTEGER TimeToShutdown;
    ULONG NextAuditRecordId;
};

typedef struct _POLICY_AUDIT_SID_ARRAY {
    ULONG UsersCount;
    PVOID *UserSidArray;
};

typedef struct _POLICY_AUDIT_SUBCATEGORIES_INFO {
    ULONG MaximumSubCategoryCount;
    PULONG EventAuditingOptions;
};

typedef struct _POLICY_DEFAULT_QUOTA_INFO {
    struct _QUOTA_LIMITS QuotaLimits;
};

typedef struct _POLICY_DNS_DOMAIN_INFO {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING DnsDomainName;
    struct _UNICODE_STRING DnsForestName;
    struct _GUID DomainGuid;
    PVOID Sid;
};

typedef struct _POLICY_DOMAIN_EFS_INFO {
    ULONG InfoLength;
    PUCHAR EfsBlob;
};

typedef struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO {
    ULONG AuthenticationOptions;
    union _LARGE_INTEGER MaxServiceTicketAge;
    union _LARGE_INTEGER MaxTicketAge;
    union _LARGE_INTEGER MaxRenewAge;
    union _LARGE_INTEGER MaxClockSkew;
    union _LARGE_INTEGER Reserved;
};

typedef struct _POLICY_LSA_SERVER_ROLE_INFO {
    enum _POLICY_LSA_SERVER_ROLE LsaServerRole;
};

typedef struct _POLICY_MACHINE_ACCT_INFO {
    ULONG Rid;
    PVOID Sid;
};

typedef struct _POLICY_MODIFICATION_INFO {
    union _LARGE_INTEGER ModifiedId;
    union _LARGE_INTEGER DatabaseCreationTime;
};

typedef struct _POLICY_PD_ACCOUNT_INFO {
    struct _UNICODE_STRING Name;
};

typedef struct _POLICY_PRIMARY_DOMAIN_INFO {
    struct _UNICODE_STRING Name;
    PVOID Sid;
};

typedef struct _POLICY_REPLICA_SOURCE_INFO {
    struct _UNICODE_STRING ReplicaSource;
    struct _UNICODE_STRING ReplicaAccountName;
};

typedef struct _POLICY_TS_MACHINE {
    ULONG fPolicyDisableClip : 1;
    ULONG fPolicyDisableCam : 1;
    ULONG fPolicyDisableCcm : 1;
    ULONG fPolicyDisableLPT : 1;
    ULONG fPolicyDisableCpm : 1;
    ULONG fPolicyPromptForPassword : 1;
    ULONG fPolicyMaxInstanceCount : 1;
    ULONG fPolicyMinEncryptionLevel : 1;
    ULONG fPolicyFipsEnabled : 1;
    ULONG fPolicyDisableAutoReconnect : 1;
    ULONG fPolicyWFProfilePath : 1;
    ULONG fPolicyWFHomeDir : 1;
    ULONG fPolicyWFHomeDirDrive : 1;
    ULONG fPolicyDenyTSConnections : 1;
    ULONG fPolicyTempFoldersPerSession : 1;
    ULONG fPolicyDeleteTempFoldersOnExit : 1;
    ULONG fPolicyColorDepth : 1;
    ULONG fPolicySessionDirectoryActive : 1;
    ULONG fPolicySessionDirectoryLocation : 1;
    ULONG fPolicySessionDirectoryClusterName : 1;
    ULONG fPolicySessionDirectoryAdditionalParams : 1;
    ULONG fPolicySessionDirectoryExposeServerIP : 1;
    ULONG fPolicyPreventLicenseUpgrade : 1;
    ULONG fPolicySecureLicensing : 1;
    ULONG fPolicyWritableTSCCPermissionsTAB : 1;
    ULONG fPolicyDisableCdm : 1;
    ULONG fPolicyForceClientLptDef : 1;
    ULONG fPolicyShadow : 1;
    ULONG fPolicyResetBroken : 1;
    ULONG fPolicyReconnectSame : 1;
    ULONG fPolicyMaxSessionTime : 1;
    ULONG fPolicyMaxDisconnectionTime : 1;
    ULONG fPolicyMaxIdleTime : 1;
    ULONG fPolicyInitialProgram : 1;
    ULONG fPolicySingleSessionPerUser : 1;
    ULONG fPolicyDisableWallpaper : 1;
    ULONG fPolicyKeepAlive : 1;
    ULONG fPolicyEnableTimeZoneRedirection : 1;
    ULONG fPolicyDisableForcibleLogoff : 1;
    ULONG fPolicyLicensingMode : 1;
    ULONG fPolicyExplicitLSDiscovery : 1;
    ULONG fPolicyDisableTerminalServerTooltip : 1;
    ULONG fPolicyNoFontSmoothing : 1;
    ULONG fDisableClip : 1;
    ULONG fDisableCam : 1;
    ULONG fDisableCcm : 1;
    ULONG fDisableLPT : 1;
    ULONG fDisableCpm : 1;
    ULONG fPromptForPassword : 1;
    ULONG ColorDepth : 3;
    ULONG fDenyTSConnections : 1;
    ULONG fTempFoldersPerSession : 1;
    ULONG fDeleteTempFoldersOnExit : 1;
    ULONG fWritableTSCCPermissionsTAB : 1;
    ULONG fDisableCdm : 1;
    ULONG fForceClientLptDef : 1;
    ULONG fResetBroken : 1;
    ULONG fReconnectSame : 1;
    ULONG fSingleSessionPerUser : 1;
    ULONG fDisableWallpaper : 1;
    ULONG fKeepAliveEnable : 1;
    ULONG fPreventLicenseUpgrade : 1;
    ULONG fSecureLicensing : 1;
    ULONG fEnableTimeZoneRedirection : 1;
    ULONG fDisableAutoReconnect : 1;
    ULONG fDisableForcibleLogoff : 1;
    ULONG fPolicyEncryptRPCTraffic : 1;
    ULONG fEncryptRPCTraffic : 1;
    ULONG fErrorInvalidProfile : 1;
    ULONG fPolicyFallbackPrintDriver : 1;
    ULONG FallbackPrintDriverType : 3;
    ULONG fDisableTerminalServerTooltip : 1;
    UCHAR bSecurityLayer;
    ULONG fPolicySecurityLayer : 1;
    UCHAR bUserAuthentication;
    ULONG fPolicyUserAuthentication : 1;
    ULONG fPolicyTurnOffSingleAppMode : 1;
    ULONG fTurnOffSingleAppMode : 1;
    ULONG fDisablePNPPolicyIsEnfored : 1;
    ULONG fDisablePNPPolicyValue : 1;
    ULONG fEasyPrinterDrivePolicyIsEnforced : 1;
    ULONG EasyPrinterDrivePolicyValue : 3;
    ULONG MaxInstanceCount;
    ULONG LicensingMode;
    UCHAR MinEncryptionLevel;
    WCHAR WFProfilePath[257];
    WCHAR WFHomeDir[257];
    WCHAR WFHomeDirDrive[4];
    ULONG SessionDirectoryActive;
    WCHAR SessionDirectoryLocation[257];
    WCHAR SessionDirectoryClusterName[257];
    WCHAR SessionDirectoryAdditionalParams[257];
    ULONG SessionDirectoryExposeServerIP;
    ULONG KeepAliveInterval;
    enum _SHADOWCLASS Shadow;
    ULONG MaxConnectionTime;
    ULONG MaxDisconnectionTime;
    ULONG MaxIdleTime;
    WCHAR WorkDirectory[257];
    WCHAR InitialProgram[257];
    WCHAR LicenseServers[1025];
    ULONG fPolicyMaxMonitors : 1;
    ULONG fPolicyMaxResolution : 1;
    ULONG MaxMonitors;
    ULONG MaxXResolution;
    ULONG MaxYResolution;
    ULONG fNoFontSmoothing : 1;
};

typedef struct _POLICY_TS_MACHINE_OLD {
    ULONG fPolicyDisableClip : 1;
    ULONG fPolicyDisableCam : 1;
    ULONG fPolicyDisableCcm : 1;
    ULONG fPolicyDisableLPT : 1;
    ULONG fPolicyDisableCpm : 1;
    ULONG fPolicyPromptForPassword : 1;
    ULONG fPolicyMaxInstanceCount : 1;
    ULONG fPolicyMinEncryptionLevel : 1;
    ULONG fPolicyFipsEnabled : 1;
    ULONG fPolicyDisableAutoReconnect : 1;
    ULONG fPolicyWFProfilePath : 1;
    ULONG fPolicyWFHomeDir : 1;
    ULONG fPolicyWFHomeDirDrive : 1;
    ULONG fPolicyDenyTSConnections : 1;
    ULONG fPolicyTempFoldersPerSession : 1;
    ULONG fPolicyDeleteTempFoldersOnExit : 1;
    ULONG fPolicyColorDepth : 1;
    ULONG fPolicySessionDirectoryActive : 1;
    ULONG fPolicySessionDirectoryLocation : 1;
    ULONG fPolicySessionDirectoryClusterName : 1;
    ULONG fPolicySessionDirectoryAdditionalParams : 1;
    ULONG fPolicySessionDirectoryExposeServerIP : 1;
    ULONG fPolicyPreventLicenseUpgrade : 1;
    ULONG fPolicySecureLicensing : 1;
    ULONG fPolicyWritableTSCCPermissionsTAB : 1;
    ULONG fPolicyDisableCdm : 1;
    ULONG fPolicyForceClientLptDef : 1;
    ULONG fPolicyShadow : 1;
    ULONG fPolicyResetBroken : 1;
    ULONG fPolicyReconnectSame : 1;
    ULONG fPolicyMaxSessionTime : 1;
    ULONG fPolicyMaxDisconnectionTime : 1;
    ULONG fPolicyMaxIdleTime : 1;
    ULONG fPolicyInitialProgram : 1;
    ULONG fPolicySingleSessionPerUser : 1;
    ULONG fPolicyDisableWallpaper : 1;
    ULONG fPolicyKeepAlive : 1;
    ULONG fPolicyEnableTimeZoneRedirection : 1;
    ULONG fPolicyDisableForcibleLogoff : 1;
    ULONG fDisableClip : 1;
    ULONG fDisableCam : 1;
    ULONG fDisableCcm : 1;
    ULONG fDisableLPT : 1;
    ULONG fDisableCpm : 1;
    ULONG fPromptForPassword : 1;
    ULONG ColorDepth : 3;
    ULONG fDenyTSConnections : 1;
    ULONG fTempFoldersPerSession : 1;
    ULONG fDeleteTempFoldersOnExit : 1;
    ULONG fWritableTSCCPermissionsTAB : 1;
    ULONG fDisableCdm : 1;
    ULONG fForceClientLptDef : 1;
    ULONG fResetBroken : 1;
    ULONG fReconnectSame : 1;
    ULONG fSingleSessionPerUser : 1;
    ULONG fDisableWallpaper : 1;
    ULONG fKeepAliveEnable : 1;
    ULONG fPreventLicenseUpgrade : 1;
    ULONG fSecureLicensing : 1;
    ULONG fEnableTimeZoneRedirection : 1;
    ULONG fDisableAutoReconnect : 1;
    ULONG fDisableForcibleLogoff : 1;
    ULONG fPolicyEncryptRPCTraffic : 1;
    ULONG fEncryptRPCTraffic : 1;
    ULONG fErrorInvalidProfile : 1;
    ULONG MaxInstanceCount;
    UCHAR MinEncryptionLevel;
    WCHAR WFProfilePath[257];
    WCHAR WFHomeDir[257];
    WCHAR WFHomeDirDrive[4];
    ULONG SessionDirectoryActive;
    WCHAR SessionDirectoryLocation[257];
    WCHAR SessionDirectoryClusterName[257];
    WCHAR SessionDirectoryAdditionalParams[257];
    ULONG SessionDirectoryExposeServerIP;
    ULONG KeepAliveInterval;
    enum _SHADOWCLASS Shadow;
    ULONG MaxConnectionTime;
    ULONG MaxDisconnectionTime;
    ULONG MaxIdleTime;
    WCHAR WorkDirectory[257];
    WCHAR InitialProgram[257];
};

typedef struct _POLICY_TS_USER {
    ULONG fPolicyResetBroken : 1;
    ULONG fPolicyReconnectSame : 1;
    ULONG fPolicyInitialProgram : 1;
    ULONG fPolicyCallback : 1;
    ULONG fPolicyCallbackNumber : 1;
    ULONG fPolicyShadow : 1;
    ULONG fPolicyMaxSessionTime : 1;
    ULONG fPolicyMaxDisconnectionTime : 1;
    ULONG fPolicyMaxIdleTime : 1;
    ULONG fPolicyAutoClientDrives : 1;
    ULONG fPolicyAutoClientLpts : 1;
    ULONG fPolicyForceClientLptDef : 1;
    ULONG fPolicyEnableTimeZoneRedirection : 1;
    ULONG fPolicyDisableClip : 1;
    ULONG fPolicyDisableCam : 1;
    ULONG fPolicyDisableCcm : 1;
    ULONG fPolicyDisableLPT : 1;
    ULONG fPolicyDisableCdm : 1;
    ULONG fPolicyDisableCpm : 1;
    ULONG fPolicyDisableWallpaper : 1;
    ULONG fPolicyTurnOffSingleAppMode : 1;
    ULONG fEasyPrinterDrivePolicyIsEnforced : 1;
};

typedef struct _POOLED_USAGE_AND_LIMITS {
    ULONG64 PeakPagedPoolUsage;
    ULONG64 PagedPoolUsage;
    ULONG64 PagedPoolLimit;
    ULONG64 PeakNonPagedPoolUsage;
    ULONG64 NonPagedPoolUsage;
    ULONG64 NonPagedPoolLimit;
    ULONG64 PeakPagefileUsage;
    ULONG64 PagefileUsage;
    ULONG64 PagefileLimit;
};

typedef struct _PORT_DATA_ENTRY {
    PVOID Base;
    ULONG Size;
};

typedef struct _PORT_DATA_INFORMATION {
    ULONG CountDataEntries;
    struct _PORT_DATA_ENTRY DataEntries[1];
};

typedef struct _PORT_INFO_1A {
    PCHAR pName;
};

typedef struct _PORT_INFO_1W {
    PWCHAR pName;
};

typedef struct _PORT_INFO_2A {
    PCHAR pPortName;
    PCHAR pMonitorName;
    PCHAR pDescription;
    ULONG fPortType;
    ULONG Reserved;
};

typedef struct _PORT_INFO_2W {
    PWCHAR pPortName;
    PWCHAR pMonitorName;
    PWCHAR pDescription;
    ULONG fPortType;
    ULONG Reserved;
};

typedef struct _PORT_INFO_3A {
    ULONG dwStatus;
    PCHAR pszStatus;
    ULONG dwSeverity;
};

typedef struct _PORT_INFO_3W {
    ULONG dwStatus;
    PWCHAR pszStatus;
    ULONG dwSeverity;
};

typedef struct _PORT_MESSAGE {
     <unnamed-type-u1>;
    union {
         <unnamed-type-s1>;
        struct {
            SHORT DataLength;
            SHORT TotalLength;
        } s1;
        ULONG Length;
    } u1;
     <unnamed-type-u2>;
    union {
         <unnamed-type-s2>;
        struct {
            SHORT Type;
            SHORT DataInfoOffset;
        } s2;
        ULONG ZeroInit;
    } u2;
    struct _CLIENT_ID ClientId;
    DOUBLE DoNotUseThisField;
    ULONG MessageId;
    ULONG64 ClientViewSize;
    ULONG CallbackId;
};

typedef struct _PORT_VIEW {
    ULONG Length;
    PVOID SectionHandle;
    ULONG SectionOffset;
    ULONG64 ViewSize;
    PVOID ViewBase;
    PVOID ViewRemoteBase;
};

typedef struct _POWER_IDLE_RESILIENCY {
    ULONG CoalescingTimeout;
    ULONG IdleResiliencyPeriod;
};

typedef struct _POWER_MONITOR_INVOCATION {
    UCHAR Console;
    enum POWER_MONITOR_REQUEST_REASON RequestReason;
};

typedef struct _POWER_PLATFORM_INFORMATION {
    UCHAR AoAc;
};

typedef struct _POWER_SESSION_CONNECT {
    UCHAR Connected;
    UCHAR Console;
};

typedef struct _POWER_SESSION_RIT_STATE {
    UCHAR Active;
    ULONG LastInputTime;
};

typedef struct _POWER_SESSION_TIMEOUTS {
    ULONG InputTimeout;
    ULONG DisplayTimeout;
};

typedef struct _POWER_SESSION_WINLOGON {
    ULONG SessionId;
    UCHAR Console;
    UCHAR Locked;
};

typedef struct _POWER_THROTTLING_PROCESS_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _POWER_THROTTLING_THREAD_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _POWER_USER_PRESENCE {
    enum POWER_USER_PRESENCE_TYPE UserPresence;
};

typedef struct _PO_SPR_ACTIVE_SESSION_DATA {
    UCHAR Start;
    struct _GUID ActiveSessionGuid;
};

typedef struct _PO_WAKE_SOURCE_DEVICE {
    struct _PO_WAKE_SOURCE_HEADER Header;
    WCHAR InstancePath[1];
};

typedef struct _PO_WAKE_SOURCE_FIXED {
    struct _PO_WAKE_SOURCE_HEADER Header;
    enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
};

typedef struct _PO_WAKE_SOURCE_HEADER {
    enum PO_WAKE_SOURCE_TYPE Type;
    ULONG Size;
};

typedef struct _PO_WAKE_SOURCE_HISTORY {
    ULONG Count;
    ULONG Offsets[1];
};

typedef struct _PO_WAKE_SOURCE_INFO {
    ULONG Count;
    ULONG Offsets[1];
};

typedef struct _PO_WAKE_SOURCE_INTERNAL {
    struct _PO_WAKE_SOURCE_HEADER Header;
    enum PO_INTERNAL_WAKE_SOURCE_TYPE InternalWakeSourceType;
};

typedef struct _PO_WAKE_SOURCE_TIMER {
    struct _PO_WAKE_SOURCE_HEADER Header;
    struct _DIAGNOSTIC_BUFFER Reason;
};

typedef struct _PREFIX_TABLE {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _PREFIX_TABLE_ENTRY *NextPrefixTree;
};

typedef struct _PREFIX_TABLE_ENTRY {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _RTL_SPLAY_LINKS Links;
    struct _STRING *Prefix;
};

typedef struct _PREVENT_MEDIA_REMOVAL {
    UCHAR PreventMediaRemoval;
};

typedef struct _PRINTER_CONNECTION_INFO_1A {
    ULONG dwFlags;
    PCHAR pszDriverName;
};

typedef struct _PRINTER_CONNECTION_INFO_1W {
    ULONG dwFlags;
    PWCHAR pszDriverName;
};

typedef struct _PRINTER_DEFAULTSA {
    PCHAR pDatatype;
    struct _devicemodeA *pDevMode;
    ULONG DesiredAccess;
};

typedef struct _PRINTER_DEFAULTSW {
    PWCHAR pDatatype;
    struct _devicemodeW *pDevMode;
    ULONG DesiredAccess;
};

typedef struct _PRINTER_ENUM_VALUESA {
    PCHAR pValueName;
    ULONG cbValueName;
    ULONG dwType;
    PUCHAR pData;
    ULONG cbData;
};

typedef struct _PRINTER_ENUM_VALUESW {
    PWCHAR pValueName;
    ULONG cbValueName;
    ULONG dwType;
    PUCHAR pData;
    ULONG cbData;
};

typedef struct _PRINTER_INFO_1A {
    ULONG Flags;
    PCHAR pDescription;
    PCHAR pName;
    PCHAR pComment;
};

typedef struct _PRINTER_INFO_1W {
    ULONG Flags;
    PWCHAR pDescription;
    PWCHAR pName;
    PWCHAR pComment;
};

typedef struct _PRINTER_INFO_2A {
    PCHAR pServerName;
    PCHAR pPrinterName;
    PCHAR pShareName;
    PCHAR pPortName;
    PCHAR pDriverName;
    PCHAR pComment;
    PCHAR pLocation;
    struct _devicemodeA *pDevMode;
    PCHAR pSepFile;
    PCHAR pPrintProcessor;
    PCHAR pDatatype;
    PCHAR pParameters;
    PVOID pSecurityDescriptor;
    ULONG Attributes;
    ULONG Priority;
    ULONG DefaultPriority;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG Status;
    ULONG cJobs;
    ULONG AveragePPM;
};

typedef struct _PRINTER_INFO_2W {
    PWCHAR pServerName;
    PWCHAR pPrinterName;
    PWCHAR pShareName;
    PWCHAR pPortName;
    PWCHAR pDriverName;
    PWCHAR pComment;
    PWCHAR pLocation;
    struct _devicemodeW *pDevMode;
    PWCHAR pSepFile;
    PWCHAR pPrintProcessor;
    PWCHAR pDatatype;
    PWCHAR pParameters;
    PVOID pSecurityDescriptor;
    ULONG Attributes;
    ULONG Priority;
    ULONG DefaultPriority;
    ULONG StartTime;
    ULONG UntilTime;
    ULONG Status;
    ULONG cJobs;
    ULONG AveragePPM;
};

typedef struct _PRINTER_INFO_3 {
    PVOID pSecurityDescriptor;
};

typedef struct _PRINTER_INFO_4A {
    PCHAR pPrinterName;
    PCHAR pServerName;
    ULONG Attributes;
};

typedef struct _PRINTER_INFO_4W {
    PWCHAR pPrinterName;
    PWCHAR pServerName;
    ULONG Attributes;
};

typedef struct _PRINTER_INFO_5A {
    PCHAR pPrinterName;
    PCHAR pPortName;
    ULONG Attributes;
    ULONG DeviceNotSelectedTimeout;
    ULONG TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_5W {
    PWCHAR pPrinterName;
    PWCHAR pPortName;
    ULONG Attributes;
    ULONG DeviceNotSelectedTimeout;
    ULONG TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_6 {
    ULONG dwStatus;
};

typedef struct _PRINTER_INFO_7A {
    PCHAR pszObjectGUID;
    ULONG dwAction;
};

typedef struct _PRINTER_INFO_7W {
    PWCHAR pszObjectGUID;
    ULONG dwAction;
};

typedef struct _PRINTER_INFO_8A {
    struct _devicemodeA *pDevMode;
};

typedef struct _PRINTER_INFO_8W {
    struct _devicemodeW *pDevMode;
};

typedef struct _PRINTER_INFO_9A {
    struct _devicemodeA *pDevMode;
};

typedef struct _PRINTER_INFO_9W {
    struct _devicemodeW *pDevMode;
};

typedef struct _PRINTER_NOTIFY_INFO {
    ULONG Version;
    ULONG Flags;
    ULONG Count;
    struct _PRINTER_NOTIFY_INFO_DATA aData[1];
};

typedef struct _PRINTER_NOTIFY_INFO_DATA {
    USHORT Type;
    USHORT Field;
    ULONG Reserved;
    ULONG Id;
     <unnamed-type-NotifyData>;
    union {
        ULONG adwData[2];
         <unnamed-type-Data>;
        struct {
            ULONG cbBuf;
            PVOID pBuf;
        } Data;
    } NotifyData;
};

typedef struct _PRINTER_NOTIFY_OPTIONS {
    ULONG Version;
    ULONG Flags;
    ULONG Count;
    struct _PRINTER_NOTIFY_OPTIONS_TYPE *pTypes;
};

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE {
    USHORT Type;
    USHORT Reserved0;
    ULONG Reserved1;
    ULONG Reserved2;
    ULONG Count;
    PWCHAR pFields;
};

typedef struct _PRINTER_OPTIONSA {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct _PRINTER_OPTIONSW {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct _PRINTPROCESSOR_CAPS_1 {
    ULONG dwLevel;
    ULONG dwNupOptions;
    ULONG dwPageOrderFlags;
    ULONG dwNumberOfCopies;
};

typedef struct _PRINTPROCESSOR_CAPS_2 {
    ULONG dwLevel;
    ULONG dwNupOptions;
    ULONG dwPageOrderFlags;
    ULONG dwNumberOfCopies;
    ULONG dwDuplexHandlingCaps;
    ULONG dwNupDirectionCaps;
    ULONG dwNupBorderCaps;
    ULONG dwBookletHandlingCaps;
    ULONG dwScalingCaps;
};

typedef struct _PRINTPROCESSOR_INFO_1A {
    PCHAR pName;
};

typedef struct _PRINTPROCESSOR_INFO_1W {
    PWCHAR pName;
};

typedef struct _PRIVILEGE_SET {
    ULONG PrivilegeCount;
    ULONG Control;
    struct _LUID_AND_ATTRIBUTES Privilege[1];
};

typedef struct _PRIVKEYVER3 {
    ULONG magic;
    ULONG bitlenP;
    ULONG bitlenQ;
    ULONG bitlenJ;
    ULONG bitlenX;
    struct _DSSSEED DSSSeed;
};

typedef struct _PROCESSOR_GROUP_INFO {
    UCHAR MaximumProcessorCount;
    UCHAR ActiveProcessorCount;
    UCHAR Reserved[38];
    ULONG64 ActiveProcessorMask;
};

typedef struct _PROCESSOR_IDLE_STATE {
    UCHAR StateType;
    ULONG StateFlags;
    ULONG HardwareLatency;
    ULONG Power;
    ULONG64 Context;
    PLONG Handler;
};

typedef struct _PROCESSOR_IDLE_STATES {
    ULONG Size;
    ULONG Revision;
    ULONG Count;
    ULONG Type;
    ULONG64 TargetProcessors;
    struct _PROCESSOR_IDLE_STATE State[1];
};

typedef struct _PROCESSOR_NUMBER {
    USHORT Group;
    UCHAR Number;
    UCHAR Reserved;
};

typedef struct _PROCESSOR_POWER_INFORMATION {
    ULONG Number;
    ULONG MaxMhz;
    ULONG CurrentMhz;
    ULONG MhzLimit;
    ULONG MaxIdleState;
    ULONG CurrentIdleState;
};

typedef struct _PROCESSOR_POWER_POLICY {
    ULONG Revision;
    UCHAR DynamicThrottle;
    UCHAR Spare[3];
    ULONG DisableCStates : 1;
    ULONG Reserved : 31;
    ULONG PolicyCount;
    struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
};

typedef struct _PROCESSOR_POWER_POLICY_INFO {
    ULONG TimeCheck;
    ULONG DemoteLimit;
    ULONG PromoteLimit;
    UCHAR DemotePercent;
    UCHAR PromotePercent;
    UCHAR Spare[2];
    ULONG AllowDemotion : 1;
    ULONG AllowPromotion : 1;
    ULONG Reserved : 30;
};

typedef struct _PROCESSOR_PROFILE_CONTROL_AREA {
    struct _PEBS_DS_SAVE_AREA PebsDsSaveArea;
};

typedef struct _PROCESSOR_RELATIONSHIP {
    UCHAR Flags;
    UCHAR EfficiencyClass;
    UCHAR Reserved[20];
    USHORT GroupCount;
    struct _GROUP_AFFINITY GroupMask[1];
};

typedef struct _PROCESS_ACCESS_TOKEN {
    PVOID Token;
    PVOID Thread;
};

typedef struct _PROCESS_BASIC_INFORMATION {
    LONG ExitStatus;
    struct _PEB *PebBaseAddress;
    ULONG64 AffinityMask;
    LONG BasePriority;
    ULONG64 UniqueProcessId;
    ULONG64 InheritedFromUniqueProcessId;
};

typedef struct _PROCESS_BASIC_INFORMATION64 {
    LONG ExitStatus;
    ULONG Pad1;
    ULONG64 PebBaseAddress;
    ULONG64 AffinityMask;
    LONG BasePriority;
    ULONG Pad2;
    ULONG64 UniqueProcessId;
    ULONG64 InheritedFromUniqueProcessId;
};

typedef struct _PROCESS_CHILD_PROCESS_INFORMATION {
    UCHAR ProhibitChildProcesses;
    UCHAR AlwaysAllowSecureChildProcess;
    UCHAR AuditProhibitChildProcesses;
};

typedef struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION {
    PVOID ProcessHandle;
};

typedef struct _PROCESS_COMMIT_RELEASE_INFORMATION {
    ULONG Version;
    ULONG Eligible : 1;
    ULONG ReleaseRepurposedMemResetCommit : 1;
    ULONG ForceReleaseMemResetCommit : 1;
    ULONG Spare : 29;
    ULONG64 CommitDebt;
    ULONG64 CommittedMemResetSize;
    ULONG64 RepurposedMemResetSize;
};

typedef struct _PROCESS_CYCLE_TIME_INFORMATION {
    ULONG64 AccumulatedCycles;
    ULONG64 CurrentCycleCount;
};

typedef struct _PROCESS_DEVICEMAP_INFORMATION {
    struct {
        PVOID DirectoryHandle;
    } Set;
    struct {
        ULONG DriveMap;
        UCHAR DriveType[32];
    } Query;
};

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX {
    struct {
        PVOID DirectoryHandle;
    } Set;
    struct {
        ULONG DriveMap;
        UCHAR DriveType[32];
    } Query;
    ULONG Flags;
};

typedef struct _PROCESS_DISK_COUNTERS {
    ULONG64 BytesRead;
    ULONG64 BytesWritten;
    ULONG64 ReadOperationCount;
    ULONG64 WriteOperationCount;
    ULONG64 FlushOperationCount;
};

typedef struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION {
    struct _DYNAMIC_FUNCTION_TABLE *DynamicFunctionTable;
    UCHAR Remove;
};

typedef struct _PROCESS_ENERGY_TRACKING_STATE {
    ULONG StateUpdateMask;
    ULONG StateDesiredValue;
    ULONG StateSequence;
    ULONG UpdateTag : 1;
    WCHAR Tag[64];
};

typedef struct _PROCESS_ENERGY_VALUES {
    ULONG64 Cycles[4][2];
    ULONG64 DiskEnergy;
    ULONG64 NetworkTailEnergy;
    ULONG64 MBBTailEnergy;
    ULONG64 NetworkTxRxBytes;
    ULONG64 MBBTxRxBytes;
    union _ENERGY_STATE_DURATION Durations[3];
    union _ENERGY_STATE_DURATION ForegroundDuration;
    union _ENERGY_STATE_DURATION DesktopVisibleDuration;
    union _ENERGY_STATE_DURATION PSMForegroundDuration;
    ULONG CompositionRendered;
    ULONG CompositionDirtyGenerated;
    ULONG CompositionDirtyPropagated;
    ULONG Reserved1;
    ULONG64 AttributedCycles[4][2];
    ULONG64 WorkOnBehalfCycles[4][2];
};

typedef struct _PROCESS_ENERGY_VALUES_EXTENSION {
    union _TIMELINE_BITMAP Timelines[14];
    union _TIMELINE_BITMAP CpuTimeline;
    union _TIMELINE_BITMAP DiskTimeline;
    union _TIMELINE_BITMAP NetworkTimeline;
    union _TIMELINE_BITMAP MBBTimeline;
    union _TIMELINE_BITMAP ForegroundTimeline;
    union _TIMELINE_BITMAP DesktopVisibleTimeline;
    union _TIMELINE_BITMAP CompositionRenderedTimeline;
    union _TIMELINE_BITMAP CompositionDirtyGeneratedTimeline;
    union _TIMELINE_BITMAP CompositionDirtyPropagatedTimeline;
    union _TIMELINE_BITMAP InputTimeline;
    union _TIMELINE_BITMAP AudioInTimeline;
    union _TIMELINE_BITMAP AudioOutTimeline;
    union _TIMELINE_BITMAP DisplayRequiredTimeline;
    union _TIMELINE_BITMAP KeyboardInputTimeline;
    union _ENERGY_STATE_DURATION Durations[5];
    union _ENERGY_STATE_DURATION InputDuration;
    union _ENERGY_STATE_DURATION AudioInDuration;
    union _ENERGY_STATE_DURATION AudioOutDuration;
    union _ENERGY_STATE_DURATION DisplayRequiredDuration;
    union _ENERGY_STATE_DURATION PSMBackgroundDuration;
    ULONG KeyboardInput;
    ULONG MouseInput;
};

typedef struct _PROCESS_EXCEPTION_PORT {
    PVOID ExceptionPortHandle;
    ULONG StateFlags;
};

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION {
    ULONG64 Size;
    struct _PROCESS_BASIC_INFORMATION BasicInfo;
    ULONG Flags;
    ULONG IsProtectedProcess : 1;
    ULONG IsWow64Process : 1;
    ULONG IsProcessDeleting : 1;
    ULONG IsCrossSessionCreate : 1;
    ULONG IsFrozen : 1;
    ULONG IsBackground : 1;
    ULONG IsStronglyNamed : 1;
    ULONG IsSecureProcess : 1;
    ULONG IsSubsystemProcess : 1;
    ULONG SpareBits : 23;
};

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64 {
    ULONG64 Size;
    struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
    ULONG Flags;
    ULONG IsProtectedProcess : 1;
    ULONG IsWow64Process : 1;
    ULONG IsProcessDeleting : 1;
    ULONG IsCrossSessionCreate : 1;
    ULONG IsFrozen : 1;
    ULONG IsBackground : 1;
    ULONG IsStronglyNamed : 1;
    ULONG IsSecureProcess : 1;
    ULONG IsPicoProcess : 1;
    ULONG SpareBits : 23;
};

typedef struct _PROCESS_EXTENDED_ENERGY_VALUES {
    struct _PROCESS_ENERGY_VALUES Base;
    struct _PROCESS_ENERGY_VALUES_EXTENSION Extension;
};

typedef struct _PROCESS_FAULT_INFORMATION {
    ULONG FaultFlags;
    ULONG AdditionalInfo;
};

typedef struct _PROCESS_FOREGROUND_BACKGROUND {
    UCHAR Foreground;
};

typedef struct _PROCESS_HANDLE_INFORMATION {
    ULONG HandleCount;
    ULONG HandleCountHighWatermark;
};

typedef struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION {
    ULONG64 NumberOfHandles;
    ULONG64 Reserved;
    struct _PROCESS_HANDLE_TABLE_ENTRY_INFO Handles[1];
};

typedef struct _PROCESS_HANDLE_TABLE_ENTRY_INFO {
    PVOID HandleValue;
    ULONG64 HandleCount;
    ULONG64 PointerCount;
    ULONG GrantedAccess;
    ULONG ObjectTypeIndex;
    ULONG HandleAttributes;
    ULONG Reserved;
};

typedef struct _PROCESS_HANDLE_TRACING_ENABLE {
    ULONG Flags;
};

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX {
    ULONG Flags;
    ULONG TotalSlots;
};

typedef struct _PROCESS_HANDLE_TRACING_ENTRY {
    PVOID Handle;
    struct _CLIENT_ID ClientId;
    ULONG Type;
    PVOID Stacks[16];
};

typedef struct _PROCESS_HANDLE_TRACING_QUERY {
    PVOID Handle;
    ULONG TotalTraces;
    struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
};

typedef struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    ULONG cbData;
    UCHAR cbOverhead;
    UCHAR iRegionIndex;
    USHORT wFlags;
    struct {
        PVOID hMem;
        ULONG dwReserved[3];
    } Block;
    struct {
        ULONG dwCommittedSize;
        ULONG dwUnCommittedSize;
        PVOID lpFirstBlock;
        PVOID lpLastBlock;
    } Region;
};

typedef struct _PROCESS_HEAP_INFORMATION {
    ULONG64 ReserveSize;
    ULONG64 CommitSize;
    ULONG NumberOfHeaps;
    ULONG64 FirstHeapInformationOffset;
};

typedef struct _PROCESS_INFORMATION {
    PVOID hProcess;
    PVOID hThread;
    ULONG dwProcessId;
    ULONG dwThreadId;
};

typedef struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION {
    ULONG Version;
    ULONG Reserved;
    ULONG64 Callback;
};

typedef struct _PROCESS_JOB_MEMORY_INFO {
    ULONG64 SharedCommitUsage;
    ULONG64 PrivateCommitUsage;
    ULONG64 PeakPrivateCommitUsage;
    ULONG64 PrivateCommitLimit;
    ULONG64 TotalCommitLimit;
};

typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION {
    ULONG WakeCount;
    ULONG NoWakeCount;
};

typedef struct _PROCESS_LEAP_SECOND_INFO {
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _PROCESS_LEAP_SECOND_INFORMATION {
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _PROCESS_MEMORY_EXHAUSTION_INFO {
    USHORT Version;
    USHORT Reserved;
    enum _PROCESS_MEMORY_EXHAUSTION_TYPE Type;
    ULONG64 Value;
};

typedef struct _PROCESS_MITIGATION_ASLR_POLICY {
    ULONG Flags;
    ULONG EnableBottomUpRandomization : 1;
    ULONG EnableForceRelocateImages : 1;
    ULONG EnableHighEntropy : 1;
    ULONG DisallowStrippedImages : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY {
    ULONG Flags;
    ULONG MicrosoftSignedOnly : 1;
    ULONG StoreSignedOnly : 1;
    ULONG MitigationOptIn : 1;
    ULONG AuditMicrosoftSignedOnly : 1;
    ULONG AuditStoreSignedOnly : 1;
    ULONG ReservedFlags : 27;
};

typedef struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY {
    ULONG Flags;
    ULONG NoChildProcessCreation : 1;
    ULONG AuditNoChildProcessCreation : 1;
    ULONG AllowSecureProcessCreation : 1;
    ULONG ReservedFlags : 29;
};

typedef struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
    ULONG Flags;
    ULONG EnableControlFlowGuard : 1;
    ULONG EnableExportSuppression : 1;
    ULONG StrictMode : 1;
    ULONG ReservedFlags : 29;
};

typedef struct _PROCESS_MITIGATION_DEP_POLICY {
    ULONG Flags;
    ULONG Enable : 1;
    ULONG DisableAtlThunkEmulation : 1;
    ULONG ReservedFlags : 30;
    UCHAR Permanent;
};

typedef struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY {
    ULONG Flags;
    ULONG ProhibitDynamicCode : 1;
    ULONG AllowThreadOptOut : 1;
    ULONG AllowRemoteDowngrade : 1;
    ULONG AuditProhibitDynamicCode : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisableExtensionPoints : 1;
    ULONG ReservedFlags : 31;
};

typedef struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisableNonSystemFonts : 1;
    ULONG AuditNonSystemFontLoading : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY {
    ULONG Flags;
    ULONG NoRemoteImages : 1;
    ULONG NoLowMandatoryLabelImages : 1;
    ULONG PreferSystem32Images : 1;
    ULONG AuditNoRemoteImages : 1;
    ULONG AuditNoLowMandatoryLabelImages : 1;
    ULONG ReservedFlags : 27;
};

typedef struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
    ULONG Flags;
    ULONG EnableExportAddressFilter : 1;
    ULONG AuditExportAddressFilter : 1;
    ULONG EnableExportAddressFilterPlus : 1;
    ULONG AuditExportAddressFilterPlus : 1;
    ULONG EnableImportAddressFilter : 1;
    ULONG AuditImportAddressFilter : 1;
    ULONG EnableRopStackPivot : 1;
    ULONG AuditRopStackPivot : 1;
    ULONG EnableRopCallerCheck : 1;
    ULONG AuditRopCallerCheck : 1;
    ULONG EnableRopSimExec : 1;
    ULONG AuditRopSimExec : 1;
    ULONG ReservedFlags : 20;
};

typedef struct _PROCESS_MITIGATION_POLICY_INFORMATION {
    enum _PROCESS_MITIGATION_POLICY Policy;
    struct _PROCESS_MITIGATION_ASLR_POLICY ASLRPolicy;
    struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY StrictHandleCheckPolicy;
    struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY SystemCallDisablePolicy;
    struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ExtensionPointDisablePolicy;
    struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY DynamicCodePolicy;
    struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY ControlFlowGuardPolicy;
    struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY SignaturePolicy;
    struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY FontDisablePolicy;
    struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY ImageLoadPolicy;
    struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY SystemCallFilterPolicy;
    struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY PayloadRestrictionPolicy;
    struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY ChildProcessPolicy;
    struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY SideChannelIsolationPolicy;
};

typedef struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY {
    ULONG Flags;
    ULONG SmtBranchTargetIsolation : 1;
    ULONG IsolateSecurityDomain : 1;
    ULONG DisablePageCombine : 1;
    ULONG SpeculativeStoreBypassDisable : 1;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
    ULONG Flags;
    ULONG RaiseExceptionOnInvalidHandleReference : 1;
    ULONG HandleExceptionsPermanentlyEnabled : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
    ULONG Flags;
    ULONG DisallowWin32kSystemCalls : 1;
    ULONG AuditDisallowWin32kSystemCalls : 1;
    ULONG ReservedFlags : 30;
};

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY {
    ULONG Flags;
    ULONG FilterId : 4;
    ULONG ReservedFlags : 28;
};

typedef struct _PROCESS_POWER_THROTTLING_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _PROCESS_PRIORITY_CLASS {
    UCHAR Foreground;
    UCHAR PriorityClass;
};

typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION {
    struct _UNICODE_STRING TargetDevicePath;
};

typedef struct _PROCESS_SECURITY_DOMAIN_INFORMATION {
    ULONG64 SecurityDomain;
};

typedef struct _PROCESS_SESSION_INFORMATION {
    ULONG SessionId;
};

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION {
    ULONG64 ReserveSize;
    ULONG64 ZeroBits;
    PVOID StackBase;
};

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX {
    ULONG PreferredNode;
    ULONG Reserved0;
    ULONG Reserved1;
    ULONG Reserved2;
    struct _PROCESS_STACK_ALLOCATION_INFORMATION AllocInfo;
};

typedef struct _PROCESS_TELEMETRY_ID_INFORMATION {
    ULONG HeaderSize;
    ULONG ProcessId;
    ULONG64 ProcessStartKey;
    ULONG64 CreateTime;
    ULONG64 CreateInterruptTime;
    ULONG64 CreateUnbiasedInterruptTime;
    ULONG64 ProcessSequenceNumber;
    ULONG64 SessionCreateTime;
    ULONG SessionId;
    ULONG BootId;
    ULONG ImageChecksum;
    ULONG ImageTimeDateStamp;
    ULONG UserSidOffset;
    ULONG ImagePathOffset;
    ULONG PackageNameOffset;
    ULONG RelativeAppNameOffset;
    ULONG CommandLineOffset;
};

typedef struct _PROCESS_TLS_INFORMATION {
    ULONG Flags;
    ULONG OperationType;
    ULONG ThreadDataCount;
    ULONG TlsIndex;
    ULONG PreviousCount;
    struct _THREAD_TLS_INFORMATION ThreadData[1];
};

typedef struct _PROCESS_UPTIME_INFORMATION {
    ULONG64 QueryInterruptTime;
    ULONG64 QueryUnbiasedTime;
    ULONG64 EndInterruptTime;
    ULONG64 TimeSinceCreation;
    ULONG64 Uptime;
    ULONG64 SuspendedTime;
    ULONG HangCount : 4;
    ULONG GhostCount : 4;
    ULONG Crashed : 1;
    ULONG Terminated : 1;
};

typedef struct _PROCESS_WAKE_INFORMATION {
    ULONG64 NotificationChannel;
    ULONG WakeCounters[7];
    struct _JOBOBJECT_WAKE_FILTER WakeFilter;
};

typedef struct _PROCESS_WINDOW_INFORMATION {
    ULONG WindowFlags;
    USHORT WindowTitleLength;
    WCHAR WindowTitle[1];
};

typedef struct _PROCESS_WORKING_SET_CONTROL {
    ULONG Version;
    enum _PROCESS_WORKING_SET_OPERATION Operation;
    ULONG Flags;
};

typedef struct _PROCESS_WS_WATCH_INFORMATION {
    PVOID FaultingPc;
    PVOID FaultingVa;
};

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX {
    struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
    ULONG64 FaultingThreadId;
    ULONG64 Flags;
};

typedef struct _PROC_THREAD_ATTRIBUTE_LIST {
};

typedef struct _PROGRAMCALL {
    struct _PROGRAMCALL *pFirst;
    struct _PROGRAMCALL *pNext;
    UCHAR fAlias;
    PWCHAR pRegistryMultiString;
    USHORT CommandLen;
    PWCHAR Command;
    PWCHAR Program;
    PWCHAR Args;
};

typedef struct _PROPSHEETHEADERA_V1 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HWND__ *hwndParent;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszCaption;
    ULONG nPages;
    ULONG nStartPage;
    PCHAR pStartPage;
    struct _PROPSHEETPAGEA *ppsp;
    struct _PSP **phpage;
    PLONG pfnCallback;
};

typedef struct _PROPSHEETHEADERA_V2 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HWND__ *hwndParent;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszCaption;
    ULONG nPages;
    ULONG nStartPage;
    PCHAR pStartPage;
    struct _PROPSHEETPAGEA *ppsp;
    struct _PSP **phpage;
    PLONG pfnCallback;
    struct HBITMAP__ *hbmWatermark;
    PCHAR pszbmWatermark;
    struct HPALETTE__ *hplWatermark;
    struct HBITMAP__ *hbmHeader;
    PCHAR pszbmHeader;
};

typedef struct _PROPSHEETHEADERW_V1 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HWND__ *hwndParent;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszCaption;
    ULONG nPages;
    ULONG nStartPage;
    PWCHAR pStartPage;
    struct _PROPSHEETPAGEW *ppsp;
    struct _PSP **phpage;
    PLONG pfnCallback;
};

typedef struct _PROPSHEETHEADERW_V2 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HWND__ *hwndParent;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszCaption;
    ULONG nPages;
    ULONG nStartPage;
    PWCHAR pStartPage;
    struct _PROPSHEETPAGEW *ppsp;
    struct _PSP **phpage;
    PLONG pfnCallback;
    struct HBITMAP__ *hbmWatermark;
    PWCHAR pszbmWatermark;
    struct HPALETTE__ *hplWatermark;
    struct HBITMAP__ *hbmHeader;
    PWCHAR pszbmHeader;
};

typedef struct _PROPSHEETPAGEA {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PCHAR pszHeaderTitle;
    PCHAR pszHeaderSubTitle;
    PVOID hActCtx;
    struct HBITMAP__ *hbmHeader;
    PCHAR pszbmHeader;
};

typedef struct _PROPSHEETPAGEA_V1 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
};

typedef struct _PROPSHEETPAGEA_V2 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PCHAR pszHeaderTitle;
    PCHAR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEA_V3 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PCHAR pszIcon;
    PCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PCHAR pszHeaderTitle;
    PCHAR pszHeaderSubTitle;
    PVOID hActCtx;
};

typedef struct _PROPSHEETPAGEW {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PWCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PWCHAR pszHeaderTitle;
    PWCHAR pszHeaderSubTitle;
    PVOID hActCtx;
    struct HBITMAP__ *hbmHeader;
    PWCHAR pszbmHeader;
};

typedef struct _PROPSHEETPAGEW_V1 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PWCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
};

typedef struct _PROPSHEETPAGEW_V2 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PWCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PWCHAR pszHeaderTitle;
    PWCHAR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEW_V3 {
    ULONG dwSize;
    ULONG dwFlags;
    struct HINSTANCE__ *hInstance;
    PWCHAR pszTemplate;
    struct DLGTEMPLATE *pResource;
    struct HICON__ *hIcon;
    PWCHAR pszIcon;
    PWCHAR pszTitle;
    PLONG64 pfnDlgProc;
    LONG64 lParam;
    PULONG pfnCallback;
    PULONG pcRefParent;
    PWCHAR pszHeaderTitle;
    PWCHAR pszHeaderSubTitle;
    PVOID hActCtx;
};

typedef struct _PROTOCOLCOUNTERS {
    ULONG WdBytes;
    ULONG WdFrames;
    ULONG WaitForOutBuf;
    ULONG Frames;
    ULONG Bytes;
    ULONG CompressedBytes;
    ULONG CompressFlushes;
    ULONG Errors;
    ULONG Timeouts;
    ULONG AsyncFramingError;
    ULONG AsyncOverrunError;
    ULONG AsyncOverflowError;
    ULONG AsyncParityError;
    ULONG TdErrors;
    USHORT ProtocolType;
    USHORT Length;
     <unnamed-type-Specific>;
    union {
        struct _ICA_COUNTERS IcaCounters;
        struct _TSHARE_COUNTERS TShareCounters;
        ULONG Reserved[100];
    } Specific;
};

typedef struct _PROTOCOLSTATUS {
    struct _PROTOCOLCOUNTERS Output;
    struct _PROTOCOLCOUNTERS Input;
    struct CACHE_STATISTICS Cache;
    ULONG AsyncSignal;
    ULONG AsyncSignalMask;
};

typedef struct _PROTOCOLSTATUSEX {
    struct _PROTOCOLSTATUS _PROTOCOLSTATUS;
    union _LARGE_INTEGER Counters[100];
};

typedef struct _PROVIDOR_INFO_1A {
    PCHAR pName;
    PCHAR pEnvironment;
    PCHAR pDLLName;
};

typedef struct _PROVIDOR_INFO_1W {
    PWCHAR pName;
    PWCHAR pEnvironment;
    PWCHAR pDLLName;
};

typedef struct _PROVIDOR_INFO_2A {
    PCHAR pOrder;
};

typedef struct _PROVIDOR_INFO_2W {
    PWCHAR pOrder;
};

typedef struct _PROV_ENUMALGS {
    ULONG aiAlgid;
    ULONG dwBitLen;
    ULONG dwNameLen;
    CHAR szName[20];
};

typedef struct _PROV_ENUMALGS_EX {
    ULONG aiAlgid;
    ULONG dwDefaultLen;
    ULONG dwMinLen;
    ULONG dwMaxLen;
    ULONG dwProtocols;
    ULONG dwNameLen;
    CHAR szName[20];
    ULONG dwLongNameLen;
    CHAR szLongName[40];
};

typedef struct _PSFEATURE_CUSTPAPER {
    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;
};

typedef struct _PSFEATURE_OUTPUT {
    LONG bPageIndependent;
    LONG bSetPageDevice;
};

typedef struct _PSHNOTIFY {
    struct tagNMHDR hdr;
    LONG64 lParam;
};

typedef struct _PSINJECTDATA {
    ULONG DataBytes;
    USHORT InjectionPoint;
    USHORT PageNumber;
};

typedef struct _PSP {
};

typedef struct _PS_ATTRIBUTE {
    ULONG64 Attribute;
    ULONG64 Size;
    ULONG64 Value;
    PVOID ValuePtr;
    PULONG64 ReturnLength;
};

typedef struct _PS_ATTRIBUTE_LIST {
    ULONG64 TotalLength;
    struct _PS_ATTRIBUTE Attributes[1];
};

typedef struct _PS_BNO_ISOLATION_PARAMETERS {
    struct _UNICODE_STRING IsolationPrefix;
    ULONG HandleCount;
    PVOID *Handles;
    UCHAR IsolationEnabled;
};

typedef struct _PS_CPU_QUOTA_QUERY_ENTRY {
    ULONG SessionId;
    ULONG Weight;
};

typedef struct _PS_CPU_QUOTA_QUERY_INFORMATION {
    ULONG SessionCount;
    struct _PS_CPU_QUOTA_QUERY_ENTRY SessionInformation[1];
};

typedef struct _PS_CPU_QUOTA_SET_INFORMATION {
    LONG64 SessionHandle;
    ULONG Weight;
};

typedef struct _PS_CREATE_INFO {
    ULONG64 Size;
    enum PS_CREATE_STATE State;
    struct {
        ULONG InitFlags;
        UCHAR WriteOutputOnExit : 1;
        UCHAR DetectManifest : 1;
        UCHAR IFEOSkipDebugger : 1;
        UCHAR IFEODoNotPropagateKeyState : 1;
        UCHAR SpareBits1 : 4;
        UCHAR SpareBits2 : 8;
        USHORT ProhibitedImageCharacteristics : 16;
        ULONG AdditionalFileAccess;
    } InitState;
    struct {
        PVOID FileHandle;
    } FailSection;
    struct {
        USHORT DllCharacteristics;
    } ExeFormat;
    struct {
        PVOID IFEOKey;
    } ExeName;
    struct {
        ULONG OutputFlags;
        UCHAR ProtectedProcess : 1;
        UCHAR AddressSpaceOverride : 1;
        UCHAR DevOverrideEnabled : 1;
        UCHAR ManifestDetected : 1;
        UCHAR ProtectedProcessLight : 1;
        UCHAR SpareBits1 : 3;
        UCHAR SpareBits2 : 8;
        USHORT SpareBits3 : 16;
        PVOID FileHandle;
        PVOID SectionHandle;
        ULONG64 UserProcessParametersNative;
        ULONG UserProcessParametersWow64;
        ULONG CurrentParameterFlags;
        ULONG64 PebAddressNative;
        ULONG PebAddressWow64;
        ULONG64 ManifestAddress;
        ULONG ManifestSize;
    } SuccessState;
};

typedef struct _PS_MEMORY_RESERVE {
    PVOID ReserveAddress;
    ULONG64 ReserveSize;
};

typedef struct _PS_MITIGATION_AUDIT_OPTIONS_MAP {
    ULONG64 Map[2];
};

typedef struct _PS_MITIGATION_OPTIONS_MAP {
    ULONG64 Map[2];
};

typedef struct _PS_PKG_CLAIM {
    ULONG64 Flags : 16;
    ULONG64 Origin : 8;
};

typedef struct _PS_PROTECTION {
    UCHAR Level;
    UCHAR Type : 3;
    UCHAR Audit : 1;
    UCHAR Signer : 4;
};

typedef struct _PS_STD_HANDLE_INFO {
    ULONG Flags;
    ULONG StdHandleState : 2;
    ULONG PseudoHandleMask : 3;
    ULONG StdHandleSubsystemType;
};

typedef struct _PS_SYSTEM_DLL_INIT_BLOCK {
    ULONG Size;
    ULONG64 SystemDllWowRelocation;
    ULONG64 SystemDllNativeRelocation;
    ULONG64 Wow64SharedInformation[16];
    ULONG RngData;
    ULONG Flags;
    ULONG CfgOverride : 1;
    ULONG Reserved : 31;
    struct _PS_MITIGATION_OPTIONS_MAP MitigationOptionsMap;
    ULONG64 CfgBitMap;
    ULONG64 CfgBitMapSize;
    ULONG64 Wow64CfgBitMap;
    ULONG64 Wow64CfgBitMapSize;
    struct _PS_MITIGATION_AUDIT_OPTIONS_MAP MitigationAuditOptionsMap;
};

typedef struct _PUBKEY {
    ULONG magic;
    ULONG bitlen;
};

typedef struct _PUBKEYVER3 {
    ULONG magic;
    ULONG bitlenP;
    ULONG bitlenQ;
    ULONG bitlenJ;
    struct _DSSSEED DSSSeed;
};

typedef struct _PUBLICKEYSTRUC {
    UCHAR bType;
    UCHAR bVersion;
    USHORT reserved;
    ULONG aiKeyAlg;
};

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION {
    ULONG Attributes;
    ULONG GrantedAccess;
    ULONG HandleCount;
    ULONG PointerCount;
    ULONG Reserved[10];
};

typedef struct _PnpNotification {
    enum _KnownRIMDeviceKind deviceKind;
    ULONG deviceId;
    ULONG dwNotificationCode;
};

typedef struct _PnpNotificationBulk {
    struct _InputNotificationBuffer buffer;
};

typedef struct _QCMINFO {
    struct HMENU__ *hmenu;
    ULONG indexMenu;
    ULONG idCmdFirst;
    ULONG idCmdLast;
    struct _QCMINFO_IDMAP *pIdMap;
};

typedef struct _QCMINFO_IDMAP {
    ULONG nMaxIds;
    struct _QCMINFO_IDMAP_PLACEMENT pIdList[1];
};

typedef struct _QCMINFO_IDMAP_PLACEMENT {
    ULONG id;
    ULONG fFlags;
};

typedef struct _QIMSG {
    struct _GUID *qiid;
    PVOID *ppvObject;
};

typedef struct _QUAD {
    LONG64 UseThisFieldToCopy;
    DOUBLE DoNotUseThisField;
};

typedef struct _QUERY_BAD_RANGES_INPUT {
    ULONG Flags;
    ULONG NumRanges;
    struct _QUERY_BAD_RANGES_INPUT_RANGE Ranges[1];
};

typedef struct _QUERY_BAD_RANGES_INPUT_RANGE {
    ULONG64 StartOffset;
    ULONG64 LengthInBytes;
};

typedef struct _QUERY_BAD_RANGES_OUTPUT {
    ULONG Flags;
    ULONG NumBadRanges;
    ULONG64 NextOffsetToLookUp;
    struct _QUERY_BAD_RANGES_OUTPUT_RANGE BadRanges[1];
};

typedef struct _QUERY_BAD_RANGES_OUTPUT_RANGE {
    ULONG Flags;
    ULONG Reserved;
    ULONG64 StartOffset;
    ULONG64 LengthInBytes;
};

typedef struct _QUERY_FILE_LAYOUT_INPUT {
    ULONG FilterEntryCount;
    ULONG NumberOfPairs;
    ULONG Flags;
    enum _QUERY_FILE_LAYOUT_FILTER_TYPE FilterType;
    ULONG Reserved;
     <unnamed-type-Filter>;
    union {
        struct _CLUSTER_RANGE ClusterRanges[1];
        struct _FILE_REFERENCE_RANGE FileReferenceRanges[1];
        enum _STORAGE_RESERVE_ID StorageReserveIds[1];
    } Filter;
};

typedef struct _QUERY_FILE_LAYOUT_OUTPUT {
    ULONG FileEntryCount;
    ULONG FirstFileOffset;
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _QUERY_PERFORMANCE_COUNTER_FLAGS {
    ULONG KernelTransition : 1;
    ULONG Reserved : 31;
    ULONG ul;
};

typedef struct _QUERY_SERVICE_CONFIGA {
    ULONG dwServiceType;
    ULONG dwStartType;
    ULONG dwErrorControl;
    PCHAR lpBinaryPathName;
    PCHAR lpLoadOrderGroup;
    ULONG dwTagId;
    PCHAR lpDependencies;
    PCHAR lpServiceStartName;
    PCHAR lpDisplayName;
};

typedef struct _QUERY_SERVICE_CONFIGW {
    ULONG dwServiceType;
    ULONG dwStartType;
    ULONG dwErrorControl;
    PWCHAR lpBinaryPathName;
    PWCHAR lpLoadOrderGroup;
    ULONG dwTagId;
    PWCHAR lpDependencies;
    PWCHAR lpServiceStartName;
    PWCHAR lpDisplayName;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA {
    ULONG fIsLocked;
    PCHAR lpLockOwner;
    ULONG dwLockDuration;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSW {
    ULONG fIsLocked;
    PWCHAR lpLockOwner;
    ULONG dwLockDuration;
};

typedef struct _QUERY_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _QUERY_STORAGE_RESERVE_OUTPUT {
    ULONG Version;
    ULONG AreaInfoCount;
    struct _STORAGE_RESERVE_AREA_INFO AreaInfo[1];
};

typedef struct _QUOTA_LIMITS {
    ULONG64 PagedPoolLimit;
    ULONG64 NonPagedPoolLimit;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG64 PagefileLimit;
    union _LARGE_INTEGER TimeLimit;
};

typedef struct _QUOTA_LIMITS_EX {
    ULONG64 PagedPoolLimit;
    ULONG64 NonPagedPoolLimit;
    ULONG64 MinimumWorkingSetSize;
    ULONG64 MaximumWorkingSetSize;
    ULONG64 PagefileLimit;
    union _LARGE_INTEGER TimeLimit;
    ULONG64 WorkingSetLimit;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
    ULONG64 Reserved4;
    ULONG Flags;
    union _RATE_QUOTA_LIMIT CpuRateLimit;
};

typedef struct _RASTERIZER_STATUS {
    SHORT nSize;
    SHORT wFlags;
    SHORT nLanguageID;
};

typedef struct _RB_HITTESTINFO {
    struct tagPOINT pt;
    ULONG flags;
    LONG iBand;
};

typedef struct _RC_CONFIG {
    ULONG dwSignature;
    ULONG dwLength;
    ULONG dwRCConfigVersion;
    ULONG dwFilePathType;
    ULONG dwFileType;
    ULONG dwSystemAttributes;
    ULONG dwUltimateFallbackLocation;
    ULONG dwServiceCheckSum[4];
    ULONG dwChecksum[4];
    ULONG dwReserved1;
    ULONG dwReserved2;
    ULONG dwMUIFileNameOffset;
    ULONG dwMUIFileNameLength;
    ULONG dwMUIFilePathOffset;
    ULONG dwMUIFilePathLength;
    ULONG dwMainResNameTypesOffset;
    ULONG dwMainResNameTypesLength;
    ULONG dwMainResIDTypesOffset;
    ULONG dwMainResIDTypesLength;
    ULONG dwMUIResNameTypesOffset;
    ULONG dwMUIResNameTypesLength;
    ULONG dwMUIResIDTypesOffset;
    ULONG dwMUIResIDTypesLength;
    ULONG dwLanguageOffset;
    ULONG dwLanguageLength;
    ULONG dwUltimateFallbackLanguageOffset;
    ULONG dwUltimateFallbackLanguageLength;
};

typedef struct _RDR_CALLOUT_STATE {
    LONG LastError;
    PVOID LastEEInfo;
    enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
    PWCHAR ServerName;
    PWCHAR ServerPort;
    PWCHAR RemoteUser;
    PWCHAR AuthType;
    UCHAR ResourceTypePresent;
    UCHAR SessionIdPresent;
    UCHAR InterfacePresent;
    struct _GUID ResourceType;
    struct _GUID SessionId;
    struct _RPC_SYNTAX_IDENTIFIER Interface;
    PVOID CertContext;
};

typedef struct _READ_ELEMENT_ADDRESS_INFO {
    ULONG NumberOfElements;
    struct _CHANGER_ELEMENT_STATUS ElementStatus[1];
};

typedef struct _REARRANGE_FILE_DATA {
    ULONG64 SourceStartingOffset;
    ULONG64 TargetOffset;
    PVOID SourceFileHandle;
    ULONG Length;
    ULONG Flags;
};

typedef struct _REARRANGE_FILE_DATA32 {
    ULONG64 SourceStartingOffset;
    ULONG64 TargetOffset;
    ULONG SourceFileHandle;
    ULONG Length;
    ULONG Flags;
};

typedef struct _REASON {
    ULONG dwCode;
    WCHAR szName[64];
    WCHAR szDesc[256];
};

typedef struct _REASONDATA {
    struct _REASON **rgReasons;
    LONG cReasons;
    LONG cReasonCapacity;
    ULONG dwReasonSelect;
    WCHAR szComment[512];
    WCHAR szBugID[32];
    LONG cCommentLen;
    LONG cBugIDLen;
};

typedef struct _REASON_BUFFER {
    ULONG Flags;
    ULONG64 ResourceFileNameOffset;
    USHORT ResourceReasonId;
    ULONG StringCount;
    ULONG64 SubstitutionStringsOffset;
    ULONG64 SimpleStringOffset;
};

typedef struct _REASON_CONTEXT {
    ULONG Version;
    ULONG Flags;
     <unnamed-type-Reason>;
    union {
         <unnamed-type-Detailed>;
        struct {
            struct HINSTANCE__ *LocalizedReasonModule;
            ULONG LocalizedReasonId;
            ULONG ReasonStringCount;
            PWCHAR *ReasonStrings;
        } Detailed;
        PWCHAR SimpleReasonString;
    } Reason;
};

typedef struct _REASON_INITIALISER {
    ULONG dwCode;
    ULONG dwNameId;
    ULONG dwDescId;
};

typedef struct _REASSIGN_BLOCKS {
    USHORT Reserved;
    USHORT Count;
    ULONG BlockNumber[1];
};

typedef struct _REASSIGN_BLOCKS_EX {
    USHORT Reserved;
    USHORT Count;
    union _LARGE_INTEGER BlockNumber[1];
};

typedef struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef struct _REDIRECTION_DESCRIPTOR {
    ULONG Version;
    ULONG FunctionCount;
    struct _REDIRECTION_FUNCTION_DESCRIPTOR *Redirections;
};

typedef struct _REDIRECTION_FUNCTION_DESCRIPTOR {
    PCHAR DllName;
    PCHAR FunctionName;
    PVOID RedirectionTarget;
};

typedef struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER {
    ULONG RangeCount;
    struct _REFS_DEALLOCATE_RANGES_RANGE Ranges[1];
};

typedef struct _REFS_DEALLOCATE_RANGES_RANGE {
    ULONG64 StartOfRange;
    ULONG64 CountOfRange;
};

typedef struct _REFS_SMR_VOLUME_GC_PARAMETERS {
    ULONG Version;
    ULONG Flags;
    enum _REFS_SMR_VOLUME_GC_ACTION Action;
    enum _REFS_SMR_VOLUME_GC_METHOD Method;
    ULONG IoGranularity;
    ULONG CompressionFormat;
    ULONG64 Unused[8];
};

typedef struct _REFS_SMR_VOLUME_INFO_OUTPUT {
    ULONG Version;
    ULONG Flags;
    union _LARGE_INTEGER SizeOfRandomlyWritableTier;
    union _LARGE_INTEGER FreeSpaceInRandomlyWritableTier;
    union _LARGE_INTEGER SizeofSMRTier;
    union _LARGE_INTEGER FreeSpaceInSMRTier;
    union _LARGE_INTEGER UsableFreeSpaceInSMRTier;
    enum _REFS_SMR_VOLUME_GC_STATE VolumeGcState;
    LONG VolumeGcLastStatus;
    ULONG64 Unused[7];
};

typedef struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER {
    UCHAR ResetCounters;
};

typedef struct _REG_NOTIFY_INFORMATION {
    ULONG NextEntryOffset;
    enum _REG_ACTION Action;
    ULONG KeyLength;
    WCHAR Key[1];
};

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_ {
    PVOID TargetFileObject;
    ULONG TargetLinkTrackingInformationLength;
    UCHAR TargetLinkTrackingInformationBuffer[1];
};

typedef struct _REMOTE_NAME_INFOA {
    PCHAR lpUniversalName;
    PCHAR lpConnectionName;
    PCHAR lpRemainingPath;
};

typedef struct _REMOTE_NAME_INFOW {
    PWCHAR lpUniversalName;
    PWCHAR lpConnectionName;
    PWCHAR lpRemainingPath;
};

typedef struct _REMOTE_PORT_VIEW {
    ULONG Length;
    ULONG64 ViewSize;
    PVOID ViewBase;
};

typedef struct _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST {
    ULONG Version;
    ULONG Size;
    ULONG64 RequestCapacity;
    ULONG ElementIdentifier;
    ULONG Reserved;
};

typedef struct _REMSECURITY_ATTRIBUTES {
    ULONG nLength;
    ULONG lpSecurityDescriptor;
    LONG bInheritHandle;
};

typedef struct _REPAIR_COPIES_INPUT {
    ULONG Size;
    ULONG Flags;
    union _LARGE_INTEGER FileOffset;
    ULONG Length;
    ULONG SourceCopy;
    ULONG NumberOfRepairCopies;
    ULONG RepairCopies[1];
};

typedef struct _REPAIR_COPIES_OUTPUT {
    ULONG Size;
    ULONG Status;
    union _LARGE_INTEGER ResumeFileOffset;
};

typedef struct _REPAIR_STORAGE_RESERVE_INPUT {
    ULONG Version;
    ULONG Flags;
    ULONG AreaIdOffset;
    ULONG AreaIdCount;
    enum _STORAGE_RESERVE_ID AreaId[1];
};

typedef struct _REPARSE_DATA_BUFFER {
    ULONG ReparseTag;
    USHORT ReparseDataLength;
    USHORT Reserved;
    struct {
        USHORT SubstituteNameOffset;
        USHORT SubstituteNameLength;
        USHORT PrintNameOffset;
        USHORT PrintNameLength;
        ULONG Flags;
        WCHAR PathBuffer[1];
    } SymbolicLinkReparseBuffer;
    struct {
        USHORT SubstituteNameOffset;
        USHORT SubstituteNameLength;
        USHORT PrintNameOffset;
        USHORT PrintNameLength;
        WCHAR PathBuffer[1];
    } MountPointReparseBuffer;
    struct {
        UCHAR DataBuffer[1];
    } GenericReparseBuffer;
};

typedef struct _REPARSE_DATA_BUFFER_EX {
    ULONG Flags;
    ULONG ExistingReparseTag;
    struct _GUID ExistingReparseGuid;
    ULONG64 Reserved;
    struct _REPARSE_DATA_BUFFER ReparseDataBuffer;
    struct _REPARSE_GUID_DATA_BUFFER ReparseGuidDataBuffer;
};

typedef struct _REPARSE_GUID_DATA_BUFFER {
    ULONG ReparseTag;
    USHORT ReparseDataLength;
    USHORT Reserved;
    struct _GUID ReparseGuid;
     <unnamed-type-GenericReparseBuffer>;
    struct {
        UCHAR DataBuffer[1];
    } GenericReparseBuffer;
};

typedef struct _REPARSE_INDEX_KEY {
    ULONG FileReparseTag;
    union _LARGE_INTEGER FileId;
};

typedef struct _REPARSE_POINT_INFORMATION {
    USHORT ReparseDataLength;
    USHORT UnparsedNameLength;
};

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG RequestedOplockLevel;
    ULONG Flags;
};

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG OriginalOplockLevel;
    ULONG NewOplockLevel;
    ULONG Flags;
    ULONG AccessMode;
    USHORT ShareMode;
};

typedef struct _REQUEST_RAW_ENCRYPTED_DATA {
    LONG64 FileOffset;
    ULONG Length;
};

typedef struct _RESOLVED_USERNAME_INFO {
    LONG bResolved;
    PWCHAR pszResolvedName;
};

typedef struct _RESOLVED_USERNAME_LIST {
    ULONG cItems;
    struct _RESOLVED_USERNAME_INFO rgUserNameInfo[1];
};

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION {
    struct _GUID ResourceManagerId;
    ULONG DescriptionLength;
    WCHAR Description[1];
};

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION {
    PVOID IoCompletionPortHandle;
    ULONG64 CompletionKey;
};

typedef struct _RESUME_PERFORMANCE {
    ULONG PostTimeMs;
    ULONG64 TotalResumeTimeMs;
    ULONG64 ResumeCompleteTimestamp;
};

typedef struct _RETRIEVAL_POINTER_BASE {
    union _LARGE_INTEGER FileAreaOffset;
};

typedef struct _RGNDATA {
    struct _RGNDATAHEADER rdh;
    CHAR Buffer[1];
};

typedef struct _RGNDATAHEADER {
    ULONG dwSize;
    ULONG iType;
    ULONG nCount;
    ULONG nRgnSize;
    struct tagRECT rcBound;
};

typedef struct _RIP_INFO {
    ULONG dwError;
    ULONG dwType;
};

typedef struct _ROOT_INFO_LUID {
    ULONG LowPart;
    LONG HighPart;
};

typedef struct _RPC_ASYNC_STATE {
    ULONG Size;
    ULONG Signature;
    LONG Lock;
    ULONG Flags;
    PVOID StubInfo;
    PVOID UserInfo;
    PVOID RuntimeInfo;
    enum _RPC_ASYNC_EVENT Event;
    enum _RPC_NOTIFICATION_TYPES NotificationType;
    union _RPC_ASYNC_NOTIFICATION_INFO u;
    LONG64 Reserved[4];
};

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1 {
    ULONG Version;
    ULONG Flags;
    ULONG ComTimeout;
    ULONG CallTimeout;
};

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A {
    ULONG Version;
    PUCHAR ServerPrincName;
    ULONG AuthnLevel;
    ULONG AuthnSvc;
    struct _SEC_WINNT_AUTH_IDENTITY_A *AuthIdentity;
    struct _RPC_SECURITY_QOS *SecurityQos;
};

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W {
    ULONG Version;
    PWCHAR ServerPrincName;
    ULONG AuthnLevel;
    ULONG AuthnSvc;
    struct _SEC_WINNT_AUTH_IDENTITY_W *AuthIdentity;
    struct _RPC_SECURITY_QOS *SecurityQos;
};

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A {
    ULONG Version;
    ULONG Flags;
    ULONG ProtocolSequence;
    PUCHAR NetworkAddress;
    PUCHAR StringEndpoint;
     <unnamed-type-u1>;
    union {
        PUCHAR Reserved;
    } u1;
    struct _GUID ObjectUuid;
};

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W {
    ULONG Version;
    ULONG Flags;
    ULONG ProtocolSequence;
    PWCHAR NetworkAddress;
    PWCHAR StringEndpoint;
     <unnamed-type-u1>;
    union {
        PWCHAR Reserved;
    } u1;
    struct _GUID ObjectUuid;
};

typedef struct _RPC_BINDING_VECTOR {
    ULONG Count;
    PVOID BindingH[1];
};

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1 {
    ULONG Version;
    PVOID Buffer;
    ULONG BufferSize;
    enum tagRpcLocalAddressFormat AddressFormat;
};

typedef struct _RPC_CLIENT_INTERFACE {
    ULONG Length;
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    ULONG RpcProtseqEndpointCount;
    struct _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
    ULONG64 Reserved;
    PVOID InterpreterInfo;
    ULONG Flags;
};

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR {
    ULONG BufferSize;
    PCHAR Buffer;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A {
    struct _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A {
    struct _SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
    struct _SEC_WINNT_AUTH_IDENTITY_A *ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W {
    struct _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
    struct _SEC_WINNT_AUTH_IDENTITY_W *ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A {
    PVOID TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PUCHAR ServerCertificateSubject;
    PVOID ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W {
    PVOID TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
    PVOID ProxyCredentials;
    ULONG NumberOfProxyAuthnSchemes;
    PULONG ProxyAuthnSchemes;
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W {
    struct _SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    ULONG Flags;
    ULONG AuthenticationTarget;
    ULONG NumberOfAuthnSchemes;
    PULONG AuthnSchemes;
    PWCHAR ServerCertificateSubject;
};

typedef struct _RPC_IF_ID {
    struct _GUID Uuid;
    USHORT VersMajor;
    USHORT VersMinor;
};

typedef struct _RPC_MESSAGE {
    PVOID Handle;
    ULONG DataRepresentation;
    PVOID Buffer;
    ULONG BufferLength;
    ULONG ProcNum;
    struct _RPC_SYNTAX_IDENTIFIER *TransferSyntax;
    PVOID RpcInterfaceInformation;
    PVOID ReservedForRuntime;
    PVOID ManagerEpv;
    PVOID ImportContext;
    ULONG RpcFlags;
};

typedef struct _RPC_POLICY {
    ULONG Length;
    ULONG EndpointFlags;
    ULONG NICFlags;
};

typedef struct _RPC_PROTSEQ_ENDPOINT {
    PUCHAR RpcProtocolSequence;
    PUCHAR Endpoint;
};

typedef struct _RPC_PROTSEQ_VECTORA {
    ULONG Count;
    PUCHAR Protseq[1];
};

typedef struct _RPC_PROTSEQ_VECTORW {
    ULONG Count;
    PWCHAR Protseq[1];
};

typedef struct _RPC_SECURITY_QOS {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
};

typedef struct _RPC_SECURITY_QOS_V2_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
};

typedef struct _RPC_SECURITY_QOS_V2_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
};

typedef struct _RPC_SECURITY_QOS_V3_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
};

typedef struct _RPC_SECURITY_QOS_V3_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
};

typedef struct _RPC_SECURITY_QOS_V4_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
};

typedef struct _RPC_SECURITY_QOS_V4_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
};

typedef struct _RPC_SECURITY_QOS_V5_A {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
    PVOID ServerSecurityDescriptor;
};

typedef struct _RPC_SECURITY_QOS_V5_W {
    ULONG Version;
    ULONG Capabilities;
    ULONG IdentityTracking;
    ULONG ImpersonationType;
    ULONG AdditionalSecurityInfoType;
     <unnamed-type-u>;
    union {
        struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
    } u;
    PVOID Sid;
    ULONG EffectiveOnly;
    PVOID ServerSecurityDescriptor;
};

typedef struct _RPC_SEC_CONTEXT_KEY_INFO {
    ULONG EncryptAlgorithm;
    ULONG KeySize;
    ULONG SignatureAlgorithm;
};

typedef struct _RPC_SERVER_INTERFACE {
    ULONG Length;
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    ULONG RpcProtseqEndpointCount;
    struct _RPC_PROTSEQ_ENDPOINT *RpcProtseqEndpoint;
    PVOID DefaultManagerEpv;
    PVOID InterpreterInfo;
    ULONG Flags;
};

typedef struct _RPC_SYNTAX_IDENTIFIER {
    struct _GUID SyntaxGUID;
    struct _RPC_VERSION SyntaxVersion;
};

typedef struct _RPC_TRANSFER_SYNTAX {
    struct _GUID Uuid;
    USHORT VersMajor;
    USHORT VersMinor;
};

typedef struct _RPC_VERSION {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _RSAPUBKEY {
    ULONG magic;
    ULONG bitlen;
    ULONG pubexp;
};

typedef struct _RTLP_CURDIR_REF {
};

typedef struct _RTLP_HEAP_SERIALIZED_MAPPING {
    ULONG64 Allocation;
    PVOID StackReference;
    ULONG64 Size;
};

typedef struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER {
    USHORT Version;
    USHORT PointerSize;
    ULONG64 Heap;
    ULONG64 TotalCommit;
    ULONG64 TotalReserve;
};

typedef struct _RTLP_HEAP_TAGGING_INFO {
    USHORT Version;
    USHORT Flags;
    PVOID Process;
    ULONG64 EntriesCount;
    struct _RTLP_TAG_INFO Entries[1];
};

typedef struct _RTLP_PROCESS_REFLECTION_CONTEXT {
    ULONG64 ReflectionContextSize;
    ULONG ReflectionFlags;
    PLONG ReflectionRoutine;
    PVOID ReflectionParameter;
    PVOID ReflectedProcessCreatedEvent;
    PVOID ReflectedProcessHandlesDuplicatedEvent;
    PVOID ReflectionStartEvent;
    struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION ReflectionInformation;
};

typedef struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION {
    PVOID ReflectionProcessHandle;
    PVOID ReflectionThreadHandle;
    struct _CLIENT_ID ReflectionClientId;
};

typedef struct _RTLP_TAG_INFO {
    struct _GUID Id;
    ULONG64 CurrentAllocatedBytes;
};

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME {
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *Previous;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    ULONG Flags;
};

typedef struct _RTL_AVL_TABLE {
    struct _RTL_BALANCED_LINKS BalancedRoot;
    PVOID OrderedPointer;
    ULONG WhichOrderedElement;
    ULONG NumberGenericTableElements;
    ULONG DepthOfTree;
    struct _RTL_BALANCED_LINKS *RestartKey;
    ULONG DeleteCount;
    enum _RTL_GENERIC_COMPARE_RESULTS *CompareRoutine;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    PVOID TableContext;
};

typedef struct _RTL_AVL_TREE {
    struct _RTL_BALANCED_NODE *Root;
};

typedef struct _RTL_BACKOFF {
    ULONG Delay;
};

typedef struct _RTL_BALANCED_LINKS {
    struct _RTL_BALANCED_LINKS *Parent;
    struct _RTL_BALANCED_LINKS *LeftChild;
    struct _RTL_BALANCED_LINKS *RightChild;
    CHAR Balance;
    UCHAR Reserved[3];
};

typedef struct _RTL_BALANCED_NODE {
    struct _RTL_BALANCED_NODE *Children[2];
    struct _RTL_BALANCED_NODE *Left;
    struct _RTL_BALANCED_NODE *Right;
    UCHAR Red : 1;
    UCHAR Balance : 2;
    ULONG64 ParentValue;
};

typedef struct _RTL_BARRIER {
    LONG Barrier;
    LONG LeftBarrier;
    PVOID WaitEvent[2];
    LONG TotalProcessors;
    ULONG Spins;
    struct {
        ULONG Reserved1;
        ULONG Reserved2;
        ULONG64 Reserved3[2];
        ULONG Reserved4;
        ULONG Reserved5;
    } DUMMYRESERVEDSTRUCTNAME;
    VOID _RTL_BARRIER;
    VOID _RTL_BARRIER;
    struct _RTL_BARRIER *operator=;
    struct _RTL_BARRIER *operator=;
};

typedef struct _RTL_BITMAP {
    ULONG SizeOfBitMap;
    PULONG Buffer;
};

typedef struct _RTL_BITMAP_EX {
    ULONG64 SizeOfBitMap;
    PULONG64 Buffer;
};

typedef struct _RTL_BITMAP_RUN {
    ULONG StartingIndex;
    ULONG NumberOfBits;
};

typedef struct _RTL_BSD_ITEM {
    enum RTL_BSD_ITEM_TYPE Type;
    PVOID DataBuffer;
    ULONG DataLength;
};

typedef struct _RTL_BUFFER {
    PUCHAR Buffer;
    PUCHAR StaticBuffer;
    ULONG64 Size;
    ULONG64 StaticSize;
};

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC {
    ULONG64 Size;
    ULONG Format;
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
};

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED {
    ULONG64 Size;
    ULONG Format;
    struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
    PVOID Extra1;
    PVOID Extra2;
    PVOID Extra3;
    PVOID Extra4;
};

typedef struct _RTL_CIRCULAR_LIST_HEAD {
    struct _LIST_ENTRY *HeadEntry;
};

typedef struct _RTL_CONDITION_VARIABLE {
    ULONG64 WakeCount : 3;
    ULONG64 Waking : 1;
    ULONG64 Value;
    PVOID Ptr;
};

typedef struct _RTL_CRITICAL_SECTION {
    struct _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    PVOID OwningThread;
    PVOID LockSemaphore;
    ULONG64 SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION32 {
    ULONG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    ULONG OwningThread;
    ULONG LockSemaphore;
    ULONG SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION64 {
    ULONG64 DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    ULONG64 OwningThread;
    ULONG64 LockSemaphore;
    ULONG64 SpinCount;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    struct _LIST_ENTRY ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Flags;
    USHORT CreatorBackTraceIndexHigh;
    USHORT SpareUSHORT;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG32 {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    ULONG CriticalSection;
    struct LIST_ENTRY32 ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Spare[2];
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG64 {
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    ULONG64 CriticalSection;
    struct LIST_ENTRY64 ProcessLocksList;
    ULONG EntryCount;
    ULONG ContentionCount;
    ULONG Spare[2];
};

typedef struct _RTL_DEBUG_INFORMATION {
    PVOID SectionHandleClient;
    PVOID ViewBaseClient;
    PVOID ViewBaseTarget;
    ULONG64 ViewBaseDelta;
    PVOID EventPairClient;
    PVOID EventPairTarget;
    PVOID TargetProcessId;
    PVOID TargetThreadHandle;
    ULONG Flags;
    ULONG64 OffsetFree;
    ULONG64 CommitSize;
    ULONG64 ViewSize;
    struct _RTL_PROCESS_MODULES *Modules;
    struct _RTL_PROCESS_MODULE_INFORMATION_EX *ModulesEx;
    struct _RTL_PROCESS_BACKTRACES *BackTraces;
    struct _RTL_PROCESS_HEAPS *Heaps;
    struct _RTL_PROCESS_LOCKS *Locks;
    PVOID SpecificHeap;
    PVOID TargetProcessHandle;
    struct _RTL_PROCESS_VERIFIER_OPTIONS *VerifierOptions;
    PVOID ProcessHeap;
    PVOID CriticalSectionHandle;
    PVOID CriticalSectionOwnerThread;
    PVOID Reserved[4];
};

typedef struct _RTL_DEBUG_INFORMATION32 {
    ULONG SectionHandleClient;
    ULONG ViewBaseClient;
    ULONG ViewBaseTarget;
    ULONG ViewBaseDelta;
    ULONG EventPairClient;
    ULONG EventPairTarget;
    ULONG TargetProcessId;
    ULONG TargetThreadHandle;
    ULONG Flags;
    ULONG OffsetFree;
    ULONG CommitSize;
    ULONG ViewSize;
    ULONG Modules;
    ULONG ModulesEx;
    ULONG BackTraces;
    ULONG Heaps;
    ULONG Locks;
    ULONG SpecificHeap;
    ULONG TargetProcessHandle;
    ULONG VerifierOptions;
    ULONG ProcessHeap;
    ULONG CriticalSectionHandle;
    ULONG CriticalSectionOwnerThread;
    ULONG Reserved[4];
};

typedef struct _RTL_DISK_SPACE_INFO {
    enum RTL_DISK_SPACE_POLICY Policy;
};

typedef struct _RTL_DISK_SPEED_INFO {
    enum RTL_DISK_SPEED_POLICY Policy;
};

typedef struct _RTL_DISK_WRITE_CONSTRAINT_INFO {
    enum RTL_DISK_WRITE_CONSTRAINT_POLICY Policy;
};

typedef struct _RTL_DRIVE_LETTER_CURDIR {
    USHORT Flags;
    USHORT Length;
    ULONG TimeStamp;
    struct _STRING DosPath;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE {
    ULONG Flags;
    ULONG Shift;
    ULONG TableSize;
    ULONG Pivot;
    ULONG DivisorMask;
    ULONG NumEntries;
    ULONG NonEmptyBuckets;
    ULONG NumEnumerators;
    PVOID Directory;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT {
    struct _LIST_ENTRY *ChainHead;
    struct _LIST_ENTRY *PrevLinkage;
    ULONG64 Signature;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY {
    struct _LIST_ENTRY Linkage;
    ULONG64 Signature;
};

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR {
    struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
    struct _LIST_ENTRY *CurEntry;
    struct _LIST_ENTRY *ChainHead;
    ULONG BucketIndex;
};

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION {
    struct _RTL_TIME_ZONE_INFORMATION tzi;
    WCHAR TimeZoneKeyName[128];
    UCHAR DynamicDaylightTimeDisabled;
};

typedef struct _RTL_GENERIC_TABLE {
    struct _RTL_SPLAY_LINKS *TableRoot;
    struct _LIST_ENTRY InsertOrderList;
    struct _LIST_ENTRY *OrderedPointer;
    ULONG WhichOrderedElement;
    ULONG NumberGenericTableElements;
    enum _RTL_GENERIC_COMPARE_RESULTS *CompareRoutine;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    PVOID TableContext;
};

typedef struct _RTL_HANDLE_TABLE {
    ULONG MaximumNumberOfHandles;
    ULONG SizeOfHandleTableEntry;
    ULONG UseHeap;
    ULONG TableSize;
    struct _RTL_HANDLE_TABLE_ENTRY *FreeHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *CommittedHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *UnCommittedHandles;
    struct _RTL_HANDLE_TABLE_ENTRY *MaxReservedHandles;
};

typedef struct _RTL_HANDLE_TABLE_ENTRY {
    ULONG Flags;
    struct _RTL_HANDLE_TABLE_ENTRY *NextFree;
};

typedef struct _RTL_HEAP_ENTRY {
    ULONG64 Size;
    USHORT Flags;
    USHORT AllocatorBackTraceIndex;
     <unnamed-type-u>;
    union {
         <unnamed-type-s1>;
        struct {
            ULONG64 Settable;
            ULONG Tag;
        } s1;
         <unnamed-type-s2>;
        struct {
            ULONG64 CommittedSize;
            PVOID FirstBlock;
        } s2;
    } u;
};

typedef struct _RTL_HEAP_INFORMATION {
    PVOID BaseAddress;
    ULONG Flags;
    USHORT EntryOverhead;
    USHORT CreatorBackTraceIndex;
    ULONG64 BytesAllocated;
    ULONG64 BytesCommitted;
    ULONG NumberOfTags;
    ULONG NumberOfEntries;
    ULONG NumberOfPseudoTags;
    ULONG PseudoTagGranularity;
    ULONG Reserved[5];
    struct _RTL_HEAP_TAG *Tags;
    struct _RTL_HEAP_ENTRY *Entries;
};

typedef struct _RTL_HEAP_MEMORY_LIMIT_DATA {
    ULONG64 CommitLimitBytes;
    ULONG64 CommitLimitFailureCode;
    ULONG64 MaxAllocationSizeBytes;
    ULONG64 AllocationLimitFailureCode;
};

typedef struct _RTL_HEAP_MEMORY_LIMIT_INFO {
    ULONG Version;
    struct _RTL_HEAP_MEMORY_LIMIT_DATA Data;
};

typedef struct _RTL_HEAP_PARAMETERS {
    ULONG Length;
    ULONG64 SegmentReserve;
    ULONG64 SegmentCommit;
    ULONG64 DeCommitFreeBlockThreshold;
    ULONG64 DeCommitTotalFreeThreshold;
    ULONG64 MaximumAllocationSize;
    ULONG64 VirtualMemoryThreshold;
    ULONG64 InitialCommit;
    ULONG64 InitialReserve;
    PLONG CommitRoutine;
    ULONG64 Reserved[2];
};

typedef struct _RTL_HEAP_STACK_CONTROL {
    USHORT Version;
    USHORT Flags;
    PVOID Process;
};

typedef struct _RTL_HEAP_STACK_QUERY {
    ULONG Version;
    PVOID Process;
    PLONG WriteRoutine;
    PVOID SerializationContext;
    UCHAR QueryLevel;
    UCHAR Flags;
};

typedef struct _RTL_HEAP_TAG {
    ULONG NumberOfAllocations;
    ULONG NumberOfFrees;
    ULONG64 BytesAllocated;
    USHORT TagIndex;
    USHORT CreatorBackTraceIndex;
    WCHAR TagName[24];
};

typedef struct _RTL_HEAP_TAG_INFO {
    ULONG NumberOfAllocations;
    ULONG NumberOfFrees;
    ULONG64 BytesAllocated;
};

typedef struct _RTL_HEAP_WALK_ENTRY {
    PVOID DataAddress;
    ULONG64 DataSize;
    UCHAR OverheadBytes;
    UCHAR SegmentIndex;
    USHORT Flags;
    struct {
        ULONG64 Settable;
        USHORT TagIndex;
        USHORT AllocatorBackTraceIndex;
        ULONG Reserved[2];
    } Block;
    struct {
        ULONG CommittedSize;
        ULONG UnCommittedSize;
        PVOID FirstEntry;
        PVOID LastEntry;
    } Segment;
};

typedef struct _RTL_IMAGE_MITIGATION_ASLR_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY ForceRelocateImages;
    union _RTL_IMAGE_MITIGATION_POLICY BottomUpRandomization;
    union _RTL_IMAGE_MITIGATION_POLICY HighEntropyRandomization;
};

typedef struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockNonMicrosoftSignedBinaries;
    union _RTL_IMAGE_MITIGATION_POLICY EnforceSigningOnModuleDependencies;
};

typedef struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisallowChildProcessCreation;
};

typedef struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY ControlFlowGuard;
    union _RTL_IMAGE_MITIGATION_POLICY StrictControlFlowGuard;
};

typedef struct _RTL_IMAGE_MITIGATION_DEP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY Dep;
};

typedef struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockDynamicCode;
};

typedef struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisableExtensionPoints;
};

typedef struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY DisableNonSystemFonts;
};

typedef struct _RTL_IMAGE_MITIGATION_HEAP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY TerminateOnHeapErrors;
};

typedef struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockRemoteImageLoads;
    union _RTL_IMAGE_MITIGATION_POLICY BlockLowLabelImageLoads;
    union _RTL_IMAGE_MITIGATION_POLICY PreferSystem32;
};

typedef struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilter;
    union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilterPlus;
    union _RTL_IMAGE_MITIGATION_POLICY EnableImportAddressFilter;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopStackPivot;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopCallerCheck;
    union _RTL_IMAGE_MITIGATION_POLICY EnableRopSimExec;
    WCHAR EafPlusModuleList[512];
};

typedef struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY Sehop;
};

typedef struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY StrictHandleChecks;
};

typedef struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
    union _RTL_IMAGE_MITIGATION_POLICY BlockWin32kSystemCalls;
};

typedef struct _RTL_IMAGE_POLICY_METADATA {
    struct _IMAGE_POLICY_METADATA *PolicyMetadata;
    ULONG64 LBound;
    ULONG64 UBound;
};

typedef struct _RTL_LFG_RNG_STATE {
    ULONG SeedArray[55];
    ULONG Next;
    ULONG NextP;
};

typedef struct _RTL_MODULE_BASIC_INFO {
    PVOID ImageBase;
};

typedef struct _RTL_MODULE_EXTENDED_INFO {
    struct _RTL_MODULE_BASIC_INFO BasicInfo;
    ULONG ImageSize;
    USHORT FileNameOffset;
    UCHAR FullPathName[256];
};

typedef struct _RTL_PERTHREAD_CURDIR {
    struct _RTL_DRIVE_LETTER_CURDIR *CurrentDirectories;
    struct _UNICODE_STRING *ImageName;
    PVOID Environment;
};

typedef struct _RTL_PHYSICAL_MEMORY_INFO {
    enum RTL_PHYSICAL_MEMORY_POLICY Policy;
};

typedef struct _RTL_PROCESS_BACKTRACES {
    ULONG64 CommittedMemory;
    ULONG64 ReservedMemory;
    ULONG NumberOfBackTraceLookups;
    ULONG NumberOfBackTraces;
    struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
};

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL {
    ULONG ControlCode;
    ULONG ControlSize;
    UCHAR ControlData[1];
    struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
};

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION {
    PCHAR SymbolicBackTrace;
    ULONG TraceCount;
    USHORT Index;
    USHORT Depth;
    PVOID BackTrace[32];
};

typedef struct _RTL_PROCESS_HEAPS {
    ULONG NumberOfHeaps;
    struct _RTL_HEAP_INFORMATION Heaps[1];
};

typedef struct _RTL_PROCESS_LOCKS {
    ULONG NumberOfLocks;
    struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
};

typedef struct _RTL_PROCESS_LOCK_INFORMATION {
    PVOID Address;
    USHORT Type;
    USHORT CreatorBackTraceIndex;
    PVOID OwningThread;
    LONG LockCount;
    ULONG ContentionCount;
    ULONG EntryCount;
    LONG RecursionCount;
    ULONG NumberOfWaitingShared;
    ULONG NumberOfWaitingExclusive;
};

typedef struct _RTL_PROCESS_MODULES {
    ULONG NumberOfModules;
    struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
};

typedef struct _RTL_PROCESS_MODULE_INFORMATION {
    PVOID Section;
    PVOID MappedBase;
    PVOID ImageBase;
    ULONG ImageSize;
    ULONG Flags;
    USHORT LoadOrderIndex;
    USHORT InitOrderIndex;
    USHORT LoadCount;
    USHORT OffsetToFileName;
    UCHAR FullPathName[256];
};

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX {
    USHORT NextOffset;
    struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
    ULONG ImageChecksum;
    ULONG TimeDateStamp;
    PVOID DefaultBase;
};

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS {
    ULONG SizeStruct;
    ULONG Option;
    UCHAR OptionData[1];
};

typedef struct _RTL_PROTECTED_ACCESS {
    ULONG DominateMask;
    ULONG DeniedProcessAccess;
    ULONG DeniedThreadAccess;
};

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO {
    ULONG UniqueProcessId;
    ULONG Flags;
    ULONG64 Buffer;
};

typedef struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS {
    PVOID Context;
    PLONG ReadMemoryRoutine;
    PLONG QueryInformationRoutine;
};

typedef struct _RTL_QUERY_REGISTRY_TABLE {
    PLONG QueryRoutine;
    ULONG Flags;
    PWCHAR Name;
    PVOID EntryContext;
    ULONG DefaultType;
    PVOID DefaultData;
    ULONG DefaultLength;
};

typedef struct _RTL_RB_TREE {
    struct _RTL_BALANCED_NODE *Root;
    UCHAR Encoded : 1;
    struct _RTL_BALANCED_NODE *Min;
};

typedef struct _RTL_RELATIVE_NAME_U {
    struct _UNICODE_STRING RelativeName;
    PVOID ContainingDirectory;
    struct _RTLP_CURDIR_REF *CurDirRef;
};

typedef struct _RTL_RESOURCE {
    struct _RTL_CRITICAL_SECTION CriticalSection;
    PVOID SharedSemaphore;
    ULONG NumberOfWaitingShared;
    PVOID ExclusiveSemaphore;
    ULONG NumberOfWaitingExclusive;
    LONG NumberOfActive;
    PVOID ExclusiveOwnerThread;
    ULONG Flags;
    struct _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
    VOID _RTL_RESOURCE;
    VOID _RTL_RESOURCE;
    struct _RTL_RESOURCE *operator=;
    struct _RTL_RESOURCE *operator=;
};

typedef struct _RTL_RETPOLINE_BINARY_INFO {
    LONG RetpolineStubsStartRva;
    ULONG CfgDispatchFunctionPtrRva;
    ULONG IATRva;
    PLONG ImportRvas;
    PULONG64 IAT;
    PVOID ImageBase;
    PULONG CheckFunction;
};

typedef struct _RTL_RETPOLINE_RELOCATION_INDEX {
    USHORT ImportRelocationSize;
    USHORT IndirectRelocationSize;
    USHORT SwitchJumpRelocationSize;
    USHORT StraddleType;
     <unnamed-type-StraddleReloc>;
    union {
        struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION Import;
        struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION Indir;
        struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION SwitchJump;
    } StraddleReloc;
};

typedef struct _RTL_RETPOLINE_ROUTINES {
    ULONG UnwindDataOffset;
    ULONG SwitchtableJump[16];
    ULONG CfgIndirectRax;
    ULONG NonCfgIndirectRax;
    ULONG ImportR10;
};

typedef struct _RTL_RVA_LIST {
    ULONG64 RvaCount;
    ULONG StateBitsPerRva;
    PUCHAR CompressedBuffer;
    ULONG64 CompressedBufferSize;
    struct _RTL_BITMAP_EX RvaStateBitMap;
    PULONG StateBitValueMap;
    PVOID ExtensionBuffer;
};

typedef struct _RTL_RVA_LIST_ITERATOR {
    ULONG CurrentRva;
    ULONG CurrentRvaIndex;
    ULONG CompressedRvaDataOffset;
};

typedef struct _RTL_RXACT_CONTEXT {
    PVOID RootRegistryKey;
    PVOID RXactKey;
    UCHAR HandlesValid;
    struct _RTL_RXACT_LOG *RXactLog;
};

typedef struct _RTL_RXACT_LOG {
    ULONG OperationCount;
    ULONG LogSize;
    ULONG LogSizeInUse;
    ULONG Alignment;
};

typedef struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE {
    ULONG Flags;
    ULONG MemoryTypeMask;
    ULONG NumaNode;
    PVOID PartitionHandle;
    ULONG64 Reserved[2];
};

typedef struct _RTL_SEGMENT_HEAP_PARAMETERS {
    USHORT Version;
    USHORT Size;
    ULONG Flags;
    struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE MemorySource;
    ULONG64 Reserved[4];
};

typedef struct _RTL_SPARSE_BITMAP_CTX {
    ULONG64 Lock;
    struct _RTL_SPARSE_BITMAP_RANGE **BitmapRanges;
    struct _RTL_BITMAP RangeArrayCommitStatus;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    ULONG RangeCount;
    ULONG RangeIndexLimit;
    ULONG BitsPerRange;
    ULONG RangeCountMax;
    ULONG RangeMetadataOffset;
    ULONG MetadataSizePerBit;
    ULONG DefaultBitsSet : 1;
    ULONG SparseRangeArray : 1;
    ULONG NoInternalLocking : 1;
    ULONG SpareFlags : 29;
};

typedef struct _RTL_SPARSE_BITMAP_PARAMETER {
    ULONG64 BitCountMax;
    ULONG MetadataSizePerBit;
    ULONG BitsPerRange;
    ULONG RangeCountMax;
    PVOID *AllocateRoutine;
    PVOID FreeRoutine;
    ULONG DefaultBitsSet : 1;
    ULONG SparseRangeArray : 1;
    ULONG NoInternalLocking : 1;
    ULONG SpareFlags : 29;
};

typedef struct _RTL_SPARSE_BITMAP_RANGE {
    ULONG64 Lock;
    struct _RTL_BITMAP RangeBitmap;
    struct _SINGLE_LIST_ENTRY Next;
};

typedef struct _RTL_SPARSE_BITMAP_RUN {
    ULONG StartingIndexLow;
    ULONG StartingIndexHigh;
    ULONG Length;
    PVOID Metadata;
};

typedef struct _RTL_SPLAY_LINKS {
    struct _RTL_SPLAY_LINKS *Parent;
    struct _RTL_SPLAY_LINKS *LeftChild;
    struct _RTL_SPLAY_LINKS *RightChild;
};

typedef struct _RTL_SRWLOCK {
    ULONG64 Locked : 1;
    ULONG64 Waiting : 1;
    ULONG64 Waking : 1;
    ULONG64 MultipleShared : 1;
    ULONG64 Shared : 60;
    ULONG64 Value;
    PVOID Ptr;
};

typedef struct _RTL_STACK_CONTEXT {
    ULONG NumberOfEntries;
    struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
};

typedef struct _RTL_STACK_CONTEXT_ENTRY {
    ULONG64 Address;
    ULONG64 Data;
};

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE {
    PVOID CommitBase;
    ULONG64 CommitSize;
    ULONG64 ReserveSize;
};

typedef struct _RTL_TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _TIME_FIELDS StandardStart;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _TIME_FIELDS DaylightStart;
    LONG DaylightBias;
};

typedef struct _RTL_TRACE_BLOCK {
    ULONG Magic;
    ULONG Count;
    ULONG Size;
    ULONG64 UserCount;
    ULONG64 UserSize;
    PVOID UserContext;
    struct _RTL_TRACE_BLOCK *Next;
    PVOID *Trace;
};

typedef struct _RTL_TRACE_DATABASE {
};

typedef struct _RTL_TRACE_ENUMERATE {
    struct _RTL_TRACE_DATABASE *Database;
    ULONG Index;
    struct _RTL_TRACE_BLOCK *Block;
};

typedef struct _RTL_UMS_COMPLETION_LIST {
    struct _SINGLE_LIST_ENTRY *ThreadListHead;
    PVOID CompletionEvent;
    ULONG CompletionFlags;
    struct _SINGLE_LIST_ENTRY InternalListHead;
};

typedef struct _RTL_UMS_CONTEXT {
    struct _SINGLE_LIST_ENTRY Link;
    struct _CONTEXT Context;
    PVOID Teb;
    PVOID UserContext;
    ULONG ScheduledThread : 1;
    ULONG Suspended : 1;
    ULONG VolatileContext : 1;
    ULONG Terminated : 1;
    ULONG DebugActive : 1;
    ULONG RunningOnSelfThread : 1;
    ULONG DenyRunningOnSelfThread : 1;
    LONG Flags;
    ULONG64 KernelUpdateLock : 2;
    ULONG64 PrimaryClientID : 62;
    ULONG64 ContextLock;
    struct _RTL_UMS_CONTEXT *PrimaryUmsContext;
    ULONG SwitchCount;
    ULONG KernelYieldCount;
    ULONG MixedYieldCount;
    ULONG YieldCount;
    VOID _RTL_UMS_CONTEXT;
    VOID _RTL_UMS_CONTEXT;
    struct _RTL_UMS_CONTEXT *operator=;
    struct _RTL_UMS_CONTEXT *operator=;
};

typedef struct _RTL_UMS_SCHEDULER_STARTUP_INFO {
    ULONG UmsVersion;
    struct _RTL_UMS_COMPLETION_LIST *CompletionList;
    PVOID SchedulerProc;
    PVOID SchedulerParam;
};

typedef struct _RTL_UNICODE_STRING_BUFFER {
    struct _UNICODE_STRING String;
    struct _RTL_BUFFER ByteBuffer;
    UCHAR MinimumStaticBufferForTerminalNul[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE {
    PVOID BaseAddress;
    ULONG64 SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE32 {
    ULONG BaseAddress;
    ULONG SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_UNLOAD_EVENT_TRACE64 {
    ULONG64 BaseAddress;
    ULONG64 SizeOfImage;
    ULONG Sequence;
    ULONG TimeDateStamp;
    ULONG CheckSum;
    WCHAR ImageName[32];
    ULONG Version[2];
};

typedef struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS {
    USHORT Version;
    USHORT NodeNumber;
    PVOID ProcessSecurityDescriptor;
    PVOID ThreadSecurityDescriptor;
    PVOID ParentProcess;
    PVOID DebugPort;
    PVOID TokenHandle;
    PVOID JobHandle;
};

typedef struct _RTL_USER_PROCESS_INFORMATION {
    ULONG Length;
    PVOID Process;
    PVOID Thread;
    struct _CLIENT_ID ClientId;
    struct _SECTION_IMAGE_INFORMATION ImageInformation;
};

typedef struct _RTL_USER_PROCESS_INFORMATION64 {
    ULONG Length;
    LONG64 Process;
    LONG64 Thread;
    struct _CLIENT_ID64 ClientId;
    struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
};

typedef struct _RTL_USER_PROCESS_PARAMETERS {
    ULONG MaximumLength;
    ULONG Length;
    ULONG Flags;
    ULONG DebugFlags;
    PVOID ConsoleHandle;
    ULONG ConsoleFlags;
    PVOID StandardInput;
    PVOID StandardOutput;
    PVOID StandardError;
    struct _CURDIR CurrentDirectory;
    struct _UNICODE_STRING DllPath;
    struct _UNICODE_STRING ImagePathName;
    struct _UNICODE_STRING CommandLine;
    PVOID Environment;
    ULONG StartingX;
    ULONG StartingY;
    ULONG CountX;
    ULONG CountY;
    ULONG CountCharsX;
    ULONG CountCharsY;
    ULONG FillAttribute;
    ULONG WindowFlags;
    ULONG ShowWindowFlags;
    struct _UNICODE_STRING WindowTitle;
    struct _UNICODE_STRING DesktopInfo;
    struct _UNICODE_STRING ShellInfo;
    struct _UNICODE_STRING RuntimeData;
    struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
    ULONG64 EnvironmentSize;
    ULONG64 EnvironmentVersion;
    PVOID PackageDependencyData;
    ULONG ProcessGroupId;
    ULONG LoaderThreads;
    struct _UNICODE_STRING RedirectionDllName;
};

typedef struct _RTL_WORK_ON_BEHALF_TICKET_EX {
    struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
    ULONG Flags;
    ULONG CurrentThread : 1;
    ULONG Reserved1 : 31;
    ULONG Reserved2;
};

typedef struct _RawKeyboardInputMessage {
    USHORT UnitId;
    USHORT ScanCode;
    USHORT VirtualKey;
    UCHAR KeyStates[256];
    USHORT Flags;
    ULONG ExtraInformation;
    WCHAR Unicode[16];
};

typedef struct _RawMouseInputMessage {
    struct tagINPUTDEST destination;
    struct tagRAWMOUSE raw;
    ULONG time;
    PVOID hDevice;
};

typedef struct _RemotableHandle {
    LONG fContext;
     __MIDL_IWinTypes_0009;
    union _RemotableHandle::__MIDL_IWinTypes_0009 u;
};

typedef struct _SCARD_ATRMASK {
    ULONG cbAtr;
    UCHAR rgbAtr[36];
    UCHAR rgbMask[36];
};

typedef struct _SCARD_IO_REQUEST {
    ULONG dwProtocol;
    ULONG cbPciLength;
};

typedef struct _SCARD_T0_COMMAND {
    UCHAR bCla;
    UCHAR bIns;
    UCHAR bP1;
    UCHAR bP2;
    UCHAR bP3;
};

typedef struct _SCARD_T0_REQUEST {
    struct _SCARD_IO_REQUEST ioRequest;
    UCHAR bSw1;
    UCHAR bSw2;
    struct _SCARD_T0_COMMAND CmdBytes;
    UCHAR rgbHeader[5];
};

typedef struct _SCARD_T1_REQUEST {
    struct _SCARD_IO_REQUEST ioRequest;
};

typedef struct _SCHANNEL_ALG {
    ULONG dwUse;
    ULONG Algid;
    ULONG cBits;
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _SCM_INTERLEAVED_PD_INFO {
    ULONG DeviceHandle;
    struct _GUID DeviceGuid;
};

typedef struct _SCM_LD_INTERLEAVE_SET_INFO {
    ULONG Version;
    ULONG Size;
    ULONG InterleaveSetSize;
    struct _SCM_INTERLEAVED_PD_INFO InterleaveSet[1];
};

typedef struct _SCM_LOGICAL_DEVICES {
    ULONG Version;
    ULONG Size;
    ULONG DeviceCount;
    struct _SCM_LOGICAL_DEVICE_INSTANCE Devices[1];
};

typedef struct _SCM_LOGICAL_DEVICE_INSTANCE {
    ULONG Version;
    ULONG Size;
    struct _GUID DeviceGuid;
    WCHAR SymbolicLink[256];
};

typedef struct _SCM_PD_DESCRIPTOR_HEADER {
    ULONG Version;
    ULONG Size;
};

typedef struct _SCM_PD_DEVICE_HANDLE {
    ULONG Version;
    ULONG Size;
    struct _GUID DeviceGuid;
    ULONG DeviceHandle;
};

typedef struct _SCM_PD_DEVICE_INFO {
    ULONG Version;
    ULONG Size;
    struct _GUID DeviceGuid;
    ULONG UnsafeShutdownCount;
    ULONG64 PersistentMemorySizeInBytes;
    ULONG64 VolatileMemorySizeInBytes;
    ULONG64 TotalMemorySizeInBytes;
    ULONG SlotNumber;
    ULONG DeviceHandle;
    USHORT PhysicalId;
    UCHAR NumberOfFormatInterfaceCodes;
    USHORT FormatInterfaceCodes[8];
    ULONG VendorId;
    ULONG ProductId;
    ULONG SubsystemDeviceId;
    ULONG SubsystemVendorId;
    UCHAR ManufacturingLocation;
    UCHAR ManufacturingWeek;
    UCHAR ManufacturingYear;
    ULONG SerialNumber4Byte;
    ULONG SerialNumberLengthInChars;
    CHAR SerialNumber[1];
};

typedef struct _SCM_PD_DEVICE_SPECIFIC_INFO {
    ULONG Version;
    ULONG Size;
    ULONG NumberOfProperties;
    struct _SCM_PD_DEVICE_SPECIFIC_PROPERTY DeviceSpecificProperties[1];
};

typedef struct _SCM_PD_DEVICE_SPECIFIC_PROPERTY {
    WCHAR Name[128];
    LONG64 Value;
};

typedef struct _SCM_PD_FIRMWARE_ACTIVATE {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    UCHAR Slot;
};

typedef struct _SCM_PD_FIRMWARE_DOWNLOAD {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    UCHAR Slot;
    UCHAR Reserved[3];
    ULONG64 Offset;
    ULONG FirmwareImageSizeInBytes;
    UCHAR FirmwareImage[1];
};

typedef struct _SCM_PD_FIRMWARE_INFO {
    ULONG Version;
    ULONG Size;
    UCHAR ActiveSlot;
    UCHAR NextActiveSlot;
    UCHAR SlotCount;
    struct _SCM_PD_FIRMWARE_SLOT_INFO Slots[1];
};

typedef struct _SCM_PD_FIRMWARE_SLOT_INFO {
    ULONG Version;
    ULONG Size;
    UCHAR SlotNumber;
    UCHAR ReadOnly : 1;
    UCHAR Reserved0 : 7;
    UCHAR Reserved1[6];
    UCHAR Revision[32];
};

typedef struct _SCM_PD_HEALTH_NOTIFICATION_DATA {
    struct _GUID DeviceGuid;
};

typedef struct _SCM_PD_LOCATION_STRING {
    ULONG Version;
    ULONG Size;
    WCHAR Location[1];
};

typedef struct _SCM_PD_MANAGEMENT_STATUS {
    ULONG Version;
    ULONG Size;
    enum _SCM_PD_HEALTH_STATUS Health;
    ULONG NumberOfOperationalStatus;
    ULONG NumberOfAdditionalReasons;
    enum _SCM_PD_OPERATIONAL_STATUS OperationalStatus[16];
    enum _SCM_PD_OPERATIONAL_STATUS_REASON AdditionalReasons[1];
};

typedef struct _SCM_PD_PASSTHROUGH_INPUT {
    ULONG Version;
    ULONG Size;
    struct _GUID ProtocolGuid;
    ULONG DataSize;
    UCHAR Data[1];
};

typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_INPUT {
    ULONG Opcode;
    ULONG OpcodeParametersLength;
    UCHAR OpcodeParameters[1];
};

typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_OUTPUT {
    USHORT GeneralStatus;
    USHORT ExtendedStatus;
    ULONG OutputDataLength;
    UCHAR OutputData[1];
};

typedef struct _SCM_PD_PASSTHROUGH_OUTPUT {
    ULONG Version;
    ULONG Size;
    struct _GUID ProtocolGuid;
    ULONG DataSize;
    UCHAR Data[1];
};

typedef struct _SCM_PD_PROPERTY_QUERY {
    ULONG Version;
    ULONG Size;
    enum _SCM_PD_PROPERTY_ID PropertyId;
    enum _SCM_PD_QUERY_TYPE QueryType;
    UCHAR AdditionalParameters[1];
};

typedef struct _SCM_PD_REINITIALIZE_MEDIA_INPUT {
    ULONG Version;
    ULONG Size;
     <unnamed-type-Options>;
    struct {
        ULONG Overwrite : 1;
    } Options;
};

typedef struct _SCM_PD_REINITIALIZE_MEDIA_OUTPUT {
    ULONG Version;
    ULONG Size;
    enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS Status;
};

typedef struct _SCM_PHYSICAL_DEVICES {
    ULONG Version;
    ULONG Size;
    ULONG DeviceCount;
    struct _SCM_PHYSICAL_DEVICE_INSTANCE Devices[1];
};

typedef struct _SCM_PHYSICAL_DEVICE_INSTANCE {
    ULONG Version;
    ULONG Size;
    ULONG NfitHandle;
    WCHAR SymbolicLink[256];
};

typedef struct _SCM_REGION {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG NfitHandle;
    struct _GUID LogicalDeviceGuid;
    struct _GUID AddressRangeType;
    ULONG AssociatedId;
    ULONG64 Length;
    ULONG64 StartingDPA;
    ULONG64 BaseSPA;
    ULONG64 SPAOffset;
    ULONG64 RegionOffset;
};

typedef struct _SCM_REGIONS {
    ULONG Version;
    ULONG Size;
    ULONG RegionCount;
    struct _SCM_REGION Regions[1];
};

typedef struct _SCONTEXT_QUEUE {
    ULONG NumberOfObjects;
    struct {
        PVOID pad[2];
        PVOID userContext;
    } **ArrayOfObjects;
};

typedef struct _SCOPE_TABLE_AMD64 {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCOPE_TABLE_ARM {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCOPE_TABLE_ARM64 {
    ULONG Count;
     <unnamed-type-ScopeRecord>;
    struct {
        ULONG BeginAddress;
        ULONG EndAddress;
        ULONG HandlerAddress;
        ULONG JumpTarget;
    } ScopeRecord[1];
};

typedef struct _SCRUB_DATA_INPUT {
    ULONG Size;
    ULONG Flags;
    ULONG MaximumIos;
    ULONG ObjectId[4];
    ULONG Reserved[25];
    UCHAR ResumeContext[816];
};

typedef struct _SCRUB_DATA_OUTPUT {
    ULONG Size;
    ULONG Flags;
    ULONG Status;
    ULONG64 ErrorFileOffset;
    ULONG64 ErrorLength;
    ULONG64 NumberOfBytesRepaired;
    ULONG64 NumberOfBytesFailed;
    ULONG64 InternalFileReference;
    USHORT ResumeContextLength;
    USHORT ParityExtentDataOffset;
    ULONG Reserved[9];
    ULONG64 NumberOfMetadataBytesProcessed;
    ULONG64 NumberOfDataBytesProcessed;
    ULONG64 TotalNumberOfMetadataBytesInUse;
    ULONG64 TotalNumberOfDataBytesInUse;
    UCHAR ResumeContext[816];
};

typedef struct _SCRUB_PARITY_EXTENT {
    LONG64 Offset;
    ULONG64 Length;
};

typedef struct _SCRUB_PARITY_EXTENT_DATA {
    USHORT Size;
    USHORT Flags;
    USHORT NumberOfParityExtents;
    USHORT MaximumNumberOfParityExtents;
    struct _SCRUB_PARITY_EXTENT ParityExtents[1];
};

typedef struct _SC_ACTION {
    enum _SC_ACTION_TYPE Type;
    ULONG Delay;
};

typedef struct _SC_NOTIFICATION_REGISTRATION {
};

typedef struct _SD_CHANGE_MACHINE_SID_INPUT {
    USHORT CurrentMachineSIDOffset;
    USHORT CurrentMachineSIDLength;
    USHORT NewMachineSIDOffset;
    USHORT NewMachineSIDLength;
};

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT {
    ULONG64 NumSDChangedSuccess;
    ULONG64 NumSDChangedFail;
    ULONG64 NumSDUnused;
    ULONG64 NumSDTotal;
    ULONG64 NumMftSDChangedSuccess;
    ULONG64 NumMftSDChangedFail;
    ULONG64 NumMftSDTotal;
};

typedef struct _SD_ENUM_SDS_ENTRY {
    ULONG Hash;
    ULONG SecurityId;
    ULONG64 Offset;
    ULONG Length;
    UCHAR Descriptor[1];
};

typedef struct _SD_ENUM_SDS_INPUT {
    ULONG64 StartingOffset;
    ULONG64 MaxSDEntriesToReturn;
};

typedef struct _SD_ENUM_SDS_OUTPUT {
    ULONG64 NextOffset;
    ULONG64 NumSDEntriesReturned;
    ULONG64 NumSDBytesReturned;
    struct _SD_ENUM_SDS_ENTRY SDEntry[1];
};

typedef struct _SD_GLOBAL_CHANGE_INPUT {
    ULONG Flags;
    ULONG ChangeType;
    struct _SD_CHANGE_MACHINE_SID_INPUT SdChange;
    struct _SD_QUERY_STATS_INPUT SdQueryStats;
    struct _SD_ENUM_SDS_INPUT SdEnumSds;
};

typedef struct _SD_GLOBAL_CHANGE_OUTPUT {
    ULONG Flags;
    ULONG ChangeType;
    struct _SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
    struct _SD_QUERY_STATS_OUTPUT SdQueryStats;
    struct _SD_ENUM_SDS_OUTPUT SdEnumSds;
};

typedef struct _SD_QUERY_STATS_INPUT {
    ULONG Reserved;
};

typedef struct _SD_QUERY_STATS_OUTPUT {
    ULONG64 SdsStreamSize;
    ULONG64 SdsAllocationSize;
    ULONG64 SiiStreamSize;
    ULONG64 SiiAllocationSize;
    ULONG64 SdhStreamSize;
    ULONG64 SdhAllocationSize;
    ULONG64 NumSDTotal;
    ULONG64 NumSDUnused;
};

typedef struct _SD_VCBIND {
    CHAR VirtualName[8];
    USHORT VirtualClass;
    ULONG Flags;
};

typedef struct _SECTIONBASICINFO {
    PVOID BaseAddress;
    ULONG AllocationAttributes;
    union _LARGE_INTEGER MaximumSize;
};

typedef struct _SECTION_IMAGE_INFORMATION {
    PVOID TransferAddress;
    ULONG ZeroBits;
    ULONG64 MaximumStackSize;
    ULONG64 CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlusNativeReady : 1;
    UCHAR ComPlusILOnly : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR ImageMappedFlat : 1;
    UCHAR BaseBelow4gb : 1;
    UCHAR ComPlusPrefer32bit : 1;
    UCHAR Reserved : 2;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_IMAGE_INFORMATION32 {
    ULONG TransferAddress;
    ULONG ZeroBits;
    ULONG MaximumStackSize;
    ULONG CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlus : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR Reserved : 6;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_IMAGE_INFORMATION64 {
    ULONG64 TransferAddress;
    ULONG ZeroBits;
    ULONG64 MaximumStackSize;
    ULONG64 CommittedStackSize;
    ULONG SubSystemType;
    USHORT SubSystemMinorVersion;
    USHORT SubSystemMajorVersion;
    ULONG SubSystemVersion;
    USHORT MajorOperatingSystemVersion;
    USHORT MinorOperatingSystemVersion;
    ULONG OperatingSystemVersion;
    USHORT ImageCharacteristics;
    USHORT DllCharacteristics;
    USHORT Machine;
    UCHAR ImageContainsCode;
    UCHAR ImageFlags;
    UCHAR ComPlus : 1;
    UCHAR ImageDynamicallyRelocated : 1;
    UCHAR Reserved : 6;
    ULONG LoaderFlags;
    ULONG ImageFileSize;
    ULONG CheckSum;
};

typedef struct _SECTION_INTERNAL_IMAGE_INFORMATION {
    struct _SECTION_IMAGE_INFORMATION SectionInformation;
    ULONG ExtendedFlags;
    ULONG ImageExportSuppressionEnabled : 1;
    ULONG Reserved : 31;
};

typedef struct _SECURITY_ATTRIBUTES {
    ULONG nLength;
    PVOID lpSecurityDescriptor;
    LONG bInheritHandle;
};

typedef struct _SECURITY_CAPABILITIES {
    PVOID AppContainerSid;
    struct _SID_AND_ATTRIBUTES *Capabilities;
    ULONG CapabilityCount;
    ULONG Reserved;
};

typedef struct _SECURITY_DESCRIPTOR {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    PVOID Owner;
    PVOID Group;
    struct _ACL *Sacl;
    struct _ACL *Dacl;
};

typedef struct _SECURITY_DESCRIPTOR_RELATIVE {
    UCHAR Revision;
    UCHAR Sbz1;
    USHORT Control;
    ULONG Owner;
    ULONG Group;
    ULONG Sacl;
    ULONG Dacl;
};

typedef struct _SECURITY_LOGON_SESSION_DATA {
    ULONG Size;
    struct _LUID LogonId;
    struct _UNICODE_STRING UserName;
    struct _UNICODE_STRING LogonDomain;
    struct _UNICODE_STRING AuthenticationPackage;
    ULONG LogonType;
    ULONG Session;
    PVOID Sid;
    union _LARGE_INTEGER LogonTime;
    struct _UNICODE_STRING LogonServer;
    struct _UNICODE_STRING DnsDomainName;
    struct _UNICODE_STRING Upn;
    ULONG UserFlags;
    struct _LSA_LAST_INTER_LOGON_INFO LastLogonInfo;
    struct _UNICODE_STRING LogonScript;
    struct _UNICODE_STRING ProfilePath;
    struct _UNICODE_STRING HomeDirectory;
    struct _UNICODE_STRING HomeDirectoryDrive;
    union _LARGE_INTEGER LogoffTime;
    union _LARGE_INTEGER KickOffTime;
    union _LARGE_INTEGER PasswordLastSet;
    union _LARGE_INTEGER PasswordCanChange;
    union _LARGE_INTEGER PasswordMustChange;
};

typedef struct _SECURITY_OBJECT_AI_PARAMS {
    ULONG Size;
    ULONG ConstraintMask;
};

typedef struct _SECURITY_QUALITY_OF_SERVICE {
    ULONG Length;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    UCHAR ContextTrackingMode;
    UCHAR EffectiveOnly;
};

typedef struct _SECURITY_SEED_AND_LENGTH {
    UCHAR Length;
    UCHAR Seed;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A {
    PUCHAR User;
    ULONG UserLength;
    PUCHAR Domain;
    ULONG DomainLength;
    PUCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_W {
    PWCHAR User;
    ULONG UserLength;
    PWCHAR Domain;
    ULONG DomainLength;
    PWCHAR Password;
    ULONG PasswordLength;
    ULONG Flags;
};

typedef struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION {
    ULONG64 SegmentReserveSize;
    ULONG64 SegmentCommitSize;
    ULONG64 SegmentCount;
    ULONG64 AllocatedSize;
    ULONG64 LargeAllocReserveSize;
    ULONG64 LargeAllocCommitSize;
};

typedef struct _SEMAPHORE_BASIC_INFORMATION {
    LONG CurrentCount;
    LONG MaximumCount;
};

typedef struct _SENDCMDINPARAMS {
    ULONG cBufferSize;
    struct _IDEREGS irDriveRegs;
    UCHAR bDriveNumber;
    UCHAR bReserved[3];
    ULONG dwReserved[4];
    UCHAR bBuffer[1];
};

typedef struct _SENDCMDOUTPARAMS {
    ULONG cBufferSize;
    struct _DRIVERSTATUS DriverStatus;
    UCHAR bBuffer[1];
};

typedef struct _SERVERSILO_BASIC_INFORMATION {
    ULONG ServiceSessionId;
    enum _SERVERSILO_STATE State;
    LONG ExitStatus;
};

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA {
    ULONG dwReason;
    PCHAR pszComment;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW {
    ULONG dwReason;
    PWCHAR pszComment;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM {
     <unnamed-type-u>;
    union {
        struct SERVICE_TRIGGER_CUSTOM_STATE_ID CustomStateId;
         <unnamed-type-s>;
        struct {
            ULONG DataOffset;
            UCHAR Data[1];
        } s;
    } u;
};

typedef struct _SERVICE_DELAYED_AUTO_START_INFO {
    LONG fDelayedAutostart;
};

typedef struct _SERVICE_DESCRIPTIONA {
    PCHAR lpDescription;
};

typedef struct _SERVICE_DESCRIPTIONW {
    PWCHAR lpDescription;
};

typedef struct _SERVICE_FAILURE_ACTIONSA {
    ULONG dwResetPeriod;
    PCHAR lpRebootMsg;
    PCHAR lpCommand;
    ULONG cActions;
    struct _SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_FAILURE_ACTIONSW {
    ULONG dwResetPeriod;
    PWCHAR lpRebootMsg;
    PWCHAR lpCommand;
    ULONG cActions;
    struct _SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG {
    LONG fFailureActionsOnNonCrashFailures;
};

typedef struct _SERVICE_LAUNCH_PROTECTED_INFO {
    ULONG dwLaunchProtected;
};

typedef struct _SERVICE_NOTIFY_1 {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_NOTIFY_2A {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
    ULONG dwNotificationTriggered;
    PCHAR pszServiceNames;
};

typedef struct _SERVICE_NOTIFY_2W {
    ULONG dwVersion;
    PVOID pfnNotifyCallback;
    PVOID pContext;
    ULONG dwNotificationStatus;
    struct _SERVICE_STATUS_PROCESS ServiceStatus;
    ULONG dwNotificationTriggered;
    PWCHAR pszServiceNames;
};

typedef struct _SERVICE_PREFERRED_NODE_INFO {
    USHORT usPreferredNode;
    UCHAR fDelete;
};

typedef struct _SERVICE_PRESHUTDOWN_INFO {
    ULONG dwPreshutdownTimeout;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA {
    PCHAR pmszRequiredPrivileges;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW {
    PWCHAR pmszRequiredPrivileges;
};

typedef struct _SERVICE_SID_INFO {
    ULONG dwServiceSidType;
};

typedef struct _SERVICE_START_REASON {
    ULONG dwReason;
};

typedef struct _SERVICE_STATUS {
    ULONG dwServiceType;
    ULONG dwCurrentState;
    ULONG dwControlsAccepted;
    ULONG dwWin32ExitCode;
    ULONG dwServiceSpecificExitCode;
    ULONG dwCheckPoint;
    ULONG dwWaitHint;
};

typedef struct _SERVICE_STATUS_PROCESS {
    ULONG dwServiceType;
    ULONG dwCurrentState;
    ULONG dwControlsAccepted;
    ULONG dwWin32ExitCode;
    ULONG dwServiceSpecificExitCode;
    ULONG dwCheckPoint;
    ULONG dwWaitHint;
    ULONG dwProcessId;
    ULONG dwServiceFlags;
};

typedef struct _SERVICE_TABLE_ENTRYA {
    PCHAR lpServiceName;
    PVOID lpServiceProc;
};

typedef struct _SERVICE_TABLE_ENTRYW {
    PWCHAR lpServiceName;
    PVOID lpServiceProc;
};

typedef struct _SERVICE_TIMECHANGE_INFO {
    union _LARGE_INTEGER liNewTime;
    union _LARGE_INTEGER liOldTime;
};

typedef struct _SERVICE_TRIGGER {
    ULONG dwTriggerType;
    ULONG dwAction;
    struct _GUID *pTriggerSubtype;
    ULONG cDataItems;
    struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM *pDataItems;
};

typedef struct _SERVICE_TRIGGER_INFO {
    ULONG cTriggers;
    struct _SERVICE_TRIGGER *pTriggers;
    PUCHAR pReserved;
};

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM {
    ULONG dwDataType;
    ULONG cbData;
    PUCHAR pData;
};

typedef struct _SESSIONDATAW {
    ULONG SessionId;
    enum _WINSTATIONSTATECLASS State;
    ULONG Source;
    UCHAR bFullDesktop;
    struct _GUID SessionType;
    WCHAR WinStationName[33];
    struct _PROTOCOLSTATUS ProtocolStatus;
};

typedef struct _SESSIONIDA {
    ULONG SessionId;
    ULONG LogonId;
    CHAR WinStationName[33];
    enum _WINSTATIONSTATECLASS State;
};

typedef struct _SESSIONIDW {
    ULONG SessionId;
    ULONG LogonId;
    WCHAR WinStationName[33];
    enum _WINSTATIONSTATECLASS State;
};

typedef struct _SESSION_ARBITRATION_INFO {
    ULONG ArbitratedSessionId;
    ULONG Action;
    ULONG Flags;
    ULONG NumberOfSession;
    ULONG ExistingSessions[1];
};

typedef struct _SESSION_BUFFER {
    UCHAR lsn;
    UCHAR state;
    UCHAR local_name[16];
    UCHAR remote_name[16];
    UCHAR rcvs_outstanding;
    UCHAR sends_outstanding;
};

typedef struct _SESSION_HEADER {
    UCHAR sess_name;
    UCHAR num_sess;
    UCHAR rcv_dg_outstanding;
    UCHAR rcv_any_outstanding;
};

typedef struct _SETJMP_FLOAT128 {
    ULONG64 Part[2];
};

typedef struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT {
    ULONG Flags;
    ULONG AlignmentShift;
    ULONG64 FileOffsetToAlign;
    ULONG FallbackAlignmentShift;
};

typedef struct _SET_DISK_ATTRIBUTES {
    ULONG Version;
    UCHAR Persist;
    UCHAR Reserved1[3];
    ULONG64 Attributes;
    ULONG64 AttributesMask;
    ULONG Reserved2[4];
};

typedef struct _SET_PARTITION_INFORMATION {
    UCHAR PartitionType;
};

typedef struct _SET_PARTITION_INFORMATION_EX {
    enum _PARTITION_STYLE PartitionStyle;
    struct _SET_PARTITION_INFORMATION Mbr;
    struct _PARTITION_INFORMATION_GPT Gpt;
};

typedef struct _SET_PURGE_FAILURE_MODE_INPUT {
    ULONG Flags;
};

typedef struct _SE_ACCESS_REPLY {
    ULONG Size;
    ULONG ResultListCount;
    PULONG GrantedAccess;
    PLONG AccessStatus;
    struct _ACCESS_REASONS *AccessReason;
    struct _PRIVILEGE_SET **Privileges;
};

typedef struct _SE_ACCESS_REQUEST {
    ULONG Size;
    struct _SE_SECURITY_DESCRIPTOR *SeSecurityDescriptor;
    ULONG DesiredAccess;
    ULONG PreviouslyGrantedAccess;
    PVOID PrincipalSelfSid;
    struct _GENERIC_MAPPING *GenericMapping;
    ULONG ObjectTypeListCount;
    struct _OBJECT_TYPE_LIST *ObjectTypeList;
};

typedef struct _SE_ADT_ACCESS_REASON {
    ULONG AccessMask;
    ULONG AccessReasons[32];
    ULONG ObjectTypeIndex;
    ULONG AccessGranted;
    PVOID SecurityDescriptor;
};

typedef struct _SE_ADT_CLAIMS {
    ULONG Length;
    PVOID Claims;
};

typedef struct _SE_ADT_OBJECT_TYPE {
    struct _GUID ObjectType;
    USHORT Flags;
    USHORT Level;
    ULONG AccessMask;
};

typedef struct _SE_ADT_PARAMETER_ARRAY {
    ULONG CategoryId;
    ULONG AuditId;
    ULONG ParameterCount;
    ULONG Length;
    USHORT FlatSubCategoryId;
    USHORT Type;
    ULONG Flags;
    struct _SE_ADT_PARAMETER_ARRAY_ENTRY Parameters[32];
};

typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY {
    enum _SE_ADT_PARAMETER_TYPE Type;
    ULONG Length;
    ULONG64 Data[2];
    PVOID Address;
};

typedef struct _SE_ADT_PARAMETER_ARRAY_EX {
    ULONG CategoryId;
    ULONG AuditId;
    ULONG Version;
    ULONG ParameterCount;
    ULONG Length;
    USHORT FlatSubCategoryId;
    USHORT Type;
    ULONG Flags;
    struct _SE_ADT_PARAMETER_ARRAY_ENTRY Parameters[32];
};

typedef struct _SE_AUDIT_INFO {
    ULONG Size;
    enum _AUDIT_EVENT_TYPE AuditType;
    enum _SE_AUDIT_OPERATION AuditOperation;
    ULONG AuditFlags;
    struct _UNICODE_STRING SubsystemName;
    struct _UNICODE_STRING ObjectTypeName;
    struct _UNICODE_STRING ObjectName;
    PVOID HandleId;
    struct _GUID *TransactionId;
    struct _LUID *OperationId;
    UCHAR ObjectCreation;
    UCHAR GenerateOnClose;
};

typedef struct _SE_IMPERSONATION_STATE {
    PVOID Token;
    UCHAR CopyOnOpen;
    UCHAR EffectiveOnly;
    enum _SECURITY_IMPERSONATION_LEVEL Level;
};

typedef struct _SE_LEARNING_MODE_USER_OBJECT_DATA {
    ULONG Cookie;
    struct _UNICODE_STRING *ObjectType;
    struct _UNICODE_STRING *ObjectName;
};

typedef struct _SE_PACKAGE_CAPABILITY_INFO {
    ULONG Remaining;
    ULONG PackageGrantedAccess;
    ULONG CapabilityGrantedAccess;
    ULONG UserGroupsRemaining;
    ULONG AllAppPackagesSkippedAccess;
    UCHAR PackagesPresent;
    UCHAR PackageMatch;
    UCHAR CapabilityMatch;
    UCHAR LogPermissiveFailure;
    UCHAR AllAppPackagesSkipped;
};

typedef struct _SE_SECURITY_DESCRIPTOR {
    ULONG Size;
    ULONG Flags;
    PVOID SecurityDescriptor;
};

typedef struct _SE_SET_FILE_CACHE_INFORMATION {
    ULONG Size;
    struct _UNICODE_STRING CatalogDirectoryPath;
};

typedef struct _SE_TOKEN_USER {
    struct _TOKEN_USER TokenUser;
    struct _SID_AND_ATTRIBUTES User;
    struct _SID Sid;
    UCHAR Buffer[68];
};

typedef struct _SFVM_HELPTOPIC_DATA {
    WCHAR wszHelpFile[260];
    WCHAR wszHelpTopic[260];
};

typedef struct _SFVM_PROPPAGE_DATA {
    ULONG dwReserved;
    PLONG pfn;
    LONG64 lParam;
};

typedef struct _SFV_CREATE {
    ULONG cbSize;
    struct IShellFolder *pshf;
    struct IShellView *psvOuter;
    struct IShellFolderViewCB *psfvcb;
};

typedef struct _SHAKETHRESHOLD {
    DOUBLE timeout;
    DOUBLE triggerTimeout;
    DOUBLE inSpeed;
    DOUBLE outSpeed;
    DOUBLE angle;
    DOUBLE minLength;
    DOUBLE maxLength;
    DOUBLE ratio;
    DOUBLE maxTime;
    ULONG shake;
};

typedef struct _SHARED_VIRTUAL_DISK_SUPPORT {
    enum _SharedVirtualDiskSupportType SharedVirtualDiskSupport;
    enum _SharedVirtualDiskHandleState HandleState;
};

typedef struct _SHCREATEPROCESSINFOW {
    ULONG cbSize;
    ULONG fMask;
    struct HWND__ *hwnd;
    PWCHAR pszFile;
    PWCHAR pszParameters;
    PWCHAR pszCurrentDirectory;
    PVOID hUserToken;
    struct _SECURITY_ATTRIBUTES *lpProcessAttributes;
    struct _SECURITY_ATTRIBUTES *lpThreadAttributes;
    LONG bInheritHandles;
    ULONG dwCreationFlags;
    struct _STARTUPINFOW *lpStartupInfo;
    struct _PROCESS_INFORMATION *lpProcessInformation;
};

typedef struct _SHChangeDWORDAsIDList {
    USHORT cb;
    ULONG dwItem1;
    ULONG dwItem2;
    USHORT cbZero;
};

typedef struct _SHChangeMenuAsIDList {
    USHORT cb;
    ULONG dwItem1;
    LONG64 pSender;
    ULONG dwProcessID;
    USHORT cbZero;
};

typedef struct _SHChangeNotifyEntry {
    struct _ITEMIDLIST *pidl;
    LONG fRecursive;
};

typedef struct _SHChangeUpdateImageIDList {
    USHORT cb;
    LONG iIconIndex;
    LONG iCurIndex;
    ULONG uFlags;
    ULONG dwProcessID;
    WCHAR szName[260];
    USHORT cbZero;
};

typedef struct _SHDESCRIPTIONID {
    ULONG dwDescriptionId;
    struct _GUID clsid;
};

typedef struct _SHDRC {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct _SHELLDETAILS {
    LONG fmt;
    LONG cxChar;
    struct _STRRET str;
};

typedef struct _SHELLEXECUTEINFOA {
    ULONG cbSize;
    ULONG fMask;
    struct HWND__ *hwnd;
    PCHAR lpVerb;
    PCHAR lpFile;
    PCHAR lpParameters;
    PCHAR lpDirectory;
    LONG nShow;
    struct HINSTANCE__ *hInstApp;
    PVOID lpIDList;
    PCHAR lpClass;
    struct HKEY__ *hkeyClass;
    ULONG dwHotKey;
    PVOID hIcon;
    PVOID hMonitor;
    PVOID hProcess;
};

typedef struct _SHELLEXECUTEINFOW {
    ULONG cbSize;
    ULONG fMask;
    struct HWND__ *hwnd;
    PWCHAR lpVerb;
    PWCHAR lpFile;
    PWCHAR lpParameters;
    PWCHAR lpDirectory;
    LONG nShow;
    struct HINSTANCE__ *hInstApp;
    PVOID lpIDList;
    PWCHAR lpClass;
    struct HKEY__ *hkeyClass;
    ULONG dwHotKey;
    PVOID hIcon;
    PVOID hMonitor;
    PVOID hProcess;
};

typedef struct _SHELL_WINDOWMANAGEMENT_CALLOUT_INFO {
    struct HWND__ *hwnd;
    enum SHELL_WINDOWMANAGEMENT_CALLOUT_MSG_ID msg;
     <unnamed-type-data>;
    union {
        struct _WINDOW_ARRANGEMENT_INFO arrangementInfo;
        struct _SHOW_WINDOW_INFO showWindowInfo;
        struct tagWINDOW_SIZE_STARTING sizeStartingInfo;
    } data;
};

typedef struct _SHELL_WINDOWMANAGEMENT_NOTIFY_INFO {
    struct HWND__ *hwnd;
    enum SHELL_WINDOWMANAGEMENT_NOTIFY_MSG_ID msg;
     <unnamed-type-data>;
    union {
        struct tagSHELL_WND_MGMT_SIMPLE_PAYLOAD simplePayload;
        struct tagSHELL_TRACKED_WINDOW_POS_CHANGED posChanged;
        struct tagSHELL_TRACKED_WINDOW_TRACKING_INFO trackingInfo;
        struct tagSHELL_INPUT_USAGE_DATA_INFO inputUsage;
        struct tagGROUP_WINDOW_TEMPLATE_APPLIED windowTemplated;
    } data;
};

typedef struct _SHFILEINFOA {
    struct HICON__ *hIcon;
    LONG iIcon;
    ULONG dwAttributes;
    CHAR szDisplayName[260];
    CHAR szTypeName[80];
};

typedef struct _SHFILEINFOW {
    struct HICON__ *hIcon;
    LONG iIcon;
    ULONG dwAttributes;
    WCHAR szDisplayName[260];
    WCHAR szTypeName[80];
};

typedef struct _SHFILEOPSTRUCTA {
    struct HWND__ *hwnd;
    ULONG wFunc;
    PCHAR pFrom;
    PCHAR pTo;
    USHORT fFlags;
    LONG fAnyOperationsAborted;
    PVOID hNameMappings;
    PCHAR lpszProgressTitle;
};

typedef struct _SHFILEOPSTRUCTW {
    struct HWND__ *hwnd;
    ULONG wFunc;
    PWCHAR pFrom;
    PWCHAR pTo;
    USHORT fFlags;
    LONG fAnyOperationsAborted;
    PVOID hNameMappings;
    PWCHAR lpszProgressTitle;
};

typedef struct _SHITEMID {
    USHORT cb;
    UCHAR abID[1];
};

typedef struct _SHNAMEMAPPINGA {
    PCHAR pszOldPath;
    PCHAR pszNewPath;
    LONG cchOldPath;
    LONG cchNewPath;
};

typedef struct _SHNAMEMAPPINGW {
    PWCHAR pszOldPath;
    PWCHAR pszNewPath;
    LONG cchOldPath;
    LONG cchNewPath;
};

typedef struct _SHORT_SIZEDARR {
    ULONG clSize;
    PWCHAR pData;
};

typedef struct _SHOW_WINDOW_INFO {
    ULONG showCommand;
    enum SHELL_SPECIFIED_SHOW_COMMAND shellShowCommand;
    struct tagRECT rcArrangeAt;
    ULONG groupId;
};

typedef struct _SHQUERYRBINFO {
    ULONG cbSize;
    LONG64 i64Size;
    LONG64 i64NumItems;
};

typedef struct _SHRINK_VOLUME_INFORMATION {
    enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
    ULONG64 Flags;
    LONG64 NewNumberOfSectors;
};

typedef struct _SHSTOCKICONINFO {
    ULONG cbSize;
    struct HICON__ *hIcon;
    LONG iSysImageIndex;
    LONG iIcon;
    WCHAR szPath[260];
};

typedef struct _SHUFFLE_FILE_DATA {
    LONG64 StartingOffset;
    LONG64 Length;
    ULONG Flags;
};

typedef struct _SHUTDOWN_REASON {
    ULONG cbSize;
    ULONG uFlags;
    ULONG dwReasonCode;
    ULONG dwEventType;
    LONG fShutdownCancelled;
    PWCHAR lpszComment;
};

typedef struct _SHUTDOWN_REASON_EX {
    ULONG cbSize;
    ULONG uFlags;
    ULONG dwReasonCode;
    ULONG dwEventType;
    LONG fShutdownCancelled;
    PWCHAR lpszComment;
    PWCHAR lpszClientHint;
    PWCHAR lpszClientAddress;
};

typedef struct _SID {
    UCHAR Revision;
    UCHAR SubAuthorityCount;
    struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    ULONG SubAuthority[1];
};

typedef struct _SID_AND_ATTRIBUTES {
    PVOID Sid;
    ULONG Attributes;
};

typedef struct _SID_AND_ATTRIBUTES_HASH {
    ULONG SidCount;
    struct _SID_AND_ATTRIBUTES *SidAttr;
    ULONG64 Hash[32];
};

typedef struct _SID_IDENTIFIER_AUTHORITY {
    UCHAR Value[6];
};

typedef struct _SILOOBJECT_BASIC_INFORMATION {
    ULONG SiloId;
    ULONG SiloParentId;
    ULONG NumberOfProcesses;
    UCHAR IsInServerSilo;
    UCHAR Reserved[3];
};

typedef struct _SILOOBJECT_ROOT_DIRECTORY {
    ULONG ControlFlags;
    struct _UNICODE_STRING Path;
};

typedef struct _SILO_USER_SHARED_DATA {
    ULONG ServiceSessionId;
    ULONG ActiveConsoleId;
    LONG64 ConsoleSessionForegroundProcessId;
    enum _NT_PRODUCT_TYPE NtProductType;
    ULONG SuiteMask;
    ULONG SharedUserSessionId;
    UCHAR IsMultiSessionSku;
    WCHAR NtSystemRoot[260];
    USHORT UserModeGlobalLogger[16];
};

typedef struct _SIMPLEHAPTICCTRL_FEEDBACK_DATA {
    USHORT ordinal;
    LONG intensity;
    LONG playCount;
    LONG replayPauseInterval;
};

typedef struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY *Next;
};

typedef struct _SINGLE_LIST_ENTRY32 {
    ULONG Next;
};

typedef struct _SI_COPYFILE {
    ULONG SourceFileNameLength;
    ULONG DestinationFileNameLength;
    ULONG Flags;
    WCHAR FileNameBuffer[1];
};

typedef struct _SLICER_CAPTURE_PARAM {
    struct tagRECT rcCapture;
    ULONG cMaxFrames;
    ULONG cFramesToSkip;
};

typedef struct _SLICER_CAPTURE_RESULT {
    ULONG CaptureResult;
    LONG UpdateFromSysMem;
    ULONG cBits;
    PVOID hSectionBits;
    ULONG cFramesCaptured;
};

typedef struct _SLICER_SHARED_TEXTURE {
    struct _LUID AdapterLuid;
    struct HMONITOR__ *hmonAssoc;
    PVOID hDxSharedTexture;
    ULONG Flags;
};

typedef struct _SLICER_SHARED_TEXTURES {
    ULONG cSharedTextures;
    enum DXGI_FORMAT PixelFormat;
    ULONG Width;
    ULONG Height;
    struct _SLICER_SHARED_TEXTURE Textures[1];
};

typedef struct _SLIST_ENTRY {
    struct _SLIST_ENTRY *Next;
};

typedef struct _SL_APPX_CACHE {
    ULONG Version;
    ULONG Flags;
    ULONG DataSize;
    ULONG64 DataCheckSum;
    struct _SL_APPX_CACHE_VALUE_DESCRIPTOR Descriptors[1];
};

typedef struct _SL_APPX_CACHE_VALUE_DESCRIPTOR {
    UCHAR HashedName[32];
    ULONG64 Expiration;
    ULONG DataSize;
    UCHAR Data[1];
};

typedef struct _SL_HWID_DEVICE_INFO {
    ULONG SizeBytes;
    UCHAR Type;
    UCHAR DeviceRemovalPolicy;
    UCHAR AuthenticationStatus;
    UCHAR Disposition;
    ULONG DeviceNodeLevel;
    struct _GUID Guid;
    UCHAR Data[1];
};

typedef struct _SL_KMEM_CACHE {
    ULONG TotalSize;
    ULONG SizeOfData;
    ULONG SignatureSize;
    ULONG Flags;
    ULONG Version;
    struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
};

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR {
    USHORT Size;
    USHORT NameLength;
    USHORT Type;
    USHORT DataLength;
    ULONG Attributes;
    ULONG Reserved;
    WCHAR Name[1];
};

typedef struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
};

typedef struct _SPARSE_OVERALLOCATE_DATA {
    ULONG SparseOverAllocateSize;
};

typedef struct _SSLINFO {
    UCHAR bSecurityLayer;
    UCHAR bUserAuthentication;
    UCHAR rgbSSLCertificateSHA1Hash[20];
    enum _TS_CERT_TYPE CertType;
    WCHAR wszStoreName[128];
    UCHAR bAllowSecProtNegotiation;
};

typedef struct _SSL_ECCKEY_BLOB {
    ULONG dwCurveType;
    ULONG cbKey;
};

typedef struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    ULONG dwErrorLevel;
    ULONG dwErrorCategory;
    ULONG dwReserved;
    WCHAR wszErrorText[256];
};

typedef struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwReserved;
    PWCHAR pwszServerName;
    PCHAR rgpszHpkpValue[2];
};

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA {
    ULONG cbSize;
    ULONG dwReserved;
    PWCHAR pwszServerName;
};

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS {
    ULONG cbSize;
    LONG lError;
    WCHAR wszErrorText[512];
};

typedef struct _STARTUPINFOA {
    ULONG cb;
    PCHAR lpReserved;
    PCHAR lpDesktop;
    PCHAR lpTitle;
    ULONG dwX;
    ULONG dwY;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwXCountChars;
    ULONG dwYCountChars;
    ULONG dwFillAttribute;
    ULONG dwFlags;
    USHORT wShowWindow;
    USHORT cbReserved2;
    PUCHAR lpReserved2;
    PVOID hStdInput;
    PVOID hStdOutput;
    PVOID hStdError;
};

typedef struct _STARTUPINFOEXA {
    struct _STARTUPINFOA StartupInfo;
    struct _PROC_THREAD_ATTRIBUTE_LIST *lpAttributeList;
};

typedef struct _STARTUPINFOEXW {
    struct _STARTUPINFOW StartupInfo;
    struct _PROC_THREAD_ATTRIBUTE_LIST *lpAttributeList;
};

typedef struct _STARTUPINFOW {
    ULONG cb;
    PWCHAR lpReserved;
    PWCHAR lpDesktop;
    PWCHAR lpTitle;
    ULONG dwX;
    ULONG dwY;
    ULONG dwXSize;
    ULONG dwYSize;
    ULONG dwXCountChars;
    ULONG dwYCountChars;
    ULONG dwFillAttribute;
    ULONG dwFlags;
    USHORT wShowWindow;
    USHORT cbReserved2;
    PUCHAR lpReserved2;
    PVOID hStdInput;
    PVOID hStdOutput;
    PVOID hStdError;
};

typedef struct _STGMEDIUM_UNION {
    ULONG tymed;
     __MIDL_IAdviseSink_0003;
    union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG BytesPerCacheLine;
    ULONG BytesOffsetForCacheAlignment;
    ULONG BytesPerLogicalSector;
    ULONG BytesPerPhysicalSector;
    ULONG BytesOffsetForSectorAlignment;
};

typedef struct _STORAGE_ADAPTER_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG MaximumTransferLength;
    ULONG MaximumPhysicalPages;
    ULONG AlignmentMask;
    UCHAR AdapterUsesPio;
    UCHAR AdapterScansDown;
    UCHAR CommandQueueing;
    UCHAR AcceleratedTransfer;
    UCHAR BusType;
    USHORT BusMajorVersion;
    USHORT BusMinorVersion;
    UCHAR SrbType;
    UCHAR AddressType;
};

typedef struct _STORAGE_ADAPTER_SERIAL_NUMBER {
    ULONG Version;
    ULONG Size;
    WCHAR SerialNumber[128];
};

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT {
    ULONG Version;
    ULONG RequestsPerPeriod;
    ULONG Period;
    UCHAR RetryFailures;
    UCHAR Discardable;
    UCHAR Reserved1[2];
    ULONG AccessType;
    ULONG AccessMode;
};

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT {
    ULONG64 RequestSize;
    ULONG NumOutStandingRequests;
};

typedef struct _STORAGE_ATTRIBUTE_MGMT {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_ATTRIBUTE_MGMT_ACTION Action;
    ULONG Attribute;
};

typedef struct _STORAGE_BUS_RESET_REQUEST {
    UCHAR PathId;
};

typedef struct _STORAGE_COUNTER {
    enum _STORAGE_COUNTER_TYPE Type;
     <unnamed-type-Value>;
    union {
         <unnamed-type-ManufactureDate>;
        struct {
            ULONG Week;
            ULONG Year;
        } ManufactureDate;
        ULONG64 AsUlonglong;
    } Value;
};

typedef struct _STORAGE_COUNTERS {
    ULONG Version;
    ULONG Size;
    ULONG NumberOfCounters;
    struct _STORAGE_COUNTER Counters[1];
};

typedef struct _STORAGE_CRYPTO_CAPABILITY {
    ULONG Version;
    ULONG Size;
    ULONG CryptoCapabilityIndex;
    enum _STORAGE_CRYPTO_ALGORITHM_ID AlgorithmId;
    enum _STORAGE_CRYPTO_KEY_SIZE KeySize;
    ULONG DataUnitSizeBitmask;
};

typedef struct _STORAGE_CRYPTO_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG NumKeysSupported;
    ULONG NumCryptoCapabilities;
    struct _STORAGE_CRYPTO_CAPABILITY CryptoCapabilities[1];
};

typedef struct _STORAGE_DESCRIPTOR_HEADER {
    ULONG Version;
    ULONG Size;
};

typedef struct _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG64 Attributes;
};

typedef struct _STORAGE_DEVICE_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    UCHAR DeviceType;
    UCHAR DeviceTypeModifier;
    UCHAR RemovableMedia;
    UCHAR CommandQueueing;
    ULONG VendorIdOffset;
    ULONG ProductIdOffset;
    ULONG ProductRevisionOffset;
    ULONG SerialNumberOffset;
    enum _STORAGE_BUS_TYPE BusType;
    ULONG RawPropertiesLength;
    UCHAR RawDeviceProperties[1];
};

typedef struct _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG NumberOfFaultDomains;
    struct _GUID FaultDomainIds[1];
};

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG NumberOfIdentifiers;
    UCHAR Identifiers[1];
};

typedef struct _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG LunMaxIoCount;
    ULONG AdapterMaxIoCount;
};

typedef struct _STORAGE_DEVICE_LOCATION_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    struct _DEVICE_LOCATION Location;
    ULONG StringOffset;
};

typedef struct _STORAGE_DEVICE_MANAGEMENT_STATUS {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_DISK_HEALTH_STATUS Health;
    ULONG NumberOfOperationalStatus;
    ULONG NumberOfAdditionalReasons;
    enum _STORAGE_DISK_OPERATIONAL_STATUS OperationalStatus[16];
    struct _STORAGE_OPERATIONAL_REASON AdditionalReasons[1];
};

typedef struct _STORAGE_DEVICE_NUMA_PROPERTY {
    ULONG Version;
    ULONG Size;
    ULONG NumaNode;
};

typedef struct _STORAGE_DEVICE_NUMBER {
    ULONG DeviceType;
    ULONG DeviceNumber;
    ULONG PartitionNumber;
};

typedef struct _STORAGE_DEVICE_NUMBERS {
    ULONG NumberOfDevices;
    struct _STORAGE_DEVICE_NUMBER Devices[1];
};

typedef struct _STORAGE_DEVICE_NUMBER_EX {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG DeviceType;
    ULONG DeviceNumber;
    struct _GUID DeviceGuid;
    ULONG PartitionNumber;
};

typedef struct _STORAGE_DEVICE_POWER_CAP {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_DEVICE_POWER_CAP_UNITS Units;
    ULONG64 MaxPower;
};

typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG NameOffset;
    ULONG NumberOfLogicalCopies;
    ULONG NumberOfPhysicalCopies;
    ULONG PhysicalDiskRedundancy;
    ULONG NumberOfColumns;
    ULONG Interleave;
};

typedef struct _STORAGE_DEVICE_TIERING_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG TotalNumberOfTiers;
    ULONG NumberOfTiersReturned;
    struct _STORAGE_TIER Tiers[1];
};

typedef struct _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT {
    ULONG Version;
    ULONG Size;
    ULONG UnsafeShutdownCount;
};

typedef struct _STORAGE_DIAGNOSTIC_DATA {
    ULONG Version;
    ULONG Size;
    struct _GUID ProviderId;
    ULONG BufferSize;
    ULONG Reserved;
    UCHAR DiagnosticDataBuffer[1];
};

typedef struct _STORAGE_DIAGNOSTIC_REQUEST {
    ULONG Version;
    ULONG Size;
    ULONG Reserved;
    enum _STORAGE_DIAGNOSTIC_TARGET_TYPE TargetType;
    enum _STORAGE_DIAGNOSTIC_LEVEL Level;
};

typedef struct _STORAGE_EVENT_NOTIFICATION {
    ULONG Version;
    ULONG Size;
    ULONG64 Events;
};

typedef struct _STORAGE_FAILURE_PREDICTION_CONFIG {
    ULONG Version;
    ULONG Size;
    UCHAR Set;
    UCHAR Enabled;
    USHORT Reserved;
};

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT {
    ULONG MaximumRequestsPerPeriod;
    ULONG MinimumPeriod;
    ULONG64 MaximumRequestSize;
    ULONG EstimatedTimePerRequest;
    ULONG NumOutStandingRequests;
    ULONG64 RequestSize;
};

typedef struct _STORAGE_HOTPLUG_INFO {
    ULONG Size;
    UCHAR MediaRemovable;
    UCHAR MediaHotplug;
    UCHAR DeviceHotplug;
    UCHAR WriteCacheEnableOverride;
};

typedef struct _STORAGE_HW_FIRMWARE_ACTIVATE {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    UCHAR Slot;
    UCHAR Reserved0[3];
};

typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    UCHAR Slot;
    UCHAR Reserved[3];
    ULONG64 Offset;
    ULONG64 BufferSize;
    UCHAR ImageBuffer[1];
};

typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD_V2 {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    UCHAR Slot;
    UCHAR Reserved[3];
    ULONG64 Offset;
    ULONG64 BufferSize;
    ULONG ImageSize;
    ULONG Reserved2;
    UCHAR ImageBuffer[1];
};

typedef struct _STORAGE_HW_FIRMWARE_INFO {
    ULONG Version;
    ULONG Size;
    UCHAR SupportUpgrade : 1;
    UCHAR Reserved0 : 7;
    UCHAR SlotCount;
    UCHAR ActiveSlot;
    UCHAR PendingActivateSlot;
    UCHAR FirmwareShared;
    UCHAR Reserved[3];
    ULONG ImagePayloadAlignment;
    ULONG ImagePayloadMaxSize;
    struct _STORAGE_HW_FIRMWARE_SLOT_INFO Slot[1];
};

typedef struct _STORAGE_HW_FIRMWARE_INFO_QUERY {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG Reserved;
};

typedef struct _STORAGE_HW_FIRMWARE_SLOT_INFO {
    ULONG Version;
    ULONG Size;
    UCHAR SlotNumber;
    UCHAR ReadOnly : 1;
    UCHAR Reserved0 : 7;
    UCHAR Reserved1[6];
    UCHAR Revision[16];
};

typedef struct _STORAGE_IDENTIFIER {
    enum _STORAGE_IDENTIFIER_CODE_SET CodeSet;
    enum _STORAGE_IDENTIFIER_TYPE Type;
    USHORT IdentifierSize;
    USHORT NextOffset;
    enum _STORAGE_ASSOCIATION_TYPE Association;
    UCHAR Identifier[1];
};

typedef struct _STORAGE_IDLE_POWER {
    ULONG Version;
    ULONG Size;
    ULONG WakeCapableHint : 1;
    ULONG D3ColdSupported : 1;
    ULONG Reserved : 30;
    ULONG D3IdleTimeout;
};

typedef struct _STORAGE_IDLE_POWERUP_REASON {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_POWERUP_REASON_TYPE PowerupReason;
};

typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES {
    ULONG Size;
    ULONG Version;
    UCHAR AvailableMappingResourcesValid : 1;
    UCHAR UsedMappingResourcesValid : 1;
    UCHAR Reserved0 : 6;
    UCHAR Reserved1[3];
    UCHAR AvailableMappingResourcesScope : 2;
    UCHAR UsedMappingResourcesScope : 2;
    UCHAR Reserved2 : 4;
    UCHAR Reserved3[3];
    ULONG64 AvailableMappingResources;
    ULONG64 UsedMappingResources;
};

typedef struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA {
    USHORT Reserved;
    USHORT SerialNumberLength;
    UCHAR SerialNumber[0];
};

typedef struct _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG MediumProductType;
};

typedef struct _STORAGE_MINIPORT_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_PORT_CODE_SET Portdriver;
    UCHAR LUNResetSupported;
    UCHAR TargetResetSupported;
    USHORT IoTimeoutValue;
    UCHAR ExtraIoInfoSupported;
    UCHAR Reserved0[3];
    ULONG Reserved1;
};

typedef struct _STORAGE_OFFLOAD_READ_OUTPUT {
    ULONG OffloadReadFlags;
    ULONG Reserved;
    ULONG64 LengthProtected;
    ULONG TokenLength;
    struct _STORAGE_OFFLOAD_TOKEN Token;
};

typedef struct _STORAGE_OFFLOAD_TOKEN {
    UCHAR TokenType[4];
    UCHAR Reserved[2];
    UCHAR TokenIdLength[2];
    struct {
        UCHAR Reserved2[504];
    } StorageOffloadZeroDataToken;
    UCHAR Token[504];
};

typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT {
    ULONG OffloadWriteFlags;
    ULONG Reserved;
    ULONG64 LengthCopied;
};

typedef struct _STORAGE_OPERATIONAL_REASON {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_OPERATIONAL_STATUS_REASON Reason;
     <unnamed-type-RawBytes>;
    union {
         <unnamed-type-ScsiSenseKey>;
        struct {
            UCHAR SenseKey;
            UCHAR ASC;
            UCHAR ASCQ;
            UCHAR Reserved;
        } ScsiSenseKey;
         <unnamed-type-NVDIMM_N>;
        struct {
            UCHAR CriticalHealth;
            UCHAR ModuleHealth[2];
            UCHAR ErrorThresholdStatus;
        } NVDIMM_N;
        ULONG AsUlong;
    } RawBytes;
};

typedef struct _STORAGE_PHYSICAL_ADAPTER_DATA {
    ULONG AdapterId;
    enum _STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
    enum _STORAGE_PROTOCOL_TYPE CommandProtocol;
    union _STORAGE_SPEC_VERSION SpecVersion;
    UCHAR Vendor[8];
    UCHAR Model[40];
    UCHAR FirmwareRevision[16];
    UCHAR PhysicalLocation[32];
    UCHAR ExpanderConnected;
    UCHAR Reserved0[3];
    ULONG Reserved1[3];
};

typedef struct _STORAGE_PHYSICAL_DEVICE_DATA {
    ULONG DeviceId;
    ULONG Role;
    enum _STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
    enum _STORAGE_PROTOCOL_TYPE CommandProtocol;
    union _STORAGE_SPEC_VERSION SpecVersion;
    enum _STORAGE_DEVICE_FORM_FACTOR FormFactor;
    UCHAR Vendor[8];
    UCHAR Model[40];
    UCHAR FirmwareRevision[16];
    ULONG64 Capacity;
    UCHAR PhysicalLocation[32];
    ULONG Reserved[2];
};

typedef struct _STORAGE_PHYSICAL_NODE_DATA {
    ULONG NodeId;
    ULONG AdapterCount;
    ULONG AdapterDataLength;
    ULONG AdapterDataOffset;
    ULONG DeviceCount;
    ULONG DeviceDataLength;
    ULONG DeviceDataOffset;
    ULONG Reserved[3];
};

typedef struct _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG NodeCount;
    ULONG Reserved;
    struct _STORAGE_PHYSICAL_NODE_DATA Node[1];
};

typedef struct _STORAGE_PREDICT_FAILURE {
    ULONG PredictFailure;
    UCHAR VendorSpecific[512];
};

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT {
    ULONG SupportFlags;
};

typedef struct _STORAGE_PROPERTY_QUERY {
    enum _STORAGE_PROPERTY_ID PropertyId;
    enum _STORAGE_QUERY_TYPE QueryType;
    UCHAR AdditionalParameters[1];
};

typedef struct _STORAGE_PROTOCOL_COMMAND {
    ULONG Version;
    ULONG Length;
    enum _STORAGE_PROTOCOL_TYPE ProtocolType;
    ULONG Flags;
    ULONG ReturnStatus;
    ULONG ErrorCode;
    ULONG CommandLength;
    ULONG ErrorInfoLength;
    ULONG DataToDeviceTransferLength;
    ULONG DataFromDeviceTransferLength;
    ULONG TimeOutValue;
    ULONG ErrorInfoOffset;
    ULONG DataToDeviceBufferOffset;
    ULONG DataFromDeviceBufferOffset;
    ULONG CommandSpecific;
    ULONG Reserved0;
    ULONG FixedProtocolReturnData;
    ULONG Reserved1[3];
    UCHAR Command[1];
};

typedef struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    struct _STORAGE_PROTOCOL_SPECIFIC_DATA ProtocolSpecificData;
};

typedef struct _STORAGE_PROTOCOL_SPECIFIC_DATA {
    enum _STORAGE_PROTOCOL_TYPE ProtocolType;
    ULONG DataType;
    ULONG ProtocolDataRequestValue;
    ULONG ProtocolDataRequestSubValue;
    ULONG ProtocolDataOffset;
    ULONG ProtocolDataLength;
    ULONG FixedProtocolReturnData;
    ULONG ProtocolDataRequestSubValue2;
    ULONG Reserved[2];
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY {
    ULONG EntryLength;
    ULONG DependencyTypeFlags;
    ULONG ProviderSpecificFlags;
    struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY {
    ULONG EntryLength;
    ULONG DependencyTypeFlags;
    ULONG ProviderSpecificFlags;
    struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
    ULONG AncestorLevel;
    ULONG HostVolumeNameOffset;
    ULONG HostVolumeNameSize;
    ULONG DependentVolumeNameOffset;
    ULONG DependentVolumeNameSize;
    ULONG RelativePathOffset;
    ULONG RelativePathSize;
    ULONG DependentDeviceNameOffset;
    ULONG DependentDeviceNameSize;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST {
    ULONG RequestLevel;
    ULONG RequestFlags;
};

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE {
    ULONG ResponseLevel;
    ULONG NumberEntries;
    struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY Lev1Depends[0];
    struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY Lev2Depends[0];
};

typedef struct _STORAGE_READ_CAPACITY {
    ULONG Version;
    ULONG Size;
    ULONG BlockLength;
    union _LARGE_INTEGER NumberOfBlocks;
    union _LARGE_INTEGER DiskLength;
};

typedef struct _STORAGE_RESERVE_AREA_DEFINITION {
    enum _STORAGE_RESERVE_ID Id;
    ULONG Flags;
    LONG64 SpaceGuarantee;
};

typedef struct _STORAGE_RESERVE_AREA_INFO {
    enum _STORAGE_RESERVE_ID Id;
    ULONG Flags;
    LONG64 SpaceGuarantee;
    LONG64 SpaceUsed;
};

typedef struct _STORAGE_RPMB_DATA_FRAME {
    UCHAR Stuff[196];
    UCHAR KeyOrMAC[32];
    UCHAR Data[256];
    UCHAR Nonce[16];
    UCHAR WriteCounter[4];
    UCHAR Address[2];
    UCHAR BlockCount[2];
    UCHAR OperationResult[2];
    UCHAR RequestOrResponseType[2];
};

typedef struct _STORAGE_RPMB_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    ULONG SizeInBytes;
    ULONG MaxReliableWriteSizeInBytes;
    enum _STORAGE_RPMB_FRAME_TYPE FrameFormat;
};

typedef struct _STORAGE_TEMPERATURE_DATA_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    SHORT CriticalTemperature;
    SHORT WarningTemperature;
    USHORT InfoCount;
    UCHAR Reserved0[2];
    ULONG Reserved1[2];
    struct _STORAGE_TEMPERATURE_INFO TemperatureInfo[1];
};

typedef struct _STORAGE_TEMPERATURE_INFO {
    USHORT Index;
    SHORT Temperature;
    SHORT OverThreshold;
    SHORT UnderThreshold;
    UCHAR OverThresholdChangable;
    UCHAR UnderThresholdChangable;
    UCHAR EventGenerated;
    UCHAR Reserved0;
    ULONG Reserved1;
};

typedef struct _STORAGE_TEMPERATURE_THRESHOLD {
    ULONG Version;
    ULONG Size;
    USHORT Flags;
    USHORT Index;
    SHORT Threshold;
    UCHAR OverThreshold;
    UCHAR Reserved;
};

typedef struct _STORAGE_TIER {
    struct _GUID Id;
    WCHAR Name[256];
    WCHAR Description[256];
    ULONG64 Flags;
    ULONG64 ProvisionedCapacity;
    enum _STORAGE_TIER_MEDIA_TYPE MediaType;
    enum _STORAGE_TIER_CLASS Class;
};

typedef struct _STORAGE_TIER_REGION {
    struct _GUID TierId;
    ULONG64 Offset;
    ULONG64 Length;
};

typedef struct _STORAGE_WRITE_CACHE_PROPERTY {
    ULONG Version;
    ULONG Size;
    enum _WRITE_CACHE_TYPE WriteCacheType;
    enum _WRITE_CACHE_ENABLE WriteCacheEnabled;
    enum _WRITE_CACHE_CHANGE WriteCacheChangeable;
    enum _WRITE_THROUGH WriteThroughSupported;
    UCHAR FlushCacheSupported;
    UCHAR UserDefinedPowerProtection;
    UCHAR NVCacheEnabled;
};

typedef struct _STORAGE_ZONED_DEVICE_DESCRIPTOR {
    ULONG Version;
    ULONG Size;
    enum _STORAGE_ZONED_DEVICE_TYPES DeviceType;
    ULONG ZoneCount;
     <unnamed-type-ZoneAttributes>;
    union {
         <unnamed-type-SequentialRequiredZone>;
        struct {
            ULONG MaxOpenZoneCount;
            UCHAR UnrestrictedRead;
            UCHAR Reserved[3];
        } SequentialRequiredZone;
         <unnamed-type-SequentialPreferredZone>;
        struct {
            ULONG OptimalOpenZoneCount;
            ULONG Reserved;
        } SequentialPreferredZone;
    } ZoneAttributes;
    ULONG ZoneGroupCount;
    struct _STORAGE_ZONE_GROUP ZoneGroup[1];
};

typedef struct _STORAGE_ZONE_DESCRIPTOR {
    ULONG Size;
    enum _STORAGE_ZONE_TYPES ZoneType;
    enum _STORAGE_ZONE_CONDITION ZoneCondition;
    UCHAR ResetWritePointerRecommend;
    UCHAR Reserved0[3];
    ULONG64 ZoneSize;
    ULONG64 WritePointerOffset;
};

typedef struct _STORAGE_ZONE_GROUP {
    ULONG ZoneCount;
    enum _STORAGE_ZONE_TYPES ZoneType;
    ULONG64 ZoneSize;
};

typedef struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER {
    ULONG Flags;
    ULONG StreamId;
};

typedef struct _STREAMS_QUERY_ID_OUTPUT_BUFFER {
    ULONG StreamId;
};

typedef struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER {
    ULONG OptimalWriteSize;
    ULONG StreamGranularitySize;
    ULONG StreamIdMin;
    ULONG StreamIdMax;
};

typedef struct _STREAM_EXTENT_ENTRY {
    ULONG Flags;
     <unnamed-type-ExtentInformation>;
    union {
        struct RETRIEVAL_POINTERS_BUFFER RetrievalPointers;
    } ExtentInformation;
};

typedef struct _STREAM_INFORMATION_ENTRY {
    ULONG Version;
    ULONG Flags;
     _StreamInformation;
    union _STREAM_INFORMATION_ENTRY::_StreamInformation StreamInformation;
};

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass {
    enum _FILE_STORAGE_TIER_CLASS Class;
    ULONG Flags;
};

typedef struct _STREAM_LAYOUT_ENTRY {
    ULONG Version;
    ULONG NextStreamOffset;
    ULONG Flags;
    ULONG ExtentInformationOffset;
    union _LARGE_INTEGER AllocationSize;
    union _LARGE_INTEGER EndOfFile;
    ULONG StreamInformationOffset;
    ULONG AttributeTypeCode;
    ULONG AttributeFlags;
    ULONG StreamIdentifierLength;
    WCHAR StreamIdentifier[1];
};

typedef struct _STRING {
    USHORT Length;
    USHORT MaximumLength;
    PCHAR Buffer;
};

typedef struct _STRING32 {
    USHORT Length;
    USHORT MaximumLength;
    ULONG Buffer;
};

typedef struct _STRING64 {
    USHORT Length;
    USHORT MaximumLength;
    ULONG64 Buffer;
};

typedef struct _STRRET {
    ULONG uType;
    PWCHAR pOleStr;
    ULONG uOffset;
    CHAR cStr[260];
};

typedef struct _SUPPORTED_OS_INFO {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _SV2CVW2_PARAMS {
    ULONG cbSize;
    struct IShellView *psvPrev;
    struct FOLDERSETTINGS *pfs;
    struct IShellBrowser *psbOwner;
    struct tagRECT *prcView;
    struct _GUID *pvid;
    struct HWND__ *hwndView;
};

typedef struct _SWITCHBRANCH_BRANCH_DATA {
    PWCHAR FunctionName;
    ULONG64 FunctionAddress;
    enum SwitchBranch_Branch_Packaging FunctionPackaging;
    PWCHAR Description;
    LONG Default;
    LONG EnableTelemetry;
    LONG EnableTracing;
    LONG AITLogCount;
    struct _GUID ContextGuids[4];
    struct _GUID BranchGuid;
    VOID _SWITCHBRANCH_BRANCH_DATA;
    VOID _SWITCHBRANCH_BRANCH_DATA;
    struct _SWITCHBRANCH_BRANCH_DATA *operator=;
    struct _SWITCHBRANCH_BRANCH_DATA *operator=;
};

typedef struct _SWITCHBRANCH_CACHED_MODULE_TABLE {
    ULONG64 ContextUpdateCounter;
    enum SWITCH_CONTEXT_TYPE ContextType;
    ULONG BranchEntries;
    struct _SWITCHBRANCH_BRANCH_DATA *Branch[0];
};

typedef struct _SWITCHBRANCH_EXPORT_ENTRY {
    PWCHAR ExportName;
    ULONG64 FuncAddr;
};

typedef struct _SWITCHBRANCH_EXPORT_TABLE {
    ULONG TableEntries;
    struct _SWITCHBRANCH_EXPORT_ENTRY Table[0];
};

typedef struct _SWITCHBRANCH_MODULE_TABLE {
    ULONG SwitchBranchMagic;
    ULONG VersionNumber;
    struct _SWITCHBRANCH_CACHED_MODULE_TABLE *CachedSwitchBranchTable;
    struct _SWITCHBRANCH_EXPORT_TABLE *SwitchBranchExportTable;
    struct _INTERNAL_SWITCHBRANCH_MODULE_TABLE *SwitchBranchTable;
    ULONG64 FilterProcedure;
};

typedef struct _SWITCHBRANCH_MODULE_TABLE_ENTRY {
    PWCHAR SwitchBranchName;
    PWCHAR Description;
    PWCHAR Category;
    enum SwitchBranch_Branch_Context ContextScope;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *pParentModuleTable;
    LONG EnableTelemetry;
    LONG EnableTracing;
    LONG AITLogCount;
    struct _GUID BranchGuid;
    ULONG BranchCount;
    struct _SWITCHBRANCH_BRANCH_DATA BranchData[0];
    VOID _SWITCHBRANCH_MODULE_TABLE_ENTRY;
    VOID _SWITCHBRANCH_MODULE_TABLE_ENTRY;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *operator=;
    struct _SWITCHBRANCH_MODULE_TABLE_ENTRY *operator=;
};

typedef struct _SYMBOLTOKENS {
    LONG fEnumDef;
    LONG fEnumVal;
    struct SYMBOLTOKEN rectype;
    struct SYMBOLTOKEN name;
    struct SYMBOLTOKEN owner;
    struct SYMBOLTOKEN value;
    struct SYMBOLTOKEN type;
    struct SYMBOLTOKEN localized;
    VOID _SYMBOLTOKENS;
    VOID _SYMBOLTOKENS;
};

typedef struct _SYNTHESIZE_MOUSE_EXTRA_PAYLOAD {
    enum _SYNTHESIZE_MOUSE_PAYLOAD_ID id;
     <unnamed-type-payload>;
    union {
        ULONG extraInformation;
    } payload;
};

typedef struct _SYSDBG_BUS_DATA {
    ULONG Address;
    PVOID Buffer;
    ULONG Request;
    enum _BUS_DATA_TYPE BusDataType;
    ULONG BusNumber;
    ULONG SlotNumber;
};

typedef struct _SYSDBG_CONTROL_SPACE {
    ULONG64 Address;
    PVOID Buffer;
    ULONG Request;
    ULONG Processor;
};

typedef struct _SYSDBG_IO_SPACE {
    ULONG64 Address;
    PVOID Buffer;
    ULONG Request;
    enum _INTERFACE_TYPE InterfaceType;
    ULONG BusNumber;
    ULONG AddressSpace;
};

typedef struct _SYSDBG_LIVEDUMP_CONTROL {
    ULONG Version;
    ULONG BugCheckCode;
    ULONG64 BugCheckParam1;
    ULONG64 BugCheckParam2;
    ULONG64 BugCheckParam3;
    ULONG64 BugCheckParam4;
    PVOID DumpFileHandle;
    PVOID CancelEventHandle;
    union _SYSDBG_LIVEDUMP_CONTROL_FLAGS Flags;
    union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES AddPagesControl;
};

typedef struct _SYSDBG_MSR {
    ULONG Msr;
    ULONG64 Data;
};

typedef struct _SYSDBG_PHYSICAL {
    union _LARGE_INTEGER Address;
    PVOID Buffer;
    ULONG Request;
};

typedef struct _SYSDBG_TRIAGE_DUMP {
    ULONG Flags;
    ULONG BugCheckCode;
    ULONG64 BugCheckParam1;
    ULONG64 BugCheckParam2;
    ULONG64 BugCheckParam3;
    ULONG64 BugCheckParam4;
    ULONG ProcessHandles;
    ULONG ThreadHandles;
    PVOID *Handles;
};

typedef struct _SYSDBG_VIRTUAL {
    PVOID Address;
    PVOID Buffer;
    ULONG Request;
};

typedef struct _SYSTEMTIME {
    USHORT wYear;
    USHORT wMonth;
    USHORT wDayOfWeek;
    USHORT wDay;
    USHORT wHour;
    USHORT wMinute;
    USHORT wSecond;
    USHORT wMilliseconds;
};

typedef struct _SYSTEM_ACCESS_FILTER_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ACPI_AUDIT_INFORMATION {
    ULONG RsdpCount;
    ULONG SameRsdt : 1;
    ULONG SlicPresent : 1;
    ULONG SlicDifferent : 1;
};

typedef struct _SYSTEM_ACTIVITY_MODERATION_INFO {
    struct _UNICODE_STRING Identifier;
    enum _SYSTEM_ACTIVITY_MODERATION_STATE ModerationState;
    enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE AppType;
};

typedef struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS {
    PVOID UserKeyHandle;
};

typedef struct _SYSTEM_ALARM_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_AUDIT_OBJECT_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG Flags;
    struct _GUID ObjectType;
    struct _GUID InheritedObjectType;
    ULONG SidStart;
};

typedef struct _SYSTEM_BASIC_INFORMATION {
    ULONG Reserved;
    ULONG TimerResolution;
    ULONG PageSize;
    ULONG NumberOfPhysicalPages;
    ULONG LowestPhysicalPageNumber;
    ULONG HighestPhysicalPageNumber;
    ULONG AllocationGranularity;
    ULONG64 MinimumUserModeAddress;
    ULONG64 MaximumUserModeAddress;
    ULONG64 ActiveProcessorsAffinityMask;
    CHAR NumberOfProcessors;
};

typedef struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION {
    ULONG64 AvailablePages;
    ULONG64 CommittedPages;
    ULONG64 CommitLimit;
    ULONG64 PeakCommitment;
};

typedef struct _SYSTEM_BIGPOOL_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NonPaged : 1;
    ULONG64 SizeInBytes;
    UCHAR Tag[4];
    ULONG TagUlong;
};

typedef struct _SYSTEM_BIGPOOL_INFORMATION {
    ULONG Count;
    struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
};

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION {
    struct _GUID BootIdentifier;
    enum _FIRMWARE_TYPE FirmwareType;
    ULONG64 BootFlags;
    ULONG64 DbgMenuOsSelection : 1;
    ULONG64 DbgHiberBoot : 1;
    ULONG64 DbgSoftBoot : 1;
    ULONG64 DbgMeasuredLaunch : 1;
    ULONG64 DbgMeasuredLaunchCapable : 1;
};

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1 {
    struct _GUID BootIdentifier;
    enum _FIRMWARE_TYPE FirmwareType;
};

typedef struct _SYSTEM_BOOT_GRAPHICS_INFORMATION {
    union _LARGE_INTEGER FrameBuffer;
    ULONG Width;
    ULONG Height;
    ULONG PixelStride;
    ULONG Flags;
    enum _SYSTEM_PIXEL_FORMAT Format;
    ULONG DisplayRotation;
};

typedef struct _SYSTEM_BOOT_LOGO_INFORMATION {
    ULONG Flags;
    ULONG BitmapOffset;
};

typedef struct _SYSTEM_CALL_COUNT_INFORMATION {
    ULONG Length;
    ULONG NumberOfTables;
};

typedef struct _SYSTEM_CALL_TIME_INFORMATION {
    ULONG Length;
    ULONG TotalCalls;
    union _LARGE_INTEGER TimeOfCalls[1];
};

typedef struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION {
    ULONG Options;
    ULONG HVCIOptions;
    ULONG64 Version;
    struct _GUID PolicyGuid;
};

typedef struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION {
    PVOID FileHandle;
    ULONG ImageSize;
    PVOID Image;
};

typedef struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION {
    PVOID ImageFile;
    ULONG Type;
};

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION {
    ULONG Length;
    ULONG CodeIntegrityOptions;
};

typedef struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION {
    ULONG Flags;
    ULONG Locked : 1;
    ULONG UnlockApplied : 1;
    ULONG UnlockIdValid : 1;
    ULONG Reserved : 29;
    UCHAR UnlockId[32];
};

typedef struct _SYSTEM_CONSOLE_INFORMATION {
    ULONG DriverLoaded : 1;
    ULONG Spare : 31;
};

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION {
    ULONG ContextSwitches;
    ULONG FindAny;
    ULONG FindLast;
    ULONG FindIdeal;
    ULONG IdleAny;
    ULONG IdleCurrent;
    ULONG IdleLast;
    ULONG IdleIdeal;
    ULONG PreemptAny;
    ULONG PreemptCurrent;
    ULONG PreemptLast;
    ULONG SwitchToIdle;
};

typedef struct _SYSTEM_CPU_SET_INFORMATION {
    ULONG Size;
    enum _CPU_SET_INFORMATION_TYPE Type;
    struct {
        ULONG Id;
        USHORT Group;
        UCHAR LogicalProcessorIndex;
        UCHAR CoreIndex;
        UCHAR LastLevelCacheIndex;
        UCHAR NumaNodeIndex;
        UCHAR EfficiencyClass;
        UCHAR AllFlags;
        UCHAR Parked : 1;
        UCHAR Allocated : 1;
        UCHAR AllocatedToTargetProcess : 1;
        UCHAR RealTime : 1;
        UCHAR ReservedFlags : 4;
        ULONG Reserved;
        UCHAR SchedulingClass;
        ULONG64 AllocationTag;
    } CpuSet;
};

typedef struct _SYSTEM_CPU_SET_TAG_INFORMATION {
    ULONG64 Tag;
    ULONG64 CpuSets[1];
};

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION {
    enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
};

typedef struct _SYSTEM_DEVICE_DATA_INFORMATION {
    struct _UNICODE_STRING DeviceId;
    struct _UNICODE_STRING DataName;
    ULONG DataType;
    ULONG DataBufferLength;
    PVOID DataBuffer;
};

typedef struct _SYSTEM_DEVICE_INFORMATION {
    ULONG NumberOfDisks;
    ULONG NumberOfFloppies;
    ULONG NumberOfCdRoms;
    ULONG NumberOfTapes;
    ULONG NumberOfSerialPorts;
    ULONG NumberOfParallelPorts;
};

typedef struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION {
    UCHAR DmaGuardPolicyEnabled;
};

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION {
    ULONG Spare;
    ULONG DpcQueueDepth;
    ULONG MinimumDpcRate;
    ULONG AdjustDpcThreshold;
    ULONG IdealDpcRate;
};

typedef struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION {
    PVOID ElamDriverFile;
};

typedef struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION {
    UCHAR EnclaveLaunchSigner[32];
};

typedef struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION {
    UCHAR Enabled;
};

typedef struct _SYSTEM_ENTROPY_TIMING_INFORMATION {
    PVOID EntropyRoutine;
    PVOID InitializationRoutine;
    PVOID InitializationContext;
};

typedef struct _SYSTEM_ERROR_PORT_TIMEOUTS {
    ULONG StartTimeout;
    ULONG CommTimeout;
};

typedef struct _SYSTEM_EXCEPTION_INFORMATION {
    ULONG AlignmentFixupCount;
    ULONG ExceptionDispatchCount;
    ULONG FloatingEmulationCount;
    ULONG ByteWordEmulationCount;
};

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION {
    struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID Win32StartAddress;
    PVOID TebBase;
    ULONG64 Reserved2;
    ULONG64 Reserved3;
    ULONG64 Reserved4;
};

typedef struct _SYSTEM_FILECACHE_INFORMATION {
    ULONG64 CurrentSize;
    ULONG64 PeakSize;
    ULONG PageFaultCount;
    ULONG64 MinimumWorkingSet;
    ULONG64 MaximumWorkingSet;
    ULONG64 CurrentSizeIncludingTransitionInPages;
    ULONG64 PeakSizeIncludingTransitionInPages;
    ULONG TransitionRePurposeCount;
    ULONG Flags;
};

typedef struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION {
    struct _UNICODE_STRING FirmwarePartition;
};

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER {
    ULONG ProviderSignature;
    UCHAR Register;
    PLONG FirmwareTableHandler;
    PVOID DriverObject;
};

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION {
    ULONG ProviderSignature;
    enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
    ULONG TableID;
    ULONG TableBufferLength;
    UCHAR TableBuffer[1];
};

typedef struct _SYSTEM_FLAGS_INFORMATION {
    ULONG Flags;
};

typedef struct _SYSTEM_FLUSH_INFORMATION {
    ULONG SupportedFlushMethods;
    ULONG ProcessorCacheFlushSize;
    ULONG64 SystemFlushCapabilities;
    ULONG64 Reserved[2];
};

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION {
    struct _UNICODE_STRING DriverName;
    PVOID ImageAddress;
    PVOID SectionPointer;
    PVOID EntryPoint;
    struct _IMAGE_EXPORT_DIRECTORY *ExportSectionPointer;
    ULONG ImageLength;
};

typedef struct _SYSTEM_HANDLE_INFORMATION {
    ULONG NumberOfHandles;
    struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
};

typedef struct _SYSTEM_HANDLE_INFORMATION_EX {
    ULONG64 NumberOfHandles;
    ULONG64 Reserved;
    struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
};

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO {
    USHORT UniqueProcessId;
    USHORT CreatorBackTraceIndex;
    UCHAR ObjectTypeIndex;
    UCHAR HandleAttributes;
    USHORT HandleValue;
    PVOID Object;
    ULONG GrantedAccess;
};

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX {
    PVOID Object;
    ULONG64 UniqueProcessId;
    ULONG64 HandleValue;
    ULONG GrantedAccess;
    USHORT CreatorBackTraceIndex;
    USHORT ObjectTypeIndex;
    ULONG HandleAttributes;
    ULONG Reserved;
};

typedef struct _SYSTEM_HIBERFILE_INFORMATION {
    ULONG NumberOfMcbPairs;
    union _LARGE_INTEGER Mcb[1];
};

typedef struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE {
    USHORT ImageNameLength;
    WCHAR ImageName[1];
};

typedef struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION {
    struct _HV_DETAILS HvVendorAndMaxFunction;
    struct _HV_DETAILS HypervisorInterface;
    struct _HV_DETAILS HypervisorVersion;
    struct _HV_DETAILS HvFeatures;
    struct _HV_DETAILS HwFeatures;
    struct _HV_DETAILS EnlightenmentInfo;
    struct _HV_DETAILS ImplementationLimits;
};

typedef struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION {
    ULONG NumberOfLogicalProcessors;
    ULONG NumberOfCores;
};

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION {
    UCHAR HypervisorConnected;
    UCHAR HypervisorDebuggingEnabled;
    UCHAR HypervisorPresent;
    UCHAR Spare0[5];
    ULONG64 EnabledEnlightenments;
};

typedef struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION {
    PVOID HypervisorSharedUserVa;
};

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION {
    ULONG FlagsToEnable;
    ULONG FlagsToDisable;
};

typedef struct _SYSTEM_INFO {
    ULONG dwOemId;
    USHORT wProcessorArchitecture;
    USHORT wReserved;
    ULONG dwPageSize;
    PVOID lpMinimumApplicationAddress;
    PVOID lpMaximumApplicationAddress;
    ULONG64 dwActiveProcessorMask;
    ULONG dwNumberOfProcessors;
    ULONG dwProcessorType;
    ULONG dwAllocationGranularity;
    USHORT wProcessorLevel;
    USHORT wProcessorRevision;
};

typedef struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION {
    ULONG Gsiv;
    USHORT Group;
    ULONG64 CpuSets;
};

typedef struct _SYSTEM_INTERRUPT_INFORMATION {
    ULONG ContextSwitches;
    ULONG DpcCount;
    ULONG DpcRate;
    ULONG TimeIncrement;
    ULONG DpcBypassCount;
    ULONG ApcBypassCount;
};

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT {
    ULONG Gsiv;
    UCHAR ControllerInterrupt;
    UCHAR EdgeInterrupt;
    UCHAR IsPrimaryInterrupt;
    struct _GROUP_AFFINITY TargetAffinity;
};

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT {
    ULONG Enabled : 1;
    ULONG Reserved : 31;
    ULONG AsULONG;
};

typedef struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION {
    UCHAR SecureKernelRunning : 1;
    UCHAR HvciEnabled : 1;
    UCHAR HvciStrictMode : 1;
    UCHAR DebugEnabled : 1;
    UCHAR FirmwarePageProtection : 1;
    UCHAR EncryptionKeyAvailable : 1;
    UCHAR SpareFlags : 2;
    UCHAR TrustletRunning : 1;
    UCHAR HvciDisableAllowed : 1;
    UCHAR SpareFlags2 : 6;
    UCHAR Spare0[6];
    ULONG64 Spare1;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_FLAGS {
    UCHAR KernelDebuggerIgnoreUmExceptions;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION {
    UCHAR KernelDebuggerEnabled;
    UCHAR KernelDebuggerNotPresent;
};

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX {
    UCHAR DebuggerAllowed;
    UCHAR DebuggerEnabled;
    UCHAR DebuggerPresent;
};

typedef struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION {
     <unnamed-type-KvaShadowFlags>;
    struct {
        ULONG KvaShadowEnabled : 1;
        ULONG KvaShadowUserGlobal : 1;
        ULONG KvaShadowPcid : 1;
        ULONG KvaShadowInvpcid : 1;
        ULONG KvaShadowRequired : 1;
        ULONG KvaShadowRequiredAvailable : 1;
        ULONG Reserved : 26;
    } KvaShadowFlags;
};

typedef struct _SYSTEM_LEAP_SECOND_INFORMATION {
    UCHAR Enabled;
    ULONG Flags;
};

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION {
    ULONG VetoType;
    struct _UNICODE_STRING VetoList;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
    ULONG64 ProcessorMask;
    enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    struct {
        UCHAR Flags;
    } ProcessorCore;
    struct {
        ULONG NodeNumber;
    } NumaNode;
    struct _CACHE_DESCRIPTOR Cache;
    ULONG64 Reserved[2];
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {
    enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    ULONG Size;
    struct _PROCESSOR_RELATIONSHIP Processor;
    struct _NUMA_NODE_RELATIONSHIP NumaNode;
    struct _CACHE_RELATIONSHIP Cache;
    struct _GROUP_RELATIONSHIP Group;
};

typedef struct _SYSTEM_LOOKASIDE_INFORMATION {
    USHORT CurrentDepth;
    USHORT MaximumDepth;
    ULONG TotalAllocates;
    ULONG AllocateMisses;
    ULONG TotalFrees;
    ULONG FreeMisses;
    ULONG Type;
    ULONG Tag;
    ULONG Size;
};

typedef struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION {
    ULONG LowPriReadOperations;
    ULONG LowPriWriteOperations;
    ULONG KernelBumpedToNormalOperations;
    ULONG LowPriPagingReadOperations;
    ULONG KernelPagingReadsBumpedToNormal;
    ULONG LowPriPagingWriteOperations;
    ULONG KernelPagingWritesBumpedToNormal;
    ULONG BoostedIrpCount;
    ULONG BoostedPagingIrpCount;
    ULONG BlanketBoostCount;
};

typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_MANUFACTURING_INFORMATION {
    ULONG Options;
    struct _UNICODE_STRING ProfileName;
};

typedef struct _SYSTEM_MEMORY_CHANNEL_INFORMATION {
    ULONG ChannelNumber;
    ULONG ChannelHeatIndex;
    ULONG64 TotalPageCount;
    ULONG64 ZeroPageCount;
    ULONG64 FreePageCount;
    ULONG64 StandbyPageCount;
};

typedef struct _SYSTEM_MEMORY_INFORMATION {
    ULONG64 PagedPoolCommitPageCount;
    ULONG64 NonPagedPoolPageCount;
    ULONG64 MdlPageCount;
    ULONG64 CommitPageCount;
};

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION {
    ULONG64 ZeroPageCount;
    ULONG64 FreePageCount;
    ULONG64 ModifiedPageCount;
    ULONG64 ModifiedNoWritePageCount;
    ULONG64 BadPageCount;
    ULONG64 PageCountByPriority[8];
    ULONG64 RepurposedPagesByPriority[8];
    ULONG64 ModifiedPageCountPageFile;
};

typedef struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION {
    ULONG64 NumberOfRuns;
    ULONG NumberOfNodes;
    ULONG NumberOfChannels;
    struct _PHYSICAL_CHANNEL_RUN Run[1];
};

typedef struct _SYSTEM_MEMORY_USAGE_INFORMATION {
    ULONG64 TotalPhysicalBytes;
    ULONG64 AvailableBytes;
    LONG64 ResidentAvailableBytes;
    ULONG64 CommittedBytes;
    ULONG64 SharedCommittedBytes;
    ULONG64 CommitLimitBytes;
    ULONG64 PeakCommitmentBytes;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE {
    PLONG NetRateControlDispatch;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER {
    ULONG64 PolicyCookie;
    enum _SYSTEM_NET_RATE_CONTROL_TYPE Type;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT {
    struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
    ULONG64 OverQuotaHistory;
    ULONG IntervalLength;
    ULONG NumberOfIntervals;
};

typedef struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT {
    struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
    ULONG64 MaxBandwidth;
    struct _GUID *ContainerId;
    ULONG Flags;
    ULONG Set : 1;
    ULONG Update : 1;
    ULONG Clear : 1;
    ULONG DscpTagEnabled : 1;
    ULONG MaxBandwidthEnabled : 1;
    ULONG Reserved : 27;
    UCHAR DscpTag;
};

typedef struct _SYSTEM_NUMA_INFORMATION {
    ULONG HighestNodeNumber;
    ULONG Reserved;
    struct _GROUP_AFFINITY ActiveProcessorsGroupAffinity[64];
    ULONG64 AvailableMemory[64];
    ULONG64 Pad[128];
};

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP {
    ULONG NodeProximityId;
    USHORT NodeNumber;
};

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION {
    ULONG NextEntryOffset;
    ULONG NumberOfObjects;
    ULONG NumberOfHandles;
    ULONG TypeIndex;
    ULONG InvalidAttributes;
    struct _GENERIC_MAPPING GenericMapping;
    ULONG ValidAccessMask;
    ULONG PoolType;
    UCHAR SecurityRequired;
    UCHAR WaitableObject;
    struct _UNICODE_STRING TypeName;
};

typedef struct _SYSTEM_OBJECT_INFORMATION {
    ULONG NextEntryOffset;
    PVOID Object;
    PVOID CreatorUniqueProcess;
    USHORT CreatorBackTraceIndex;
    USHORT Flags;
    LONG PointerCount;
    LONG HandleCount;
    ULONG PagedPoolCharge;
    ULONG NonPagedPoolCharge;
    PVOID ExclusiveProcessId;
    PVOID SecurityDescriptor;
    struct _OBJECT_NAME_INFORMATION NameInfo;
};

typedef struct _SYSTEM_PAGEFILE_INFORMATION {
    ULONG NextEntryOffset;
    ULONG TotalSize;
    ULONG TotalInUse;
    ULONG PeakUsage;
    struct _UNICODE_STRING PageFileName;
};

typedef struct _SYSTEM_PAGEFILE_INFORMATION_EX {
    struct _SYSTEM_PAGEFILE_INFORMATION Info;
    ULONG MinimumSize;
    ULONG MaximumSize;
};

typedef struct _SYSTEM_PERFORMANCE_INFORMATION {
    union _LARGE_INTEGER IdleProcessTime;
    union _LARGE_INTEGER IoReadTransferCount;
    union _LARGE_INTEGER IoWriteTransferCount;
    union _LARGE_INTEGER IoOtherTransferCount;
    ULONG IoReadOperationCount;
    ULONG IoWriteOperationCount;
    ULONG IoOtherOperationCount;
    ULONG AvailablePages;
    ULONG CommittedPages;
    ULONG CommitLimit;
    ULONG PeakCommitment;
    ULONG PageFaultCount;
    ULONG CopyOnWriteCount;
    ULONG TransitionCount;
    ULONG CacheTransitionCount;
    ULONG DemandZeroCount;
    ULONG PageReadCount;
    ULONG PageReadIoCount;
    ULONG CacheReadCount;
    ULONG CacheIoCount;
    ULONG DirtyPagesWriteCount;
    ULONG DirtyWriteIoCount;
    ULONG MappedPagesWriteCount;
    ULONG MappedWriteIoCount;
    ULONG PagedPoolPages;
    ULONG NonPagedPoolPages;
    ULONG PagedPoolAllocs;
    ULONG PagedPoolFrees;
    ULONG NonPagedPoolAllocs;
    ULONG NonPagedPoolFrees;
    ULONG FreeSystemPtes;
    ULONG ResidentSystemCodePage;
    ULONG TotalSystemDriverPages;
    ULONG TotalSystemCodePages;
    ULONG NonPagedPoolLookasideHits;
    ULONG PagedPoolLookasideHits;
    ULONG AvailablePagedPoolPages;
    ULONG ResidentSystemCachePage;
    ULONG ResidentPagedPoolPage;
    ULONG ResidentSystemDriverPage;
    ULONG CcFastReadNoWait;
    ULONG CcFastReadWait;
    ULONG CcFastReadResourceMiss;
    ULONG CcFastReadNotPossible;
    ULONG CcFastMdlReadNoWait;
    ULONG CcFastMdlReadWait;
    ULONG CcFastMdlReadResourceMiss;
    ULONG CcFastMdlReadNotPossible;
    ULONG CcMapDataNoWait;
    ULONG CcMapDataWait;
    ULONG CcMapDataNoWaitMiss;
    ULONG CcMapDataWaitMiss;
    ULONG CcPinMappedDataCount;
    ULONG CcPinReadNoWait;
    ULONG CcPinReadWait;
    ULONG CcPinReadNoWaitMiss;
    ULONG CcPinReadWaitMiss;
    ULONG CcCopyReadNoWait;
    ULONG CcCopyReadWait;
    ULONG CcCopyReadNoWaitMiss;
    ULONG CcCopyReadWaitMiss;
    ULONG CcMdlReadNoWait;
    ULONG CcMdlReadWait;
    ULONG CcMdlReadNoWaitMiss;
    ULONG CcMdlReadWaitMiss;
    ULONG CcReadAheadIos;
    ULONG CcLazyWriteIos;
    ULONG CcLazyWritePages;
    ULONG CcDataFlushes;
    ULONG CcDataPages;
    ULONG ContextSwitches;
    ULONG FirstLevelTbFills;
    ULONG SecondLevelTbFills;
    ULONG SystemCalls;
    ULONG64 CcTotalDirtyPages;
    ULONG64 CcDirtyPageThreshold;
    LONG64 ResidentAvailablePages;
    ULONG64 SharedCommittedPages;
};

typedef struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION {
    ULONG64 TotalPhysicalBytes;
    ULONG64 LowestPhysicalAddress;
    ULONG64 HighestPhysicalAddress;
};

typedef struct _SYSTEM_PLATFORM_BINARY_INFORMATION {
    ULONG64 PhysicalAddress;
    PVOID HandoffBuffer;
    PVOID CommandLineBuffer;
    ULONG HandoffBufferSize;
    ULONG CommandLineBufferSize;
};

typedef struct _SYSTEM_POLICY_INFORMATION {
    PVOID InputData;
    PVOID OutputData;
    ULONG InputDataSize;
    ULONG OutputDataSize;
    ULONG Version;
};

typedef struct _SYSTEM_POOLTAG {
    UCHAR Tag[4];
    ULONG TagUlong;
    ULONG PagedAllocs;
    ULONG PagedFrees;
    ULONG64 PagedUsed;
    ULONG NonPagedAllocs;
    ULONG NonPagedFrees;
    ULONG64 NonPagedUsed;
};

typedef struct _SYSTEM_POOLTAG_INFORMATION {
    ULONG Count;
    struct _SYSTEM_POOLTAG TagInfo[1];
};

typedef struct _SYSTEM_POOL_ENTRY {
    UCHAR Allocated;
    UCHAR Spare0;
    USHORT AllocatorBackTraceIndex;
    ULONG Size;
    UCHAR Tag[4];
    ULONG TagUlong;
    PVOID ProcessChargedQuota;
};

typedef struct _SYSTEM_POOL_INFORMATION {
    ULONG64 TotalSize;
    PVOID FirstEntry;
    USHORT EntryOverhead;
    UCHAR PoolTagPresent;
    UCHAR Spare0;
    ULONG NumberOfEntries;
    struct _SYSTEM_POOL_ENTRY Entries[1];
};

typedef struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION {
    UCHAR EfiLauncherEnabled;
};

typedef struct _SYSTEM_POWER_INFORMATION {
    ULONG MaxIdlenessAllowed;
    ULONG Idleness;
    ULONG TimeRemaining;
    UCHAR CoolingMode;
};

typedef struct _SYSTEM_POWER_LOGGING_ENTRY {
    ULONG Reason;
    ULONG States;
};

typedef struct _SYSTEM_POWER_POLICY {
    ULONG Revision;
    struct POWER_ACTION_POLICY PowerButton;
    struct POWER_ACTION_POLICY SleepButton;
    struct POWER_ACTION_POLICY LidClose;
    enum _SYSTEM_POWER_STATE LidOpenWake;
    ULONG Reserved;
    struct POWER_ACTION_POLICY Idle;
    ULONG IdleTimeout;
    UCHAR IdleSensitivity;
    UCHAR DynamicThrottle;
    UCHAR Spare2[2];
    enum _SYSTEM_POWER_STATE MinSleep;
    enum _SYSTEM_POWER_STATE MaxSleep;
    enum _SYSTEM_POWER_STATE ReducedLatencySleep;
    ULONG WinLogonFlags;
    ULONG Spare3;
    ULONG DozeS4Timeout;
    ULONG BroadcastCapacityResolution;
    struct SYSTEM_POWER_LEVEL DischargePolicy[4];
    ULONG VideoTimeout;
    UCHAR VideoDimDisplay;
    ULONG VideoReserved[3];
    ULONG SpindownTimeout;
    UCHAR OptimizeForPower;
    UCHAR FanThrottleTolerance;
    UCHAR ForcedThrottle;
    UCHAR MinThrottle;
    struct POWER_ACTION_POLICY OverThrottled;
};

typedef struct _SYSTEM_POWER_STATE_CONTEXT {
    ULONG Reserved1 : 8;
    ULONG TargetSystemState : 4;
    ULONG EffectiveSystemState : 4;
    ULONG CurrentSystemState : 4;
    ULONG IgnoreHibernationPath : 1;
    ULONG PseudoTransition : 1;
    ULONG KernelSoftReboot : 1;
    ULONG DirectedDripsTransition : 1;
    ULONG Reserved2 : 8;
    ULONG ContextAsUlong;
};

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON {
    UCHAR AffectedState[8];
    ULONG PowerReasonCode;
    ULONG PowerReasonLength;
};

typedef struct _SYSTEM_POWER_STATUS {
    UCHAR ACLineStatus;
    UCHAR BatteryFlag;
    UCHAR BatteryLifePercent;
    UCHAR SystemStatusFlag;
    ULONG BatteryLifeTime;
    ULONG BatteryFullLifeTime;
};

typedef struct _SYSTEM_PREFETCH_OPTIONS {
    ULONG LowerPriority : 1;
    ULONG VirtualOffsets : 1;
    ULONG TrickleIOs : 1;
    ULONG SkipInStorePages : 1;
    ULONG PrefetchFilesByVa : 1;
    ULONG SkipMemoryStorePages : 1;
    ULONG Spare : 2;
    ULONG ScenarioType : 8;
};

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION {
    ULONG PrefetchPatchCount;
};

typedef struct _SYSTEM_PREFETCH_STATS {
    ULONG DemandFilePageCount;
    ULONG DemandFileIOCount;
    ULONG TrickleFilePageCount;
    ULONG TrickleFileIOCount;
    ULONG DemandPrivatePageCount;
    ULONG DemandPrivateIOCount;
    ULONG TricklePrivatePageCount;
    ULONG TricklePrivateIOCount;
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION {
    ULONG64 Cycles[4][2];
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {
    ULONG64 CycleTime;
};

typedef struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION {
    ULONG64 ProcessorFeatureBits;
    ULONG64 Reserved[3];
};

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION {
    ULONG64 CycleTime;
};

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION {
    ULONG64 IdleTime;
    ULONG64 C1Time;
    ULONG64 C2Time;
    ULONG64 C3Time;
    ULONG C1Transitions;
    ULONG C2Transitions;
    ULONG C3Transitions;
    ULONG Padding;
};

typedef struct _SYSTEM_PROCESSOR_INFORMATION {
    USHORT ProcessorArchitecture;
    USHORT ProcessorLevel;
    USHORT ProcessorRevision;
    USHORT MaximumProcessors;
    ULONG ProcessorFeatureBits;
};

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION {
    ULONG Operation;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION {
    ULONG ProcessorCount;
    ULONG Offsets[1];
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT {
    ULONG64 Hits;
    UCHAR PercentFrequency;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION {
    union _LARGE_INTEGER IdleTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER DpcTime;
    union _LARGE_INTEGER InterruptTime;
    ULONG InterruptCount;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX {
    union _LARGE_INTEGER IdleTime;
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER DpcTime;
    union _LARGE_INTEGER InterruptTime;
    ULONG InterruptCount;
    ULONG Spare0;
    union _LARGE_INTEGER AvailableTime;
    union _LARGE_INTEGER Spare1;
    union _LARGE_INTEGER Spare2;
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION {
    ULONG ProcessorNumber;
    ULONG StateCount;
    struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
};

typedef struct _SYSTEM_PROCESSOR_POLICY_INFORMATION {
    ULONG Length;
    ULONG PolicyId;
    struct _XSAVE_POLICY Policy;
};

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION {
    UCHAR CurrentFrequency;
    UCHAR ThermalLimitFrequency;
    UCHAR ConstantThrottleFrequency;
    UCHAR DegradedThrottleFrequency;
    UCHAR LastBusyFrequency;
    UCHAR LastC3Frequency;
    UCHAR LastAdjustedBusyFrequency;
    UCHAR ProcessorMinThrottle;
    UCHAR ProcessorMaxThrottle;
    ULONG NumberOfFrequencies;
    ULONG PromotionCount;
    ULONG DemotionCount;
    ULONG ErrorCount;
    ULONG RetryCount;
    ULONG64 CurrentFrequencyTime;
    ULONG64 CurrentProcessorTime;
    ULONG64 CurrentProcessorIdleTime;
    ULONG64 LastProcessorTime;
    ULONG64 LastProcessorIdleTime;
    ULONG64 Energy;
};

typedef struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA {
    struct _PROCESSOR_PROFILE_CONTROL_AREA *ProcessorProfileControlArea;
    UCHAR Allocate;
};

typedef struct _SYSTEM_PROCESS_ID_INFORMATION {
    PVOID ProcessId;
    struct _UNICODE_STRING ImageName;
};

typedef struct _SYSTEM_PROCESS_INFORMATION {
    ULONG NextEntryOffset;
    ULONG NumberOfThreads;
    union _LARGE_INTEGER WorkingSetPrivateSize;
    ULONG HardFaultCount;
    ULONG NumberOfThreadsHighWatermark;
    ULONG64 CycleTime;
    union _LARGE_INTEGER CreateTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER KernelTime;
    struct _UNICODE_STRING ImageName;
    LONG BasePriority;
    PVOID UniqueProcessId;
    PVOID InheritedFromUniqueProcessId;
    ULONG HandleCount;
    ULONG SessionId;
    ULONG64 UniqueProcessKey;
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
    ULONG64 PrivatePageCount;
    union _LARGE_INTEGER ReadOperationCount;
    union _LARGE_INTEGER WriteOperationCount;
    union _LARGE_INTEGER OtherOperationCount;
    union _LARGE_INTEGER ReadTransferCount;
    union _LARGE_INTEGER WriteTransferCount;
    union _LARGE_INTEGER OtherTransferCount;
};

typedef struct _SYSTEM_PROCESS_INFORMATION_EXTENSION {
    struct _PROCESS_DISK_COUNTERS DiskCounters;
    ULONG64 ContextSwitches;
    ULONG Flags;
    ULONG HasStrongId : 1;
    ULONG Classification : 4;
    ULONG BackgroundActivityModerated : 1;
    ULONG Spare : 26;
    ULONG UserSidOffset;
    ULONG PackageFullNameOffset;
    struct _PROCESS_ENERGY_VALUES EnergyValues;
    ULONG AppIdOffset;
    ULONG64 SharedCommitCharge;
    ULONG JobObjectId;
    ULONG SpareUlong;
    ULONG64 ProcessSequenceNumber;
};

typedef struct _SYSTEM_PROCESS_TRUST_LABEL_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION {
    ULONG Version;
    struct _QUERY_PERFORMANCE_COUNTER_FLAGS Flags;
    struct _QUERY_PERFORMANCE_COUNTER_FLAGS ValidFlags;
};

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION {
    ULONG TimeAdjustment;
    ULONG TimeIncrement;
    UCHAR Enable;
};

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE {
    ULONG64 TimeAdjustment;
    ULONG64 TimeIncrement;
    UCHAR Enable;
};

typedef struct _SYSTEM_REF_TRACE_INFORMATION {
    UCHAR TraceEnable;
    UCHAR TracePermanent;
    struct _UNICODE_STRING TraceProcessName;
    struct _UNICODE_STRING TracePoolTags;
};

typedef struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS {
    PVOID KeyHandle;
    struct _UNICODE_STRING *ValueNamePointer;
    PULONG RequiredLengthPointer;
    PUCHAR Buffer;
    ULONG BufferLength;
    ULONG Type;
    PUCHAR AppendBuffer;
    ULONG AppendBufferLength;
    UCHAR CreateIfDoesntExist;
    UCHAR TruncateExistingValue;
};

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION {
    ULONG RegistryQuotaAllowed;
    ULONG RegistryQuotaUsed;
    ULONG64 PagedPoolSize;
};

typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_ROOT_SILO_INFORMATION {
    ULONG NumberOfSilos;
    ULONG SiloIdList[1];
};

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {
    struct _ACE_HEADER Header;
    ULONG Mask;
    ULONG SidStart;
};

typedef struct _SYSTEM_SECUREBOOT_INFORMATION {
    UCHAR SecureBootEnabled;
    UCHAR SecureBootCapable;
};

typedef struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION {
    ULONG PlatformManifestSize;
    UCHAR PlatformManifest[1];
};

typedef struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION {
    struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION PolicyInformation;
    ULONG PolicySize;
    UCHAR Policy[1];
};

typedef struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION {
    struct _GUID PolicyPublisher;
    ULONG PolicyVersion;
    ULONG PolicyOptions;
};

typedef struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION {
    ULONG ExtentCount;
    ULONG ValidStructureSize;
    ULONG NextExtentIndex;
    ULONG ExtentRestart;
    ULONG CycleCount;
    ULONG TimeoutCount;
    ULONG64 CycleTime;
    ULONG64 CycleTimeMax;
    ULONG64 ExtentTime;
    ULONG ExtentTimeIndex;
    ULONG ExtentTimeMaxIndex;
    ULONG64 ExtentTimeMax;
    ULONG64 HyperFlushTimeMax;
    ULONG64 TranslateVaTimeMax;
    ULONG64 DebugExemptionCount;
    ULONG64 TbHitCount;
    ULONG64 TbMissCount;
    ULONG64 VinaPendingYield;
    ULONG64 HashCycles;
    ULONG HistogramOffset;
    ULONG HistogramBuckets;
    ULONG HistogramShift;
    ULONG Reserved1;
    ULONG64 PageNotPresentCount;
};

typedef struct _SYSTEM_SESSION_BIGPOOL_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG Count;
    struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
};

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG ViewFailures;
    ULONG64 NumberOfBytesAvailable;
    ULONG64 NumberOfBytesAvailableContiguous;
};

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION {
    ULONG64 NextEntryOffset;
    ULONG SessionId;
    ULONG Count;
    struct _SYSTEM_POOLTAG TagInfo[1];
};

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION {
    ULONG SessionId;
    ULONG SizeOfBuf;
    PVOID Buffer;
};

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION {
    ULONG TimeAdjustment;
    UCHAR Enable;
};

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE {
    ULONG64 TimeAdjustment;
    UCHAR Enable;
};

typedef struct _SYSTEM_SINGLE_MODULE_INFORMATION {
    PVOID TargetModuleAddress;
    struct _RTL_PROCESS_MODULE_INFORMATION_EX ExInfo;
};

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION {
    ULONG PoolTag;
    ULONG Flags;
};

typedef struct _SYSTEM_SPECULATION_CONTROL_INFORMATION {
     <unnamed-type-SpeculationControlFlags>;
    struct {
        ULONG BpbEnabled : 1;
        ULONG BpbDisabledSystemPolicy : 1;
        ULONG BpbDisabledNoHardwareSupport : 1;
        ULONG SpecCtrlEnumerated : 1;
        ULONG SpecCmdEnumerated : 1;
        ULONG IbrsPresent : 1;
        ULONG StibpPresent : 1;
        ULONG SmepPresent : 1;
        ULONG SpeculativeStoreBypassDisableAvailable : 1;
        ULONG SpeculativeStoreBypassDisableSupported : 1;
        ULONG SpeculativeStoreBypassDisabledSystemWide : 1;
        ULONG SpeculativeStoreBypassDisabledKernel : 1;
        ULONG SpeculativeStoreBypassDisableRequired : 1;
        ULONG BpbDisabledKernelToUser : 1;
        ULONG SpecCtrlRetpolineEnabled : 1;
        ULONG SpecCtrlImportOptimizationEnabled : 1;
        ULONG Reserved : 16;
    } SpeculationControlFlags;
};

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION {
    struct _UNICODE_STRING SystemDisk;
};

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION {
    struct _UNICODE_STRING SystemPartition;
};

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION {
    struct _CLIENT_ID ClientId;
    LONG Priority;
};

typedef struct _SYSTEM_THREAD_INFORMATION {
    union _LARGE_INTEGER KernelTime;
    union _LARGE_INTEGER UserTime;
    union _LARGE_INTEGER CreateTime;
    ULONG WaitTime;
    PVOID StartAddress;
    struct _CLIENT_ID ClientId;
    LONG Priority;
    LONG BasePriority;
    ULONG ContextSwitches;
    ULONG ThreadState;
    ULONG WaitReason;
};

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION {
    union _LARGE_INTEGER BootTime;
    union _LARGE_INTEGER CurrentTime;
    union _LARGE_INTEGER TimeZoneBias;
    ULONG TimeZoneId;
    ULONG Reserved;
    ULONG64 BootTimeBias;
    ULONG64 SleepTimeBias;
};

typedef struct _SYSTEM_TPM_INFORMATION {
    ULONG Flags;
};

typedef struct _SYSTEM_VA_LIST_INFORMATION {
    ULONG64 VirtualSize;
    ULONG64 VirtualPeak;
    ULONG64 VirtualLimit;
    ULONG64 AllocationFailures;
};

typedef struct _SYSTEM_VDM_INSTEMUL_INFO {
    ULONG SegmentNotPresent;
    ULONG VdmOpcode0F;
    ULONG OpcodeESPrefix;
    ULONG OpcodeCSPrefix;
    ULONG OpcodeSSPrefix;
    ULONG OpcodeDSPrefix;
    ULONG OpcodeFSPrefix;
    ULONG OpcodeGSPrefix;
    ULONG OpcodeOPER32Prefix;
    ULONG OpcodeADDR32Prefix;
    ULONG OpcodeINSB;
    ULONG OpcodeINSW;
    ULONG OpcodeOUTSB;
    ULONG OpcodeOUTSW;
    ULONG OpcodePUSHF;
    ULONG OpcodePOPF;
    ULONG OpcodeINTnn;
    ULONG OpcodeINTO;
    ULONG OpcodeIRET;
    ULONG OpcodeINBimm;
    ULONG OpcodeINWimm;
    ULONG OpcodeOUTBimm;
    ULONG OpcodeOUTWimm;
    ULONG OpcodeINB;
    ULONG OpcodeINW;
    ULONG OpcodeOUTB;
    ULONG OpcodeOUTW;
    ULONG OpcodeLOCKPrefix;
    ULONG OpcodeREPNEPrefix;
    ULONG OpcodeREPPrefix;
    ULONG OpcodeHLT;
    ULONG OpcodeCLI;
    ULONG OpcodeSTI;
    ULONG BopCount;
};

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION {
    ULONG CancelProbability;
    ULONG CancelThreshold;
    ULONG CompletionThreshold;
    ULONG CancellationVerifierDisabled;
    ULONG AvailableIssues;
    struct _SYSTEM_VERIFIER_ISSUE Issues[128];
};

typedef struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION {
    struct _SYSTEM_VERIFIER_INFORMATION Legacy;
    ULONG RaiseIrqls;
    ULONG AcquireSpinLocks;
    ULONG SynchronizeExecutions;
    ULONG AllocationsWithNoTag;
    ULONG AllocationsFailed;
    ULONG AllocationsFailedDeliberately;
    ULONG64 LockedBytes;
    ULONG64 PeakLockedBytes;
    ULONG64 MappedLockedBytes;
    ULONG64 PeakMappedLockedBytes;
    ULONG64 MappedIoSpaceBytes;
    ULONG64 PeakMappedIoSpaceBytes;
    ULONG64 PagesForMdlBytes;
    ULONG64 PeakPagesForMdlBytes;
    ULONG64 ContiguousMemoryBytes;
    ULONG64 PeakContiguousMemoryBytes;
    ULONG ExecutePoolTypes;
    ULONG ExecutePageProtections;
    ULONG ExecutePageMappings;
    ULONG ExecuteWriteSections;
    ULONG SectionAlignmentFailures;
    ULONG IATInExecutableSection;
};

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION {
    ULONG Probability;
    ULONG MaxProbability;
    struct _UNICODE_STRING PoolTags;
    struct _UNICODE_STRING Applications;
};

typedef struct _SYSTEM_VERIFIER_INFORMATION {
    ULONG NextEntryOffset;
    ULONG Level;
    ULONG RuleClasses[2];
    ULONG AreAllDriversBeingVerified;
    struct _UNICODE_STRING DriverName;
    ULONG RaiseIrqls;
    ULONG AcquireSpinLocks;
    ULONG SynchronizeExecutions;
    ULONG AllocationsAttempted;
    ULONG AllocationsSucceeded;
    ULONG AllocationsSucceededSpecialPool;
    ULONG AllocationsWithNoTag;
    ULONG TrimRequests;
    ULONG Trims;
    ULONG AllocationsFailed;
    ULONG AllocationsFailedDeliberately;
    ULONG Loads;
    ULONG Unloads;
    ULONG UnTrackedPool;
    ULONG CurrentPagedPoolAllocations;
    ULONG CurrentNonPagedPoolAllocations;
    ULONG PeakPagedPoolAllocations;
    ULONG PeakNonPagedPoolAllocations;
    ULONG64 PagedPoolUsageInBytes;
    ULONG64 NonPagedPoolUsageInBytes;
    ULONG64 PeakPagedPoolUsageInBytes;
    ULONG64 PeakNonPagedPoolUsageInBytes;
};

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX {
    ULONG VerifyMode;
    ULONG OptionChanges;
    struct _UNICODE_STRING PreviousBucketName;
    ULONG IrpCancelTimeoutMsec;
    ULONG VerifierExtensionEnabled;
    ULONG Reserved[1];
};

typedef struct _SYSTEM_VERIFIER_ISSUE {
    ULONG64 IssueType;
    PVOID Address;
    ULONG64 Parameters[2];
};

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION {
    ULONG ActionTaken;
    ULONG64 CrashData[5];
    ULONG VerifierMode;
    ULONG VerifierFlags;
    WCHAR VerifierTargets[256];
};

typedef struct _SYSTEM_VHD_BOOT_INFORMATION {
    UCHAR OsDiskIsVhd;
    ULONG OsVhdFilePathOffset;
    WCHAR OsVhdParentVolume[1];
};

typedef struct _SYSTEM_VSM_PROTECTION_INFORMATION {
    UCHAR DmaProtectionsAvailable;
    UCHAR DmaProtectionsInUse;
    UCHAR HardwareMbecAvailable;
};

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION {
    enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
    ULONG DataValue;
};

typedef struct _SYSTEM_WORKINGSET_ENTRY {
    ULONG UniqueProcessId;
    ULONG SessionId;
    ULONG64 WorkingSetPageCount;
    ULONG64 CommitPageCount;
    ULONG64 PagedPoolPageCount;
    ULONG64 VirtualSizeInPages;
    ULONG64 PrivateWorkingSetPageCount;
};

typedef struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION {
    ULONG64 WorkloadClass;
    ULONG64 CpuSets[1];
};

typedef struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION {
    ULONG WriteConstraintPolicy;
    ULONG Reserved;
};

typedef struct _SecHandle {
    ULONG64 dwLower;
    ULONG64 dwUpper;
};

typedef struct _SpriteCachedAttributes {
    ULONG dwShape;
    struct _BLENDFUNCTION bf;
    ULONG crKey;
};

typedef struct _T2_SET_PARAMETERS_V0 {
    ULONG Version;
    ULONG Reserved;
    LONG64 NoWakeTolerance;
};

typedef struct _TAG {
    ULONG type;
    ULONG style;
    ULONG len;
};

typedef struct _TAPE_CREATE_PARTITION {
    ULONG Method;
    ULONG Count;
    ULONG Size;
};

typedef struct _TAPE_ERASE {
    ULONG Type;
    UCHAR Immediate;
};

typedef struct _TAPE_GET_DRIVE_PARAMETERS {
    UCHAR ECC;
    UCHAR Compression;
    UCHAR DataPadding;
    UCHAR ReportSetmarks;
    ULONG DefaultBlockSize;
    ULONG MaximumBlockSize;
    ULONG MinimumBlockSize;
    ULONG MaximumPartitionCount;
    ULONG FeaturesLow;
    ULONG FeaturesHigh;
    ULONG EOTWarningZoneSize;
};

typedef struct _TAPE_GET_MEDIA_PARAMETERS {
    union _LARGE_INTEGER Capacity;
    union _LARGE_INTEGER Remaining;
    ULONG BlockSize;
    ULONG PartitionCount;
    UCHAR WriteProtected;
};

typedef struct _TAPE_GET_POSITION {
    ULONG Type;
    ULONG Partition;
    union _LARGE_INTEGER Offset;
};

typedef struct _TAPE_GET_STATISTICS {
    ULONG Operation;
};

typedef struct _TAPE_PREPARE {
    ULONG Operation;
    UCHAR Immediate;
};

typedef struct _TAPE_SET_DRIVE_PARAMETERS {
    UCHAR ECC;
    UCHAR Compression;
    UCHAR DataPadding;
    UCHAR ReportSetmarks;
    ULONG EOTWarningZoneSize;
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS {
    ULONG BlockSize;
};

typedef struct _TAPE_SET_POSITION {
    ULONG Method;
    ULONG Partition;
    union _LARGE_INTEGER Offset;
    UCHAR Immediate;
};

typedef struct _TAPE_STATISTICS {
    ULONG Version;
    ULONG Flags;
    union _LARGE_INTEGER RecoveredWrites;
    union _LARGE_INTEGER UnrecoveredWrites;
    union _LARGE_INTEGER RecoveredReads;
    union _LARGE_INTEGER UnrecoveredReads;
    UCHAR CompressionRatioReads;
    UCHAR CompressionRatioWrites;
};

typedef struct _TAPE_WMI_OPERATIONS {
    ULONG Method;
    ULONG DataBufferSize;
    PVOID DataBuffer;
};

typedef struct _TAPE_WRITE_MARKS {
    ULONG Type;
    ULONG Count;
    UCHAR Immediate;
};

typedef struct _TASKDIALOGCONFIG {
    ULONG cbSize;
    struct HWND__ *hwndParent;
    struct HINSTANCE__ *hInstance;
    LONG dwFlags;
    LONG dwCommonButtons;
    PWCHAR pszWindowTitle;
    struct HICON__ *hMainIcon;
    PWCHAR pszMainIcon;
    PWCHAR pszMainInstruction;
    PWCHAR pszContent;
    ULONG cButtons;
    struct _TASKDIALOG_BUTTON *pButtons;
    LONG nDefaultButton;
    ULONG cRadioButtons;
    struct _TASKDIALOG_BUTTON *pRadioButtons;
    LONG nDefaultRadioButton;
    PWCHAR pszVerificationText;
    PWCHAR pszExpandedInformation;
    PWCHAR pszExpandedControlText;
    PWCHAR pszCollapsedControlText;
    struct HICON__ *hFooterIcon;
    PWCHAR pszFooterIcon;
    PWCHAR pszFooter;
    HRESULT *pfCallback;
    LONG64 lpCallbackData;
    ULONG cxWidth;
};

typedef struct _TASKDIALOG_BUTTON {
    LONG nButtonID;
    PWCHAR pszButtonText;
};

typedef struct _TBBUTTON {
    LONG iBitmap;
    LONG idCommand;
    UCHAR fsState;
    UCHAR fsStyle;
    UCHAR bReserved[6];
    ULONG64 dwData;
    LONG64 iString;
};

typedef struct _TEB {
    struct _NT_TIB NtTib;
    PVOID EnvironmentPointer;
    struct _CLIENT_ID ClientId;
    PVOID ActiveRpcHandle;
    PVOID ThreadLocalStoragePointer;
    struct _PEB *ProcessEnvironmentBlock;
    ULONG LastErrorValue;
    ULONG CountOfOwnedCriticalSections;
    PVOID CsrClientThread;
    PVOID Win32ThreadInfo;
    ULONG User32Reserved[26];
    ULONG UserReserved[5];
    PVOID WOW32Reserved;
    ULONG CurrentLocale;
    ULONG FpSoftwareStatusRegister;
    PVOID ReservedForDebuggerInstrumentation[16];
    PVOID SystemReserved1[30];
    CHAR PlaceholderCompatibilityMode;
    UCHAR PlaceholderHydrationAlwaysExplicit;
    CHAR PlaceholderReserved[10];
    ULONG ProxiedProcessId;
    struct _ACTIVATION_CONTEXT_STACK _ActivationStack;
    UCHAR WorkingOnBehalfTicket[8];
    LONG ExceptionCode;
    UCHAR Padding0[4];
    struct _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
    ULONG64 InstrumentationCallbackSp;
    ULONG64 InstrumentationCallbackPreviousPc;
    ULONG64 InstrumentationCallbackPreviousSp;
    ULONG TxFsContext;
    UCHAR InstrumentationCallbackDisabled;
    UCHAR UnalignedLoadStoreExceptions;
    UCHAR Padding1[2];
    struct _GDI_TEB_BATCH GdiTebBatch;
    struct _CLIENT_ID RealClientId;
    PVOID GdiCachedProcessHandle;
    ULONG GdiClientPID;
    ULONG GdiClientTID;
    PVOID GdiThreadLocalInfo;
    ULONG64 Win32ClientInfo[62];
    PVOID glDispatchTable[233];
    ULONG64 glReserved1[29];
    PVOID glReserved2;
    PVOID glSectionInfo;
    PVOID glSection;
    PVOID glTable;
    PVOID glCurrentRC;
    PVOID glContext;
    ULONG LastStatusValue;
    UCHAR Padding2[4];
    struct _UNICODE_STRING StaticUnicodeString;
    WCHAR StaticUnicodeBuffer[261];
    UCHAR Padding3[6];
    PVOID DeallocationStack;
    PVOID TlsSlots[64];
    struct _LIST_ENTRY TlsLinks;
    PVOID Vdm;
    PVOID ReservedForNtRpc;
    PVOID DbgSsReserved[2];
    ULONG HardErrorMode;
    UCHAR Padding4[4];
    PVOID Instrumentation[11];
    struct _GUID ActivityId;
    PVOID SubProcessTag;
    PVOID PerflibData;
    PVOID EtwTraceData;
    PVOID WinSockData;
    ULONG GdiBatchCount;
    struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    ULONG IdealProcessorValue;
    UCHAR ReservedPad0;
    UCHAR ReservedPad1;
    UCHAR ReservedPad2;
    UCHAR IdealProcessor;
    ULONG GuaranteedStackBytes;
    UCHAR Padding5[4];
    PVOID ReservedForPerf;
    PVOID ReservedForOle;
    ULONG WaitingOnLoaderLock;
    UCHAR Padding6[4];
    PVOID SavedPriorityState;
    ULONG64 ReservedForCodeCoverage;
    PVOID ThreadPoolData;
    PVOID *TlsExpansionSlots;
    PVOID DeallocationBStore;
    PVOID BStoreLimit;
    ULONG MuiGeneration;
    ULONG IsImpersonating;
    PVOID NlsCache;
    PVOID pShimData;
    ULONG HeapData;
    UCHAR Padding7[4];
    PVOID CurrentTransactionHandle;
    struct _TEB_ACTIVE_FRAME *ActiveFrame;
    PVOID FlsData;
    PVOID PreferredLanguages;
    PVOID UserPrefLanguages;
    PVOID MergedPrefLanguages;
    ULONG MuiImpersonation;
    USHORT CrossTebFlags;
    USHORT SpareCrossTebBits : 16;
    USHORT SameTebFlags;
    USHORT SafeThunkCall : 1;
    USHORT InDebugPrint : 1;
    USHORT HasFiberData : 1;
    USHORT SkipThreadAttach : 1;
    USHORT WerInShipAssertCode : 1;
    USHORT RanProcessInit : 1;
    USHORT ClonedThread : 1;
    USHORT SuppressDebugMsg : 1;
    USHORT DisableUserStackWalk : 1;
    USHORT RtlExceptionAttached : 1;
    USHORT InitialThread : 1;
    USHORT SessionAware : 1;
    USHORT LoadOwner : 1;
    USHORT LoaderWorker : 1;
    USHORT SkipLoaderInit : 1;
    USHORT SpareSameTebBits : 1;
    PVOID TxnScopeEnterCallback;
    PVOID TxnScopeExitCallback;
    PVOID TxnScopeContext;
    ULONG LockCount;
    LONG WowTebOffset;
    PVOID ResourceRetValue;
    PVOID ReservedForWdf;
    ULONG64 ReservedForCrt;
    struct _GUID EffectiveContainerId;
    VOID _TEB;
    VOID _TEB;
    struct _TEB *operator=;
    struct _TEB *operator=;
};

typedef struct _TEB_ACTIVE_FRAME {
    ULONG Flags;
    struct _TEB_ACTIVE_FRAME *Previous;
    struct _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

typedef struct _TEB_ACTIVE_FRAME_CONTEXT {
    ULONG Flags;
    PCHAR FrameName;
};

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX {
    struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
    PCHAR SourceLocation;
};

typedef struct _TEB_ACTIVE_FRAME_EX {
    struct _TEB_ACTIVE_FRAME BasicFrame;
    PVOID ExtensionIdentifier;
};

typedef struct _THEMENAMEINFO {
    WCHAR szName[261];
    WCHAR szDisplayName[261];
    WCHAR szToolTip[261];
};

typedef struct _THEMEPROPERTYINFO {
    PWCHAR pszClass;
    LONG iPart;
    LONG iState;
    LONG iProperty;
    PWCHAR pszProperty;
    LONG iType;
    PWCHAR pszType;
    PVOID pvData;
    LONG cbData;
};

typedef struct _THEME_MSG {
    struct HWND__ *hwnd;
    ULONG uMsg;
    ULONG64 wParam;
    LONG64 lParam;
    enum _MSGTYPE type;
    ULONG uCodePage;
    PLONG64 pfnDefProc;
    LONG64 lRet;
    LONG fHandled;
};

typedef struct _THINWIRECACHE {
    ULONG CacheReads;
    ULONG CacheHits;
};

typedef struct _THREADWINDOW {
    ULONG dwThread;
    struct HWND__ *hwnd;
};

typedef struct _THREAD_BASIC_INFORMATION {
    LONG ExitStatus;
    struct _TEB *TebBaseAddress;
    struct _CLIENT_ID ClientId;
    ULONG64 AffinityMask;
    LONG Priority;
    LONG BasePriority;
};

typedef struct _THREAD_CYCLE_TIME_INFORMATION {
    ULONG64 AccumulatedCycles;
    ULONG64 CurrentCycleCount;
};

typedef struct _THREAD_ENERGY_VALUES {
    ULONG64 Cycles[4][2];
    ULONG64 AttributedCycles[4][2];
    ULONG64 WorkOnBehalfCycles[4][2];
    union _TIMELINE_BITMAP CpuTimeline;
};

typedef struct _THREAD_LAST_SYSCALL_INFORMATION {
    PVOID FirstArgument;
    USHORT SystemCallNumber;
    USHORT Pad[3];
    ULONG64 WaitTime;
};

typedef struct _THREAD_NAME_INFORMATION {
    struct _UNICODE_STRING ThreadName;
};

typedef struct _THREAD_PERFORMANCE_DATA {
    USHORT Size;
    USHORT Version;
    struct _PROCESSOR_NUMBER ProcessorNumber;
    ULONG ContextSwitches;
    ULONG HwCountersCount;
    ULONG64 UpdateCount;
    ULONG64 WaitReasonBitMap;
    ULONG64 HardwareCounters;
    struct _COUNTER_READING CycleTime;
    struct _COUNTER_READING HwCounters[16];
    VOID _THREAD_PERFORMANCE_DATA;
    VOID _THREAD_PERFORMANCE_DATA;
    struct _THREAD_PERFORMANCE_DATA *operator=;
    struct _THREAD_PERFORMANCE_DATA *operator=;
};

typedef struct _THREAD_POWER_THROTTLING_STATE {
    ULONG Version;
    ULONG ControlMask;
    ULONG StateMask;
};

typedef struct _THREAD_PROFILING_INFORMATION {
    ULONG64 HardwareCounters;
    ULONG Flags;
    ULONG Enable;
    struct _THREAD_PERFORMANCE_DATA *PerformanceData;
};

typedef struct _THREAD_TEB_INFORMATION {
    PVOID TebInformation;
    ULONG TebOffset;
    ULONG BytesToRead;
};

typedef struct _THREAD_TLS_INFORMATION {
    ULONG Flags;
    PVOID NewTlsData;
    PVOID OldTlsData;
    PVOID ThreadId;
};

typedef struct _THREAD_UMS_INFORMATION {
    enum _THREAD_UMS_INFORMATION_COMMAND Command;
    struct _RTL_UMS_COMPLETION_LIST *CompletionList;
    struct _RTL_UMS_CONTEXT *UmsContext;
    ULONG Flags;
    ULONG IsUmsSchedulerThread : 1;
    ULONG IsUmsWorkerThread : 1;
};

typedef struct _TIMER_BASIC_INFORMATION {
    union _LARGE_INTEGER RemainingTime;
    UCHAR TimerState;
};

typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO {
    union _LARGE_INTEGER DueTime;
    PVOID TimerApcRoutine;
    PVOID TimerContext;
    struct _COUNTED_REASON_CONTEXT *WakeContext;
    ULONG Period;
    ULONG TolerableDelay;
    PUCHAR PreviousState;
};

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
    WCHAR TimeZoneKeyName[128];
    UCHAR DynamicDaylightTimeDisabled;
};

typedef struct _TIME_FIELDS {
    SHORT Year;
    SHORT Month;
    SHORT Day;
    SHORT Hour;
    SHORT Minute;
    SHORT Second;
    SHORT Milliseconds;
    SHORT Weekday;
};

typedef struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _TLSDATA {
    CPaintBufferPool *_pThreadObject;
    LONG _cRef;
};

typedef struct _TMDIFF {
    ULONG cjotma;
    UCHAR chFirst;
    UCHAR chLast;
    UCHAR chDefault;
    UCHAR chBreak;
};

typedef struct _TMW_INTERNAL {
    struct tagTEXTMETRICW tmw;
    struct _TMDIFF tmdTmw;
};

typedef struct _TOKEN_ACCESS_INFORMATION {
    struct _SID_AND_ATTRIBUTES_HASH *SidHash;
    struct _SID_AND_ATTRIBUTES_HASH *RestrictedSidHash;
    struct _TOKEN_PRIVILEGES *Privileges;
    struct _LUID AuthenticationId;
    enum _TOKEN_TYPE TokenType;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
    ULONG Flags;
    ULONG AppContainerNumber;
    PVOID PackageSid;
    struct _SID_AND_ATTRIBUTES_HASH *CapabilitiesHash;
    PVOID TrustLevelSid;
    PVOID SecurityAttributes;
};

typedef struct _TOKEN_APPCONTAINER_INFORMATION {
    PVOID TokenAppContainer;
};

typedef struct _TOKEN_AUDIT_POLICY {
    UCHAR PerUserPolicy[30];
};

typedef struct _TOKEN_BNO_ISOLATION_INFORMATION {
    PWCHAR IsolationPrefix;
    UCHAR IsolationEnabled;
};

typedef struct _TOKEN_CONTROL {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    struct _LUID ModifiedId;
    struct _TOKEN_SOURCE TokenSource;
};

typedef struct _TOKEN_DEFAULT_DACL {
    struct _ACL *DefaultDacl;
};

typedef struct _TOKEN_DEVICE_CLAIMS {
    PVOID DeviceClaims;
};

typedef struct _TOKEN_ELEVATION {
    ULONG TokenIsElevated;
};

typedef struct _TOKEN_GROUPS {
    ULONG GroupCount;
    struct _SID_AND_ATTRIBUTES Groups[1];
};

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {
    ULONG SidCount;
    ULONG SidLength;
    struct _SID_AND_ATTRIBUTES *Sids;
    ULONG RestrictedSidCount;
    ULONG RestrictedSidLength;
    struct _SID_AND_ATTRIBUTES *RestrictedSids;
    ULONG PrivilegeCount;
    ULONG PrivilegeLength;
    struct _LUID_AND_ATTRIBUTES *Privileges;
    struct _LUID AuthenticationId;
};

typedef struct _TOKEN_LINKED_TOKEN {
    PVOID LinkedToken;
};

typedef struct _TOKEN_MANDATORY_LABEL {
    struct _SID_AND_ATTRIBUTES Label;
};

typedef struct _TOKEN_MANDATORY_POLICY {
    ULONG Policy;
};

typedef struct _TOKEN_ORIGIN {
    struct _LUID OriginatingLogonSession;
};

typedef struct _TOKEN_OWNER {
    PVOID Owner;
};

typedef struct _TOKEN_PRIMARY_GROUP {
    PVOID PrimaryGroup;
};

typedef struct _TOKEN_PRIVILEGES {
    ULONG PrivilegeCount;
    struct _LUID_AND_ATTRIBUTES Privileges[1];
};

typedef struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION {
    struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION *Attributes;
    enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION *Operations;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION {
    USHORT Version;
    USHORT Reserved;
    ULONG AttributeCount;
     <unnamed-type-Attribute>;
    union {
        struct _TOKEN_SECURITY_ATTRIBUTE_V1 *pAttributeV1;
    } Attribute;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE {
    ULONG64 Version;
    struct _UNICODE_STRING Name;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
    PVOID pValue;
    ULONG ValueLength;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1 {
    ULONG Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        ULONG pInt64[1];
        ULONG pUint64[1];
        ULONG ppString[1];
        ULONG pFqbn[1];
        ULONG pOctetString[1];
    } Values;
};

typedef struct _TOKEN_SECURITY_ATTRIBUTE_V1 {
    struct _UNICODE_STRING Name;
    USHORT ValueType;
    USHORT Reserved;
    ULONG Flags;
    ULONG ValueCount;
     <unnamed-type-Values>;
    union {
        PLONG64 pInt64;
        PULONG64 pUint64;
        struct _UNICODE_STRING *pString;
        struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE *pFqbn;
        struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *pOctetString;
    } Values;
};

typedef struct _TOKEN_SID_INFORMATION {
    PVOID Sid;
};

typedef struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    struct _LUID SourceIdentifier;
};

typedef struct _TOKEN_STATISTICS {
    struct _LUID TokenId;
    struct _LUID AuthenticationId;
    union _LARGE_INTEGER ExpirationTime;
    enum _TOKEN_TYPE TokenType;
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    ULONG DynamicCharged;
    ULONG DynamicAvailable;
    ULONG GroupCount;
    ULONG PrivilegeCount;
    struct _LUID ModifiedId;
};

typedef struct _TOKEN_USER {
    struct _SID_AND_ATTRIBUTES User;
};

typedef struct _TOKEN_USER_CLAIMS {
    PVOID UserClaims;
};

typedef struct _TPP_THREAD_DATA_CALLBACK {
};

typedef struct _TP_ALPC {
};

typedef struct _TP_CALLBACK_ENVIRON_V3 {
    ULONG Version;
    struct _TP_POOL *Pool;
    struct _TP_CLEANUP_GROUP *CleanupGroup;
    PVOID CleanupGroupCancelCallback;
    PVOID RaceDll;
    struct _ACTIVATION_CONTEXT *ActivationContext;
    PVOID FinalizationCallback;
    union {
        ULONG Flags;
        struct {
            ULONG LongFunction : 1;
            ULONG Persistent : 1;
            ULONG Private : 30;
        } s;
    } u;
    enum _TP_CALLBACK_PRIORITY CallbackPriority;
    ULONG Size;
};

typedef struct _TP_CALLBACK_INSTANCE {
};

typedef struct _TP_CLEANUP_GROUP {
};

typedef struct _TP_DEBUG_FREE_INFO {
    ULONG FreeListSize;
};

typedef struct _TP_DIRECT {
    struct _TP_TASK Task;
    ULONG64 Lock;
    struct _LIST_ENTRY IoCompletionInformationList;
    PVOID Callback;
    ULONG NumaNode;
    UCHAR IdealProcessor;
};

typedef struct _TP_IO {
};

typedef struct _TP_JOB {
};

typedef struct _TP_POOL {
};

typedef struct _TP_POOL_STACK_INFORMATION {
    ULONG64 StackReserve;
    ULONG64 StackCommit;
};

typedef struct _TP_TASK {
    struct _TP_TASK_CALLBACKS *Callbacks;
    ULONG NumaNode;
    UCHAR IdealProcessor;
    struct _LIST_ENTRY ListEntry;
};

typedef struct _TP_TASK_CALLBACKS {
    PVOID ExecuteCallback;
    PVOID Unposted;
};

typedef struct _TP_TIMER {
};

typedef struct _TP_WAIT {
};

typedef struct _TP_WORK {
};

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION {
    struct _GUID TmIdentity;
    union _LARGE_INTEGER VirtualClock;
};

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {
    ULONG LogPathLength;
    WCHAR LogPath[1];
};

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION {
    struct _GUID LogIdentity;
};

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {
    struct _GUID OldestTransactionGuid;
};

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {
    ULONG64 LastRecoveredLsn;
};

typedef struct _TRANSACTION_BASIC_INFORMATION {
    struct _GUID TransactionId;
    ULONG State;
    ULONG Outcome;
};

typedef struct _TRANSACTION_BIND_INFORMATION {
    PVOID TmHandle;
};

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION {
    ULONG NumberOfEnlistments;
    struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
};

typedef struct _TRANSACTION_ENLISTMENT_PAIR {
    struct _GUID EnlistmentId;
    struct _GUID ResourceManagerId;
};

typedef struct _TRANSACTION_LIST_ENTRY {
    struct _GUID UOW;
};

typedef struct _TRANSACTION_LIST_INFORMATION {
    ULONG NumberOfTransactions;
    struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
};

typedef struct _TRANSACTION_NOTIFICATION {
    PVOID TransactionKey;
    ULONG TransactionNotification;
    union _LARGE_INTEGER TmVirtualClock;
    ULONG ArgumentLength;
};

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {
    ULONG MarshalCookie;
    struct _GUID UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {
    ULONG PropagationCookie;
    struct _GUID UOW;
    struct _GUID TmIdentity;
    ULONG BufferLength;
};

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {
    struct _GUID EnlistmentId;
    struct _GUID UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {
    ULONG SavepointId;
};

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {
    struct _GUID TmIdentity;
    ULONG Flags;
};

typedef struct _TRANSACTION_PROPERTIES_INFORMATION {
    ULONG IsolationLevel;
    ULONG IsolationFlags;
    union _LARGE_INTEGER Timeout;
    ULONG Outcome;
    ULONG DescriptionLength;
    WCHAR Description[1];
};

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {
    struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
};

typedef struct _TRANSMIT_FILE_BUFFERS {
    PVOID Head;
    ULONG HeadLength;
    PVOID Tail;
    ULONG TailLength;
};

typedef struct _TREEITEM {
};

typedef struct _TRIVERTEX {
    LONG x;
    LONG y;
    USHORT Red;
    USHORT Green;
    USHORT Blue;
    USHORT Alpha;
};

typedef struct _TRUSTED_CONTROLLERS_INFO {
    ULONG Entries;
    struct _UNICODE_STRING *Names;
};

typedef struct _TRUSTED_DOMAIN_AUTH_INFORMATION {
    ULONG IncomingAuthInfos;
    struct _LSA_AUTH_INFORMATION *IncomingAuthenticationInformation;
    struct _LSA_AUTH_INFORMATION *IncomingPreviousAuthenticationInformation;
    ULONG OutgoingAuthInfos;
    struct _LSA_AUTH_INFORMATION *OutgoingAuthenticationInformation;
    struct _LSA_AUTH_INFORMATION *OutgoingPreviousAuthenticationInformation;
};

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION {
    struct _TRUSTED_DOMAIN_INFORMATION_EX Information;
    struct _TRUSTED_POSIX_OFFSET_INFO PosixOffset;
    struct _TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
};

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION2 {
    struct _TRUSTED_DOMAIN_INFORMATION_EX2 Information;
    struct _TRUSTED_POSIX_OFFSET_INFO PosixOffset;
    struct _TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
};

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING FlatName;
    PVOID Sid;
    ULONG TrustDirection;
    ULONG TrustType;
    ULONG TrustAttributes;
};

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX2 {
    struct _UNICODE_STRING Name;
    struct _UNICODE_STRING FlatName;
    PVOID Sid;
    ULONG TrustDirection;
    ULONG TrustType;
    ULONG TrustAttributes;
    ULONG ForestTrustLength;
    PUCHAR ForestTrustInfo;
};

typedef struct _TRUSTED_DOMAIN_NAME_INFO {
    struct _UNICODE_STRING Name;
};

typedef struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES {
    ULONG SupportedEncryptionTypes;
};

typedef struct _TRUSTED_PASSWORD_INFO {
    struct _UNICODE_STRING Password;
    struct _UNICODE_STRING OldPassword;
};

typedef struct _TRUSTED_POSIX_OFFSET_INFO {
    ULONG Offset;
};

typedef struct _TSHARE_CACHE {
    ULONG Reserved;
};

typedef struct _TSHARE_COUNTERS {
    ULONG Reserved;
};

typedef struct _TS_AUTORECONNECTINFO {
    USHORT cbAutoReconnectInfo;
    UCHAR AutoReconnectInfo[128];
};

typedef struct _TS_DYNAMIC_TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _TS_SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _TS_SYSTEMTIME DaylightDate;
    LONG DaylightBias;
    WCHAR TimeZoneKeyName[128];
    USHORT DynamicDaylightTimeDisabled;
};

typedef struct _TS_SYSTEMTIME {
    USHORT wYear;
    USHORT wMonth;
    USHORT wDayOfWeek;
    USHORT wDay;
    USHORT wHour;
    USHORT wMinute;
    USHORT wSecond;
    USHORT wMilliseconds;
};

typedef struct _TS_TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    struct _TS_SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    struct _TS_SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _TTGETTITLE {
    ULONG dwSize;
    ULONG uTitleBitmap;
    ULONG cch;
    PWCHAR pszTitle;
};

typedef struct _TT_HITTESTINFOA {
    struct HWND__ *hwnd;
    struct tagPOINT pt;
    struct tagTOOLINFOA ti;
};

typedef struct _TT_HITTESTINFOW {
    struct HWND__ *hwnd;
    struct tagPOINT pt;
    struct tagTOOLINFOW ti;
};

typedef struct _TXFS_CREATE_MINIVERSION_INFO {
    USHORT StructureVersion;
    USHORT StructureLength;
    ULONG BaseVersion;
    USHORT MiniVersion;
};

typedef struct _TXFS_GET_METADATA_INFO_OUT {
     <unnamed-type-TxfFileId>;
    struct {
        LONG64 LowPart;
        LONG64 HighPart;
    } TxfFileId;
    struct _GUID LockingTransaction;
    ULONG64 LastLsn;
    ULONG TransactionState;
};

typedef struct _TXFS_GET_TRANSACTED_VERSION {
    ULONG ThisBaseVersion;
    ULONG LatestVersion;
    USHORT ThisMiniVersion;
    USHORT FirstMiniVersion;
    USHORT LatestMiniVersion;
};

typedef struct _TXFS_LIST_TRANSACTIONS {
    ULONG64 NumberOfTransactions;
    ULONG64 BufferSizeRequired;
};

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY {
    struct _GUID TransactionId;
    ULONG TransactionState;
    ULONG Reserved1;
    ULONG Reserved2;
    LONG64 Reserved3;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES {
    struct _GUID KtmTransaction;
    ULONG64 NumberOfFiles;
    ULONG64 BufferSizeRequired;
    ULONG64 Offset;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {
    ULONG64 Offset;
    ULONG NameFlags;
    LONG64 FileId;
    ULONG Reserved1;
    ULONG Reserved2;
    LONG64 Reserved3;
    WCHAR FileName[1];
};

typedef struct _TXFS_MODIFY_RM {
    ULONG Flags;
    ULONG LogContainerCountMax;
    ULONG LogContainerCountMin;
    ULONG LogContainerCount;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG64 Reserved;
    USHORT LoggingMode;
};

typedef struct _TXFS_QUERY_RM_INFORMATION {
    ULONG BytesRequired;
    ULONG64 TailLsn;
    ULONG64 CurrentLsn;
    ULONG64 ArchiveTailLsn;
    ULONG64 LogContainerSize;
    union _LARGE_INTEGER HighestVirtualClock;
    ULONG LogContainerCount;
    ULONG LogContainerCountMax;
    ULONG LogContainerCountMin;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG Flags;
    USHORT LoggingMode;
    USHORT Reserved;
    ULONG RmState;
    ULONG64 LogCapacity;
    ULONG64 LogFree;
    ULONG64 TopsSize;
    ULONG64 TopsUsed;
    ULONG64 TransactionCount;
    ULONG64 OnePCCount;
    ULONG64 TwoPCCount;
    ULONG64 NumberLogFileFull;
    ULONG64 OldestTransactionAge;
    struct _GUID RMName;
    ULONG TmLogPathOffset;
};

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT {
    ULONG BufferLength;
    UCHAR Buffer[1];
};

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION {
    union _LARGE_INTEGER LastVirtualClock;
    ULONG64 LastRedoLsn;
    ULONG64 HighestRecoveryLsn;
    ULONG Flags;
};

typedef struct _TXFS_SAVEPOINT_INFORMATION {
    PVOID KtmTransaction;
    ULONG ActionCode;
    ULONG SavepointId;
};

typedef struct _TXFS_START_RM_INFORMATION {
    ULONG Flags;
    ULONG64 LogContainerSize;
    ULONG LogContainerCountMin;
    ULONG LogContainerCountMax;
    ULONG LogGrowthIncrement;
    ULONG LogAutoShrinkPercentage;
    ULONG TmLogPathOffset;
    USHORT TmLogPathLength;
    USHORT LoggingMode;
    USHORT LogPathLength;
    USHORT Reserved;
    WCHAR LogPath[1];
};

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO {
    UCHAR TransactionsActiveAtSnapshot;
};

typedef struct _TXFS_WRITE_BACKUP_INFORMATION {
    UCHAR Buffer[1];
};

typedef struct _TlgDecay<char const *> {
    PCHAR type;
};

typedef struct _TlgDecay<unsigned short const *> {
    PWCHAR type;
};

typedef struct _TlgDecay_cv<char const *> {
    PCHAR type;
};

typedef struct _TlgDecay_cv<unsigned short const *> {
    PWCHAR type;
};

typedef struct _TlgDecay_noref<char const *> {
    PCHAR type;
};

typedef struct _TlgDecay_noref<unsigned short const *> {
    PWCHAR type;
};

typedef struct _TlgEventMetadata_t {
    UCHAR Type;
    UCHAR Channel;
    UCHAR Level;
    UCHAR Opcode;
    ULONG64 Keyword;
    USHORT RemainingSize;
};

typedef struct _TlgIntegralConstant<unsigned __int64,0> {
    ULONG64 value;
};

typedef struct _TlgIntegralConstant<unsigned __int64,140737488355328> {
    ULONG64 value;
};

typedef struct _TlgIntegralConstant<unsigned __int64,35184372088832> {
    ULONG64 value;
};

typedef struct _TlgIntegralConstant<unsigned __int64,70368744177664> {
    ULONG64 value;
};

typedef struct _TlgIntegralConstant<unsigned char,1> {
    UCHAR value;
};

typedef struct _TlgIntegralConstant<unsigned char,2> {
    UCHAR value;
};

typedef struct _TlgIntegralConstant<unsigned char,5> {
    UCHAR value;
};

typedef struct _TlgProviderMetadata_t {
    UCHAR Type;
    struct _GUID ProviderId;
    USHORT RemainingSize;
};

typedef struct _TlgProvider_t {
    ULONG LevelPlus1;
    PUSHORT ProviderMetadataPtr;
    ULONG64 KeywordAny;
    ULONG64 KeywordAll;
    ULONG64 RegHandle;
    PVOID EnableCallback;
    PVOID CallbackContext;
};

typedef struct _TlgRemoveReference<char const *> {
    PCHAR type;
};

typedef struct _TlgRemoveReference<unsigned short const *> {
    PWCHAR type;
};

typedef struct _TlgStructSizeMustBeLessThan128<1,1> {
};

typedef struct _TlgStructSizeMustBeLessThan128<14,1> {
};

typedef struct _TlgStructSizeMustBeLessThan128<17,1> {
};

typedef struct _TlgStructSizeMustBeLessThan128<2,1> {
};

typedef struct _TlgStructSizeMustBeLessThan128<4,1> {
};

typedef struct _TlgTagEnc<0,1> {
    UCHAR type;
    UCHAR value;
};

typedef struct _TlgTypeMap<char const *> {
    struct _TlgTypeMapBase<char const *> _TlgTypeMapBase<char const *>;
};

typedef struct _TlgTypeMap<unsigned short const *> {
    struct _TlgTypeMapBase<unsigned short const *> _TlgTypeMapBase<unsigned short const *>;
};

typedef struct _TlgTypeMapBase<_FILETIME> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<_GUID> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<_SID *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<_SID const *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<_SYSTEMTIME> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<__int64> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<bool> {
    USHORT _TlgTypeType0;
    USHORT _TlgTypeType1;
    USHORT _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<char *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<char const *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<char> {
    USHORT _TlgTypeType0;
    USHORT _TlgTypeType1;
    USHORT _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<double> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<float> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<int> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<long> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<short> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<signed char> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned __int64> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned char> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned int> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned long> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned short *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned short const *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<unsigned short> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<void *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<void const *> {
    UCHAR _TlgTypeType0;
    USHORT _TlgTypeType1;
    UCHAR _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TlgTypeMapBase<wchar_t> {
    USHORT _TlgTypeType0;
    USHORT _TlgTypeType1;
    USHORT _TlgType0;
    USHORT _TlgType1;
};

typedef struct _TraceLoggingKeyword<0> {
    struct _TlgIntegralConstant<unsigned __int64,0> _TlgIntegralConstant<unsigned __int64,0>;
};

typedef struct _TraceLoggingKeyword<140737488355328> {
    struct _TlgIntegralConstant<unsigned __int64,140737488355328> _TlgIntegralConstant<unsigned __int64,140737488355328>;
};

typedef struct _TraceLoggingKeyword<35184372088832> {
    struct _TlgIntegralConstant<unsigned __int64,35184372088832> _TlgIntegralConstant<unsigned __int64,35184372088832>;
};

typedef struct _TraceLoggingKeyword<70368744177664> {
    struct _TlgIntegralConstant<unsigned __int64,70368744177664> _TlgIntegralConstant<unsigned __int64,70368744177664>;
};

typedef struct _TraceLoggingLevel<5> {
    struct _TlgIntegralConstant<unsigned char,5> _TlgIntegralConstant<unsigned char,5>;
};

typedef struct _TraceLoggingMetadata_t {
    ULONG Signature;
    USHORT Size;
    UCHAR Version;
    UCHAR Flags;
    ULONG64 Magic;
};

typedef struct _TraceLoggingOpcode<1> {
    struct _TlgIntegralConstant<unsigned char,1> _TlgIntegralConstant<unsigned char,1>;
};

typedef struct _TraceLoggingOpcode<2> {
    struct _TlgIntegralConstant<unsigned char,2> _TlgIntegralConstant<unsigned char,2>;
};

typedef struct _TypeDescriptor {
    PVOID pVFTable;
    PVOID spare;
    CHAR name[0];
};

typedef struct _UDACCEL {
    ULONG nSec;
    ULONG nInc;
};

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {
    ULONG UmsVersion;
    struct _RTL_UMS_CONTEXT *RtlUmsContext;
    PVOID UmsContext;
    struct _RTL_UMS_COMPLETION_LIST *RtlUmsCompletionList;
    PVOID UmsCompletionList;
};

typedef struct _UMS_SCHEDULER_STARTUP_INFO {
    ULONG UmsVersion;
    PVOID CompletionList;
    PVOID SchedulerProc;
    PVOID SchedulerParam;
};

typedef struct _UMS_SYSTEM_THREAD_INFORMATION {
    ULONG UmsVersion;
    ULONG IsUmsSchedulerThread : 1;
    ULONG IsUmsWorkerThread : 1;
    ULONG ThreadUmsFlags;
};

typedef struct _UMTHDR {
    ULONG cjSize;
    ULONG ulType;
    ULONG ulReserved1;
    ULONG ulReserved2;
};

typedef struct _UNICODE_PREFIX_TABLE {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _UNICODE_PREFIX_TABLE_ENTRY *LastNextEntry;
};

typedef struct _UNICODE_PREFIX_TABLE_ENTRY {
    SHORT NodeTypeCode;
    SHORT NameLength;
    struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;
    struct _UNICODE_PREFIX_TABLE_ENTRY *CaseMatch;
    struct _RTL_SPLAY_LINKS Links;
    struct _UNICODE_STRING *Prefix;
};

typedef struct _UNICODE_STRING {
    USHORT Length;
    USHORT MaximumLength;
    PWCHAR Buffer;
};

typedef struct _UNIQUE_PROCESS_INFORMATION {
    ULONG64 DontUse : 9;
    ULONG64 UniqueProcessKey : 48;
    ULONG64 Reserved : 7;
};

typedef struct _UNIVERSAL_FONT_ID {
    ULONG CheckSum;
    ULONG Index;
};

typedef struct _UNIVERSAL_NAME_INFOA {
    PCHAR lpUniversalName;
};

typedef struct _UNIVERSAL_NAME_INFOW {
    PWCHAR lpUniversalName;
};

typedef struct _UNLOAD_DLL_DEBUG_INFO {
    PVOID lpBaseOfDll;
};

typedef struct _UNSIGNED_RATIO {
    ULONG uiNumerator;
    ULONG uiDenominator;
};

typedef struct _UNWIND_HISTORY_TABLE {
    ULONG Count;
    UCHAR LocalHint;
    UCHAR GlobalHint;
    UCHAR Search;
    UCHAR Once;
    ULONG64 LowAddress;
    ULONG64 HighAddress;
    struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
};

typedef struct _UNWIND_HISTORY_TABLE_ENTRY {
    ULONG64 ImageBase;
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY *FunctionEntry;
};

typedef struct _UNWIND_INFO {
    UCHAR Version : 3;
    UCHAR Flags : 5;
    UCHAR SizeOfProlog;
    UCHAR CountOfCodes;
    UCHAR FrameRegister : 4;
    UCHAR FrameOffset : 4;
    union _UNWIND_CODE UnwindCode[1];
};

typedef struct _USERCONFIGA {
    ULONG fInheritAutoLogon : 1;
    ULONG fInheritResetBroken : 1;
    ULONG fInheritReconnectSame : 1;
    ULONG fInheritInitialProgram : 1;
    ULONG fInheritCallback : 1;
    ULONG fInheritCallbackNumber : 1;
    ULONG fInheritShadow : 1;
    ULONG fInheritMaxSessionTime : 1;
    ULONG fInheritMaxDisconnectionTime : 1;
    ULONG fInheritMaxIdleTime : 1;
    ULONG fInheritAutoClient : 1;
    ULONG fInheritSecurity : 1;
    ULONG fPromptForPassword : 1;
    ULONG fResetBroken : 1;
    ULONG fReconnectSame : 1;
    ULONG fLogonDisabled : 1;
    ULONG fWallPaperDisabled : 1;
    ULONG fAutoClientDrives : 1;
    ULONG fAutoClientLpts : 1;
    ULONG fForceClientLptDef : 1;
    ULONG fRequireEncryption : 1;
    ULONG fDisableEncryption : 1;
    ULONG fUnused1 : 1;
    ULONG fHomeDirectoryMapRoot : 1;
    ULONG fUseDefaultGina : 1;
    ULONG fCursorBlinkDisabled : 1;
    ULONG fPublishedApp : 1;
    ULONG fHideTitleBar : 1;
    ULONG fMaximize : 1;
    ULONG fDisableCpm : 1;
    ULONG fDisableCdm : 1;
    ULONG fDisableCcm : 1;
    ULONG fDisableLPT : 1;
    ULONG fDisableClip : 1;
    ULONG fDisableExe : 1;
    ULONG fDisableCam : 1;
    ULONG fDisableAutoReconnect : 1;
    ULONG fErrorInvalidProfile : 1;
    ULONG fPasswordIsScPin : 1;
    ULONG fDisablePNPRedir : 1;
    ULONG EasyPrinterDrive : 3;
    CHAR UserName[21];
    CHAR Domain[18];
    CHAR Password[15];
    CHAR WorkDirectory[257];
    CHAR InitialProgram[257];
    CHAR CallbackNumber[51];
    enum _CALLBACKCLASS Callback;
    enum _SHADOWCLASS Shadow;
    ULONG MaxConnectionTime;
    ULONG MaxDisconnectionTime;
    ULONG MaxIdleTime;
    ULONG KeyboardLayout;
    UCHAR MinEncryptionLevel;
    CHAR NWLogonServer[48];
    CHAR PublishedName[65];
    CHAR WFProfilePath[257];
    CHAR WFHomeDir[257];
    CHAR WFHomeDirDrive[4];
};

typedef struct _USERCONFIGW {
    ULONG fInheritAutoLogon : 1;
    ULONG fInheritResetBroken : 1;
    ULONG fInheritReconnectSame : 1;
    ULONG fInheritInitialProgram : 1;
    ULONG fInheritCallback : 1;
    ULONG fInheritCallbackNumber : 1;
    ULONG fInheritShadow : 1;
    ULONG fInheritMaxSessionTime : 1;
    ULONG fInheritMaxDisconnectionTime : 1;
    ULONG fInheritMaxIdleTime : 1;
    ULONG fInheritAutoClient : 1;
    ULONG fInheritSecurity : 1;
    ULONG fPromptForPassword : 1;
    ULONG fResetBroken : 1;
    ULONG fReconnectSame : 1;
    ULONG fLogonDisabled : 1;
    ULONG fWallPaperDisabled : 1;
    ULONG fAutoClientDrives : 1;
    ULONG fAutoClientLpts : 1;
    ULONG fForceClientLptDef : 1;
    ULONG fRequireEncryption : 1;
    ULONG fDisableEncryption : 1;
    ULONG fUnused1 : 1;
    ULONG fHomeDirectoryMapRoot : 1;
    ULONG fUseDefaultGina : 1;
    ULONG fCursorBlinkDisabled : 1;
    ULONG fPublishedApp : 1;
    ULONG fHideTitleBar : 1;
    ULONG fMaximize : 1;
    ULONG fDisableCpm : 1;
    ULONG fDisableCdm : 1;
    ULONG fDisableCcm : 1;
    ULONG fDisableLPT : 1;
    ULONG fDisableClip : 1;
    ULONG fDisableExe : 1;
    ULONG fDisableCam : 1;
    ULONG fDisableAutoReconnect : 1;
    ULONG ColorDepth : 3;
    ULONG fInheritColorDepth : 1;
    ULONG fErrorInvalidProfile : 1;
    ULONG fPasswordIsScPin : 1;
    ULONG fDisablePNPRedir : 1;
    ULONG EasyPrinterDrive : 3;
    ULONG fAllowDwm : 1;
    ULONG fEnableTimeoutWarning : 1;
    WCHAR UserName[21];
    WCHAR Domain[18];
    WCHAR Password[15];
    WCHAR WorkDirectory[257];
    WCHAR InitialProgram[257];
    WCHAR CallbackNumber[51];
    enum _CALLBACKCLASS Callback;
    enum _SHADOWCLASS Shadow;
    ULONG MaxConnectionTime;
    ULONG MaxDisconnectionTime;
    ULONG MaxIdleTime;
    ULONG KeyboardLayout;
    UCHAR MinEncryptionLevel;
    WCHAR NWLogonServer[48];
    WCHAR PublishedName[65];
    WCHAR WFProfilePath[257];
    WCHAR WFHomeDir[257];
    WCHAR WFHomeDirDrive[4];
};

typedef struct _USER_MARSHAL_CB {
    ULONG Flags;
    struct _MIDL_STUB_MESSAGE *pStubMsg;
    PUCHAR pReserve;
    ULONG Signature;
    enum _USER_MARSHAL_CB_TYPE CBType;
    PUCHAR pFormat;
    PUCHAR pTypeFormat;
};

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE {
    PULONG pfnBufferSize;
    PUCHAR *pfnMarshall;
    PUCHAR *pfnUnmarshall;
    PVOID pfnFree;
};

typedef struct _UUID_VECTOR {
    ULONG Count;
    struct _GUID *Uuid[1];
};

typedef struct _VARIABLE_NAME {
    ULONG NextEntryOffset;
    struct _GUID VendorGuid;
    WCHAR Name[1];
};

typedef struct _VARIABLE_NAME_AND_VALUE {
    ULONG NextEntryOffset;
    ULONG ValueOffset;
    ULONG ValueLength;
    ULONG Attributes;
    struct _GUID VendorGuid;
    WCHAR Name[1];
};

typedef struct _VCN_RANGE_INPUT_BUFFER {
    union _LARGE_INTEGER StartingVcn;
    union _LARGE_INTEGER ClusterCount;
};

typedef struct _VERIFY_INFORMATION {
    union _LARGE_INTEGER StartingOffset;
    ULONG Length;
};

typedef struct _VIDEOPARAMETERS {
    struct _GUID Guid;
    ULONG dwOffset;
    ULONG dwCommand;
    ULONG dwFlags;
    ULONG dwMode;
    ULONG dwTVStandard;
    ULONG dwAvailableModes;
    ULONG dwAvailableTVStandard;
    ULONG dwFlickerFilter;
    ULONG dwOverScanX;
    ULONG dwOverScanY;
    ULONG dwMaxUnscaledX;
    ULONG dwMaxUnscaledY;
    ULONG dwPositionX;
    ULONG dwPositionY;
    ULONG dwBrightness;
    ULONG dwContrast;
    ULONG dwCPType;
    ULONG dwCPCommand;
    ULONG dwCPStandard;
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;
    UCHAR bOEMCopyProtection[256];
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT {
    ULONG NumberOfWorkerThreads;
    ULONG Flags;
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX {
    USHORT HeaderSize;
    ULONG Flags;
    ULONG NotificationInfoSize;
    USHORT NotificationInfoOffset;
    USHORT ProviderMajorVersion;
};

typedef struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT {
    struct _GUID VirtualizationInstanceID;
};

typedef struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT {
    ULONG Size;
    enum _VIRTUAL_STORAGE_BEHAVIOR_CODE BehaviorCode;
};

typedef struct _VIRTUAL_STORAGE_TYPE {
    ULONG DeviceId;
    struct _GUID VendorId;
};

typedef struct _VISUALSTYLEENUM {
    ULONG cbStruct;
    ULONG ulFlags;
    struct HINSTANCE__ *hInstVS;
    PWCHAR pszColorVariant;
    PWCHAR pszSizeVariant;
    PVOID pvParam;
    PLONG pfnCB;
};

typedef struct _VISUALSTYLEINFO {
    ULONG cbStruct;
    ULONG ulMask;
    ULONG ulMajorVersion;
    ULONG ulReserved0;
    PWCHAR pszDisplayName;
    ULONG cchDisplayName;
    PWCHAR pszToolTip;
    ULONG cchToolTip;
    ULONG ulMinColorDepth;
    ULONG ulReserved1;
};

typedef struct _VISUALSTYLELOAD {
    ULONG cbStruct;
    ULONG ulFlags;
    struct HINSTANCE__ *hInstVS;
    PWCHAR pszColorVariant;
    PWCHAR pszSizeVariant;
    IParserCallBack *pfnCB;
};

typedef struct _VISUALSTYLEVARIANTINFO {
    ULONG cbStruct;
    ULONG ulMask;
    PWCHAR pszName;
    ULONG cchName;
    PWCHAR pszDisplayName;
    ULONG cchDisplayName;
    PWCHAR pszToolTip;
    ULONG cchToolTip;
    ULONG ulReserved0;
    ULONG ulMinColorDepth;
};

typedef struct _VM_COUNTERS {
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
};

typedef struct _VM_COUNTERS_EX {
    ULONG64 PeakVirtualSize;
    ULONG64 VirtualSize;
    ULONG PageFaultCount;
    ULONG64 PeakWorkingSetSize;
    ULONG64 WorkingSetSize;
    ULONG64 QuotaPeakPagedPoolUsage;
    ULONG64 QuotaPagedPoolUsage;
    ULONG64 QuotaPeakNonPagedPoolUsage;
    ULONG64 QuotaNonPagedPoolUsage;
    ULONG64 PagefileUsage;
    ULONG64 PeakPagefileUsage;
    ULONG64 PrivateUsage;
};

typedef struct _VM_COUNTERS_EX2 {
    struct _VM_COUNTERS_EX CountersEx;
    ULONG64 PrivateWorkingSetSize;
    ULONG64 SharedCommitUsage;
};

typedef struct _VOLUME_DISK_EXTENTS {
    ULONG NumberOfDiskExtents;
    struct _DISK_EXTENT Extents[1];
};

typedef struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION {
    ULONG64 GptAttributes;
};

typedef struct _VOLUME_REFS_INFO_BUFFER {
    union _LARGE_INTEGER CacheSizeInBytes;
    union _LARGE_INTEGER AllocatedCacheInBytes;
    union _LARGE_INTEGER PopulatedCacheInBytes;
    union _LARGE_INTEGER InErrorCacheInBytes;
    union _LARGE_INTEGER MemoryUsedForCacheMetadata;
    ULONG CacheLineSize;
    LONG CacheTransactionsOutstanding;
    LONG CacheLinesFree;
    LONG CacheLinesInError;
    union _LARGE_INTEGER CacheHitsInBytes;
    union _LARGE_INTEGER CacheMissesInBytes;
    union _LARGE_INTEGER CachePopulationUpdatesInBytes;
    union _LARGE_INTEGER CacheWriteThroughUpdatesInBytes;
    union _LARGE_INTEGER CacheInvalidationsInBytes;
    union _LARGE_INTEGER CacheOverReadsInBytes;
    union _LARGE_INTEGER MetadataWrittenBytes;
    LONG CacheHitCounter;
    LONG CacheMissCounter;
    LONG CacheLineAllocationCounter;
    LONG CacheInvalidationsCounter;
    LONG CachePopulationUpdatesCounter;
    LONG CacheWriteThroughUpdatesCounter;
    LONG MaxCacheTransactionsOutstanding;
    LONG DataWritesReallocationCount;
    LONG DataInPlaceWriteCount;
    LONG MetadataAllocationsFastTierCount;
    LONG MetadataAllocationsSlowTierCount;
    LONG DataAllocationsFastTierCount;
    LONG DataAllocationsSlowTierCount;
    LONG DestagesSlowTierToFastTier;
    LONG DestagesFastTierToSlowTier;
    LONG SlowTierDataFillRatio;
    LONG FastTierDataFillRatio;
    LONG SlowTierMetadataFillRatio;
    LONG FastTierMetadataFillRatio;
    LONG SlowToFastDestageReadLatency;
    LONG SlowToFastDestageReadLatencyBase;
    LONG SlowToFastDestageWriteLatency;
    LONG SlowToFastDestageWriteLatencyBase;
    LONG FastToSlowDestageReadLatency;
    LONG FastToSlowDestageReadLatencyBase;
    LONG FastToSlowDestageWriteLatency;
    LONG FastToSlowDestageWriteLatencyBase;
    LONG SlowTierContainerFillRatio;
    LONG SlowTierContainerFillRatioBase;
    LONG FastTierContainerFillRatio;
    LONG FastTierContainerFillRatioBase;
    LONG TreeUpdateLatency;
    LONG TreeUpdateLatencyBase;
    LONG CheckpointLatency;
    LONG CheckpointLatencyBase;
    LONG TreeUpdateCount;
    LONG CheckpointCount;
    LONG LogWriteCount;
    LONG LogFillRatio;
    LONG ReadCacheInvalidationsForOverwrite;
    LONG ReadCacheInvalidationsForReuse;
    LONG ReadCacheInvalidationsGeneral;
    LONG ReadCacheChecksOnMount;
    LONG ReadCacheIssuesOnMount;
    LONG TrimLatency;
    LONG TrimLatencyBase;
    LONG DataCompactionCount;
    LONG CompactionReadLatency;
    LONG CompactionReadLatencyBase;
    LONG CompactionWriteLatency;
    LONG CompactionWriteLatencyBase;
    union _LARGE_INTEGER DataInPlaceWriteClusterCount;
    LONG CompactionFailedDueToIneligibleContainer;
    LONG CompactionFailedDueToMaxFragmentation;
    LONG CompactedContainerFillRatio;
    LONG CompactedContainerFillRatioBase;
    LONG ContainerMoveRetryCount;
    LONG ContainerMoveFailedDueToIneligibleContainer;
    LONG CompactionFailureCount;
    LONG ContainerMoveFailureCount;
    union _LARGE_INTEGER NumberOfDirtyMetadataPages;
    LONG NumberOfDirtyTableListEntries;
    LONG NumberOfDeleteQueueEntries;
};

typedef struct _VSRECORD {
    LONG lSymbolVal;
    LONG lType;
    LONG iClass;
    LONG iPart;
    LONG iState;
    ULONG uResID;
    LONG lReserved;
    LONG cbData;
    VOID _VSRECORD;
};

typedef struct _VSRESOURCE {
    enum VSRESOURCETYPE type;
    ULONG uResID;
    CWideString strValue;
    CWideString strComment;
    VOID _VSRESOURCE;
    VOID _VSRESOURCE;
    VOID _VSRESOURCE;
    VOID ~_VSRESOURCE;
    struct _VSRESOURCE *operator=;
    struct _VSRESOURCE *operator=;
    PVOID __vecDelDtor;
};

typedef struct _WAKE_TIMER_INFO {
    ULONG64 OffsetToNext;
    union _ULARGE_INTEGER DueTime;
    ULONG Period;
    struct _DIAGNOSTIC_BUFFER ReasonContext;
};

typedef struct _WAVEFORM_INFO {
    USHORT ordinal;
    USHORT waveform;
    ULONG durationInMS;
};

typedef struct _WDCONFIG2A {
    struct _WDCONFIGA Wd;
    struct _ASYNCCONFIGA Async;
    struct _USERCONFIGA User;
};

typedef struct _WDCONFIG2W {
    struct _WDCONFIGW Wd;
    struct _ASYNCCONFIGW Async;
    struct _USERCONFIGW User;
};

typedef struct _WDCONFIGA {
    CHAR WdName[33];
    CHAR WdDLL[33];
    CHAR WsxDLL[33];
    ULONG WdFlag;
    ULONG WdInputBufferLength;
    CHAR CfgDLL[33];
    CHAR WdPrefix[13];
};

typedef struct _WDCONFIGW {
    WCHAR WdName[33];
    WCHAR WdDLL[33];
    WCHAR WsxDLL[33];
    ULONG WdFlag;
    ULONG WdInputBufferLength;
    WCHAR CfgDLL[33];
    WCHAR WdPrefix[13];
};

typedef struct _WGLSWAP {
    struct HDC__ *hdc;
    ULONG uiFlags;
};

typedef struct _WIM_PROVIDER_ADD_OVERLAY_INPUT {
    ULONG WimType;
    ULONG WimIndex;
    ULONG WimFileNameOffset;
    ULONG WimFileNameLength;
};

typedef struct _WIM_PROVIDER_CONTROL_INTEGRITY {
    ULONG ControlCode;
};

typedef struct _WIM_PROVIDER_EXTERNAL_INFO {
    ULONG Version;
    ULONG Flags;
    union _LARGE_INTEGER DataSourceId;
    UCHAR ResourceHash[20];
};

typedef struct _WIM_PROVIDER_INTEGRITY_STATUS {
    UCHAR IntegrityComplete;
    UCHAR IntegrityRunning;
    ULONG64 IntegrityAvailable;
    ULONG64 IntegrityRequired;
};

typedef struct _WIM_PROVIDER_OVERLAY_ENTRY {
    ULONG NextEntryOffset;
    union _LARGE_INTEGER DataSourceId;
    struct _GUID WimGuid;
    ULONG WimFileNameOffset;
    ULONG WimType;
    ULONG WimIndex;
    ULONG Flags;
};

typedef struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_START_INTEGRITY {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
};

typedef struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT {
    union _LARGE_INTEGER DataSourceId;
    ULONG WimFileNameOffset;
    ULONG WimFileNameLength;
};

typedef struct _WIN32K_SYSCALL_FILTER {
    ULONG FilterState;
    ULONG FilterSet;
};

typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
};

typedef struct _WIN32_FIND_DATAA {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG dwReserved0;
    ULONG dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef struct _WIN32_FIND_DATAW {
    ULONG dwFileAttributes;
    struct _FILETIME ftCreationTime;
    struct _FILETIME ftLastAccessTime;
    struct _FILETIME ftLastWriteTime;
    ULONG nFileSizeHigh;
    ULONG nFileSizeLow;
    ULONG dwReserved0;
    ULONG dwReserved1;
    WCHAR cFileName[260];
    WCHAR cAlternateFileName[14];
};

typedef struct _WIN32_FIND_STREAM_DATA {
    union _LARGE_INTEGER StreamSize;
    WCHAR cStreamName[296];
};

typedef struct _WIN32_MEMORY_RANGE_ENTRY {
    PVOID VirtualAddress;
    ULONG64 NumberOfBytes;
};

typedef struct _WIN32_STREAM_ID {
    ULONG dwStreamId;
    ULONG dwStreamAttributes;
    union _LARGE_INTEGER Size;
    ULONG dwStreamNameSize;
    WCHAR cStreamName[1];
};

typedef struct _WINDOWS_OS_OPTIONS {
    UCHAR Signature[8];
    ULONG Version;
    ULONG Length;
    ULONG OsLoadPathOffset;
    WCHAR OsLoadOptions[1];
};

typedef struct _WINDOW_ARRANGEMENT_INFO {
    struct tagPOINT ptMouse;
    ULONG modifiersState;
    enum MOVESIZE_INITIATION_DEVICE_TYPE msidt;
    enum tagINPUT_MESSAGE_DEVICE_TYPE deviceType;
    struct tagRECT rcArrange;
    struct tagRECT rcSafetyZone;
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD {
    struct _COORD dwSize;
};

typedef struct _WINSTATIONCLIENTA {
    ULONG fTextOnly : 1;
    ULONG fDisableCtrlAltDel : 1;
    ULONG fMouse : 1;
    ULONG fDoubleClickDetect : 1;
    ULONG fINetClient : 1;
    ULONG fPromptForPassword : 1;
    ULONG fMaximizeShell : 1;
    ULONG fEnableWindowsKey : 1;
    ULONG fRemoteConsoleAudio : 1;
    ULONG fPasswordIsScPin : 1;
    ULONG fNoAudioPlayback : 1;
    ULONG fUsingSavedCreds : 1;
    ULONG fRestrictedLogon : 1;
    CHAR ClientName[21];
    CHAR Domain[18];
    CHAR UserName[21];
    CHAR Password[15];
    CHAR WorkDirectory[257];
    CHAR InitialProgram[257];
    ULONG SerialNumber;
    UCHAR EncryptionLevel;
    ULONG ClientAddressFamily;
    CHAR ClientAddress[31];
    USHORT HRes;
    USHORT VRes;
    USHORT ColorDepth;
    USHORT ProtocolType;
    ULONG KeyboardLayout;
    ULONG KeyboardType;
    ULONG KeyboardSubType;
    ULONG KeyboardFunctionKey;
    CHAR imeFileName[33];
    CHAR ClientDirectory[257];
    CHAR ClientLicense[33];
    CHAR ClientModem[41];
    ULONG ClientBuildNumber;
    ULONG ClientHardwareId;
    USHORT ClientProductId;
    USHORT OutBufCountHost;
    USHORT OutBufCountClient;
    USHORT OutBufLength;
    CHAR AudioDriverName[9];
    struct _TS_TIME_ZONE_INFORMATION ClientTimeZone;
    ULONG ClientSessionId;
    CHAR clientDigProductId[32];
    ULONG PerformanceFlags;
    ULONG ActiveInputLocale;
};

typedef struct _WINSTATIONCLIENTDATA {
    CHAR DataName[8];
    UCHAR fUnicodeData;
};

typedef struct _WINSTATIONCLIENTW {
    ULONG fTextOnly : 1;
    ULONG fDisableCtrlAltDel : 1;
    ULONG fMouse : 1;
    ULONG fDoubleClickDetect : 1;
    ULONG fINetClient : 1;
    ULONG fPromptForPassword : 1;
    ULONG fMaximizeShell : 1;
    ULONG fEnableWindowsKey : 1;
    ULONG fRemoteConsoleAudio : 1;
    ULONG fPasswordIsScPin : 1;
    ULONG fNoAudioPlayback : 1;
    ULONG fUsingSavedCreds : 1;
    ULONG fRestrictedLogon : 1;
    ULONG fRedirectedAuthentication : 1;
    WCHAR ClientName[21];
    WCHAR Domain[18];
    WCHAR UserName[21];
    WCHAR Password[15];
    WCHAR WorkDirectory[257];
    WCHAR InitialProgram[257];
    ULONG SerialNumber;
    UCHAR EncryptionLevel;
    ULONG ClientAddressFamily;
    WCHAR ClientAddress[31];
    USHORT HRes;
    USHORT VRes;
    USHORT ColorDepth;
    USHORT ProtocolType;
    ULONG KeyboardLayout;
    ULONG KeyboardType;
    ULONG KeyboardSubType;
    ULONG KeyboardFunctionKey;
    WCHAR imeFileName[33];
    WCHAR ClientDirectory[257];
    WCHAR ClientLicense[33];
    WCHAR ClientModem[41];
    ULONG ClientBuildNumber;
    ULONG ClientHardwareId;
    USHORT ClientProductId;
    USHORT OutBufCountHost;
    USHORT OutBufCountClient;
    USHORT OutBufLength;
    WCHAR AudioDriverName[9];
    struct _TS_TIME_ZONE_INFORMATION ClientTimeZone;
    ULONG ClientSessionId;
    WCHAR clientDigProductId[32];
    ULONG PerformanceFlags;
    ULONG ActiveInputLocale;
};

typedef struct _WINSTATIONCONFIG2A {
    struct _WINSTATIONCREATEA Create;
    struct _PDCONFIGA Pd[10];
    struct _WDCONFIGA Wd;
    struct _CDCONFIGA Cd;
    struct _WINSTATIONCONFIGA Config;
};

typedef struct _WINSTATIONCONFIG2W {
    struct _WINSTATIONCREATEW Create;
    struct _PDCONFIGW Pd[10];
    struct _WDCONFIGW Wd;
    struct _CDCONFIGW Cd;
    struct _WINSTATIONCONFIGW Config;
};

typedef struct _WINSTATIONCONFIGA {
    CHAR Comment[61];
    struct _USERCONFIGA User;
    CHAR OEMId[4];
};

typedef struct _WINSTATIONCONFIGW {
    WCHAR Comment[61];
    struct _USERCONFIGW User;
    CHAR OEMId[4];
};

typedef struct _WINSTATIONCREATEA {
    ULONG fEnableWinStation : 1;
    ULONG MaxInstanceCount;
};

typedef struct _WINSTATIONCREATEW {
    ULONG fEnableWinStation : 1;
    ULONG MaxInstanceCount;
};

typedef struct _WINSTATIONINFORMATIONA {
    enum _WINSTATIONSTATECLASS ConnectState;
    CHAR WinStationName[33];
    ULONG LogonId;
    union _LARGE_INTEGER ConnectTime;
    union _LARGE_INTEGER DisconnectTime;
    union _LARGE_INTEGER LastInputTime;
    union _LARGE_INTEGER LogonTime;
    struct _PROTOCOLSTATUS Status;
    CHAR Domain[18];
    CHAR UserName[21];
    union _LARGE_INTEGER CurrentTime;
};

typedef struct _WINSTATIONINFORMATIONEX {
    ULONG Level;
    union _WINSTATIONINFORMATIONEX_LEVEL Data;
};

typedef struct _WINSTATIONINFORMATIONEX_LEVEL1 {
    ULONG SessionId;
    enum _WINSTATIONSTATECLASS SessionState;
    LONG SessionFlags;
    WCHAR WinStationName[33];
    WCHAR UserName[21];
    WCHAR DomainName[18];
    union _LARGE_INTEGER LogonTime;
    union _LARGE_INTEGER ConnectTime;
    union _LARGE_INTEGER DisconnectTime;
    union _LARGE_INTEGER LastInputTime;
    union _LARGE_INTEGER CurrentTime;
    struct _PROTOCOLSTATUS ProtocolStatus;
};

typedef struct _WINSTATIONINFORMATIONW {
    enum _WINSTATIONSTATECLASS ConnectState;
    WCHAR WinStationName[33];
    ULONG LogonId;
    union _LARGE_INTEGER ConnectTime;
    union _LARGE_INTEGER DisconnectTime;
    union _LARGE_INTEGER LastInputTime;
    union _LARGE_INTEGER LogonTime;
    struct _PROTOCOLSTATUS Status;
    WCHAR Domain[18];
    WCHAR UserName[21];
    union _LARGE_INTEGER CurrentTime;
};

typedef struct _WINSTATIONLOADINDICATORDATA {
    ULONG RemainingSessionCapacity;
    enum _LOADFACTORTYPE LoadFactor;
    ULONG TotalSessions;
    ULONG DisconnectedSessions;
    union _LARGE_INTEGER IdleCPU;
    union _LARGE_INTEGER TotalCPU;
    ULONG RawSessionCapacity;
    ULONG reserved[9];
};

typedef struct _WINSTATIONMONITORA {
    USHORT uId;
    ULONG left;
    ULONG top;
    ULONG right;
    ULONG bottom;
    ULONG flags;
    ULONG reserved;
};

typedef struct _WINSTATIONMONITORW {
    USHORT uId;
    ULONG left;
    ULONG top;
    ULONG right;
    ULONG bottom;
    ULONG flags;
    ULONG reserved;
};

typedef struct _WINSTATIONPRINTERA {
    CHAR Lpt1[33];
    CHAR Lpt2[33];
    CHAR Lpt3[33];
    CHAR Lpt4[33];
};

typedef struct _WINSTATIONPRINTERW {
    WCHAR Lpt1[33];
    WCHAR Lpt2[33];
    WCHAR Lpt3[33];
    WCHAR Lpt4[33];
};

typedef struct _WINSTATIONPRODIDA {
    CHAR DigProductId[32];
    CHAR ClientDigProductId[32];
    CHAR OuterMostDigProductId[32];
    ULONG curentSessionId;
    ULONG ClientSessionId;
    ULONG OuterMostSessionId;
};

typedef struct _WINSTATIONPRODIDW {
    WCHAR DigProductId[32];
    WCHAR ClientDigProductId[32];
    WCHAR OuterMostDigProductId[32];
    ULONG curentSessionId;
    ULONG ClientSessionId;
    ULONG OuterMostSessionId;
};

typedef struct _WINSTATIONSHADOW {
    enum _SHADOWSTATECLASS ShadowState;
    enum _SHADOWCLASS ShadowClass;
    ULONG SessionId;
    ULONG ProtocolType;
};

typedef struct _WINSTATIONUSERTOKEN {
    PVOID ProcessId;
    PVOID ThreadId;
    PVOID UserToken;
};

typedef struct _WINSTATIONVIDEODATA {
    USHORT HResolution;
    USHORT VResolution;
    USHORT fColorDepth;
};

typedef struct _WINSTATION_USER_CERTIFICATES {
    ULONG cCertificates;
    ULONG cbCertificateChain;
    PUCHAR pbCertificateChain;
};

typedef struct _WLX_CLIENT_CREDENTIALS_INFO {
    ULONG dwType;
    PWCHAR pszUserName;
    PWCHAR pszDomain;
    PWCHAR pszPassword;
    LONG fPromptForPassword;
};

typedef struct _WLX_CLIENT_CREDENTIALS_INFO_2_0 {
    ULONG dwType;
    PWCHAR pszUserName;
    PWCHAR pszDomain;
    PWCHAR pszPassword;
    LONG fPromptForPassword;
    LONG fDisconnectOnLogonFailure;
};

typedef struct _WLX_CONSOLESWITCH_CREDENTIALS_INFO {
    ULONG dwType;
    PVOID UserToken;
    struct _LUID LogonId;
    struct _QUOTA_LIMITS Quotas;
    PWCHAR UserName;
    PWCHAR Domain;
    union _LARGE_INTEGER LogonTime;
    LONG SmartCardLogon;
    ULONG ProfileLength;
    ULONG MessageType;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    union _LARGE_INTEGER ProfileLogonTime;
    union _LARGE_INTEGER LogoffTime;
    union _LARGE_INTEGER KickOffTime;
    union _LARGE_INTEGER PasswordLastSet;
    union _LARGE_INTEGER PasswordCanChange;
    union _LARGE_INTEGER PasswordMustChange;
    PWCHAR LogonScript;
    PWCHAR HomeDirectory;
    PWCHAR FullName;
    PWCHAR ProfilePath;
    PWCHAR HomeDirectoryDrive;
    PWCHAR LogonServer;
    ULONG UserFlags;
    ULONG PrivateDataLen;
    PUCHAR PrivateData;
};

typedef struct _WLX_DESKTOP {
    ULONG Size;
    ULONG Flags;
    struct HDESK__ *hDesktop;
    PWCHAR pszDesktopName;
};

typedef struct _WLX_DISPATCH_VERSION_1_0 {
    PVOID WlxUseCtrlAltDel;
    PVOID WlxSetContextPointer;
    PVOID WlxSasNotify;
    PLONG WlxSetTimeout;
    PLONG WlxAssignShellProtection;
    PLONG WlxMessageBox;
    PLONG WlxDialogBox;
    PLONG WlxDialogBoxParam;
    PLONG WlxDialogBoxIndirect;
    PLONG WlxDialogBoxIndirectParam;
    PLONG WlxSwitchDesktopToUser;
    PLONG WlxSwitchDesktopToWinlogon;
    PLONG WlxChangePasswordNotify;
};

typedef struct _WLX_DISPATCH_VERSION_1_1 {
    PVOID WlxUseCtrlAltDel;
    PVOID WlxSetContextPointer;
    PVOID WlxSasNotify;
    PLONG WlxSetTimeout;
    PLONG WlxAssignShellProtection;
    PLONG WlxMessageBox;
    PLONG WlxDialogBox;
    PLONG WlxDialogBoxParam;
    PLONG WlxDialogBoxIndirect;
    PLONG WlxDialogBoxIndirectParam;
    PLONG WlxSwitchDesktopToUser;
    PLONG WlxSwitchDesktopToWinlogon;
    PLONG WlxChangePasswordNotify;
    PLONG WlxGetSourceDesktop;
    PLONG WlxSetReturnDesktop;
    PLONG WlxCreateUserDesktop;
    PLONG WlxChangePasswordNotifyEx;
};

typedef struct _WLX_DISPATCH_VERSION_1_2 {
    PVOID WlxUseCtrlAltDel;
    PVOID WlxSetContextPointer;
    PVOID WlxSasNotify;
    PLONG WlxSetTimeout;
    PLONG WlxAssignShellProtection;
    PLONG WlxMessageBox;
    PLONG WlxDialogBox;
    PLONG WlxDialogBoxParam;
    PLONG WlxDialogBoxIndirect;
    PLONG WlxDialogBoxIndirectParam;
    PLONG WlxSwitchDesktopToUser;
    PLONG WlxSwitchDesktopToWinlogon;
    PLONG WlxChangePasswordNotify;
    PLONG WlxGetSourceDesktop;
    PLONG WlxSetReturnDesktop;
    PLONG WlxCreateUserDesktop;
    PLONG WlxChangePasswordNotifyEx;
    PLONG WlxCloseUserDesktop;
};

typedef struct _WLX_DISPATCH_VERSION_1_3 {
    PVOID WlxUseCtrlAltDel;
    PVOID WlxSetContextPointer;
    PVOID WlxSasNotify;
    PLONG WlxSetTimeout;
    PLONG WlxAssignShellProtection;
    PLONG WlxMessageBox;
    PLONG WlxDialogBox;
    PLONG WlxDialogBoxParam;
    PLONG WlxDialogBoxIndirect;
    PLONG WlxDialogBoxIndirectParam;
    PLONG WlxSwitchDesktopToUser;
    PLONG WlxSwitchDesktopToWinlogon;
    PLONG WlxChangePasswordNotify;
    PLONG WlxGetSourceDesktop;
    PLONG WlxSetReturnDesktop;
    PLONG WlxCreateUserDesktop;
    PLONG WlxChangePasswordNotifyEx;
    PLONG WlxCloseUserDesktop;
    PLONG WlxSetOption;
    PLONG WlxGetOption;
    PVOID WlxWin31Migrate;
    PLONG WlxQueryClientCredentials;
    PLONG WlxQueryInetConnectorCredentials;
    PLONG WlxDisconnect;
    PULONG WlxQueryTerminalServicesData;
};

typedef struct _WLX_DISPATCH_VERSION_1_4 {
    PVOID WlxUseCtrlAltDel;
    PVOID WlxSetContextPointer;
    PVOID WlxSasNotify;
    PLONG WlxSetTimeout;
    PLONG WlxAssignShellProtection;
    PLONG WlxMessageBox;
    PLONG WlxDialogBox;
    PLONG WlxDialogBoxParam;
    PLONG WlxDialogBoxIndirect;
    PLONG WlxDialogBoxIndirectParam;
    PLONG WlxSwitchDesktopToUser;
    PLONG WlxSwitchDesktopToWinlogon;
    PLONG WlxChangePasswordNotify;
    PLONG WlxGetSourceDesktop;
    PLONG WlxSetReturnDesktop;
    PLONG WlxCreateUserDesktop;
    PLONG WlxChangePasswordNotifyEx;
    PLONG WlxCloseUserDesktop;
    PLONG WlxSetOption;
    PLONG WlxGetOption;
    PVOID WlxWin31Migrate;
    PLONG WlxQueryClientCredentials;
    PLONG WlxQueryInetConnectorCredentials;
    PLONG WlxDisconnect;
    PULONG WlxQueryTerminalServicesData;
    PULONG WlxQueryConsoleSwitchCredentials;
    PLONG WlxQueryTsLogonCredentials;
};

typedef struct _WLX_MPR_NOTIFY_INFO {
    PWCHAR pszUserName;
    PWCHAR pszDomain;
    PWCHAR pszPassword;
    PWCHAR pszOldPassword;
};

typedef struct _WLX_NOTIFICATION_INFO {
    ULONG Size;
    ULONG Flags;
    PWCHAR UserName;
    PWCHAR Domain;
    PWCHAR WindowStation;
    PVOID hToken;
    struct HDESK__ *hDesktop;
    PULONG pStatusCallback;
};

typedef struct _WLX_PROFILE_V1_0 {
    ULONG dwType;
    PWCHAR pszProfile;
};

typedef struct _WLX_PROFILE_V2_0 {
    ULONG dwType;
    PWCHAR pszProfile;
    PWCHAR pszPolicy;
    PWCHAR pszNetworkDefaultUserProfile;
    PWCHAR pszServerName;
    PWCHAR pszEnvironment;
};

typedef struct _WLX_SC_NOTIFICATION_INFO {
    PWCHAR pszCard;
    PWCHAR pszReader;
    PWCHAR pszContainer;
    PWCHAR pszCryptoProvider;
};

typedef struct _WLX_TERMINAL_SERVICES_DATA {
    WCHAR ProfilePath[257];
    WCHAR HomeDir[257];
    WCHAR HomeDirDrive[4];
};

typedef struct _WNF_DELIVERY_DESCRIPTOR {
    ULONG64 SubscriptionId;
    struct _WNF_STATE_NAME StateName;
    ULONG ChangeStamp;
    ULONG StateDataSize;
    ULONG EventMask;
    struct _WNF_TYPE_ID TypeId;
    ULONG StateDataOffset;
};

typedef struct _WNF_STATE_NAME {
    ULONG Data[2];
};

typedef struct _WNF_TYPE_ID {
    struct _GUID TypeId;
};

typedef struct _WNF_USER_SUBSCRIPTION {
};

typedef struct _WOF_EXTERNAL_FILE_ID {
    struct _FILE_ID_128 FileId;
};

typedef struct _WOF_EXTERNAL_INFO {
    ULONG Version;
    ULONG Provider;
};

typedef struct _WOF_VERSION_INFO {
    ULONG WofVersion;
};

typedef struct _WORD_BLOB {
    ULONG clSize;
    USHORT asData[1];
};

typedef struct _WORKER_FACTORY_BASIC_INFORMATION {
    union _LARGE_INTEGER Timeout;
    union _LARGE_INTEGER RetryTimeout;
    union _LARGE_INTEGER IdleTimeout;
    UCHAR Paused;
    UCHAR TimerSet;
    UCHAR QueuedToExWorker;
    UCHAR MayCreate;
    UCHAR CreateInProgress;
    UCHAR InsertedIntoQueue;
    UCHAR Shutdown;
    ULONG BindingCount;
    ULONG ThreadMinimum;
    ULONG ThreadMaximum;
    ULONG PendingWorkerCount;
    ULONG WaitingWorkerCount;
    ULONG TotalWorkerCount;
    ULONG ReleaseCount;
    LONG64 InfiniteWaitGoal;
    PLONG StartRoutine;
    PVOID StartParameter;
    PVOID ProcessId;
    ULONG64 StackReserve;
    ULONG64 StackCommit;
    LONG LastThreadCreationStatus;
};

typedef struct _WORKER_FACTORY_DEFERRED_WORK {
    struct _PORT_MESSAGE *AlpcSendMessage;
    PVOID AlpcSendMessagePort;
    ULONG AlpcSendMessageFlags;
    ULONG Flags;
};

typedef struct _WOW64_ARCHITECTURE_INFORMATION {
    ULONG Machine : 16;
    ULONG KernelMode : 1;
    ULONG UserMode : 1;
    ULONG Native : 1;
    ULONG Process : 1;
    ULONG ReservedZero0 : 12;
};

typedef struct _WOW64_CONTEXT {
    ULONG ContextFlags;
    ULONG Dr0;
    ULONG Dr1;
    ULONG Dr2;
    ULONG Dr3;
    ULONG Dr6;
    ULONG Dr7;
    struct _WOW64_FLOATING_SAVE_AREA FloatSave;
    ULONG SegGs;
    ULONG SegFs;
    ULONG SegEs;
    ULONG SegDs;
    ULONG Edi;
    ULONG Esi;
    ULONG Ebx;
    ULONG Edx;
    ULONG Ecx;
    ULONG Eax;
    ULONG Ebp;
    ULONG Eip;
    ULONG SegCs;
    ULONG EFlags;
    ULONG Esp;
    ULONG SegSs;
    UCHAR ExtendedRegisters[512];
};

typedef struct _WOW64_CPUAREA_INFO {
    PVOID Context;
    struct _X86_NT5_CONTEXT *ContextX86;
    struct _AMD64_CONTEXT *ContextAmd64;
    struct _ARM_CONTEXT *ContextArm;
    struct _ARM64_CONTEXT *ContextArm64;
    PVOID *PerThreadDataLocation;
    PULONG ContextFlagsLocation;
    PULONG CpuAreaFlagsLocation;
    ULONG ArchContextFlag;
    USHORT Machine;
};

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY {
    ULONG Selector;
    struct _WOW64_LDT_ENTRY Descriptor;
};

typedef struct _WOW64_FLOATING_SAVE_AREA {
    ULONG ControlWord;
    ULONG StatusWord;
    ULONG TagWord;
    ULONG ErrorOffset;
    ULONG ErrorSelector;
    ULONG DataOffset;
    ULONG DataSelector;
    UCHAR RegisterArea[80];
    ULONG Cr0NpxState;
};

typedef struct _WOW64_LDT_ENTRY {
    USHORT LimitLow;
    USHORT BaseLow;
     <unnamed-type-HighWord>;
    union {
         <unnamed-type-Bytes>;
        struct {
            UCHAR BaseMid;
            UCHAR Flags1;
            UCHAR Flags2;
            UCHAR BaseHi;
        } Bytes;
         <unnamed-type-Bits>;
        struct {
            ULONG BaseMid : 8;
            ULONG Type : 5;
            ULONG Dpl : 2;
            ULONG Pres : 1;
            ULONG LimitHi : 4;
            ULONG Sys : 1;
            ULONG Reserved_0 : 1;
            ULONG Default_Big : 1;
            ULONG Granularity : 1;
            ULONG BaseHi : 8;
        } Bits;
    } HighWord;
};

typedef struct _WRITE_USN_REASON_INPUT {
    ULONG Flags;
    ULONG UsnReasonToWrite;
};

typedef struct _WSX_INFO {
    ULONG Version;
    PVOID hIca;
    PVOID hStack;
    ULONG SessionId;
    PWCHAR pUserName;
    PWCHAR pDomain;
};

typedef struct _WTA_OPTIONS {
    ULONG dwFlags;
    ULONG dwMask;
};

typedef struct _Wx86TIB {
    ULONG Size;
    ULONG InitialPc;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID DeallocationStack;
    ULONG LogFlags;
    ULONG InitialSp;
    UCHAR SimulationCount;
    UCHAR InCpuSimulation;
    UCHAR EmulateInitialPc;
    UCHAR Initialized;
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID CpuContext;
    struct _CONTEXT *InitialExceptionContext;
    PVOID pCallersRIID;
    PVOID pCallersUnknown;
    ULONG Flags;
    PVOID SelfRegDllName;
    PVOID SelfRegDllHandle;
};

typedef struct _Wx86ThreadState {
    PULONG CallBx86Eip;
    PVOID DeallocationCpu;
    UCHAR UseKnownWx86Dll;
    CHAR OleStubInvoked;
};

typedef struct _X86_CALL_FRAME {
    ULONG ReturnAddress;
    ULONG Param1;
    ULONG Param2;
    ULONG CompatibilityArea;
};

typedef struct _X86_NT5_CONTEXT {
};

typedef struct _XMIT_ROUTINE_QUINTUPLE {
    PVOID pfnTranslateToXmit;
    PVOID pfnTranslateFromXmit;
    PVOID pfnFreeXmit;
    PVOID pfnFreeInst;
};

typedef struct _XSAVE_AREA {
    struct _XSAVE_FORMAT LegacyState;
    struct _XSAVE_AREA_HEADER Header;
};

typedef struct _XSAVE_AREA_HEADER {
    ULONG64 Mask;
    ULONG64 CompactionMask;
    ULONG64 Reserved2[6];
};

typedef struct _XSAVE_CET_U_FORMAT {
    ULONG64 Ia32CetUMsr;
    ULONG64 Ia32Pl3SspMsr;
};

typedef struct _XSAVE_FEATURE {
    ULONG FeatureId;
    struct _XSAVE_VENDORS *Vendors;
    ULONG64 Unused;
};

typedef struct _XSAVE_FORMAT {
    USHORT ControlWord;
    USHORT StatusWord;
    UCHAR TagWord;
    UCHAR Reserved1;
    USHORT ErrorOpcode;
    ULONG ErrorOffset;
    USHORT ErrorSelector;
    USHORT Reserved2;
    ULONG DataOffset;
    USHORT DataSelector;
    USHORT Reserved3;
    ULONG MxCsr;
    ULONG MxCsr_Mask;
    struct _M128A FloatRegisters[8];
    struct _M128A XmmRegisters[16];
    UCHAR Reserved4[96];
};

typedef struct _XSAVE_POLICY {
    ULONG Version;
    ULONG Size;
    ULONG Flags;
    ULONG MaxSaveAreaLength;
    ULONG64 FeatureBitmask;
    ULONG NumberOfFeatures;
    struct _XSAVE_FEATURE Features[1];
};

typedef struct _XSAVE_SUPPORTED_CPU {
    struct XSAVE_CPU_INFO CpuInfo;
    struct XSAVE_CPU_ERRATA *CpuErrata;
    ULONG64 Unused;
};

typedef struct _XSAVE_VENDOR {
    ULONG VendorId[3];
    struct _XSAVE_SUPPORTED_CPU SupportedCpu;
};

typedef struct _XSAVE_VENDORS {
    ULONG NumberOfVendors;
    struct _XSAVE_VENDOR Vendor[1];
};

typedef struct _XSTATE_CONFIGURATION {
    ULONG64 EnabledFeatures;
    ULONG64 EnabledVolatileFeatures;
    ULONG Size;
    ULONG ControlFlags;
    ULONG OptimizedSave : 1;
    ULONG CompactionEnabled : 1;
    struct _XSTATE_FEATURE Features[64];
    ULONG64 EnabledSupervisorFeatures;
    ULONG64 AlignedFeatures;
    ULONG AllFeatureSize;
    ULONG AllFeatures[64];
    ULONG64 EnabledUserVisibleSupervisorFeatures;
};

typedef struct _XSTATE_CONTEXT {
    ULONG64 Mask;
    ULONG Length;
    ULONG Reserved1;
    struct _XSAVE_AREA *Area;
    PVOID Buffer;
};

typedef struct _XSTATE_FEATURE {
    ULONG Offset;
    ULONG Size;
};

typedef struct _ZONEATTRIBUTES {
    ULONG cbSize;
    WCHAR szDisplayName[260];
    WCHAR szDescription[200];
    WCHAR szIconPath[260];
    ULONG dwTemplateMinLevel;
    ULONG dwTemplateRecommended;
    ULONG dwTemplateCurrentLevel;
    ULONG dwFlags;
};

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT {
    ULONG dwMinLength;
    ULONG dwMaxLength;
    ULONG dwIncrement;
};

typedef struct __GENERIC_BINDING_INFO {
    PVOID pObj;
    ULONG Size;
    PVOID *pfnBind;
    PVOID pfnUnbind;
};

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 {
    ULONG tyspec;
     __MIDL___MIDL_itf_wtypes_0000_0001_0005;
    union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
};

typedef struct __NCRYPT_KEY_ACCESS_POLICY_BLOB {
    ULONG dwVersion;
    ULONG dwPolicyFlags;
    ULONG cbUserSid;
    ULONG cbApplicationSid;
};

typedef struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO {
    ULONG dwVersion;
    LONG iExpiration;
    UCHAR pabNonce[32];
    UCHAR pabPolicyRef[32];
    UCHAR pabHMAC[32];
};

typedef struct __NCRYPT_PCP_RAW_POLICYDIGEST {
    ULONG dwVersion;
    ULONG cbDigest;
};

typedef struct __NCRYPT_PCP_TPM_FW_VERSION_INFO {
    USHORT major1;
    USHORT major2;
    USHORT minor1;
    USHORT minor2;
};

typedef struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT {
    ULONG Magic;
    ULONG Version;
    ULONG HeaderSize;
    ULONG cbCertifyInfo;
    ULONG cbSignature;
    ULONG cbTpmPublic;
};

typedef struct __NCRYPT_SUPPORTED_LENGTHS {
    ULONG dwMinLength;
    ULONG dwMaxLength;
    ULONG dwIncrement;
    ULONG dwDefaultLength;
};

typedef struct __NCRYPT_UI_POLICY {
    ULONG dwVersion;
    ULONG dwFlags;
    PWCHAR pszCreationTitle;
    PWCHAR pszFriendlyName;
    PWCHAR pszDescription;
};

typedef struct __PROPERTY_VALUE {
    USHORT Type;
     <unnamed-type-u>;
    union {
        ULONG ulVal;
         <unnamed-type-strVal>;
        struct {
            ULONG size;
            PWCHAR pstrVal;
        } strVal;
         <unnamed-type-bVal>;
        struct {
            ULONG size;
            PCHAR pbVal;
        } bVal;
        struct _GUID guidVal;
    } u;
};

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION {
    struct _UNICODE_STRING TypeName;
    ULONG Reserved[22];
};

typedef struct __WIL_RTL_SRWLOCK {
    PVOID Ptr;
};

typedef struct __WIL__WNF_STATE_NAME {
    ULONG Data[2];
};

typedef struct __WIL__WNF_TYPE_ID {
    struct _GUID TypeId;
};

typedef struct __WIL__WNF_USER_SUBSCRIPTION {
};

typedef struct __WilFeatureTraits_Feature_AcrylicForEveryone {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy112;
    CHAR ___dummy104;
    USHORT version;
    CHAR ___dummy105;
    CHAR ___dummy106;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy107;
    CHAR ___dummy108;
    PCHAR GetEMail;
    CHAR ___dummy109;
    CHAR ___dummy110;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy111;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AcrylicSharePicker {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy837;
    CHAR ___dummy833;
    PCHAR GetEMail;
    CHAR ___dummy834;
    CHAR ___dummy835;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy836;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AcrylicTaskViewTimeline {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1129;
    CHAR ___dummy1123;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1124;
    CHAR ___dummy1125;
    PCHAR GetEMail;
    CHAR ___dummy1126;
    CHAR ___dummy1127;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1128;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AcrylicTaskbar {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy688;
    CHAR ___dummy680;
    USHORT version;
    CHAR ___dummy681;
    CHAR ___dummy682;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy683;
    CHAR ___dummy684;
    PCHAR GetEMail;
    CHAR ___dummy685;
    CHAR ___dummy686;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy687;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ActivitiesInShell {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1239;
    CHAR ___dummy1233;
    USHORT version;
    CHAR ___dummy1234;
    CHAR ___dummy1235;
    PCHAR GetEMail;
    CHAR ___dummy1236;
    CHAR ___dummy1237;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1238;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ActivitiesInTaskView {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1248;
    CHAR ___dummy1240;
    USHORT version;
    CHAR ___dummy1241;
    CHAR ___dummy1242;
    PCHAR GetEMail;
    CHAR ___dummy1243;
    CHAR ___dummy1244;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1245;
    CHAR ___dummy1246;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1247;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ActivitiesLocalBackgroundImage {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1257;
    CHAR ___dummy1249;
    USHORT version;
    CHAR ___dummy1250;
    CHAR ___dummy1251;
    PCHAR GetEMail;
    CHAR ___dummy1252;
    CHAR ___dummy1253;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1254;
    CHAR ___dummy1255;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1256;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AllowPeopleRearrangeInBarAndFlyout {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1023;
    CHAR ___dummy1013;
    USHORT version;
    CHAR ___dummy1014;
    CHAR ___dummy1015;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1016;
    CHAR ___dummy1017;
    PCHAR GetEMail;
    CHAR ___dummy1018;
    CHAR ___dummy1019;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1020;
    CHAR ___dummy1021;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1022;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AllowRelevanceCloudFallback {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy998;
    CHAR ___dummy992;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy993;
    CHAR ___dummy994;
    PCHAR GetEMail;
    CHAR ___dummy995;
    CHAR ___dummy996;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy997;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AllowSingleViewAppsForAssignedAccess {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy497;
    CHAR ___dummy491;
    PCHAR GetEMail;
    CHAR ___dummy492;
    CHAR ___dummy493;
    PCHAR GetLink;
    CHAR ___dummy494;
    CHAR ___dummy495;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy496;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AlwaysFailFastOnXamlFailure {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy777;
    CHAR ___dummy769;
    PCHAR GetEMail;
    CHAR ___dummy770;
    CHAR ___dummy771;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy772;
    CHAR ___dummy773;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy774;
    CHAR ___dummy775;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy776;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AppFrameCOMRundown {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy274;
    CHAR ___dummy268;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy269;
    CHAR ___dummy270;
    PCHAR GetEMail;
    CHAR ___dummy271;
    CHAR ___dummy272;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy273;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AppsFolderTaskbarIconLoading {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy658;
    CHAR ___dummy652;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy653;
    CHAR ___dummy654;
    PCHAR GetEMail;
    CHAR ___dummy655;
    CHAR ___dummy656;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy657;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AutoRecoverEdgeAfterCrash {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1346;
    CHAR ___dummy1338;
    PCHAR GetEMail;
    CHAR ___dummy1339;
    CHAR ___dummy1340;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1341;
    CHAR ___dummy1342;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy1343;
    CHAR ___dummy1344;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1345;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_AutomaticSignOnLockSetting {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1038;
    CHAR ___dummy1034;
    PCHAR GetEMail;
    CHAR ___dummy1035;
    CHAR ___dummy1036;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1037;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_BannerOpportunity {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy384;
    CHAR ___dummy380;
    PCHAR GetEMail;
    CHAR ___dummy381;
    CHAR ___dummy382;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy383;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_Banners {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy379;
    CHAR ___dummy373;
    USHORT version;
    CHAR ___dummy374;
    CHAR ___dummy375;
    PCHAR GetEMail;
    CHAR ___dummy376;
    CHAR ___dummy377;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy378;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_BonusBar {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy761;
    CHAR ___dummy755;
    PCHAR GetEMail;
    CHAR ___dummy756;
    CHAR ___dummy757;
    PCHAR GetLink;
    CHAR ___dummy758;
    CHAR ___dummy759;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy760;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_BonusBarServiceContent {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy768;
    CHAR ___dummy762;
    PCHAR GetEMail;
    CHAR ___dummy763;
    CHAR ___dummy764;
    PCHAR GetLink;
    CHAR ___dummy765;
    CHAR ___dummy766;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy767;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CUIPopupHelper {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy260;
    CHAR ___dummy258;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy259;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CacheSpotlightLockScreenImage {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy344;
    CHAR ___dummy340;
    PCHAR GetEMail;
    CHAR ___dummy341;
    CHAR ___dummy342;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy343;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CaptureExplorerHydrationCallStacks {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy372;
    CHAR ___dummy368;
    PCHAR GetEMail;
    CHAR ___dummy369;
    CHAR ___dummy370;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy371;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialBanners {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy483;
    CHAR ___dummy479;
    PCHAR GetEMail;
    CHAR ___dummy480;
    CHAR ___dummy481;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy482;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialCloudFilesRegistration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy461;
    CHAR ___dummy455;
    USHORT version;
    CHAR ___dummy456;
    CHAR ___dummy457;
    PCHAR GetEMail;
    CHAR ___dummy458;
    CHAR ___dummy459;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy460;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialCloudFilesUninstallCleanup {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy466;
    CHAR ___dummy462;
    PCHAR GetEMail;
    CHAR ___dummy463;
    CHAR ___dummy464;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy465;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialContextMenuOrdering {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy478;
    CHAR ___dummy472;
    USHORT version;
    CHAR ___dummy473;
    CHAR ___dummy474;
    PCHAR GetEMail;
    CHAR ___dummy475;
    CHAR ___dummy476;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy477;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialIExplorerCommand {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy454;
    CHAR ___dummy448;
    USHORT version;
    CHAR ___dummy449;
    CHAR ___dummy450;
    PCHAR GetEMail;
    CHAR ___dummy451;
    CHAR ___dummy452;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy453;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialPreviewHandlers {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy434;
    CHAR ___dummy432;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy433;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialPropertyHandlers {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy431;
    CHAR ___dummy427;
    USHORT version;
    CHAR ___dummy428;
    CHAR ___dummy429;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy430;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialSetKnownFolder {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy488;
    CHAR ___dummy484;
    PCHAR GetEMail;
    CHAR ___dummy485;
    CHAR ___dummy486;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy487;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialShareContract {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy471;
    CHAR ___dummy467;
    PCHAR GetEMail;
    CHAR ___dummy468;
    CHAR ___dummy469;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy470;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialShellNew {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy437;
    CHAR ___dummy435;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy436;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialThumbnailHandlers {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy447;
    CHAR ___dummy441;
    USHORT version;
    CHAR ___dummy442;
    CHAR ___dummy443;
    PCHAR GetEMail;
    CHAR ___dummy444;
    CHAR ___dummy445;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy446;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CentennialUseURL {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy440;
    CHAR ___dummy438;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy439;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ChangeNotifyInterruptSourceUpdate {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy512;
    CHAR ___dummy508;
    PCHAR GetEMail;
    CHAR ___dummy509;
    CHAR ___dummy510;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy511;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudDownloadAndGo {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy316;
    CHAR ___dummy310;
    USHORT version;
    CHAR ___dummy311;
    CHAR ___dummy312;
    PCHAR GetEMail;
    CHAR ___dummy313;
    CHAR ___dummy314;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy315;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileAppInitiatedHydration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy360;
    CHAR ___dummy352;
    USHORT version;
    CHAR ___dummy353;
    CHAR ___dummy354;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy355;
    CHAR ___dummy356;
    PCHAR GetEMail;
    CHAR ___dummy357;
    CHAR ___dummy358;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy359;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileNavPaneAllPrimaryStates {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy351;
    CHAR ___dummy345;
    USHORT version;
    CHAR ___dummy346;
    CHAR ___dummy347;
    PCHAR GetEMail;
    CHAR ___dummy348;
    CHAR ___dummy349;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy350;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileProgress {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy309;
    CHAR ___dummy303;
    USHORT version;
    CHAR ___dummy304;
    CHAR ___dummy305;
    PCHAR GetEMail;
    CHAR ___dummy306;
    CHAR ___dummy307;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy308;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileRecycleBin {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy330;
    CHAR ___dummy324;
    USHORT version;
    CHAR ___dummy325;
    CHAR ___dummy326;
    PCHAR GetEMail;
    CHAR ___dummy327;
    CHAR ___dummy328;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy329;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileSecondaryStates {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy323;
    CHAR ___dummy317;
    USHORT version;
    CHAR ___dummy318;
    CHAR ___dummy319;
    PCHAR GetEMail;
    CHAR ___dummy320;
    CHAR ___dummy321;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy322;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileShowPrimaryIconOverlaysOnDesktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy344;
    CHAR ___dummy338;
    USHORT version;
    CHAR ___dummy339;
    CHAR ___dummy340;
    PCHAR GetEMail;
    CHAR ___dummy341;
    CHAR ___dummy342;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy343;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileStabilization {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy337;
    CHAR ___dummy331;
    USHORT version;
    CHAR ___dummy332;
    CHAR ___dummy333;
    PCHAR GetEMail;
    CHAR ___dummy334;
    CHAR ___dummy335;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy336;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CloudFileStateIcon {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy302;
    CHAR ___dummy296;
    USHORT version;
    CHAR ___dummy297;
    CHAR ___dummy298;
    PCHAR GetEMail;
    CHAR ___dummy299;
    CHAR ___dummy300;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy301;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ConvergedWindowDrag {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy90;
    CHAR ___dummy78;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy79;
    CHAR ___dummy80;
    PCHAR GetEMail;
    CHAR ___dummy81;
    CHAR ___dummy82;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy83;
    CHAR ___dummy84;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy85;
    CHAR ___dummy86;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy87;
    CHAR ___dummy88;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy89;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CopyFilesToManagedAndUnmanagedSyncRoots {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy426;
    CHAR ___dummy422;
    USHORT version;
    CHAR ___dummy423;
    CHAR ___dummy424;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy425;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CoreWindowResizeEvent_Desktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1188;
    CHAR ___dummy1184;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1185;
    CHAR ___dummy1186;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1187;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CredUI_ConsoleMode {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy376;
    CHAR ___dummy370;
    PCHAR GetEMail;
    CHAR ___dummy371;
    CHAR ___dummy372;
    PCHAR GetLink;
    CHAR ___dummy373;
    CHAR ___dummy374;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy375;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CredUI_EnableTestHooks_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy387;
    CHAR ___dummy377;
    PCHAR GetEMail;
    CHAR ___dummy378;
    CHAR ___dummy379;
    PCHAR GetLink;
    CHAR ___dummy380;
    CHAR ___dummy381;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy382;
    CHAR ___dummy383;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy384;
    CHAR ___dummy385;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy386;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CredUI_ForceConsoleMode_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy400;
    CHAR ___dummy388;
    PCHAR GetEMail;
    CHAR ___dummy389;
    CHAR ___dummy390;
    PCHAR GetLink;
    CHAR ___dummy391;
    CHAR ___dummy392;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy393;
    CHAR ___dummy394;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy395;
    CHAR ___dummy396;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy397;
    CHAR ___dummy398;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy399;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_CredUI_NoUI_TESTHOOK {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy405;
    CHAR ___dummy401;
    PCHAR GetEMail;
    CHAR ___dummy402;
    CHAR ___dummy403;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy404;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DelayXamlViewActivity {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy419;
    CHAR ___dummy413;
    PCHAR GetEMail;
    CHAR ___dummy414;
    CHAR ___dummy415;
    PCHAR GetLink;
    CHAR ___dummy416;
    CHAR ___dummy417;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy418;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopIconLayoutLinkWithShift {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy507;
    CHAR ___dummy503;
    PCHAR GetEMail;
    CHAR ___dummy504;
    CHAR ___dummy505;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy506;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopIconLayoutRefactor {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy495;
    CHAR ___dummy489;
    USHORT version;
    CHAR ___dummy490;
    CHAR ___dummy491;
    PCHAR GetEMail;
    CHAR ___dummy492;
    CHAR ___dummy493;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy494;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopScreenClipping {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1374;
    CHAR ___dummy1370;
    PCHAR GetEMail;
    CHAR ___dummy1371;
    CHAR ___dummy1372;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1373;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1303;
    CHAR ___dummy1299;
    PCHAR GetEMail;
    CHAR ___dummy1300;
    CHAR ___dummy1301;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1302;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression_AllApps {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1314;
    CHAR ___dummy1304;
    PCHAR GetEMail;
    CHAR ___dummy1305;
    CHAR ___dummy1306;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1307;
    CHAR ___dummy1308;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy1309;
    CHAR ___dummy1310;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1311;
    CHAR ___dummy1312;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1313;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopSplashScreenSuppression_WhenWindowExists {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1321;
    CHAR ___dummy1315;
    PCHAR GetEMail;
    CHAR ___dummy1316;
    CHAR ___dummy1317;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1318;
    CHAR ___dummy1319;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1320;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopSwitcherDataModel {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1069;
    CHAR ___dummy1063;
    USHORT version;
    CHAR ___dummy1064;
    CHAR ___dummy1065;
    PCHAR GetEMail;
    CHAR ___dummy1066;
    CHAR ___dummy1067;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1068;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DesktopWorkAreaDPIAware {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy502;
    CHAR ___dummy496;
    USHORT version;
    CHAR ___dummy497;
    CHAR ___dummy498;
    PCHAR GetEMail;
    CHAR ___dummy499;
    CHAR ___dummy500;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy501;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DestListMigration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy532;
    CHAR ___dummy528;
    PCHAR GetEMail;
    CHAR ___dummy529;
    CHAR ___dummy530;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy531;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DevicesCollection {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1050;
    CHAR ___dummy1046;
    PCHAR GetEMail;
    CHAR ___dummy1047;
    CHAR ___dummy1048;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1049;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DevicesFlowSettingsDeviceDiscovery {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1057;
    CHAR ___dummy1051;
    PCHAR GetEMail;
    CHAR ___dummy1052;
    CHAR ___dummy1053;
    PCHAR GetLink;
    CHAR ___dummy1054;
    CHAR ___dummy1055;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1056;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DisableTDLCachingNonMobile {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy803;
    CHAR ___dummy797;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy798;
    CHAR ___dummy799;
    PCHAR GetEMail;
    CHAR ___dummy800;
    CHAR ___dummy801;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy802;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DismissWhenNotInForegroundDuringRegister {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy339;
    CHAR ___dummy335;
    PCHAR GetEMail;
    CHAR ___dummy336;
    CHAR ___dummy337;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy338;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DoNotActivateLockAppWithScreenOff {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy511;
    CHAR ___dummy505;
    PCHAR GetEMail;
    CHAR ___dummy506;
    CHAR ___dummy507;
    PCHAR GetLink;
    CHAR ___dummy508;
    CHAR ___dummy509;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy510;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DockingServiceConnectionManager {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1154;
    CHAR ___dummy1150;
    PCHAR GetEMail;
    CHAR ___dummy1151;
    CHAR ___dummy1152;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1153;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DragBetweenViewModes {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy103;
    CHAR ___dummy91;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy92;
    CHAR ___dummy93;
    PCHAR GetEMail;
    CHAR ___dummy94;
    CHAR ___dummy95;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy96;
    CHAR ___dummy97;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy98;
    CHAR ___dummy99;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy100;
    CHAR ___dummy101;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy102;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_DragDropWithComponentUI {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy991;
    CHAR ___dummy983;
    USHORT version;
    CHAR ___dummy984;
    CHAR ___dummy985;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy986;
    CHAR ___dummy987;
    PCHAR GetEMail;
    CHAR ___dummy988;
    CHAR ___dummy989;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy990;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EdgeDesktopShortcut {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1210;
    CHAR ___dummy1202;
    enum Variant_EdgeDesktopShortcut Variant;
    enum Variant_EdgeDesktopShortcut defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1203;
    CHAR ___dummy1204;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1205;
    CHAR ___dummy1206;
    PCHAR GetEMail;
    CHAR ___dummy1207;
    CHAR ___dummy1208;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1209;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EdgePinnedSecondaryTiles {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1028;
    CHAR ___dummy1024;
    PCHAR GetEMail;
    CHAR ___dummy1025;
    CHAR ___dummy1026;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1027;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EducationCloudDefaultPins {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy651;
    CHAR ___dummy645;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy646;
    CHAR ___dummy647;
    PCHAR GetEMail;
    CHAR ___dummy648;
    CHAR ___dummy649;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy650;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EnableAcrylicHostBackdropWin32 {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy134;
    CHAR ___dummy120;
    USHORT version;
    CHAR ___dummy121;
    CHAR ___dummy122;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy123;
    CHAR ___dummy124;
    PCHAR GetEMail;
    CHAR ___dummy125;
    CHAR ___dummy126;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy127;
    CHAR ___dummy128;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy129;
    CHAR ___dummy130;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy131;
    CHAR ___dummy132;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy133;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EnableAnimationDesigner {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1369;
    CHAR ___dummy1361;
    PCHAR GetEMail;
    CHAR ___dummy1362;
    CHAR ___dummy1363;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1364;
    CHAR ___dummy1365;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy1366;
    CHAR ___dummy1367;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1368;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EnableCapturePicker {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1134;
    CHAR ___dummy1130;
    PCHAR GetEMail;
    CHAR ___dummy1131;
    CHAR ___dummy1132;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1133;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EnablePersonalizationLink {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy867;
    CHAR ___dummy859;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy860;
    CHAR ___dummy861;
    PCHAR GetEMail;
    CHAR ___dummy862;
    CHAR ___dummy863;
    PCHAR GetLink;
    CHAR ___dummy864;
    CHAR ___dummy865;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy866;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_EncodeLockScreenToBitmap {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy479;
    CHAR ___dummy473;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy474;
    CHAR ___dummy475;
    PCHAR GetEMail;
    CHAR ___dummy476;
    CHAR ___dummy477;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy478;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ExplorerEdu {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy404;
    CHAR ___dummy400;
    PCHAR GetEMail;
    CHAR ___dummy401;
    CHAR ___dummy402;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy403;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ExplorerScreenOff {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy522;
    CHAR ___dummy518;
    PCHAR GetEMail;
    CHAR ___dummy519;
    CHAR ___dummy520;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy521;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FaceClientEnrollmentExperience {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1045;
    CHAR ___dummy1039;
    enum Variant_FaceClientEnrollmentExperience Variant;
    enum Variant_FaceClientEnrollmentExperience defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1040;
    CHAR ___dummy1041;
    PCHAR GetEMail;
    CHAR ___dummy1042;
    CHAR ___dummy1043;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1044;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FailFastOnWrongThreadContext {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy810;
    CHAR ___dummy804;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy805;
    CHAR ___dummy806;
    PCHAR GetEMail;
    CHAR ___dummy807;
    CHAR ___dummy808;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy809;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FidoLogonWithoutDeviceAuth {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1355;
    CHAR ___dummy1347;
    PCHAR GetEMail;
    CHAR ___dummy1348;
    CHAR ___dummy1349;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1350;
    CHAR ___dummy1351;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy1352;
    CHAR ___dummy1353;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1354;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FileExplorerDarkTheme {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy560;
    CHAR ___dummy554;
    USHORT version;
    CHAR ___dummy555;
    CHAR ___dummy556;
    PCHAR GetEMail;
    CHAR ___dummy557;
    CHAR ___dummy558;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy559;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FileExplorerLongPath {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy517;
    CHAR ___dummy513;
    PCHAR GetEMail;
    CHAR ___dummy514;
    CHAR ___dummy515;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy516;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FileExplorerPWILO {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy553;
    CHAR ___dummy543;
    PCHAR GetEMail;
    CHAR ___dummy544;
    CHAR ___dummy545;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy546;
    CHAR ___dummy547;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy548;
    CHAR ___dummy549;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy550;
    CHAR ___dummy551;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy552;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FileExplorerThemeOptions {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy567;
    CHAR ___dummy561;
    PCHAR GetEMail;
    CHAR ___dummy562;
    CHAR ___dummy563;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy564;
    CHAR ___dummy565;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy566;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FindMyPen {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy919;
    CHAR ___dummy913;
    PCHAR GetEMail;
    CHAR ___dummy914;
    CHAR ___dummy915;
    PCHAR GetLink;
    CHAR ___dummy916;
    CHAR ___dummy917;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy918;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FullScreenAnimation {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1401;
    CHAR ___dummy1397;
    PCHAR GetEMail;
    CHAR ___dummy1398;
    CHAR ___dummy1399;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1400;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_FullScreenLightweightDefault {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1391;
    CHAR ___dummy1385;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1386;
    CHAR ___dummy1387;
    PCHAR GetEMail;
    CHAR ___dummy1388;
    CHAR ___dummy1389;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1390;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_HandwritingPanelSettings {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy903;
    CHAR ___dummy895;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy896;
    CHAR ___dummy897;
    PCHAR GetEMail;
    CHAR ___dummy898;
    CHAR ___dummy899;
    PCHAR GetLink;
    CHAR ___dummy900;
    CHAR ___dummy901;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy902;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_HelloSettingsImprovements {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1033;
    CHAR ___dummy1029;
    PCHAR GetEMail;
    CHAR ___dummy1030;
    CHAR ___dummy1031;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1032;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_InitializeStartLayoutFromLogonFramework {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy858;
    CHAR ___dummy856;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy857;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_IntegrateWhiteboardApp {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1139;
    CHAR ___dummy1135;
    PCHAR GetEMail;
    CHAR ___dummy1136;
    CHAR ___dummy1137;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1138;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_InvokeUIUpdatesViaTryRunAsync {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy518;
    CHAR ___dummy512;
    PCHAR GetEMail;
    CHAR ___dummy513;
    CHAR ___dummy514;
    PCHAR GetLink;
    CHAR ___dummy515;
    CHAR ___dummy516;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy517;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LazyApplyWindowGroupTemplate {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy240;
    CHAR ___dummy226;
    USHORT version;
    CHAR ___dummy227;
    CHAR ___dummy228;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy229;
    CHAR ___dummy230;
    PCHAR GetEMail;
    CHAR ___dummy231;
    CHAR ___dummy232;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy233;
    CHAR ___dummy234;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy235;
    CHAR ___dummy236;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy237;
    CHAR ___dummy238;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy239;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockApp_TestHooks_ShowWatermark_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy598;
    CHAR ___dummy588;
    PCHAR GetEMail;
    CHAR ___dummy589;
    CHAR ___dummy590;
    PCHAR GetLink;
    CHAR ___dummy591;
    CHAR ___dummy592;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy593;
    CHAR ___dummy594;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy595;
    CHAR ___dummy596;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy597;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockBugFix_NonAccentBackstopColor {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy635;
    CHAR ___dummy629;
    PCHAR GetEMail;
    CHAR ___dummy630;
    CHAR ___dummy631;
    PCHAR GetLink;
    CHAR ___dummy632;
    CHAR ___dummy633;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy634;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockBugFix_TestHooks_BreakOnCacheFolderDeletion {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy628;
    CHAR ___dummy622;
    PCHAR GetEMail;
    CHAR ___dummy623;
    CHAR ___dummy624;
    PCHAR GetLink;
    CHAR ___dummy625;
    CHAR ___dummy626;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy627;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockExpMgr_AppHostingModel {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy607;
    CHAR ___dummy599;
    enum Variant_LockExpMgr_AppHostingModel Variant;
    enum Variant_LockExpMgr_AppHostingModel defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy600;
    CHAR ___dummy601;
    PCHAR GetEMail;
    CHAR ___dummy602;
    CHAR ___dummy603;
    PCHAR GetLink;
    CHAR ___dummy604;
    CHAR ___dummy605;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy606;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockExpMgr_AssignedAccess {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy614;
    CHAR ___dummy608;
    PCHAR GetEMail;
    CHAR ___dummy609;
    CHAR ___dummy610;
    PCHAR GetLink;
    CHAR ___dummy611;
    CHAR ___dummy612;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy613;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockExpMgr_TestHooks_AllowOcclusionsOnDesktop_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy587;
    CHAR ___dummy577;
    PCHAR GetEMail;
    CHAR ___dummy578;
    CHAR ___dummy579;
    PCHAR GetLink;
    CHAR ___dummy580;
    CHAR ___dummy581;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy582;
    CHAR ___dummy583;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy584;
    CHAR ___dummy585;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy586;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_FreezeMessagePumpUponDisplayOff {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy576;
    CHAR ___dummy570;
    PCHAR GetEMail;
    CHAR ___dummy571;
    CHAR ___dummy572;
    PCHAR GetLink;
    CHAR ___dummy573;
    CHAR ___dummy574;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy575;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_LongLiveLockApp {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy546;
    CHAR ___dummy540;
    PCHAR GetEMail;
    CHAR ___dummy541;
    CHAR ___dummy542;
    PCHAR GetLink;
    CHAR ___dummy543;
    CHAR ___dummy544;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy545;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_PDCActivator {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy553;
    CHAR ___dummy547;
    PCHAR GetEMail;
    CHAR ___dummy548;
    CHAR ___dummy549;
    PCHAR GetLink;
    CHAR ___dummy550;
    CHAR ___dummy551;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy552;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_PerformanceBoost {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy562;
    CHAR ___dummy554;
    enum Variant_LockReliability_PerformanceBoost Variant;
    enum Variant_LockReliability_PerformanceBoost defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy555;
    CHAR ___dummy556;
    PCHAR GetEMail;
    CHAR ___dummy557;
    CHAR ___dummy558;
    PCHAR GetLink;
    CHAR ___dummy559;
    CHAR ___dummy560;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy561;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_PreLaunchLongLiveLockApp {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy569;
    CHAR ___dummy563;
    PCHAR GetEMail;
    CHAR ___dummy564;
    CHAR ___dummy565;
    PCHAR GetLink;
    CHAR ___dummy566;
    CHAR ___dummy567;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy568;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_ProcessOnUnlockingAsync {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy525;
    CHAR ___dummy519;
    PCHAR GetEMail;
    CHAR ___dummy520;
    CHAR ___dummy521;
    PCHAR GetLink;
    CHAR ___dummy522;
    CHAR ___dummy523;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy524;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_SynchronizeShutdownWithBrokerEndpointCalls {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy532;
    CHAR ___dummy526;
    PCHAR GetEMail;
    CHAR ___dummy527;
    CHAR ___dummy528;
    PCHAR GetLink;
    CHAR ___dummy529;
    CHAR ___dummy530;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy531;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_UnlockIfLockAppDidntShow {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy621;
    CHAR ___dummy615;
    PCHAR GetEMail;
    CHAR ___dummy616;
    CHAR ___dummy617;
    PCHAR GetLink;
    CHAR ___dummy618;
    CHAR ___dummy619;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy620;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LockReliability_WakeFrameThreadOnApplicationStateChanges {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy539;
    CHAR ___dummy533;
    PCHAR GetEMail;
    CHAR ___dummy534;
    CHAR ___dummy535;
    PCHAR GetLink;
    CHAR ___dummy536;
    CHAR ___dummy537;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy538;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LogonUI_BreakOnStart_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy459;
    CHAR ___dummy449;
    PCHAR GetEMail;
    CHAR ___dummy450;
    CHAR ___dummy451;
    PCHAR GetLink;
    CHAR ___dummy452;
    CHAR ___dummy453;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy454;
    CHAR ___dummy455;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy456;
    CHAR ___dummy457;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy458;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LogonUI_EnableTestHooks_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy448;
    CHAR ___dummy438;
    PCHAR GetEMail;
    CHAR ___dummy439;
    CHAR ___dummy440;
    PCHAR GetLink;
    CHAR ___dummy441;
    CHAR ___dummy442;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy443;
    CHAR ___dummy444;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy445;
    CHAR ___dummy446;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy447;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LogonUI_ForceConsoleMode_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy472;
    CHAR ___dummy460;
    PCHAR GetEMail;
    CHAR ___dummy461;
    CHAR ___dummy462;
    PCHAR GetLink;
    CHAR ___dummy463;
    CHAR ___dummy464;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy465;
    CHAR ___dummy466;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy467;
    CHAR ___dummy468;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy469;
    CHAR ___dummy470;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy471;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_LowConfPWILOSoftLanding {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy167;
    CHAR ___dummy157;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy158;
    CHAR ___dummy159;
    PCHAR GetEMail;
    CHAR ___dummy160;
    CHAR ___dummy161;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy162;
    CHAR ___dummy163;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy164;
    CHAR ___dummy165;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy166;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MakePowershellTheDefaultConsole {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1062;
    CHAR ___dummy1058;
    PCHAR GetEMail;
    CHAR ___dummy1059;
    CHAR ___dummy1060;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1061;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MaterialPropertiesAPI {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy119;
    CHAR ___dummy113;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy114;
    CHAR ___dummy115;
    PCHAR GetEMail;
    CHAR ___dummy116;
    CHAR ___dummy117;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy118;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_MediaControlsOnLock {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy316;
    CHAR ___dummy310;
    PCHAR GetEMail;
    CHAR ___dummy311;
    CHAR ___dummy312;
    PCHAR GetLink;
    CHAR ___dummy313;
    CHAR ___dummy314;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy315;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ModalWindowHelper_CUIHostLookup {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy267;
    CHAR ___dummy261;
    PCHAR GetEMail;
    CHAR ___dummy262;
    CHAR ___dummy263;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy264;
    CHAR ___dummy265;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy266;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_NamespaceEnumerationRestrictions {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy394;
    CHAR ___dummy390;
    PCHAR GetEMail;
    CHAR ___dummy391;
    CHAR ___dummy392;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy393;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_NamespaceNavigationRestrictions {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy399;
    CHAR ___dummy395;
    PCHAR GetEMail;
    CHAR ___dummy396;
    CHAR ___dummy397;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy398;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_NormalizeTitlebarHeight {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy182;
    CHAR ___dummy168;
    USHORT version;
    CHAR ___dummy169;
    CHAR ___dummy170;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy171;
    CHAR ___dummy172;
    PCHAR GetEMail;
    CHAR ___dummy173;
    CHAR ___dummy174;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy175;
    CHAR ___dummy176;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy177;
    CHAR ___dummy178;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy179;
    CHAR ___dummy180;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy181;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_NtpSoftLanding {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy156;
    CHAR ___dummy146;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy147;
    CHAR ___dummy148;
    PCHAR GetEMail;
    CHAR ___dummy149;
    CHAR ___dummy150;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy151;
    CHAR ___dummy152;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy153;
    CHAR ___dummy154;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy155;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_OfflineCapableStartMenuMigrationPlugin {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy817;
    CHAR ___dummy811;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy812;
    CHAR ___dummy813;
    PCHAR GetEMail;
    CHAR ___dummy814;
    CHAR ___dummy815;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy816;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_OfflineCapableUserLockScreenSettingsMigrationPlugin {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy644;
    CHAR ___dummy636;
    USHORT version;
    CHAR ___dummy637;
    CHAR ___dummy638;
    PCHAR GetEMail;
    CHAR ___dummy639;
    CHAR ___dummy640;
    PCHAR GetLink;
    CHAR ___dummy641;
    CHAR ___dummy642;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy643;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_OfflinePropsysMigration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy542;
    CHAR ___dummy538;
    PCHAR GetEMail;
    CHAR ___dummy539;
    CHAR ___dummy540;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy541;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_OnDemandFolderPopulation {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy367;
    CHAR ___dummy361;
    USHORT version;
    CHAR ___dummy362;
    CHAR ___dummy363;
    PCHAR GetEMail;
    CHAR ___dummy364;
    CHAR ___dummy365;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy366;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_OneLineClock {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1201;
    CHAR ___dummy1195;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1196;
    CHAR ___dummy1197;
    PCHAR GetEMail;
    CHAR ___dummy1198;
    CHAR ___dummy1199;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1200;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PenSettingsFontSwitcher {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy894;
    CHAR ___dummy886;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy887;
    CHAR ___dummy888;
    PCHAR GetEMail;
    CHAR ___dummy889;
    CHAR ___dummy890;
    PCHAR GetLink;
    CHAR ___dummy891;
    CHAR ___dummy892;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy893;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PenSettingsPenPressure {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy876;
    CHAR ___dummy868;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy869;
    CHAR ___dummy870;
    PCHAR GetEMail;
    CHAR ___dummy871;
    CHAR ___dummy872;
    PCHAR GetLink;
    CHAR ___dummy873;
    CHAR ___dummy874;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy875;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PenSettingsSelectiveDisplay {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy912;
    CHAR ___dummy904;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy905;
    CHAR ___dummy906;
    PCHAR GetEMail;
    CHAR ___dummy907;
    CHAR ___dummy908;
    PCHAR GetLink;
    CHAR ___dummy909;
    CHAR ___dummy910;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy911;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleAppUpsell {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy937;
    CHAR ___dummy929;
    USHORT version;
    CHAR ___dummy930;
    CHAR ___dummy931;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy932;
    CHAR ___dummy933;
    PCHAR GetEMail;
    CHAR ___dummy934;
    CHAR ___dummy935;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy936;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleBar {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy928;
    CHAR ___dummy920;
    USHORT version;
    CHAR ___dummy921;
    CHAR ___dummy922;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy923;
    CHAR ___dummy924;
    PCHAR GetEMail;
    CHAR ___dummy925;
    CHAR ___dummy926;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy927;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleBarCapacitySetting {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1012;
    CHAR ___dummy1006;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1007;
    CHAR ___dummy1008;
    PCHAR GetEMail;
    CHAR ___dummy1009;
    CHAR ___dummy1010;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1011;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleInShareAPI {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy822;
    CHAR ___dummy818;
    PCHAR GetEMail;
    CHAR ___dummy819;
    CHAR ___dummy820;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy821;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleInShareUI {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy975;
    CHAR ___dummy969;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy970;
    CHAR ___dummy971;
    PCHAR GetEMail;
    CHAR ___dummy972;
    CHAR ___dummy973;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy974;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PeopleToastNotifications {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy961;
    CHAR ___dummy953;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy954;
    CHAR ___dummy955;
    PCHAR GetEMail;
    CHAR ___dummy956;
    CHAR ___dummy957;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy958;
    CHAR ___dummy959;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy960;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PersonalizationColorChooser {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1178;
    CHAR ___dummy1174;
    PCHAR GetEMail;
    CHAR ___dummy1175;
    CHAR ___dummy1176;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1177;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PersonalizationRecentColors {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1159;
    CHAR ___dummy1155;
    PCHAR GetEMail;
    CHAR ___dummy1156;
    CHAR ___dummy1157;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1158;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PickerBackButton {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy389;
    CHAR ___dummy385;
    PCHAR GetEMail;
    CHAR ___dummy386;
    CHAR ___dummy387;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy388;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PreReleaseBackstopAndSuspensionCurtain {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy490;
    CHAR ___dummy480;
    PCHAR GetEMail;
    CHAR ___dummy481;
    CHAR ___dummy482;
    PCHAR GetLink;
    CHAR ___dummy483;
    CHAR ___dummy484;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy485;
    CHAR ___dummy486;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy487;
    CHAR ___dummy488;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy489;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PrelaunchEdgeLogon {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1330;
    CHAR ___dummy1322;
    enum Variant_PrelaunchEdgeLogon Variant;
    enum Variant_PrelaunchEdgeLogon defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1323;
    CHAR ___dummy1324;
    USHORT version;
    CHAR ___dummy1325;
    CHAR ___dummy1326;
    PCHAR GetEMail;
    CHAR ___dummy1327;
    CHAR ___dummy1328;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1329;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PrelaunchEdgeOnFrameExit {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1337;
    CHAR ___dummy1331;
    enum Variant_PrelaunchEdgeOnFrameExit Variant;
    enum Variant_PrelaunchEdgeOnFrameExit defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1332;
    CHAR ___dummy1333;
    PCHAR GetEMail;
    CHAR ___dummy1334;
    CHAR ___dummy1335;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1336;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PresentationStateBugFix {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1183;
    CHAR ___dummy1179;
    PCHAR GetEMail;
    CHAR ___dummy1180;
    CHAR ___dummy1181;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1182;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_PromptOnOpenWorkFiles {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy414;
    CHAR ___dummy410;
    USHORT version;
    CHAR ___dummy411;
    CHAR ___dummy412;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy413;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_RMS_WorkFilesAsPersonalToUsb {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy421;
    CHAR ___dummy415;
    USHORT version;
    CHAR ___dummy416;
    CHAR ___dummy417;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy418;
    CHAR ___dummy419;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy420;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_RecycleBinMigration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy537;
    CHAR ___dummy533;
    PCHAR GetEMail;
    CHAR ___dummy534;
    CHAR ___dummy535;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy536;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_RespectEdgeAllowFullScreenPolicy {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1396;
    CHAR ___dummy1392;
    PCHAR GetEMail;
    CHAR ___dummy1393;
    CHAR ___dummy1394;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1395;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_RuleBasedNPSMCurrentSession {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy302;
    CHAR ___dummy296;
    PCHAR GetEMail;
    CHAR ___dummy297;
    CHAR ___dummy298;
    PCHAR GetLink;
    CHAR ___dummy299;
    CHAR ___dummy300;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy301;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ScreenSketchApp {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1379;
    CHAR ___dummy1375;
    PCHAR GetEMail;
    CHAR ___dummy1376;
    CHAR ___dummy1377;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1378;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_SetLockScreenImageAsDesktopBackground {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy334;
    CHAR ___dummy322;
    enum Variant_SetLockScreenImageAsDesktopBackground Variant;
    enum Variant_SetLockScreenImageAsDesktopBackground defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy323;
    CHAR ___dummy324;
    USHORT version;
    CHAR ___dummy325;
    CHAR ___dummy326;
    PCHAR GetEMail;
    CHAR ___dummy327;
    CHAR ___dummy328;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy329;
    CHAR ___dummy330;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy331;
    CHAR ___dummy332;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy333;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_SettingsExtensibility {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy754;
    CHAR ___dummy746;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy747;
    CHAR ___dummy748;
    PCHAR GetEMail;
    CHAR ___dummy749;
    CHAR ___dummy750;
    PCHAR GetLink;
    CHAR ___dummy751;
    CHAR ___dummy752;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy753;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ShareToDevices {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy827;
    CHAR ___dummy823;
    PCHAR GetEMail;
    CHAR ___dummy824;
    CHAR ___dummy825;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy826;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ShareVerbInFileExplorerContextMenu {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy832;
    CHAR ___dummy828;
    PCHAR GetEMail;
    CHAR ___dummy829;
    CHAR ___dummy830;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy831;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ShellCommonExperienceHost {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy782;
    CHAR ___dummy778;
    PCHAR GetEMail;
    CHAR ___dummy779;
    CHAR ___dummy780;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy781;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ShoulderTap {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy968;
    CHAR ___dummy962;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy963;
    CHAR ___dummy964;
    PCHAR GetEMail;
    CHAR ___dummy965;
    CHAR ___dummy966;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy967;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_SingleTabVisuals {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy257;
    CHAR ___dummy241;
    enum Variant_SingleTabVisuals Variant;
    enum Variant_SingleTabVisuals defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy242;
    CHAR ___dummy243;
    USHORT version;
    CHAR ___dummy244;
    CHAR ___dummy245;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy246;
    CHAR ___dummy247;
    PCHAR GetEMail;
    CHAR ___dummy248;
    CHAR ___dummy249;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy250;
    CHAR ___dummy251;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy252;
    CHAR ___dummy253;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy254;
    CHAR ___dummy255;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy256;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_SketchpadLaunched {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1360;
    CHAR ___dummy1356;
    PCHAR GetEMail;
    CHAR ___dummy1357;
    CHAR ___dummy1358;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1359;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_StartComponentUIPrototype {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy796;
    CHAR ___dummy790;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy791;
    CHAR ___dummy792;
    PCHAR GetEMail;
    CHAR ___dummy793;
    CHAR ___dummy794;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy795;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_StartComponentUISupport {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy789;
    CHAR ___dummy783;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy784;
    CHAR ___dummy785;
    PCHAR GetEMail;
    CHAR ___dummy786;
    CHAR ___dummy787;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy788;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_SupportInfoTipInNotificationCenter {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy848;
    CHAR ___dummy838;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy839;
    CHAR ___dummy840;
    PCHAR GetEMail;
    CHAR ___dummy841;
    CHAR ___dummy842;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy843;
    CHAR ___dummy844;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy845;
    CHAR ___dummy846;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy847;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabCategoryBC {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy25;
    CHAR ___dummy11;
    USHORT version;
    CHAR ___dummy12;
    CHAR ___dummy13;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy14;
    CHAR ___dummy15;
    PCHAR GetEMail;
    CHAR ___dummy16;
    CHAR ___dummy17;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy18;
    CHAR ___dummy19;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy20;
    CHAR ___dummy21;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy22;
    CHAR ___dummy23;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy24;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabDragSoftLanding {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy145;
    CHAR ___dummy135;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy136;
    CHAR ___dummy137;
    PCHAR GetEMail;
    CHAR ___dummy138;
    CHAR ___dummy139;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy140;
    CHAR ___dummy141;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy142;
    CHAR ___dummy143;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy144;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabIdStability {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy77;
    CHAR ___dummy63;
    USHORT version;
    CHAR ___dummy64;
    CHAR ___dummy65;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy66;
    CHAR ___dummy67;
    PCHAR GetEMail;
    CHAR ___dummy68;
    CHAR ___dummy69;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy70;
    CHAR ___dummy71;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy72;
    CHAR ___dummy73;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy74;
    CHAR ___dummy75;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy76;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabSettingStateRepoIntegration {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy210;
    CHAR ___dummy198;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy199;
    CHAR ___dummy200;
    PCHAR GetEMail;
    CHAR ___dummy201;
    CHAR ___dummy202;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy203;
    CHAR ___dummy204;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy205;
    CHAR ___dummy206;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy207;
    CHAR ___dummy208;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy209;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabShell {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy10;
    CHAR ___dummy0;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1;
    CHAR ___dummy2;
    PCHAR GetEMail;
    CHAR ___dummy3;
    CHAR ___dummy4;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy5;
    CHAR ___dummy6;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy7;
    CHAR ___dummy8;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy9;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabShellAutoTabbingPreference {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy197;
    CHAR ___dummy183;
    enum Variant_TabShellAutoTabbingPreference Variant;
    enum Variant_TabShellAutoTabbingPreference defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy184;
    CHAR ___dummy185;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy186;
    CHAR ___dummy187;
    PCHAR GetEMail;
    CHAR ___dummy188;
    CHAR ___dummy189;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy190;
    CHAR ___dummy191;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy192;
    CHAR ___dummy193;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy194;
    CHAR ___dummy195;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy196;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabShellVisibility {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy51;
    CHAR ___dummy37;
    enum Variant_TabShellVisibility Variant;
    enum Variant_TabShellVisibility defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy38;
    CHAR ___dummy39;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy40;
    CHAR ___dummy41;
    PCHAR GetEMail;
    CHAR ___dummy42;
    CHAR ___dummy43;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy44;
    CHAR ___dummy45;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy46;
    CHAR ___dummy47;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy48;
    CHAR ___dummy49;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy50;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabShellVisibilityOverrideToOnForGates {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy62;
    CHAR ___dummy52;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy53;
    CHAR ___dummy54;
    PCHAR GetEMail;
    CHAR ___dummy55;
    CHAR ___dummy56;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy57;
    CHAR ___dummy58;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy59;
    CHAR ___dummy60;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy61;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TabShellWinRtApi {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy36;
    CHAR ___dummy26;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy27;
    CHAR ___dummy28;
    PCHAR GetEMail;
    CHAR ___dummy29;
    CHAR ___dummy30;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy31;
    CHAR ___dummy32;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy33;
    CHAR ___dummy34;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy35;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskViewWarmLaunch {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1282;
    CHAR ___dummy1276;
    USHORT version;
    CHAR ___dummy1277;
    CHAR ___dummy1278;
    PCHAR GetEMail;
    CHAR ___dummy1279;
    CHAR ___dummy1280;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1281;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarAddOfficePins {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy706;
    CHAR ___dummy700;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy701;
    CHAR ___dummy702;
    PCHAR GetEMail;
    CHAR ___dummy703;
    CHAR ___dummy704;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy705;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarAddPinnedItemFailureTelemetry {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy699;
    CHAR ___dummy689;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy690;
    CHAR ___dummy691;
    PCHAR GetEMail;
    CHAR ___dummy692;
    CHAR ___dummy693;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy694;
    CHAR ___dummy695;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy696;
    CHAR ___dummy697;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy698;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarBadgingTDLDeprecation {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy665;
    CHAR ___dummy659;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy660;
    CHAR ___dummy661;
    PCHAR GetEMail;
    CHAR ___dummy662;
    CHAR ___dummy663;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy664;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarEdgeFavicon {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy719;
    CHAR ___dummy707;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy708;
    CHAR ___dummy709;
    PCHAR GetEMail;
    CHAR ___dummy710;
    CHAR ___dummy711;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy712;
    CHAR ___dummy713;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy714;
    CHAR ___dummy715;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy716;
    CHAR ___dummy717;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy718;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarEdgeTabBlowout {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy732;
    CHAR ___dummy720;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy721;
    CHAR ___dummy722;
    PCHAR GetEMail;
    CHAR ___dummy723;
    CHAR ___dummy724;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy725;
    CHAR ___dummy726;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy727;
    CHAR ___dummy728;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy729;
    CHAR ___dummy730;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy731;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarProgrammaticEdgeWebsitePinning {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy679;
    CHAR ___dummy673;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy674;
    CHAR ___dummy675;
    PCHAR GetEMail;
    CHAR ___dummy676;
    CHAR ___dummy677;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy678;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarProgrammaticPrimaryTilePinning {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy672;
    CHAR ___dummy666;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy667;
    CHAR ___dummy668;
    PCHAR GetEMail;
    CHAR ___dummy669;
    CHAR ___dummy670;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy671;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TaskbarTabbedOneClick {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy745;
    CHAR ___dummy733;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy734;
    CHAR ___dummy735;
    PCHAR GetEMail;
    CHAR ___dummy736;
    CHAR ___dummy737;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy738;
    CHAR ___dummy739;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy740;
    CHAR ___dummy741;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy742;
    CHAR ___dummy743;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy744;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TestPeopleAppUpsellWithShareCollection {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy952;
    CHAR ___dummy938;
    USHORT version;
    CHAR ___dummy939;
    CHAR ___dummy940;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy941;
    CHAR ___dummy942;
    PCHAR GetEMail;
    CHAR ___dummy943;
    CHAR ___dummy944;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy945;
    CHAR ___dummy946;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy947;
    CHAR ___dummy948;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy949;
    CHAR ___dummy950;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy951;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ThemeSettings {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1166;
    CHAR ___dummy1160;
    PCHAR GetEMail;
    CHAR ___dummy1161;
    CHAR ___dummy1162;
    PCHAR GetLink;
    CHAR ___dummy1163;
    CHAR ___dummy1164;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1165;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ThemesInStore {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1173;
    CHAR ___dummy1167;
    PCHAR GetEMail;
    CHAR ___dummy1168;
    CHAR ___dummy1169;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1170;
    CHAR ___dummy1171;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1172;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ThumbnailTabs {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy225;
    CHAR ___dummy211;
    USHORT version;
    CHAR ___dummy212;
    CHAR ___dummy213;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy214;
    CHAR ___dummy215;
    PCHAR GetEMail;
    CHAR ___dummy216;
    CHAR ___dummy217;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy218;
    CHAR ___dummy219;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy220;
    CHAR ___dummy221;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy222;
    CHAR ___dummy223;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy224;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TimelineCrossDevice {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1275;
    CHAR ___dummy1267;
    USHORT version;
    CHAR ___dummy1268;
    CHAR ___dummy1269;
    PCHAR GetEMail;
    CHAR ___dummy1270;
    CHAR ___dummy1271;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1272;
    CHAR ___dummy1273;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1274;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TimelineDeleteByGroup {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1298;
    CHAR ___dummy1290;
    USHORT version;
    CHAR ___dummy1291;
    CHAR ___dummy1292;
    PCHAR GetEMail;
    CHAR ___dummy1293;
    CHAR ___dummy1294;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1295;
    CHAR ___dummy1296;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1297;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TimelineUpSell {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1266;
    CHAR ___dummy1258;
    USHORT version;
    CHAR ___dummy1259;
    CHAR ___dummy1260;
    PCHAR GetEMail;
    CHAR ___dummy1261;
    CHAR ___dummy1262;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1263;
    CHAR ___dummy1264;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1265;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TrayNotificationsWithoutTDL {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy855;
    CHAR ___dummy849;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy850;
    CHAR ___dummy851;
    PCHAR GetEMail;
    CHAR ___dummy852;
    CHAR ___dummy853;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy854;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_TurnOnNumLockDuringPinEntry {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy412;
    CHAR ___dummy406;
    PCHAR GetEMail;
    CHAR ___dummy407;
    CHAR ___dummy408;
    PCHAR GetLink;
    CHAR ___dummy409;
    CHAR ___dummy410;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy411;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UIBCEnableToast {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1149;
    CHAR ___dummy1145;
    PCHAR GetEMail;
    CHAR ___dummy1146;
    CHAR ___dummy1147;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1148;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UnifiedEnrollmentLandingPage {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy351;
    CHAR ___dummy345;
    PCHAR GetEMail;
    CHAR ___dummy346;
    CHAR ___dummy347;
    PCHAR GetLink;
    CHAR ___dummy348;
    CHAR ___dummy349;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy350;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UnifiedEnrollment_HandlerStrings {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy362;
    CHAR ___dummy352;
    PCHAR GetEMail;
    CHAR ___dummy353;
    CHAR ___dummy354;
    PCHAR GetLink;
    CHAR ___dummy355;
    CHAR ___dummy356;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy357;
    CHAR ___dummy358;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy359;
    CHAR ___dummy360;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy361;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UniversalFileId {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy527;
    CHAR ___dummy523;
    PCHAR GetEMail;
    CHAR ___dummy524;
    CHAR ___dummy525;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy526;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UpdatedPeopleSuggestions {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy982;
    CHAR ___dummy976;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy977;
    CHAR ___dummy978;
    PCHAR GetEMail;
    CHAR ___dummy979;
    CHAR ___dummy980;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy981;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UploadUserActivity {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1289;
    CHAR ___dummy1283;
    USHORT version;
    CHAR ___dummy1284;
    CHAR ___dummy1285;
    PCHAR GetEMail;
    CHAR ___dummy1286;
    CHAR ___dummy1287;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1288;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UseConvergedNpsmMtcModel {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy309;
    CHAR ___dummy303;
    PCHAR GetEMail;
    CHAR ___dummy304;
    CHAR ___dummy305;
    PCHAR GetLink;
    CHAR ___dummy306;
    CHAR ___dummy307;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy308;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_UsePeopleAppRelevance {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1005;
    CHAR ___dummy999;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1000;
    CHAR ___dummy1001;
    PCHAR GetEMail;
    CHAR ___dummy1002;
    CHAR ___dummy1003;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1004;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ViewClosingAPIs_CloseRequested_Desktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1194;
    CHAR ___dummy1192;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1193;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_ViewClosingAPIs_TryConsolidate_Desktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1191;
    CHAR ___dummy1189;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1190;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_VolumeFlyoutEndpointSelection {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy321;
    CHAR ___dummy317;
    PCHAR GetEMail;
    CHAR ___dummy318;
    CHAR ___dummy319;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy320;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WIWHotkeyForScreenSketch {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1144;
    CHAR ___dummy1140;
    PCHAR GetEMail;
    CHAR ___dummy1141;
    CHAR ___dummy1142;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1143;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WcosHandwritingSettings {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy885;
    CHAR ___dummy877;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy878;
    CHAR ___dummy879;
    PCHAR GetEMail;
    CHAR ___dummy880;
    CHAR ___dummy881;
    PCHAR GetLink;
    CHAR ___dummy882;
    CHAR ___dummy883;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy884;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WelcomeScreenEnabled {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy504;
    CHAR ___dummy498;
    PCHAR GetEMail;
    CHAR ___dummy499;
    CHAR ___dummy500;
    PCHAR GetLink;
    CHAR ___dummy501;
    CHAR ___dummy502;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy503;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WindowManagerDesktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy281;
    CHAR ___dummy275;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy276;
    CHAR ___dummy277;
    PCHAR GetEMail;
    CHAR ___dummy278;
    CHAR ___dummy279;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy280;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WindowingEnvironmentsDesktop {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy290;
    CHAR ___dummy282;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy283;
    CHAR ___dummy284;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy285;
    CHAR ___dummy286;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy287;
    CHAR ___dummy288;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy289;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WindowingEnvironmentsWCOS {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy295;
    CHAR ___dummy291;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy292;
    CHAR ___dummy293;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy294;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WindowsInkWorkspaceImprovements {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1384;
    CHAR ___dummy1380;
    PCHAR GetEMail;
    CHAR ___dummy1381;
    CHAR ___dummy1382;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1383;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_WorkFilesAsPersonalToUsb {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy409;
    CHAR ___dummy405;
    USHORT version;
    CHAR ___dummy406;
    CHAR ___dummy407;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy408;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlAllUpView {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1098;
    CHAR ___dummy1088;
    USHORT version;
    CHAR ___dummy1089;
    CHAR ___dummy1090;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1091;
    CHAR ___dummy1092;
    PCHAR GetEMail;
    CHAR ___dummy1093;
    CHAR ___dummy1094;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1095;
    CHAR ___dummy1096;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1097;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlAltTabView {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1113;
    CHAR ___dummy1099;
    USHORT version;
    CHAR ___dummy1100;
    CHAR ___dummy1101;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1102;
    CHAR ___dummy1103;
    PCHAR GetEMail;
    CHAR ___dummy1104;
    CHAR ___dummy1105;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy1106;
    CHAR ___dummy1107;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy1108;
    CHAR ___dummy1109;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1110;
    CHAR ___dummy1111;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1112;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlCredUI {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy369;
    CHAR ___dummy363;
    PCHAR GetEMail;
    CHAR ___dummy364;
    CHAR ___dummy365;
    PCHAR GetLink;
    CHAR ___dummy366;
    CHAR ___dummy367;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy368;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlExplorerHost {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1078;
    CHAR ___dummy1070;
    USHORT version;
    CHAR ___dummy1071;
    CHAR ___dummy1072;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1073;
    CHAR ___dummy1074;
    PCHAR GetEMail;
    CHAR ___dummy1075;
    CHAR ___dummy1076;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1077;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlPresenterAtlasSize_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy430;
    CHAR ___dummy420;
    PCHAR GetEMail;
    CHAR ___dummy421;
    CHAR ___dummy422;
    PCHAR GetLink;
    CHAR ___dummy423;
    CHAR ___dummy424;
    enum wil::FeatureStage stageOverride;
    CHAR ___dummy425;
    CHAR ___dummy426;
    enum wil::FeatureStage stageChkOverride;
    CHAR ___dummy427;
    CHAR ___dummy428;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy429;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlPresenterBackstopColor_Development {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy437;
    CHAR ___dummy431;
    PCHAR GetEMail;
    CHAR ___dummy432;
    CHAR ___dummy433;
    PCHAR GetLink;
    CHAR ___dummy434;
    CHAR ___dummy435;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy436;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlSnapAssistView {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1122;
    CHAR ___dummy1114;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1115;
    CHAR ___dummy1116;
    PCHAR GetEMail;
    CHAR ___dummy1117;
    CHAR ___dummy1118;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1119;
    CHAR ___dummy1120;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1121;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_XamlTaskbar {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1087;
    CHAR ___dummy1079;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1080;
    CHAR ___dummy1081;
    PCHAR GetEMail;
    CHAR ___dummy1082;
    CHAR ___dummy1083;
    BOOLEAN AreDependenciesEnabled;
    CHAR ___dummy1084;
    CHAR ___dummy1085;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1086;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_YourPhoneDesktopShortcut {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1221;
    CHAR ___dummy1211;
    enum Variant_YourPhoneDesktopShortcut Variant;
    enum Variant_YourPhoneDesktopShortcut defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1212;
    CHAR ___dummy1213;
    USHORT version;
    CHAR ___dummy1214;
    CHAR ___dummy1215;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1216;
    CHAR ___dummy1217;
    PCHAR GetEMail;
    CHAR ___dummy1218;
    CHAR ___dummy1219;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1220;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WilFeatureTraits_Feature_YourPhoneTaskbarIcon {
    struct wil::details::FeatureTraitsBase wil::details::FeatureTraitsBase;
    ULONG id;
    enum wil::FeatureStage stage;
    PCHAR GetName;
    PCHAR GetDescription;
    CHAR ___dummy1232;
    CHAR ___dummy1222;
    enum Variant_YourPhoneTaskbarIcon Variant;
    enum Variant_YourPhoneTaskbarIcon defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    CHAR ___dummy1223;
    CHAR ___dummy1224;
    USHORT version;
    CHAR ___dummy1225;
    CHAR ___dummy1226;
    enum wil::FeatureChangeTime changeTime;
    CHAR ___dummy1227;
    CHAR ___dummy1228;
    PCHAR GetEMail;
    CHAR ___dummy1229;
    CHAR ___dummy1230;
    PCHAR GetGroupName;
    PCHAR GetGroupDescription;
    CHAR ___dummy1231;
    enum wil::FeatureStage activeStage;
    BOOLEAN isAlwaysDisabled;
    BOOLEAN isAlwaysEnabled;
    BOOLEAN isEnabledByDefault;
};

typedef struct __WinStationUserSessionInfo {
    LONG Version;
    LONG SessionId;
    enum _WINSTATIONSTATECLASS SessionState;
    enum _SESSIONTYPE SessionType;
    LONG ChildOrParentSessionId;
};

typedef struct __finddata64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    CHAR name[260];
};

typedef struct __lc_time_data {
};

typedef struct __m128d {
    DOUBLE m128d_f64[2];
};

typedef struct __m256d {
    DOUBLE m256d_f64[4];
};

typedef struct __s_GUID {
    ULONG Data1;
    USHORT Data2;
    USHORT Data3;
    UCHAR Data4[8];
};

typedef struct __vc_attributes::aggregatableAttribute {
    LONG type_e;
    VOID aggregatableAttribute;
    VOID aggregatableAttribute;
    enum __vc_attributes::aggregatableAttribute::type_e type;
};

typedef struct __vc_attributes::appobjectAttribute {
    VOID appobjectAttribute;
};

typedef struct __vc_attributes::async_uuidAttribute {
    VOID async_uuidAttribute;
    PCHAR uuid;
};

typedef struct __vc_attributes::atl::aggregatesAttribute {
    VOID aggregatesAttribute;
    VOID aggregatesAttribute;
    PCHAR clsid;
};

typedef struct __vc_attributes::atl::com_interface_entryAttribute {
    VOID com_interface_entryAttribute;
    VOID com_interface_entryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::db_accessorAttribute {
    VOID db_accessorAttribute;
    VOID db_accessorAttribute;
    LONG id;
    BOOLEAN auto_;
};

typedef struct __vc_attributes::atl::db_columnAttribute {
    VOID db_columnAttribute;
    VOID db_columnAttribute;
    VOID db_columnAttribute;
    PCHAR ordinal;
    PCHAR dbtype;
    PCHAR precision;
    PCHAR scale;
    PCHAR status;
    PCHAR length;
};

typedef struct __vc_attributes::atl::db_commandAttribute {
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    VOID db_commandAttribute;
    PCHAR command;
    PCHAR name;
    PCHAR source_name;
    PCHAR hresult;
    PCHAR bindings;
    PCHAR bulk_fetch;
};

typedef struct __vc_attributes::atl::db_paramAttribute {
    VOID db_paramAttribute;
    VOID db_paramAttribute;
    VOID db_paramAttribute;
    PCHAR ordinal;
    PCHAR paramtype;
    PCHAR dbtype;
    PCHAR precision;
    PCHAR scale;
    PCHAR status;
    PCHAR length;
};

typedef struct __vc_attributes::atl::db_sourceAttribute {
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    VOID db_sourceAttribute;
    PCHAR source;
    PCHAR name;
    PCHAR hresult;
};

typedef struct __vc_attributes::atl::db_tableAttribute {
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    VOID db_tableAttribute;
    PCHAR table;
    PCHAR name;
    PCHAR source_name;
    PCHAR hresult;
    PCHAR bulk_fetch;
};

typedef struct __vc_attributes::atl::implements_categoryAttribute {
    VOID implements_categoryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::perf_counterAttribute {
    VOID perf_counterAttribute;
    VOID perf_counterAttribute;
    PCHAR namestring;
    PCHAR helpstring;
    LONG name_res;
    LONG help_res;
    LONG countertype;
    LONG defscale;
    BOOLEAN default_counter;
    LONG detail;
    LONG max_counter_size;
    PCHAR countertype_string;
};

typedef struct __vc_attributes::atl::perf_objectAttribute {
    VOID perf_objectAttribute;
    VOID perf_objectAttribute;
    LONG name_res;
    LONG help_res;
    PCHAR namestring;
    PCHAR helpstring;
    LONG detail;
    BOOLEAN no_instances;
    PCHAR class_;
    LONG maxinstnamelen;
};

typedef struct __vc_attributes::atl::perfmonAttribute {
    VOID perfmonAttribute;
    VOID perfmonAttribute;
    VOID perfmonAttribute;
    PCHAR name;
    BOOLEAN register;
};

typedef struct __vc_attributes::atl::rdxAttribute {
    VOID rdxAttribute;
    VOID rdxAttribute;
    VOID rdxAttribute;
    PCHAR key;
    PCHAR valuename;
    PCHAR regtype;
};

typedef struct __vc_attributes::atl::registration_scriptAttribute {
    VOID registration_scriptAttribute;
    VOID registration_scriptAttribute;
    PCHAR script;
};

typedef struct __vc_attributes::atl::request_handlerAttribute {
    VOID request_handlerAttribute;
    VOID request_handlerAttribute;
    VOID request_handlerAttribute;
    PCHAR name;
    PCHAR sdl;
};

typedef struct __vc_attributes::atl::requires_categoryAttribute {
    VOID requires_categoryAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::soap_handlerAttribute {
    VOID soap_handlerAttribute;
    VOID soap_handlerAttribute;
    PCHAR name;
    PCHAR namespace;
    PCHAR protocol;
    PCHAR style;
    PCHAR use;
};

typedef struct __vc_attributes::atl::soap_headerAttribute {
    VOID soap_headerAttribute;
    VOID soap_headerAttribute;
    VOID soap_headerAttribute;
    PCHAR value;
    BOOLEAN required;
    BOOLEAN in;
    BOOLEAN out;
};

typedef struct __vc_attributes::atl::soap_methodAttribute {
    VOID soap_methodAttribute;
    VOID soap_methodAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::atl::soap_namespaceAttribute {
    VOID soap_namespaceAttribute;
    VOID soap_namespaceAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::atl::support_error_infoAttribute {
    VOID support_error_infoAttribute;
    PCHAR error_interface;
};

typedef struct __vc_attributes::atl::synchronizeAttribute {
    VOID synchronizeAttribute;
};

typedef struct __vc_attributes::atl::tag_nameAttribute {
    VOID tag_nameAttribute;
    VOID tag_nameAttribute;
    VOID tag_nameAttribute;
    PCHAR name;
    PCHAR parse_func;
};

typedef struct __vc_attributes::bindableAttribute {
    VOID bindableAttribute;
};

typedef struct __vc_attributes::call_asAttribute {
    VOID call_asAttribute;
    PVOID local_proc;
};

typedef struct __vc_attributes::caseAttribute {
    VOID caseAttribute;
    LONG value;
};

typedef struct __vc_attributes::coclassAttribute {
    VOID coclassAttribute;
};

typedef struct __vc_attributes::controlAttribute {
    VOID controlAttribute;
};

typedef struct __vc_attributes::cpp_quoteAttribute {
    VOID cpp_quoteAttribute;
    PCHAR string;
};

typedef struct __vc_attributes::customAttribute {
    VOID customAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultAttribute {
    VOID defaultAttribute;
    VOID defaultAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultbindAttribute {
    VOID defaultbindAttribute;
};

typedef struct __vc_attributes::defaultcollelemAttribute {
    VOID defaultcollelemAttribute;
};

typedef struct __vc_attributes::defaultvalueAttribute {
    VOID defaultvalueAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::defaultvtableAttribute {
    VOID defaultvtableAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::dispinterfaceAttribute {
    VOID dispinterfaceAttribute;
};

typedef struct __vc_attributes::displaybindAttribute {
    VOID displaybindAttribute;
};

typedef struct __vc_attributes::dualAttribute {
    VOID dualAttribute;
};

typedef struct __vc_attributes::emitidlAttribute {
    LONG restricted;
    LONG forced;
    LONG push;
    LONG pop;
    VOID emitidlAttribute;
    VOID emitidlAttribute;
    VOID emitidlAttribute;
    LONG value;
    BOOLEAN defaultimports;
};

typedef struct __vc_attributes::entryAttribute {
    VOID entryAttribute;
    PCHAR entry_id;
};

typedef struct __vc_attributes::event_receiverAttribute {
    LONG type_e;
    VOID event_receiverAttribute;
    VOID event_receiverAttribute;
    VOID event_receiverAttribute;
    enum __vc_attributes::event_receiverAttribute::type_e type;
    BOOLEAN layout_dependent;
};

typedef struct __vc_attributes::event_sourceAttribute {
    LONG type_e;
    LONG optimize_e;
    VOID event_sourceAttribute;
    VOID event_sourceAttribute;
    enum __vc_attributes::event_sourceAttribute::type_e type;
    enum __vc_attributes::event_sourceAttribute::optimize_e optimize;
    BOOLEAN decorate;
};

typedef struct __vc_attributes::exportAttribute {
    VOID exportAttribute;
};

typedef struct __vc_attributes::first_isAttribute {
    VOID first_isAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::helpcontextAttribute {
    VOID helpcontextAttribute;
    PCHAR helpcontext_value;
};

typedef struct __vc_attributes::helper_attributes::as_stringAttribute {
    VOID as_stringAttribute;
};

typedef struct __vc_attributes::helper_attributes::attributeAttribute {
    LONG All;
    LONG Assembly;
    LONG Class;
    LONG Constructor;
    LONG Delegate;
    LONG Enum;
    LONG Event;
    LONG Field;
    LONG GenericParameter;
    LONG Interface;
    LONG Method;
    LONG Module;
    LONG Parameter;
    LONG Property;
    LONG ReturnValue;
    LONG Struct;
    VOID attributeAttribute;
    VOID attributeAttribute;
    LONG ValidOn;
    BOOLEAN AllowMultiple;
    BOOLEAN Inherited;
};

typedef struct __vc_attributes::helper_attributes::default_valueAttribute {
    VOID default_valueAttribute;
    PVOID value;
};

typedef struct __vc_attributes::helper_attributes::help_stringAttribute {
    VOID help_stringAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::helper_attributes::multi_valueAttribute {
    VOID multi_valueAttribute;
};

typedef struct __vc_attributes::helper_attributes::notify_atlprovAttribute {
    VOID notify_atlprovAttribute;
};

typedef struct __vc_attributes::helper_attributes::process_earlyAttribute {
    VOID process_earlyAttribute;
};

typedef struct __vc_attributes::helper_attributes::repeatableAttribute {
    VOID repeatableAttribute;
};

typedef struct __vc_attributes::helper_attributes::requires_valueAttribute {
    VOID requires_valueAttribute;
};

typedef struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute {
    LONG All;
    LONG Assembly;
    LONG Class;
    LONG Constructor;
    LONG Delegate;
    LONG Enum;
    LONG Event;
    LONG Field;
    LONG GenericParameter;
    LONG Interface;
    LONG Method;
    LONG Module;
    LONG Parameter;
    LONG Property;
    LONG ReturnValue;
    LONG Struct;
    LONG Typedef;
    VOID source_annotation_attributeAttribute;
    VOID source_annotation_attributeAttribute;
    LONG ValidOn;
    BOOLEAN AllowMultiple;
};

typedef struct __vc_attributes::helper_attributes::usageAttribute {
    LONG usage_e;
    VOID usageAttribute;
    ULONG value;
};

typedef struct __vc_attributes::helper_attributes::v1_alttypeAttribute {
    LONG type_e;
    VOID v1_alttypeAttribute;
    enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e type;
};

typedef struct __vc_attributes::helper_attributes::v1_earlyAttribute {
    VOID v1_earlyAttribute;
};

typedef struct __vc_attributes::helper_attributes::v1_nameAttribute {
    VOID v1_nameAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::helpfileAttribute {
    VOID helpfileAttribute;
    PCHAR filename;
};

typedef struct __vc_attributes::helpstringAttribute {
    VOID helpstringAttribute;
    PCHAR help_text_string;
};

typedef struct __vc_attributes::helpstringcontextAttribute {
    VOID helpstringcontextAttribute;
    LONG contextid;
};

typedef struct __vc_attributes::helpstringdllAttribute {
    VOID helpstringdllAttribute;
    PCHAR dllname;
};

typedef struct __vc_attributes::hiddenAttribute {
    VOID hiddenAttribute;
};

typedef struct __vc_attributes::hookAttribute {
    VOID hookAttribute;
    VOID hookAttribute;
    VOID hookAttribute;
    VOID hookAttribute;
    PCHAR event;
    PCHAR source;
    PCHAR handler;
    PCHAR receiver;
};

typedef struct __vc_attributes::idAttribute {
    VOID idAttribute;
    LONG id_num;
};

typedef struct __vc_attributes::idl_moduleAttribute {
    VOID idl_moduleAttribute;
    VOID idl_moduleAttribute;
    PCHAR name;
    PCHAR dllname;
    PCHAR version;
    PCHAR uuid;
    PCHAR helpstring;
    LONG helpstringcontext;
    LONG helpcontext;
    BOOLEAN hidden;
    BOOLEAN restricted;
};

typedef struct __vc_attributes::idl_quoteAttribute {
    VOID idl_quoteAttribute;
    VOID idl_quoteAttribute;
    PCHAR text;
};

typedef struct __vc_attributes::iid_isAttribute {
    VOID iid_isAttribute;
    PCHAR limited_expression;
};

typedef struct __vc_attributes::immediatebindAttribute {
    VOID immediatebindAttribute;
};

typedef struct __vc_attributes::implementsAttribute {
    VOID implementsAttribute;
    VOID implementsAttribute;
    PCHAR interfaces;
    PCHAR dispinterfaces;
};

typedef struct __vc_attributes::importAttribute {
    VOID importAttribute;
    PCHAR idl_file;
};

typedef struct __vc_attributes::importidlAttribute {
    VOID importidlAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::importlibAttribute {
    VOID importlibAttribute;
    PCHAR tlb_file;
};

typedef struct __vc_attributes::inAttribute {
    VOID inAttribute;
};

typedef struct __vc_attributes::includeAttribute {
    VOID includeAttribute;
    PCHAR include_file;
};

typedef struct __vc_attributes::includelibAttribute {
    VOID includelibAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::last_isAttribute {
    VOID last_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::lcidAttribute {
    VOID lcidAttribute;
};

typedef struct __vc_attributes::length_isAttribute {
    VOID length_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::library_blockAttribute {
    VOID library_blockAttribute;
};

typedef struct __vc_attributes::licensedAttribute {
    VOID licensedAttribute;
};

typedef struct __vc_attributes::localAttribute {
    VOID localAttribute;
};

typedef struct __vc_attributes::max_isAttribute {
    VOID max_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::moduleAttribute {
    LONG type_e;
    VOID moduleAttribute;
    VOID moduleAttribute;
    VOID moduleAttribute;
    enum __vc_attributes::moduleAttribute::type_e type;
    PCHAR name;
    PCHAR version;
    PCHAR uuid;
    LONG lcid;
    BOOLEAN control;
    PCHAR helpstring;
    LONG helpstringcontext;
    PCHAR helpstringdll;
    PCHAR helpfile;
    LONG helpcontext;
    BOOLEAN hidden;
    BOOLEAN restricted;
    PCHAR custom;
    PCHAR resource_name;
};

typedef struct __vc_attributes::ms_unionAttribute {
    VOID ms_unionAttribute;
};

typedef struct __vc_attributes::no_injected_textAttribute {
    VOID no_injected_textAttribute;
    VOID no_injected_textAttribute;
    BOOLEAN value;
};

typedef struct __vc_attributes::nonbrowsableAttribute {
    VOID nonbrowsableAttribute;
};

typedef struct __vc_attributes::noncreatableAttribute {
    VOID noncreatableAttribute;
};

typedef struct __vc_attributes::nonextensibleAttribute {
    VOID nonextensibleAttribute;
};

typedef struct __vc_attributes::objectAttribute {
    VOID objectAttribute;
};

typedef struct __vc_attributes::odlAttribute {
    VOID odlAttribute;
};

typedef struct __vc_attributes::oleautomationAttribute {
    VOID oleautomationAttribute;
};

typedef struct __vc_attributes::optionalAttribute {
    VOID optionalAttribute;
};

typedef struct __vc_attributes::outAttribute {
    VOID outAttribute;
};

typedef struct __vc_attributes::pointer_defaultAttribute {
    LONG type_e;
    VOID pointer_defaultAttribute;
    enum __vc_attributes::pointer_defaultAttribute::type_e type;
};

typedef struct __vc_attributes::pragmaAttribute {
    VOID pragmaAttribute;
    PCHAR token_sequence;
};

typedef struct __vc_attributes::progidAttribute {
    VOID progidAttribute;
    PCHAR name;
};

typedef struct __vc_attributes::propgetAttribute {
    VOID propgetAttribute;
};

typedef struct __vc_attributes::propputAttribute {
    VOID propputAttribute;
};

typedef struct __vc_attributes::propputrefAttribute {
    VOID propputrefAttribute;
};

typedef struct __vc_attributes::providerAttribute {
    VOID providerAttribute;
    VOID providerAttribute;
    PCHAR name;
    PCHAR uuid;
    LONG cookies;
};

typedef struct __vc_attributes::ptrAttribute {
    VOID ptrAttribute;
};

typedef struct __vc_attributes::publicAttribute {
    VOID publicAttribute;
};

typedef struct __vc_attributes::rangeAttribute {
    VOID rangeAttribute;
    LONG low_val;
    LONG high_val;
};

typedef struct __vc_attributes::readonlyAttribute {
    VOID readonlyAttribute;
};

typedef struct __vc_attributes::refAttribute {
    VOID refAttribute;
};

typedef struct __vc_attributes::requesteditAttribute {
    VOID requesteditAttribute;
};

typedef struct __vc_attributes::restrictedAttribute {
    VOID restrictedAttribute;
    VOID restrictedAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::retvalAttribute {
    VOID retvalAttribute;
};

typedef struct __vc_attributes::satypeAttribute {
    VOID satypeAttribute;
    VOID satypeAttribute;
    PCHAR type;
};

typedef struct __vc_attributes::size_isAttribute {
    VOID size_isAttribute;
    PCHAR expression;
};

typedef struct __vc_attributes::sourceAttribute {
    VOID sourceAttribute;
    VOID sourceAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::stringAttribute {
    VOID stringAttribute;
};

typedef struct __vc_attributes::switch_isAttribute {
    VOID switch_isAttribute;
    PCHAR limited_expression;
};

typedef struct __vc_attributes::switch_typeAttribute {
    VOID switch_typeAttribute;
    PCHAR switch_type_specifier;
};

typedef struct __vc_attributes::threadingAttribute {
    LONG threading_e;
    VOID threadingAttribute;
    VOID threadingAttribute;
    enum __vc_attributes::threadingAttribute::threading_e value;
};

typedef struct __vc_attributes::transmit_asAttribute {
    VOID transmit_asAttribute;
    PCHAR xmit_type;
};

typedef struct __vc_attributes::uidefaultAttribute {
    VOID uidefaultAttribute;
};

typedef struct __vc_attributes::unhookAttribute {
    VOID unhookAttribute;
    VOID unhookAttribute;
    VOID unhookAttribute;
    VOID unhookAttribute;
    PCHAR event;
    PCHAR source;
    PCHAR handler;
    PCHAR receiver;
};

typedef struct __vc_attributes::uniqueAttribute {
    VOID uniqueAttribute;
};

typedef struct __vc_attributes::usesgetlasterrorAttribute {
    VOID usesgetlasterrorAttribute;
};

typedef struct __vc_attributes::uuidAttribute {
    VOID uuidAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::v1_enumAttribute {
    VOID v1_enumAttribute;
};

typedef struct __vc_attributes::varargAttribute {
    VOID varargAttribute;
};

typedef struct __vc_attributes::versionAttribute {
    VOID versionAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::vi_progidAttribute {
    VOID vi_progidAttribute;
    PCHAR value;
};

typedef struct __vc_attributes::wire_marshalAttribute {
    VOID wire_marshalAttribute;
    PCHAR wire_type;
};

typedef struct _browseinfoA {
    struct HWND__ *hwndOwner;
    struct _ITEMIDLIST *pidlRoot;
    PCHAR pszDisplayName;
    PCHAR lpszTitle;
    ULONG ulFlags;
    PLONG lpfn;
    LONG64 lParam;
    LONG iImage;
};

typedef struct _browseinfoW {
    struct HWND__ *hwndOwner;
    struct _ITEMIDLIST *pidlRoot;
    PWCHAR pszDisplayName;
    PWCHAR lpszTitle;
    ULONG ulFlags;
    PLONG lpfn;
    LONG64 lParam;
    LONG iImage;
};

typedef struct _complex {
    DOUBLE x;
    DOUBLE y;
};

typedef struct _cpinfo {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
};

typedef struct _cpinfoexA {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
    WCHAR UnicodeDefaultChar;
    ULONG CodePage;
    CHAR CodePageName[260];
};

typedef struct _cpinfoexW {
    ULONG MaxCharSize;
    UCHAR DefaultChar[2];
    UCHAR LeadByte[12];
    WCHAR UnicodeDefaultChar;
    ULONG CodePage;
    WCHAR CodePageName[260];
};

typedef struct _currencyfmtA {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PCHAR lpDecimalSep;
    PCHAR lpThousandSep;
    ULONG NegativeOrder;
    ULONG PositiveOrder;
    PCHAR lpCurrencySymbol;
};

typedef struct _currencyfmtW {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PWCHAR lpDecimalSep;
    PWCHAR lpThousandSep;
    ULONG NegativeOrder;
    ULONG PositiveOrder;
    PWCHAR lpCurrencySymbol;
};

typedef struct _devicemodeA {
    UCHAR dmDeviceName[32];
    USHORT dmSpecVersion;
    USHORT dmDriverVersion;
    USHORT dmSize;
    USHORT dmDriverExtra;
    ULONG dmFields;
    SHORT dmOrientation;
    SHORT dmPaperSize;
    SHORT dmPaperLength;
    SHORT dmPaperWidth;
    SHORT dmScale;
    SHORT dmCopies;
    SHORT dmDefaultSource;
    SHORT dmPrintQuality;
    struct _POINTL dmPosition;
    ULONG dmDisplayOrientation;
    ULONG dmDisplayFixedOutput;
    SHORT dmColor;
    SHORT dmDuplex;
    SHORT dmYResolution;
    SHORT dmTTOption;
    SHORT dmCollate;
    UCHAR dmFormName[32];
    USHORT dmLogPixels;
    ULONG dmBitsPerPel;
    ULONG dmPelsWidth;
    ULONG dmPelsHeight;
    ULONG dmDisplayFlags;
    ULONG dmNup;
    ULONG dmDisplayFrequency;
    ULONG dmICMMethod;
    ULONG dmICMIntent;
    ULONG dmMediaType;
    ULONG dmDitherType;
    ULONG dmReserved1;
    ULONG dmReserved2;
    ULONG dmPanningWidth;
    ULONG dmPanningHeight;
};

typedef struct _devicemodeW {
    WCHAR dmDeviceName[32];
    USHORT dmSpecVersion;
    USHORT dmDriverVersion;
    USHORT dmSize;
    USHORT dmDriverExtra;
    ULONG dmFields;
    SHORT dmOrientation;
    SHORT dmPaperSize;
    SHORT dmPaperLength;
    SHORT dmPaperWidth;
    SHORT dmScale;
    SHORT dmCopies;
    SHORT dmDefaultSource;
    SHORT dmPrintQuality;
    struct _POINTL dmPosition;
    ULONG dmDisplayOrientation;
    ULONG dmDisplayFixedOutput;
    SHORT dmColor;
    SHORT dmDuplex;
    SHORT dmYResolution;
    SHORT dmTTOption;
    SHORT dmCollate;
    WCHAR dmFormName[32];
    USHORT dmLogPixels;
    ULONG dmBitsPerPel;
    ULONG dmPelsWidth;
    ULONG dmPelsHeight;
    ULONG dmDisplayFlags;
    ULONG dmNup;
    ULONG dmDisplayFrequency;
    ULONG dmICMMethod;
    ULONG dmICMIntent;
    ULONG dmMediaType;
    ULONG dmDitherType;
    ULONG dmReserved1;
    ULONG dmReserved2;
    ULONG dmPanningWidth;
    ULONG dmPanningHeight;
};

typedef struct _div_t {
    LONG quot;
    LONG rem;
};

typedef struct _dropfilestruct {
    ULONG pFiles;
    struct tagPOINT pt;
    LONG fNC;
    LONG fWide;
};

typedef struct _exception {
    LONG type;
    PCHAR name;
    DOUBLE arg1;
    DOUBLE arg2;
    DOUBLE retval;
};

typedef struct _finddata32_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    ULONG size;
    CHAR name[260];
};

typedef struct _finddata32i64_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    LONG64 size;
    CHAR name[260];
};

typedef struct _finddata64i32_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    CHAR name[260];
};

typedef struct _finddata_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    CHAR name[260];
};

typedef struct _finddatai64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    CHAR name[260];
};

typedef struct _heapinfo {
    PLONG _pentry;
    ULONG64 _size;
    LONG _useflag;
};

typedef struct _iobuf {
    PCHAR _ptr;
    LONG _cnt;
    PCHAR _base;
    LONG _flag;
    LONG _file;
    LONG _charbuf;
    LONG _bufsiz;
    PCHAR _tmpfname;
};

typedef struct _ldiv_t {
    LONG quot;
    LONG rem;
};

typedef struct _nlsversioninfo {
    ULONG dwNLSVersionInfoSize;
    ULONG dwNLSVersion;
    ULONG dwDefinedVersion;
    ULONG dwEffectiveId;
    struct _GUID guidCustomVersion;
};

typedef struct _nlsversioninfoex {
    ULONG dwNLSVersionInfoSize;
    ULONG dwNLSVersion;
    ULONG dwDefinedVersion;
    ULONG dwEffectiveId;
    struct _GUID guidCustomVersion;
};

typedef struct _numberfmtA {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PCHAR lpDecimalSep;
    PCHAR lpThousandSep;
    ULONG NegativeOrder;
};

typedef struct _numberfmtW {
    ULONG NumDigits;
    ULONG LeadingZero;
    ULONG Grouping;
    PWCHAR lpDecimalSep;
    PWCHAR lpThousandSep;
    ULONG NegativeOrder;
};

typedef struct _openasinfo {
    PWCHAR pcszFile;
    PWCHAR pcszClass;
    LONG oaifInFlags;
};

typedef struct _remoteMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    struct _userHMETAFILE *hMF;
};

typedef struct _s__CatchableType {
    ULONG properties;
    struct _TypeDescriptor *pType;
    struct _PMD thisDisplacement;
    LONG sizeOrOffset;
    PVOID copyFunction;
};

typedef struct _s__CatchableTypeArray {
    LONG nCatchableTypes;
    struct _s__CatchableType *arrayOfCatchableTypes[0];
};

typedef struct _s__RTTIBaseClassArray {
    struct _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[0];
};

typedef struct _s__RTTIBaseClassDescriptor2 {
    struct _TypeDescriptor *pTypeDescriptor;
    ULONG numContainedBases;
    struct _PMD where;
    ULONG attributes;
    struct _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

typedef struct _s__RTTIClassHierarchyDescriptor {
    ULONG signature;
    ULONG attributes;
    ULONG numBaseClasses;
    struct _s__RTTIBaseClassArray *pBaseClassArray;
};

typedef struct _s__RTTICompleteObjectLocator2 {
    ULONG signature;
    ULONG offset;
    ULONG cdOffset;
    struct _TypeDescriptor *pTypeDescriptor;
    struct _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
    struct _s__RTTICompleteObjectLocator2 *pSelf;
};

typedef struct _s__ThrowInfo {
    ULONG attributes;
    PVOID pmfnUnwind;
    PLONG pForwardCompat;
    struct _s__CatchableTypeArray *pCatchableTypeArray;
};

typedef struct _shmapheader {
    ULONG dwSize;
    ULONG dwSig;
    ULONG dwSrcId;
    ULONG dwDstId;
};

typedef struct _stat {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stat32 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG st_atime;
    LONG st_mtime;
    LONG st_ctime;
};

typedef struct _stat32i64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG st_atime;
    LONG st_mtime;
    LONG st_ctime;
};

typedef struct _stat64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stat64i32 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _stati64 {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG64 st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct _tagAUTHENTICATEINFO {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _tagBINDINFO {
    ULONG cbSize;
    PWCHAR szExtraInfo;
    struct tagSTGMEDIUM stgmedData;
    ULONG grfBindInfoF;
    ULONG dwBindVerb;
    PWCHAR szCustomVerb;
    ULONG cbstgmedData;
    ULONG dwOptions;
    ULONG dwOptionsFlags;
    ULONG dwCodePage;
    struct _SECURITY_ATTRIBUTES securityAttributes;
    struct _GUID iid;
    struct IUnknown *pUnk;
    ULONG dwReserved;
};

typedef struct _tagCODEBASEHOLD {
    ULONG cbSize;
    PWCHAR szDistUnit;
    PWCHAR szCodeBase;
    ULONG dwVersionMS;
    ULONG dwVersionLS;
    ULONG dwStyle;
};

typedef struct _tagDATAINFO {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
};

typedef struct _tagEDITBALLOONTIP {
    ULONG cbStruct;
    PWCHAR pszTitle;
    PWCHAR pszText;
    LONG ttiIcon;
};

typedef struct _tagHIT_LOGGING_INFO {
    ULONG dwStructSize;
    PCHAR lpszLoggedUrlName;
    struct _SYSTEMTIME StartTime;
    struct _SYSTEMTIME EndTime;
    PCHAR lpszExtendedInfo;
};

typedef struct _tagHardErrorData {
    ULONG dwSize;
    ULONG dwError;
    ULONG dwFlags;
    ULONG uOffsetTitleW;
    ULONG uOffsetTextW;
};

typedef struct _tagOLECMD {
    ULONG cmdID;
    ULONG cmdf;
};

typedef struct _tagOLECMDTEXT {
    ULONG cmdtextf;
    ULONG cwActual;
    ULONG cwBuf;
    WCHAR rgwz[1];
};

typedef struct _tagPROTOCOLDATA {
    ULONG grfFlags;
    ULONG dwState;
    PVOID pData;
    ULONG cbData;
};

typedef struct _tagPROTOCOLFILTERDATA {
    ULONG cbSize;
    struct IInternetProtocolSink *pProtocolSink;
    struct IInternetProtocol *pProtocol;
    struct IUnknown *pUnk;
    ULONG dwFilterFlags;
};

typedef struct _tagPROTOCOL_ARGUMENT {
    PWCHAR szMethod;
    PWCHAR szTargetUrl;
};

typedef struct _tagRemBINDINFO {
    ULONG cbSize;
    PWCHAR szExtraInfo;
    ULONG grfBindInfoF;
    ULONG dwBindVerb;
    PWCHAR szCustomVerb;
    ULONG cbstgmedData;
    ULONG dwOptions;
    ULONG dwOptionsFlags;
    ULONG dwCodePage;
    struct _REMSECURITY_ATTRIBUTES securityAttributes;
    struct _GUID iid;
    struct IUnknown *pUnk;
    ULONG dwReserved;
};

typedef struct _tagSOFTDISTINFO {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG dwAdState;
    PWCHAR szTitle;
    PWCHAR szAbstract;
    PWCHAR szHREF;
    ULONG dwInstalledVersionMS;
    ULONG dwInstalledVersionLS;
    ULONG dwUpdateVersionMS;
    ULONG dwUpdateVersionLS;
    ULONG dwAdvertisedVersionMS;
    ULONG dwAdvertisedVersionLS;
    ULONG dwReserved;
};

typedef struct _tagStartParam {
    struct _GUID iid;
    struct IBindCtx *pIBindCtx;
    struct IUnknown *pItf;
};

typedef struct _tagpropertykey {
    struct _GUID fmtid;
    ULONG pid;
};

typedef struct _userBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    USHORT bmPlanes;
    USHORT bmBitsPixel;
    ULONG cbSize;
    UCHAR pBuffer[1];
};

typedef struct _userCLIPFORMAT {
    LONG fContext;
     __MIDL_IWinTypes_0001;
    union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
};

typedef struct _userFLAG_STGMEDIUM {
    LONG ContextFlags;
    LONG fPassOwnership;
    struct _userSTGMEDIUM Stgmed;
};

typedef struct _userHBITMAP {
    LONG fContext;
     __MIDL_IWinTypes_0007;
    union _userHBITMAP::__MIDL_IWinTypes_0007 u;
};

typedef struct _userHENHMETAFILE {
    LONG fContext;
     __MIDL_IWinTypes_0006;
    union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
};

typedef struct _userHGLOBAL {
    LONG fContext;
     __MIDL_IWinTypes_0003;
    union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
};

typedef struct _userHMETAFILE {
    LONG fContext;
     __MIDL_IWinTypes_0004;
    union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
};

typedef struct _userHMETAFILEPICT {
    LONG fContext;
     __MIDL_IWinTypes_0005;
    union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
};

typedef struct _userHPALETTE {
    LONG fContext;
     __MIDL_IWinTypes_0008;
    union _userHPALETTE::__MIDL_IWinTypes_0008 u;
};

typedef struct _userSTGMEDIUM {
     _STGMEDIUM_UNION;
    struct IUnknown *pUnkForRelease;
};

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION {
    ULONG tymed;
     __MIDL_IAdviseSink_0003;
    union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
};

typedef struct _wfinddata32_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddata32i64_t {
    ULONG attrib;
    LONG time_create;
    LONG time_access;
    LONG time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wfinddata64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wfinddata64i32_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddata_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    ULONG size;
    WCHAR name[260];
};

typedef struct _wfinddatai64_t {
    ULONG attrib;
    LONG64 time_create;
    LONG64 time_access;
    LONG64 time_write;
    LONG64 size;
    WCHAR name[260];
};

typedef struct _wil_details_UsageSubscriptionData {
    ULONG featureId;
    USHORT serviceReportingKind;
};

typedef struct _wireBRECORD {
    ULONG fFlags;
    ULONG clSize;
    struct IRecordInfo *pRecInfo;
    PUCHAR pRecord;
};

typedef struct _wireSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    struct _wireSAFEARRAY_UNION uArrayStructs;
    struct tagSAFEARRAYBOUND rgsabound[1];
};

typedef struct _wireSAFEARRAY_UNION {
    ULONG sfType;
     __MIDL_IOleAutomationTypes_0001;
    union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
};

typedef struct _wireSAFEARR_BRECORD {
    ULONG Size;
    struct _wireBRECORD **aRecord;
};

typedef struct _wireSAFEARR_BSTR {
    ULONG Size;
    struct _FLAGGED_WORD_BLOB **aBstr;
};

typedef struct _wireSAFEARR_DISPATCH {
    ULONG Size;
    struct IDispatch **apDispatch;
};

typedef struct _wireSAFEARR_HAVEIID {
    ULONG Size;
    struct IUnknown **apUnknown;
    struct _GUID iid;
};

typedef struct _wireSAFEARR_UNKNOWN {
    ULONG Size;
    struct IUnknown **apUnknown;
};

typedef struct _wireSAFEARR_VARIANT {
    ULONG Size;
    struct _wireVARIANT **aVariant;
};

typedef struct _wireVARIANT {
    ULONG clSize;
    ULONG rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    LONG64 llVal;
    LONG lVal;
    UCHAR bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    struct _FLAGGED_WORD_BLOB *bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct _wireSAFEARRAY **parray;
    struct _wireBRECORD *brecVal;
    PUCHAR pbVal;
    PSHORT piVal;
    PLONG plVal;
    PLONG64 pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    struct _FLAGGED_WORD_BLOB **pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct _wireSAFEARRAY ***pparray;
    struct _wireVARIANT **pvarVal;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONG64 ullVal;
    LONG intVal;
    ULONG uintVal;
    struct tagDEC decVal;
    struct tagDEC *pdecVal;
    PCHAR pcVal;
    PWCHAR puiVal;
    PULONG pulVal;
    PULONG64 pullVal;
    PLONG pintVal;
    PULONG puintVal;
};

typedef struct _xml_error {
    ULONG _nLine;
    PWCHAR _pchBuf;
    ULONG _cchBuf;
    ULONG _ich;
    PWCHAR _pszFound;
    PWCHAR _pszExpected;
    ULONG _reserved1;
    ULONG _reserved2;
};

typedef struct element_type {
    PWCHAR className;
    PWCHAR apiName;
    PCHAR specialization;
    PLONG counterReference;
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > next;
    VOID ApiData;
    VOID ApiData;
    VOID ~ApiData;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *operator=;
    PVOID __vecDelDtor;
};

typedef struct fd_set {
    ULONG fd_count;
    ULONG64 fd_array[64];
};

typedef struct hostent {
    PCHAR h_name;
    PCHAR *h_aliases;
    SHORT h_addrtype;
    SHORT h_length;
    PCHAR *h_addr_list;
};

typedef struct in_addr {
     <unnamed-type-S_un>;
    union {
         <unnamed-type-S_un_b>;
        struct {
            UCHAR s_b1;
            UCHAR s_b2;
            UCHAR s_b3;
            UCHAR s_b4;
        } S_un_b;
         <unnamed-type-S_un_w>;
        struct {
            USHORT s_w1;
            USHORT s_w2;
        } S_un_w;
        ULONG S_addr;
    } S_un;
};

typedef struct ip_mreq {
    struct in_addr imr_multiaddr;
    struct in_addr imr_interface;
};

typedef struct joyinfo_tag {
    ULONG wXpos;
    ULONG wYpos;
    ULONG wZpos;
    ULONG wButtons;
};

typedef struct joyinfoex_tag {
    ULONG dwSize;
    ULONG dwFlags;
    ULONG dwXpos;
    ULONG dwYpos;
    ULONG dwZpos;
    ULONG dwRpos;
    ULONG dwUpos;
    ULONG dwVpos;
    ULONG dwButtons;
    ULONG dwButtonNumber;
    ULONG dwPOV;
    ULONG dwReserved1;
    ULONG dwReserved2;
};

typedef struct lconv {
};

typedef struct linger {
    USHORT l_onoff;
    USHORT l_linger;
};

typedef struct localeinfo_struct {
    struct threadlocaleinfostruct *locinfo;
    struct threadmbcinfostruct *mbcinfo;
};

typedef struct midievent_tag {
    ULONG dwDeltaTime;
    ULONG dwStreamID;
    ULONG dwEvent;
    ULONG dwParms[1];
};

typedef struct midihdr_tag {
    PCHAR lpData;
    ULONG dwBufferLength;
    ULONG dwBytesRecorded;
    ULONG64 dwUser;
    ULONG dwFlags;
    struct midihdr_tag *lpNext;
    ULONG64 reserved;
    ULONG dwOffset;
    ULONG64 dwReserved[8];
};

typedef struct midiproptempo_tag {
    ULONG cbStruct;
    ULONG dwTempo;
};

typedef struct midiproptimediv_tag {
    ULONG cbStruct;
    ULONG dwTimeDiv;
};

typedef struct midistrmbuffver_tag {
    ULONG dwVersion;
    ULONG dwMid;
    ULONG dwOEMVersion;
};

typedef struct mmtime_tag {
    ULONG wType;
     <unnamed-type-u>;
    union {
        ULONG ms;
        ULONG sample;
        ULONG cb;
        ULONG ticks;
         <unnamed-type-smpte>;
        struct {
            UCHAR hour;
            UCHAR min;
            UCHAR sec;
            UCHAR frame;
            UCHAR fps;
            UCHAR dummy;
            UCHAR pad[2];
        } smpte;
         <unnamed-type-midi>;
        struct {
            ULONG songptrpos;
        } midi;
    } u;
};

typedef struct netent {
    PCHAR n_name;
    PCHAR *n_aliases;
    SHORT n_addrtype;
    ULONG n_net;
};

typedef struct pcmwaveformat_tag {
    struct waveformat_tag wf;
    USHORT wBitsPerSample;
};

typedef struct protoent {
    PCHAR p_name;
    PCHAR *p_aliases;
    SHORT p_proto;
};

typedef struct provider_info {
    PULONG pi_R0_1val;
    PULONG pi_R0_allvals;
    PULONG pi_R3_1val;
    PULONG pi_R3_allvals;
    ULONG pi_flags;
    PVOID pi_key_context;
};

typedef struct pvalueA {
    PCHAR pv_valuename;
    LONG pv_valuelen;
    PVOID pv_value_context;
    ULONG pv_type;
};

typedef struct pvalueW {
    PWCHAR pv_valuename;
    LONG pv_valuelen;
    PVOID pv_value_context;
    ULONG pv_type;
};

typedef struct servent {
    PCHAR s_name;
    PCHAR *s_aliases;
    PCHAR s_proto;
    SHORT s_port;
};

typedef struct sockaddr {
    USHORT sa_family;
    CHAR sa_data[14];
};

typedef struct sockaddr_in {
    SHORT sin_family;
    USHORT sin_port;
    struct in_addr sin_addr;
    CHAR sin_zero[8];
};

typedef struct sockproto {
    USHORT sp_family;
    USHORT sp_protocol;
};

typedef struct stat {
    ULONG st_dev;
    USHORT st_ino;
    USHORT st_mode;
    SHORT st_nlink;
    SHORT st_uid;
    SHORT st_gid;
    ULONG st_rdev;
    LONG st_size;
    LONG64 st_atime;
    LONG64 st_mtime;
    LONG64 st_ctime;
};

typedef struct std::nothrow_t {
};

typedef struct tMIXERCONTROLDETAILS {
    ULONG cbStruct;
    ULONG dwControlID;
    ULONG cChannels;
    struct HWND__ *hwndOwner;
    ULONG cMultipleItems;
    ULONG cbDetails;
    PVOID paDetails;
};

typedef struct tMIXERCONTROLDETAILS_BOOLEAN {
    LONG fValue;
};

typedef struct tMIXERCONTROLDETAILS_SIGNED {
    LONG lValue;
};

typedef struct tMIXERCONTROLDETAILS_UNSIGNED {
    ULONG dwValue;
};

typedef struct tWAVEFORMATEX {
    USHORT wFormatTag;
    USHORT nChannels;
    ULONG nSamplesPerSec;
    ULONG nAvgBytesPerSec;
    USHORT nBlockAlign;
    USHORT wBitsPerSample;
    USHORT cbSize;
};

typedef struct tagABORTPATH {
    struct tagEMR emr;
};

typedef struct tagACCEL {
    UCHAR fVirt;
    USHORT key;
    USHORT cmd;
};

typedef struct tagACCESSTIMEOUT {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iTimeOutMSec;
};

typedef struct tagACTCTXA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpSource;
    USHORT wProcessorArchitecture;
    USHORT wLangId;
    PCHAR lpAssemblyDirectory;
    PCHAR lpResourceName;
    PCHAR lpApplicationName;
    struct HINSTANCE__ *hModule;
};

typedef struct tagACTCTXW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpSource;
    USHORT wProcessorArchitecture;
    USHORT wLangId;
    PWCHAR lpAssemblyDirectory;
    PWCHAR lpResourceName;
    PWCHAR lpApplicationName;
    struct HINSTANCE__ *hModule;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    PVOID hActCtx;
    ULONG ulAssemblyRosterIndex;
    ULONG ulFlags;
    struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    PVOID hActCtx;
    ULONG ulAssemblyRosterIndex;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    PVOID lpInformation;
    PVOID lpSectionBase;
    ULONG ulSectionLength;
    PVOID lpSectionGlobalDataBase;
    ULONG ulSectionGlobalDataLength;
};

typedef struct tagALTTABINFO {
    ULONG cbSize;
    LONG cItems;
    LONG cColumns;
    LONG cRows;
    LONG iColFocus;
    LONG iRowFocus;
    LONG cxItem;
    LONG cyItem;
    struct tagPOINT ptStart;
};

typedef struct tagANIMATIONINFO {
    ULONG cbSize;
    LONG iMinAnimate;
};

typedef struct tagARRAYDESC {
    struct tagTYPEDESC tdescElem;
    USHORT cDims;
    struct tagSAFEARRAYBOUND rgbounds[1];
};

typedef struct tagAUDIODESCRIPTION {
    ULONG cbSize;
    LONG Enabled;
    ULONG Locale;
};

typedef struct tagAUXCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    USHORT wTechnology;
    USHORT wReserved1;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagAUXCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    USHORT wTechnology;
    USHORT wReserved1;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagAUXCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    USHORT wTechnology;
    USHORT wReserved1;
    ULONG dwSupport;
};

typedef struct tagAUXCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    USHORT wTechnology;
    USHORT wReserved1;
    ULONG dwSupport;
};

typedef struct tagAXESLISTA {
    ULONG axlReserved;
    ULONG axlNumAxes;
    struct tagAXISINFOA axlAxisInfo[16];
};

typedef struct tagAXESLISTW {
    ULONG axlReserved;
    ULONG axlNumAxes;
    struct tagAXISINFOW axlAxisInfo[16];
};

typedef struct tagAXISINFOA {
    LONG axMinValue;
    LONG axMaxValue;
    UCHAR axAxisName[16];
};

typedef struct tagAXISINFOW {
    LONG axMinValue;
    LONG axMaxValue;
    WCHAR axAxisName[16];
};

typedef struct tagAspectInfo {
    ULONG cb;
    ULONG dwFlags;
};

typedef struct tagAssocApp {
    ULONG cbSize;
    PWCHAR pszFriendlyAppName;
    struct tagAssocShell *pShellKey;
};

typedef struct tagAssocDDEExec {
    PWCHAR pszDDEExec;
    PWCHAR pszApplication;
    PWCHAR pszTopic;
    LONG fNoActivateHandler;
};

typedef struct tagAssocProgid {
    ULONG cbSize;
    PWCHAR pszProgid;
    PWCHAR pszFriendlyDocName;
    PWCHAR pszDefaultIcon;
    struct tagAssocShell *pShellKey;
    PWCHAR pszExtensions;
};

typedef struct tagAssocShell {
    struct tagAssocVerb *rgVerbs;
    ULONG cVerbs;
    ULONG iDefaultVerb;
};

typedef struct tagAssocVerb {
    PWCHAR pszVerb;
    PWCHAR pszTitle;
    PWCHAR pszFriendlyAppName;
    PWCHAR pszApplication;
    PWCHAR pszParams;
    struct tagAssocDDEExec *pDDEExec;
};

typedef struct tagBANDSITEINFO {
    ULONG dwMask;
    ULONG dwState;
    ULONG dwStyle;
};

typedef struct tagBIND_OPTS {
    ULONG cbStruct;
    ULONG grfFlags;
    ULONG grfMode;
    ULONG dwTickCountDeadline;
};

typedef struct tagBIND_OPTS2 {
    struct tagBIND_OPTS tagBIND_OPTS;
    ULONG dwTrackFlags;
    ULONG dwClassContext;
    ULONG locale;
    struct _COSERVERINFO *pServerInfo;
};

typedef struct tagBIND_OPTS3 {
    struct tagBIND_OPTS2 tagBIND_OPTS2;
    struct HWND__ *hwnd;
};

typedef struct tagBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    USHORT bmPlanes;
    USHORT bmBitsPixel;
    PVOID bmBits;
};

typedef struct tagBITMAPCOREHEADER {
    ULONG bcSize;
    USHORT bcWidth;
    USHORT bcHeight;
    USHORT bcPlanes;
    USHORT bcBitCount;
};

typedef struct tagBITMAPCOREINFO {
    struct tagBITMAPCOREHEADER bmciHeader;
    struct tagRGBTRIPLE bmciColors[1];
};

typedef struct tagBITMAPFILEHEADER {
    USHORT bfType;
    ULONG bfSize;
    USHORT bfReserved1;
    USHORT bfReserved2;
    ULONG bfOffBits;
};

typedef struct tagBITMAPINFO {
    struct tagBITMAPINFOHEADER bmiHeader;
    struct tagRGBQUAD bmiColors[1];
};

typedef struct tagBITMAPINFOHEADER {
    ULONG biSize;
    LONG biWidth;
    LONG biHeight;
    USHORT biPlanes;
    USHORT biBitCount;
    ULONG biCompression;
    ULONG biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    ULONG biClrUsed;
    ULONG biClrImportant;
};

typedef struct tagBLOB {
    ULONG cbSize;
    PUCHAR pBlobData;
};

typedef struct tagBSTRBLOB {
    ULONG cbSize;
    PUCHAR pData;
};

typedef struct tagBUTTON_SPLITINFO {
    ULONG mask;
    struct _IMAGELIST *himlGlyph;
    ULONG uSplitStyle;
    struct tagSIZE size;
};

typedef struct tagBinaryParam {
    PVOID Buffer;
    SHORT Size;
};

typedef struct tagCABOOL {
    ULONG cElems;
    PSHORT pElems;
};

typedef struct tagCABSTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCABSTRBLOB {
    ULONG cElems;
    struct tagBSTRBLOB *pElems;
};

typedef struct tagCAC {
    ULONG cElems;
    PCHAR pElems;
};

typedef struct tagCACLIPDATA {
    ULONG cElems;
    struct tagCLIPDATA *pElems;
};

typedef struct tagCACLSID {
    ULONG cElems;
    struct _GUID *pElems;
};

typedef struct tagCACY {
    ULONG cElems;
    union tagCY *pElems;
};

typedef struct tagCADATE {
    ULONG cElems;
    DOUBLE *pElems;
};

typedef struct tagCADBL {
    ULONG cElems;
    DOUBLE *pElems;
};

typedef struct tagCADWORD {
    ULONG cElems;
    PULONG pElems;
};

typedef struct tagCAFILETIME {
    ULONG cElems;
    struct _FILETIME *pElems;
};

typedef struct tagCAFLT {
    ULONG cElems;
    FLOAT *pElems;
};

typedef struct tagCAH {
    ULONG cElems;
    union _LARGE_INTEGER *pElems;
};

typedef struct tagCAI {
    ULONG cElems;
    PSHORT pElems;
};

typedef struct tagCAL {
    ULONG cElems;
    PLONG pElems;
};

typedef struct tagCALPOLESTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCALPSTR {
    ULONG cElems;
    PCHAR *pElems;
};

typedef struct tagCALPWSTR {
    ULONG cElems;
    PWCHAR *pElems;
};

typedef struct tagCANDIDATEFORM {
    ULONG dwIndex;
    ULONG dwStyle;
    struct tagPOINT ptCurrentPos;
    struct tagRECT rcArea;
};

typedef struct tagCANDIDATELIST {
    ULONG dwSize;
    ULONG dwStyle;
    ULONG dwCount;
    ULONG dwSelection;
    ULONG dwPageStart;
    ULONG dwPageSize;
    ULONG dwOffset[1];
};

typedef struct tagCANONICALMSG {
    LONG64 hwnd;
    ULONG message;
    LONG64 wParam;
    LONG64 lParam;
    ULONG time;
    struct tagPOINT pt;
};

typedef struct tagCANONICALQMSGENVELOPE {
    ULONG threadId;
    struct tagCANONICALMSG msg;
    LONG testSyncFlag;
    struct tagInputRoutingInfo routingInfo;
};

typedef struct tagCAPROPVARIANT {
    ULONG cElems;
    struct tagPROPVARIANT *pElems;
};

typedef struct tagCASCODE {
    ULONG cElems;
    PLONG pElems;
};

typedef struct tagCATEGORYINFO {
    struct _GUID catid;
    ULONG lcid;
    WCHAR szDescription[128];
};

typedef struct tagCAUB {
    ULONG cElems;
    PUCHAR pElems;
};

typedef struct tagCAUH {
    ULONG cElems;
    union _ULARGE_INTEGER *pElems;
};

typedef struct tagCAUI {
    ULONG cElems;
    PWCHAR pElems;
};

typedef struct tagCAUL {
    ULONG cElems;
    PULONG pElems;
};

typedef struct tagCAUUID {
    ULONG cElems;
    struct _GUID *pElems;
};

typedef struct tagCBTACTIVATESTRUCT {
    LONG fMouse;
    struct HWND__ *hWndActive;
};

typedef struct tagCBT_CREATEWNDA {
    struct tagCREATESTRUCTA *lpcs;
    struct HWND__ *hwndInsertAfter;
};

typedef struct tagCBT_CREATEWNDW {
    struct tagCREATESTRUCTW *lpcs;
    struct HWND__ *hwndInsertAfter;
};

typedef struct tagCHANGEFILTERSTRUCT {
    ULONG cbSize;
    ULONG ExtStatus;
};

typedef struct tagCHARSETINFO {
    ULONG ciCharset;
    ULONG ciACP;
    struct tagFONTSIGNATURE fs;
};

typedef struct tagCHOOSECOLORA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HWND__ *hInstance;
    ULONG rgbResult;
    PULONG lpCustColors;
    ULONG Flags;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PCHAR lpTemplateName;
};

typedef struct tagCHOOSECOLORW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HWND__ *hInstance;
    ULONG rgbResult;
    PULONG lpCustColors;
    ULONG Flags;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PWCHAR lpTemplateName;
};

typedef struct tagCHOOSEFONTA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HDC__ *hDC;
    struct tagLOGFONTA *lpLogFont;
    LONG iPointSize;
    ULONG Flags;
    ULONG rgbColors;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PCHAR lpTemplateName;
    struct HINSTANCE__ *hInstance;
    PCHAR lpszStyle;
    USHORT nFontType;
    USHORT ___MISSING_ALIGNMENT__;
    LONG nSizeMin;
    LONG nSizeMax;
};

typedef struct tagCHOOSEFONTW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HDC__ *hDC;
    struct tagLOGFONTW *lpLogFont;
    LONG iPointSize;
    ULONG Flags;
    ULONG rgbColors;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PWCHAR lpTemplateName;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpszStyle;
    USHORT nFontType;
    USHORT ___MISSING_ALIGNMENT__;
    LONG nSizeMin;
    LONG nSizeMax;
};

typedef struct tagCIEXYZ {
    LONG ciexyzX;
    LONG ciexyzY;
    LONG ciexyzZ;
};

typedef struct tagCLEANLOCALSTORAGE {
    struct IUnknown *pInterface;
    PVOID pStorage;
    ULONG flags;
};

typedef struct tagCLIENTCREATESTRUCT {
    PVOID hWindowMenu;
    ULONG idFirstChild;
};

typedef struct tagCLIPDATA {
    ULONG cbSize;
    LONG ulClipFmt;
    PUCHAR pClipData;
};

typedef struct tagCLOSEST_INTERACTIVE_BOUNDS_MESSAGE_ARGS {
    struct tagPOINT PointerPosition;
    struct tagRECT SearchBounds;
    struct tagRECT ClosestInteractiveBounds;
};

typedef struct tagCOLORADJUSTMENT {
    USHORT caSize;
    USHORT caFlags;
    USHORT caIlluminantIndex;
    USHORT caRedGamma;
    USHORT caGreenGamma;
    USHORT caBlueGamma;
    USHORT caReferenceBlack;
    USHORT caReferenceWhite;
    SHORT caContrast;
    SHORT caBrightness;
    SHORT caColorfulness;
    SHORT caRedGreenTint;
};

typedef struct tagCOLORCORRECTPALETTE {
    struct tagEMR emr;
    ULONG ihPalette;
    ULONG nFirstEntry;
    ULONG nPalEntries;
    ULONG nReserved;
};

typedef struct tagCOLORMATCHTOTARGET {
    struct tagEMR emr;
    ULONG dwAction;
    ULONG dwFlags;
    ULONG cbName;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagCOLORSCHEME {
    ULONG dwSize;
    ULONG clrBtnHighlight;
    ULONG clrBtnShadow;
};

typedef struct tagCOMBOBOXEXITEMA {
    ULONG mask;
    LONG64 iItem;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG iOverlay;
    LONG iIndent;
    LONG64 lParam;
};

typedef struct tagCOMBOBOXEXITEMW {
    ULONG mask;
    LONG64 iItem;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG iOverlay;
    LONG iIndent;
    LONG64 lParam;
};

typedef struct tagCOMBOBOXINFO {
    ULONG cbSize;
    struct tagRECT rcItem;
    struct tagRECT rcButton;
    ULONG stateButton;
    struct HWND__ *hwndCombo;
    struct HWND__ *hwndItem;
    struct HWND__ *hwndList;
};

typedef struct tagCOMPAREITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    struct HWND__ *hwndItem;
    ULONG itemID1;
    ULONG64 itemData1;
    ULONG itemID2;
    ULONG64 itemData2;
    ULONG dwLocaleId;
};

typedef struct tagCOMPOSITIONFORM {
    ULONG dwStyle;
    struct tagPOINT ptCurrentPos;
    struct tagRECT rcArea;
};

typedef struct tagCONNECTDATA {
    struct IUnknown *pUnk;
    ULONG dwCookie;
};

typedef struct tagCONTROLINFO {
    ULONG cb;
    struct HACCEL__ *hAccel;
    USHORT cAccel;
    ULONG dwFlags;
};

typedef struct tagCONVCONTEXT {
    ULONG cb;
    ULONG wFlags;
    ULONG wCountryID;
    LONG iCodePage;
    ULONG dwLangID;
    ULONG dwSecurity;
    struct _SECURITY_QUALITY_OF_SERVICE qos;
};

typedef struct tagCONVINFO {
    ULONG cb;
    ULONG64 hUser;
    struct HCONV__ *hConvPartner;
    struct HSZ__ *hszSvcPartner;
    struct HSZ__ *hszServiceReq;
    struct HSZ__ *hszTopic;
    struct HSZ__ *hszItem;
    ULONG wFmt;
    ULONG wType;
    ULONG wStatus;
    ULONG wConvst;
    ULONG wLastError;
    struct HCONVLIST__ *hConvList;
    struct tagCONVCONTEXT ConvCtxt;
    struct HWND__ *hwnd;
    struct HWND__ *hwndPartner;
};

typedef struct tagCOPYDATASTRUCT {
    ULONG64 dwData;
    ULONG cbData;
    PVOID lpData;
};

typedef struct tagCREATESTRUCTA {
    PVOID lpCreateParams;
    struct HINSTANCE__ *hInstance;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndParent;
    LONG cy;
    LONG cx;
    LONG y;
    LONG x;
    LONG style;
    PCHAR lpszName;
    PCHAR lpszClass;
    ULONG dwExStyle;
};

typedef struct tagCREATESTRUCTW {
    PVOID lpCreateParams;
    struct HINSTANCE__ *hInstance;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndParent;
    LONG cy;
    LONG cx;
    LONG y;
    LONG x;
    LONG style;
    PWCHAR lpszName;
    PWCHAR lpszClass;
    ULONG dwExStyle;
};

typedef struct tagCRGB {
    UCHAR bRed;
    UCHAR bGreen;
    UCHAR bBlue;
    UCHAR bExtra;
};

typedef struct tagCSPLATFORM {
    ULONG dwPlatformId;
    ULONG dwVersionHi;
    ULONG dwVersionLo;
    ULONG dwProcessorArch;
};

typedef struct tagCURSORINFO {
    ULONG cbSize;
    ULONG flags;
    struct HICON__ *hCursor;
    struct tagPOINT ptScreenPos;
};

typedef struct tagCURSORSHAPE {
    LONG xHotSpot;
    LONG yHotSpot;
    LONG cx;
    LONG cy;
    LONG cbWidth;
    UCHAR Planes;
    UCHAR BitsPixel;
};

typedef struct tagCUSTDATA {
    ULONG cCustData;
    struct tagCUSTDATAITEM *prgCustData;
};

typedef struct tagCUSTDATAITEM {
    struct _GUID guid;
    struct tagVARIANT varValue;
};

typedef struct tagCUSTOM_FLICK {
    struct _GUID guid;
    ULONG modifierKeys;
    ULONG keyCode;
    ULONG nameSize;
    WCHAR friendlyName[260];
};

typedef struct tagCWPRETSTRUCT {
    LONG64 lResult;
    LONG64 lParam;
    ULONG64 wParam;
    ULONG message;
    struct HWND__ *hwnd;
};

typedef struct tagCWPSTRUCT {
    LONG64 lParam;
    ULONG64 wParam;
    ULONG message;
    struct HWND__ *hwnd;
};

typedef struct tagCreateWindowIndirectInfo {
    ULONG cbSize;
    PWCHAR pwszClassName;
    PWCHAR pwszWindowName;
    ULONG dwStyle;
    ULONG dwExStyle;
    LONG X;
    LONG Y;
    LONG nWidth;
    LONG nHeight;
    struct HWND__ *hWndParent;
    struct HMENU__ *hMenu;
    struct HINSTANCE__ *hInstance;
    PVOID pvParam;
    ULONG NtDdiVersion;
    enum ZBID zbid;
};

typedef struct tagDATABLOCKHEADER {
    ULONG cbSize;
    ULONG dwSignature;
};

typedef struct tagDATETIMEPICKERINFO {
    ULONG cbSize;
    struct tagRECT rcCheck;
    ULONG stateCheck;
    struct tagRECT rcButton;
    ULONG stateButton;
    struct HWND__ *hwndEdit;
    struct HWND__ *hwndUD;
    struct HWND__ *hwndDropDown;
};

typedef struct tagDDEML_MSG_HOOK_DATA {
    ULONG64 uiLo;
    ULONG64 uiHi;
    ULONG cbData;
    ULONG Data[8];
};

typedef struct tagDEBUGHOOKINFO {
    ULONG idThread;
    ULONG idThreadInstaller;
    LONG64 lParam;
    ULONG64 wParam;
    LONG code;
};

typedef struct tagDEC {
    USHORT wReserved;
    UCHAR scale;
    UCHAR sign;
    USHORT signscale;
    ULONG Hi32;
    ULONG Lo32;
    ULONG Mid32;
    ULONG64 Lo64;
};

typedef struct tagDELETEITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    struct HWND__ *hwndItem;
    ULONG64 itemData;
};

typedef struct tagDESIGNVECTOR {
    ULONG dvReserved;
    ULONG dvNumAxes;
    LONG dvValues[16];
};

typedef struct tagDEVNAMES {
    USHORT wDriverOffset;
    USHORT wDeviceOffset;
    USHORT wOutputOffset;
    USHORT wDefault;
};

typedef struct tagDIBSECTION {
    struct tagBITMAP dsBm;
    struct tagBITMAPINFOHEADER dsBmih;
    ULONG dsBitfields[3];
    PVOID dshSection;
    ULONG dsOffset;
};

typedef struct tagDIGITIZER_CONTACT_INFO {
    ULONG dwPointerID;
    struct tagPOINT pt;
    struct tagRECT rc;
    enum tagDIGITIZER_CONTACT_SOURCE dcs;
    enum tagDIGITIZER_CONTACT_TYPE dct;
    ULONG dwFlags;
};

typedef struct tagDISPPARAMS {
    struct tagVARIANT *rgvarg;
    PLONG rgdispidNamedArgs;
    ULONG cArgs;
    ULONG cNamedArgs;
};

typedef struct tagDITCALLBACKSTRUCT {
    ULONG dwType;
    struct HMONITOR__ *hMonitor;
    struct tagPOINT ptScreen;
    struct HWND__ *hWnd;
    PVOID hInputSink;
    PVOID *prghInputSinks;
    ULONG ucInputSinks;
    ULONG uPointerId;
    struct tagINPUT_TRANSFORM xForm;
    ULONG hHitTestedInteraction;
    struct tagMsgRoutingInfo routingInfo;
    LONG bRouteToMT : 1;
    enum DIT_HITTESTATTRIBUTES hitTestAttributes;
    ULONG uHitTestFilter;
    ULONG uVisualStyle;
    ULONG dwWorkspaceId;
    struct _LUID inputSpaceId;
};

typedef struct tagDLGTEMPLATEEX {
    USHORT wDlgVer;
    USHORT wSignature;
    ULONG dwHelpID;
    ULONG dwExStyle;
    ULONG dwStyle;
    USHORT cDlgItems;
    SHORT x;
    SHORT y;
    SHORT cx;
    SHORT cy;
};

typedef struct tagDMANIPHOOK {
    ULONG cbSize;
    PLONG pfnBeforeOWP;
    PVOID pfnAfterOWP;
    struct tagMSGMASK mm;
};

typedef struct tagDPIINFO {
    DOUBLE dpiScalingFactor;
    ULONG currentMonitorDpi;
    ULONG captionBarDpi;
    struct tagPOINT ptLogicalOrigin;
    struct tagPOINT ptPhysicalOrigin;
};

typedef struct tagDRAGLISTINFO {
    ULONG uNotification;
    struct HWND__ *hWnd;
    struct tagPOINT ptCursor;
};

typedef struct tagDRAWITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    ULONG itemAction;
    ULONG itemState;
    struct HWND__ *hwndItem;
    struct HDC__ *hDC;
    struct tagRECT rcItem;
    ULONG64 itemData;
};

typedef struct tagDRAWTEXTPARAMS {
    ULONG cbSize;
    LONG iTabLength;
    LONG iLeftMargin;
    LONG iRightMargin;
    ULONG uiLengthDrawn;
};

typedef struct tagDROPSTRUCT {
    struct HWND__ *hwndSource;
    struct HWND__ *hwndSink;
    ULONG wFmt;
    ULONG64 dwData;
    struct tagPOINT ptDrop;
    ULONG dwControlData;
};

typedef struct tagDRVCONFIGINFO {
    ULONG dwDCISize;
    PWCHAR lpszDCISectionName;
    PWCHAR lpszDCIAliasName;
};

typedef struct tagDVTARGETDEVICE {
    ULONG tdSize;
    USHORT tdDriverNameOffset;
    USHORT tdDeviceNameOffset;
    USHORT tdPortNameOffset;
    USHORT tdExtDevmodeOffset;
    UCHAR tdData[1];
};

typedef struct tagDWMSURFACEDATA {
    enum _HLSURF_REDIRECTIONSTYLE RedirStyle;
    ULONG nWidth;
    ULONG nHeight;
    ULONG nFormat;
    ULONG cbStride;
    ULONG64 PhysSurfaceId;
    struct _LUID AdapterLuid;
    PVOID hSection;
    PVOID hDxSharedSurface;
};

typedef struct tagEDGY_LISTENER {
    PVOID hDevice;
    struct HWND__ *hwndListener;
    enum tagEDGY_LOCATION location;
    PVOID pReserved;
};

typedef struct tagELEMDESC {
    struct tagTYPEDESC tdesc;
    struct tagIDLDESC idldesc;
    struct tagPARAMDESC paramdesc;
};

typedef struct tagEMR {
    ULONG iType;
    ULONG nSize;
};

typedef struct tagEMRALPHABLEND {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRANGLEARC {
    struct tagEMR emr;
    struct _POINTL ptlCenter;
    ULONG nRadius;
    FLOAT eStartAngle;
    FLOAT eSweepAngle;
};

typedef struct tagEMRARC {
    struct tagEMR emr;
    struct _RECTL rclBox;
    struct _POINTL ptlStart;
    struct _POINTL ptlEnd;
};

typedef struct tagEMRBITBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
};

typedef struct tagEMRCREATEBRUSHINDIRECT {
    struct tagEMR emr;
    ULONG ihBrush;
    struct tagLOGBRUSH32 lb;
};

typedef struct tagEMRCREATECOLORSPACE {
    struct tagEMR emr;
    ULONG ihCS;
    struct tagLOGCOLORSPACEA lcs;
};

typedef struct tagEMRCREATECOLORSPACEW {
    struct tagEMR emr;
    ULONG ihCS;
    struct tagLOGCOLORSPACEW lcs;
    ULONG dwFlags;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT {
    struct tagEMR emr;
    ULONG ihBrush;
    ULONG iUsage;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
};

typedef struct tagEMRCREATEMONOBRUSH {
    struct tagEMR emr;
    ULONG ihBrush;
    ULONG iUsage;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
};

typedef struct tagEMRCREATEPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
    struct tagLOGPALETTE lgpl;
};

typedef struct tagEMRCREATEPEN {
    struct tagEMR emr;
    ULONG ihPen;
    struct tagLOGPEN lopn;
};

typedef struct tagEMRELLIPSE {
    struct tagEMR emr;
    struct _RECTL rclBox;
};

typedef struct tagEMREOF {
    struct tagEMR emr;
    ULONG nPalEntries;
    ULONG offPalEntries;
    ULONG nSizeLast;
};

typedef struct tagEMREXCLUDECLIPRECT {
    struct tagEMR emr;
    struct _RECTL rclClip;
};

typedef struct tagEMREXTCREATEFONTINDIRECTW {
    struct tagEMR emr;
    ULONG ihFont;
    struct tagEXTLOGFONTW elfw;
};

typedef struct tagEMREXTCREATEPEN {
    struct tagEMR emr;
    ULONG ihPen;
    ULONG offBmi;
    ULONG cbBmi;
    ULONG offBits;
    ULONG cbBits;
    struct tagEXTLOGPEN32 elp;
};

typedef struct tagEMREXTESCAPE {
    struct tagEMR emr;
    LONG iEscape;
    LONG cbEscData;
    UCHAR EscData[1];
};

typedef struct tagEMREXTFLOODFILL {
    struct tagEMR emr;
    struct _POINTL ptlStart;
    ULONG crColor;
    ULONG iMode;
};

typedef struct tagEMREXTSELECTCLIPRGN {
    struct tagEMR emr;
    ULONG cbRgnData;
    ULONG iMode;
    UCHAR RgnData[1];
};

typedef struct tagEMREXTTEXTOUTA {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    struct tagEMRTEXT emrtext;
};

typedef struct tagEMRFILLPATH {
    struct tagEMR emr;
    struct _RECTL rclBounds;
};

typedef struct tagEMRFILLRGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    ULONG ihBrush;
    UCHAR RgnData[1];
};

typedef struct tagEMRFORMAT {
    ULONG dSignature;
    ULONG nVersion;
    ULONG cbData;
    ULONG offData;
};

typedef struct tagEMRFRAMERGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    ULONG ihBrush;
    struct tagSIZE szlStroke;
    UCHAR RgnData[1];
};

typedef struct tagEMRGDICOMMENT {
    struct tagEMR emr;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGLSBOUNDEDRECORD {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGLSRECORD {
    struct tagEMR emr;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRGRADIENTFILL {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nVer;
    ULONG nTri;
    ULONG ulMode;
    struct _TRIVERTEX Ver[1];
};

typedef struct tagEMRINVERTRGN {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cbRgnData;
    UCHAR RgnData[1];
};

typedef struct tagEMRLINETO {
    struct tagEMR emr;
    struct _POINTL ptl;
};

typedef struct tagEMRMASKBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG xMask;
    LONG yMask;
    ULONG iUsageMask;
    ULONG offBmiMask;
    ULONG cbBmiMask;
    ULONG offBitsMask;
    ULONG cbBitsMask;
};

typedef struct tagEMRMODIFYWORLDTRANSFORM {
    struct tagEMR emr;
    struct tagXFORM xform;
    ULONG iMode;
};

typedef struct tagEMRNAMEDESCAPE {
    struct tagEMR emr;
    LONG iEscape;
    LONG cbDriver;
    LONG cbEscData;
    UCHAR EscData[1];
};

typedef struct tagEMROFFSETCLIPRGN {
    struct tagEMR emr;
    struct _POINTL ptlOffset;
};

typedef struct tagEMRPIXELFORMAT {
    struct tagEMR emr;
    struct tagPIXELFORMATDESCRIPTOR pfd;
};

typedef struct tagEMRPLGBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    struct _POINTL aptlDest[3];
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG xMask;
    LONG yMask;
    ULONG iUsageMask;
    ULONG offBmiMask;
    ULONG cbBmiMask;
    ULONG offBitsMask;
    ULONG cbBitsMask;
};

typedef struct tagEMRPOLYDRAW {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cptl;
    struct _POINTL aptl[1];
    UCHAR abTypes[1];
};

typedef struct tagEMRPOLYDRAW16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cpts;
    struct tagPOINTS apts[1];
    UCHAR abTypes[1];
};

typedef struct tagEMRPOLYLINE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cptl;
    struct _POINTL aptl[1];
};

typedef struct tagEMRPOLYLINE16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG cpts;
    struct tagPOINTS apts[1];
};

typedef struct tagEMRPOLYPOLYLINE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nPolys;
    ULONG cptl;
    ULONG aPolyCounts[1];
    struct _POINTL aptl[1];
};

typedef struct tagEMRPOLYPOLYLINE16 {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG nPolys;
    ULONG cpts;
    ULONG aPolyCounts[1];
    struct tagPOINTS apts[1];
};

typedef struct tagEMRPOLYTEXTOUTA {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    ULONG iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    LONG cStrings;
    struct tagEMRTEXT aemrtext[1];
};

typedef struct tagEMRRESIZEPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
    ULONG cEntries;
};

typedef struct tagEMRRESTOREDC {
    struct tagEMR emr;
    LONG iRelative;
};

typedef struct tagEMRROUNDRECT {
    struct tagEMR emr;
    struct _RECTL rclBox;
    struct tagSIZE szlCorner;
};

typedef struct tagEMRSCALEVIEWPORTEXTEX {
    struct tagEMR emr;
    LONG xNum;
    LONG xDenom;
    LONG yNum;
    LONG yDenom;
};

typedef struct tagEMRSELECTCLIPPATH {
    struct tagEMR emr;
    ULONG iMode;
};

typedef struct tagEMRSELECTOBJECT {
    struct tagEMR emr;
    ULONG ihObject;
};

typedef struct tagEMRSELECTPALETTE {
    struct tagEMR emr;
    ULONG ihPal;
};

typedef struct tagEMRSETARCDIRECTION {
    struct tagEMR emr;
    ULONG iArcDirection;
};

typedef struct tagEMRSETCOLORADJUSTMENT {
    struct tagEMR emr;
    struct tagCOLORADJUSTMENT ColorAdjustment;
};

typedef struct tagEMRSETCOLORSPACE {
    struct tagEMR emr;
    ULONG ihCS;
};

typedef struct tagEMRSETDIBITSTODEVICE {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    ULONG iUsageSrc;
    ULONG iStartScan;
    ULONG cScans;
};

typedef struct tagEMRSETICMPROFILE {
    struct tagEMR emr;
    ULONG dwFlags;
    ULONG cbName;
    ULONG cbData;
    UCHAR Data[1];
};

typedef struct tagEMRSETMAPPERFLAGS {
    struct tagEMR emr;
    ULONG dwFlags;
};

typedef struct tagEMRSETMITERLIMIT {
    struct tagEMR emr;
    FLOAT eMiterLimit;
};

typedef struct tagEMRSETPALETTEENTRIES {
    struct tagEMR emr;
    ULONG ihPal;
    ULONG iStart;
    ULONG cEntries;
    struct tagPALETTEENTRY aPalEntries[1];
};

typedef struct tagEMRSETPIXELV {
    struct tagEMR emr;
    struct _POINTL ptlPixel;
    ULONG crColor;
};

typedef struct tagEMRSETTEXTCOLOR {
    struct tagEMR emr;
    ULONG crColor;
};

typedef struct tagEMRSETVIEWPORTEXTEX {
    struct tagEMR emr;
    struct tagSIZE szlExtent;
};

typedef struct tagEMRSETVIEWPORTORGEX {
    struct tagEMR emr;
    struct _POINTL ptlOrigin;
};

typedef struct tagEMRSETWORLDTRANSFORM {
    struct tagEMR emr;
    struct tagXFORM xform;
};

typedef struct tagEMRSTRETCHBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRSTRETCHDIBITS {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    ULONG iUsageSrc;
    ULONG dwRop;
    LONG cxDest;
    LONG cyDest;
};

typedef struct tagEMRTEXT {
    struct _POINTL ptlReference;
    ULONG nChars;
    ULONG offString;
    ULONG fOptions;
    struct _RECTL rcl;
    ULONG offDx;
};

typedef struct tagEMRTRANSPARENTBLT {
    struct tagEMR emr;
    struct _RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    ULONG dwRop;
    LONG xSrc;
    LONG ySrc;
    struct tagXFORM xformSrc;
    ULONG crBkColorSrc;
    ULONG iUsageSrc;
    ULONG offBmiSrc;
    ULONG cbBmiSrc;
    ULONG offBitsSrc;
    ULONG cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagENDPOINTINFORMATION {
    struct HWND__ *hwndEndpoint;
    struct tagInputRoutingInfo routingInfo;
};

typedef struct tagENHMETAHEADER {
    ULONG iType;
    ULONG nSize;
    struct _RECTL rclBounds;
    struct _RECTL rclFrame;
    ULONG dSignature;
    ULONG nVersion;
    ULONG nBytes;
    ULONG nRecords;
    USHORT nHandles;
    USHORT sReserved;
    ULONG nDescription;
    ULONG offDescription;
    ULONG nPalEntries;
    struct tagSIZE szlDevice;
    struct tagSIZE szlMillimeters;
    ULONG cbPixelFormat;
    ULONG offPixelFormat;
    ULONG bOpenGL;
    struct tagSIZE szlMicrometers;
};

typedef struct tagENHMETARECORD {
    ULONG iType;
    ULONG nSize;
    ULONG dParm[1];
};

typedef struct tagENUMLOGFONTA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
};

typedef struct tagENUMLOGFONTEXA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
    UCHAR elfScript[32];
};

typedef struct tagENUMLOGFONTEXDVA {
    struct tagENUMLOGFONTEXA elfEnumLogfontEx;
    struct tagDESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTEXDVW {
    struct tagENUMLOGFONTEXW elfEnumLogfontEx;
    struct tagDESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTEXW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    WCHAR elfScript[32];
};

typedef struct tagENUMLOGFONTW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
};

typedef struct tagENUMTEXTMETRICA {
    struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
    struct tagAXESLISTA etmAxesList;
};

typedef struct tagENUMTEXTMETRICW {
    struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
    struct tagAXESLISTW etmAxesList;
};

typedef struct tagENUMUILANG {
    ULONG NumOfEnumUILang;
    ULONG SizeOfEnumUIBuffer;
    PWCHAR pEnumUIBuffer;
};

typedef struct tagEVENTMSG {
    ULONG message;
    ULONG paramL;
    ULONG paramH;
    ULONG time;
    struct HWND__ *hwnd;
};

typedef struct tagEXCEPINFO {
    USHORT wCode;
    USHORT wReserved;
    PWCHAR bstrSource;
    PWCHAR bstrDescription;
    PWCHAR bstrHelpFile;
    ULONG dwHelpContext;
    PVOID pvReserved;
    HRESULT *pfnDeferredFillIn;
    LONG scode;
};

typedef struct tagEXTLOGFONTA {
    struct tagLOGFONTA elfLogFont;
    UCHAR elfFullName[64];
    UCHAR elfStyle[32];
    ULONG elfVersion;
    ULONG elfStyleSize;
    ULONG elfMatch;
    ULONG elfReserved;
    UCHAR elfVendorId[4];
    ULONG elfCulture;
    struct tagPANOSE elfPanose;
};

typedef struct tagEXTLOGFONTW {
    struct tagLOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    ULONG elfVersion;
    ULONG elfStyleSize;
    ULONG elfMatch;
    ULONG elfReserved;
    UCHAR elfVendorId[4];
    ULONG elfCulture;
    struct tagPANOSE elfPanose;
};

typedef struct tagEXTLOGPEN {
    ULONG elpPenStyle;
    ULONG elpWidth;
    ULONG elpBrushStyle;
    ULONG elpColor;
    ULONG64 elpHatch;
    ULONG elpNumEntries;
    ULONG elpStyleEntry[1];
};

typedef struct tagEXTLOGPEN32 {
    ULONG elpPenStyle;
    ULONG elpWidth;
    ULONG elpBrushStyle;
    ULONG elpColor;
    ULONG elpHatch;
    ULONG elpNumEntries;
    ULONG elpStyleEntry[1];
};

typedef struct tagExtentInfo {
    ULONG cb;
    ULONG dwExtentMode;
    struct tagSIZE sizelProposed;
};

typedef struct tagFCMSG_NOTIFY {
    struct tagNMHDR hdr;
    struct tagMSG msg;
    LONG64 lResult;
};

typedef struct tagFILTERKEYS {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iWaitMSec;
    ULONG iDelayMSec;
    ULONG iRepeatMSec;
    ULONG iBounceMSec;
};

typedef struct tagFINDREPLACEA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    ULONG Flags;
    PCHAR lpstrFindWhat;
    PCHAR lpstrReplaceWith;
    USHORT wFindWhatLen;
    USHORT wReplaceWithLen;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PCHAR lpTemplateName;
};

typedef struct tagFINDREPLACEW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    ULONG Flags;
    PWCHAR lpstrFindWhat;
    PWCHAR lpstrReplaceWith;
    USHORT wFindWhatLen;
    USHORT wReplaceWithLen;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PWCHAR lpTemplateName;
};

typedef struct tagFLICK_MAP {
    struct _GUID left;
    struct _GUID upLeft;
    struct _GUID up;
    struct _GUID upRight;
    struct _GUID right;
    struct _GUID downRight;
    struct _GUID down;
    struct _GUID downLeft;
};

typedef struct tagFONTDESC {
    ULONG cbSizeofstruct;
    PWCHAR lpstrName;
    union tagCY cySize;
    SHORT sWeight;
    SHORT sCharset;
    LONG fItalic;
    LONG fUnderline;
    LONG fStrikethrough;
};

typedef struct tagFONTSIGNATURE {
    ULONG fsUsb[4];
    ULONG fsCsb[2];
};

typedef struct tagFONT_FILE_INFO {
    struct _FILETIME ftLastWriteTime;
    ULONG64 ullFileSize;
    WCHAR szFileName[1];
};

typedef struct tagFONT_REALIZATION_INFO {
    ULONG cbSize;
    UCHAR uFontTechnology;
    UCHAR uCacheHint;
    USHORT Reserved;
    ULONG uRealizationID;
    ULONG uFileCollectionID;
    ULONG cFiles;
    USHORT usFaceIndex;
    USHORT usSimulationFlags;
};

typedef struct tagFONT_REALIZATION_INFO2 {
    ULONG cbSize;
    UCHAR uFontTechnology;
    UCHAR uCacheHint;
    USHORT Reserved;
    ULONG uRealizationID;
    ULONG uFileCollectionID;
    ULONG cFiles;
    USHORT usFaceIndex;
    USHORT usSimulationFlags;
    struct tagDESIGNVECTOR dvDesignVector;
    struct tagAXESLISTW axesList;
    struct tagNORMALIZEDVECTOR nvNormalizedVector;
};

typedef struct tagFORMATETC {
    USHORT cfFormat;
    struct tagDVTARGETDEVICE *ptd;
    ULONG dwAspect;
    LONG lindex;
    ULONG tymed;
};

typedef struct tagFUNCDESC {
    LONG memid;
    PLONG lprgscode;
    struct tagELEMDESC *lprgelemdescParam;
    enum tagFUNCKIND funckind;
    enum tagINVOKEKIND invkind;
    enum tagCALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    struct tagELEMDESC elemdescFunc;
    USHORT wFuncFlags;
};

typedef struct tagGCP_RESULTSA {
    ULONG lStructSize;
    PCHAR lpOutString;
    PULONG lpOrder;
    PLONG lpDx;
    PLONG lpCaretPos;
    PCHAR lpClass;
    PWCHAR lpGlyphs;
    ULONG nGlyphs;
    LONG nMaxFit;
};

typedef struct tagGCP_RESULTSW {
    ULONG lStructSize;
    PWCHAR lpOutString;
    PULONG lpOrder;
    PLONG lpDx;
    PLONG lpCaretPos;
    PCHAR lpClass;
    PWCHAR lpGlyphs;
    ULONG nGlyphs;
    LONG nMaxFit;
};

typedef struct tagGDISCALE_ESCAPE_ARGUMENT {
    enum GDISCALE_COMMAND Command;
    struct {
        struct {
            LONG64 Hdc;
            LONG ScaleValue;
        } In;
    } SetDCDpiScaleValue;
};

typedef struct tagGESTURECONFIG {
    ULONG dwID;
    ULONG dwWant;
    ULONG dwBlock;
};

typedef struct tagGESTUREINFO {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG dwID;
    struct HWND__ *hwndTarget;
    struct tagPOINTS ptsLocation;
    ULONG dwInstanceID;
    ULONG dwSequenceID;
    ULONG64 ullArguments;
    ULONG cbExtraArgs;
};

typedef struct tagGESTURENOTIFYSTRUCT {
    ULONG cbSize;
    ULONG dwFlags;
    struct HWND__ *hwndTarget;
    struct tagPOINTS ptsLocation;
    ULONG dwInstanceID;
};

typedef struct tagGLYPHSET {
    ULONG cbThis;
    ULONG flAccel;
    ULONG cGlyphsSupported;
    ULONG cRanges;
    struct tagWCRANGE ranges[1];
};

typedef struct tagGROUP_WINDOW_TEMPLATE_APPLIED {
    enum TRACKED_WINDOW_STATE templateState;
    enum TRACKED_WINDOW_STATE resultState;
    struct tagRECT templateRect;
    struct tagRECT resultRect;
};

typedef struct tagGUITHREADINFO {
    ULONG cbSize;
    ULONG flags;
    struct HWND__ *hwndActive;
    struct HWND__ *hwndFocus;
    struct HWND__ *hwndCapture;
    struct HWND__ *hwndMenuOwner;
    struct HWND__ *hwndMoveSize;
    struct HWND__ *hwndCaret;
    struct tagRECT rcCaret;
};

typedef struct tagHANDLETABLE {
    PVOID objectHandle[1];
};

typedef struct tagHARDWAREHOOKSTRUCT {
    struct HWND__ *hwnd;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
};

typedef struct tagHARDWAREINPUT {
    ULONG uMsg;
    USHORT wParamL;
    USHORT wParamH;
};

typedef struct tagHELPINFO {
    ULONG cbSize;
    LONG iContextType;
    LONG iCtrlId;
    PVOID hItemHandle;
    ULONG64 dwContextId;
    struct tagPOINT MousePos;
};

typedef struct tagHELPWININFOA {
    LONG wStructSize;
    LONG x;
    LONG y;
    LONG dx;
    LONG dy;
    LONG wMax;
    CHAR rgchMember[2];
};

typedef struct tagHELPWININFOW {
    LONG wStructSize;
    LONG x;
    LONG y;
    LONG dx;
    LONG dy;
    LONG wMax;
    WCHAR rgchMember[2];
};

typedef struct tagHIGHCONTRASTA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpszDefaultScheme;
};

typedef struct tagHIGHCONTRASTW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpszDefaultScheme;
};

typedef struct tagHSZPAIR {
    struct HSZ__ *hszSvc;
    struct HSZ__ *hszTopic;
};

typedef struct tagHW_PROFILE_INFOA {
    ULONG dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
};

typedef struct tagHW_PROFILE_INFOW {
    ULONG dwDockInfo;
    WCHAR szHwProfileGuid[39];
    WCHAR szHwProfileName[80];
};

typedef struct tagICEXYZTRIPLE {
    struct tagCIEXYZ ciexyzRed;
    struct tagCIEXYZ ciexyzGreen;
    struct tagCIEXYZ ciexyzBlue;
};

typedef struct tagICONMETRICSA {
    ULONG cbSize;
    LONG iHorzSpacing;
    LONG iVertSpacing;
    LONG iTitleWrap;
    struct tagLOGFONTA lfFont;
};

typedef struct tagICONMETRICSW {
    ULONG cbSize;
    LONG iHorzSpacing;
    LONG iVertSpacing;
    LONG iTitleWrap;
    struct tagLOGFONTW lfFont;
};

typedef struct tagIDLDESC {
    ULONG64 dwReserved;
    USHORT wIDLFlags;
};

typedef struct tagIMECHARPOSITION {
    ULONG dwSize;
    ULONG dwCharPos;
    struct tagPOINT pt;
    ULONG cLineHeight;
    struct tagRECT rcDocument;
};

typedef struct tagIMEMENUITEMINFOA {
    ULONG cbSize;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG dwItemData;
    CHAR szString[80];
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagIMEMENUITEMINFOW {
    ULONG cbSize;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG dwItemData;
    WCHAR szString[80];
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagINITCOMMONCONTROLSEX {
    ULONG dwSize;
    ULONG dwICC;
};

typedef struct tagINPUDESTWINDOWINFORMATION {
    PVOID window;
    LONG fPartialHitTest : 1;
    enum INPUT_DESTINATION_WINDOW_TYPE windowType;
};

typedef struct tagINPUT {
    ULONG type;
    struct tagMOUSEINPUT mi;
    struct tagKEYBDINPUT ki;
    struct tagHARDWAREINPUT hi;
};

typedef struct tagINPUTDEST {
    enum INPUT_DESTINATION_IDENTITY identity;
    struct tagINPUTSINKINFORMATION inputSinkInfo;
    struct tagENDPOINTINFORMATION endPointInfo;
    struct tagINPUDESTWINDOWINFORMATION windowInfo;
    PVOID _hViewInstanceId;
    struct tagINPUT_TRANSFORM _inpXForm;
    struct HMONITOR__ *_hMonitor;
    enum SPATIAL_INPUT_ACTIVATION_POLICY activationPolicy;
};

typedef struct tagINPUTSINKINFORMATION {
    struct _LUID inputSinkId;
    LONG fInputSinkImplicit : 1;
};

typedef struct tagINPUT_INJECTION_VALUE {
    USHORT page;
    USHORT usage;
    LONG value;
    USHORT index;
};

typedef struct tagINPUT_LOCALE_INFO {
    ULONG cbSize;
    struct HKL__ *hkl;
    ULONG dwKLID;
    ULONG dwCodePage;
    ULONG dwFontSigs;
    ULONG iBaseCharset;
};

typedef struct tagINPUT_MESSAGE_SOURCE {
    enum tagINPUT_MESSAGE_DEVICE_TYPE deviceType;
    enum tagINPUT_MESSAGE_ORIGIN_ID originId;
};

typedef struct tagINPUT_TRANSFORM {
    FLOAT _11;
    FLOAT _12;
    FLOAT _13;
    FLOAT _14;
    FLOAT _21;
    FLOAT _22;
    FLOAT _23;
    FLOAT _24;
    FLOAT _31;
    FLOAT _32;
    FLOAT _33;
    FLOAT _34;
    FLOAT _41;
    FLOAT _42;
    FLOAT _43;
    FLOAT _44;
    FLOAT m[4][4];
};

typedef struct tagINTERACTIVECTRL_DEVICE_INFO {
    ULONG deviceId;
    struct tagRECT deviceRect;
    ULONG buttonCount;
    ULONG dialCount;
    LONG isOnScreenSupported;
    struct tagSIMPLEHAPTICSCTRL_DEVICE_INFO hapticsDevice;
};

typedef struct tagINTERACTIVECTRL_INFO {
    ULONG deviceId;
    struct tagPOINT ptPixelLocation;
    struct tagPOINT ptHimetricLocation;
    ULONG flags;
    LONG rotationDelta;
};

typedef struct tagINTERACTIVECTRL_PARAMETERS {
    ULONG hapticsEnabled;
};

typedef struct tagINTERFACEDATA {
    struct tagMETHODDATA *pmethdata;
    ULONG cMembers;
};

typedef struct tagINTERFACEINFO {
    struct IUnknown *pUnk;
    struct _GUID iid;
    USHORT wMethod;
};

typedef struct tagI_RpcProxyCallbackInterface {
    PLONG IsValidMachineFn;
    PLONG GetClientAddressFn;
    PLONG GetConnectionTimeoutFn;
    PLONG PerformCalloutFn;
    PVOID FreeCalloutStateFn;
    PLONG GetClientSessionAndResourceUUIDFn;
    PLONG ProxyFilterIfFn;
    PVOID RpcProxyUpdatePerfCounterFn;
    PVOID RpcProxyUpdatePerfCounterBackendServerFn;
};

typedef struct tagInputRoutingInfo {
    ULONG peerId;
    ULONG itemId;
    struct tagMsgRoutingInfo msgRoutingInfo;
};

typedef struct tagJOYCAPS2A {
    USHORT wMid;
    USHORT wPid;
    CHAR szPname[32];
    ULONG wXmin;
    ULONG wXmax;
    ULONG wYmin;
    ULONG wYmax;
    ULONG wZmin;
    ULONG wZmax;
    ULONG wNumButtons;
    ULONG wPeriodMin;
    ULONG wPeriodMax;
    ULONG wRmin;
    ULONG wRmax;
    ULONG wUmin;
    ULONG wUmax;
    ULONG wVmin;
    ULONG wVmax;
    ULONG wCaps;
    ULONG wMaxAxes;
    ULONG wNumAxes;
    ULONG wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagJOYCAPS2W {
    USHORT wMid;
    USHORT wPid;
    WCHAR szPname[32];
    ULONG wXmin;
    ULONG wXmax;
    ULONG wYmin;
    ULONG wYmax;
    ULONG wZmin;
    ULONG wZmax;
    ULONG wNumButtons;
    ULONG wPeriodMin;
    ULONG wPeriodMax;
    ULONG wRmin;
    ULONG wRmax;
    ULONG wUmin;
    ULONG wUmax;
    ULONG wVmin;
    ULONG wVmax;
    ULONG wCaps;
    ULONG wMaxAxes;
    ULONG wNumAxes;
    ULONG wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagJOYCAPSA {
    USHORT wMid;
    USHORT wPid;
    CHAR szPname[32];
    ULONG wXmin;
    ULONG wXmax;
    ULONG wYmin;
    ULONG wYmax;
    ULONG wZmin;
    ULONG wZmax;
    ULONG wNumButtons;
    ULONG wPeriodMin;
    ULONG wPeriodMax;
    ULONG wRmin;
    ULONG wRmax;
    ULONG wUmin;
    ULONG wUmax;
    ULONG wVmin;
    ULONG wVmax;
    ULONG wCaps;
    ULONG wMaxAxes;
    ULONG wNumAxes;
    ULONG wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
};

typedef struct tagJOYCAPSW {
    USHORT wMid;
    USHORT wPid;
    WCHAR szPname[32];
    ULONG wXmin;
    ULONG wXmax;
    ULONG wYmin;
    ULONG wYmax;
    ULONG wZmin;
    ULONG wZmax;
    ULONG wNumButtons;
    ULONG wPeriodMin;
    ULONG wPeriodMax;
    ULONG wRmin;
    ULONG wRmax;
    ULONG wUmin;
    ULONG wUmax;
    ULONG wVmin;
    ULONG wVmax;
    ULONG wCaps;
    ULONG wMaxAxes;
    ULONG wNumAxes;
    ULONG wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
};

typedef struct tagKBDLLHOOKSTRUCT {
    ULONG vkCode;
    ULONG scanCode;
    ULONG flags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagKERNINGPAIR {
    USHORT wFirst;
    USHORT wSecond;
    LONG iKernAmount;
};

typedef struct tagKEYBDINPUT {
    USHORT wVk;
    USHORT wScan;
    ULONG dwFlags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagLASTINPUTINFO {
    ULONG cbSize;
    ULONG dwTime;
};

typedef struct tagLAYERPLANEDESCRIPTOR {
    USHORT nSize;
    USHORT nVersion;
    ULONG dwFlags;
    UCHAR iPixelType;
    UCHAR cColorBits;
    UCHAR cRedBits;
    UCHAR cRedShift;
    UCHAR cGreenBits;
    UCHAR cGreenShift;
    UCHAR cBlueBits;
    UCHAR cBlueShift;
    UCHAR cAlphaBits;
    UCHAR cAlphaShift;
    UCHAR cAccumBits;
    UCHAR cAccumRedBits;
    UCHAR cAccumGreenBits;
    UCHAR cAccumBlueBits;
    UCHAR cAccumAlphaBits;
    UCHAR cDepthBits;
    UCHAR cStencilBits;
    UCHAR cAuxBuffers;
    UCHAR iLayerPlane;
    UCHAR bReserved;
    ULONG crTransparent;
};

typedef struct tagLC_ID {
    USHORT wLanguage;
    USHORT wCountry;
    USHORT wCodePage;
};

typedef struct tagLHITTESTINFO {
    struct tagPOINT pt;
    struct tagLITEM item;
};

typedef struct tagLICINFO {
    LONG cbLicInfo;
    LONG fRuntimeKeyAvail;
    LONG fLicVerified;
};

typedef struct tagLITEM {
    ULONG mask;
    LONG iLink;
    ULONG state;
    ULONG stateMask;
    WCHAR szID[48];
    WCHAR szUrl[2084];
};

typedef struct tagLOCALESIGNATURE {
    ULONG lsUsb[4];
    ULONG lsCsbDefault[2];
    ULONG lsCsbSupported[2];
};

typedef struct tagLOGBRUSH {
    ULONG lbStyle;
    ULONG lbColor;
    ULONG64 lbHatch;
};

typedef struct tagLOGBRUSH32 {
    ULONG lbStyle;
    ULONG lbColor;
    ULONG lbHatch;
};

typedef struct tagLOGCOLORSPACEA {
    ULONG lcsSignature;
    ULONG lcsVersion;
    ULONG lcsSize;
    LONG lcsCSType;
    LONG lcsIntent;
    struct tagICEXYZTRIPLE lcsEndpoints;
    ULONG lcsGammaRed;
    ULONG lcsGammaGreen;
    ULONG lcsGammaBlue;
    CHAR lcsFilename[260];
};

typedef struct tagLOGCOLORSPACEW {
    ULONG lcsSignature;
    ULONG lcsVersion;
    ULONG lcsSize;
    LONG lcsCSType;
    LONG lcsIntent;
    struct tagICEXYZTRIPLE lcsEndpoints;
    ULONG lcsGammaRed;
    ULONG lcsGammaGreen;
    ULONG lcsGammaBlue;
    WCHAR lcsFilename[260];
};

typedef struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    UCHAR lfItalic;
    UCHAR lfUnderline;
    UCHAR lfStrikeOut;
    UCHAR lfCharSet;
    UCHAR lfOutPrecision;
    UCHAR lfClipPrecision;
    UCHAR lfQuality;
    UCHAR lfPitchAndFamily;
    CHAR lfFaceName[32];
};

typedef struct tagLOGFONTW {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    UCHAR lfItalic;
    UCHAR lfUnderline;
    UCHAR lfStrikeOut;
    UCHAR lfCharSet;
    UCHAR lfOutPrecision;
    UCHAR lfClipPrecision;
    UCHAR lfQuality;
    UCHAR lfPitchAndFamily;
    WCHAR lfFaceName[32];
};

typedef struct tagLOGPALETTE {
    USHORT palVersion;
    USHORT palNumEntries;
    struct tagPALETTEENTRY palPalEntry[1];
};

typedef struct tagLOGPEN {
    ULONG lopnStyle;
    struct tagPOINT lopnWidth;
    ULONG lopnColor;
};

typedef struct tagLVBKIMAGEA {
    ULONG ulFlags;
    struct HBITMAP__ *hbm;
    PCHAR pszImage;
    ULONG cchImageMax;
    LONG xOffsetPercent;
    LONG yOffsetPercent;
};

typedef struct tagLVBKIMAGEW {
    ULONG ulFlags;
    struct HBITMAP__ *hbm;
    PWCHAR pszImage;
    ULONG cchImageMax;
    LONG xOffsetPercent;
    LONG yOffsetPercent;
};

typedef struct tagLVCOLUMNA {
    ULONG mask;
    LONG fmt;
    LONG cx;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iSubItem;
    LONG iImage;
    LONG iOrder;
    LONG cxMin;
    LONG cxDefault;
    LONG cxIdeal;
};

typedef struct tagLVCOLUMNW {
    ULONG mask;
    LONG fmt;
    LONG cx;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iSubItem;
    LONG iImage;
    LONG iOrder;
    LONG cxMin;
    LONG cxDefault;
    LONG cxIdeal;
};

typedef struct tagLVDISPINFO {
    struct tagNMHDR hdr;
    struct tagLVITEMA item;
};

typedef struct tagLVDISPINFOW {
    struct tagNMHDR hdr;
    struct tagLVITEMW item;
};

typedef struct tagLVFINDINFOA {
    ULONG flags;
    PCHAR psz;
    LONG64 lParam;
    struct tagPOINT pt;
    ULONG vkDirection;
};

typedef struct tagLVFINDINFOW {
    ULONG flags;
    PWCHAR psz;
    LONG64 lParam;
    struct tagPOINT pt;
    ULONG vkDirection;
};

typedef struct tagLVFOOTERINFO {
    ULONG mask;
    PWCHAR pszText;
    LONG cchTextMax;
    ULONG cItems;
};

typedef struct tagLVFOOTERITEM {
    ULONG mask;
    LONG iItem;
    PWCHAR pszText;
    LONG cchTextMax;
    ULONG state;
    ULONG stateMask;
};

typedef struct tagLVGROUP {
    ULONG cbSize;
    ULONG mask;
    PWCHAR pszHeader;
    LONG cchHeader;
    PWCHAR pszFooter;
    LONG cchFooter;
    LONG iGroupId;
    ULONG stateMask;
    ULONG state;
    ULONG uAlign;
    PWCHAR pszSubtitle;
    ULONG cchSubtitle;
    PWCHAR pszTask;
    ULONG cchTask;
    PWCHAR pszDescriptionTop;
    ULONG cchDescriptionTop;
    PWCHAR pszDescriptionBottom;
    ULONG cchDescriptionBottom;
    LONG iTitleImage;
    LONG iExtendedImage;
    LONG iFirstItem;
    ULONG cItems;
    PWCHAR pszSubsetTitle;
    ULONG cchSubsetTitle;
};

typedef struct tagLVGROUPMETRICS {
    ULONG cbSize;
    ULONG mask;
    ULONG Left;
    ULONG Top;
    ULONG Right;
    ULONG Bottom;
    ULONG crLeft;
    ULONG crTop;
    ULONG crRight;
    ULONG crBottom;
    ULONG crHeader;
    ULONG crFooter;
};

typedef struct tagLVHITTESTINFO {
    struct tagPOINT pt;
    ULONG flags;
    LONG iItem;
    LONG iSubItem;
    LONG iGroup;
};

typedef struct tagLVINSERTGROUPSORTED {
    PLONG pfnGroupCompare;
    PVOID pvData;
    struct tagLVGROUP lvGroup;
};

typedef struct tagLVITEMA {
    ULONG mask;
    LONG iItem;
    LONG iSubItem;
    ULONG state;
    ULONG stateMask;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
    LONG iIndent;
    LONG iGroupId;
    ULONG cColumns;
    PULONG puColumns;
    PLONG piColFmt;
    LONG iGroup;
};

typedef struct tagLVITEMINDEX {
    LONG iItem;
    LONG iGroup;
};

typedef struct tagLVITEMW {
    ULONG mask;
    LONG iItem;
    LONG iSubItem;
    ULONG state;
    ULONG stateMask;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
    LONG iIndent;
    LONG iGroupId;
    ULONG cColumns;
    PULONG puColumns;
    PLONG piColFmt;
    LONG iGroup;
};

typedef struct tagLVKEYDOWN {
    struct tagNMHDR hdr;
    USHORT wVKey;
    ULONG flags;
};

typedef struct tagLVSETINFOTIP {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR pszText;
    LONG iItem;
    LONG iSubItem;
};

typedef struct tagLVTILEINFO {
    ULONG cbSize;
    LONG iItem;
    ULONG cColumns;
    PULONG puColumns;
    PLONG piColFmt;
};

typedef struct tagLVTILEVIEWINFO {
    ULONG cbSize;
    ULONG dwMask;
    ULONG dwFlags;
    struct tagSIZE sizeTile;
    LONG cLines;
    struct tagRECT rcLabelMargin;
};

typedef struct tagLegacyISMPOSTINPUTINFO {
    ULONG cPointers;
    ULONG timestamp;
    ULONG64 performanceCount;
    LONG testSyncFlag;
    struct tagPOINTER_INFO rgPointers[10];
};

typedef struct tagMAGINPUTINFORMATION {
    ULONG cbSize;
    struct tagRECT rcSource;
    struct tagRECT rcScreen;
    enum _MAGINPUT_OPERATION opcode;
};

typedef struct tagMANIPULATION_INPUT_INFO {
    ULONG64 qpcArrivalTime;
    ULONG pidDevice;
    ULONG cPointers;
    struct tagMANIPULATION_POINTER_INFO rgPointers[1];
};

typedef struct tagMANIPULATION_POINTER_INFO {
    struct tagPOINTER_INFO_UNION pointer;
     <unnamed-type-hitTarget>;
    struct {
        struct tagInputRoutingInfo routing;
        ULONG hInteraction;
        struct HMONITOR__ *hMonitor;
        PVOID hViewInstanceId;
        enum SPATIAL_INPUT_ACTIVATION_POLICY activationPolicy;
    } hitTarget;
};

typedef struct tagMCGRIDINFO {
    ULONG cbSize;
    ULONG dwPart;
    ULONG dwFlags;
    LONG iCalendar;
    LONG iRow;
    LONG iCol;
    LONG bSelected;
    struct _SYSTEMTIME stStart;
    struct _SYSTEMTIME stEnd;
    struct tagRECT rc;
    PWCHAR pszName;
    ULONG64 cchName;
};

typedef struct tagMCI_ANIM_OPEN_PARMSA {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PCHAR lpstrDeviceType;
    PCHAR lpstrElementName;
    PCHAR lpstrAlias;
    ULONG dwStyle;
    struct HWND__ *hWndParent;
};

typedef struct tagMCI_ANIM_OPEN_PARMSW {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PWCHAR lpstrDeviceType;
    PWCHAR lpstrElementName;
    PWCHAR lpstrAlias;
    ULONG dwStyle;
    struct HWND__ *hWndParent;
};

typedef struct tagMCI_ANIM_PLAY_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrom;
    ULONG dwTo;
    ULONG dwSpeed;
};

typedef struct tagMCI_ANIM_RECT_PARMS {
    ULONG64 dwCallback;
    struct tagRECT rc;
};

typedef struct tagMCI_ANIM_STEP_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrames;
};

typedef struct tagMCI_ANIM_UPDATE_PARMS {
    ULONG64 dwCallback;
    struct tagRECT rc;
    struct HDC__ *hDC;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSA {
    ULONG64 dwCallback;
    struct HWND__ *hWnd;
    ULONG nCmdShow;
    PCHAR lpstrText;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSW {
    ULONG64 dwCallback;
    struct HWND__ *hWnd;
    ULONG nCmdShow;
    PWCHAR lpstrText;
};

typedef struct tagMCI_BREAK_PARMS {
    ULONG64 dwCallback;
    LONG nVirtKey;
    struct HWND__ *hwndBreak;
};

typedef struct tagMCI_GENERIC_PARMS {
    ULONG64 dwCallback;
};

typedef struct tagMCI_GETDEVCAPS_PARMS {
    ULONG64 dwCallback;
    ULONG dwReturn;
    ULONG dwItem;
};

typedef struct tagMCI_INFO_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpstrReturn;
    ULONG dwRetSize;
};

typedef struct tagMCI_INFO_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpstrReturn;
    ULONG dwRetSize;
};

typedef struct tagMCI_LOAD_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpfilename;
};

typedef struct tagMCI_LOAD_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpfilename;
};

typedef struct tagMCI_OPEN_PARMSA {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PCHAR lpstrDeviceType;
    PCHAR lpstrElementName;
    PCHAR lpstrAlias;
};

typedef struct tagMCI_OPEN_PARMSW {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PWCHAR lpstrDeviceType;
    PWCHAR lpstrElementName;
    PWCHAR lpstrAlias;
};

typedef struct tagMCI_OVLY_LOAD_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpfilename;
    struct tagRECT rc;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpfilename;
    struct tagRECT rc;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PCHAR lpstrDeviceType;
    PCHAR lpstrElementName;
    PCHAR lpstrAlias;
    ULONG dwStyle;
    struct HWND__ *hWndParent;
};

typedef struct tagMCI_OVLY_OPEN_PARMSW {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PWCHAR lpstrDeviceType;
    PWCHAR lpstrElementName;
    PWCHAR lpstrAlias;
    ULONG dwStyle;
    struct HWND__ *hWndParent;
};

typedef struct tagMCI_OVLY_RECT_PARMS {
    ULONG64 dwCallback;
    struct tagRECT rc;
};

typedef struct tagMCI_OVLY_SAVE_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpfilename;
    struct tagRECT rc;
};

typedef struct tagMCI_OVLY_SAVE_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpfilename;
    struct tagRECT rc;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA {
    ULONG64 dwCallback;
    struct HWND__ *hWnd;
    ULONG nCmdShow;
    PCHAR lpstrText;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSW {
    ULONG64 dwCallback;
    struct HWND__ *hWnd;
    ULONG nCmdShow;
    PWCHAR lpstrText;
};

typedef struct tagMCI_PLAY_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrom;
    ULONG dwTo;
};

typedef struct tagMCI_RECORD_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrom;
    ULONG dwTo;
};

typedef struct tagMCI_SAVE_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpfilename;
};

typedef struct tagMCI_SAVE_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpfilename;
};

typedef struct tagMCI_SEEK_PARMS {
    ULONG64 dwCallback;
    ULONG dwTo;
};

typedef struct tagMCI_SEQ_SET_PARMS {
    ULONG64 dwCallback;
    ULONG dwTimeFormat;
    ULONG dwAudio;
    ULONG dwTempo;
    ULONG dwPort;
    ULONG dwSlave;
    ULONG dwMaster;
    ULONG dwOffset;
};

typedef struct tagMCI_SET_PARMS {
    ULONG64 dwCallback;
    ULONG dwTimeFormat;
    ULONG dwAudio;
};

typedef struct tagMCI_STATUS_PARMS {
    ULONG64 dwCallback;
    ULONG64 dwReturn;
    ULONG dwItem;
    ULONG dwTrack;
};

typedef struct tagMCI_SYSINFO_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpstrReturn;
    ULONG dwRetSize;
    ULONG dwNumber;
    ULONG wDeviceType;
};

typedef struct tagMCI_SYSINFO_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpstrReturn;
    ULONG dwRetSize;
    ULONG dwNumber;
    ULONG wDeviceType;
};

typedef struct tagMCI_VD_ESCAPE_PARMSA {
    ULONG64 dwCallback;
    PCHAR lpstrCommand;
};

typedef struct tagMCI_VD_ESCAPE_PARMSW {
    ULONG64 dwCallback;
    PWCHAR lpstrCommand;
};

typedef struct tagMCI_VD_PLAY_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrom;
    ULONG dwTo;
    ULONG dwSpeed;
};

typedef struct tagMCI_VD_STEP_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrames;
};

typedef struct tagMCI_WAVE_DELETE_PARMS {
    ULONG64 dwCallback;
    ULONG dwFrom;
    ULONG dwTo;
};

typedef struct tagMCI_WAVE_OPEN_PARMSA {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PCHAR lpstrDeviceType;
    PCHAR lpstrElementName;
    PCHAR lpstrAlias;
    ULONG dwBufferSeconds;
};

typedef struct tagMCI_WAVE_OPEN_PARMSW {
    ULONG64 dwCallback;
    ULONG wDeviceID;
    PWCHAR lpstrDeviceType;
    PWCHAR lpstrElementName;
    PWCHAR lpstrAlias;
    ULONG dwBufferSeconds;
};

typedef struct tagMCI_WAVE_SET_PARMS {
    ULONG64 dwCallback;
    ULONG dwTimeFormat;
    ULONG dwAudio;
    ULONG wInput;
    ULONG wOutput;
    USHORT wFormatTag;
    USHORT wReserved2;
    USHORT nChannels;
    USHORT wReserved3;
    ULONG nSamplesPerSec;
    ULONG nAvgBytesPerSec;
    USHORT nBlockAlign;
    USHORT wReserved4;
    USHORT wBitsPerSample;
    USHORT wReserved5;
};

typedef struct tagMDICREATESTRUCTA {
    PCHAR szClass;
    PCHAR szTitle;
    PVOID hOwner;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG style;
    LONG64 lParam;
};

typedef struct tagMDICREATESTRUCTW {
    PWCHAR szClass;
    PWCHAR szTitle;
    PVOID hOwner;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG style;
    LONG64 lParam;
};

typedef struct tagMDINEXTMENU {
    struct HMENU__ *hmenuIn;
    struct HMENU__ *hmenuNext;
    struct HWND__ *hwndNext;
};

typedef struct tagMEASUREITEMSTRUCT {
    ULONG CtlType;
    ULONG CtlID;
    ULONG itemID;
    ULONG itemWidth;
    ULONG itemHeight;
    ULONG64 itemData;
};

typedef struct tagMENUBARINFO {
    ULONG cbSize;
    struct tagRECT rcBar;
    struct HMENU__ *hMenu;
    struct HWND__ *hwndMenu;
    LONG fBarFocused : 1;
    LONG fFocused : 1;
};

typedef struct tagMENUGETOBJECTINFO {
    ULONG dwFlags;
    ULONG uPos;
    struct HMENU__ *hmenu;
    PVOID riid;
    PVOID pvObj;
};

typedef struct tagMENUINFO {
    ULONG cbSize;
    ULONG fMask;
    ULONG dwStyle;
    ULONG cyMax;
    struct HBRUSH__ *hbrBack;
    ULONG dwContextHelpID;
    ULONG64 dwMenuData;
};

typedef struct tagMENUITEMINFOA {
    ULONG cbSize;
    ULONG fMask;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HMENU__ *hSubMenu;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG64 dwItemData;
    PCHAR dwTypeData;
    ULONG cch;
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagMENUITEMINFOW {
    ULONG cbSize;
    ULONG fMask;
    ULONG fType;
    ULONG fState;
    ULONG wID;
    struct HMENU__ *hSubMenu;
    struct HBITMAP__ *hbmpChecked;
    struct HBITMAP__ *hbmpUnchecked;
    ULONG64 dwItemData;
    PWCHAR dwTypeData;
    ULONG cch;
    struct HBITMAP__ *hbmpItem;
};

typedef struct tagMESSAGEPUMPHOOK {
    ULONG cbSize;
    PLONG pfnInternalGetMessage;
    PLONG pfnWaitMessageEx;
    PULONG pfnGetQueueStatus;
    PULONG pfnMsgWaitForMultipleObjectsEx;
};

typedef struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    struct HMETAFILE__ *hMF;
};

typedef struct tagMETAHEADER {
    USHORT mtType;
    USHORT mtHeaderSize;
    USHORT mtVersion;
    ULONG mtSize;
    USHORT mtNoObjects;
    ULONG mtMaxRecord;
    USHORT mtNoParameters;
};

typedef struct tagMETARECORD {
    ULONG rdSize;
    USHORT rdFunction;
    USHORT rdParm[1];
};

typedef struct tagMETHODDATA {
    PWCHAR szName;
    struct tagPARAMDATA *ppdata;
    LONG dispid;
    ULONG iMeth;
    enum tagCALLCONV cc;
    ULONG cArgs;
    USHORT wFlags;
    USHORT vtReturn;
};

typedef struct tagMIDIINCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIDIINCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIDIINCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwSupport;
};

typedef struct tagMIDIINCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwSupport;
};

typedef struct tagMIDIOUTCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    USHORT wTechnology;
    USHORT wVoices;
    USHORT wNotes;
    USHORT wChannelMask;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIDIOUTCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    USHORT wTechnology;
    USHORT wVoices;
    USHORT wNotes;
    USHORT wChannelMask;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIDIOUTCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    USHORT wTechnology;
    USHORT wVoices;
    USHORT wNotes;
    USHORT wChannelMask;
    ULONG dwSupport;
};

typedef struct tagMIDIOUTCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    USHORT wTechnology;
    USHORT wVoices;
    USHORT wNotes;
    USHORT wChannelMask;
    ULONG dwSupport;
};

typedef struct tagMINIMIZEDMETRICS {
    ULONG cbSize;
    LONG iWidth;
    LONG iHorzGap;
    LONG iVertGap;
    LONG iArrange;
};

typedef struct tagMINIWINDOWINFO {
    struct tagRECT rcWindow;
    struct tagRECT rcClient;
    ULONG dwStyle;
    ULONG dwExStyle;
    ULONG dwExStyle2;
    LONG fForeground;
    ULONG64 dwDesktopId;
    FLOAT transform[4][4];
    FLOAT dpiSubpixel[4];
};

typedef struct tagMINMAXINFO {
    struct tagPOINT ptReserved;
    struct tagPOINT ptMaxSize;
    struct tagPOINT ptMaxPosition;
    struct tagPOINT ptMinTrackSize;
    struct tagPOINT ptMaxTrackSize;
};

typedef struct tagMITSYNTHESIZETOUCHINFO {
    ULONG cPointers;
    LONG is0dButton;
    LONG isVisualizationDisabled;
    ULONG dwWorkspaceId;
    struct tagPOINTER_TOUCH_INFO rgPointers[10];
};

typedef struct tagMIXERCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG fdwSupport;
    ULONG cDestinations;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIXERCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG fdwSupport;
    ULONG cDestinations;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagMIXERCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG fdwSupport;
    ULONG cDestinations;
};

typedef struct tagMIXERCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG fdwSupport;
    ULONG cDestinations;
};

typedef struct tagMIXERCONTROLA {
    ULONG cbStruct;
    ULONG dwControlID;
    ULONG dwControlType;
    ULONG fdwControl;
    ULONG cMultipleItems;
    CHAR szShortName[16];
    CHAR szName[64];
     <unnamed-type-Bounds>;
    union {
        LONG lMinimum;
        LONG lMaximum;
        ULONG dwMinimum;
        ULONG dwMaximum;
        ULONG dwReserved[6];
    } Bounds;
     <unnamed-type-Metrics>;
    union {
        ULONG cSteps;
        ULONG cbCustomData;
        ULONG dwReserved[6];
    } Metrics;
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA {
    ULONG dwParam1;
    ULONG dwParam2;
    CHAR szName[64];
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW {
    ULONG dwParam1;
    ULONG dwParam2;
    WCHAR szName[64];
};

typedef struct tagMIXERCONTROLW {
    ULONG cbStruct;
    ULONG dwControlID;
    ULONG dwControlType;
    ULONG fdwControl;
    ULONG cMultipleItems;
    WCHAR szShortName[16];
    WCHAR szName[64];
     <unnamed-type-Bounds>;
    union {
        LONG lMinimum;
        LONG lMaximum;
        ULONG dwMinimum;
        ULONG dwMaximum;
        ULONG dwReserved[6];
    } Bounds;
     <unnamed-type-Metrics>;
    union {
        ULONG cSteps;
        ULONG cbCustomData;
        ULONG dwReserved[6];
    } Metrics;
};

typedef struct tagMIXERLINEA {
    ULONG cbStruct;
    ULONG dwDestination;
    ULONG dwSource;
    ULONG dwLineID;
    ULONG fdwLine;
    ULONG64 dwUser;
    ULONG dwComponentType;
    ULONG cChannels;
    ULONG cConnections;
    ULONG cControls;
    CHAR szShortName[16];
    CHAR szName[64];
     <unnamed-type-Target>;
    struct {
        ULONG dwType;
        ULONG dwDeviceID;
        USHORT wMid;
        USHORT wPid;
        ULONG vDriverVersion;
        CHAR szPname[32];
    } Target;
};

typedef struct tagMIXERLINECONTROLSA {
    ULONG cbStruct;
    ULONG dwLineID;
    ULONG dwControlID;
    ULONG dwControlType;
    ULONG cControls;
    ULONG cbmxctrl;
    struct tagMIXERCONTROLA *pamxctrl;
};

typedef struct tagMIXERLINECONTROLSW {
    ULONG cbStruct;
    ULONG dwLineID;
    ULONG dwControlID;
    ULONG dwControlType;
    ULONG cControls;
    ULONG cbmxctrl;
    struct tagMIXERCONTROLW *pamxctrl;
};

typedef struct tagMIXERLINEW {
    ULONG cbStruct;
    ULONG dwDestination;
    ULONG dwSource;
    ULONG dwLineID;
    ULONG fdwLine;
    ULONG64 dwUser;
    ULONG dwComponentType;
    ULONG cChannels;
    ULONG cConnections;
    ULONG cControls;
    WCHAR szShortName[16];
    WCHAR szName[64];
     <unnamed-type-Target>;
    struct {
        ULONG dwType;
        ULONG dwDeviceID;
        USHORT wMid;
        USHORT wPid;
        ULONG vDriverVersion;
        WCHAR szPname[32];
    } Target;
};

typedef struct tagMODE_SETTINGS {
    ULONG sgUI;
    ULONG holdMode;
    ULONG mouseInputX;
    ULONG mouseInputY;
    ULONG mouseFrequency;
    ULONG eraseEnabled;
    ULONG rightMaskEnabled;
};

typedef struct tagMONCBSTRUCT {
    ULONG cb;
    ULONG dwTime;
    PVOID hTask;
    ULONG dwRet;
    ULONG wType;
    ULONG wFmt;
    struct HCONV__ *hConv;
    struct HSZ__ *hsz1;
    struct HSZ__ *hsz2;
    struct HDDEDATA__ *hData;
    ULONG64 dwData1;
    ULONG64 dwData2;
    struct tagCONVCONTEXT cc;
    ULONG cbData;
    ULONG Data[8];
};

typedef struct tagMONCONVSTRUCT {
    ULONG cb;
    LONG fConnect;
    ULONG dwTime;
    PVOID hTask;
    struct HSZ__ *hszSvc;
    struct HSZ__ *hszTopic;
    struct HCONV__ *hConvClient;
    struct HCONV__ *hConvServer;
};

typedef struct tagMONERRSTRUCT {
    ULONG cb;
    ULONG wLastError;
    ULONG dwTime;
    PVOID hTask;
};

typedef struct tagMONHSZSTRUCTA {
    ULONG cb;
    LONG fsAction;
    ULONG dwTime;
    struct HSZ__ *hsz;
    PVOID hTask;
    CHAR str[1];
};

typedef struct tagMONHSZSTRUCTW {
    ULONG cb;
    LONG fsAction;
    ULONG dwTime;
    struct HSZ__ *hsz;
    PVOID hTask;
    WCHAR str[1];
};

typedef struct tagMONITORINFO {
    ULONG cbSize;
    struct tagRECT rcMonitor;
    struct tagRECT rcWork;
    ULONG dwFlags;
};

typedef struct tagMONITORINFOEXA {
    struct tagMONITORINFO tagMONITORINFO;
    CHAR szDevice[32];
};

typedef struct tagMONITORINFOEXW {
    struct tagMONITORINFO tagMONITORINFO;
    WCHAR szDevice[32];
};

typedef struct tagMONLINKSTRUCT {
    ULONG cb;
    ULONG dwTime;
    PVOID hTask;
    LONG fEstablished;
    LONG fNoData;
    struct HSZ__ *hszSvc;
    struct HSZ__ *hszTopic;
    struct HSZ__ *hszItem;
    ULONG wFmt;
    LONG fServer;
    struct HCONV__ *hConvServer;
    struct HCONV__ *hConvClient;
};

typedef struct tagMONMSGSTRUCT {
    ULONG cb;
    struct HWND__ *hwndTo;
    ULONG dwTime;
    PVOID hTask;
    ULONG wMsg;
    ULONG64 wParam;
    LONG64 lParam;
    struct tagDDEML_MSG_HOOK_DATA dmhd;
};

typedef struct tagMOUSEHOOKSTRUCT {
    struct tagPOINT pt;
    struct HWND__ *hwnd;
    ULONG wHitTestCode;
    ULONG64 dwExtraInfo;
};

typedef struct tagMOUSEHOOKSTRUCTEX {
    struct tagMOUSEHOOKSTRUCT tagMOUSEHOOKSTRUCT;
    ULONG mouseData;
};

typedef struct tagMOUSEINPUT {
    LONG dx;
    LONG dy;
    ULONG mouseData;
    ULONG dwFlags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMOUSEKEYS {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iMaxSpeed;
    ULONG iTimeToMaxSpeed;
    ULONG iCtrlSpeed;
    ULONG dwReserved1;
    ULONG dwReserved2;
};

typedef struct tagMOUSEMOVEPOINT {
    LONG x;
    LONG y;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMSG {
    struct HWND__ *hwnd;
    ULONG message;
    ULONG64 wParam;
    LONG64 lParam;
    ULONG time;
    struct tagPOINT pt;
};

typedef struct tagMSGBOXPARAMSA {
    ULONG cbSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PCHAR lpszText;
    PCHAR lpszCaption;
    ULONG dwStyle;
    PCHAR lpszIcon;
    ULONG64 dwContextHelpId;
    PVOID lpfnMsgBoxCallback;
    ULONG dwLanguageId;
};

typedef struct tagMSGBOXPARAMSW {
    ULONG cbSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpszText;
    PWCHAR lpszCaption;
    ULONG dwStyle;
    PWCHAR lpszIcon;
    ULONG64 dwContextHelpId;
    PVOID lpfnMsgBoxCallback;
    ULONG dwLanguageId;
};

typedef struct tagMSGMASK {
    PUCHAR rgb;
    ULONG cb;
};

typedef struct tagMSLLHOOKSTRUCT {
    struct tagPOINT pt;
    ULONG mouseData;
    ULONG flags;
    ULONG time;
    ULONG64 dwExtraInfo;
};

typedef struct tagMULTIKEYHELPA {
    ULONG mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
};

typedef struct tagMULTIKEYHELPW {
    ULONG mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
};

typedef struct tagMULTI_QI {
    struct _GUID *pIID;
    struct IUnknown *pItf;
    HRESULT hr;
};

typedef struct tagMsgRoutingInfo {
    ULONG SystemProcessID;
    ULONG SystemThreadID;
    ULONG64 Identity;
    ULONG64 ItemID;
    struct _GUID ConnectionGuid;
};

typedef struct tagNCCALCSIZE_PARAMS {
    struct tagRECT rgrc[3];
    struct tagWINDOWPOS *lppos;
};

typedef struct tagNC_ADDRESS {
    struct NET_ADDRESS_INFO_ *pAddrInfo;
    USHORT PortNumber;
    UCHAR PrefixLength;
};

typedef struct tagNEWTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    UCHAR tmFirstChar;
    UCHAR tmLastChar;
    UCHAR tmDefaultChar;
    UCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
    ULONG ntmFlags;
    ULONG ntmSizeEM;
    ULONG ntmCellHeight;
    ULONG ntmAvgWidth;
};

typedef struct tagNEWTEXTMETRICEXA {
    struct tagNEWTEXTMETRICA ntmTm;
    struct tagFONTSIGNATURE ntmFontSig;
};

typedef struct tagNEWTEXTMETRICEXW {
    struct tagNEWTEXTMETRICW ntmTm;
    struct tagFONTSIGNATURE ntmFontSig;
};

typedef struct tagNEWTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
    ULONG ntmFlags;
    ULONG ntmSizeEM;
    ULONG ntmCellHeight;
    ULONG ntmAvgWidth;
};

typedef struct tagNMBCDROPDOWN {
    struct tagNMHDR hdr;
    struct tagRECT rcButton;
};

typedef struct tagNMBCHOTITEM {
    struct tagNMHDR hdr;
    ULONG dwFlags;
};

typedef struct tagNMCHAR {
    struct tagNMHDR hdr;
    ULONG ch;
    ULONG dwItemPrev;
    ULONG dwItemNext;
};

typedef struct tagNMCUSTOMDRAWINFO {
    struct tagNMHDR hdr;
    ULONG dwDrawStage;
    struct HDC__ *hdc;
    struct tagRECT rc;
    ULONG64 dwItemSpec;
    ULONG uItemState;
    LONG64 lItemlParam;
};

typedef struct tagNMCUSTOMSPLITRECTINFO {
    struct tagNMHDR hdr;
    struct tagRECT rcClient;
    struct tagRECT rcButton;
    struct tagRECT rcSplit;
};

typedef struct tagNMCUSTOMTEXT {
    struct tagNMHDR hdr;
    struct HDC__ *hDC;
    PWCHAR lpString;
    LONG nCount;
    struct tagRECT *lpRect;
    ULONG uFormat;
    LONG fLink;
};

typedef struct tagNMDATETIMECHANGE {
    struct tagNMHDR nmhdr;
    ULONG dwFlags;
    struct _SYSTEMTIME st;
};

typedef struct tagNMDATETIMEFORMATA {
    struct tagNMHDR nmhdr;
    PCHAR pszFormat;
    struct _SYSTEMTIME st;
    PCHAR pszDisplay;
    CHAR szDisplay[64];
};

typedef struct tagNMDATETIMEFORMATQUERYA {
    struct tagNMHDR nmhdr;
    PCHAR pszFormat;
    struct tagSIZE szMax;
};

typedef struct tagNMDATETIMEFORMATQUERYW {
    struct tagNMHDR nmhdr;
    PWCHAR pszFormat;
    struct tagSIZE szMax;
};

typedef struct tagNMDATETIMEFORMATW {
    struct tagNMHDR nmhdr;
    PWCHAR pszFormat;
    struct _SYSTEMTIME st;
    PWCHAR pszDisplay;
    WCHAR szDisplay[64];
};

typedef struct tagNMDATETIMESTRINGA {
    struct tagNMHDR nmhdr;
    PCHAR pszUserString;
    struct _SYSTEMTIME st;
    ULONG dwFlags;
};

typedef struct tagNMDATETIMESTRINGW {
    struct tagNMHDR nmhdr;
    PWCHAR pszUserString;
    struct _SYSTEMTIME st;
    ULONG dwFlags;
};

typedef struct tagNMDATETIMEWMKEYDOWNA {
    struct tagNMHDR nmhdr;
    LONG nVirtKey;
    PCHAR pszFormat;
    struct _SYSTEMTIME st;
};

typedef struct tagNMDATETIMEWMKEYDOWNW {
    struct tagNMHDR nmhdr;
    LONG nVirtKey;
    PWCHAR pszFormat;
    struct _SYSTEMTIME st;
};

typedef struct tagNMDAYSTATE {
    struct tagNMHDR nmhdr;
    struct _SYSTEMTIME stStart;
    LONG cDayState;
    PULONG prgDayState;
};

typedef struct tagNMHDDISPINFOA {
    struct tagNMHDR hdr;
    LONG iItem;
    ULONG mask;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
};

typedef struct tagNMHDDISPINFOW {
    struct tagNMHDR hdr;
    LONG iItem;
    ULONG mask;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
};

typedef struct tagNMHDFILTERBTNCLICK {
    struct tagNMHDR hdr;
    LONG iItem;
    struct tagRECT rc;
};

typedef struct tagNMHDR {
    struct HWND__ *hwndFrom;
    ULONG64 idFrom;
    ULONG code;
};

typedef struct tagNMHEADERA {
    struct tagNMHDR hdr;
    LONG iItem;
    LONG iButton;
    struct _HD_ITEMA *pitem;
};

typedef struct tagNMHEADERW {
    struct tagNMHDR hdr;
    LONG iItem;
    LONG iButton;
    struct _HD_ITEMW *pitem;
};

typedef struct tagNMIPADDRESS {
    struct tagNMHDR hdr;
    LONG iField;
    LONG iValue;
};

typedef struct tagNMITEMACTIVATE {
    struct tagNMHDR hdr;
    LONG iItem;
    LONG iSubItem;
    ULONG uNewState;
    ULONG uOldState;
    ULONG uChanged;
    struct tagPOINT ptAction;
    LONG64 lParam;
    ULONG uKeyFlags;
};

typedef struct tagNMKEY {
    struct tagNMHDR hdr;
    ULONG nVKey;
    ULONG uFlags;
};

typedef struct tagNMLINK {
    struct tagNMHDR hdr;
    struct tagLITEM item;
};

typedef struct tagNMLISTVIEW {
    struct tagNMHDR hdr;
    LONG iItem;
    LONG iSubItem;
    ULONG uNewState;
    ULONG uOldState;
    ULONG uChanged;
    struct tagPOINT ptAction;
    LONG64 lParam;
};

typedef struct tagNMLVCACHEHINT {
    struct tagNMHDR hdr;
    LONG iFrom;
    LONG iTo;
};

typedef struct tagNMLVCUSTOMDRAW {
    struct tagNMCUSTOMDRAWINFO nmcd;
    ULONG clrText;
    ULONG clrTextBk;
    LONG iSubItem;
    ULONG dwItemType;
    ULONG clrFace;
    LONG iIconEffect;
    LONG iIconPhase;
    LONG iPartId;
    LONG iStateId;
    struct tagRECT rcText;
    ULONG uAlign;
};

typedef struct tagNMLVEMPTYMARKUP {
    struct tagNMHDR hdr;
    ULONG dwFlags;
    WCHAR szMarkup[2084];
};

typedef struct tagNMLVFINDITEMA {
    struct tagNMHDR hdr;
    LONG iStart;
    struct tagLVFINDINFOA lvfi;
};

typedef struct tagNMLVFINDITEMW {
    struct tagNMHDR hdr;
    LONG iStart;
    struct tagLVFINDINFOW lvfi;
};

typedef struct tagNMLVGETINFOTIPA {
    struct tagNMHDR hdr;
    ULONG dwFlags;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iItem;
    LONG iSubItem;
    LONG64 lParam;
};

typedef struct tagNMLVGETINFOTIPW {
    struct tagNMHDR hdr;
    ULONG dwFlags;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iItem;
    LONG iSubItem;
    LONG64 lParam;
};

typedef struct tagNMLVLINK {
    struct tagNMHDR hdr;
    struct tagLITEM link;
    LONG iItem;
    LONG iSubItem;
};

typedef struct tagNMLVODSTATECHANGE {
    struct tagNMHDR hdr;
    LONG iFrom;
    LONG iTo;
    ULONG uNewState;
    ULONG uOldState;
};

typedef struct tagNMLVSCROLL {
    struct tagNMHDR hdr;
    LONG dx;
    LONG dy;
};

typedef struct tagNMMOUSE {
    struct tagNMHDR hdr;
    ULONG64 dwItemSpec;
    ULONG64 dwItemData;
    struct tagPOINT pt;
    LONG64 dwHitInfo;
};

typedef struct tagNMOBJECTNOTIFY {
    struct tagNMHDR hdr;
    LONG iItem;
    struct _GUID *piid;
    PVOID pObject;
    HRESULT hResult;
    ULONG dwFlags;
};

typedef struct tagNMPGHOTITEM {
    struct tagNMHDR hdr;
    LONG idOld;
    LONG idNew;
    ULONG dwFlags;
};

typedef struct tagNMRBAUTOSIZE {
    struct tagNMHDR hdr;
    LONG fChanged;
    struct tagRECT rcTarget;
    struct tagRECT rcActual;
};

typedef struct tagNMREBAR {
    struct tagNMHDR hdr;
    ULONG dwMask;
    ULONG uBand;
    ULONG fStyle;
    ULONG wID;
    LONG64 lParam;
};

typedef struct tagNMREBARAUTOBREAK {
    struct tagNMHDR hdr;
    ULONG uBand;
    ULONG wID;
    LONG64 lParam;
    ULONG uMsg;
    ULONG fStyleCurrent;
    LONG fAutoBreak;
};

typedef struct tagNMREBARCHEVRON {
    struct tagNMHDR hdr;
    ULONG uBand;
    ULONG wID;
    LONG64 lParam;
    struct tagRECT rc;
    LONG64 lParamNM;
};

typedef struct tagNMREBARCHILDSIZE {
    struct tagNMHDR hdr;
    ULONG uBand;
    ULONG wID;
    struct tagRECT rcChild;
    struct tagRECT rcBand;
};

typedef struct tagNMREBARSPLITTER {
    struct tagNMHDR hdr;
    struct tagRECT rcSizing;
};

typedef struct tagNMSELCHANGE {
    struct tagNMHDR nmhdr;
    struct _SYSTEMTIME stSelStart;
    struct _SYSTEMTIME stSelEnd;
};

typedef struct tagNMTBGETINFOTIPA {
    struct tagNMHDR hdr;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iItem;
    LONG64 lParam;
};

typedef struct tagNMTBGETINFOTIPW {
    struct tagNMHDR hdr;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iItem;
    LONG64 lParam;
};

typedef struct tagNMTBHOTITEM {
    struct tagNMHDR hdr;
    LONG idOld;
    LONG idNew;
    ULONG dwFlags;
};

typedef struct tagNMTBRESTORE {
    struct tagNMHDR hdr;
    PULONG pData;
    PULONG pCurrent;
    ULONG cbData;
    LONG iItem;
    LONG cButtons;
    LONG cbBytesPerRecord;
    struct _TBBUTTON tbButton;
};

typedef struct tagNMTBSAVE {
    struct tagNMHDR hdr;
    PULONG pData;
    PULONG pCurrent;
    ULONG cbData;
    LONG iItem;
    LONG cButtons;
    struct _TBBUTTON tbButton;
};

typedef struct tagNMTOOLBARA {
    struct tagNMHDR hdr;
    LONG iItem;
    struct _TBBUTTON tbButton;
    LONG cchText;
    PCHAR pszText;
    struct tagRECT rcButton;
};

typedef struct tagNMTOOLBARW {
    struct tagNMHDR hdr;
    LONG iItem;
    struct _TBBUTTON tbButton;
    LONG cchText;
    PWCHAR pszText;
    struct tagRECT rcButton;
};

typedef struct tagNMTOOLTIPSCREATED {
    struct tagNMHDR hdr;
    struct HWND__ *hwndToolTips;
};

typedef struct tagNMTREEVIEWA {
    struct tagNMHDR hdr;
    ULONG action;
    struct tagTVITEMA itemOld;
    struct tagTVITEMA itemNew;
    struct tagPOINT ptDrag;
};

typedef struct tagNMTREEVIEWW {
    struct tagNMHDR hdr;
    ULONG action;
    struct tagTVITEMW itemOld;
    struct tagTVITEMW itemNew;
    struct tagPOINT ptDrag;
};

typedef struct tagNMTTCUSTOMDRAW {
    struct tagNMCUSTOMDRAWINFO nmcd;
    ULONG uDrawFlags;
};

typedef struct tagNMTTDISPINFOA {
    struct tagNMHDR hdr;
    PCHAR lpszText;
    CHAR szText[80];
    struct HINSTANCE__ *hinst;
    ULONG uFlags;
    LONG64 lParam;
};

typedef struct tagNMTTDISPINFOW {
    struct tagNMHDR hdr;
    PWCHAR lpszText;
    WCHAR szText[80];
    struct HINSTANCE__ *hinst;
    ULONG uFlags;
    LONG64 lParam;
};

typedef struct tagNMTVASYNCDRAW {
    struct tagNMHDR hdr;
    struct _IMAGELISTDRAWPARAMS *pimldp;
    HRESULT hr;
    struct _TREEITEM *hItem;
    LONG64 lParam;
    ULONG dwRetFlags;
    LONG iRetImageIndex;
};

typedef struct tagNMTVCUSTOMDRAW {
    struct tagNMCUSTOMDRAWINFO nmcd;
    ULONG clrText;
    ULONG clrTextBk;
    LONG iLevel;
};

typedef struct tagNMTVGETINFOTIPA {
    struct tagNMHDR hdr;
    PCHAR pszText;
    LONG cchTextMax;
    struct _TREEITEM *hItem;
    LONG64 lParam;
};

typedef struct tagNMTVGETINFOTIPW {
    struct tagNMHDR hdr;
    PWCHAR pszText;
    LONG cchTextMax;
    struct _TREEITEM *hItem;
    LONG64 lParam;
};

typedef struct tagNMTVSTATEIMAGECHANGING {
    struct tagNMHDR hdr;
    struct _TREEITEM *hti;
    LONG iOldStateImageIndex;
    LONG iNewStateImageIndex;
};

typedef struct tagNMVIEWCHANGE {
    struct tagNMHDR nmhdr;
    ULONG dwOldView;
    ULONG dwNewView;
};

typedef struct tagNONCLIENTMETRICSA {
    ULONG cbSize;
    LONG iBorderWidth;
    LONG iScrollWidth;
    LONG iScrollHeight;
    LONG iCaptionWidth;
    LONG iCaptionHeight;
    struct tagLOGFONTA lfCaptionFont;
    LONG iSmCaptionWidth;
    LONG iSmCaptionHeight;
    struct tagLOGFONTA lfSmCaptionFont;
    LONG iMenuWidth;
    LONG iMenuHeight;
    struct tagLOGFONTA lfMenuFont;
    struct tagLOGFONTA lfStatusFont;
    struct tagLOGFONTA lfMessageFont;
    LONG iPaddedBorderWidth;
};

typedef struct tagNONCLIENTMETRICSW {
    ULONG cbSize;
    LONG iBorderWidth;
    LONG iScrollWidth;
    LONG iScrollHeight;
    LONG iCaptionWidth;
    LONG iCaptionHeight;
    struct tagLOGFONTW lfCaptionFont;
    LONG iSmCaptionWidth;
    LONG iSmCaptionHeight;
    struct tagLOGFONTW lfSmCaptionFont;
    LONG iMenuWidth;
    LONG iMenuHeight;
    struct tagLOGFONTW lfMenuFont;
    struct tagLOGFONTW lfStatusFont;
    struct tagLOGFONTW lfMessageFont;
    LONG iPaddedBorderWidth;
};

typedef struct tagNORMALIZEDVECTOR {
    ULONG nvNumAxes;
    LONG nvValues[16];
};

typedef struct tagOBJECTDESCRIPTOR {
    ULONG cbSize;
    struct _GUID clsid;
    ULONG dwDrawAspect;
    struct tagSIZE sizel;
    struct _POINTL pointl;
    ULONG dwStatus;
    ULONG dwFullUserTypeName;
    ULONG dwSrcOfCopy;
};

typedef struct tagOCPFIPARAMS {
    ULONG cbStructSize;
    struct HWND__ *hWndOwner;
    LONG x;
    LONG y;
    PWCHAR lpszCaption;
    ULONG cObjects;
    struct IUnknown **lplpUnk;
    ULONG cPages;
    struct _GUID *lpPages;
    ULONG lcid;
    LONG dispidInitialProperty;
};

typedef struct tagOFNA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PCHAR lpstrFilter;
    PCHAR lpstrCustomFilter;
    ULONG nMaxCustFilter;
    ULONG nFilterIndex;
    PCHAR lpstrFile;
    ULONG nMaxFile;
    PCHAR lpstrFileTitle;
    ULONG nMaxFileTitle;
    PCHAR lpstrInitialDir;
    PCHAR lpstrTitle;
    ULONG Flags;
    USHORT nFileOffset;
    USHORT nFileExtension;
    PCHAR lpstrDefExt;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PCHAR lpTemplateName;
    PVOID pvReserved;
    ULONG dwReserved;
    ULONG FlagsEx;
};

typedef struct tagOFNW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpstrFilter;
    PWCHAR lpstrCustomFilter;
    ULONG nMaxCustFilter;
    ULONG nFilterIndex;
    PWCHAR lpstrFile;
    ULONG nMaxFile;
    PWCHAR lpstrFileTitle;
    ULONG nMaxFileTitle;
    PWCHAR lpstrInitialDir;
    PWCHAR lpstrTitle;
    ULONG Flags;
    USHORT nFileOffset;
    USHORT nFileExtension;
    PWCHAR lpstrDefExt;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PWCHAR lpTemplateName;
    PVOID pvReserved;
    ULONG dwReserved;
    ULONG FlagsEx;
};

typedef struct tagOFN_NT4A {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PCHAR lpstrFilter;
    PCHAR lpstrCustomFilter;
    ULONG nMaxCustFilter;
    ULONG nFilterIndex;
    PCHAR lpstrFile;
    ULONG nMaxFile;
    PCHAR lpstrFileTitle;
    ULONG nMaxFileTitle;
    PCHAR lpstrInitialDir;
    PCHAR lpstrTitle;
    ULONG Flags;
    USHORT nFileOffset;
    USHORT nFileExtension;
    PCHAR lpstrDefExt;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PCHAR lpTemplateName;
};

typedef struct tagOFN_NT4W {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpstrFilter;
    PWCHAR lpstrCustomFilter;
    ULONG nMaxCustFilter;
    ULONG nFilterIndex;
    PWCHAR lpstrFile;
    ULONG nMaxFile;
    PWCHAR lpstrFileTitle;
    ULONG nMaxFileTitle;
    PWCHAR lpstrInitialDir;
    PWCHAR lpstrTitle;
    ULONG Flags;
    USHORT nFileOffset;
    USHORT nFileExtension;
    PWCHAR lpstrDefExt;
    LONG64 lCustData;
    PULONG64 lpfnHook;
    PWCHAR lpTemplateName;
};

typedef struct tagOIFI {
    ULONG cb;
    LONG fMDIApp;
    struct HWND__ *hwndFrame;
    struct HACCEL__ *haccel;
    ULONG cAccelEntries;
};

typedef struct tagOLEVERB {
    LONG lVerb;
    PWCHAR lpszVerbName;
    ULONG fuFlags;
    ULONG grfAttribs;
};

typedef struct tagOleMenuGroupWidths {
    LONG width[6];
};

typedef struct tagPAGERANGE {
    LONG nFromPage;
    LONG nToPage;
};

typedef struct tagPAGESET {
    ULONG cbStruct;
    LONG fOddPages;
    LONG fEvenPages;
    ULONG cPageRange;
    struct tagPAGERANGE rgPages[1];
};

typedef struct tagPAINTSTRUCT {
    struct HDC__ *hdc;
    LONG fErase;
    struct tagRECT rcPaint;
    LONG fRestore;
    LONG fIncUpdate;
    UCHAR rgbReserved[32];
};

typedef struct tagPALETTEENTRY {
    UCHAR peRed;
    UCHAR peGreen;
    UCHAR peBlue;
    UCHAR peFlags;
};

typedef struct tagPANOSE {
    UCHAR bFamilyType;
    UCHAR bSerifStyle;
    UCHAR bWeight;
    UCHAR bProportion;
    UCHAR bContrast;
    UCHAR bStrokeVariation;
    UCHAR bArmStyle;
    UCHAR bLetterform;
    UCHAR bMidline;
    UCHAR bXHeight;
};

typedef struct tagPARAMDATA {
    PWCHAR szName;
    USHORT vt;
};

typedef struct tagPARAMDESC {
    struct tagPARAMDESCEX *pparamdescex;
    USHORT wParamFlags;
};

typedef struct tagPARAMDESCEX {
    ULONG cBytes;
    struct tagVARIANT varDefaultValue;
};

typedef struct tagPARSEDURLA {
    ULONG cbSize;
    PCHAR pszProtocol;
    ULONG cchProtocol;
    PCHAR pszSuffix;
    ULONG cchSuffix;
    ULONG nScheme;
};

typedef struct tagPARSEDURLW {
    ULONG cbSize;
    PWCHAR pszProtocol;
    ULONG cchProtocol;
    PWCHAR pszSuffix;
    ULONG cchSuffix;
    ULONG nScheme;
};

typedef struct tagPDA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    struct HDC__ *hDC;
    ULONG Flags;
    USHORT nFromPage;
    USHORT nToPage;
    USHORT nMinPage;
    USHORT nMaxPage;
    USHORT nCopies;
    struct HINSTANCE__ *hInstance;
    LONG64 lCustData;
    PULONG64 lpfnPrintHook;
    PULONG64 lpfnSetupHook;
    PCHAR lpPrintTemplateName;
    PCHAR lpSetupTemplateName;
    PVOID hPrintTemplate;
    PVOID hSetupTemplate;
};

typedef struct tagPDEXA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    struct HDC__ *hDC;
    ULONG Flags;
    ULONG Flags2;
    ULONG ExclusionFlags;
    ULONG nPageRanges;
    ULONG nMaxPageRanges;
    struct tagPRINTPAGERANGE *lpPageRanges;
    ULONG nMinPage;
    ULONG nMaxPage;
    ULONG nCopies;
    struct HINSTANCE__ *hInstance;
    PCHAR lpPrintTemplateName;
    struct IUnknown *lpCallback;
    ULONG nPropertyPages;
    struct _PSP **lphPropertyPages;
    ULONG nStartPage;
    ULONG dwResultAction;
};

typedef struct tagPDEXW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    struct HDC__ *hDC;
    ULONG Flags;
    ULONG Flags2;
    ULONG ExclusionFlags;
    ULONG nPageRanges;
    ULONG nMaxPageRanges;
    struct tagPRINTPAGERANGE *lpPageRanges;
    ULONG nMinPage;
    ULONG nMaxPage;
    ULONG nCopies;
    struct HINSTANCE__ *hInstance;
    PWCHAR lpPrintTemplateName;
    struct IUnknown *lpCallback;
    ULONG nPropertyPages;
    struct _PSP **lphPropertyPages;
    ULONG nStartPage;
    ULONG dwResultAction;
};

typedef struct tagPDW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    struct HDC__ *hDC;
    ULONG Flags;
    USHORT nFromPage;
    USHORT nToPage;
    USHORT nMinPage;
    USHORT nMaxPage;
    USHORT nCopies;
    struct HINSTANCE__ *hInstance;
    LONG64 lCustData;
    PULONG64 lpfnPrintHook;
    PULONG64 lpfnSetupHook;
    PWCHAR lpPrintTemplateName;
    PWCHAR lpSetupTemplateName;
    PVOID hPrintTemplate;
    PVOID hSetupTemplate;
};

typedef struct tagPELARRAY {
    LONG paXCount;
    LONG paYCount;
    LONG paXExt;
    LONG paYExt;
    UCHAR paRGBs;
};

typedef struct tagPEN_PARAMETERS {
    ULONG splashEnabled;
    ULONG doubleTapDistance;
    ULONG doubleTapTime;
    ULONG tapTime;
    ULONG waitTime;
    ULONG holdTime;
    ULONG flickModeEnabled;
    ULONG flickTolerance;
};

typedef struct tagPICTDESC {
    ULONG cbSizeofstruct;
    ULONG picType;
    struct {
        struct HBITMAP__ *hbitmap;
        struct HPALETTE__ *hpal;
    } bmp;
    struct {
        struct HMETAFILE__ *hmeta;
        LONG xExt;
        LONG yExt;
    } wmf;
    struct {
        struct HICON__ *hicon;
    } icon;
    struct {
        struct HENHMETAFILE__ *hemf;
    } emf;
};

typedef struct tagPIXELFORMATDESCRIPTOR {
    USHORT nSize;
    USHORT nVersion;
    ULONG dwFlags;
    UCHAR iPixelType;
    UCHAR cColorBits;
    UCHAR cRedBits;
    UCHAR cRedShift;
    UCHAR cGreenBits;
    UCHAR cGreenShift;
    UCHAR cBlueBits;
    UCHAR cBlueShift;
    UCHAR cAlphaBits;
    UCHAR cAlphaShift;
    UCHAR cAccumBits;
    UCHAR cAccumRedBits;
    UCHAR cAccumGreenBits;
    UCHAR cAccumBlueBits;
    UCHAR cAccumAlphaBits;
    UCHAR cDepthBits;
    UCHAR cStencilBits;
    UCHAR cAuxBuffers;
    UCHAR iLayerType;
    UCHAR bReserved;
    ULONG dwLayerMask;
    ULONG dwVisibleMask;
    ULONG dwDamageMask;
};

typedef struct tagPOINT {
    LONG x;
    LONG y;
};

typedef struct tagPOINTER_DEVICE_CURSOR_INFO {
    ULONG cursorId;
    enum tagPOINTER_DEVICE_CURSOR_TYPE cursor;
};

typedef struct tagPOINTER_DEVICE_INFO {
    ULONG displayOrientation;
    PVOID device;
    enum tagPOINTER_DEVICE_TYPE pointerDeviceType;
    struct HMONITOR__ *monitor;
    ULONG startingCursorId;
    USHORT maxActiveContacts;
    WCHAR productString[520];
};

typedef struct tagPOINTER_DEVICE_PROPERTY {
    LONG logicalMin;
    LONG logicalMax;
    LONG physicalMin;
    LONG physicalMax;
    ULONG unit;
    ULONG unitExponent;
    USHORT usagePageId;
    USHORT usageId;
};

typedef struct tagPOINTER_INFO {
    ULONG pointerType;
    ULONG pointerId;
    ULONG frameId;
    ULONG pointerFlags;
    PVOID sourceDevice;
    struct HWND__ *hwndTarget;
    struct tagPOINT ptPixelLocation;
    struct tagPOINT ptHimetricLocation;
    struct tagPOINT ptPixelLocationRaw;
    struct tagPOINT ptHimetricLocationRaw;
    ULONG dwTime;
    ULONG historyCount;
    LONG InputData;
    ULONG dwKeyStates;
    ULONG64 PerformanceCount;
    enum tagPOINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
};

typedef struct tagPOINTER_INFO_UNION {
    struct tagPOINTER_INFO pointerInfo;
    struct tagPOINTER_TOUCH_INFO touchInfo;
    struct tagPOINTER_PEN_INFO penInfo;
};

typedef struct tagPOINTER_PEN_INFO {
    struct tagPOINTER_INFO pointerInfo;
    ULONG penFlags;
    ULONG penMask;
    ULONG pressure;
    ULONG rotation;
    LONG tiltX;
    LONG tiltY;
};

typedef struct tagPOINTER_TOUCH_INFO {
    struct tagPOINTER_INFO pointerInfo;
    ULONG touchFlags;
    ULONG touchMask;
    struct tagRECT rcContact;
    struct tagRECT rcContactRaw;
    ULONG orientation;
    ULONG pressure;
};

typedef struct tagPOINTER_TYPE_INFO {
    ULONG type;
    struct tagPOINTER_TOUCH_INFO touchInfo;
    struct tagPOINTER_PEN_INFO penInfo;
};

typedef struct tagPOINTF {
    FLOAT x;
    FLOAT y;
};

typedef struct tagPOINTFX {
    struct _FIXED x;
    struct _FIXED y;
};

typedef struct tagPOINTS {
    SHORT x;
    SHORT y;
};

typedef struct tagPOLYTEXTA {
    LONG x;
    LONG y;
    ULONG n;
    PCHAR lpstr;
    ULONG uiFlags;
    struct tagRECT rcl;
    PLONG pdx;
};

typedef struct tagPOLYTEXTW {
    LONG x;
    LONG y;
    ULONG n;
    PWCHAR lpstr;
    ULONG uiFlags;
    struct tagRECT rcl;
    PLONG pdx;
};

typedef struct tagPOSTINPUTINFO {
    ULONG cPointers;
    LONG testSyncFlag;
    struct tagPOINTER_INFO_UNION rgPointers[1];
};

typedef struct tagPOWERSTATEPARAMS {
    enum POWER_ACTION SystemAction;
    enum _SYSTEM_POWER_STATE MinSystemState;
    ULONG Flags;
    LONG FullScreenMode;
};

typedef struct tagPRINTPAGERANGE {
    ULONG nFromPage;
    ULONG nToPage;
};

typedef struct tagPROPBAG2 {
    ULONG dwType;
    USHORT vt;
    USHORT cfType;
    ULONG dwHint;
    PWCHAR pstrName;
    struct _GUID clsid;
};

typedef struct tagPROPLIST_ELEMENT {
    struct _tagpropertykey *pkey;
    enum PROPDESC_VIEW_FLAGS viewMask;
    enum PROPDESC_VIEW_FLAGS viewFlags;
};

typedef struct tagPROPPAGEINFO {
    ULONG cb;
    PWCHAR pszTitle;
    struct tagSIZE size;
    PWCHAR pszDocString;
    PWCHAR pszHelpFile;
    ULONG dwHelpContext;
};

typedef struct tagPROPSPEC {
    ULONG ulKind;
    ULONG propid;
    PWCHAR lpwstr;
};

typedef struct tagPROPVARIANT {
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    CHAR cVal;
    UCHAR bVal;
    SHORT iVal;
    USHORT uiVal;
    LONG lVal;
    ULONG ulVal;
    LONG intVal;
    ULONG uintVal;
    union _LARGE_INTEGER hVal;
    union _ULARGE_INTEGER uhVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    struct _FILETIME filetime;
    struct _GUID *puuid;
    struct tagCLIPDATA *pclipdata;
    PWCHAR bstrVal;
    struct tagBSTRBLOB bstrblobVal;
    struct tagBLOB blob;
    PCHAR pszVal;
    PWCHAR pwszVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct IStream *pStream;
    struct IStorage *pStorage;
    struct tagVersionedStream *pVersionedStream;
    struct tagSAFEARRAY *parray;
    struct tagCAC cac;
    struct tagCAUB caub;
    struct tagCAI cai;
    struct tagCAUI caui;
    struct tagCAL cal;
    struct tagCAUL caul;
    struct tagCAH cah;
    struct tagCAUH cauh;
    struct tagCAFLT caflt;
    struct tagCADBL cadbl;
    struct tagCABOOL cabool;
    struct tagCASCODE cascode;
    struct tagCACY cacy;
    struct tagCADATE cadate;
    struct tagCAFILETIME cafiletime;
    struct tagCACLSID cauuid;
    struct tagCACLIPDATA caclipdata;
    struct tagCABSTR cabstr;
    struct tagCABSTRBLOB cabstrblob;
    struct tagCALPSTR calpstr;
    struct tagCALPWSTR calpwstr;
    struct tagCAPROPVARIANT capropvar;
    PCHAR pcVal;
    PUCHAR pbVal;
    PSHORT piVal;
    PWCHAR puiVal;
    PLONG plVal;
    PULONG pulVal;
    PLONG pintVal;
    PULONG puintVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    struct tagDEC *pdecVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    PWCHAR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct tagSAFEARRAY **pparray;
    struct tagPROPVARIANT *pvarVal;
    struct tagDEC decVal;
};

typedef struct tagPSDA {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    ULONG Flags;
    struct tagPOINT ptPaperSize;
    struct tagRECT rtMinMargin;
    struct tagRECT rtMargin;
    struct HINSTANCE__ *hInstance;
    LONG64 lCustData;
    PULONG64 lpfnPageSetupHook;
    PULONG64 lpfnPagePaintHook;
    PCHAR lpPageSetupTemplateName;
    PVOID hPageSetupTemplate;
};

typedef struct tagPSDW {
    ULONG lStructSize;
    struct HWND__ *hwndOwner;
    PVOID hDevMode;
    PVOID hDevNames;
    ULONG Flags;
    struct tagPOINT ptPaperSize;
    struct tagRECT rtMinMargin;
    struct tagRECT rtMargin;
    struct HINSTANCE__ *hInstance;
    LONG64 lCustData;
    PULONG64 lpfnPageSetupHook;
    PULONG64 lpfnPagePaintHook;
    PWCHAR lpPageSetupTemplateName;
    PVOID hPageSetupTemplate;
};

typedef struct tagQACONTAINER {
    ULONG cbSize;
    struct IOleClientSite *pClientSite;
    struct IAdviseSinkEx *pAdviseSink;
    struct IPropertyNotifySink *pPropertyNotifySink;
    struct IUnknown *pUnkEventSink;
    ULONG dwAmbientFlags;
    ULONG colorFore;
    ULONG colorBack;
    struct IFont *pFont;
    struct IOleUndoManager *pUndoMgr;
    ULONG dwAppearance;
    LONG lcid;
    struct HPALETTE__ *hpal;
    struct IBindHost *pBindHost;
    struct IOleControlSite *pOleControlSite;
    struct IServiceProvider *pServiceProvider;
};

typedef struct tagQACONTROL {
    ULONG cbSize;
    ULONG dwMiscStatus;
    ULONG dwViewStatus;
    ULONG dwEventCookie;
    ULONG dwPropNotifyCookie;
    ULONG dwPointerActivationPolicy;
};

typedef struct tagQMSGENVELOPE {
    ULONG threadId;
    struct tagMSG msg;
    LONG testSyncFlag;
    struct tagInputRoutingInfo routingInfo;
};

typedef struct tagQMSGINPUTREPORT {
    LONG <unnamed-type-eventType>;
    enum {
        QMsgInputReport = 0
    } eventType;
    struct tagCANONICALQMSGENVELOPE qmsgEnvelope;
};

typedef struct tagQUERYCONTEXT {
    ULONG dwContext;
    struct tagCSPLATFORM Platform;
    ULONG Locale;
    ULONG dwVersionHi;
    ULONG dwVersionLo;
};

typedef struct tagRAWHID {
    ULONG dwSizeHid;
    ULONG dwCount;
    UCHAR bRawData[1];
};

typedef struct tagRAWINPUT {
    struct tagRAWINPUTHEADER header;
     <unnamed-type-data>;
    union {
        struct tagRAWMOUSE mouse;
        struct tagRAWKEYBOARD keyboard;
        struct tagRAWHID hid;
    } data;
};

typedef struct tagRAWINPUTDEVICE {
    USHORT usUsagePage;
    USHORT usUsage;
    ULONG dwFlags;
    struct HWND__ *hwndTarget;
};

typedef struct tagRAWINPUTDEVICELIST {
    PVOID hDevice;
    ULONG dwType;
};

typedef struct tagRAWINPUTHEADER {
    ULONG dwType;
    ULONG dwSize;
    PVOID hDevice;
    ULONG64 wParam;
};

typedef struct tagRAWKEYBOARD {
    USHORT MakeCode;
    USHORT Flags;
    USHORT Reserved;
    USHORT VKey;
    ULONG Message;
    ULONG ExtraInformation;
};

typedef struct tagRAWMOUSE {
    USHORT usFlags;
    ULONG ulButtons;
    USHORT usButtonFlags;
    USHORT usButtonData;
    ULONG ulRawButtons;
    LONG lLastX;
    LONG lLastY;
    ULONG ulExtraInformation;
};

typedef struct tagREALIZATION_INFO {
    UCHAR uFontTechnology;
    UCHAR CacheHint;
    USHORT Reserved;
    ULONG uRealizationID;
    ULONG uFontFileID;
};

typedef struct tagREBARBANDINFOA {
    ULONG cbSize;
    ULONG fMask;
    ULONG fStyle;
    ULONG clrFore;
    ULONG clrBack;
    PCHAR lpText;
    ULONG cch;
    LONG iImage;
    struct HWND__ *hwndChild;
    ULONG cxMinChild;
    ULONG cyMinChild;
    ULONG cx;
    struct HBITMAP__ *hbmBack;
    ULONG wID;
    ULONG cyChild;
    ULONG cyMaxChild;
    ULONG cyIntegral;
    ULONG cxIdeal;
    LONG64 lParam;
    ULONG cxHeader;
    struct tagRECT rcChevronLocation;
    ULONG uChevronState;
};

typedef struct tagREBARBANDINFOW {
    ULONG cbSize;
    ULONG fMask;
    ULONG fStyle;
    ULONG clrFore;
    ULONG clrBack;
    PWCHAR lpText;
    ULONG cch;
    LONG iImage;
    struct HWND__ *hwndChild;
    ULONG cxMinChild;
    ULONG cyMinChild;
    ULONG cx;
    struct HBITMAP__ *hbmBack;
    ULONG wID;
    ULONG cyChild;
    ULONG cyMaxChild;
    ULONG cyIntegral;
    ULONG cxIdeal;
    LONG64 lParam;
    ULONG cxHeader;
    struct tagRECT rcChevronLocation;
    ULONG uChevronState;
};

typedef struct tagREBARINFO {
    ULONG cbSize;
    ULONG fMask;
    struct _IMAGELIST *himl;
};

typedef struct tagRECONVERTSTRING {
    ULONG dwSize;
    ULONG dwVersion;
    ULONG dwStrLen;
    ULONG dwStrOffset;
    ULONG dwCompStrLen;
    ULONG dwCompStrOffset;
    ULONG dwTargetStrLen;
    ULONG dwTargetStrOffset;
};

typedef struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef struct tagREGISTERWORDA {
    PCHAR lpReading;
    PCHAR lpWord;
};

typedef struct tagREGISTERWORDW {
    PWCHAR lpReading;
    PWCHAR lpWord;
};

typedef struct tagRGBQUAD {
    UCHAR rgbBlue;
    UCHAR rgbGreen;
    UCHAR rgbRed;
    UCHAR rgbReserved;
};

typedef struct tagRGBTRIPLE {
    UCHAR rgbtBlue;
    UCHAR rgbtGreen;
    UCHAR rgbtRed;
};

typedef struct tagRID_DEVICE_INFO {
    ULONG cbSize;
    ULONG dwType;
    struct tagRID_DEVICE_INFO_MOUSE mouse;
    struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct tagRID_DEVICE_INFO_HID hid;
};

typedef struct tagRID_DEVICE_INFO_HEALTH {
    ULONG dwRimInputType;
    ULONG openStatus;
    ULONG readStatus;
    ULONG readCompletionStatus;
    LONG bDevInjection;
    LONG bDevConfigTouch;
    LONG bDevConfigPtp;
    LONG bRequestConfig;
    LONG bDevReading;
    LONG bDevFirstReadComplete;
    LONG bDevSiblingMouseDevice;
};

typedef struct tagRID_DEVICE_INFO_HID {
    ULONG dwVendorId;
    ULONG dwProductId;
    ULONG dwVersionNumber;
    USHORT usUsagePage;
    USHORT usUsage;
};

typedef struct tagRID_DEVICE_INFO_KEYBOARD {
    ULONG dwType;
    ULONG dwSubType;
    ULONG dwKeyboardMode;
    ULONG dwNumberOfFunctionKeys;
    ULONG dwNumberOfIndicators;
    ULONG dwNumberOfKeysTotal;
};

typedef struct tagRID_DEVICE_INFO_MOUSE {
    ULONG dwId;
    ULONG dwNumberOfButtons;
    ULONG dwSampleRate;
    LONG fHasHorizontalWheel;
};

typedef struct tagRPCOLEMESSAGE {
    PVOID reserved1;
    ULONG dataRepresentation;
    PVOID Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    PVOID reserved2[5];
    ULONG rpcFlags;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V2_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    ULONG IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V2_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    enum tagRpcCallClientLocality IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V3_A {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PUCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PUCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    ULONG IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
    ULONG ClientIdentifierBufferLength;
    PUCHAR ClientIdentifier;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V3_W {
    ULONG Version;
    ULONG Flags;
    ULONG ServerPrincipalNameBufferLength;
    PWCHAR ServerPrincipalName;
    ULONG ClientPrincipalNameBufferLength;
    PWCHAR ClientPrincipalName;
    ULONG AuthenticationLevel;
    ULONG AuthenticationService;
    LONG NullSession;
    LONG KernelModeCaller;
    ULONG ProtocolSequence;
    enum tagRpcCallClientLocality IsClientLocal;
    PVOID ClientPID;
    ULONG CallStatus;
    enum tagRpcCallType CallType;
    struct _RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;
    USHORT OpNum;
    struct _GUID InterfaceUuid;
    ULONG ClientIdentifierBufferLength;
    PUCHAR ClientIdentifier;
};

typedef struct tagRPC_EE_INFO_PARAM {
    enum tagExtendedErrorParamTypes ParameterType;
     <unnamed-type-u>;
    union {
        PCHAR AnsiString;
        PWCHAR UnicodeString;
        LONG LVal;
        SHORT SVal;
        ULONG64 PVal;
        struct tagBinaryParam BVal;
    } u;
};

typedef struct tagRPC_ERROR_ENUM_HANDLE {
    ULONG Signature;
    PVOID CurrentPos;
    PVOID Head;
};

typedef struct tagRPC_EXTENDED_ERROR_INFO {
    ULONG Version;
    PWCHAR ComputerName;
    ULONG ProcessID;
     <unnamed-type-u>;
    union {
        struct _SYSTEMTIME SystemTime;
        struct _FILETIME FileTime;
    } u;
    ULONG GeneratingComponent;
    ULONG Status;
    USHORT DetectionLocation;
    USHORT Flags;
    LONG NumberOfParameters;
    struct tagRPC_EE_INFO_PARAM Parameters[4];
};

typedef struct tagRemBRUSH {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemFORMATETC {
    ULONG cfFormat;
    ULONG ptd;
    ULONG dwAspect;
    LONG lindex;
    ULONG tymed;
};

typedef struct tagRemHBITMAP {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHENHMETAFILE {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHGLOBAL {
    LONG fNullHGlobal;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemHPALETTE {
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagRemSNB {
    ULONG ulCntStr;
    ULONG ulCntChar;
    WCHAR rgString[1];
};

typedef struct tagRemSTGMEDIUM {
    ULONG tymed;
    ULONG dwHandleType;
    ULONG pData;
    ULONG pUnkForRelease;
    ULONG cbData;
    UCHAR data[1];
};

typedef struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    struct tagSAFEARRAYBOUND rgsabound[1];
};

typedef struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

typedef struct tagSCROLLBARINFO {
    ULONG cbSize;
    struct tagRECT rcScrollBar;
    LONG dxyLineButton;
    LONG xyThumbTop;
    LONG xyThumbBottom;
    LONG reserved;
    ULONG rgstate[6];
};

typedef struct tagSCROLLINFO {
    ULONG cbSize;
    ULONG fMask;
    LONG nMin;
    LONG nMax;
    ULONG nPage;
    LONG nPos;
    LONG nTrackPos;
};

typedef struct tagSERIALIZEDPROPERTYVALUE {
    ULONG dwType;
    UCHAR rgb[1];
};

typedef struct tagSERIALIZEDPROPSTORAGE {
};

typedef struct tagSERIALKEYSA {
    ULONG cbSize;
    ULONG dwFlags;
    PCHAR lpszActivePort;
    PCHAR lpszPort;
    ULONG iBaudRate;
    ULONG iPortState;
    ULONG iActive;
};

typedef struct tagSERIALKEYSW {
    ULONG cbSize;
    ULONG dwFlags;
    PWCHAR lpszActivePort;
    PWCHAR lpszPort;
    ULONG iBaudRate;
    ULONG iPortState;
    ULONG iActive;
};

typedef struct tagSFVM_GETENUMFLAGS_DATA {
    ULONG mask;
    ULONG flagsIn;
};

typedef struct tagSHCNF_PRINTJOB_DATA {
    ULONG JobId;
    ULONG Status;
    ULONG TotalPages;
    ULONG Size;
    ULONG PagesPrinted;
};

typedef struct tagSHELL_INPUT_USAGE_DATA_INFO {
    ULONG pidPrev;
    ULONG pidCurrent;
    USHORT KeyboardInputInS;
    USHORT MouseInputInS;
    USHORT HidInputInS;
    USHORT TouchInputInS;
    USHORT PenInputInS;
};

typedef struct tagSHELL_TRACKED_WINDOW_POS_CHANGED {
    LONG fShellControlledPosition;
    enum TRACKED_WINDOW_STATE windowState;
    struct tagRECT rcFinal;
};

typedef struct tagSHELL_TRACKED_WINDOW_TRACKING_INFO {
    struct tagSIZE minTrackSize;
    struct tagSIZE maxTrackSize;
    USHORT wWindowDpi;
};

typedef struct tagSHELL_WND_MGMT_SIMPLE_PAYLOAD {
    ULONG64 wParam;
    LONG64 lParam;
};

typedef struct tagSHUTDOWN_BLOCK_DESCRIPTION {
    struct HWND__ *hwnd;
    struct HICON__ *hIcon;
    WCHAR wszBlockReason[261];
    WCHAR wszWindowCaption[261];
};

typedef struct tagSIMPLEHAPTICSCTRL_DEVICE_INFO {
    ULONG hapticsFlags;
    ULONG waveformCount;
};

typedef struct tagSIZE {
    LONG cx;
    LONG cy;
};

typedef struct tagSMDATA {
    ULONG dwMask;
    ULONG dwFlags;
    struct HMENU__ *hmenu;
    struct HWND__ *hwnd;
    ULONG uId;
    ULONG uIdParent;
    ULONG uIdAncestor;
    struct IUnknown *punk;
    struct _ITEMIDLIST *pidlFolder;
    struct _ITEMIDLIST *pidlItem;
    struct IShellFolder *psf;
    PVOID pvUserData;
};

typedef struct tagSMINFO {
    ULONG dwMask;
    ULONG dwType;
    ULONG dwFlags;
    LONG iIcon;
};

typedef struct tagSOLE_AUTHENTICATION_INFO {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PVOID pAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_LIST {
    ULONG cAuthInfo;
    struct tagSOLE_AUTHENTICATION_INFO *aAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_SERVICE {
    ULONG dwAuthnSvc;
    ULONG dwAuthzSvc;
    PWCHAR pPrincipalName;
    HRESULT hr;
};

typedef struct tagSOUNDSENTRYA {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iFSTextEffect;
    ULONG iFSTextEffectMSec;
    ULONG iFSTextEffectColorBits;
    ULONG iFSGrafEffect;
    ULONG iFSGrafEffectMSec;
    ULONG iFSGrafEffectColor;
    ULONG iWindowsEffect;
    ULONG iWindowsEffectMSec;
    PCHAR lpszWindowsEffectDLL;
    ULONG iWindowsEffectOrdinal;
};

typedef struct tagSOUNDSENTRYW {
    ULONG cbSize;
    ULONG dwFlags;
    ULONG iFSTextEffect;
    ULONG iFSTextEffectMSec;
    ULONG iFSTextEffectColorBits;
    ULONG iFSGrafEffect;
    ULONG iFSGrafEffectMSec;
    ULONG iFSGrafEffectColor;
    ULONG iWindowsEffect;
    ULONG iWindowsEffectMSec;
    PWCHAR lpszWindowsEffectDLL;
    ULONG iWindowsEffectOrdinal;
};

typedef struct tagSTATDATA {
    struct tagFORMATETC formatetc;
    ULONG advf;
    struct IAdviseSink *pAdvSink;
    ULONG dwConnection;
};

typedef struct tagSTATPROPSETSTG {
    struct _GUID fmtid;
    struct _GUID clsid;
    ULONG grfFlags;
    struct _FILETIME mtime;
    struct _FILETIME ctime;
    struct _FILETIME atime;
    ULONG dwOSVersion;
};

typedef struct tagSTATPROPSTG {
    PWCHAR lpwstrName;
    ULONG propid;
    USHORT vt;
};

typedef struct tagSTATSTG {
    PWCHAR pwcsName;
    ULONG type;
    union _ULARGE_INTEGER cbSize;
    struct _FILETIME mtime;
    struct _FILETIME ctime;
    struct _FILETIME atime;
    ULONG grfMode;
    ULONG grfLocksSupported;
    struct _GUID clsid;
    ULONG grfStateBits;
    ULONG reserved;
};

typedef struct tagSTGMEDIUM {
    ULONG tymed;
    struct HBITMAP__ *hBitmap;
    PVOID hMetaFilePict;
    struct HENHMETAFILE__ *hEnhMetaFile;
    PVOID hGlobal;
    PWCHAR lpszFileName;
    struct IStream *pstm;
    struct IStorage *pstg;
    struct IUnknown *pUnkForRelease;
};

typedef struct tagSTGOPTIONS {
    USHORT usVersion;
    USHORT reserved;
    ULONG ulSectorSize;
    PWCHAR pwcsTemplateFile;
};

typedef struct tagSTICKYKEYS {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct tagSTYLEBUFA {
    ULONG dwStyle;
    CHAR szDescription[32];
};

typedef struct tagSTYLEBUFW {
    ULONG dwStyle;
    WCHAR szDescription[32];
};

typedef struct tagSTYLESTRUCT {
    ULONG styleOld;
    ULONG styleNew;
};

typedef struct tagSWITCH_CONTEXT {
    struct tagSWITCH_CONTEXT_ATTRIBUTE Attribute;
    struct tagSWITCH_CONTEXT_DATA Data;
};

typedef struct tagSWITCH_CONTEXT_ATTRIBUTE {
    ULONG64 ulContextUpdateCounter;
    LONG fAllowContextUpdate;
    LONG fEnableTrace;
    ULONG64 EtwHandle;
};

typedef struct tagSWITCH_CONTEXT_DATA {
    ULONG64 ullOsMaxVersionTested;
    ULONG ulTargetPlatform;
    ULONG64 ullContextMinimum;
    struct _GUID guPlatform;
    struct _GUID guMinPlatform;
    ULONG ulContextSource;
    ULONG ulElementCount;
    struct _GUID guElements[48];
};

typedef struct tagServerInformation {
    ULONG dwServerPid;
    ULONG dwServerTid;
    ULONG64 ui64ServerAddress;
};

typedef struct tagStorageLayout {
    ULONG LayoutType;
    PWCHAR pwcsElementName;
    union _LARGE_INTEGER cOffset;
    union _LARGE_INTEGER cBytes;
};

typedef struct tagTBADDBITMAP {
    struct HINSTANCE__ *hInst;
    ULONG64 nID;
};

typedef struct tagTBSAVEPARAMSA {
    struct HKEY__ *hkr;
    PCHAR pszSubKey;
    PCHAR pszValueName;
};

typedef struct tagTBSAVEPARAMSW {
    struct HKEY__ *hkr;
    PWCHAR pszSubKey;
    PWCHAR pszValueName;
};

typedef struct tagTCHITTESTINFO {
    struct tagPOINT pt;
    ULONG flags;
};

typedef struct tagTCITEMA {
    ULONG mask;
    ULONG dwState;
    ULONG dwStateMask;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
};

typedef struct tagTCITEMHEADERA {
    ULONG mask;
    ULONG lpReserved1;
    ULONG lpReserved2;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
};

typedef struct tagTCITEMHEADERW {
    ULONG mask;
    ULONG lpReserved1;
    ULONG lpReserved2;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
};

typedef struct tagTCITEMW {
    ULONG mask;
    ULONG dwState;
    ULONG dwStateMask;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG64 lParam;
};

typedef struct tagTCKEYDOWN {
    struct tagNMHDR hdr;
    USHORT wVKey;
    ULONG flags;
};

typedef struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    UCHAR tmFirstChar;
    UCHAR tmLastChar;
    UCHAR tmDefaultChar;
    UCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
};

typedef struct tagTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    UCHAR tmItalic;
    UCHAR tmUnderlined;
    UCHAR tmStruckOut;
    UCHAR tmPitchAndFamily;
    UCHAR tmCharSet;
};

typedef struct tagTITLEBARINFO {
    ULONG cbSize;
    struct tagRECT rcTitleBar;
    ULONG rgstate[6];
};

typedef struct tagTITLEBARINFOEX {
    ULONG cbSize;
    struct tagRECT rcTitleBar;
    ULONG rgstate[6];
    struct tagRECT rgrect[6];
};

typedef struct tagTLIBATTR {
    struct _GUID guid;
    ULONG lcid;
    enum tagSYSKIND syskind;
    USHORT wMajorVerNum;
    USHORT wMinorVerNum;
    USHORT wLibFlags;
};

typedef struct tagTOGGLEKEYS {
    ULONG cbSize;
    ULONG dwFlags;
};

typedef struct tagTOOLINFOA {
    ULONG cbSize;
    ULONG uFlags;
    struct HWND__ *hwnd;
    ULONG64 uId;
    struct tagRECT rect;
    struct HINSTANCE__ *hinst;
    PCHAR lpszText;
    LONG64 lParam;
    PVOID lpReserved;
};

typedef struct tagTOOLINFOW {
    ULONG cbSize;
    ULONG uFlags;
    struct HWND__ *hwnd;
    ULONG64 uId;
    struct tagRECT rect;
    struct HINSTANCE__ *hinst;
    PWCHAR lpszText;
    LONG64 lParam;
    PVOID lpReserved;
};

typedef struct tagTOUCHINPUT {
    LONG x;
    LONG y;
    PVOID hSource;
    ULONG dwID;
    ULONG dwFlags;
    ULONG dwMask;
    ULONG dwTime;
    ULONG64 dwExtraInfo;
    ULONG cxContact;
    ULONG cyContact;
};

typedef struct tagTOUCH_GESTURE_SETTINGS {
    ULONG panningEnabled;
    ULONG inertiaEnabled;
    ULONG bouncingEnabled;
    ULONG friction;
    ULONG multiTouchEnabled;
    ULONG doubleTapDistance;
    ULONG doubleTapTime;
    ULONG touchEnabled;
    ULONG holdTimeAnimation;
    ULONG holdTimeBeforeAnimation;
    ULONG holdMode;
    ULONG mobileInertiaEnabled;
    ULONG minimumVelocity;
    ULONG thumbFlickEnabled;
};

typedef struct tagTOUCH_HIT_TESTING_INPUT {
    ULONG pointerId;
    struct tagPOINT point;
    struct tagRECT boundingBox;
    struct tagRECT nonOccludedBoundingBox;
    ULONG orientation;
};

typedef struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION {
    USHORT score;
    struct tagPOINT adjustedPoint;
};

typedef struct tagTOUCH_PAD_PARAMETERS_V0 {
    ULONG versionNumber;
    ULONG legacyFeatures;
    enum tagTOUCH_PAD_AAP_LEVEL aAPThreshold;
    LONG internalPadEnabled : 1;
    LONG externalPadEnabled : 1;
    LONG enableEdgy : 1;
    LONG scrollDirection : 1;
    LONG legacyPadPresent : 1;
    LONG externalPadPresent : 1;
    LONG internalPadPresent : 1;
    LONG panEnabled : 1;
    LONG zoomEnabled : 1;
    LONG tapEnabled : 1;
    LONG twoFingerTapEnabled : 1;
    ULONG cursorSpeed;
    LONG leaveOnWithMouse : 1;
    LONG enableRightClickZone : 1;
    LONG enableTapAndDrag : 1;
    LONG currentlyActive : 1;
    LONG externalMousePresent : 1;
    LONG supportsFourFingers : 1;
    LONG usePhysicalMonitorDpi : 1;
    LONG honorMouseAccelSetting : 1;
};

typedef struct tagTPMPARAMS {
    ULONG cbSize;
    struct tagRECT rcExclude;
};

typedef struct tagTRACKMOUSEEVENT {
    ULONG cbSize;
    ULONG dwFlags;
    struct HWND__ *hwndTrack;
    ULONG dwHoverTime;
};

typedef struct tagTRACKPART {
    PWCHAR pszClassName;
    ULONG nPartId;
    struct _GUID *guid;
};

typedef struct tagTRBTHUMBPOSCHANGING {
    struct tagNMHDR hdr;
    ULONG dwPos;
    LONG nReason;
};

typedef struct tagTTPOLYCURVE {
    USHORT wType;
    USHORT cpfx;
    struct tagPOINTFX apfx[1];
};

typedef struct tagTTPOLYGONHEADER {
    ULONG cb;
    ULONG dwType;
    struct tagPOINTFX pfxStart;
};

typedef struct tagTVDISPINFOA {
    struct tagNMHDR hdr;
    struct tagTVITEMA item;
};

typedef struct tagTVDISPINFOEXA {
    struct tagNMHDR hdr;
    struct tagTVITEMEXA item;
};

typedef struct tagTVDISPINFOEXW {
    struct tagNMHDR hdr;
    struct tagTVITEMEXW item;
};

typedef struct tagTVDISPINFOW {
    struct tagNMHDR hdr;
    struct tagTVITEMW item;
};

typedef struct tagTVGETITEMPARTRECTINFO {
    struct _TREEITEM *hti;
    struct tagRECT *prc;
    enum _TVITEMPART partID;
};

typedef struct tagTVHITTESTINFO {
    struct tagPOINT pt;
    ULONG flags;
    struct _TREEITEM *hItem;
};

typedef struct tagTVINSERTSTRUCTA {
    struct _TREEITEM *hParent;
    struct _TREEITEM *hInsertAfter;
    struct tagTVITEMEXA itemex;
    struct tagTVITEMA item;
};

typedef struct tagTVINSERTSTRUCTW {
    struct _TREEITEM *hParent;
    struct _TREEITEM *hInsertAfter;
    struct tagTVITEMEXW itemex;
    struct tagTVITEMW item;
};

typedef struct tagTVITEMA {
    ULONG mask;
    struct _TREEITEM *hItem;
    ULONG state;
    ULONG stateMask;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG cChildren;
    LONG64 lParam;
};

typedef struct tagTVITEMCHANGE {
    struct tagNMHDR hdr;
    ULONG uChanged;
    struct _TREEITEM *hItem;
    ULONG uStateNew;
    ULONG uStateOld;
    LONG64 lParam;
};

typedef struct tagTVITEMEXA {
    ULONG mask;
    struct _TREEITEM *hItem;
    ULONG state;
    ULONG stateMask;
    PCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG cChildren;
    LONG64 lParam;
    LONG iIntegral;
    ULONG uStateEx;
    struct HWND__ *hwnd;
    LONG iExpandedImage;
    LONG iReserved;
};

typedef struct tagTVITEMEXW {
    ULONG mask;
    struct _TREEITEM *hItem;
    ULONG state;
    ULONG stateMask;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG cChildren;
    LONG64 lParam;
    LONG iIntegral;
    ULONG uStateEx;
    struct HWND__ *hwnd;
    LONG iExpandedImage;
    LONG iReserved;
};

typedef struct tagTVITEMW {
    ULONG mask;
    struct _TREEITEM *hItem;
    ULONG state;
    ULONG stateMask;
    PWCHAR pszText;
    LONG cchTextMax;
    LONG iImage;
    LONG iSelectedImage;
    LONG cChildren;
    LONG64 lParam;
};

typedef struct tagTVKEYDOWN {
    struct tagNMHDR hdr;
    USHORT wVKey;
    ULONG flags;
};

typedef struct tagTVSORTCB {
    struct _TREEITEM *hParent;
    PLONG lpfnCompare;
    LONG64 lParam;
};

typedef struct tagTYPEATTR {
    struct _GUID guid;
    ULONG lcid;
    ULONG dwReserved;
    LONG memidConstructor;
    LONG memidDestructor;
    PWCHAR lpstrSchema;
    ULONG cbSizeInstance;
    enum tagTYPEKIND typekind;
    USHORT cFuncs;
    USHORT cVars;
    USHORT cImplTypes;
    USHORT cbSizeVft;
    USHORT cbAlignment;
    USHORT wTypeFlags;
    USHORT wMajorVerNum;
    USHORT wMinorVerNum;
    struct tagTYPEDESC tdescAlias;
    struct tagIDLDESC idldescType;
};

typedef struct tagTYPEDESC {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    ULONG hreftype;
    USHORT vt;
};

typedef struct tagTouchPredictionParameters {
    ULONG cbSize;
    ULONG dwLatency;
    ULONG dwSampleTime;
    ULONG bUseHWTimeStamp;
};

typedef struct tagUAHDRAWMENUITEM {
    struct tagDRAWITEMSTRUCT dis;
    struct tagUAHMENU um;
    struct tagUAHMENUITEM umi;
};

typedef struct tagUAHMEASUREMENUITEM {
    struct tagMEASUREITEMSTRUCT mis;
    struct tagUAHMENU um;
    struct tagUAHMENUITEM umi;
};

typedef struct tagUAHMENU {
    struct HMENU__ *hmenu;
    struct HDC__ *hdc;
    ULONG dwFlags;
};

typedef struct tagUAHMENUITEM {
    LONG iPosition;
    union tagUAHMENUITEMMETRICS umim;
    struct tagUAHMENUPOPUPMETRICS umpm;
};

typedef struct tagUAHMENUPOPUPMETRICS {
    LONG rgcx[4];
    LONG fUnused : 1;
};

typedef struct tagUIPI_INFO {
    ULONG dwIntegrityLevel;
    ULONG dwLowboxNumber;
};

typedef struct tagUMFD_WINLOGON_ESCAPE_ARGUMENT {
    enum UMFD_WINLOGON_COMMAND Command;
    struct {
        struct {
            PVOID FontDrvHost;
        } In;
    } InitializeAndRegisterHost;
    struct {
        struct {
            LONG TerminateForRelaunch;
        } In;
    } TerminateHost;
};

typedef struct tagUPDATELAYEREDWINDOWINFO {
    ULONG cbSize;
    struct HDC__ *hdcDst;
    struct tagPOINT *pptDst;
    struct tagSIZE *psize;
    struct HDC__ *hdcSrc;
    struct tagPOINT *pptSrc;
    ULONG crKey;
    struct _BLENDFUNCTION *pblend;
    ULONG dwFlags;
    struct tagRECT *prcDirty;
};

typedef struct tagUSAGE_PROPERTIES {
    USHORT level;
    USHORT page;
    USHORT usage;
    LONG logicalMinimum;
    LONG logicalMaximum;
    USHORT unit;
    USHORT exponent;
    UCHAR count;
    LONG physicalMinimum;
    LONG physicalMaximum;
};

typedef struct tagUSERAPIHOOK {
    ULONG cbSize;
    PLONG64 pfnDefWindowProcA;
    PLONG64 pfnDefWindowProcW;
    struct tagMSGMASK mmDWP;
    PLONG pfnGetScrollInfo;
    PLONG pfnSetScrollInfo;
    PLONG pfnEnableScrollBar;
    PLONG pfnAdjustWindowRectEx;
    PLONG pfnSetWindowRgn;
    struct tagUSEROWPINFO uoiWnd;
    struct tagUSEROWPINFO uoiDlg;
    PLONG pfnGetSystemMetrics;
    PLONG pfnSystemParametersInfoA;
    PLONG pfnSystemParametersInfoW;
    PLONG pfnForceResetUserApiHook;
    PLONG pfnDrawFrameControl;
    PLONG pfnDrawCaption;
    PVOID pfnMDIRedrawFrame;
    PVOID pfnBroadcastThemeChange;
    PLONG pfnGetSystemMetricsForDpi;
    PLONG pfnSystemParametersInfoForDpi;
    PULONG pfnGetWindowProcess;
};

typedef struct tagUSERAPIHOOKINIT {
    ULONG cbSize;
    PWCHAR lpszLibFileName;
    PWCHAR lpszLibFunctionName;
    PWCHAR lpszLibFileNameWOW;
    PWCHAR lpszLibFunctionNameWOW;
};

typedef struct tagUSEROBJECTFLAGS {
    LONG fInherit;
    LONG fReserved;
    ULONG dwFlags;
};

typedef struct tagUSEROWPINFO {
    PLONG pfnBeforeOWP;
    PLONG pfnAfterOWP;
    struct tagMSGMASK mm;
};

typedef struct tagVARDESC {
    LONG memid;
    PWCHAR lpstrSchema;
    ULONG oInst;
    struct tagVARIANT *lpvarValue;
    struct tagELEMDESC elemdescVar;
    USHORT wVarFlags;
    enum tagVARKIND varkind;
};

typedef struct tagVARIANT {
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    LONG64 llVal;
    LONG lVal;
    UCHAR bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    SHORT boolVal;
    LONG scode;
    union tagCY cyVal;
    DOUBLE date;
    PWCHAR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct tagSAFEARRAY *parray;
    PUCHAR pbVal;
    PSHORT piVal;
    PLONG plVal;
    PLONG64 pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    PSHORT pboolVal;
    PLONG pscode;
    union tagCY *pcyVal;
    DOUBLE *pdate;
    PWCHAR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    struct tagSAFEARRAY **pparray;
    struct tagVARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONG64 ullVal;
    LONG intVal;
    ULONG uintVal;
    struct tagDEC *pdecVal;
    PCHAR pcVal;
    PWCHAR puiVal;
    PULONG pulVal;
    PULONG64 pullVal;
    PLONG pintVal;
    PULONG puintVal;
    PVOID pvRecord;
    struct IRecordInfo *pRecInfo;
    struct tagDEC decVal;
};

typedef struct tagVS_FIXEDFILEINFO {
    ULONG dwSignature;
    ULONG dwStrucVersion;
    ULONG dwFileVersionMS;
    ULONG dwFileVersionLS;
    ULONG dwProductVersionMS;
    ULONG dwProductVersionLS;
    ULONG dwFileFlagsMask;
    ULONG dwFileFlags;
    ULONG dwFileOS;
    ULONG dwFileType;
    ULONG dwFileSubtype;
    ULONG dwFileDateMS;
    ULONG dwFileDateLS;
};

typedef struct tagVersionedStream {
    struct _GUID guidVersion;
    struct IStream *pStream;
};

typedef struct tagWAVEINCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagWAVEINCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagWAVEINCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
};

typedef struct tagWAVEINCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
};

typedef struct tagWAVEOUTCAPS2A {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagWAVEOUTCAPS2W {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    ULONG dwSupport;
    struct _GUID ManufacturerGuid;
    struct _GUID ProductGuid;
    struct _GUID NameGuid;
};

typedef struct tagWAVEOUTCAPSA {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    CHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    ULONG dwSupport;
};

typedef struct tagWAVEOUTCAPSW {
    USHORT wMid;
    USHORT wPid;
    ULONG vDriverVersion;
    WCHAR szPname[32];
    ULONG dwFormats;
    USHORT wChannels;
    USHORT wReserved1;
    ULONG dwSupport;
};

typedef struct tagWCRANGE {
    WCHAR wcLow;
    USHORT cGlyphs;
};

typedef struct tagWINDOWCOMPOSITIONATTRIBDATA {
    enum WINDOWCOMPOSITIONATTRIB Attrib;
    PVOID pvData;
    ULONG cbData;
};

typedef struct tagWINDOWCOMPOSITIONATTRIBDATA_UNION {
    LONG b;
    enum NCRENDERINGPOLICY NCRenderPolicy;
    struct tagRECT rc;
    ULONG dw;
    struct NCADORNMENT_INFO NCAdornmentInfo;
    struct ACCENT_POLICY AccentPolicy;
    struct HWND__ *hWnd;
};

typedef struct tagWINDOWINFO {
    ULONG cbSize;
    struct tagRECT rcWindow;
    struct tagRECT rcClient;
    ULONG dwStyle;
    ULONG dwExStyle;
    ULONG dwWindowStatus;
    ULONG cxWindowBorders;
    ULONG cyWindowBorders;
    USHORT atomWindowType;
    USHORT wCreatorVersion;
};

typedef struct tagWINDOWPLACEMENT {
    ULONG length;
    ULONG flags;
    ULONG showCmd;
    struct tagPOINT ptMinPosition;
    struct tagPOINT ptMaxPosition;
    struct tagRECT rcNormalPosition;
};

typedef struct tagWINDOWPOS {
    struct HWND__ *hwnd;
    struct HWND__ *hwndInsertAfter;
    LONG x;
    LONG y;
    LONG cx;
    LONG cy;
    ULONG flags;
};

typedef struct tagWINDOW_INPUTSINK_HINT {
    struct HWND__ *hwndTopLevel;
    LONG bInputSinkInSubtree;
};

typedef struct tagWINDOW_SIZE_STARTING {
    struct tagRECT rcStart;
    LONG htPart;
    ULONG uModifiers;
};

typedef struct tagWNDCLASSA {
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PCHAR lpszMenuName;
    PCHAR lpszClassName;
};

typedef struct tagWNDCLASSEXA {
    ULONG cbSize;
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PCHAR lpszMenuName;
    PCHAR lpszClassName;
    struct HICON__ *hIconSm;
};

typedef struct tagWNDCLASSEXW {
    ULONG cbSize;
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PWCHAR lpszMenuName;
    PWCHAR lpszClassName;
    struct HICON__ *hIconSm;
};

typedef struct tagWNDCLASSW {
    ULONG style;
    PLONG64 lpfnWndProc;
    LONG cbClsExtra;
    LONG cbWndExtra;
    struct HINSTANCE__ *hInstance;
    struct HICON__ *hIcon;
    struct HICON__ *hCursor;
    struct HBRUSH__ *hbrBackground;
    PWCHAR lpszMenuName;
    PWCHAR lpszClassName;
};

typedef struct tagWSINFO {
    WCHAR ProtocolName[10];
    WCHAR AudioDriverName[10];
};

typedef struct tagWTSSESSION_NOTIFICATION {
    ULONG cbSize;
    ULONG dwSessionId;
};

typedef struct tagXFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

typedef struct threadlocaleinfostruct {
    LONG refcount;
    ULONG lc_codepage;
    ULONG lc_collate_cp;
    ULONG lc_handle[6];
    struct tagLC_ID lc_id[6];
     <unnamed-type-lc_category>;
    struct {
        PCHAR locale;
        PWCHAR wlocale;
        PLONG refcount;
        PLONG wrefcount;
    } lc_category[6];
    LONG lc_clike;
    LONG mb_cur_max;
    PLONG lconv_intl_refcount;
    PLONG lconv_num_refcount;
    PLONG lconv_mon_refcount;
    struct lconv *lconv;
    PLONG ctype1_refcount;
    PWCHAR ctype1;
    PUSHORT pctype;
    PUCHAR pclmap;
    PUCHAR pcumap;
    struct __lc_time_data *lc_time_curr;
};

typedef struct threadmbcinfostruct {
};

typedef struct timecaps_tag {
    ULONG wPeriodMin;
    ULONG wPeriodMax;
};

typedef struct timeval {
    LONG tv_sec;
    LONG tv_usec;
};

typedef struct tm {
    LONG tm_sec;
    LONG tm_min;
    LONG tm_hour;
    LONG tm_mday;
    LONG tm_mon;
    LONG tm_year;
    LONG tm_wday;
    LONG tm_yday;
    LONG tm_isdst;
};

typedef struct type {
    PWCHAR className;
    PWCHAR apiName;
    PCHAR specialization;
    PLONG counterReference;
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > next;
    VOID ApiData;
    VOID ApiData;
    VOID ~ApiData;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *operator=;
    PVOID __vecDelDtor;
};

typedef struct val_context {
    LONG valuelen;
    PVOID value_context;
    PVOID val_buff_ptr;
};

typedef struct value_entA {
    PCHAR ve_valuename;
    ULONG ve_valuelen;
    ULONG64 ve_valueptr;
    ULONG ve_type;
};

typedef struct value_entW {
    PWCHAR ve_valuename;
    ULONG ve_valuelen;
    ULONG64 ve_valueptr;
    ULONG ve_type;
};

typedef struct waveformat_tag {
    USHORT wFormatTag;
    USHORT nChannels;
    ULONG nSamplesPerSec;
    ULONG nAvgBytesPerSec;
    USHORT nBlockAlign;
};

typedef struct wavehdr_tag {
    PCHAR lpData;
    ULONG dwBufferLength;
    ULONG dwBytesRecorded;
    ULONG64 dwUser;
    ULONG dwFlags;
    ULONG dwLoops;
    struct wavehdr_tag *lpNext;
    ULONG64 reserved;
};

typedef struct wil::CallContextInfo {
    LONG contextId;
    PCHAR contextName;
    PWCHAR contextMessage;
};

typedef struct wil::DiagnosticsInfo {
    PVOID returnAddress;
    PCHAR file;
    PCHAR name;
    USHORT line;
    VOID DiagnosticsInfo;
    VOID DiagnosticsInfo;
    VOID DiagnosticsInfo;
};

typedef struct wil::FailureInfo {
    enum wil::FailureType type;
    HRESULT hr;
    LONG failureId;
    PWCHAR pszMessage;
    ULONG threadId;
    PCHAR pszCode;
    PCHAR pszFunction;
    PCHAR pszFile;
    ULONG uLineNumber;
    LONG cFailureCount;
    PCHAR pszCallContext;
    struct wil::CallContextInfo callContextOriginating;
    struct wil::CallContextInfo callContextCurrent;
    PCHAR pszModule;
    PVOID returnAddress;
    PVOID callerReturnAddress;
};

typedef struct wil::FeatureProperties {
    enum wil::FeatureChangeTime changeTime;
    enum wil::FeatureStage stage;
    BOOLEAN isEnabledByDefault;
    USHORT version;
    USHORT baseVersion;
    BOOLEAN isEnabled;
};

typedef struct wil::PaintDC {
    struct HWND__ *hwnd;
    struct tagPAINTSTRUCT ps;
    VOID PaintDC;
    struct HDC__ *operator struct HDC__ *;
    VOID Close;
    VOID __dflt_ctor_closure;
};

typedef struct wil::SelectResult {
    PVOID hgdi;
    struct HDC__ *hdc;
    VOID SelectResult;
    PVOID operator void *;
    VOID Close;
};

typedef struct wil::StagingControl {
    ULONG id;
    enum wil::FeatureEnabledState state;
};

typedef struct wil::WNF_CHANGE_STAMP_STRUCT {
    ULONG value;
    ULONG operator unsigned long;
    VOID AssignToOptParam;
    VOID WNF_CHANGE_STAMP_STRUCT;
};

typedef struct wil::WindowDC {
    struct HDC__ *dc;
    struct HWND__ *hwnd;
    VOID WindowDC;
    struct HDC__ *operator struct HDC__ *;
    VOID Close;
};

typedef struct wil::cotaskmem_secure_deleter {
};

typedef struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData {
    PWCHAR className;
    PWCHAR apiName;
    PCHAR specialization;
    PLONG counterReference;
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > next;
    VOID ApiData;
    VOID ApiData;
    VOID ~ApiData;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::ApiTelemetryLogger::StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct wil::details::DestroyThreadPoolIo<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolIo<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolIo<2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::RtlThreadPoolMethods,2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWait<2> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<0> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<1> {
    VOID Destroy;
};

typedef struct wil::details::DestroyThreadPoolWork<2> {
    VOID Destroy;
};

typedef struct wil::details::EnabledStateManager::CachedFeaturePropertyData {
    enum wil_FeatureChangeTime changeTime;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct wil::details::EnabledStateManager::CachedUsageData {
    ULONG id;
    union wil_details_FeaturePropertyCache *data;
};

typedef struct wil::details::EnabledStateManager::RecordCachedUsageUnderLock::__l9::Change {
    enum wil_details_ServiceReportingKind kind;
    ULONG count;
};

typedef struct wil::details::FeatureLogging::StaticHandle {
    struct _TlgProvider_t *handle;
    VOID StaticHandle;
};

typedef struct wil::details::FeatureTestState {
    ULONG featureId;
    enum wil::FeatureEnabledState state;
    struct wil::details::FeatureTestState *next;
    VOID Reset;
};

typedef struct wil::details::FeatureTraitsBase {
    enum wil::CustomReportingKind CustomReportingKind;
    enum wil::details::EmptyVariant Variant;
    enum wil::details::EmptyVariant defaultVariant;
    enum wil_VariantPayloadType payloadType;
    ULONG defaultPayloadValue;
    USHORT version;
    USHORT baseVersion;
    enum wil::FeatureStage stageOverride;
    enum wil::FeatureStage stageChkOverride;
    enum wil::FeatureChangeTime changeTime;
    enum wil::UsageReportingMode usageReportingMode;
    BOOLEAN ShouldBeEnabledForDependentFeature_DefaultDisabled;
    BOOLEAN ShouldBeEnabledForDependentFeature_DefaultEnabled;
    BOOLEAN AreDependenciesEnabled;
    PCHAR GetEMail;
    PCHAR GetLink;
};

typedef struct wil::details::FeatureUsageDurationData {
    ULONG featureId;
    BOOLEAN enabled;
    enum wil::ReportingKind kind;
    union _LARGE_INTEGER counterStart;
    VOID FeatureUsageDurationData;
    VOID Stop;
};

typedef struct wil::details::IFailureCallback {
Error: Could not get member name.
    BOOLEAN NotifyFailure;
    VOID IFailureCallback;
    VOID IFailureCallback;
    VOID IFailureCallback;
    struct wil::details::IFailureCallback *operator=;
    struct wil::details::IFailureCallback *operator=;
};

typedef struct wil::details::IFunctor {
Error: Could not get member name.
    HRESULT Run;
    VOID IFunctor;
    VOID IFunctor;
    VOID IFunctor;
    struct wil::details::IFunctor *operator=;
    struct wil::details::IFunctor *operator=;
};

typedef struct wil::details::IFunctorHost {
Error: Could not get member name.
    HRESULT Run;
    HRESULT ExceptionThrown;
    VOID IFunctorHost;
    VOID IFunctorHost;
    VOID IFunctorHost;
    struct wil::details::IFunctorHost *operator=;
    struct wil::details::IFunctorHost *operator=;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_AcrylicForEveryone> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_ActivitiesInTaskView> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CUIPopupHelper> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CredUI_ConsoleMode> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_CredUI_EnableTestHooks_Development>,wil::Feature<__WilFeatureTraits_Feature_CredUI_ConsoleMode> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DesktopSplashScreenSuppression> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_DragDropWithComponentUI> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_LogonUI_EnableTestHooks_Development> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_PeopleAppUpsell> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_PeopleBar> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TabShell>,wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost>,wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeFavicon>,wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_TaskbarEdgeTabBlowout> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_ThemeSettings> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_WindowManagerDesktop> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_WorkFilesAsPersonalToUsb> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlAllUpView> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_XamlExplorerHost>,wil::Feature<__WilFeatureTraits_Feature_DesktopSwitcherDataModel> > {
    BOOLEAN IsEnabled;
};

typedef struct wil::details::RtlThreadPoolMethods {
    VOID SetThreadpoolTimer;
    VOID WaitForThreadpoolTimerCallbacks;
    VOID CloseThreadpoolTimer;
};

typedef struct wil::details::SecureZeroData {
    PVOID pointer;
    ULONG64 sizeBytes;
    VOID SecureZeroData;
    PVOID operator void *;
    VOID Close;
};

typedef struct wil::details::SystemThreadPoolMethods {
    VOID SetThreadpoolTimer;
    VOID WaitForThreadpoolTimerCallbacks;
    VOID CloseThreadpoolTimer;
};

typedef struct wil::details::com_unknown_deleter {
};

typedef struct wil::details::empty_wnf_state {
};

typedef struct wil::details::event_watcher_state {
    VOID event_watcher_state;
    VOID event_watcher_state;
    wistd::function<void __cdecl(void)> m_callback;
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_event;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t> > > m_threadPoolWait;
    VOID ~event_watcher_state;
    struct wil::details::event_watcher_state *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::functor_wrapper_void<<lambda_26a6647b77adb2b89a4a4ca9cf623d23> &> {
    struct wil::details::IFunctor wil::details::IFunctor;
    CRenderObj::GetTimingFunction::__l8::<lambda_26a6647b77adb2b89a4a4ca9cf623d23> *functor;
    VOID functor_wrapper_void<<lambda_26a6647b77adb2b89a4a4ca9cf623d23> &>;
    VOID functor_wrapper_void<<lambda_26a6647b77adb2b89a4a4ca9cf623d23> &>;
    VOID functor_wrapper_void<<lambda_26a6647b77adb2b89a4a4ca9cf623d23> &>;
    HRESULT Run;
};

typedef struct wil::details::functor_wrapper_void<<lambda_3a09bbab21407c43f75c27f25d4cc623> &> {
    struct wil::details::IFunctor wil::details::IFunctor;
    CRenderObj::{dtor}::__l2::<lambda_3a09bbab21407c43f75c27f25d4cc623> *functor;
    VOID functor_wrapper_void<<lambda_3a09bbab21407c43f75c27f25d4cc623> &>;
    VOID functor_wrapper_void<<lambda_3a09bbab21407c43f75c27f25d4cc623> &>;
    VOID functor_wrapper_void<<lambda_3a09bbab21407c43f75c27f25d4cc623> &>;
    HRESULT Run;
};

typedef struct wil::details::functor_wrapper_void<<lambda_64867380dd846f7a053b26a0bb9cf69f> &> {
    struct wil::details::IFunctor wil::details::IFunctor;
    CRenderObj::GetAnimationProperty::__l8::<lambda_64867380dd846f7a053b26a0bb9cf69f> *functor;
    VOID functor_wrapper_void<<lambda_64867380dd846f7a053b26a0bb9cf69f> &>;
    VOID functor_wrapper_void<<lambda_64867380dd846f7a053b26a0bb9cf69f> &>;
    VOID functor_wrapper_void<<lambda_64867380dd846f7a053b26a0bb9cf69f> &>;
    HRESULT Run;
};

typedef struct wil::details::functor_wrapper_void<<lambda_b6f525c3bfa7575b901227a6f31c42fa> &> {
    struct wil::details::IFunctor wil::details::IFunctor;
    CRenderObj::GetAnimationTransform::__l8::<lambda_b6f525c3bfa7575b901227a6f31c42fa> *functor;
    VOID functor_wrapper_void<<lambda_b6f525c3bfa7575b901227a6f31c42fa> &>;
    VOID functor_wrapper_void<<lambda_b6f525c3bfa7575b901227a6f31c42fa> &>;
    VOID functor_wrapper_void<<lambda_b6f525c3bfa7575b901227a6f31c42fa> &>;
    HRESULT Run;
};

typedef struct wil::details::functor_wrapper_void<<lambda_d89c6a7ec93565521e2701d2707eedbc> &> {
    struct wil::details::IFunctor wil::details::IFunctor;
    CRenderObj::Init::__l2::<lambda_d89c6a7ec93565521e2701d2707eedbc> *functor;
    VOID functor_wrapper_void<<lambda_d89c6a7ec93565521e2701d2707eedbc> &>;
    VOID functor_wrapper_void<<lambda_d89c6a7ec93565521e2701d2707eedbc> &>;
    VOID functor_wrapper_void<<lambda_d89c6a7ec93565521e2701d2707eedbc> &>;
    HRESULT Run;
};

typedef struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> {
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer_storage;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> {
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer_storage;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct FEATURE_STATE_CHANGE_SUBSCRIPTION__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> {
    struct wil::PaintDC pointer_storage;
    struct HDC__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::PaintDC invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::WindowDC),&wil::WindowDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::WindowDC,0,std::nullptr_t> {
    struct wil::WindowDC pointer_storage;
    struct HDC__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::WindowDC invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,0,std::nullptr_t> {
    struct HKEY__ *pointer_storage;
    struct HKEY__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct HKEY__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> {
    struct HSTRING_BUFFER__ *pointer_storage;
    struct HSTRING_BUFFER__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct HSTRING_BUFFER__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> {
    struct HSTRING__ *pointer_storage;
    struct HSTRING__ *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct HSTRING__ *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> {
    struct _RTL_CRITICAL_SECTION *pointer_storage;
    struct _RTL_CRITICAL_SECTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_CRITICAL_SECTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> {
    struct _RTL_CRITICAL_SECTION *pointer_storage;
    struct _RTL_CRITICAL_SECTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_CRITICAL_SECTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,0,std::nullptr_t> {
    struct _RTL_SRWLOCK *pointer_storage;
    struct _RTL_SRWLOCK *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct _RTL_SRWLOCK *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,0,std::nullptr_t> {
    struct _TP_TIMER *pointer_storage;
    struct _TP_TIMER *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _TP_TIMER *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,0,std::nullptr_t> {
    struct _TP_WAIT *pointer_storage;
    struct _TP_WAIT *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _TP_WAIT *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> {
    struct _WNF_USER_SUBSCRIPTION *pointer_storage;
    struct _WNF_USER_SUBSCRIPTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct _WNF_USER_SUBSCRIPTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION *,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION *),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> {
    struct __WIL__WNF_USER_SUBSCRIPTION *pointer_storage;
    struct __WIL__WNF_USER_SUBSCRIPTION *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct __WIL__WNF_USER_SUBSCRIPTION *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> {
    PCHAR pointer_storage;
    PCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> {
    PWCHAR pointer_storage;
    PWCHAR pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PWCHAR invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,0,std::nullptr_t> {
    PVOID pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,1> pointer_access;
    PVOID invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(wil::SelectResult),&wil::SelectResult::Close,wistd::integral_constant<unsigned __int64,0>,wil::SelectResult,0,std::nullptr_t> {
    struct wil::SelectResult pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::SelectResult invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData),&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,0,std::nullptr_t> {
    struct wil::details::SecureZeroData pointer_storage;
    PVOID pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil::details::SecureZeroData invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> {
    struct wil::details::event_watcher_state *pointer_storage;
    struct wil::details::event_watcher_state *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,2> pointer_access;
    struct wil::details::event_watcher_state *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,0,std::nullptr_t> {
    struct wil_FeatureTestState *pointer_storage;
    struct wil_FeatureTestState *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil_FeatureTestState *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::resource_policy<wil_StagingConfig *,void (__cdecl*)(wil_StagingConfig *),&wil_FreeStagingConfig,wistd::integral_constant<unsigned __int64,0>,wil_StagingConfig *,0,std::nullptr_t> {
    struct wil_StagingConfig *pointer_storage;
    struct wil_StagingConfig *pointer;
    PVOID pointer_invalid;
    struct wistd::integral_constant<unsigned __int64,0> pointer_access;
    struct wil_StagingConfig *invalid_value;
    BOOLEAN is_valid;
    VOID close;
    VOID close_reset;
};

typedef struct wil::details::return_type<0,long> {
    struct wil::details::tag_return_HRESULT type;
};

typedef struct wil::details::return_type<0,void> {
    struct wil::details::tag_return_void type;
};

typedef struct wil::details::return_type<1,void> {
    struct wil::details::tag_return_void type;
};

typedef struct wil::details::shared_object<wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::shared_object<wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject {
    LONG m_refCount;
    wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
    VOID RefAndObject;
    VOID RefAndObject;
    VOID ~RefAndObject;
    struct wil::details::shared_object<wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<ThemeLogging>::Completer {
    wil::details::static_lazy<ThemeLogging> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<ThemeSettingsLogging>::Completer {
    wil::details::static_lazy<ThemeSettingsLogging> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<ThemeSettingsTelemetry>::Completer {
    wil::details::static_lazy<ThemeSettingsTelemetry> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<ThemeTelemetry>::Completer {
    wil::details::static_lazy<ThemeTelemetry> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<UxThemeTelemetry>::Completer {
    wil::details::static_lazy<UxThemeTelemetry> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<wil::details::ApiTelemetryLogger>::Completer {
    wil::details::static_lazy<wil::details::ApiTelemetryLogger> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::static_lazy<wil::details::FeatureLogging>::Completer {
    wil::details::static_lazy<wil::details::FeatureLogging> *m_pSelf;
    ULONG m_flags;
    VOID Completer;
    VOID Succeed;
    VOID ~Completer;
    PVOID __vecDelDtor;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    PVOID allocate;
};

typedef struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > > {
    VOID ~string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
    HRESULT make;
    PWCHAR buffer;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > release;
    PWCHAR get;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > value;
    struct HSTRING_BUFFER__ *m_bufferHandle;
    PWCHAR m_charBuffer;
    VOID string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > >;
    PVOID __vecDelDtor;
};

typedef struct wil::details::tag_return_HRESULT {
    struct wistd::integral_constant<unsigned __int64,1> wistd::integral_constant<unsigned __int64,1>;
};

typedef struct wil::details::tag_return_other {
    struct wistd::integral_constant<unsigned __int64,2> wistd::integral_constant<unsigned __int64,2>;
};

typedef struct wil::details::tag_return_void {
    struct wistd::integral_constant<unsigned __int64,0> wistd::integral_constant<unsigned __int64,0>;
};

typedef struct wil::details::variable_size<1> {
    UCHAR type;
};

typedef struct wil::details::variable_size<2> {
    USHORT type;
};

typedef struct wil::details::variable_size<4> {
    ULONG type;
};

typedef struct wil::details::variable_size<8> {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<__int64> {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<enum wil::ActivityOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::EventOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<enum wil::details::ReportFailureOptions> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<int> {
    ULONG type;
};

typedef struct wil::details::variable_size_mapping<unsigned __int64 const > {
    ULONG64 type;
};

typedef struct wil::details::variable_size_mapping<unsigned __int64> {
    ULONG64 type;
};

typedef struct wil::details::verify_single_flag_helper<1> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<2> {
    ULONG64 value;
};

typedef struct wil::details::verify_single_flag_helper<4> {
    ULONG64 value;
};

typedef struct wil::details::wnf_callback_type<wil::details::empty_wnf_state> {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wil::details::wnf_subscription_state_base {
Error: Could not get member name.
    VOID ~wnf_subscription_state_base;
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> > > m_subscription;
    VOID wnf_subscription_state_base;
    VOID __local_vftable_ctor_closure;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::ProcessLocalData {
    USHORT size;
    LONG failureSequenceId;
    wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData> threads;
    VOID ProcessShutdown;
    VOID ProcessLocalData;
    VOID ~ProcessLocalData;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::RawUsageIndex::Header {
    USHORT formatVersion;
    USHORT version;
    USHORT indexSize;
    USHORT valueSize;
    enum wil::details_abi::CountSize indexCountSize;
    enum wil::details_abi::CountSize valueCountSize;
};

typedef struct wil::details_abi::SerializedFailure {
    HRESULT hr;
    USHORT lineNumber;
    USHORT file;
    USHORT modulePath;
    USHORT callerModule;
    ULONG callerReturnAddressOffset;
    USHORT message;
    USHORT originLineNumber;
    USHORT originFile;
    USHORT originModule;
    ULONG originCallerReturnAddressOffset;
    USHORT originCallerModule;
    USHORT originName;
    USHORT process;
    BOOLEAN Serialize;
    BOOLEAN Deserialize;
};

typedef struct wil::details_abi::SubscriptionList::Subscription {
    PVOID callback;
    PVOID context;
};

typedef struct wil::details_abi::ThreadLocalData {
    USHORT size;
    ULONG threadId;
    PLONG failureSequenceId;
    ULONG latestSubscribedFailureSequenceId;
    struct wil::details_abi::ThreadLocalFailureInfo *errors;
    USHORT errorAllocCount;
    USHORT errorCurrentIndex;
    VOID ~ThreadLocalData;
    VOID Clear;
    BOOLEAN EnsureAllocated;
    VOID SetLastError;
    BOOLEAN GetLastError;
    BOOLEAN GetCaughtExceptionError;
    VOID ThreadLocalData;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::ThreadLocalFailureInfo {
    USHORT size;
    UCHAR reserved1[2];
    ULONG sequenceId;
    HRESULT hr;
    PCHAR fileName;
    USHORT lineNumber;
    UCHAR failureType;
    UCHAR reserved2;
    PCHAR modulePath;
    PVOID returnAddress;
    PVOID callerReturnAddress;
    PWCHAR message;
    PVOID stringBuffer;
    ULONG64 stringBufferSize;
    VOID Clear;
    VOID Set;
    VOID Get;
};

typedef struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node {
    wil::details::ThreadFailureCallbackHolder *value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node *pNext;
    VOID Node;
};

typedef struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node {
    struct wil::details_abi::ThreadLocalData value;
    ULONG threadId;
    struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node *pNext;
    VOID Node;
    VOID ~Node;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::UsageIndexProperty {
    USHORT c_size;
    enum wil::details_abi::CountSize c_countSize;
    ULONG count;
    USHORT size;
    PVOID countBuffer;
    PVOID value;
    VOID UsageIndexProperty;
    LONG Compare;
    VOID Attach;
    VOID UpdateCount;
    BOOLEAN AddToCount;
    ULONG64 GetAndValidateCount;
    ULONG64 GetSize;
    ULONG64 GetFixedSize;
    BOOLEAN Write;
    BOOLEAN Read;
};

typedef struct wil::details_abi::UsageIndexes {
    wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0> device;
    wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2> unique;
    wil::details_abi::UsageIndexBuffer<unsigned int,1> error;
    VOID UsageIndexes;
    VOID UsageIndexes;
    VOID Record;
    VOID Load;
    VOID ~UsageIndexes;
    PVOID __vecDelDtor;
};

typedef struct wil::details_abi::buffer_range {
    PUCHAR buffer;
    PUCHAR bufferEnd;
    PUCHAR bufferAllocEnd;
    VOID buffer_range;
    VOID buffer_range;
    ULONG64 size;
    ULONG64 capacity;
    ULONG64 remaining_capacity;
    VOID clear;
    BOOLEAN empty;
};

typedef struct wil::details_abi::heap_buffer {
    struct wil::details_abi::buffer_range wil::details_abi::buffer_range;
    wistd::unique_ptr<void,wil::process_heap_deleter> allocation;
    VOID heap_buffer;
    VOID heap_buffer;
    VOID heap_buffer;
    BOOLEAN reserve;
    BOOLEAN ensure;
    VOID set_size;
    BOOLEAN push_back;
    VOID ~heap_buffer;
    struct wil::details_abi::heap_buffer *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::empty_deleter {
};

typedef struct wil::err_failfast_policy {
    VOID result;
    VOID Win32BOOL;
    VOID Win32Handle;
    VOID HResult;
    VOID LastError;
    VOID LastErrorIfFalse;
    VOID OK;
};

typedef struct wil::err_returncode_policy {
    HRESULT result;
    HRESULT Win32BOOL;
    HRESULT Win32Handle;
    HRESULT HResult;
    HRESULT LastError;
    HRESULT LastErrorIfFalse;
    HRESULT OK;
};

typedef struct wil::function_deleter<long (__cdecl*)(void *),&NCryptFreeBuffer> {
};

typedef struct wil::function_deleter<void (__cdecl*)(void *),&BCryptFreeBuffer> {
};

typedef struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> {
};

typedef struct wil::function_deleter<void * (__cdecl*)(void *),&GlobalFree> {
};

typedef struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> {
};

typedef struct wil::hlocal_secure_deleter {
};

typedef struct wil::process_heap_deleter {
};

typedef struct wil::unique_hglobal_locked {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> > > wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> > >;
    VOID unique_hglobal_locked;
    VOID unique_hglobal_locked;
    VOID unique_hglobal_locked;
    PVOID get;
    PVOID m_globalMemory;
    VOID ~unique_hglobal_locked;
    struct wil::unique_hglobal_locked *operator=;
    PVOID __vecDelDtor;
};

typedef struct wil::variadic_logical_or<> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wil::virtualalloc_deleter {
};

typedef struct wil_FeatureState {
    enum wil_FeatureEnabledState enabledState;
    UCHAR variant;
    enum wil_FeatureVariantPayloadKind payloadKind;
    ULONG payload;
    LONG hasNotification;
    LONG isVariantConfiguration;
};

typedef struct wil_FeatureTestState {
};

typedef struct wil_StagingConfig {
};

typedef struct wil_details_FeatureProperties {
    ULONG enabledState : 2;
    ULONG isVariant : 1;
    ULONG queuedForReporting : 1;
    ULONG hasNotificationState : 2;
    ULONG usageCount : 9;
    ULONG usageCountRepresentsPotential : 1;
    ULONG reportedDeviceUsage : 1;
    ULONG reportedDevicePotential : 1;
    ULONG reportedDeviceOpportunity : 1;
    ULONG reportedDevicePotentialOpportunity : 1;
    ULONG recordedDeviceUsage : 1;
    ULONG recordedDevicePotential : 1;
    ULONG recordedDeviceOpportunity : 1;
    ULONG recordedDevicePotentialOpportunity : 1;
    ULONG opportunityCount : 7;
    ULONG opportunityCountRepresentsPotential : 1;
};

typedef struct wil_details_FeatureTestState {
    enum wil_details_FeatureTestStateKind kind;
    ULONG featureId;
    enum wil_FeatureEnabledState state;
    UCHAR variant;
    ULONG payload;
    struct wil_details_FeatureTestState *next;
};

typedef struct wil_details_FeatureUsageSRUM {
    ULONG featureId;
    USHORT serviceReportingKind;
    ULONG usageCount;
};

typedef struct wil_details_FeatureVariantPropertyCache {
    union wil_details_FeaturePropertyCache propertyCache;
    ULONG payloadId;
    VOID wil_details_FeatureVariantPropertyCache;
    VOID wil_details_FeatureVariantPropertyCache;
    struct wil_details_FeatureVariantPropertyCache *operator=;
    struct wil_details_FeatureVariantPropertyCache *operator=;
};

typedef struct wil_details_RecordUsageResult {
    LONG queueBackground;
    ULONG countImmediate;
    enum wil_details_ServiceReportingKind kindImmediate;
    ULONG payloadId;
    LONG ignoredUse;
    LONG isVariantConfiguration;
};

typedef struct wil_details_SetPropertyCacheUsageContext {
    struct wil_details_RecordUsageResult *result;
    enum wil_details_ServiceReportingKind kind;
    ULONG64 addend;
};

typedef struct wil_details_SetPropertyFlagContext {
    struct wil_details_RecordUsageResult *result;
    ULONG flags;
    LONG ignoreReporting;
};

typedef struct wil_details_StagingConfig {
    enum wil_FeatureStore store;
    LONG forUpdate;
    ULONG readChangeStamp;
    UCHAR readVersion;
    LONG modified;
    struct wil_details_StagingConfigHeader *header;
    struct wil_details_StagingConfigFeature *features;
    struct wil_details_StagingConfigUsageTrigger *triggers;
    LONG changedInSession;
    PVOID buffer;
    ULONG64 bufferSize;
    ULONG64 bufferAlloc;
    LONG bufferOwned;
};

typedef struct wil_details_StagingConfigFeature {
    ULONG featureId;
    ULONG changedInSession : 1;
    ULONG isVariantConfig : 1;
    ULONG unused1 : 6;
    ULONG serviceState : 2;
    ULONG userState : 2;
    ULONG testState : 2;
    ULONG unused2 : 2;
    ULONG unused3 : 8;
    ULONG variant : 6;
    ULONG payloadKind : 2;
    ULONG payload;
};

typedef struct wil_details_StagingConfigHeader {
    UCHAR version;
    UCHAR versionMinor;
    USHORT headerSizeBytes;
    USHORT featureCount;
    USHORT featureUsageTriggerCount;
    struct wil_details_StagingConfigHeaderProperties sessionProperties;
    struct wil_details_StagingConfigHeaderProperties properties;
};

typedef struct wil_details_StagingConfigHeaderProperties {
    ULONG ignoreServiceState : 1;
    ULONG ignoreUserState : 1;
    ULONG ignoreTestState : 1;
    ULONG ignoreVariants : 1;
    ULONG unused : 28;
};

typedef struct wil_details_StagingConfigUsageTrigger {
    ULONG featureId;
    struct wil_details_StagingConfigWnfStateName trigger;
    ULONG serviceReportingKind : 16;
    ULONG isVariantConfig : 1;
    ULONG unused : 15;
};

typedef struct wil_details_StagingConfigWnfStateName {
    ULONG Data[2];
};

typedef struct wil_details_VariantProperties {
    ULONG enabledState : 2;
    ULONG isVariant : 1;
    ULONG queuedForReporting : 1;
    ULONG hasNotificationState : 2;
    ULONG recordedDeviceUsage : 1;
    ULONG variant : 6;
    ULONG unused : 19;
};

typedef struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> _MyTy;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_MyCnstTy;
    VOID _Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    VOID _Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_Get;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> *_Get;
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> *operator=;
    wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_1be4317d7b68aea1d134397100149062> _Object;
};

typedef struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> _MyTy;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_MyCnstTy;
    VOID _Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    VOID _Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_Get;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> *_Get;
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> *operator=;
    wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_2f784ef15c303f2c8d3bec493a729414> _Object;
};

typedef struct wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> _MyTy;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> *_MyCnstTy;
    VOID _Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
    VOID _Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> *_Get;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> *_Get;
    struct wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> *operator=;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> _Object;
};

typedef struct wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> _MyTy;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> *_MyCnstTy;
    VOID _Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
    VOID _Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> *_Get;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> *_Get;
    struct wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> *operator=;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> _Object;
};

typedef struct wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0> {
    LONG <unnamed-enum-_EEN_INDIRECT>;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> _MyTy;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> *_MyCnstTy;
    VOID _Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
    VOID _Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> *_Get;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> *_Get;
    struct wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0> *operator=;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> _Object;
};

typedef struct wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0> {
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    struct wistd::_Callable_base<<lambda_1be4317d7b68aea1d134397100149062>,0> _Mybase;
    VOID _Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
    VOID _Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>;
};

typedef struct wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> {
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    struct wistd::_Callable_base<<lambda_2f784ef15c303f2c8d3bec493a729414>,0> _Mybase;
    VOID _Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
    VOID _Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>;
};

typedef struct wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> {
    struct wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
    struct wistd::_Callable_base<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> _Mybase;
    VOID _Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
    VOID _Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>;
};

typedef struct wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> {
    struct wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
    struct wistd::_Callable_base<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> _Mybase;
    VOID _Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
    VOID _Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>;
};

typedef struct wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> {
    struct wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0> wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
    struct wistd::_Callable_base<<lambda_af47d61301194c5d4839e4c10d405b79>,0> _Mybase;
    VOID _Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
    VOID _Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>;
};

typedef struct wistd::_Cat_base<0> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Cat_base<1> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Conjunction<> {
    struct wistd::integral_constant<bool,1> type;
};

typedef struct wistd::_Disjunction<> {
    struct wistd::integral_constant<bool,0> type;
};

typedef struct wistd::_Fun_class_base<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    PVOID _Arg0;
};

typedef struct wistd::_Fun_class_base<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    PWCHAR _Arg0;
};

typedef struct wistd::_Fun_class_base<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    struct wistd::unary_function<wistd::_Nil,void> wistd::unary_function<wistd::_Nil,void>;
    struct wistd::_Nil _Arg0;
};

typedef struct wistd::_Fun_class_base<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> {
    struct wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void> wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void>;
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > *_Arg0;
};

typedef struct wistd::_Get_deleter_pointer_type<char,wistd::default_delete<char [0]> > {
    struct wistd::_Identity<char *> _Decltype;
    PCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned int,wistd::default_delete<unsigned int [0]> > {
    struct wistd::_Identity<unsigned int *> _Decltype;
    PULONG type;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned short,wil::cotaskmem_secure_deleter> {
    struct wistd::_Identity<unsigned short *> _Decltype;
    PWCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned short,wil::hlocal_secure_deleter> {
    struct wistd::_Identity<unsigned short *> _Decltype;
    PWCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<unsigned short,wistd::default_delete<unsigned short [0]> > {
    struct wistd::_Identity<unsigned short *> _Decltype;
    PWCHAR type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::_Identity<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *> _Decltype;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Identity<wil::details::event_watcher_state *> _Decltype;
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_Get_deleter_pointer_type<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter> {
    struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *> _Decltype;
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::_Get_function_impl<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)> {
    wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> type;
};

typedef struct wistd::_Get_function_impl<void __cdecl(void)> {
    wistd::_Func_class<void,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> type;
};

typedef struct wistd::_Get_function_impl<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)> {
    wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> type;
};

typedef struct wistd::_Identity<char *> {
    PCHAR type;
};

typedef struct wistd::_Identity<unsigned int *> {
    PULONG type;
};

typedef struct wistd::_Identity<unsigned short *> {
    PWCHAR type;
};

typedef struct wistd::_Identity<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *> {
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *type;
};

typedef struct wistd::_Identity<wil::details::event_watcher_state *> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_Identity<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *> {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::_If<0,<lambda_3fe2b0614fdac0cb619a9741254350d8> *,<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::_If<0,<lambda_abc0e13b19a274b8d7356cc116837fba> *,<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::_If<0,<lambda_af47d61301194c5d4839e4c10d405b79> *,<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::_If<0,char &,wil::details::ApiTelemetryLogger::ApiDataList::ApiData &> {
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *type;
};

typedef struct wistd::_If<0,char &,wil::details::event_watcher_state &> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::_If<0,wil::cotaskmem_secure_deleter,wil::cotaskmem_secure_deleter const &> {
    struct wil::cotaskmem_secure_deleter *type;
};

typedef struct wistd::_If<0,wil::hlocal_secure_deleter,wil::hlocal_secure_deleter const &> {
    struct wil::hlocal_secure_deleter *type;
};

typedef struct wistd::_If<0,wil::process_heap_deleter,wil::process_heap_deleter const &> {
    struct wil::process_heap_deleter *type;
};

typedef struct wistd::_If<0,wistd::default_delete<char [0]>,wistd::default_delete<char [0]> const &> {
    struct wistd::default_delete<char [0]> *type;
};

typedef struct wistd::_If<0,wistd::default_delete<unsigned int [0]>,wistd::default_delete<unsigned int [0]> const &> {
    struct wistd::default_delete<unsigned int [0]> *type;
};

typedef struct wistd::_If<0,wistd::default_delete<unsigned short [0]>,wistd::default_delete<unsigned short [0]> const &> {
    struct wistd::default_delete<unsigned short [0]> *type;
};

typedef struct wistd::_If<0,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> const &> {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> *type;
};

typedef struct wistd::_If<0,wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> const &> {
    struct wistd::default_delete<wil::details::event_watcher_state> *type;
};

typedef struct wistd::_Is_floating_point<double> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_floating_point<float> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_floating_point<long double> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_funptr<<lambda_3fe2b0614fdac0cb619a9741254350d8> *> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_funptr<<lambda_abc0e13b19a274b8d7356cc116837fba> *> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_funptr<<lambda_af47d61301194c5d4839e4c10d405b79> *> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_integral<__int64> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<bool> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char16_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char32_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<short> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<signed char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned __int64> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned char> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_integral<unsigned short> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<char [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<unsigned int [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<unsigned short [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_void<void> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::_Is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Is_void<wil::details::event_watcher_state> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::_Nil {
};

typedef struct wistd::_Wrap_int {
    VOID _Wrap_int;
};

typedef struct wistd::add_pointer<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> *type;
};

typedef struct wistd::add_pointer<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> *type;
};

typedef struct wistd::add_pointer<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> *type;
};

typedef struct wistd::add_reference<char> {
    PCHAR type;
};

typedef struct wistd::add_reference<unsigned int> {
    PULONG type;
};

typedef struct wistd::add_reference<unsigned short> {
    PWCHAR type;
};

typedef struct wistd::add_reference<void const > {
    VOID type;
};

typedef struct wistd::add_reference<void const volatile > {
    VOID type;
};

typedef struct wistd::add_reference<void volatile > {
    VOID type;
};

typedef struct wistd::add_reference<void> {
    VOID type;
};

typedef struct wistd::add_reference<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *type;
};

typedef struct wistd::add_reference<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::add_reference<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> > {
    wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *type;
};

typedef struct wistd::add_rvalue_reference<void const > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void const volatile > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void volatile > {
    VOID type;
};

typedef struct wistd::add_rvalue_reference<void> {
    VOID type;
};

typedef struct wistd::decay<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> _Ty1;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::decay<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> _Ty1;
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::decay<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> _Ty1;
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::default_delete<char [0]> {
    struct wistd::default_delete<char> _Myt;
    VOID default_delete<char [0]>;
    VOID operator();
};

typedef struct wistd::default_delete<char> {
};

typedef struct wistd::default_delete<unsigned int [0]> {
    struct wistd::default_delete<unsigned int> _Myt;
    VOID default_delete<unsigned int [0]>;
    VOID operator();
};

typedef struct wistd::default_delete<unsigned int> {
};

typedef struct wistd::default_delete<unsigned short [0]> {
    struct wistd::default_delete<unsigned short> _Myt;
    VOID default_delete<unsigned short [0]>;
    VOID operator();
};

typedef struct wistd::default_delete<unsigned short> {
};

typedef struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> _Myt;
    VOID default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
    VOID operator();
};

typedef struct wistd::default_delete<wil::details::event_watcher_state> {
    struct wistd::default_delete<wil::details::event_watcher_state> _Myt;
    VOID default_delete<wil::details::event_watcher_state>;
    VOID operator();
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_1be4317d7b68aea1d134397100149062>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void *,unsigned __int64,void *,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>,wistd::details::function_allocator<wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >,void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0>,wistd::details::function_allocator<wistd::_Func_class<void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> >,void,unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >::rebind<wistd::_Func_impl<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> > {
    wistd::details::function_allocator<wistd::_Func_impl<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0>,wistd::details::function_allocator<wistd::_Func_class<void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> >,void,wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil,wistd::_Nil> > other;
};

typedef struct wistd::enable_if<0,void *> {
};

typedef struct wistd::enable_if<1,void *> {
    PVOID type;
};

typedef struct wistd::integral_constant<bool,0> {
    BOOLEAN value;
    BOOLEAN value_type;
    struct wistd::integral_constant<bool,0> type;
    BOOLEAN operator bool;
};

typedef struct wistd::integral_constant<bool,1> {
    BOOLEAN value;
    BOOLEAN value_type;
    struct wistd::integral_constant<bool,1> type;
    BOOLEAN operator bool;
};

typedef struct wistd::integral_constant<char,0> {
};

typedef struct wistd::integral_constant<char,1> {
};

typedef struct wistd::integral_constant<unsigned __int64,0> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,0> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::integral_constant<unsigned __int64,1> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,1> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::integral_constant<unsigned __int64,2> {
    ULONG64 value;
    ULONG64 value_type;
    struct wistd::integral_constant<unsigned __int64,2> type;
    ULONG64 operator unsigned __int64;
};

typedef struct wistd::is_array<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_array<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_array<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_class<bool> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<int> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<unsigned char> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<unsigned short *> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<void *> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_class<wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::cotaskmem_secure_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::hlocal_secure_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wil::process_heap_deleter> {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<char [0]> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<unsigned int [0]> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<unsigned short [0]> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_empty<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Cat_base<1> wistd::_Cat_base<1>;
};

typedef struct wistd::is_function<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_function<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_function<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_lvalue_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<char [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<unsigned int [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<unsigned short [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_lvalue_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_pointer<wil::cotaskmem_secure_deleter> {
    struct wistd::_Is_pointer<wil::cotaskmem_secure_deleter> wistd::_Is_pointer<wil::cotaskmem_secure_deleter>;
};

typedef struct wistd::is_pointer<wil::hlocal_secure_deleter> {
    struct wistd::_Is_pointer<wil::hlocal_secure_deleter> wistd::_Is_pointer<wil::hlocal_secure_deleter>;
};

typedef struct wistd::is_pointer<wil::process_heap_deleter> {
    struct wistd::_Is_pointer<wil::process_heap_deleter> wistd::_Is_pointer<wil::process_heap_deleter>;
};

typedef struct wistd::is_pointer<wistd::default_delete<char [0]> > {
    struct wistd::_Is_pointer<wistd::default_delete<char [0]> > wistd::_Is_pointer<wistd::default_delete<char [0]> >;
};

typedef struct wistd::is_pointer<wistd::default_delete<unsigned int [0]> > {
    struct wistd::_Is_pointer<wistd::default_delete<unsigned int [0]> > wistd::_Is_pointer<wistd::default_delete<unsigned int [0]> >;
};

typedef struct wistd::is_pointer<wistd::default_delete<unsigned short [0]> > {
    struct wistd::_Is_pointer<wistd::default_delete<unsigned short [0]> > wistd::_Is_pointer<wistd::default_delete<unsigned short [0]> >;
};

typedef struct wistd::is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::_Is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > wistd::_Is_pointer<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
};

typedef struct wistd::is_pointer<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> > wistd::_Is_pointer<wistd::default_delete<wil::details::event_watcher_state> >;
};

typedef struct wistd::is_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wil::hlocal_secure_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wil::process_heap_deleter> {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<char [0]> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<unsigned int [0]> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<unsigned short [0]> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::_Cat_base<0> wistd::_Cat_base<0>;
};

typedef struct wistd::is_rvalue_reference<wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<char [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<unsigned int [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<unsigned short [0]> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_rvalue_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<int,int> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<long,long> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<std::nullptr_t,std::nullptr_t> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<void,void> {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<char [0]>,wistd::default_delete<char [0]> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned int [0]>,wistd::default_delete<unsigned int [0]> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::cotaskmem_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wil::hlocal_secure_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::default_delete<unsigned short [0]>,wistd::default_delete<unsigned short [0]> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details::event_watcher_state>,wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::default_delete<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> >,wil::process_heap_deleter> {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,0>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,1>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,0> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,1> > {
    struct wistd::integral_constant<bool,0> wistd::integral_constant<bool,0>;
};

typedef struct wistd::is_same<wistd::integral_constant<unsigned __int64,2>,wistd::integral_constant<unsigned __int64,2> > {
    struct wistd::integral_constant<bool,1> wistd::integral_constant<bool,1>;
};

typedef struct wistd::is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
    struct wistd::_Is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> wistd::_Is_void<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
};

typedef struct wistd::is_void<wil::details::event_watcher_state> {
    struct wistd::_Is_void<wil::details::event_watcher_state> wistd::_Is_void<wil::details::event_watcher_state>;
};

typedef struct wistd::less<void> {
    LONG is_transparent;
};

typedef struct wistd::pointer_traits<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *> {
    struct wistd::pointer_traits<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *> other;
     element_type;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *pointer;
    LONG64 difference_type;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *_Reftype;
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *pointer_to;
};

typedef struct wistd::pointer_traits<wil::details::event_watcher_state *> {
    struct wistd::pointer_traits<wil::details::event_watcher_state *> other;
    struct wil::details::event_watcher_state element_type;
    struct wil::details::event_watcher_state *pointer;
    LONG64 difference_type;
    struct wil::details::event_watcher_state *_Reftype;
    struct wil::details::event_watcher_state *pointer_to;
};

typedef struct wistd::remove_const<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_const<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_const<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_const<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_const<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
     type;
};

typedef struct wistd::remove_const<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_const<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_const<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_const<wistd::default_delete<char [0]> > {
    struct wistd::default_delete<char [0]> type;
};

typedef struct wistd::remove_const<wistd::default_delete<unsigned int [0]> > {
    struct wistd::default_delete<unsigned int [0]> type;
};

typedef struct wistd::remove_const<wistd::default_delete<unsigned short [0]> > {
    struct wistd::default_delete<unsigned short [0]> type;
};

typedef struct wistd::remove_const<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> type;
};

typedef struct wistd::remove_const<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_cv<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_cv<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_cv<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_cv<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_cv<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
     type;
};

typedef struct wistd::remove_cv<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_cv<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_cv<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_cv<wistd::default_delete<char [0]> > {
    struct wistd::default_delete<char [0]> type;
};

typedef struct wistd::remove_cv<wistd::default_delete<unsigned int [0]> > {
    struct wistd::default_delete<unsigned int [0]> type;
};

typedef struct wistd::remove_cv<wistd::default_delete<unsigned short [0]> > {
    struct wistd::default_delete<unsigned short [0]> type;
};

typedef struct wistd::remove_cv<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> type;
};

typedef struct wistd::remove_cv<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_extent<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_extent<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_extent<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_reference<<lambda_3fe2b0614fdac0cb619a9741254350d8> &> {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_reference<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_reference<<lambda_abc0e13b19a274b8d7356cc116837fba> &> {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_reference<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_reference<<lambda_af47d61301194c5d4839e4c10d405b79> &> {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_reference<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_reference<HSTRING__ * &> {
    struct HSTRING__ *type;
};

typedef struct wistd::remove_reference<UxThemeTelemetry::CallContext &> {
     type;
};

typedef struct wistd::remove_reference<_RTL_CRITICAL_SECTION * &> {
    struct _RTL_CRITICAL_SECTION *type;
};

typedef struct wistd::remove_reference<_RTL_CRITICAL_SECTION *> {
    struct _RTL_CRITICAL_SECTION *type;
};

typedef struct wistd::remove_reference<_RTL_SRWLOCK * &> {
    struct _RTL_SRWLOCK *type;
};

typedef struct wistd::remove_reference<_RTL_SRWLOCK *> {
    struct _RTL_SRWLOCK *type;
};

typedef struct wistd::remove_reference<char * &> {
    PCHAR type;
};

typedef struct wistd::remove_reference<char const (&)[12]> {
    CHAR type[12];
};

typedef struct wistd::remove_reference<char const *> {
    PCHAR type;
};

typedef struct wistd::remove_reference<unsigned int *> {
    PULONG type;
};

typedef struct wistd::remove_reference<unsigned short * &> {
    PWCHAR type;
};

typedef struct wistd::remove_reference<unsigned short *> {
    PWCHAR type;
};

typedef struct wistd::remove_reference<unsigned short const *> {
    PWCHAR type;
};

typedef struct wistd::remove_reference<unsigned short> {
    USHORT type;
};

typedef struct wistd::remove_reference<void * &> {
    PVOID type;
};

typedef struct wistd::remove_reference<void *> {
    PVOID type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType> &> {
    wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType> type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> &> {
     type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> > {
     type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType> &> {
    wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType> type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> &> {
     type;
};

typedef struct wistd::remove_reference<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> > {
     type;
};

typedef struct wistd::remove_reference<wil::PaintDC &> {
    struct wil::PaintDC type;
};

typedef struct wistd::remove_reference<wil::SelectResult> {
    struct wil::SelectResult type;
};

typedef struct wistd::remove_reference<wil::StoredFailureInfo &> {
    wil::StoredFailureInfo type;
};

typedef struct wistd::remove_reference<wil::WindowDC> {
    struct wil::WindowDC type;
};

typedef struct wistd::remove_reference<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_reference<wil::details::ApiTelemetryLogger::ApiDataList::ApiData * &> {
    struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData *type;
};

typedef struct wistd::remove_reference<wil::details::ApiTelemetryLogger::CallContext &> {
     type;
};

typedef struct wistd::remove_reference<wil::details::SecureZeroData> {
    struct wil::details::SecureZeroData type;
};

typedef struct wistd::remove_reference<wil::details::StoredCallContextInfo &> {
    wil::details::StoredCallContextInfo type;
};

typedef struct wistd::remove_reference<wil::details::ThreadFailureCallbackHolder &> {
    wil::details::ThreadFailureCallbackHolder type;
};

typedef struct wistd::remove_reference<wil::details::event_watcher_state * &> {
    struct wil::details::event_watcher_state *type;
};

typedef struct wistd::remove_reference<wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> > &> {
    wil::details::shared_object<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType> > type;
};

typedef struct wistd::remove_reference<wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> > &> {
    wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> > type;
};

typedef struct wistd::remove_reference<wil::details_abi::SemaphoreValue &> {
    wil::details_abi::SemaphoreValue type;
};

typedef struct wistd::remove_reference<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_reference<wil::last_error_context &> {
    wil::last_error_context type;
};

typedef struct wistd::remove_reference<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::PaintDC),&wil::PaintDC::Close,wistd::integral_constant<unsigned __int64,0>,wil::PaintDC,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > &> {
    wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,0,std::nullptr_t> > > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > &> {
    wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > > {
    wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> &> {
    struct wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> > {
    struct wistd::_Callable_obj<<lambda_3fe2b0614fdac0cb619a9741254350d8>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> &> {
    struct wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> > {
    struct wistd::_Callable_obj<<lambda_abc0e13b19a274b8d7356cc116837fba>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> &> {
    struct wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> type;
};

typedef struct wistd::remove_reference<wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> > {
    struct wistd::_Callable_obj<<lambda_af47d61301194c5d4839e4c10d405b79>,0> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<char [0]> > {
    struct wistd::default_delete<char [0]> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<unsigned int [0]> > {
    struct wistd::default_delete<unsigned int [0]> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<unsigned short [0]> > {
    struct wistd::default_delete<unsigned short [0]> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> &> {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> type;
};

typedef struct wistd::remove_reference<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::remove_reference<wistd::function<void __cdecl(void)> &> {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wistd::remove_reference<wistd::function<void __cdecl(void)> > {
    wistd::function<void __cdecl(void)> type;
};

typedef struct wistd::remove_reference<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &> {
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > type;
};

typedef struct wistd::remove_volatile<<lambda_3fe2b0614fdac0cb619a9741254350d8> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_3fe2b0614fdac0cb619a9741254350d8> type;
};

typedef struct wistd::remove_volatile<<lambda_abc0e13b19a274b8d7356cc116837fba> > {
    wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_abc0e13b19a274b8d7356cc116837fba> type;
};

typedef struct wistd::remove_volatile<<lambda_af47d61301194c5d4839e4c10d405b79> > {
    wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> type;
};

typedef struct wistd::remove_volatile<wil::cotaskmem_secure_deleter> {
    struct wil::cotaskmem_secure_deleter type;
};

typedef struct wistd::remove_volatile<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> {
     type;
};

typedef struct wistd::remove_volatile<wil::details::event_watcher_state> {
    struct wil::details::event_watcher_state type;
};

typedef struct wistd::remove_volatile<wil::hlocal_secure_deleter> {
    struct wil::hlocal_secure_deleter type;
};

typedef struct wistd::remove_volatile<wil::process_heap_deleter> {
    struct wil::process_heap_deleter type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<char [0]> > {
    struct wistd::default_delete<char [0]> type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<unsigned int [0]> > {
    struct wistd::default_delete<unsigned int [0]> type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<unsigned short [0]> > {
    struct wistd::default_delete<unsigned short [0]> type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > {
    struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> type;
};

typedef struct wistd::remove_volatile<wistd::default_delete<wil::details::event_watcher_state> > {
    struct wistd::default_delete<wil::details::event_watcher_state> type;
};

typedef struct wistd::unary_function<wistd::_Nil,void> {
    struct wistd::_Nil argument_type;
    VOID result_type;
};

typedef struct wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void> {
    wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > *argument_type;
    VOID result_type;
};

typedef union API_GENERIC {
    ULONG ulAPINumber;
    LONG status;
};

typedef union API_THEMES_SPECIFIC {
     <unnamed-type-apiGetStatusFlags>;
    union {
        struct API_THEMES_GETSTATUSFLAGS_IN in;
        struct API_THEMES_GETSTATUSFLAGS_OUT out;
    } apiGetStatusFlags;
     <unnamed-type-apiGetCurrentChangeNumber>;
    union {
        struct API_THEMES_GETCURRENTCHANGENUMBER_IN in;
        struct API_THEMES_GETCURRENTCHANGENUMBER_OUT out;
    } apiGetCurrentChangeNumber;
     <unnamed-type-apiProcessLoadTheme>;
    union {
        struct API_THEMES_PROCESSLOADTHEME_IN in;
        struct API_THEMES_PROCESSLOADTHEME_OUT out;
    } apiProcessLoadTheme;
     <unnamed-type-apiProcessAssignSection>;
    union {
        struct API_THEMES_PROCESSASSIGNSECTION_IN in;
        struct API_THEMES_PROCESSASSIGNSECTION_OUT out;
    } apiProcessAssignSection;
     <unnamed-type-apiUserLogon>;
    union {
        struct API_THEMES_USERLOGON_IN in;
        struct API_THEMES_USERLOGON_OUT out;
    } apiUserLogon;
     <unnamed-type-apiUserLogoff>;
    union {
        struct API_THEMES_USERLOGOFF_IN in;
        struct API_THEMES_USERLOGOFF_OUT out;
    } apiUserLogoff;
     <unnamed-type-apiSessionCreate>;
    union {
        struct API_THEMES_SESSIONCREATE_IN in;
        struct API_THEMES_SESSIONCREATE_OUT out;
    } apiSessionCreate;
     <unnamed-type-apiSessionDestroy>;
    union {
        struct API_THEMES_SESSIONDESTROY_IN in;
        struct API_THEMES_SESSIONDESTROY_OUT out;
    } apiSessionDestroy;
     <unnamed-type-apiAcquireOrAddTheme>;
    union {
        struct API_THEMES_ACQUIREORADDTHEME_IN in;
        struct API_THEMES_ACQUIREORADDTHEME_OUT out;
    } apiAcquireOrAddTheme;
     <unnamed-type-apiReleaseTheme>;
    union {
        struct API_THEMES_RELEASETHEME_IN in;
        struct API_THEMES_RELEASETHEME_OUT out;
    } apiReleaseTheme;
     <unnamed-type-apiPing>;
    union {
        struct API_THEMES_PING_IN in;
        struct API_THEMES_PING_OUT out;
    } apiPing;
};

typedef union FT {
    ULONG64 ft_scalar;
    struct _FILETIME ft_struct;
};

typedef union HBITMAP64 {
    struct HBITMAP__ *hBitmap;
    PVOID hBitmap64;
};

typedef union MIXEDPTRS {
    PUCHAR pb;
    PCHAR pc;
    PWCHAR pw;
    PSHORT ps;
    PWCHAR px;
    PLONG pi;
    PULONG pdw;
    struct tagPOINT *ppt;
    struct tagSIZE *psz;
    struct tagRECT *prc;
};

typedef union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer {
    ULONG64 refCount;
    LONG64 rawValue;
    PVOID ifHighBitIsSetThenShiftLeftToYieldPointerToWeakReference;
};

typedef union PERSONALITYTRANSFORM {
    struct TA_TRANSFORM trans;
    struct TA_TRANSFORM_2D trans2D;
    struct TA_TRANSFORM_OPACITY transOpacity;
};

typedef union PFNSUXCTRL {
     PFNS;
    struct PFNSUXCTRL::PFNS pfns;
    PLONG64 rgpfns[14];
};

typedef union USN_RECORD_UNION {
    struct USN_RECORD_COMMON_HEADER Header;
    struct USN_RECORD_V2 V2;
    struct USN_RECORD_V3 V3;
    struct USN_RECORD_V4 V4;
};

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA {
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
};

typedef union _CLIENT_CALL_RETURN {
    PVOID Pointer;
    LONG64 Simple;
};

typedef union _DL_EUI48 {
};

typedef union _ENERGY_STATE_DURATION {
    ULONG64 Value;
    ULONG LastChangeTime;
    ULONG Duration : 31;
    ULONG IsInState : 1;
};

typedef union _ExecEnvDataEx {
    struct _EXECENVDATAEX_LEVEL1 ExecEnvEnum_Level1;
};

typedef union _FILE_SEGMENT_ELEMENT {
    PVOID Buffer;
    ULONG64 Alignment;
};

typedef union _FOUR_PART_VERSION {
    ULONG64 Version64;
     <unnamed-type-Version32>;
    struct {
        ULONG BuildAndRevision;
        ULONG MajorAndMinor;
    } Version32;
     <unnamed-type-Version16>;
    struct {
        USHORT Revision;
        USHORT Build;
        USHORT Minor;
        USHORT Major;
    } Version16;
};

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 {
    LONG hInproc;
    struct _DWORD_BLOB *hRemote;
};

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002 {
    struct _userHBITMAP *hBitmap;
    struct _userHPALETTE *hPalette;
    struct _userHGLOBAL *hGeneric;
};

typedef union _IMAGE_AUX_SYMBOL {
     <unnamed-type-Sym>;
    struct {
        ULONG TagIndex;
         <unnamed-type-Misc>;
        union {
             <unnamed-type-LnSz>;
            struct {
                USHORT Linenumber;
                USHORT Size;
            } LnSz;
            ULONG TotalSize;
        } Misc;
         <unnamed-type-FcnAry>;
        union {
             <unnamed-type-Function>;
            struct {
                ULONG PointerToLinenumber;
                ULONG PointerToNextFunction;
            } Function;
             <unnamed-type-Array>;
            struct {
                USHORT Dimension[4];
            } Array;
        } FcnAry;
        USHORT TvIndex;
    } Sym;
     <unnamed-type-File>;
    struct {
        UCHAR Name[18];
    } File;
     <unnamed-type-Section>;
    struct {
        ULONG Length;
        USHORT NumberOfRelocations;
        USHORT NumberOfLinenumbers;
        ULONG CheckSum;
        SHORT Number;
        UCHAR Selection;
        UCHAR bReserved;
        SHORT HighNumber;
    } Section;
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
     <unnamed-type-CRC>;
    struct {
        ULONG crc;
        UCHAR rgbReserved[14];
    } CRC;
};

typedef union _IMAGE_AUX_SYMBOL_EX {
     <unnamed-type-Sym>;
    struct {
        ULONG WeakDefaultSymIndex;
        ULONG WeakSearchType;
        UCHAR rgbReserved[12];
    } Sym;
     <unnamed-type-File>;
    struct {
        UCHAR Name[20];
    } File;
     <unnamed-type-Section>;
    struct {
        ULONG Length;
        USHORT NumberOfRelocations;
        USHORT NumberOfLinenumbers;
        ULONG CheckSum;
        SHORT Number;
        UCHAR Selection;
        UCHAR bReserved;
        SHORT HighNumber;
        UCHAR rgbReserved[2];
    } Section;
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    UCHAR rgbReserved[2];
     <unnamed-type-CRC>;
    struct {
        ULONG crc;
        UCHAR rgbReserved[16];
    } CRC;
};

typedef union _JOBOBJECT_ENERGY_TRACKING_STATE {
    ULONG64 Value;
    ULONG UpdateMask;
    ULONG DesiredState;
};

typedef union _LARGE_INTEGER {
    ULONG LowPart;
    LONG HighPart;
     <unnamed-type-u>;
    struct {
        ULONG LowPart;
        LONG HighPart;
    } u;
    LONG64 QuadPart;
};

typedef union _LDR_DLL_NOTIFICATION_DATA {
    struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
};

typedef union _MCI_ADDR {
    ULONG Address;
    ULONG Reserved;
    ULONG64 QuadPart;
};

typedef union _MCI_STATS {
     <unnamed-type-MciStatus>;
    struct {
        USHORT McaErrorCode;
        USHORT ModelErrorCode;
        ULONG OtherInformation : 25;
        ULONG ContextCorrupt : 1;
        ULONG AddressValid : 1;
        ULONG MiscValid : 1;
        ULONG ErrorEnabled : 1;
        ULONG UncorrectedError : 1;
        ULONG StatusOverFlow : 1;
        ULONG Valid : 1;
    } MciStatus;
    ULONG64 QuadPart;
};

typedef union _MM_ETW_PAGE_EXTRA_INFO {
     <unnamed-type-e1>;
    struct {
        ULONG64 SharedInitial : 1;
    } e1;
     <unnamed-type-e2>;
    struct {
        ULONG64 WorkingSetType : 2;
        ULONG64 NotAddedtoWS : 1;
        ULONG64 COWFault : 1;
    } e2;
    ULONG64 ProtoPte;
    PVOID VirtualAddress;
};

typedef union _POWER_STATE {
    enum _SYSTEM_POWER_STATE SystemState;
    enum _DEVICE_POWER_STATE DeviceState;
};

typedef union _PROCESS_AFFINITY_UPDATE_MODE {
    ULONG Flags;
    ULONG EnableAutoUpdate : 1;
    ULONG Permanent : 1;
    ULONG Reserved : 30;
};

typedef union _PROCESS_LOGGING_INFORMATION {
    ULONG Flags;
    ULONG EnableReadVmLogging : 1;
    ULONG EnableWriteVmLogging : 1;
    ULONG EnableProcessSuspendResumeLogging : 1;
    ULONG EnableThreadSuspendResumeLogging : 1;
    ULONG Reserved : 28;
};

typedef union _PROCESS_MEMORY_ALLOCATION_MODE {
    ULONG Flags;
    ULONG TopDown : 1;
    ULONG Reserved : 31;
};

typedef union _PROCESS_READWRITEVM_LOGGING_INFORMATION {
    UCHAR Flags;
    UCHAR EnableReadVmLogging : 1;
    UCHAR EnableWriteVmLogging : 1;
    UCHAR Unused : 6;
};

typedef union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT {
    ULONG Flags;
    ULONG Foreground : 1;
    ULONG Reserved : 31;
};

typedef union _RATE_QUOTA_LIMIT {
    ULONG RateData;
    ULONG RatePercent : 7;
    ULONG Reserved0 : 25;
};

typedef union _RPC_ASYNC_NOTIFICATION_INFO {
     <unnamed-type-APC>;
    struct {
        PVOID NotificationRoutine;
        PVOID hThread;
    } APC;
     <unnamed-type-IOC>;
    struct {
        PVOID hIOPort;
        ULONG dwNumberOfBytesTransferred;
        ULONG64 dwCompletionKey;
        struct _OVERLAPPED *lpOverlapped;
    } IOC;
     <unnamed-type-HWND>;
    struct {
        struct HWND__ *hWnd;
        ULONG Msg;
    } HWND;
    PVOID hEvent;
    PVOID NotificationRoutine;
};

typedef union _RTL_ELEVATION_FLAGS {
    ULONG Flags;
    ULONG ElevationEnabled : 1;
    ULONG VirtualizationEnabled : 1;
    ULONG InstallerDetectEnabled : 1;
    ULONG ReservedBits : 29;
};

typedef union _RTL_IMAGE_MITIGATION_POLICY {
    ULONG64 AuditState : 2;
    ULONG64 AuditFlag : 1;
    ULONG64 EnableAdditionalAuditingOption : 1;
    ULONG64 Reserved : 60;
    ULONG64 PolicyState : 2;
    ULONG64 AlwaysInherit : 1;
    ULONG64 EnableAdditionalPolicyOption : 1;
    ULONG64 AuditReserved : 60;
};

typedef union _RTL_RUN_ONCE {
    PVOID Ptr;
    ULONG64 Value;
    ULONG64 State : 2;
};

typedef union _RTL_TICK_LOCK {
    ULONG64 AsULong64;
    ULONG64 Busy : 1;
    ULONG64 Ticks : 63;
};

typedef union _RemotableHandle::__MIDL_IWinTypes_0009 {
    LONG hInproc;
    LONG hRemote;
};

typedef union _SE_SID {
    struct _SID Sid;
    UCHAR Buffer[68];
};

typedef union _SLIST_HEADER {
    ULONG64 Alignment;
    ULONG64 Region;
     <unnamed-type-HeaderX64>;
    struct {
        ULONG64 Depth : 16;
        ULONG64 Sequence : 48;
        ULONG64 Reserved : 4;
        ULONG64 NextEntry : 60;
    } HeaderX64;
};

typedef union _STORAGE_SPEC_VERSION {
    union {
        UCHAR SubMinor;
        UCHAR Minor;
        USHORT AsUshort;
    } MinorVersion;
    USHORT MajorVersion;
    ULONG AsUlong;
};

typedef union _STREAM_INFORMATION_ENTRY::_StreamInformation {
     _DesiredStorageClass;
    struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass DesiredStorageClass;
};

typedef union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES {
    ULONG HypervisorPages : 1;
    ULONG Reserved : 31;
    ULONG AsUlong;
};

typedef union _SYSDBG_LIVEDUMP_CONTROL_FLAGS {
    ULONG UseDumpStorageStack : 1;
    ULONG CompressMemoryPagesData : 1;
    ULONG IncludeUserSpaceMemoryPages : 1;
    ULONG AbortIfMemoryPressure : 1;
    ULONG Reserved : 28;
    ULONG AsUlong;
};

typedef union _StreamInformation {
     _DesiredStorageClass;
    struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass DesiredStorageClass;
};

typedef union _TIMELINE_BITMAP {
    ULONG64 Value;
    ULONG EndTime;
    ULONG Bitmap;
};

typedef union _ULARGE_INTEGER {
    ULONG LowPart;
    ULONG HighPart;
     <unnamed-type-u>;
    struct {
        ULONG LowPart;
        ULONG HighPart;
    } u;
    ULONG64 QuadPart;
};

typedef union _UNWIND_CODE {
    UCHAR CodeOffset;
    UCHAR UnwindOp : 4;
    UCHAR OpInfo : 4;
     <unnamed-type-EpilogueCode>;
    struct {
        UCHAR OffsetLow;
        UCHAR UnwindOp : 4;
        UCHAR OffsetHigh : 4;
    } EpilogueCode;
    USHORT FrameOffset;
};

typedef union _WINSTATIONINFORMATIONEX_LEVEL {
    struct _WINSTATIONINFORMATIONEX_LEVEL1 WinStationInfoExLevel1;
};

typedef union __MIDL_IAdviseSink_0002 {
    struct _userHBITMAP *hBitmap;
    struct _userHPALETTE *hPalette;
    struct _userHGLOBAL *hGeneric;
};

typedef union __MIDL_IAdviseSink_0003 {
    struct _userHMETAFILEPICT *hMetaFilePict;
    struct _userHENHMETAFILE *hHEnhMetaFile;
    struct _GDI_OBJECT *hGdiHandle;
    struct _userHGLOBAL *hGlobal;
    PWCHAR lpszFileName;
    struct _BYTE_BLOB *pstm;
    struct _BYTE_BLOB *pstg;
};

typedef union __MIDL_IOleAutomationTypes_0001 {
    struct _wireSAFEARR_BSTR BstrStr;
    struct _wireSAFEARR_UNKNOWN UnknownStr;
    struct _wireSAFEARR_DISPATCH DispatchStr;
    struct _wireSAFEARR_VARIANT VariantStr;
    struct _wireSAFEARR_BRECORD RecordStr;
    struct _wireSAFEARR_HAVEIID HaveIidStr;
    struct _BYTE_SIZEDARR ByteStr;
    struct _SHORT_SIZEDARR WordStr;
    struct _LONG_SIZEDARR LongStr;
    struct _HYPER_SIZEDARR HyperStr;
};

typedef union __MIDL_IWinTypes_0001 {
    ULONG dwValue;
    PWCHAR pwszName;
};

typedef union __MIDL_IWinTypes_0002 {
    LONG hInproc;
    struct _DWORD_BLOB *hRemote;
};

typedef union __MIDL_IWinTypes_0003 {
    LONG hInproc;
    struct _FLAGGED_BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0004 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0005 {
    LONG hInproc;
    struct _remoteMETAFILEPICT *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0006 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0007 {
    LONG hInproc;
    struct _userBITMAP *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0008 {
    LONG hInproc;
    struct tagLOGPALETTE *hRemote;
    LONG64 hInproc64;
};

typedef union __MIDL_IWinTypes_0009 {
    LONG hInproc;
    LONG hRemote;
};

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    struct _GUID clsid;
    PWCHAR pFileExt;
    PWCHAR pMimeType;
    PWCHAR pProgId;
    PWCHAR pFileName;
     <unnamed-type-ByName>;
    struct {
        PWCHAR pPackageName;
        struct _GUID PolicyId;
    } ByName;
     <unnamed-type-ByObjectId>;
    struct {
        struct _GUID ObjectId;
        struct _GUID PolicyId;
    } ByObjectId;
};

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    struct _GUID clsid;
    PWCHAR pFileExt;
    PWCHAR pMimeType;
    PWCHAR pProgId;
    PWCHAR pFileName;
     <unnamed-type-ByName>;
    struct {
        PWCHAR pPackageName;
        struct _GUID PolicyId;
    } ByName;
     <unnamed-type-ByObjectId>;
    struct {
        struct _GUID ObjectId;
        struct _GUID PolicyId;
    } ByObjectId;
};

typedef union __m128 {
    FLOAT m128_f32[4];
    ULONG64 m128_u64[2];
    CHAR m128_i8[16];
    SHORT m128_i16[8];
    LONG m128_i32[4];
    LONG64 m128_i64[2];
    UCHAR m128_u8[16];
    USHORT m128_u16[8];
    ULONG m128_u32[4];
};

typedef union __m128i {
    CHAR m128i_i8[16];
    SHORT m128i_i16[8];
    LONG m128i_i32[4];
    LONG64 m128i_i64[2];
    UCHAR m128i_u8[16];
    USHORT m128i_u16[8];
    ULONG m128i_u32[4];
    ULONG64 m128i_u64[2];
};

typedef union __m256 {
    FLOAT m256_f32[8];
};

typedef union __m256i {
    CHAR m256i_i8[32];
    SHORT m256i_i16[16];
    LONG m256i_i32[8];
    LONG64 m256i_i64[4];
    UCHAR m256i_u8[32];
    USHORT m256i_u16[16];
    ULONG m256i_u32[8];
    ULONG64 m256i_u64[4];
};

typedef union __m64 {
    ULONG64 m64_u64;
    FLOAT m64_f32[2];
    CHAR m64_i8[8];
    SHORT m64_i16[4];
    LONG m64_i32[2];
    LONG64 m64_i64;
    UCHAR m64_u8[8];
    USHORT m64_u16[4];
    ULONG m64_u32[2];
};

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001 {
    ULONG dwValue;
    PWCHAR pwszName;
};

typedef union _userHBITMAP::__MIDL_IWinTypes_0007 {
    LONG hInproc;
    struct _userBITMAP *hRemote;
    LONG64 hInproc64;
};

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003 {
    LONG hInproc;
    struct _FLAGGED_BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004 {
    LONG hInproc;
    struct _BYTE_BLOB *hRemote;
    LONG64 hInproc64;
};

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 {
    LONG hInproc;
    struct _remoteMETAFILEPICT *hRemote;
    LONG64 hInproc64;
};

typedef union _userHPALETTE::__MIDL_IWinTypes_0008 {
    LONG hInproc;
    struct tagLOGPALETTE *hRemote;
    LONG64 hInproc64;
};

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 {
    struct _userHMETAFILEPICT *hMetaFilePict;
    struct _userHENHMETAFILE *hHEnhMetaFile;
    struct _GDI_OBJECT *hGdiHandle;
    struct _userHGLOBAL *hGlobal;
    PWCHAR lpszFileName;
    struct _BYTE_BLOB *pstm;
    struct _BYTE_BLOB *pstg;
};

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 {
    struct _wireSAFEARR_BSTR BstrStr;
    struct _wireSAFEARR_UNKNOWN UnknownStr;
    struct _wireSAFEARR_DISPATCH DispatchStr;
    struct _wireSAFEARR_VARIANT VariantStr;
    struct _wireSAFEARR_BRECORD RecordStr;
    struct _wireSAFEARR_HAVEIID HaveIidStr;
    struct _BYTE_SIZEDARR ByteStr;
    struct _SHORT_SIZEDARR WordStr;
    struct _LONG_SIZEDARR LongStr;
    struct _HYPER_SIZEDARR HyperStr;
};

typedef union tagBINDPTR {
    struct tagFUNCDESC *lpfuncdesc;
    struct tagVARDESC *lpvardesc;
    struct ITypeComp *lptcomp;
};

typedef union tagCY {
    ULONG Lo;
    LONG Hi;
    LONG64 int64;
};

typedef union tagUAHMENUITEMMETRICS {
    struct tagSIZE rgsizeBar[2];
    struct tagSIZE rgsizePopup[4];
};

typedef union wil_details_FeaturePropertyCache {
    struct wil_details_FeatureProperties cache;
    struct wil_details_VariantProperties variant;
    LONG var;
    VOID wil_details_FeaturePropertyCache;
    VOID wil_details_FeaturePropertyCache;
    union wil_details_FeaturePropertyCache *operator=;
    union wil_details_FeaturePropertyCache *operator=;
};

typedef enum ABBACKGROUNDSTATES {
    ABBG_NORMAL = 1,
    ABBG_HOT = 2,
    ABBG_DISABLED = 3,
    ABBG_FOCUSED = 4
};

typedef enum ABI::Windows::Foundation::AsyncStatus {
    Started = 0,
    Completed = 1,
    Canceled = 2,
    Error = 3
};

typedef enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags {
    None = 0,
    SuppressExceptions = 1,
    ForceExceptions = 2,
    UseSetErrorInfo = 4,
    SuppressSetErrorInfo = 8
};

typedef enum ACCENT_STATE {
    ACCENT_DISABLED = 0,
    ACCENT_ENABLE_GRADIENT = 1,
    ACCENT_ENABLE_TRANSPARENTGRADIENT = 2,
    ACCENT_ENABLE_BLURBEHIND = 3,
    ACCENT_ENABLE_ACRYLICBLURBEHIND = 4,
    ACCENT_ENABLE_HOSTBACKDROP = 5,
    ACCENT_INVALID_STATE = 6
};

typedef enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE {
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
};

typedef enum ACTCTX_REQUESTED_RUN_LEVEL {
    ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
    ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
    ACTCTX_RUN_LEVEL_NUMBERS = 4
};

typedef enum ACTIVATEOPTIONS {
    AO_NONE = 0,
    AO_DESIGNMODE = 1,
    AO_NOERRORUI = 2,
    AO_NOSPLASHSCREEN = 4,
    AO_PRELAUNCH = 0x2000000
};

typedef enum ADDRESSBANDPARTS {
    ABP_ABBACKGROUND = 1
};

typedef enum ADDTOGRIDSTATES {
    TA_ADDTOGRID_ADDED = 1,
    TA_ADDTOGRID_AFFECTED = 2,
    TA_ADDTOGRID_ROWOUT = 3,
    TA_ADDTOGRID_ROWIN = 4
};

typedef enum ADDTOLISTSTATES {
    TA_ADDTOLIST_ADDED = 1,
    TA_ADDTOLIST_AFFECTED = 2
};

typedef enum ADDTOSEARCHGRIDSTATES {
    TA_ADDTOSEARCHGRID_ADDED = 1,
    TA_ADDTOSEARCHGRID_AFFECTED = 2,
    TA_ADDTOSEARCHGRID_ROWOUT = 3,
    TA_ADDTOSEARCHGRID_ROWIN = 4
};

typedef enum ADDTOSEARCHLISTSTATES {
    TA_ADDTOSEARCHLIST_ADDED = 1,
    TA_ADDTOSEARCHLIST_AFFECTED = 2
};

typedef enum ADJACENT_DISPLAY_EDGES {
    ADE_NONE = 0,
    ADE_LEFT = 1,
    ADE_RIGHT = 2
};

typedef enum AEROWIZARDPARTS {
    AW_TITLEBAR = 1,
    AW_HEADERAREA = 2,
    AW_CONTENTAREA = 3,
    AW_COMMANDAREA = 4,
    AW_BUTTON = 5
};

typedef enum AHE_TYPE {
    AHE_DESKTOP = 0,
    AHE_IMMERSIVE = 1
};

typedef enum ALTTABPARTS {
    ATP_WINDOWTEXT = 1
};

typedef enum ANIMATIONSPARTS {
    TAS_EXPAND = 1,
    TAS_COLLAPSE = 2,
    TAS_REPOSITION = 3,
    TAS_FADEIN = 4,
    TAS_FADEOUT = 5,
    TAS_ADDTOLIST = 6,
    TAS_DELETEFROMLIST = 7,
    TAS_ADDTOGRID = 8,
    TAS_DELETEFROMGRID = 9,
    TAS_ADDTOSEARCHGRID = 10,
    TAS_DELETEFROMSEARCHGRID = 11,
    TAS_ADDTOSEARCHLIST = 12,
    TAS_DELETEFROMSEARCHLIST = 13,
    TAS_SHOWEDGEUI = 14,
    TAS_SHOWPANEL = 15,
    TAS_HIDEEDGEUI = 16,
    TAS_HIDEPANEL = 17,
    TAS_SHOWPOPUP = 18,
    TAS_HIDEPOPUP = 19,
    TAS_POINTERDOWN = 20,
    TAS_POINTERUP = 21,
    TAS_DRAGSOURCESTART = 22,
    TAS_DRAGSOURCEEND = 23,
    TAS_TRANSITIONCONTENT = 24,
    TAS_REVEAL = 25,
    TAS_HIDE = 26,
    TAS_DRAGBETWEENENTER = 27,
    TAS_DRAGBETWEENLEAVE = 28,
    TAS_SWIPESELECT = 29,
    TAS_SWIPEDESELECT = 30,
    TAS_SWIPEREVEAL = 31,
    TAS_ENTERPAGE = 32,
    TAS_TRANSITIONPAGE = 33,
    TAS_CROSSFADE = 34,
    TAS_PEEK = 35,
    TAS_UPDATEBADGE = 36
};

typedef enum APPCOMPATMODEID {
    ACMID_NONE = 0,
    ACMID_CONTEXTMENU = 1,
    ACMID_DOCOBJECT = 2,
    ACMID_WIN95DEFVIEW = 3,
    ACMID_MYCOMPUTERFIRST = 4,
    ACMID_OLDREGITEMGDN = 5,
    ACMID_STATICJUMPLISTSIZE = 6,
    ACMID_LOADCOLUMNHANDLER = 7,
    ACMID_ANSI = 8,
    ACMID_STRIPFOLDERBIT = 9,
    ACMID_WIN95SHLEXEC = 10,
    ACMID_STAROFFICE5PRINTER = 11,
    ACMID_NOVALIDATEFSIDS = 12,
    ACMID_FORCELIBRARYPARSE = 13,
    ACMID_WIN95BINDTOOBJECT = 14,
    ACMID_IGNOREENUMRESET = 15,
    ACMID_NOTHREADUSECHECKS = 16,
    ACMID_ANSIDISPLAYNAMES = 17,
    ACMID_FILEOPENBOGUSCTRLID = 18,
    ACMID_FORCELFNIDLIST = 19,
    ACMID_APPISOFFICE = 20,
    ACMID_RETURNALLATTRIBS = 21,
    ACMID_NODEFVIEWMSGPUMP = 22,
    ACMID_RETURNNONURLSASURLS = 23,
    ACMID_IGNOREDEFAULTTOKEN = 24,
    ACMID_COINITIALIZE_COMPAREIDS = 25,
    ACMID_LAST = 26
};

typedef enum APPDOCLISTTYPE {
    ADLT_RECENT = 0,
    ADLT_FREQUENT = 1
};

typedef enum APPLICATION_LAYOUT_MODE {
    ALM_NORMAL = 0,
    ALM_LOCKSCREEN = 1
};

typedef enum APPLICATION_SEARCH_TYPE {
    AST_LOCAL = 0,
    AST_GLOBAL = 1
};

typedef enum APPLICATION_VIEW_MIN_WIDTH {
    AVMW_DEFAULT = 0,
    AVMW_320 = 1,
    AVMW_500 = 2
};

typedef enum APPLICATION_VIEW_ORIENTATION {
    AVO_LANDSCAPE = 0,
    AVO_PORTRAIT = 1
};

typedef enum APPLICATION_VIEW_SIZE_PREFERENCE {
    AVSP_DEFAULT = 0,
    AVSP_USE_LESS = 1,
    AVSP_USE_HALF = 2,
    AVSP_USE_MORE = 3,
    AVSP_USE_MINIMUM = 4,
    AVSP_USE_NONE = 5,
    AVSP_CUSTOM = 6
};

typedef enum APPLICATION_VIEW_STATE {
    AVS_FULLSCREEN_LANDSCAPE = 0,
    AVS_FILLED = 1,
    AVS_SNAPPED = 2,
    AVS_FULLSCREEN_PORTRAIT = 3
};

typedef enum ARRANGED_WINDOW_SIZE_RESULT {
    AWSR_SIZED = 0,
    AWSR_CANCELED = 1,
    AWSR_ABORTED = 2
};

typedef enum ARRANGEMENT_COMPLETED_RESULT {
    ACR_ARRANGED = 0,
    ACR_DISARRANGED = 1,
    ACR_CANCELED = 2
};

typedef enum ARRANGEMENT_HOTKEY_DISAMBIGUATION {
    AHD_HOTKEY = 0,
    AHD_INTERRUPTED = 1,
    AHD_COMPLETED = 2
};

typedef enum ARROWBTNSTATES {
    ABS_UPNORMAL = 1,
    ABS_UPHOT = 2,
    ABS_UPPRESSED = 3,
    ABS_UPDISABLED = 4,
    ABS_DOWNNORMAL = 5,
    ABS_DOWNHOT = 6,
    ABS_DOWNPRESSED = 7,
    ABS_DOWNDISABLED = 8,
    ABS_LEFTNORMAL = 9,
    ABS_LEFTHOT = 10,
    ABS_LEFTPRESSED = 11,
    ABS_LEFTDISABLED = 12,
    ABS_RIGHTNORMAL = 13,
    ABS_RIGHTHOT = 14,
    ABS_RIGHTPRESSED = 15,
    ABS_RIGHTDISABLED = 16,
    ABS_UPHOVER = 17,
    ABS_DOWNHOVER = 18,
    ABS_LEFTHOVER = 19,
    ABS_RIGHTHOVER = 20
};

typedef enum ASSOCCLASS {
    ASSOCCLASS_SHELL_KEY = 0,
    ASSOCCLASS_PROGID_KEY = 1,
    ASSOCCLASS_PROGID_STR = 2,
    ASSOCCLASS_CLSID_KEY = 3,
    ASSOCCLASS_CLSID_STR = 4,
    ASSOCCLASS_APP_KEY = 5,
    ASSOCCLASS_APP_STR = 6,
    ASSOCCLASS_SYSTEM_STR = 7,
    ASSOCCLASS_FOLDER = 8,
    ASSOCCLASS_STAR = 9,
    ASSOCCLASS_FIXED_PROGID_STR = 10,
    ASSOCCLASS_PROTOCOL_STR = 11
};

typedef enum ASSOCDATA {
    ASSOCDATA_MSIDESCRIPTOR = 1,
    ASSOCDATA_NOACTIVATEHANDLER = 2,
    ASSOCDATA_UNUSED1 = 3,
    ASSOCDATA_HASPERUSERASSOC = 4,
    ASSOCDATA_EDITFLAGS = 5,
    ASSOCDATA_VALUE = 6,
    ASSOCDATA_MAX = 7
};

typedef enum ASSOCENUM {
    ASSOCENUM_NONE = 0
};

typedef enum ASSOCIATIONLEVEL {
    AL_MACHINE = 0,
    AL_EFFECTIVE = 1,
    AL_USER = 2
};

typedef enum ASSOCIATIONTYPE {
    AT_FILEEXTENSION = 0,
    AT_URLPROTOCOL = 1,
    AT_STARTMENUCLIENT = 2,
    AT_MIMETYPE = 3
};

typedef enum ASSOCKEY {
    ASSOCKEY_SHELLEXECCLASS = 1,
    ASSOCKEY_APP = 2,
    ASSOCKEY_CLASS = 3,
    ASSOCKEY_BASECLASS = 4,
    ASSOCKEY_MAX = 5
};

typedef enum ASSOCSTR {
    ASSOCSTR_COMMAND = 1,
    ASSOCSTR_EXECUTABLE = 2,
    ASSOCSTR_FRIENDLYDOCNAME = 3,
    ASSOCSTR_FRIENDLYAPPNAME = 4,
    ASSOCSTR_NOOPEN = 5,
    ASSOCSTR_SHELLNEWVALUE = 6,
    ASSOCSTR_DDECOMMAND = 7,
    ASSOCSTR_DDEIFEXEC = 8,
    ASSOCSTR_DDEAPPLICATION = 9,
    ASSOCSTR_DDETOPIC = 10,
    ASSOCSTR_INFOTIP = 11,
    ASSOCSTR_QUICKTIP = 12,
    ASSOCSTR_TILEINFO = 13,
    ASSOCSTR_CONTENTTYPE = 14,
    ASSOCSTR_DEFAULTICON = 15,
    ASSOCSTR_SHELLEXTENSION = 16,
    ASSOCSTR_DROPTARGET = 17,
    ASSOCSTR_DELEGATEEXECUTE = 18,
    ASSOCSTR_SUPPORTED_URI_PROTOCOLS = 19,
    ASSOCSTR_PROGID = 20,
    ASSOCSTR_APPID = 21,
    ASSOCSTR_APPPUBLISHER = 22,
    ASSOCSTR_APPICONREFERENCE = 23,
    ASSOCSTR_MAX = 24
};

typedef enum ASSOC_FILTER {
    ASSOC_FILTER_NONE = 0,
    ASSOC_FILTER_RECOMMENDED = 1
};

typedef enum ATL::atlTraceFlags {
    atlTraceUser = 1,
    atlTraceUser2 = 2,
    atlTraceUser3 = 4,
    atlTraceUser4 = 8,
    atlTraceGeneral = 32,
    atlTraceCOM = 64,
    atlTraceQI = 128,
    atlTraceRegistrar = 256,
    atlTraceRefcount = 512,
    atlTraceWindowing = 1024,
    atlTraceControls = 2048,
    atlTraceHosting = 4096,
    atlTraceDBClient = 8192,
    atlTraceDBProvider = 16384,
    atlTraceSnapin = 0x8000,
    atlTraceNotImpl = 0x10000
};

typedef enum ATTACHMENT_ACTION {
    ATTACHMENT_ACTION_CANCEL = 0,
    ATTACHMENT_ACTION_SAVE = 1,
    ATTACHMENT_ACTION_EXEC = 2
};

typedef enum ATTACHMENT_PROMPT {
    ATTACHMENT_PROMPT_NONE = 0,
    ATTACHMENT_PROMPT_SAVE = 1,
    ATTACHMENT_PROMPT_EXEC = 2,
    ATTACHMENT_PROMPT_EXEC_OR_SAVE = 3
};

typedef enum AUTOMATION_VERIFICATION_CLASS {
    SessionArbitrationVerification = 0,
    SessionMultiChoiceVerification = 1
};

typedef enum AWSTYPE {
    AWS_SCURVE = 0,
    AWS_LINEAR = 1
};

typedef enum AccentIndex {
    AccentIndex_Invalid = -1,
    AccentIndex_AccentPlus3 = 0,
    AccentIndex_AccentPlus2 = 1,
    AccentIndex_AccentPlus1 = 2,
    AccentIndex_Accent = 3,
    AccentIndex_AccentMinus1 = 4,
    AccentIndex_AccentMinus2 = 5,
    AccentIndex_AccentMinus3 = 6,
    AccentIndex_Complementary = 7
};

typedef enum AgileReferenceOptions {
    AGILEREFERENCE_DEFAULT = 0,
    AGILEREFERENCE_DELAYEDMARSHAL = 1
};

typedef enum BACKGROUNDSTATES {
    EBS_NORMAL = 1,
    EBS_HOT = 2,
    EBS_DISABLED = 3,
    EBS_FOCUSED = 4,
    EBS_READONLY = 5,
    EBS_ASSIST = 6
};

typedef enum BACKGROUNDWITHBORDERSTATES {
    EBWBS_NORMAL = 1,
    EBWBS_HOT = 2,
    EBWBS_DISABLED = 3,
    EBWBS_FOCUSED = 4
};

typedef enum BALLOONSTATES {
    TTBS_NORMAL = 1,
    TTBS_LINK = 2
};

typedef enum BALLOONSTEMSTATES {
    TTBSS_POINTINGUPLEFTWALL = 1,
    TTBSS_POINTINGUPCENTERED = 2,
    TTBSS_POINTINGUPRIGHTWALL = 3,
    TTBSS_POINTINGDOWNRIGHTWALL = 4,
    TTBSS_POINTINGDOWNCENTERED = 5,
    TTBSS_POINTINGDOWNLEFTWALL = 6
};

typedef enum BANNER_NOTIFICATION_EVENT {
    BNE_Rendered = 0,
    BNE_Hovered = 1,
    BNE_Closed = 2,
    BNE_Dismissed = 3,
    BNE_Button1Clicked = 4,
    BNE_Button2Clicked = 5
};

typedef enum BARBACKGROUNDSTATES {
    MB_ACTIVE = 1,
    MB_INACTIVE = 2
};

typedef enum BARFOREGROUNDSTATES {
    IBARFG_NORMAL = 1,
    IBARFG_HOT = 2,
    IBARFG_PRESSED = 3,
    IBARFG_KEYFOCUSED = 4
};

typedef enum BARITEMSTATES {
    MBI_NORMAL = 1,
    MBI_HOT = 2,
    MBI_PUSHED = 3,
    MBI_DISABLED = 4,
    MBI_DISABLEDHOT = 5,
    MBI_DISABLEDPUSHED = 6
};

typedef enum BARRIERPAGEPARTS {
    BPG_PANEBACKGROUND = 1
};

typedef enum BCBOVERFLOWCHEVRONSTATES {
    BCBFC_NORMAL = 1,
    BCBFC_HOT = 2,
    BCBFC_DISABLED = 3,
    BCBFC_FOCUSED = 4
};

typedef enum BCRYPT_HASH_OPERATION_TYPE {
    BCRYPT_HASH_OPERATION_HASH_DATA = 1,
    BCRYPT_HASH_OPERATION_FINISH_HASH = 2
};

typedef enum BCRYPT_MULTI_OPERATION_TYPE {
    BCRYPT_OPERATION_TYPE_HASH = 1
};

typedef enum BGTYPE {
    BT_IMAGEFILE = 0,
    BT_BORDERFILL = 1,
    BT_NONE = 2
};

typedef enum BIDI_TYPE {
    BIDI_NULL = 0,
    BIDI_INT = 1,
    BIDI_FLOAT = 2,
    BIDI_BOOL = 3,
    BIDI_STRING = 4,
    BIDI_TEXT = 5,
    BIDI_ENUM = 6,
    BIDI_BLOB = 7
};

typedef enum BINARY_TEXT_ENCODE_SCHEME {
    BTES_MIME64 = 1,
    BTES_SIMPLEUUENCODE = 2,
    BTES_MIME64_FILENAME = 3
};

typedef enum BODYSTATES {
    FBS_NORMAL = 1,
    FBS_EMPHASIZED = 2
};

typedef enum BORDERSTATES {
    CBB_NORMAL = 1,
    CBB_HOT = 2,
    CBB_FOCUSED = 3,
    CBB_DISABLED = 4
};

typedef enum BORDERTYPE {
    BT_RECT = 0,
    BT_ROUNDRECT = 1,
    BT_ELLIPSE = 2
};

typedef enum BORDER_HSCROLLSTATES {
    LBPSH_NORMAL = 1,
    LBPSH_FOCUSED = 2,
    LBPSH_HOT = 3,
    LBPSH_DISABLED = 4
};

typedef enum BORDER_HVSCROLLSTATES {
    LBPSHV_NORMAL = 1,
    LBPSHV_FOCUSED = 2,
    LBPSHV_HOT = 3,
    LBPSHV_DISABLED = 4
};

typedef enum BORDER_NOSCROLLSTATES {
    LBPSN_NORMAL = 1,
    LBPSN_FOCUSED = 2,
    LBPSN_HOT = 3,
    LBPSN_DISABLED = 4
};

typedef enum BORDER_VSCROLLSTATES {
    LBPSV_NORMAL = 1,
    LBPSV_FOCUSED = 2,
    LBPSV_HOT = 3,
    LBPSV_DISABLED = 4
};

typedef enum BOTTOMFRAMESTATES {
    DWMBFS_ACTIVE = 1,
    DWMBFS_INACTIVE = 2
};

typedef enum BOTTOMSHADOWSTATES {
    DWMBSS_ACTIVE = 1,
    DWMBSS_INACTIVE = 2
};

typedef enum BP_STATE {
    BPS_FREE = 0,
    BPS_ACQUIRED = 1,
    BPS_PAINTING = 2,
    BPS_ANIMATING = 3
};

typedef enum BREADCRUMBBARPARTS {
    BCBP_BCBOVERFLOWCHEVRON = 1
};

typedef enum BROWSER_RESTRICTIONS {
    REST_BROWSER_NONE = 0,
    REST_NOTOOLBARCUSTOMIZE = 1,
    REST_NOBANDCUSTOMIZE = 2,
    REST_SMALLICONS = 3,
    REST_LOCKICONSIZE = 4,
    REST_SPECIFYDEFAULTBUTTONS = 5,
    REST_BTN_BACK = 6,
    REST_BTN_FORWARD = 7,
    REST_BTN_STOPDOWNLOAD = 8,
    REST_BTN_REFRESH = 9,
    REST_BTN_HOME = 10,
    REST_BTN_SEARCH = 11,
    REST_BTN_HISTORY = 12,
    REST_BTN_FAVORITES = 13,
    REST_BTN_ALLFOLDERS = 14,
    REST_BTN_THEATER = 15,
    REST_BTN_TOOLS = 16,
    REST_BTN_MAIL = 17,
    REST_BTN_FONTS = 18,
    REST_BTN_PRINT = 19,
    REST_BTN_EDIT = 20,
    REST_BTN_DISCUSSIONS = 21,
    REST_BTN_CUT = 22,
    REST_BTN_COPY = 23,
    REST_BTN_PASTE = 24,
    REST_BTN_ENCODING = 25,
    REST_NoUserAssist = 26,
    REST_NoWindowsUpdate = 27,
    REST_NoExpandedNewMenu = 28,
    REST_NOFILEURL = 29,
    REST_BTN_PRINTPREVIEW = 30,
    REST_BTN_MEDIABAR = 31,
    REST_BTN_PANNINGTOOL = 32,
    REST_BTN_FEEDS = 33,
    REST_BTN_PAGE = 34,
    REST_BTN_HELP = 35,
    REST_NoChannelUI = 0x50000001,
    REST_NoAddingChannels = 0x50000002,
    REST_NoEditingChannels = 0x50000003,
    REST_NoRemovingChannels = 0x50000004,
    REST_NoAddingSubscriptions = 0x50000005,
    REST_NoEditingSubscriptions = 0x50000006,
    REST_NoRemovingSubscriptions = 0x50000007,
    REST_NoChannelLogging = 0x50000008,
    REST_NoManualUpdates = 0x50000009,
    REST_NoScheduledUpdates = 0x5000000a,
    REST_NoUnattendedDialing = 0x5000000b,
    REST_NoChannelContent = 0x5000000c,
    REST_NoSubscriptionContent = 0x5000000d,
    REST_NoEditingScheduleGroups = 0x5000000e,
    REST_MaxChannelSize = 0x5000000f,
    REST_MaxSubscriptionSize = 0x50000010,
    REST_MaxChannelCount = 0x50000011,
    REST_MaxSubscriptionCount = 0x50000012,
    REST_MinUpdateInterval = 0x50000013,
    REST_UpdateExcludeBegin = 0x50000014,
    REST_UpdateExcludeEnd = 0x50000015,
    REST_UpdateInNewProcess = 0x50000016,
    REST_MaxWebcrawlLevels = 0x50000017,
    REST_MaxChannelLevels = 0x50000018,
    REST_NoSubscriptionPasswords = 0x50000019,
    REST_NoBrowserSaveWebComplete = 0x5000001a,
    REST_NoSearchCustomization = 0x5000001b,
    REST_NoSplash = 0x5000001c,
    REST_NoSearchBox = 0x5000001d,
    REST_NoChangeDefaultSearchProvider = 0x5000001e,
    REST_AddPolicySearchProviders = 0x5000001f,
    REST_UsePolicySearchProvidersOnly = 0x50000020,
    REST_NoFileOpen = 0x60000001,
    REST_NoFileNew = 0x60000002,
    REST_NoBrowserSaveAs = 0x60000003,
    REST_NoBrowserOptions = 0x60000004,
    REST_NoFavorites = 0x60000005,
    REST_NoSelectDownloadDir = 0x60000006,
    REST_NoBrowserContextMenu = 0x60000007,
    REST_NoBrowserClose = 0x60000008,
    REST_NoOpeninNewWnd = 0x60000009,
    REST_NoTheaterMode = 0x6000000a,
    REST_NoFindFiles = 0x6000000b,
    REST_NoViewSource = 0x6000000c,
    REST_GoMenu = 0x6000000d,
    REST_NoToolbarOptions = 0x6000000e,
    REST_NoHelpItem_Tutorial = 0x60000011,
    REST_NoHelpItem_SendFeedback = 0x60000012,
    REST_AlwaysPromptWhenDownload = 0x60000013,
    REST_NoNavButtons = 0x60000014,
    REST_NoHelpMenu = 0x60000015,
    REST_NoBrowserBars = 0x60000016,
    REST_NoToolBar = 0x60000017,
    REST_NoAddressBar = 0x60000018,
    REST_NoLinksBar = 0x60000019,
    REST_NoPrinting = 0x60000020,
    REST_No_LaunchMediaBar = 0x60000021,
    REST_No_MediaBarOnlineContent = 0x60000022,
    REST_NoCrashDetection = 0x60000023,
    REST_NoExtensionManagement = 0x60000024,
    REST_NoPopupManagement = 0x60000025,
    REST_NoDefaultTextSize = 0x60000026
};

typedef enum BUTTONACTIVECAPTIONDARKSTATES {
    DWMBACASD_NORMAL = 1,
    DWMBACASD_HOT = 2,
    DWMBACASD_PUSHED = 3,
    DWMBACASD_DISABLED = 4
};

typedef enum BUTTONACTIVECAPTIONENDDARKSTATES {
    DWMBACAESD_NORMAL = 1,
    DWMBACAESD_HOT = 2,
    DWMBACAESD_PUSHED = 3,
    DWMBACAESD_DISABLED = 4
};

typedef enum BUTTONACTIVECAPTIONENDSTATES {
    DWMBACAES_NORMAL = 1,
    DWMBACAES_HOT = 2,
    DWMBACAES_PUSHED = 3,
    DWMBACAES_DISABLED = 4
};

typedef enum BUTTONACTIVECAPTIONSTATES {
    DWMBACAS_NORMAL = 1,
    DWMBACAS_HOT = 2,
    DWMBACAS_PUSHED = 3,
    DWMBACAS_DISABLED = 4
};

typedef enum BUTTONACTIVECLOSEALONESTATES {
    DWMBACLAS_NORMAL = 1,
    DWMBACLAS_HOT = 2,
    DWMBACLAS_PUSHED = 3,
    DWMBACLAS_DISABLED = 4
};

typedef enum BUTTONACTIVECLOSESTATES {
    DWMBACS_NORMAL = 1,
    DWMBACS_HOT = 2,
    DWMBACS_PUSHED = 3,
    DWMBACS_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH120DARKSTATES {
    DWMBCGLY120D_NORMAL = 1,
    DWMBCGLY120D_HOT = 2,
    DWMBCGLY120D_PUSHED = 3,
    DWMBCGLY120D_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH120STATES {
    DWMBCGLY120_NORMAL = 1,
    DWMBCGLY120_HOT = 2,
    DWMBCGLY120_PUSHED = 3,
    DWMBCGLY120_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH144DARKSTATES {
    DWMBCGLY144D_NORMAL = 1,
    DWMBCGLY144D_HOT = 2,
    DWMBCGLY144D_PUSHED = 3,
    DWMBCGLY144D_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH144STATES {
    DWMBCGLY144_NORMAL = 1,
    DWMBCGLY144_HOT = 2,
    DWMBCGLY144_PUSHED = 3,
    DWMBCGLY144_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH192DARKSTATES {
    DWMBCGLY192D_NORMAL = 1,
    DWMBCGLY192D_HOT = 2,
    DWMBCGLY192D_PUSHED = 3,
    DWMBCGLY192D_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH192STATES {
    DWMBCGLY192_NORMAL = 1,
    DWMBCGLY192_HOT = 2,
    DWMBCGLY192_PUSHED = 3,
    DWMBCGLY192_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH96DARKSTATES {
    DWMBCGLY96D_NORMAL = 1,
    DWMBCGLY96D_HOT = 2,
    DWMBCGLY96D_PUSHED = 3,
    DWMBCGLY96D_DISABLED = 4
};

typedef enum BUTTONCLOSEGLYPH96STATES {
    DWMBCGLY96_NORMAL = 1,
    DWMBCGLY96_HOT = 2,
    DWMBCGLY96_PUSHED = 3,
    DWMBCGLY96_DISABLED = 4
};

typedef enum BUTTONINACTIVECAPTIONDARKSTATES {
    DWMBICASD_NORMAL = 1,
    DWMBICASD_HOT = 2,
    DWMBICASD_PUSHED = 3,
    DWMBICASD_DISABLED = 4
};

typedef enum BUTTONINACTIVECAPTIONENDDARKSTATES {
    DWMBICAESD_NORMAL = 1,
    DWMBICAESD_HOT = 2,
    DWMBICAESD_PUSHED = 3,
    DWMBICAESD_DISABLED = 4
};

typedef enum BUTTONINACTIVECAPTIONENDSTATES {
    DWMBICAES_NORMAL = 1,
    DWMBICAES_HOT = 2,
    DWMBICAES_PUSHED = 3,
    DWMBICAES_DISABLED = 4
};

typedef enum BUTTONINACTIVECAPTIONSTATES {
    DWMBICAS_NORMAL = 1,
    DWMBICAS_HOT = 2,
    DWMBICAS_PUSHED = 3,
    DWMBICAS_DISABLED = 4
};

typedef enum BUTTONINACTIVECLOSEALONESTATES {
    DWMBICLAS_NORMAL = 1,
    DWMBICLAS_HOT = 2,
    DWMBICLAS_PUSHED = 3,
    DWMBICLAS_DISABLED = 4
};

typedef enum BUTTONINACTIVECLOSESTATES {
    DWMBICS_NORMAL = 1,
    DWMBICS_HOT = 2,
    DWMBICS_PUSHED = 3,
    DWMBICS_DISABLED = 4
};

typedef enum BUTTONPARTS {
    BP_PUSHBUTTON = 1,
    BP_RADIOBUTTON = 2,
    BP_CHECKBOX = 3,
    BP_GROUPBOX = 4,
    BP_USERBUTTON = 5,
    BP_COMMANDLINK = 6,
    BP_COMMANDLINKGLYPH = 7,
    BP_RADIOBUTTON_HCDISABLED = 8,
    BP_CHECKBOX_HCDISABLED = 9,
    BP_GROUPBOX_HCDISABLED = 10,
    BP_PUSHBUTTONDROPDOWN = 11
};

typedef enum BUTTONSTATES {
    THB_NORMAL = 1,
    THB_INACTIVE = 2
};

typedef enum BrowserNavConstants {
    navOpenInNewWindow = 1,
    navNoHistory = 2,
    navNoReadFromCache = 4,
    navNoWriteToCache = 8,
    navAllowAutosearch = 16,
    navBrowserBar = 32,
    navHyperlink = 64,
    navEnforceRestricted = 128,
    navNewWindowsManaged = 256,
    navUntrustedForDownload = 512,
    navTrustedForActiveX = 1024,
    navOpenInNewTab = 2048,
    navOpenInBackgroundTab = 4096,
    navKeepWordWheelText = 8192,
    navVirtualTab = 16384,
    navBlockRedirectsXDomain = 0x8000,
    navOpenNewForegroundTab = 0x10000,
    navTravelLogScreenshot = 0x20000,
    navDeferUnload = 0x40000,
    navSpeculative = 0x80000,
    navSuggestNewWindow = 0x100000,
    navSuggestNewTab = 0x200000,
    navReserved1 = 0x400000,
    navHomepageNavigate = 0x800000,
    navRefresh = 0x1000000,
    navHostNavigation = 0x2000000,
    navReserved2 = 0x4000000,
    navReserved3 = 0x8000000,
    navReserved4 = 0x10000000,
    navReserved5 = 0x20000000,
    navReserved6 = 0x40000000,
    navReserved7 = -2147483648
};

typedef enum ButtonHelpGlyph120DarkSTATES {
    DWMBHGLY120D_NORMAL = 1,
    DWMBHGLY120D_HOT = 2,
    DWMBHGLY120D_PUSHED = 3,
    DWMBHGLY120D_DISABLED = 4
};

typedef enum ButtonHelpGlyph120STATES {
    DWMBHGLY120_NORMAL = 1,
    DWMBHGLY120_HOT = 2,
    DWMBHGLY120_PUSHED = 3,
    DWMBHGLY120_DISABLED = 4
};

typedef enum ButtonHelpGlyph144DarkSTATES {
    DWMBHGLY144D_NORMAL = 1,
    DWMBHGLY144D_HOT = 2,
    DWMBHGLY144D_PUSHED = 3,
    DWMBHGLY144D_DISABLED = 4
};

typedef enum ButtonHelpGlyph144STATES {
    DWMBHGLY144_NORMAL = 1,
    DWMBHGLY144_HOT = 2,
    DWMBHGLY144_PUSHED = 3,
    DWMBHGLY144_DISABLED = 4
};

typedef enum ButtonHelpGlyph192DarkSTATES {
    DWMBHGLY192D_NORMAL = 1,
    DWMBHGLY192D_HOT = 2,
    DWMBHGLY192D_PUSHED = 3,
    DWMBHGLY192D_DISABLED = 4
};

typedef enum ButtonHelpGlyph192STATES {
    DWMBHGLY192_NORMAL = 1,
    DWMBHGLY192_HOT = 2,
    DWMBHGLY192_PUSHED = 3,
    DWMBHGLY192_DISABLED = 4
};

typedef enum ButtonHelpGlyph96DarkSTATES {
    DWMBHGLY96D_NORMAL = 1,
    DWMBHGLY96D_HOT = 2,
    DWMBHGLY96D_PUSHED = 3,
    DWMBHGLY96D_DISABLED = 4
};

typedef enum ButtonHelpGlyph96STATES {
    DWMBHGLY96_NORMAL = 1,
    DWMBHGLY96_HOT = 2,
    DWMBHGLY96_PUSHED = 3,
    DWMBHGLY96_DISABLED = 4
};

typedef enum ButtonMaxGlyph120DarkSTATES {
    DWMBMAXGLY120D_NORMAL = 1,
    DWMBMAXGLY120D_HOT = 2,
    DWMBMAXGLY120D_PUSHED = 3,
    DWMBMAXGLY120D_DISABLED = 4
};

typedef enum ButtonMaxGlyph120STATES {
    DWMBMAXGLY120_NORMAL = 1,
    DWMBMAXGLY120_HOT = 2,
    DWMBMAXGLY120_PUSHED = 3,
    DWMBMAXGLY120_DISABLED = 4
};

typedef enum ButtonMaxGlyph144DarkSTATES {
    DWMBMAXGLY144D_NORMAL = 1,
    DWMBMAXGLY144D_HOT = 2,
    DWMBMAXGLY144D_PUSHED = 3,
    DWMBMAXGLY144D_DISABLED = 4
};

typedef enum ButtonMaxGlyph144STATES {
    DWMBMAXGLY144_NORMAL = 1,
    DWMBMAXGLY144_HOT = 2,
    DWMBMAXGLY144_PUSHED = 3,
    DWMBMAXGLY144_DISABLED = 4
};

typedef enum ButtonMaxGlyph192DarkSTATES {
    DWMBMAXGLY192D_NORMAL = 1,
    DWMBMAXGLY192D_HOT = 2,
    DWMBMAXGLY192D_PUSHED = 3,
    DWMBMAXGLY192D_DISABLED = 4
};

typedef enum ButtonMaxGlyph192STATES {
    DWMBMAXGLY192_NORMAL = 1,
    DWMBMAXGLY192_HOT = 2,
    DWMBMAXGLY192_PUSHED = 3,
    DWMBMAXGLY192_DISABLED = 4
};

typedef enum ButtonMaxGlyph96DarkSTATES {
    DWMBMAXGLY96D_NORMAL = 1,
    DWMBMAXGLY96D_HOT = 2,
    DWMBMAXGLY96D_PUSHED = 3,
    DWMBMAXGLY96D_DISABLED = 4
};

typedef enum ButtonMaxGlyph96STATES {
    DWMBMAXGLY96_NORMAL = 1,
    DWMBMAXGLY96_HOT = 2,
    DWMBMAXGLY96_PUSHED = 3,
    DWMBMAXGLY96_DISABLED = 4
};

typedef enum ButtonMinGlyph120DarkSTATES {
    DWMBMINGLY120D_NORMAL = 1,
    DWMBMINGLY120D_HOT = 2,
    DWMBMINGLY120D_PUSHED = 3,
    DWMBMINGLY120D_DISABLED = 4
};

typedef enum ButtonMinGlyph120STATES {
    DWMBMINGLY120_NORMAL = 1,
    DWMBMINGLY120_HOT = 2,
    DWMBMINGLY120_PUSHED = 3,
    DWMBMINGLY120_DISABLED = 4
};

typedef enum ButtonMinGlyph144DarkSTATES {
    DWMBMINGLY144D_NORMAL = 1,
    DWMBMINGLY144D_HOT = 2,
    DWMBMINGLY144D_PUSHED = 3,
    DWMBMINGLY144D_DISABLED = 4
};

typedef enum ButtonMinGlyph144STATES {
    DWMBMINGLY144_NORMAL = 1,
    DWMBMINGLY144_HOT = 2,
    DWMBMINGLY144_PUSHED = 3,
    DWMBMINGLY144_DISABLED = 4
};

typedef enum ButtonMinGlyph192DarkSTATES {
    DWMBMINGLY192D_NORMAL = 1,
    DWMBMINGLY192D_HOT = 2,
    DWMBMINGLY192D_PUSHED = 3,
    DWMBMINGLY192D_DISABLED = 4
};

typedef enum ButtonMinGlyph192STATES {
    DWMBMINGLY192_NORMAL = 1,
    DWMBMINGLY192_HOT = 2,
    DWMBMINGLY192_PUSHED = 3,
    DWMBMINGLY192_DISABLED = 4
};

typedef enum ButtonMinGlyph96DarkSTATES {
    DWMBMINGLY96D_NORMAL = 1,
    DWMBMINGLY96D_HOT = 2,
    DWMBMINGLY96D_PUSHED = 3,
    DWMBMINGLY96D_DISABLED = 4
};

typedef enum ButtonMinGlyph96STATES {
    DWMBMINGLY96_NORMAL = 1,
    DWMBMINGLY96_HOT = 2,
    DWMBMINGLY96_PUSHED = 3,
    DWMBMINGLY96_DISABLED = 4
};

typedef enum ButtonRestoreGlyph120DarkSTATES {
    DWMBRESGLY120D_NORMAL = 1,
    DWMBRESGLY120D_HOT = 2,
    DWMBRESGLY120D_PUSHED = 3,
    DWMBRESGLY120D_DISABLED = 4
};

typedef enum ButtonRestoreGlyph120STATES {
    DWMBRESGLY120_NORMAL = 1,
    DWMBRESGLY120_HOT = 2,
    DWMBRESGLY120_PUSHED = 3,
    DWMBRESGLY120_DISABLED = 4
};

typedef enum ButtonRestoreGlyph144DarkSTATES {
    DWMBRESGLY144D_NORMAL = 1,
    DWMBRESGLY144D_HOT = 2,
    DWMBRESGLY144D_PUSHED = 3,
    DWMBRESGLY144D_DISABLED = 4
};

typedef enum ButtonRestoreGlyph144STATES {
    DWMBRESGLY144_NORMAL = 1,
    DWMBRESGLY144_HOT = 2,
    DWMBRESGLY144_PUSHED = 3,
    DWMBRESGLY144_DISABLED = 4
};

typedef enum ButtonRestoreGlyph192DarkSTATES {
    DWMBRESGLY192D_NORMAL = 1,
    DWMBRESGLY192D_HOT = 2,
    DWMBRESGLY192D_PUSHED = 3,
    DWMBRESGLY192D_DISABLED = 4
};

typedef enum ButtonRestoreGlyph192STATES {
    DWMBRESGLY192_NORMAL = 1,
    DWMBRESGLY192_HOT = 2,
    DWMBRESGLY192_PUSHED = 3,
    DWMBRESGLY192_DISABLED = 4
};

typedef enum ButtonRestoreGlyph96DarkSTATES {
    DWMBRESGLY96D_NORMAL = 1,
    DWMBRESGLY96D_HOT = 2,
    DWMBRESGLY96D_PUSHED = 3,
    DWMBRESGLY96D_DISABLED = 4
};

typedef enum ButtonRestoreGlyph96STATES {
    DWMBRESGLY96_NORMAL = 1,
    DWMBRESGLY96_HOT = 2,
    DWMBRESGLY96_PUSHED = 3,
    DWMBRESGLY96_DISABLED = 4
};

typedef enum CAPTIONSTATES {
    CS_ACTIVE = 1,
    CS_INACTIVE = 2,
    CS_DISABLED = 3
};

typedef enum CASE_REQUIREMENT {
    CASE_REQUIREMENT_ANY = 0,
    CASE_REQUIREMENT_UPPER_IF_AQS = 1
};

typedef enum CATEGORYINFO_FLAGS {
    CATINFO_NORMAL = 0,
    CATINFO_COLLAPSED = 1,
    CATINFO_HIDDEN = 2,
    CATINFO_EXPANDED = 4,
    CATINFO_NOHEADER = 8,
    CATINFO_NOTCOLLAPSIBLE = 16,
    CATINFO_NOHEADERCOUNT = 32,
    CATINFO_SUBSETTED = 64,
    CATINFO_SEPARATE_IMAGES = 128,
    CATINFO_SHOWEMPTY = 256
};

typedef enum CATSORT_FLAGS {
    CATSORT_DEFAULT = 0,
    CATSORT_NAME = 1
};

typedef enum CAccentResources::ResourceType {
    PREVIEW = 0,
    SMALL = 1,
    MEDIUM = 2,
    LARGE = 3,
    LARGE_PREVIEW = 4
};

typedef enum CDCONTROLSTATEF {
    CDCS_INACTIVE = 0,
    CDCS_ENABLED = 1,
    CDCS_VISIBLE = 2,
    CDCS_ENABLEDVISIBLE = 3
};

typedef enum CHARM_WINDOW_VISIBILITY_BEHAVIOR {
    CWVB_DEFAULT = 0,
    CWVB_RETAIN_VISIBILITY = 1,
    CWVB_RETAIN_VISIBILITY_ONCE = 2,
    CWVB_RETAIN_FOREGROUND = 3
};

typedef enum CHARTVIEWPARTS {
    CV_CPU_BG = 1,
    CV_CPU_BORDER = 2,
    CV_CPU_GRID = 3,
    CV_CPU_LINE1 = 4,
    CV_CPU_LINE1FILL = 5,
    CV_CPU_LINE2 = 6,
    CV_CPU_LINE2FILL = 7,
    CV_MEMORY_BG = 8,
    CV_MEMORY_BORDER = 9,
    CV_MEMORY_GRID = 10,
    CV_MEMORY_LINE1 = 11,
    CV_MEMORY_LINE1FILL = 12,
    CV_MEMORY_LINE2 = 13,
    CV_MEMORY_LINE2FILL = 14,
    CV_DISK_BG = 15,
    CV_DISK_BORDER = 16,
    CV_DISK_GRID = 17,
    CV_DISK_LINE1 = 18,
    CV_DISK_LINE1FILL = 19,
    CV_DISK_LINE2 = 20,
    CV_DISK_LINE2FILL = 21,
    CV_NETWORK_BG = 22,
    CV_NETWORK_BORDER = 23,
    CV_NETWORK_GRID = 24,
    CV_NETWORK_LINE1 = 25,
    CV_NETWORK_LINE1FILL = 26,
    CV_NETWORK_LINE2 = 27,
    CV_NETWORK_LINE2FILL = 28,
    CV_COPY_BORDER = 29,
    CV_COPY_GRID = 30,
    CV_COPY_LINE1 = 31,
    CV_COPY_LINE1FILL = 32,
    CV_COPY_LINE2 = 33,
    CV_COPY_LINE2FILL = 34,
    CV_CPU_SCALELINE = 35,
    CV_CPU_SCALELINETEXT = 36,
    CV_MEMORY_SCALELINE = 37,
    CV_MEMORY_SCALELINETEXT = 38,
    CV_DISK_SCALELINE = 39,
    CV_DISK_SCALELINETEXT = 40,
    CV_NETWORK_SCALELINE = 41,
    CV_NETWORK_SCALELINETEXT = 42
};

typedef enum CHECKBOXSTATES {
    CBS_UNCHECKEDNORMAL = 1,
    CBS_UNCHECKEDHOT = 2,
    CBS_UNCHECKEDPRESSED = 3,
    CBS_UNCHECKEDDISABLED = 4,
    CBS_CHECKEDNORMAL = 5,
    CBS_CHECKEDHOT = 6,
    CBS_CHECKEDPRESSED = 7,
    CBS_CHECKEDDISABLED = 8,
    CBS_MIXEDNORMAL = 9,
    CBS_MIXEDHOT = 10,
    CBS_MIXEDPRESSED = 11,
    CBS_MIXEDDISABLED = 12,
    CBS_IMPLICITNORMAL = 13,
    CBS_IMPLICITHOT = 14,
    CBS_IMPLICITPRESSED = 15,
    CBS_IMPLICITDISABLED = 16,
    CBS_EXCLUDEDNORMAL = 17,
    CBS_EXCLUDEDHOT = 18,
    CBS_EXCLUDEDPRESSED = 19,
    CBS_EXCLUDEDDISABLED = 20
};

typedef enum CHEVRONSTATES {
    CHEVS_NORMAL = 1,
    CHEVS_HOT = 2,
    CHEVS_PRESSED = 3
};

typedef enum CHEVRONVERTSTATES {
    CHEVSV_NORMAL = 1,
    CHEVSV_HOT = 2,
    CHEVSV_PRESSED = 3
};

typedef enum CI_WINDOWS_LOCKDOWN_RESTRICTION {
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NONE = 0,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK = 1,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK_PERMANENT = 2,
    CI_WINDOWS_LOCKDOWN_RESTRICTION_MAX = 3
};

typedef enum CLOCKPARTS {
    CLP_TIME = 1
};

typedef enum CLOCKSTATES {
    CLS_NORMAL = 1,
    CLS_HOT = 2,
    CLS_PRESSED = 3
};

typedef enum CLOSEBUTTONSTATES {
    CBS_NORMAL = 1,
    CBS_HOT = 2,
    CBS_PUSHED = 3,
    CBS_DISABLED = 4
};

typedef enum CLOSESTATES {
    TTCS_NORMAL = 1,
    TTCS_HOT = 2,
    TTCS_PRESSED = 3
};

typedef enum CM_ENUM_FLAGS {
    CM_ENUM_ALL = 1,
    CM_ENUM_VISIBLE = 2
};

typedef enum CM_MASK {
    CM_MASK_WIDTH = 1,
    CM_MASK_DEFAULTWIDTH = 2,
    CM_MASK_IDEALWIDTH = 4,
    CM_MASK_NAME = 8,
    CM_MASK_STATE = 16
};

typedef enum CM_SET_WIDTH_VALUE {
    CM_WIDTH_USEDEFAULT = -1,
    CM_WIDTH_AUTOSIZE = -2
};

typedef enum CM_STATE {
    CM_STATE_NONE = 0,
    CM_STATE_VISIBLE = 1,
    CM_STATE_FIXEDWIDTH = 2,
    CM_STATE_NOSORTBYFOLDERNESS = 4,
    CM_STATE_ALWAYSVISIBLE = 8
};

typedef enum COLLAPSEBUTTONSTATES {
    LVCB_NORMAL = 1,
    LVCB_HOVER = 2,
    LVCB_PUSHED = 3
};

typedef enum COLLAPSESTATES {
    TA_COLLAPSE_HIDDEN = 1,
    TA_COLLAPSE_AFFECTED = 2
};

typedef enum COLUMNHEADERTEXTSTATES {
    TM_COLHEADER_NORMAL = 1
};

typedef enum COMBOBOXPARTS {
    CP_DROPDOWNBUTTON = 1,
    CP_BACKGROUND = 2,
    CP_TRANSPARENTBACKGROUND = 3,
    CP_BORDER = 4,
    CP_READONLY = 5,
    CP_DROPDOWNBUTTONRIGHT = 6,
    CP_DROPDOWNBUTTONLEFT = 7,
    CP_CUEBANNER = 8,
    CP_DROPDOWNITEM = 9
};

typedef enum COMBOBOXSTYLESTATES {
    CBXS_NORMAL = 1,
    CBXS_HOT = 2,
    CBXS_PRESSED = 3,
    CBXS_DISABLED = 4
};

typedef enum COMMANDLINKGLYPHSTATES {
    CMDLGS_NORMAL = 1,
    CMDLGS_HOT = 2,
    CMDLGS_PRESSED = 3,
    CMDLGS_DISABLED = 4,
    CMDLGS_DEFAULTED = 5
};

typedef enum COMMANDLINKSTATES {
    CMDLS_NORMAL = 1,
    CMDLS_HOT = 2,
    CMDLS_PRESSED = 3,
    CMDLS_DISABLED = 4,
    CMDLS_DEFAULTED = 5,
    CMDLS_DEFAULTED_ANIMATING = 6
};

typedef enum COMMANDMODULEPARTS {
    CMOD_MODULEBACKGROUND = 1,
    CMOD_MODULEBACKGROUNDCOLORS = 2,
    CMOD_TASKBUTTON = 3,
    CMOD_SPLITBUTTONLEFT = 4,
    CMOD_SPLITBUTTONRIGHT = 5,
    CMOD_MENUGLYPH = 6,
    CMOD_OVERFLOWGLYPH = 7,
    CMOD_LIBRARYPANEMENUGLYPH = 8,
    CMOD_LIBRARYPANETOPVIEW = 9,
    CMOD_LIBRARYPANEBACKGROUND = 10
};

typedef enum COMMAND_SET {
    CS_FIRST = 0,
    CS_SORTORDER = 0,
    CS_NAVPANE = 1,
    CS_PREVIEWPANE = 2,
    CS_SHOWHIDE = 3,
    CS_CLIPBOARD = 4,
    CS_VOLUMEADDREMOVE = 5,
    CS_LIBRARYADD = 6,
    CS_LEGACYBARSCHANGED = 7,
    CS_WORKOFFLINE = 8,
    CS_LAST = 9
};

typedef enum COMMUNICATIONSPARTS {
    CSST_TAB = 1
};

typedef enum COMPARTMENT_ID {
    UNSPECIFIED_COMPARTMENT_ID = 0,
    DEFAULT_COMPARTMENT_ID = 1
};

typedef enum CONFIRMATIONRESPONSE {
    CONFRES_CONTINUE = 0,
    CONFRES_SKIP = 1,
    CONFRES_RETRY = 2,
    CONFRES_RENAME = 3,
    CONFRES_CANCEL = 4,
    CONFRES_UNDO = 5,
    CONFRES_RENAME_LEFT = 3,
    CONFRES_RENAME_RIGHT = 6,
    CONFRES_ELEVATE = 7,
    CONFRES_CLOSE = 8
};

typedef enum CONFLICT_FILTER {
    CF_NO_FILTER = 0,
    CF_DIFFERENT_TIME_SIZE = 1
};

typedef enum CONTENTALIGNMENT {
    CA_LEFT = 0,
    CA_CENTER = 1,
    CA_RIGHT = 2
};

typedef enum CONTENTAREASTATES {
    AW_S_CONTENTAREA_NOMARGIN = 1
};

typedef enum CONTENTION_COLUMN_HEADERSTATES {
    TM_CONCOLHEADER_NORMAL = 1,
    TM_CONCOLHEADER_HOT = 2
};

typedef enum CONTENTLINKSTATES {
    CPCL_NORMAL = 1,
    CPCL_HOT = 2,
    CPCL_PRESSED = 3,
    CPCL_DISABLED = 4
};

typedef enum CONTENTPANESTATES {
    TDLGCPS_STANDALONE = 1
};

typedef enum CONTROLLABELSTATES {
    TS_CONTROLLABEL_NORMAL = 1,
    TS_CONTROLLABEL_DISABLED = 2
};

typedef enum CONTROLPANELPARTS {
    CPANEL_NAVIGATIONPANE = 1,
    CPANEL_CONTENTPANE = 2,
    CPANEL_NAVIGATIONPANELABEL = 3,
    CPANEL_CONTENTPANELABEL = 4,
    CPANEL_TITLE = 5,
    CPANEL_BODYTEXT = 6,
    CPANEL_HELPLINK = 7,
    CPANEL_TASKLINK = 8,
    CPANEL_GROUPTEXT = 9,
    CPANEL_CONTENTLINK = 10,
    CPANEL_SECTIONTITLELINK = 11,
    CPANEL_LARGECOMMANDAREA = 12,
    CPANEL_SMALLCOMMANDAREA = 13,
    CPANEL_BUTTON = 14,
    CPANEL_MESSAGETEXT = 15,
    CPANEL_NAVIGATIONPANELINE = 16,
    CPANEL_CONTENTPANELINE = 17,
    CPANEL_BANNERAREA = 18,
    CPANEL_BODYTITLE = 19
};

typedef enum COPYCLOSEBTNSTATES {
    CPYCLS_NORMAL = 1,
    CPYCLS_HOT = 2,
    CPYCLS_PRESSED = 3,
    CPYCLS_DISABLEDPRESSED = 4,
    CPYCLS_DISABLED = 5
};

typedef enum COPYCLOSEPARTS {
    CPYCLS_COPYCLOSEBTN = 1
};

typedef enum COPYSTATES {
    DDCOPY_HIGHLIGHT = 1,
    DDCOPY_NOHIGHLIGHT = 2
};

typedef enum COPY_BORDERSTATES {
    CV_COPB_ACTIVE = 1,
    CV_COPB_IDLE = 2,
    CV_COPB_ERROR = 3
};

typedef enum COPY_GRIDSTATES {
    CV_COPG_ACTIVE = 1,
    CV_COPG_IDLE = 2,
    CV_COPG_ERROR = 3
};

typedef enum COPY_LINE1FILLSTATES {
    CV_COPL1F_ACTIVE = 1,
    CV_COPL1F_IDLE = 2,
    CV_COPL1F_ERROR = 3
};

typedef enum COPY_LINE1STATES {
    CV_COPL1L_ACTIVE = 1,
    CV_COPL1L_IDLE = 2,
    CV_COPL1L_ERROR = 3
};

typedef enum COPY_LINE2FILLSTATES {
    CV_COPL2F_ACTIVE = 1,
    CV_COPL2F_IDLE = 2,
    CV_COPL2F_ERROR = 3
};

typedef enum COPY_LINE2STATES {
    CV_COPL2L_ACTIVE = 1,
    CV_COPL2L_IDLE = 2,
    CV_COPL2L_ERROR = 3
};

typedef enum COREWINDOWROLE {
    CWR_DEFAULT = 0,
    CWR_COMPONENT = 1,
    CWR_HOST = 2
};

typedef enum CO_MARSHALING_CONTEXT_ATTRIBUTES {
    CO_MARSHALING_SOURCE_IS_APP_CONTAINER = 0,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1 = -2147483648,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2 = -2147483647,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3 = -2147483646,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4 = -2147483645,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5 = -2147483644,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6 = -2147483643,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7 = -2147483642,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8 = -2147483641,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9 = -2147483640,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10 = -2147483639,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11 = -2147483638,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12 = -2147483637,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13 = -2147483636,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14 = -2147483635,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15 = -2147483634,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16 = -2147483633,
    CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17 = -2147483632
};

typedef enum CPVIEW {
    CPVIEW_CLASSIC = 0,
    CPVIEW_ALLITEMS = 0,
    CPVIEW_CATEGORY = 1,
    CPVIEW_HOME = 1
};

typedef enum CREATELINKSTATES {
    DDCREATELINK_HIGHLIGHT = 1,
    DDCREATELINK_NOHIGHLIGHT = 2
};

typedef enum CROSSFADESTATES {
    TA_CROSSFADE_INCOMING = 1,
    TA_CROSSFADE_OUTGOING = 2
};

typedef enum CSTN_FILE_EXTENSION_OPTION {
    CTSN_IGNORE_FILE_EXTENSION = 0,
    CTSN_UNIQUE_NAME_WITH_EXTENSION = 1
};

typedef enum CShakeWnd::_ESC_ACTION {
    EA_UNGRAB = 0,
    EA_SHAKE = 1,
    EA_PRESSESC = 2
};

typedef enum CShakeWnd::_SHAKE_STATE {
    SS_NOPOINTS = 0,
    SS_BELOWTHRES = 1,
    SS_ABOVETHRES = 2,
    SS_WAITTIMEOUT = 3
};

typedef enum CThemeSignature::KEY_TYPES {
    KEY_NONE = 0,
    KEY_PUBLIC = 1,
    KEY_PRIVATE = 2
};

typedef enum CUEBANNERSTATES {
    CBCB_NORMAL = 1,
    CBCB_HOT = 2,
    CBCB_PRESSED = 3,
    CBCB_DISABLED = 4
};

typedef enum CWMO_FLAGS {
    CWMO_DEFAULT = 0,
    CWMO_DISPATCH_CALLS = 1,
    CWMO_DISPATCH_WINDOW_MESSAGES = 2
};

typedef enum CertKeyType {
    KeyTypeOther = 0,
    KeyTypeVirtualSmartCard = 1,
    KeyTypePhysicalSmartCard = 2,
    KeyTypePassport = 3,
    KeyTypePassportRemote = 4,
    KeyTypePassportSmartCard = 5,
    KeyTypeHardware = 6,
    KeyTypeSoftware = 7,
    KeyTypeSelfSigned = 8
};

typedef enum CommandStateChangeConstants {
    CSC_UPDATECOMMANDS = -1,
    CSC_NAVIGATEFORWARD = 1,
    CSC_NAVIGATEBACK = 2
};

typedef enum CommonItemsDialogPARTS {
    CID_POPUPGUTTER = 1
};

typedef enum D3DDISPLAYROTATION {
    D3DDISPLAYROTATION_IDENTITY = 1,
    D3DDISPLAYROTATION_90 = 2,
    D3DDISPLAYROTATION_180 = 3,
    D3DDISPLAYROTATION_270 = 4
};

typedef enum D3DSCANLINEORDERING {
    D3DSCANLINEORDERING_UNKNOWN = 0,
    D3DSCANLINEORDERING_PROGRESSIVE = 1,
    D3DSCANLINEORDERING_INTERLACED = 2
};

typedef enum DATAOBJ_GET_ITEM_FLAGS {
    DOGIF_DEFAULT = 0,
    DOGIF_TRAVERSE_LINK = 1,
    DOGIF_NO_HDROP = 2,
    DOGIF_NO_URL = 4,
    DOGIF_ONLY_IF_ONE = 8
};

typedef enum DATEBORDERSTATES {
    DPDB_NORMAL = 1,
    DPDB_HOT = 2,
    DPDB_FOCUSED = 3,
    DPDB_DISABLED = 4
};

typedef enum DATEPICKERPARTS {
    DP_DATETEXT = 1,
    DP_DATEBORDER = 2,
    DP_SHOWCALENDARBUTTONRIGHT = 3
};

typedef enum DATETEXTSTATES {
    DPDT_NORMAL = 1,
    DPDT_DISABLED = 2,
    DPDT_SELECTED = 3
};

typedef enum DCTYPE {
    DCTYPE_DIRECT = 0,
    DCTYPE_MEMORY = 1,
    DCTYPE_INFO = 2
};

typedef enum DEFAULTSAVEFOLDERTYPE {
    DSFT_DETECT = 1,
    DSFT_PRIVATE = 2,
    DSFT_PUBLIC = 3
};

typedef enum DEFAULT_FOLDER_MENU_RESTRICTIONS {
    DFMR_DEFAULT = 0,
    DFMR_NO_STATIC_VERBS = 8,
    DFMR_STATIC_VERBS_ONLY = 16,
    DFMR_NO_RESOURCE_VERBS = 32,
    DFMR_OPTIN_HANDLERS_ONLY = 64,
    DFMR_RESOURCE_AND_FOLDER_VERBS_ONLY = 128,
    DFMR_USE_SPECIFIED_HANDLERS = 256,
    DFMR_USE_SPECIFIED_VERBS = 512,
    DFMR_NO_ASYNC_VERBS = 1024,
    DFMR_NO_NATIVECPU_VERBS = 2048
};

typedef enum DEF_SHARE_ID {
    DEFSHAREID_USERS = 1,
    DEFSHAREID_PUBLIC = 2
};

typedef enum DELAYED_RETRIEVAL_TYPE {
    DRT_FILEITEM = 0,
    DRT_PREFETCHEDTHUMBNAIL = 1,
    DRT_PREFETCHEDPROPERTIES = 2,
    DRT_PROPERTIES = 3,
    DRT_MUSICPROPERTIES = 4,
    DRT_IMAGEPROPERTIES = 5,
    DRT_VIDEOPROPERTIES = 6,
    DRT_DOCUMENTPROPERTIES = 7,
    DRT_BASICPROPERTIES = 8,
    DRT_REMOTEFILEITEM = 9
};

typedef enum DELETEFROMGRIDSTATES {
    TA_DELETEFROMGRID_DELETED = 1,
    TA_DELETEFROMGRID_REMAINING = 2,
    TA_DELETEFROMGRID_ROWOUT = 3,
    TA_DELETEFROMGRID_ROWIN = 4
};

typedef enum DELETEFROMLISTSTATES {
    TA_DELETEFROMLIST_DELETED = 1,
    TA_DELETEFROMLIST_REMAINING = 2
};

typedef enum DELETEFROMSEARCHGRIDSTATES {
    TA_DELETEFROMSEARCHGRID_DELETED = 1,
    TA_DELETEFROMSEARCHGRID_REMAINING = 2,
    TA_DELETEFROMSEARCHGRID_ROWOUT = 3,
    TA_DELETEFROMSEARCHGRID_ROWIN = 4
};

typedef enum DELETEFROMSEARCHLISTSTATES {
    TA_DELETEFROMSEARCHLIST_DELETED = 1,
    TA_DELETEFROMSEARCHLIST_REMAINING = 2
};

typedef enum DESKTOP_SLIDESHOW_DIRECTION {
    DSD_FORWARD = 0,
    DSD_BACKWARD = 1
};

typedef enum DESKTOP_SLIDESHOW_OPTIONS {
    DSO_SHUFFLEIMAGES = 1
};

typedef enum DESKTOP_SLIDESHOW_STATE {
    DSS_ENABLED = 1,
    DSS_SLIDESHOW = 2,
    DSS_DISABLED_BY_REMOTE_SESSION = 4
};

typedef enum DESKTOP_VISIBILITY_NOTIFICATION_TYPE {
    DVNT_GLOBAL = 0,
    DVNT_PERMONITOR = 1
};

typedef enum DESKTOP_WALLPAPER_POSITION {
    DWPOS_CENTER = 0,
    DWPOS_TILE = 1,
    DWPOS_STRETCH = 2,
    DWPOS_FIT = 3,
    DWPOS_FILL = 4,
    DWPOS_SPAN = 5
};

typedef enum DESTLISTKIND {
    DESTLISTKIND_FIRST = 0,
    DESTLISTKIND_AUTOMATIC = 0,
    DESTLISTKIND_CUSTOM = 1,
    DESTLISTKIND_LAST = 1
};

typedef enum DESTLISTTYPE {
    DLT_PINNED = 0,
    DLT_RECENT = 1,
    DLT_FREQUENT = 2
};

typedef enum DEVICE_SCALE_FACTOR {
    DEVICE_SCALE_FACTOR_INVALID = 0,
    SCALE_100_PERCENT = 100,
    SCALE_120_PERCENT = 120,
    SCALE_125_PERCENT = 125,
    SCALE_140_PERCENT = 140,
    SCALE_150_PERCENT = 150,
    SCALE_160_PERCENT = 160,
    SCALE_175_PERCENT = 175,
    SCALE_180_PERCENT = 180,
    SCALE_200_PERCENT = 200,
    SCALE_225_PERCENT = 225,
    SCALE_250_PERCENT = 250,
    SCALE_300_PERCENT = 300,
    SCALE_350_PERCENT = 350,
    SCALE_400_PERCENT = 400,
    SCALE_450_PERCENT = 450,
    SCALE_500_PERCENT = 500
};

typedef enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS {
    DCDC_DEFAULT = 0,
    DCDC_DISABLE_FONT_UPDATE = 1,
    DCDC_DISABLE_RELAYOUT = 2
};

typedef enum DIALOG_DPI_CHANGE_BEHAVIORS {
    DDC_DEFAULT = 0,
    DDC_DISABLE_ALL = 1,
    DDC_DISABLE_RESIZE = 2,
    DDC_DISABLE_CONTROL_RELAYOUT = 4
};

typedef enum DISK_CACHE_RETENTION_PRIORITY {
    EqualPriority = 0,
    KeepPrefetchedData = 1,
    KeepReadData = 2
};

typedef enum DISPLAYCONFIG_DEVICE_INFO_TYPE {
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4,
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6,
    DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7,
    DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9,
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10,
    DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11,
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_DEVICE_INFO_TYPE_INTERNAL {
    DISPLAYCONFIG_DEVICE_INFO_GET_DISPLAY_INFO = -2,
    DISPLAYCONFIG_DEVICE_INFO_GET_SCALE_FACTOR_OVERRIDES = -3,
    DISPLAYCONFIG_DEVICE_INFO_SET_SCALE_FACTOR_OVERRIDE = -4,
    DISPLAYCONFIG_DEVICE_INFO_GET_INTERNAL_DISPLAY_ROTATION_MODE = -5,
    DISPLAYCONFIG_DEVICE_INFO_SET_INTERNAL_DISPLAY_ROTATION_MODE = -6,
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_INTERNAL_INFO = -7,
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_EDID = -8,
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_INVERTED = -9,
    DISPLAYCONFIG_DEVICE_INFO_GET_RENDER_ADAPTER = -10,
    DISPLAYCONFIG_DEVICE_INFO_GET_DISPLAY_STEREO_INFO = -11,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_COLORSPACETRANSFORM_CAPS = -12,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_INFO_INTERNAL = -13,
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_INFO_INTERNAL = -14,
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_DISPLAYID = -15,
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_PARAM = -16,
    DISPLAYCONFIG_DEVICE_INFO_SET_SDR_WHITE_LEVEL = -18,
    DISPLAYCONFIG_DEVICE_INFO_SET_COLORIMETRICCONTROL = -19,
    DISPLAYCONFIG_DEVICE_INFO_GET_SESSION_INFO = -20
};

typedef enum DISPLAYCONFIG_MODE_INFO_TYPE {
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
    DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3,
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_PIXELFORMAT {
    DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
    DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
    DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
    DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
    DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5,
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_ROTATION {
    DISPLAYCONFIG_ROTATION_IDENTITY = 1,
    DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
    DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
    DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_SCALING {
    DISPLAYCONFIG_SCALING_IDENTITY = 1,
    DISPLAYCONFIG_SCALING_CENTERED = 2,
    DISPLAYCONFIG_SCALING_STRETCHED = 3,
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4,
    DISPLAYCONFIG_SCALING_CUSTOM = 5,
    DISPLAYCONFIG_SCALING_PREFERRED = 128,
    DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_SCANLINE_ORDERING {
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_TARGET_USAGE {
    DISPLAYCONFIG_TARGET_USAGE_STANDARD = 0,
    DISPLAYCONFIG_TARGET_USAGE_HEAD_MOUNTED = 1,
    DISPLAYCONFIG_TARGET_USAGE_SPECIAL_USE = 2
};

typedef enum DISPLAYCONFIG_TOPOLOGY_ID {
    DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1,
    DISPLAYCONFIG_TOPOLOGY_CLONE = 2,
    DISPLAYCONFIG_TOPOLOGY_EXTEND = 4,
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8,
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1
};

typedef enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY {
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1
};

typedef enum DISPLAYSETTINGEVENTTYPE {
    DSET_DISPLAYDATA_LOADED = 1,
    DSET_PATH_CHANGED = 2,
    DSET_VIEW_ORDER_CHANGED = 4,
    DSET_VIEW_POSITION_CHANGED = 256,
    DSET_VIEW_RESOLUTION_CHANGED = 512,
    DSET_VIEW_COLOR_CHANGED = 1024,
    DSET_VIEW_FREQ_CHANGED = 2048,
    DSET_VIEW_ROTATION_CHANGED = 4096,
    DSET_VIEW_PRIMARY_CHANGED = 8192,
    DSET_VIEW_AUTOROTATION_CHANGED = 16384,
    DSET_VIEW_STEREO_CHANGED = 0x8000,
    DSET_VIEW_PROPERTY_CHANGED = 0xff00
};

typedef enum DISPLAY_DEVICE_TYPE {
    DEVICE_PRIMARY = 0,
    DEVICE_IMMERSIVE = 1
};

typedef enum DIT_HITTESTATTRIBUTES {
    DIT_HITTESTATTRIBUTES_NONE = 0,
    DIT_HITTESTATTRIBUTES_MOUSEWHEEL = 1,
    DIT_HITTESTATTRIBUTES_MOUSEWHEELISINCREASING = 2,
    DIT_HITTESTATTRIBUTES_MOUSEWHEELISHORIZONTAL = 4,
    DIT_HITTESTATTRIBUTES_MOUSEBUTTONDOWN = 8,
    DIT_HITTESTATTRIBUTES_TOUCHTARGETING = 16,
    DIT_HITTESTATTRIBUTES_NOHOVERPOINTER = 32,
    DIT_HITTESTATTRIBUTES_BARRELBUTTONDOWN = 64,
    DIT_HITTESTATTRIBUTES_ERASERDOWN = 128,
    DIT_HITTESTATTRIBUTES_CONTROLDOWN = 256,
    DIT_HITTESTATTRIBUTES_VALID = 255
};

typedef enum DOWNHORZSTATES {
    DNHZS_NORMAL = 1,
    DNHZS_HOT = 2,
    DNHZS_PRESSED = 3,
    DNHZS_DISABLED = 4
};

typedef enum DOWNSTATES {
    DNS_NORMAL = 1,
    DNS_HOT = 2,
    DNS_PRESSED = 3,
    DNS_DISABLED = 4
};

typedef enum DPI_AWARENESS {
    DPI_AWARENESS_INVALID = -1,
    DPI_AWARENESS_UNAWARE = 0,
    DPI_AWARENESS_SYSTEM_AWARE = 1,
    DPI_AWARENESS_PER_MONITOR_AWARE = 2
};

typedef enum DPI_HOSTING_BEHAVIOR {
    DPI_HOSTING_BEHAVIOR_INVALID = -1,
    DPI_HOSTING_BEHAVIOR_DEFAULT = 0,
    DPI_HOSTING_BEHAVIOR_MIXED = 1
};

typedef enum DRAGBETWEENENTERSTATES {
    TA_DRAGBETWEENENTER_AFFECTED = 1
};

typedef enum DRAGBETWEENLEAVESTATES {
    TA_DRAGBETWEENLEAVE_AFFECTED = 1
};

typedef enum DRAGDROPPARTS {
    DD_COPY = 1,
    DD_MOVE = 2,
    DD_UPDATEMETADATA = 3,
    DD_CREATELINK = 4,
    DD_WARNING = 5,
    DD_NONE = 6,
    DD_IMAGEBG = 7,
    DD_TEXTBG = 8
};

typedef enum DRAGSOURCEENDSTATES {
    TA_DRAGSOURCEEND_DRAGSOURCE = 1,
    TA_DRAGSOURCEEND_AFFECTED = 2
};

typedef enum DRAGSOURCESTARTSTATES {
    TA_DRAGSOURCESTART_DRAGSOURCE = 1,
    TA_DRAGSOURCESTART_AFFECTED = 2
};

typedef enum DRAWPROGRESSFLAGS {
    DPF_NONE = 0,
    DPF_MARQUEE = 1,
    DPF_MARQUEE_COMPLETE = 2,
    DPF_ERROR = 4,
    DPF_WARNING = 8,
    DPF_STOPPED = 16
};

typedef enum DROPDOWNBUTTONLEFTSTATES {
    CBXSL_NORMAL = 1,
    CBXSL_HOT = 2,
    CBXSL_PRESSED = 3,
    CBXSL_DISABLED = 4
};

typedef enum DROPDOWNBUTTONRIGHTSTATES {
    CBXSR_NORMAL = 1,
    CBXSR_HOT = 2,
    CBXSR_PRESSED = 3,
    CBXSR_DISABLED = 4
};

typedef enum DROPDOWNITEMSTATES {
    CBDI_NORMAL = 1,
    CBDI_HIGHLIGHTED = 2
};

typedef enum DROPIMAGETYPE {
    DROPIMAGE_INVALID = -1,
    DROPIMAGE_NONE = 0,
    DROPIMAGE_COPY = 1,
    DROPIMAGE_MOVE = 2,
    DROPIMAGE_LINK = 4,
    DROPIMAGE_LABEL = 6,
    DROPIMAGE_WARNING = 7,
    DROPIMAGE_NOIMAGE = 8
};

typedef enum DROPLISTCONTROLPARTS {
    DLC_MENUBUTTON = 1
};

typedef enum DSAFIPSVERSION_ENUM {
    DSA_FIPS186_2 = 0,
    DSA_FIPS186_3 = 1
};

typedef enum DWMFLIP3DWINDOWPOLICY {
    DWMFLIP3D_DEFAULT = 0,
    DWMFLIP3D_EXCLUDEBELOW = 1,
    DWMFLIP3D_EXCLUDEABOVE = 2,
    DWMFLIP3D_LAST = 3
};

typedef enum DWMNCADORNMENT {
    DWMNCA_HELPBUTTON = 0,
    DWMNCA_MINBUTTON = 1,
    DWMNCA_MAXBUTTON = 2,
    DWMNCA_CLOSEBUTTON = 3,
    DWMNCA_SYSTEMMENUICON = 4,
    DWMNCA_LAST = 5
};

typedef enum DWMNCRENDERINGPOLICY {
    DWMNCRP_USEWINDOWSTYLE = 0,
    DWMNCRP_DISABLED = 1,
    DWMNCRP_ENABLED = 2,
    DWMNCRP_LAST = 3
};

typedef enum DWMPANIMATION_CLOCK_TIME {
    DWMANIMATION_CLOCK_START = 0,
    DWMANIMATION_CLOCK_CANCEL = 1
};

typedef enum DWMPENPARTS {
    DWMPP_PENBARREL = 1,
    DWMPP_PENHOLD = 2,
    DWMPP_PENRIGHTTAP = 3,
    DWMPP_PENTAP = 4,
    DWMPP_PENDOUBLETAP = 5,
    DWMPP_FLICKSCROLLUP = 6,
    DWMPP_FLICKSCROLLDOWN = 7,
    DWMPP_FLICKDRAGUP = 8,
    DWMPP_FLICKDRAGDOWN = 9,
    DWMPP_FLICKFORWARD = 10,
    DWMPP_FLICKBACKWARD = 11,
    DWMPP_FLICKCUT = 12,
    DWMPP_FLICKCOPY = 13,
    DWMPP_FLICKPASTE = 14,
    DWMPP_FLICKUNDO = 15,
    DWMPP_FLICKREDO = 16,
    DWMPP_FLICKPRINT = 17,
    DWMPP_FLICKDELETE = 18,
    DWMPP_FLICKOPEN = 19,
    DWMPP_FLICKSAVE = 20,
    DWMPP_FLICKMODIFIERKEY = 21,
    DWMPP_FLICKSHIFTKEY = 22,
    DWMPP_FLICKWINKEY = 23,
    DWMPP_FLICKGENERICKEY = 24
};

typedef enum DWMPGLASSATTRIBUTE {
    DWMPGA_TRANSPARENCY_ALLOWED = 0,
    DWMPGA_TRANSPARENCY_DISALLOWED = 1,
    DWMPGA_NO_GLASS = 2,
    DWMPGA_LAST = 3
};

typedef enum DWMPWINDOWATTRIBUTE {
    DWMPWA_THEME_ATTRIBUTES = 0x10000,
    DWMPWA_NCRENDERING_EXILED = 0x10001,
    DWMPWA_NCADORNMENTINFO = 0x10002,
    DWMPWA_LAST = 0x10003
};

typedef enum DWMTOUCHPARTS {
    DWMWP_TOUCHDRAG = 1,
    DWMWP_TOUCHCONTACT = 2,
    DWMWP_TETHER = 3,
    DWMWP_TEXTHANDLEBLACK = 4,
    DWMWP_TEXTHANDLEWHITE = 5,
    DWMWP_TOUCHDOUBLECONTACT = 6,
    DWMWP_TOUCHCONTACTPRESENTATIONMODE = 7,
    DWMWP_INDIRECTTOUCH = 8
};

typedef enum DWMTRANSITION_OWNEDWINDOW_TARGET {
    DWMTRANSITION_OWNEDWINDOW_NULL = -1,
    DWMTRANSITION_OWNEDWINDOW_REPOSITION = 0
};

typedef enum DWMTRANSITION_STORYBOARD_STATE {
    DWM_STORYBOARD_REQUESTTIMEOUT = 1,
    DWM_STORYBOARD_ABORTED = 2,
    DWM_STORYBOARD_SCHEDULED = 3,
    DWM_STORYBOARD_COMPLETED = 4
};

typedef enum DWMTRANSITION_TARGET {
    DWMTARGET_NULL = 4095,
    DWMTARGET_LAUNCHERHIDE = 0,
    DWMTARGET_APPSHOWPLACEMODE = 1,
    DWMTARGET_APPHIDE = 2,
    DWMTARGET_APPSHOW = 3,
    DWMTARGET_APPSHOWDELAYED = 4,
    DWMTARGET_TILEBITMAP = 5,
    DWMTARGET_MAXIMIZE = 6,
    DWMTARGET_APPOUTGOINGMAXIMIZE = 7,
    DWMTARGET_IHM = 8,
    DWMTARGET_LAUNCHER = 9,
    DWMTARGET_FULLSCREENSNAPSHOT = 10,
    DWMTARGET_TOAST = 11,
    DWMTARGET_FLYOUTTOLEFT = 12,
    DWMTARGET_FLYOUTTORIGHT = 13,
    DWMTARGET_FLYOUTTOTOP = 14,
    DWMTARGET_FLYOUTTOBOTTOM = 15,
    DWMTARGET_FLYOUTOUTGOING = 16,
    DWMTARGET_FLYOUT = 16,
    DWMTARGET_INOWNERTHUMBNAIL = 17,
    DWMTARGET_CROSSFADEOUT = 18,
    DWMTARGET_CROSSFADEIN = 19,
    DWMTARGET_APPOUTGOING = 20,
    DWMTARGET_APPINCOMING = 21,
    DWMTARGET_MOBARGUTTER = 22,
    DWMTARGET_RESIZE = 23,
    DWMTARGET_CHARMBAR = 24,
    DWMTARGET_FADEIN = 25,
    DWMTARGET_FADEOUT = 26,
    DWMTARGET_TDBN = 27,
    DWMTARGET_STATIC = 28,
    DWMTARGET_STATICDESKTOP = 29,
    DWMTARGET_APPPLACEMODEBACKGROUND = 30,
    DWMTARGET_RESIZETOPLACEMODE = 31,
    DWMTARGET_EXCLUDEWITHBACKGROUND = 32,
    DWMTARGET_APPOUTGOINGDESKTOP = 33,
    DWMTARGET_APPINCOMINGDESKTOP = 34,
    DWMTARGET_THUMBNAIL = 35,
    DWMTARGET_THUMBNAIL_DESKTOP = 36,
    DWMTARGET_RESIZE_DOCKEDDESKTOP_TO_DESKTOP = 37,
    DWMTARGET_RESIZE_DESKTOP_TO_DOCKEDDESKTOP = 38,
    DWMTARGET_RESIZE_DESKTOP_TO_DESKTOP = 39,
    DWMTARGET_PANELOUTGOING = 40,
    DWMTARGET_PANELINCOMING = 41,
    DWMTARGET_CHARMPANEL = 42,
    DWMTARGET_EXCLUDE = 43,
    DWMTARGET_REPOSITION = 44,
    DWMTARGET_APPCLOSED = 45,
    DWMTARGET_APPCLOSEDDESKTOP = 46,
    DWMTARGET_APPTIP = 47,
    DWMTARGET_ANCHORTOP = 48,
    DWMTARGET_ANCHORBOTTOM = 49,
    DWMTARGET_ANCHORLEFT = 50,
    DWMTARGET_ANCHORRIGHT = 51,
    DWMTARGET_APPARRANGENOTIFY = 52,
    DWMTARGET_REPLACETILTLEFT = 53,
    DWMTARGET_REPLACETILTRIGHT = 54,
    DWMTARGET_REPLACENOTILT = 55,
    DWMTARGET_DIALOG = 60,
    DWMTARGET_CROSSFADE_BASE = 61,
    DWMTARGET_CROSSFADE_IN_ON_TOP = 62,
    DWMTARGET_CROSSFADE_OUT_ON_TOP = 63,
    DWMTARGET_CROSSFADE_IN_ON_TOP_FAST = 64,
    DWMTARGET_CROSSFADE_OUT_ON_TOP_FAST = 65,
    DWMTARGET_REPOSITIONDESKTOP = 66,
    DWMTARGET_SCREENSHOTFADEOUT = 67,
    DWMTARGET_APPBUFFER = 68,
    DWMTARGET_TITLEBAR = 69,
    DWMTARGET_TASKBAR = 70,
    DWMTARGET_DESKTOPAPPCLOSE = 71,
    DWMTARGET_DESKTOPAPPMINIMIZE = 72,
    DWMTARGET_DESKTOPAPPRESTORE = 73,
    DWMTARGET_DESKTOPAPPOPEN = 74,
    DWMTARGET_VIRTUALDESKTOPLEFT = 75,
    DWMTARGET_VIRTUALDESKTOPRIGHT = 76,
    DWMTARGET_LAUNCHERFLYOUTTOLEFT = 77,
    DWMTARGET_LAUNCHERFLYOUTTORIGHT = 78,
    DWMTARGET_LAUNCHERFLYOUTTOTOP = 79,
    DWMTARGET_LAUNCHERFLYOUTTOBOTTOM = 80,
    DWMTARGET_LAUNCHERFLYOUT = 81,
    DWMTARGET_LAUNCHERFULLSCREEN = 82,
    DWMTARGET_APPBACK_INCOMING = 83,
    DWMTARGET_APPBACK_OUTGOING = 84,
    DWMTARGET_DESKTOPTRANSITION_APPCLOSE = 85,
    DWMTARGET_PPIWORKAREASNAPSHOT = 86,
    DWMTARGET_PPISIDEBARPANEL = 87,
    DWMTARGET_JUMPLISTTOLEFT = 88,
    DWMTARGET_JUMPLISTTORIGHT = 89,
    DWMTARGET_JUMPLISTTOTOP = 90,
    DWMTARGET_JUMPLISTTOBOTTOM = 91,
    DWMTARGET_JUMPLIST = 92,
    DWMTARGET_DESKTOPTRANSITION_APPOPEN = 93
};

typedef enum DWMWINDOWATTRIBUTE {
    DWMWA_NCRENDERING_ENABLED = 1,
    DWMWA_NCRENDERING_POLICY = 2,
    DWMWA_TRANSITIONS_FORCEDISABLED = 3,
    DWMWA_ALLOW_NCPAINT = 4,
    DWMWA_CAPTION_BUTTON_BOUNDS = 5,
    DWMWA_NONCLIENT_RTL_LAYOUT = 6,
    DWMWA_FORCE_ICONIC_REPRESENTATION = 7,
    DWMWA_FLIP3D_POLICY = 8,
    DWMWA_EXTENDED_FRAME_BOUNDS = 9,
    DWMWA_HAS_ICONIC_BITMAP = 10,
    DWMWA_DISALLOW_PEEK = 11,
    DWMWA_EXCLUDED_FROM_PEEK = 12,
    DWMWA_CLOAK = 13,
    DWMWA_CLOAKED = 14,
    DWMWA_FREEZE_REPRESENTATION = 15,
    DWMWA_LAST = 16
};

typedef enum DWMWINDOWATTRIBUTE_TABSHELL {
    DWMWA_TABBING_ENABLED = 16,
    DWMWA_ASSOCIATED_WINDOW = 17,
    DWMWA_TAB_GROUPING_PREFERENCE = 18
};

typedef enum DWMWINDOWPARTS {
    DWMWP_BOTTOMFRAME = 1,
    DWMWP_BOTTOMSHADOW = 2,
    DWMWP_BUTTONACTIVECAPTION = 3,
    DWMWP_BUTTONINACTIVECAPTION = 4,
    DWMWP_BUTTONACTIVECAPTIONEND = 5,
    DWMWP_BUTTONINACTIVECAPTIONEND = 6,
    DWMWP_BUTTONACTIVECLOSE = 7,
    DWMWP_BUTTONINACTIVECLOSE = 8,
    DWMWP_BUTTONACTIVECLOSEALONE = 9,
    DWMWP_BUTTONINACTIVECLOSEALONE = 10,
    DWMWP_BUTTONCLOSEGLYPH96 = 11,
    DWMWP_BUTTONCLOSEGLYPH120 = 12,
    DWMWP_BUTTONCLOSEGLYPH144 = 13,
    DWMWP_BUTTONCLOSEGLYPH192 = 14,
    DWMWP_BUTTONHELPGLYPH96 = 15,
    DWMWP_BUTTONHELPGLYPH120 = 16,
    DWMWP_BUTTONHELPGLYPH144 = 17,
    DWMWP_BUTTONHELPGLYPH192 = 18,
    DWMWP_BUTTONMAXGLYPH96 = 19,
    DWMWP_BUTTONMAXGLYPH120 = 20,
    DWMWP_BUTTONMAXGLYPH144 = 21,
    DWMWP_BUTTONMAXGLYPH192 = 22,
    DWMWP_BUTTONMINGLYPH96 = 23,
    DWMWP_BUTTONMINGLYPH120 = 24,
    DWMWP_BUTTONMINGLYPH144 = 25,
    DWMWP_BUTTONMINGLYPH192 = 26,
    DWMWP_BUTTONRESTOREGLYPH96 = 27,
    DWMWP_BUTTONRESTOREGLYPH120 = 28,
    DWMWP_BUTTONRESTOREGLYPH144 = 29,
    DWMWP_BUTTONRESTOREGLYPH192 = 30,
    DWMWP_LEFTFRAME = 31,
    DWMWP_LEFTSHADOW = 32,
    DWMWP_RIGHTFRAME = 33,
    DWMWP_RIGHTSHADOW = 34,
    DWMWP_SMALLBOTTOMFRAME = 35,
    DWMWP_SMALLBUTTONACTIVECLOSE = 36,
    DWMWP_SMALLBUTTONINACTIVECLOSE = 37,
    DWMWP_SMALLBUTTONCLOSEGLYPH96 = 38,
    DWMWP_SMALLBUTTONCLOSEGLYPH120 = 39,
    DWMWP_SMALLBUTTONCLOSEGLYPH144 = 40,
    DWMWP_SMALLBUTTONCLOSEGLYPH192 = 41,
    DWMWP_SMALLLEFTFRAME = 42,
    DWMWP_SMALLRIGHTFRAME = 43,
    DWMWP_SMALLTOPFRAME = 44,
    DWMWP_TEXTGLOW = 45,
    DWMWP_TOPFRAME = 46,
    DWMWP_TOPSHADOW = 47,
    DWMWP_TOPFRAMENOSHADOW = 48,
    DWMWP_BOTTOMFRAMENOSHADOW = 49,
    DWMWP_LEFTFRAMESQUEEGEE = 50,
    DWMWP_RIGHTFRAMESQUEEGEE = 51,
    DWMWP_TOPFRAMESQUEEGEE = 52,
    DWMWP_BOTTOMFRAMESQUEEGEE = 53,
    DWMWP_SMALLLEFTFRAMESQUEEGEE = 54,
    DWMWP_SMALLRIGHTFRAMESQUEEGEE = 55,
    DWMWP_SMALLTOPFRAMESQUEEGEE = 56,
    DWMWP_SMALLBOTTOMFRAMESQUEEGEE = 57,
    DWMWP_BITMAPPENDING = 58,
    DWMWP_RIPPLE = 59,
    DWMWP_TOPFRAMESQUEEGEENOSHADOW = 60,
    DWMWP_BOTTOMFRAMESQUEEGEENOSHADOW = 61,
    DWMWP_SQUEEGEEREFLECTIONMAP = 62,
    DWMWP_THUMBNAILBORDER = 63,
    DWMWP_BUTTONCLOSEGLYPH96DARK = 64,
    DWMWP_BUTTONCLOSEGLYPH120DARK = 65,
    DWMWP_BUTTONCLOSEGLYPH144DARK = 66,
    DWMWP_BUTTONCLOSEGLYPH192DARK = 67,
    DWMWP_BUTTONHELPGLYPH96DARK = 68,
    DWMWP_BUTTONHELPGLYPH120DARK = 69,
    DWMWP_BUTTONHELPGLYPH144DARK = 70,
    DWMWP_BUTTONHELPGLYPH192DARK = 71,
    DWMWP_BUTTONMAXGLYPH96DARK = 72,
    DWMWP_BUTTONMAXGLYPH120DARK = 73,
    DWMWP_BUTTONMAXGLYPH144DARK = 74,
    DWMWP_BUTTONMAXGLYPH192DARK = 75,
    DWMWP_BUTTONMINGLYPH96DARK = 76,
    DWMWP_BUTTONMINGLYPH120DARK = 77,
    DWMWP_BUTTONMINGLYPH144DARK = 78,
    DWMWP_BUTTONMINGLYPH192DARK = 79,
    DWMWP_BUTTONRESTOREGLYPH96DARK = 80,
    DWMWP_BUTTONRESTOREGLYPH120DARK = 81,
    DWMWP_BUTTONRESTOREGLYPH144DARK = 82,
    DWMWP_BUTTONRESTOREGLYPH192DARK = 83,
    DWMWP_SMALLBUTTONCLOSEGLYPH96DARK = 84,
    DWMWP_SMALLBUTTONCLOSEGLYPH120DARK = 85,
    DWMWP_SMALLBUTTONCLOSEGLYPH144DARK = 86,
    DWMWP_SMALLBUTTONCLOSEGLYPH192DARK = 87,
    DWMWP_BUTTONACTIVECAPTIONDARK = 88,
    DWMWP_BUTTONINACTIVECAPTIONDARK = 89,
    DWMWP_BUTTONACTIVECAPTIONENDDARK = 90,
    DWMWP_BUTTONINACTIVECAPTIONENDDARK = 91
};

typedef enum DWM_SHOWCONTACT {
    DWMSC_DOWN = 1,
    DWMSC_UP = 2,
    DWMSC_DRAG = 4,
    DWMSC_HOLD = 8,
    DWMSC_PENBARREL = 16,
    DWMSC_NONE = 0,
    DWMSC_ALL = -1
};

typedef enum DWM_SOURCE_FRAME_SAMPLING {
    DWM_SOURCE_FRAME_SAMPLING_POINT = 0,
    DWM_SOURCE_FRAME_SAMPLING_COVERAGE = 1,
    DWM_SOURCE_FRAME_SAMPLING_LAST = 2
};

typedef enum DWM_SWAPCHAINRENDERTARGET_METADATA_ID {
    DWM_SWAPCHAINRENDERTARGET_METADATA_ID_RESIZE = 0,
    DWM_SWAPCHAINRENDERTARGET_METADATA_ID_RENDERTARGETSOCCLUDED = 1,
    DWM_SWAPCHAINRENDERTARGET_METADATA_ID_BUFFERNOTVALID = 2,
    DWM_SWAPCHAINRENDERTARGET_METADATA_ID_FRAMETIME = 3,
    DWM_SWAPCHAINRENDERTARGET_METADATA_ID_CONTAINSHDR = 4
};

typedef enum DWM_TABBING_ENABLED {
    DWMTE_DEFAULT = 0,
    DWMTE_ENABLED = 1,
    DWMTE_DISABLED = 2
};

typedef enum DWM_TAB_GROUPING_PREFERENCE {
    DWMTGP_DEFAULT = 0,
    DWMTGP_TAB_WITH_ASSOCIATED_WINDOW = 1,
    DWMTGP_NEW_TAB_GROUP = 2
};

typedef enum DWM_TAB_WINDOW_REQUIREMENTS {
    DWMTWR_NONE = 0,
    DWMTWR_IMPLEMENTED_BY_SYSTEM = 1,
    DWMTWR_WINDOW_RELATIONSHIP = 2,
    DWMTWR_WINDOW_STYLES = 4,
    DWMTWR_WINDOW_REGION = 8,
    DWMTWR_WINDOW_DWM_ATTRIBUTES = 16,
    DWMTWR_WINDOW_MARGINS = 32,
    DWMTWR_TABBING_ENABLED = 64,
    DWMTWR_USER_POLICY = 128,
    DWMTWR_GROUP_POLICY = 256,
    DWMTWR_APP_COMPAT = 512
};

typedef enum DXGI_FORMAT {
};

typedef enum ECC_CURVE_ALG_ID_ENUM {
    BCRYPT_NO_CURVE_GENERATION_ALG_ID = 0
};

typedef enum ECC_CURVE_TYPE_ENUM {
    BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE = 1,
    BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE = 2,
    BCRYPT_ECC_PRIME_MONTGOMERY_CURVE = 3
};

typedef enum EC_ENDOFLINE {
    EC_ENDOFLINE_DETECTFROMCONTENT = 0,
    EC_ENDOFLINE_CRLF = 1,
    EC_ENDOFLINE_CR = 2,
    EC_ENDOFLINE_LF = 3
};

typedef enum EC_HOST_UI_MODE {
    ECHUIM_DESKTOP = 0,
    ECHUIM_IMMERSIVE = 1,
    ECHUIM_SYSTEM_LAUNCHER = 2
};

typedef enum EC_SEARCHWEB_ENTRYPOINT {
    EC_SEARCHWEB_ENTRYPOINT_EXTERNAL = 0,
    EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU = 1
};

typedef enum EDGE_GESTURE_KIND {
    EGK_TOUCH = 0,
    EGK_KEYBOARD = 1,
    EGK_MOUSE = 2
};

typedef enum EDITBORDER_HSCROLLSTATES {
    EPSH_NORMAL = 1,
    EPSH_HOT = 2,
    EPSH_FOCUSED = 3,
    EPSH_DISABLED = 4
};

typedef enum EDITBORDER_HVSCROLLSTATES {
    EPSHV_NORMAL = 1,
    EPSHV_HOT = 2,
    EPSHV_FOCUSED = 3,
    EPSHV_DISABLED = 4
};

typedef enum EDITBORDER_NOSCROLLSTATES {
    EPSN_NORMAL = 1,
    EPSN_HOT = 2,
    EPSN_FOCUSED = 3,
    EPSN_DISABLED = 4
};

typedef enum EDITBORDER_VSCROLLSTATES {
    EPSV_NORMAL = 1,
    EPSV_HOT = 2,
    EPSV_FOCUSED = 3,
    EPSV_DISABLED = 4
};

typedef enum EDITPARTS {
    EP_EDITTEXT = 1,
    EP_CARET = 2,
    EP_BACKGROUND = 3,
    EP_PASSWORD = 4,
    EP_BACKGROUNDWITHBORDER = 5,
    EP_EDITBORDER_NOSCROLL = 6,
    EP_EDITBORDER_HSCROLL = 7,
    EP_EDITBORDER_VSCROLL = 8,
    EP_EDITBORDER_HVSCROLL = 9
};

typedef enum EDITPROPERTIESSTATES {
    PPEPS_NORMAL = 1,
    PPEPS_HOT = 2,
    PPEPS_PRESSED = 3,
    PPEPS_KEYFOCUSED = 4
};

typedef enum EDITTEXTSTATES {
    ETS_NORMAL = 1,
    ETS_HOT = 2,
    ETS_SELECTED = 3,
    ETS_DISABLED = 4,
    ETS_FOCUSED = 5,
    ETS_READONLY = 6,
    ETS_ASSIST = 7,
    ETS_CUEBANNER = 8
};

typedef enum EDIT_CONTROL_FEATURE {
    EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT = 0,
    EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS = 1
};

typedef enum ELEMENT {
    ELEMENT_LEFT = 0,
    ELEMENT_RIGHT = 1
};

typedef enum ELEMENTSPYVALUE {
    ESV_DISPLAYNAME = 0,
    ESV_POINTERVALUE = 1,
    ESV_UICOLLECTION_UIVERSION = 2,
    ESV_UICOLLECTION_DISPLAYNAME = 3,
    ESV_UICOLLECTION_COLLECTION = 4
};

typedef enum ELEVATION_STATE {
    ELEVATION_NOT_CHECKED = 0,
    ELEVATION_CHECKED_SHIELD = 1,
    ELEVATION_CHECKED_NOSHIELD = 2
};

typedef enum EMPTYMARKUPPARTS {
    EMP_MARKUPTEXT = 1
};

typedef enum ENTERPAGESTATES {
    TA_ENTERPAGE_TARGET = 1
};

typedef enum ENUM_FILE_INFORMATION_CLASS {
    ENUM_FILE_ID_BOTH_DIR_INFO = 0,
    ENUM_FILE_BOTH_DIR_INFO = 1,
    ENUM_FILE_FULL_DIR_INFO = 2
};

typedef enum EPrintPropertyType {
    kPropertyTypeString = 1,
    kPropertyTypeInt32 = 2,
    kPropertyTypeInt64 = 3,
    kPropertyTypeByte = 4,
    kPropertyTypeTime = 5,
    kPropertyTypeDevMode = 6,
    kPropertyTypeSD = 7,
    kPropertyTypeNotificationReply = 8,
    kPropertyTypeNotificationOptions = 9,
    kPropertyTypeBuffer = 10
};

typedef enum EPrintXPSJobOperation {
    kJobProduction = 1,
    kJobConsumption = 2
};

typedef enum EPrintXPSJobProgress {
    kAddingDocumentSequence = 0,
    kDocumentSequenceAdded = 1,
    kAddingFixedDocument = 2,
    kFixedDocumentAdded = 3,
    kAddingFixedPage = 4,
    kFixedPageAdded = 5,
    kResourceAdded = 6,
    kFontAdded = 7,
    kImageAdded = 8,
    kXpsDocumentCommitted = 9
};

typedef enum ERROR_CODES_NOTIFICATIONS {
    ERROR_CODE_ACCESS_DENIED = -1,
    ARBITRATION_CODE_CONTINUE_LOGON = -2,
    ARBITRATION_CODE_TERMINATE = -3,
    ARBITRATION_CODE_RECONN_OPTIONS = -4,
    ARBITRATION_CODE_BUMP_OPTIONS = -5,
    ARBITRATION_CODE_NOPERM_DIALOG = -6,
    ARBITRATION_CODE_REFUSED_DIALOG = -7
};

typedef enum ESC_ACTION {
    EA_UNGRAB = 0,
    EA_SHAKE = 1,
    EA_PRESSESC = 2
};

typedef enum EWinStationExtendedSettingsType {
    eWinStationMultimediaConfig = 0,
    eWinStationProtocolManagerGuid = 1,
    eNumWinStationExtendedSettings = 2
};

typedef enum EXPANDBUTTONSTATES {
    LVEB_NORMAL = 1,
    LVEB_HOVER = 2,
    LVEB_PUSHED = 3
};

typedef enum EXPANDOBUTTONSTATES {
    TDLGEBS_NORMAL = 1,
    TDLGEBS_HOVER = 2,
    TDLGEBS_PRESSED = 3,
    TDLGEBS_EXPANDEDNORMAL = 4,
    TDLGEBS_EXPANDEDHOVER = 5,
    TDLGEBS_EXPANDEDPRESSED = 6,
    TDLGEBS_NORMALDISABLED = 7,
    TDLGEBS_EXPANDEDDISABLED = 8
};

typedef enum EXPANDSTATES {
    TA_EXPAND_AFFECTED = 1,
    TA_EXPAND_REVEALED = 2
};

typedef enum EXPLORERBARPARTS {
    EBP_HEADERBACKGROUND = 1,
    EBP_HEADERCLOSE = 2,
    EBP_HEADERPIN = 3,
    EBP_IEBARMENU = 4,
    EBP_NORMALGROUPBACKGROUND = 5,
    EBP_NORMALGROUPCOLLAPSE = 6,
    EBP_NORMALGROUPEXPAND = 7,
    EBP_NORMALGROUPHEAD = 8,
    EBP_SPECIALGROUPBACKGROUND = 9,
    EBP_SPECIALGROUPCOLLAPSE = 10,
    EBP_SPECIALGROUPEXPAND = 11,
    EBP_SPECIALGROUPHEAD = 12
};

typedef enum EXPLORER_BROWSER_FILL_FLAGS {
    EBF_NONE = 0,
    EBF_SELECTFROMDATAOBJECT = 256,
    EBF_NODROPTARGET = 512
};

typedef enum EXPLORER_BROWSER_OPTIONS {
    EBO_NONE = 0,
    EBO_NAVIGATEONCE = 1,
    EBO_SHOWFRAMES = 2,
    EBO_ALWAYSNAVIGATE = 4,
    EBO_NOTRAVELLOG = 8,
    EBO_NOWRAPPERWINDOW = 16,
    EBO_HTMLSHAREPOINTVIEW = 32,
    EBO_NOBORDER = 64,
    EBO_NOPERSISTVIEWSTATE = 128
};

typedef enum EXTCOCREATEFLAGS {
    EXTCOCF_CLSID_READ_FROM_UNTRUSTED_SOURCE = 0,
    EXTCOCF_DISABLE_LOAD_WITHOUT_COM = 1,
    EXTCOCF_CLSID_READ_FROM_TRUSTED_SOURCE = 2
};

typedef enum EXTENSIONLIST_HIDDEN_OPTION {
    ELHO_ANY = 0,
    ELHO_VISIBLE = 1,
    ELHO_HIDDEN = 2
};

typedef enum EXTENSIONLIST_PINNED_OPTION {
    ELPO_ANY = 0,
    ELPO_PINNED = 1,
    ELPO_UNPINNED = 2
};

typedef enum EXTENSIONLIST_USAGE_OPTION {
    ELUO_ANY = 0,
    ELUO_MFU = 1
};

typedef enum ExplorerStatusBarPARTS {
};

typedef enum ExtensionListComparisonResult {
    Identical = 0,
    SameItems = 1,
    Different = 2
};

typedef enum ExtensionListStalenessFlags {
    RegistrationData = 1,
    UserCustomizations = 2,
    UsageData = 4
};

typedef enum FADEINSTATES {
    TA_FADEIN_SHOWN = 1
};

typedef enum FADEOUTSTATES {
    TA_FADEOUT_HIDDEN = 1
};

typedef enum FDAP {
    FDAP_BOTTOM = 0,
    FDAP_TOP = 1
};

typedef enum FDE_OVERWRITE_RESPONSE {
    FDEOR_DEFAULT = 0,
    FDEOR_ACCEPT = 1,
    FDEOR_REFUSE = 2
};

typedef enum FDE_SHAREVIOLATION_RESPONSE {
    FDESVR_DEFAULT = 0,
    FDESVR_ACCEPT = 1,
    FDESVR_REFUSE = 2
};

typedef enum FD_FLAGS {
    FD_CLSID = 1,
    FD_SIZEPOINT = 2,
    FD_ATTRIBUTES = 4,
    FD_CREATETIME = 8,
    FD_ACCESSTIME = 16,
    FD_WRITESTIME = 32,
    FD_FILESIZE = 64,
    FD_PROGRESSUI = 16384,
    FD_LINKUI = 0x8000,
    FD_UNICODE = -2147483648
};

typedef enum FEATURE_CHANGE_TIME {
    FEATURE_CHANGE_TIME_READ = 0,
    FEATURE_CHANGE_TIME_MODULE_RELOAD = 1,
    FEATURE_CHANGE_TIME_SESSION = 2,
    FEATURE_CHANGE_TIME_REBOOT = 3,
    FEATURE_CHANGE_TIME_USER_FLAG = 128
};

typedef enum FEATURE_ENABLED_STATE {
    FEATURE_ENABLED_STATE_DEFAULT = 0,
    FEATURE_ENABLED_STATE_DISABLED = 1,
    FEATURE_ENABLED_STATE_ENABLED = 2,
    FEATURE_ENABLED_STATE_HAS_NOTIFICATION = 128,
    FEATURE_ENABLED_STATE_HAS_VARIANT_CONFIGURATION = 64
};

typedef enum FFFP_MODE {
    FFFP_EXACTMATCH = 0,
    FFFP_NEARESTPARENTMATCH = 1
};

typedef enum FILETYPEATTRIBUTEFLAGS {
    FTA_None = 0,
    FTA_Exclude = 1,
    FTA_Show = 2,
    FTA_HasExtension = 4,
    FTA_NoEdit = 8,
    FTA_NoRemove = 16,
    FTA_NoNewVerb = 32,
    FTA_NoEditVerb = 64,
    FTA_NoRemoveVerb = 128,
    FTA_NoEditDesc = 256,
    FTA_NoEditIcon = 512,
    FTA_NoEditDflt = 1024,
    FTA_NoEditVerbCmd = 2048,
    FTA_NoEditVerbExe = 4096,
    FTA_NoDDE = 8192,
    FTA_NoEditMIME = 0x8000,
    FTA_OpenIsSafe = 0x10000,
    FTA_AlwaysUnsafe = 0x20000,
    FTA_NoRecentDocs = 0x100000,
    FTA_SafeForElevation = 0x200000,
    FTA_AlwaysUseDirectInvoke = 0x400000
};

typedef enum FILE_OPERATION_FLAGS2 {
    FOF2_NONE = 0,
    FOF2_MERGEFOLDERSONCOLLISION = 1
};

typedef enum FILE_USAGE_TYPE {
    FUT_PLAYING = 0,
    FUT_EDITING = 1,
    FUT_GENERIC = 2
};

typedef enum FILLSTATES {
    PBFS_NORMAL = 1,
    PBFS_ERROR = 2,
    PBFS_PAUSED = 3,
    PBFS_PARTIAL = 4
};

typedef enum FILLTYPE {
    FT_SOLID = 0,
    FT_VERTGRADIENT = 1,
    FT_HORZGRADIENT = 2,
    FT_RADIALGRADIENT = 3,
    FT_TILEIMAGE = 4
};

typedef enum FILLVERTSTATES {
    PBFVS_NORMAL = 1,
    PBFVS_ERROR = 2,
    PBFVS_PAUSED = 3,
    PBFVS_PARTIAL = 4
};

typedef enum FLICK_TYPE {
    FT_SCROLLUP = 0,
    FT_SCROLLDOWN = 1,
    FT_DRAGUP = 2,
    FT_DRAGDOWN = 3,
    FT_FORWARD = 4,
    FT_BACKWARD = 5,
    FT_CUT = 6,
    FT_COPY = 7,
    FT_PASTE = 8,
    FT_UNDO = 9,
    FT_REDO = 10,
    FT_PRINT = 11,
    FT_DELETE = 12,
    FT_OPEN = 13,
    FT_SAVE = 14,
    FT_CONTROLKEY = 15,
    FT_MENUKEY = 16,
    FT_SHIFTKEY = 17,
    FT_WINKEY = 18,
    FT_ALTGRKEY = 19,
    FT_GENERICKEY = 20
};

typedef enum FLYOUTMENU_SETTING {
    FMS_ShowSleepOption = 0,
    FMS_ShowHibernateOption = 1,
    FMS_ShowLockOption = 2
};

typedef enum FLYOUTPARTS {
    FLYOUT_HEADER = 1,
    FLYOUT_BODY = 2,
    FLYOUT_LABEL = 3,
    FLYOUT_LINK = 4,
    FLYOUT_DIVIDER = 5,
    FLYOUT_WINDOW = 6,
    FLYOUT_LINKAREA = 7,
    FLYOUT_LINKHEADER = 8
};

typedef enum FLYOUT_PLACEMENT {
    FP_DEFAULT = 0,
    FP_ABOVE = 1,
    FP_BELOW = 2,
    FP_LEFT = 3,
    FP_RIGHT = 4
};

typedef enum FOCUSDIRECTION {
    FD_NONE = 0,
    FD_NEXT = 1,
    FD_PREVIOUS = 2,
    FD_UP = 3,
    FD_DOWN = 4,
    FD_LEFT = 5,
    FD_RIGHT = 6
};

typedef enum FOCUSRECTINNERSTATES {
    IVFRIN_NORMAL = 1
};

typedef enum FOCUSRECTSTATES {
    IVFR_NORMAL = 1,
    IVFR_HOVER = 2
};

typedef enum FOLDERFLAGS {
    FWF_NONE = 0,
    FWF_AUTOARRANGE = 1,
    FWF_ABBREVIATEDNAMES = 2,
    FWF_SNAPTOGRID = 4,
    FWF_OWNERDATA = 8,
    FWF_BESTFITWINDOW = 16,
    FWF_DESKTOP = 32,
    FWF_SINGLESEL = 64,
    FWF_NOSUBFOLDERS = 128,
    FWF_TRANSPARENT = 256,
    FWF_NOCLIENTEDGE = 512,
    FWF_NOSCROLL = 1024,
    FWF_ALIGNLEFT = 2048,
    FWF_NOICONS = 4096,
    FWF_SHOWSELALWAYS = 8192,
    FWF_NOVISIBLE = 16384,
    FWF_SINGLECLICKACTIVATE = 0x8000,
    FWF_NOWEBVIEW = 0x10000,
    FWF_HIDEFILENAMES = 0x20000,
    FWF_CHECKSELECT = 0x40000,
    FWF_NOENUMREFRESH = 0x80000,
    FWF_NOGROUPING = 0x100000,
    FWF_FULLROWSELECT = 0x200000,
    FWF_NOFILTERS = 0x400000,
    FWF_NOCOLUMNHEADER = 0x800000,
    FWF_NOHEADERINALLVIEWS = 0x1000000,
    FWF_EXTENDEDTILES = 0x2000000,
    FWF_TRICHECKSELECT = 0x4000000,
    FWF_AUTOCHECKSELECT = 0x8000000,
    FWF_NOBROWSERVIEWSTATE = 0x10000000,
    FWF_SUBSETGROUPS = 0x20000000,
    FWF_USESEARCHFOLDER = 0x40000000,
    FWF_ALLOWRTLREADING = -2147483648
};

typedef enum FOLDERLOGICALVIEWMODE {
    FLVM_UNSPECIFIED = -1,
    FLVM_FIRST = 1,
    FLVM_DETAILS = 1,
    FLVM_TILES = 2,
    FLVM_ICONS = 3,
    FLVM_LIST = 4,
    FLVM_CONTENT = 5,
    FLVM_LAST = 5
};

typedef enum FOLDERSHEADERSTATES {
    FHS_NORMAL = 1,
    FHS_HOT = 2,
    FHS_PRESSED = 3
};

typedef enum FOLDERVIEWMODE {
    FVM_AUTO = -1,
    FVM_FIRST = 1,
    FVM_ICON = 1,
    FVM_SMALLICON = 2,
    FVM_LIST = 3,
    FVM_DETAILS = 4,
    FVM_THUMBNAIL = 5,
    FVM_TILE = 6,
    FVM_THUMBSTRIP = 7,
    FVM_CONTENT = 8,
    FVM_LAST = 8
};

typedef enum FOLDER_ENUM_MODE {
    FEM_VIEWRESULT = 0,
    FEM_NAVIGATION = 1
};

typedef enum FRAMEBOTTOMSTATES {
    FRB_ACTIVE = 1,
    FRB_INACTIVE = 2
};

typedef enum FRAMELEFTSTATES {
    FRL_ACTIVE = 1,
    FRL_INACTIVE = 2
};

typedef enum FRAMERIGHTSTATES {
    FRR_ACTIVE = 1,
    FRR_INACTIVE = 2
};

typedef enum FRAMESTATES {
    FS_ACTIVE = 1,
    FS_INACTIVE = 2
};

typedef enum FRAMEWORK_INPUT_PANE_BEHAVIOR_MODE {
    FIPBM_AUTO = 0,
    FIPBM_STORE_APP = 1,
    FIPBM_DESKTOP_APP = 2
};

typedef enum FVTEXTTYPE {
    FVST_EMPTYTEXT = 0
};

typedef enum GDISCALE_COMMAND {
    GDISCALE_COMMAND_SetDCDpiScaleValue = 0
};

typedef enum GESTURE_TYPE {
    GT_PEN_TAP = 0,
    GT_PEN_DOUBLETAP = 1,
    GT_PEN_RIGHTTAP = 2,
    GT_PEN_PRESSANDHOLD = 3,
    GT_PEN_PRESSANDHOLDABORT = 4,
    GT_TOUCH_TAP = 5,
    GT_TOUCH_DOUBLETAP = 6,
    GT_TOUCH_RIGHTTAP = 7,
    GT_TOUCH_PRESSANDHOLD = 8,
    GT_TOUCH_PRESSANDHOLDABORT = 9,
    GT_TOUCH_PRESSANDTAP = 10
};

typedef enum GETPROPERTYSTOREFLAGS {
    GPS_DEFAULT = 0,
    GPS_HANDLERPROPERTIESONLY = 1,
    GPS_READWRITE = 2,
    GPS_TEMPORARY = 4,
    GPS_FASTPROPERTIESONLY = 8,
    GPS_OPENSLOWITEM = 16,
    GPS_DELAYCREATION = 32,
    GPS_BESTEFFORT = 64,
    GPS_NO_OPLOCK = 128,
    GPS_PREFERQUERYPROPERTIES = 256,
    GPS_EXTRINSICPROPERTIES = 512,
    GPS_EXTRINSICPROPERTIESONLY = 1024,
    GPS_VOLATILEPROPERTIES = 2048,
    GPS_VOLATILEPROPERTIESONLY = 4096,
    GPS_MASK_VALID = 8191
};

typedef enum GETSORTCOLUMN {
    GSC_ARRANGEBY = 0,
    GSC_SORTBY = 1
};

typedef enum GET_PROPERTY_STORE_TYPE {
    GIPST_CACHED = 0,
    GIPST_FALLBACK = 1
};

typedef enum GHOSTREASON {
    GR_UNKNOWN = 0,
    GR_GHOST = 1,
    GR_FROSTCRASH = 2,
    GR_FROSTSIBLING = 3,
    GR_WERDLG = 4
};

typedef enum GLYPHFONTSIZINGTYPE {
    GFST_NONE = 0,
    GFST_SIZE = 1,
    GFST_DPI = 2
};

typedef enum GLYPHSTATES {
    GLPS_CLOSED = 1,
    GLPS_OPENED = 2
};

typedef enum GLYPHTYPE {
    GT_NONE = 0,
    GT_IMAGEGLYPH = 1,
    GT_FONTGLYPH = 2
};

typedef enum GRIDCELLBACKGROUNDSTATES {
    MCGCB_SELECTED = 1,
    MCGCB_HOT = 2,
    MCGCB_SELECTEDHOT = 3,
    MCGCB_SELECTEDNOTFOCUSED = 4,
    MCGCB_TODAY = 5,
    MCGCB_TODAYSELECTED = 6
};

typedef enum GRIDCELLSTATES {
    MCGC_HOT = 1,
    MCGC_HASSTATE = 2,
    MCGC_HASSTATEHOT = 3,
    MCGC_TODAY = 4,
    MCGC_TODAYSELECTED = 5,
    MCGC_SELECTED = 6,
    MCGC_SELECTEDHOT = 7
};

typedef enum GRIDCELLUPPERSTATES {
    MCGCU_HOT = 1,
    MCGCU_HASSTATE = 2,
    MCGCU_HASSTATEHOT = 3,
    MCGCU_SELECTED = 4,
    MCGCU_SELECTEDHOT = 5
};

typedef enum GRIDNUM {
    GN_LEFTTOP = 0,
    GN_MIDDLETOP = 1,
    GN_RIGHTTOP = 2,
    GN_LEFTMIDDLE = 3,
    GN_MIDDLEMIDDLE = 4,
    GN_RIGHTMIDDLE = 5,
    GN_LEFTBOTTOM = 6,
    GN_MIDDLEBOTTOM = 7,
    GN_RIGHTBOTTOM = 8
};

typedef enum GRIPPERSTATES {
    TSGS_NORMAL = 1,
    TSGS_CENTERED = 2
};

typedef enum GROUPBOXSTATES {
    GBS_NORMAL = 1,
    GBS_DISABLED = 2
};

typedef enum GROUPHEADERLINESTATES {
    LVGHL_OPEN = 1,
    LVGHL_OPENHOT = 2,
    LVGHL_OPENSELECTED = 3,
    LVGHL_OPENSELECTEDHOT = 4,
    LVGHL_OPENSELECTEDNOTFOCUSED = 5,
    LVGHL_OPENSELECTEDNOTFOCUSEDHOT = 6,
    LVGHL_OPENMIXEDSELECTION = 7,
    LVGHL_OPENMIXEDSELECTIONHOT = 8,
    LVGHL_CLOSE = 9,
    LVGHL_CLOSEHOT = 10,
    LVGHL_CLOSESELECTED = 11,
    LVGHL_CLOSESELECTEDHOT = 12,
    LVGHL_CLOSESELECTEDNOTFOCUSED = 13,
    LVGHL_CLOSESELECTEDNOTFOCUSEDHOT = 14,
    LVGHL_CLOSEMIXEDSELECTION = 15,
    LVGHL_CLOSEMIXEDSELECTIONHOT = 16
};

typedef enum GROUPHEADERSTATES {
    LVGH_OPEN = 1,
    LVGH_OPENHOT = 2,
    LVGH_OPENSELECTED = 3,
    LVGH_OPENSELECTEDHOT = 4,
    LVGH_OPENSELECTEDNOTFOCUSED = 5,
    LVGH_OPENSELECTEDNOTFOCUSEDHOT = 6,
    LVGH_OPENMIXEDSELECTION = 7,
    LVGH_OPENMIXEDSELECTIONHOT = 8,
    LVGH_CLOSE = 9,
    LVGH_CLOSEHOT = 10,
    LVGH_CLOSESELECTED = 11,
    LVGH_CLOSESELECTEDHOT = 12,
    LVGH_CLOSESELECTEDNOTFOCUSED = 13,
    LVGH_CLOSESELECTEDNOTFOCUSEDHOT = 14,
    LVGH_CLOSEMIXEDSELECTION = 15,
    LVGH_CLOSEMIXEDSELECTIONHOT = 16
};

typedef enum GROUP_WINDOW_MANAGEMENT_POLICY {
    GWMP_NONE = 0,
    GWMP_DELEGATE_CLOSE_REQUEST = 1
};

typedef enum GROUP_WINDOW_ROLE {
    GWR_DEFAULT = 0,
    GWR_APPLICATION = 1,
    GWR_FALLBACK = 2,
    GWR_MAX = 2
};

typedef enum HALIGN {
    HA_LEFT = 0,
    HA_CENTER = 1,
    HA_RIGHT = 2
};

typedef enum HARDWARE_EXPRESSION_ACCENT_LOAD_STATUS {
    HEALS_NONE = 0,
    HEALS_ON_DEVICE = 1,
    HEALS_IN_RESOURCE_FILE = 2,
    HEALS_WINDOWS_UPDATE = 4,
    HEALS_LOADING = 8,
    HEALS_COMPLETE = 16,
    HEALS_ERROR_ALLOW_RETRY = 32,
    HEALS_ERROR_DONT_ALLOW_RETRY = 64,
    HEALS_VALIDATED = 128,
    HEALS_FAILED_VALIDATION = 256,
    HEALS_VALID_STATUS_FLAGS = 504,
    HEALS_ALL_FLAGS = 511
};

typedef enum HASHALGORITHM_ENUM {
    DSA_HASH_ALGORITHM_SHA1 = 0,
    DSA_HASH_ALGORITHM_SHA256 = 1,
    DSA_HASH_ALGORITHM_SHA512 = 2
};

typedef enum HDIOPTION {
    HDIF_REASSIGN = 1,
    HDIF_RELEASE = 2,
    HDIF_RETAIN = 3
};

typedef enum HEADERAREASTATES {
    AW_S_HEADERAREA_NOMARGIN = 1
};

typedef enum HEADERCLOSESTATES {
    EBHC_NORMAL = 1,
    EBHC_HOT = 2,
    EBHC_PRESSED = 3
};

typedef enum HEADERDROPDOWNFILTERSTATES {
    HDDFS_NORMAL = 1,
    HDDFS_SOFTHOT = 2,
    HDDFS_HOT = 3
};

typedef enum HEADERDROPDOWNSTATES {
    HDDS_NORMAL = 1,
    HDDS_SOFTHOT = 2,
    HDDS_HOT = 3
};

typedef enum HEADERITEMLEFTSTATES {
    HILS_NORMAL = 1,
    HILS_HOT = 2,
    HILS_PRESSED = 3
};

typedef enum HEADERITEMRIGHTSTATES {
    HIRS_NORMAL = 1,
    HIRS_HOT = 2,
    HIRS_PRESSED = 3
};

typedef enum HEADERITEMSTATES {
    HIS_NORMAL = 1,
    HIS_HOT = 2,
    HIS_PRESSED = 3,
    HIS_SORTEDNORMAL = 4,
    HIS_SORTEDHOT = 5,
    HIS_SORTEDPRESSED = 6,
    HIS_ICONNORMAL = 7,
    HIS_ICONHOT = 8,
    HIS_ICONPRESSED = 9,
    HIS_ICONSORTEDNORMAL = 10,
    HIS_ICONSORTEDHOT = 11,
    HIS_ICONSORTEDPRESSED = 12
};

typedef enum HEADEROVERFLOWSTATES {
    HOFS_NORMAL = 1,
    HOFS_HOT = 2
};

typedef enum HEADERPARTS {
    HP_HEADERITEM = 1,
    HP_HEADERITEMLEFT = 2,
    HP_HEADERITEMRIGHT = 3,
    HP_HEADERSORTARROW = 4,
    HP_HEADERDROPDOWN = 5,
    HP_HEADERDROPDOWNFILTER = 6,
    HP_HEADEROVERFLOW = 7
};

typedef enum HEADERPINSTATES {
    EBHP_NORMAL = 1,
    EBHP_HOT = 2,
    EBHP_PRESSED = 3,
    EBHP_SELECTEDNORMAL = 4,
    EBHP_SELECTEDHOT = 5,
    EBHP_SELECTEDPRESSED = 6
};

typedef enum HEADERSORTARROWSTATES {
    HSAS_SORTEDUP = 1,
    HSAS_SORTEDDOWN = 2
};

typedef enum HEADERSTYLESTATES {
    HBG_DETAILS = 1,
    HBG_ICON = 2
};

typedef enum HEATMAP_COLOR0STATES {
    TM_HM_C0_NORMAL = 1
};

typedef enum HEATMAP_COLOR1STATES {
    TM_HM_C1_NORMAL = 1
};

typedef enum HEATMAP_COLOR2STATES {
    TM_HM_C2_NORMAL = 1
};

typedef enum HEATMAP_COLOR3STATES {
    TM_HM_C3_NORMAL = 1
};

typedef enum HEATMAP_COLOR4STATES {
    TM_HM_C4_NORMAL = 1
};

typedef enum HEATMAP_COLOR5STATES {
    TM_HM_C5_NORMAL = 1
};

typedef enum HEATMAP_COLOR6STATES {
    TM_HM_C6_NORMAL = 1
};

typedef enum HEATMAP_COLOR7STATES {
    TM_HM_C7_NORMAL = 1
};

typedef enum HEATMAP_COLOR8STATES {
    TM_HM_C8_NORMAL = 1
};

typedef enum HEATMAP_CONTENTIONMARKERSTATES {
    TM_HM_CM_NORMAL = 1
};

typedef enum HELPBUTTONSTATES {
    HBS_NORMAL = 1,
    HBS_HOT = 2,
    HBS_PUSHED = 3,
    HBS_DISABLED = 4
};

typedef enum HELPLINKSTATES {
    CPHL_NORMAL = 1,
    CPHL_HOT = 2,
    CPHL_PRESSED = 3,
    CPHL_DISABLED = 4
};

typedef enum HELPSEARCHBOXPARTS {
    HSBP_HSBBACKGROUND = 1
};

typedef enum HIDEEDGEUISTATES {
    TA_HIDEEDGEUI_TARGET = 1
};

typedef enum HIDEPANELSTATES {
    TA_HIDEPANEL_TARGET = 1
};

typedef enum HIDEPOPUPSTATES {
    TA_HIDEPOPUP_TARGET = 1
};

typedef enum HIDESTATES {
    TA_HIDE_BACKGROUND = 1,
    TA_HIDE_CONTENT = 2,
    TA_HIDE_OUTLINE = 3,
    TA_HIDE_TAPPED = 4
};

typedef enum HIGHCONTRASTCOLOR {
    HCC_COLOR_ACTIVECAPTION = 0,
    HCC_COLOR_CAPTIONTEXT = 1,
    HCC_COLOR_BTNFACE = 2,
    HCC_COLOR_BTNTEXT = 3,
    HCC_COLOR_DESKTOP = 4,
    HCC_COLOR_GRAYTEXT = 5,
    HCC_COLOR_HOTLIGHT = 6,
    HCC_COLOR_INACTIVECAPTION = 7,
    HCC_COLOR_INACTIVECAPTIONTEXT = 8,
    HCC_COLOR_HIGHLIGHT = 9,
    HCC_COLOR_HIGHLIGHTTEXT = 10,
    HCC_COLOR_WINDOW = 11,
    HCC_COLOR_WINDOWTEXT = 12
};

typedef enum HOMEGROUPSHARINGCHOICES {
    HGSC_NONE = 0,
    HGSC_MUSICLIBRARY = 1,
    HGSC_PICTURESLIBRARY = 2,
    HGSC_VIDEOSLIBRARY = 4,
    HGSC_DOCUMENTSLIBRARY = 8,
    HGSC_PRINTERS = 16
};

typedef enum HORZSCROLLSTATES {
    HSS_NORMAL = 1,
    HSS_HOT = 2,
    HSS_PUSHED = 3,
    HSS_DISABLED = 4
};

typedef enum HORZTHUMBSTATES {
    HTS_NORMAL = 1,
    HTS_HOT = 2,
    HTS_PUSHED = 3,
    HTS_DISABLED = 4
};

typedef enum HOSTED_APP_CHANGED {
    HAC_STARTED = 0,
    HAC_CLOSED = 1,
    HAC_INTERACTIVE = 2,
    HAC_NON_INTERACTIVE = 3
};

typedef enum HOTGLYPHSTATES {
    HGLPS_CLOSED = 1,
    HGLPS_OPENED = 2
};

typedef enum HOVERBACKGROUNDSTATES {
    UTS_NORMAL = 1,
    UTS_HOT = 2,
    UTS_PRESSED = 3
};

typedef enum HSBBACKGROUNDSTATES {
    HSBBG_NORMAL = 1,
    HSBBG_HOT = 2,
    HSBBG_DISABLED = 3,
    HSBBG_FOCUSED = 4
};

typedef enum HYPERLINKSTATES {
    HLS_NORMALTEXT = 1,
    HLS_LINKTEXT = 2
};

typedef enum HYPERLINKTEXTSTATES {
    TS_HYPERLINK_NORMAL = 1,
    TS_HYPERLINK_HOT = 2,
    TS_HYPERLINK_PRESSED = 3,
    TS_HYPERLINK_DISABLED = 4
};

typedef enum ICONEFFECT {
    ICE_NONE = 0,
    ICE_GLOW = 1,
    ICE_SHADOW = 2,
    ICE_PULSE = 3,
    ICE_ALPHA = 4
};

typedef enum IEBARMENUSTATES {
    EBM_NORMAL = 1,
    EBM_HOT = 2,
    EBM_PRESSED = 3
};

typedef enum IEObjectType {
    IE_EPM_OBJECT_EVENT = 0,
    IE_EPM_OBJECT_MUTEX = 1,
    IE_EPM_OBJECT_SEMAPHORE = 2,
    IE_EPM_OBJECT_SHARED_MEMORY = 3,
    IE_EPM_OBJECT_WAITABLE_TIMER = 4,
    IE_EPM_OBJECT_FILE = 5,
    IE_EPM_OBJECT_NAMED_PIPE = 6,
    IE_EPM_OBJECT_REGISTRY = 7
};

typedef enum IGNOREMIME {
    IGNOREMIME_PROMPT = 1,
    IGNOREMIME_TEXT = 2
};

typedef enum IHM_DISPLAY_MODE {
    IDM_NONE = 0,
    IDM_IMMERSIVE = 1,
    IDM_FLOATING = 2,
    IDM_DOCKED = 3,
    IDM_SPLIT = 4
};

typedef enum IMAGELAYOUT {
    IL_VERTICAL = 0,
    IL_HORIZONTAL = 1
};

typedef enum IMAGESELECTTYPE {
    IST_NONE = 0,
    IST_SIZE = 1,
    IST_DPI = 2
};

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1
};

typedef enum IMCLR_DERIVATION_RULE_FLAGS {
    IDRF_NONE = 0,
    IDRF_HUE_RELATIVE = 1,
    IDRF_SAT_RELATIVE = 2,
    IDRF_LUM_RELATIVE = 4,
    IDRF_ACCENT_BASED = 8,
    IDRF_MIDPOINT_BASED = 16,
    IDRF_RANGE_RULE = 32,
    IDRF_LINKED = 64
};

typedef enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE {
    IMMSPS_VISIBLE = 0,
    IMMSPS_HIDDEN = 1
};

typedef enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER {
    IAGWF_ANY = 0,
    IAGWF_STRONGLY_NAMED = 1,
    IAGWF_PREFER_PENDING_PRESENTED = 2,
    IAGWF_ONLY_PENDING_PRESENTED = 3,
    IAGWF_PRESENTATION = 4,
    IAGWF_FRAME = 5
};

typedef enum IMMERSIVE_APPLICATION_PRESENTATION_CHANGE {
    IAPC_ISAPPLICATIONWINDOWPRESENTED = 0,
    IAPC_SHOULDSHOWBACKBUTTON = 1
};

typedef enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION {
    IAQSO_DEFAULT = 0,
    IAQSO_FIRST_PACKAGED = 1,
    IAQSO_ANY_PACKAGED = 2
};

typedef enum IMMERSIVE_COLOR_TYPE {
    IMCLR_ApplicationText = 0,
    IMCLR_SystemAccentLight3 = 1,
    IMCLR_SystemAccentLight2 = 2,
    IMCLR_SystemAccentLight1 = 3,
    IMCLR_SystemAccent = 4,
    IMCLR_SystemAccentDark1 = 5,
    IMCLR_SystemAccentDark2 = 6,
    IMCLR_SystemAccentDark3 = 7,
    IMCLR_SystemText = 8,
    IMCLR_StartBackground = 9,
    IMCLR_StartDesktopTilesBackground = 10,
    IMCLR_StartDesktopTilesText = 11,
    IMCLR_StartSystemTilesBackground = 12,
    IMCLR_StartBackgroundDisabled = 13,
    IMCLR_StartSecondaryText = 14,
    IMCLR_StartDisabledText = 15,
    IMCLR_StartSelectionBackground = 16,
    IMCLR_StartSelectionSecondaryText = 17,
    IMCLR_StartHoverBackground = 18,
    IMCLR_StartHoverSecondaryText = 19,
    IMCLR_StartSelectionHoverBackground = 20,
    IMCLR_StartHighlight = 21,
    IMCLR_StartInlineErrorText = 22,
    IMCLR_StartCommandRowRest = 23,
    IMCLR_StartCommandRowHover = 24,
    IMCLR_StartCommandRowPressed = 25,
    IMCLR_StartCommandRowDisabled = 26,
    IMCLR_StartFolderBackground = 27,
    IMCLR_StartThumbnailPlaceholder = 28,
    IMCLR_StartCmdBarBackground = 29,
    IMCLR_StartCmdBarButtonGlyphLayerPressed = 30,
    IMCLR_StartCmdBarButtonFillLayerRest = 31,
    IMCLR_StartCmdBarButtonFillLayerHover = 32,
    IMCLR_StartAllAppsDivider = 33,
    IMCLR_StartAPVBackground = 34,
    IMCLR_StartAPVSemanticZoomTileBackground = 35,
    IMCLR_StartAPVNewAppText = 36,
    IMCLR_StartAPVHeaderText = 37,
    IMCLR_StartGroupNameHeader = 38,
    IMCLR_StartDesktopBackgroundTattooStartPromptBackgroundRest = 39,
    IMCLR_StartDesktopBackgroundTattooStartPromptBackgroundHover = 40,
    IMCLR_SaturatedBackground = 41,
    IMCLR_SaturatedBackgroundDisabled = 42,
    IMCLR_SaturatedSecondaryText = 43,
    IMCLR_SaturatedDisabledText = 44,
    IMCLR_SaturatedSelectionBackground = 45,
    IMCLR_SaturatedSelectionSecondaryText = 46,
    IMCLR_SaturatedHoverBackground = 47,
    IMCLR_SaturatedHoverSecondaryText = 48,
    IMCLR_SaturatedSelectionHoverBackground = 49,
    IMCLR_SaturatedHighlight = 50,
    IMCLR_SaturatedInlineErrorText = 51,
    IMCLR_SaturatedSystemToastBackground = 52,
    IMCLR_SaturatedFolderBackground = 53,
    IMCLR_SaturatedAltTabBackground = 54,
    IMCLR_SaturatedCommandRowRest = 55,
    IMCLR_SaturatedCommandRowHover = 56,
    IMCLR_SaturatedCommandRowDisabled = 57,
    IMCLR_SaturatedSettingsCharmLinkHover = 58,
    IMCLR_SaturatedWebWizardIndex = 59,
    IMCLR_SaturatedSuggestionTilesBackground = 60,
    IMCLR_SaturatedSearchHighlight = 61,
    IMCLR_DarkListAccentLow = 62,
    IMCLR_DarkListAccentMedium = 63,
    IMCLR_DarkListAccentHigh = 64,
    IMCLR_LightListAccentLow = 65,
    IMCLR_LightListAccentMedium = 66,
    IMCLR_LightListAccentHigh = 67,
    IMCLR_LightTitleText = 68,
    IMCLR_LightSelectedTabText = 69,
    IMCLR_LightSelectionBackground = 70,
    IMCLR_LightSelectionHoverBackground = 71,
    IMCLR_LightPrimaryChartFill = 72,
    IMCLR_LightSecondaryChartFill = 73,
    IMCLR_LightHighlight = 74,
    IMCLR_LightInlineErrorText = 75,
    IMCLR_LightSearchSettingTilesBackground = 76,
    IMCLR_LightSearchHitHighlight = 77,
    IMCLR_HardwareCharmsBarFlag = 78,
    IMCLR_HardwareCharmsBarLogoWash = 79,
    IMCLR_HardwareGutterRest = 80,
    IMCLR_HardwareGutterDown = 81,
    IMCLR_HardwareDefaultKeyboardKeyBackgroundRest = 82,
    IMCLR_HardwareKeyboardEmojiCategoryTextSelected = 83,
    IMCLR_ControlDarkLinkRest = 84,
    IMCLR_ControlDarkLinkVisited = 85,
    IMCLR_ControlDarkLinkHover = 86,
    IMCLR_ControlDarkLinkPressed = 87,
    IMCLR_ControlLightLinkRest = 88,
    IMCLR_ControlLightLinkVisited = 89,
    IMCLR_ControlLightLinkHover = 90,
    IMCLR_ControlLightLinkPressed = 91,
    IMCLR_ControlDarkRoundButtonOutlineDisabled = 92,
    IMCLR_ControlDarkRoundButtonGlyphDisabled = 93,
    IMCLR_ControlDarkRoundButtonGlyphLayerPressed = 94,
    IMCLR_ControlDarkRoundButtonFillLayerDisabled = 95,
    IMCLR_ControlDarkRoundButtonFillLayerRest = 96,
    IMCLR_ControlDarkRoundButtonFillLayerHover = 97,
    IMCLR_ControlRadioButtonBackgroundSelected = 98,
    IMCLR_ControlDefaultDarkButtonBackgroundRest = 99,
    IMCLR_ControlDefaultDarkButtonBackgroundHover = 100,
    IMCLR_ControlDefaultLightButtonBackgroundRest = 101,
    IMCLR_ControlDefaultLightButtonBackgroundHover = 102,
    IMCLR_ControlDefaultLightButtonBorderRest = 103,
    IMCLR_ControlDefaultLightButtonBorderHover = 104,
    IMCLR_ControlDarkSelectHighlightSelected = 105,
    IMCLR_ControlDarkSelectHighlightSelectedHover = 106,
    IMCLR_ControlDarkSelectPopupBackgroundSelected = 107,
    IMCLR_ControlLightSelectHighlightSelected = 108,
    IMCLR_ControlLightSelectHighlightSelectedHover = 109,
    IMCLR_ControlLightSelectPopupBackgroundSelected = 110,
    IMCLR_ControlDarkRichEditHighlight = 111,
    IMCLR_ControlLightRichEditHighlight = 112,
    IMCLR_ControlDarkProgressForeground = 113,
    IMCLR_ControlLightProgressForeground = 114,
    IMCLR_ControlDarkToggleLabelDisabled = 115,
    IMCLR_ControlDarkToggleOnOffTextDisabled = 116,
    IMCLR_ControlDarkToggleThumbDisabled = 117,
    IMCLR_ControlDarkToggleTrackBackgroundDisabled = 118,
    IMCLR_ControlDarkToggleTrackBorderDisabled = 119,
    IMCLR_ControlDarkToggleTrackFillDisabled = 120,
    IMCLR_ControlDarkSliderBorder = 121,
    IMCLR_ControlDarkSliderTrackFillHover = 122,
    IMCLR_ControlDarkSliderTrackFillPressed = 123,
    IMCLR_ControlDarkSliderTrackFillRest = 124,
    IMCLR_ControlLightSliderTrackFillHover = 125,
    IMCLR_ControlLightSliderTrackFillPressed = 126,
    IMCLR_ControlLightSliderTrackFillRest = 127,
    IMCLR_ControlDarkToggleTrackBackgroundEnabled = 128,
    IMCLR_ControlDarkToggleTrackBorderEnabled = 129,
    IMCLR_ControlDarkToggleTrackFillEnabled = 130,
    IMCLR_ControlLightToggleTrackFillEnabled = 131,
    IMCLR_ControlLightToggleTrackFillHover = 132,
    IMCLR_ControlLightToggleTrackFillRest = 133,
    IMCLR_ControlLightToggleTrackFillPressed = 134,
    IMCLR_ControlDarkToggleTrackFillHover = 135,
    IMCLR_ControlDarkToggleTrackFillRest = 136,
    IMCLR_ControlDarkToggleTrackFillPressed = 137,
    IMCLR_FilesAppSelectionForeground = 138,
    IMCLR_FilesAppItemPrimaryText = 139,
    IMCLR_FilesAppFolderHoverPrimaryText = 140,
    IMCLR_FilesAppFolderSelectionPrimaryText = 141,
    IMCLR_FilesAppFolderSelectionHoverPrimaryText = 142,
    IMCLR_FilesAppSkyDriveFolderSelectionHoverSecondaryText = 143,
    IMCLR_FilesAppLocalFolderSelectionHoverSecondaryText = 144,
    IMCLR_FilesAppPickerPrimaryText = 145,
    IMCLR_FilesAppPickerHoverPrimaryText = 146,
    IMCLR_FilesAppPickerSelectionPrimaryText = 147,
    IMCLR_FilesAppPickerSelectionHoverPrimaryText = 148,
    IMCLR_FilesAppPickerSelectionSecondaryText = 149,
    IMCLR_FilesAppPickerSelectionHoverSecondaryText = 150,
    IMCLR_FilesAppPickerPanePrimaryText = 151,
    IMCLR_FilesAppPickerPaneSecondaryText = 152,
    IMCLR_FilesAppPickerPaneHoverText = 153,
    IMCLR_FilesAppPickerPaneHighlight = 154,
    IMCLR_FilesAppSearchButtonBackground = 155,
    IMCLR_FilesAppSearchButtonForeground = 156,
    IMCLR_FilesAppSearchBorder = 157,
    IMCLR_FilesAppSearchPrimaryText = 158,
    IMCLR_FilesAppSearchSecondaryText = 159,
    IMCLR_FilesAppAppBarBackground = 160,
    IMCLR_FilesAppAppBarForeground = 161,
    IMCLR_FilesAppProgressTrackBackground = 162,
    IMCLR_FilesAppTabTextHighlight = 163,
    IMCLR_HardwareDarkKeyboardKeyBackgroundPressed = 164,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextChildKeyPressed = 165,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextModifierKeyPressed = 166,
    IMCLR_HardwareDarkKeyboardEmojiCategoryTextSelected = 167,
    IMCLR_HardwareDarkCandidateControlBackgroundHightlighted = 168,
    IMCLR_HardwareDarkCandidateControlBackgroundPressed = 169,
    IMCLR_HardwareDarkCandidateControlHighlightSelected = 170,
    IMCLR_MultitaskingMTVDimmingLayer = 171,
    IMCLR_MultitaskingMTVScrollViewerBackground = 172,
    IMCLR_MultitaskingMTVCloseGlyphRest = 173,
    IMCLR_MultitaskingMTVCloseGlyphHotTrack = 174,
    IMCLR_MultitaskingMTVCloseGlyphPressed = 175,
    IMCLR_MultitaskingMTVSwitchItemTitle = 176,
    IMCLR_MultitaskingMTVThumbnailFocusInnerBorder = 177,
    IMCLR_MultitaskingMTVThumbnailFocusOuterBorder = 178,
    IMCLR_MultitaskingMTVThumbnailHotTrackInnerBorder = 179,
    IMCLR_MultitaskingMTVThumbnailHotTrackOuterBorder = 180,
    IMCLR_MultitaskingMTVThumbnailInnerBorder = 181,
    IMCLR_MultitaskingMTVVirtualDesktopBarBackground = 182,
    IMCLR_MultitaskingMTVVirtualDesktopInnerBorder = 183,
    IMCLR_MultitaskingMTVActiveVirtualDesktopOuterBorder = 184,
    IMCLR_MultitaskingMTVActiveVirtualDesktopHotTrackOuterBorder = 185,
    IMCLR_MultitaskingMTVRestVirtualDesktopInner = 186,
    IMCLR_MultitaskingMTVVirtualDesktopHotTrackOuterBorder = 187,
    IMCLR_MultitaskingMTVInactiveVirtualDesktopDim = 188,
    IMCLR_MultitaskingMTVVirtualDesktopDragDrop = 189,
    IMCLR_MultitaskingMTVVirtualDesktopTitle = 190,
    IMCLR_MultitaskingMTVNewDesktopTextRest = 191,
    IMCLR_MultitaskingMTVNewDesktopTextHotTrack = 192,
    IMCLR_MultitaskingMTVNewDesktopTextPressed = 193,
    IMCLR_MultitaskingMTVNewDesktopPlateRest = 194,
    IMCLR_MultitaskingMTVNewDesktopPlateHotTrack = 195,
    IMCLR_MultitaskingMTVNewDesktopPlatePressed = 196,
    IMCLR_MultitaskingMTVNewDesktopFocusOutline = 197,
    IMCLR_MultitaskingMTVScrollButtonGlyphRest = 198,
    IMCLR_MultitaskingMTVScrollButtonGlyphHotTrack = 199,
    IMCLR_MultitaskingMTVScrollButtonGlyphPressed = 200,
    IMCLR_MultitaskingMTVScrollButtonGlyphDisabled = 201,
    IMCLR_MultitaskingMTVScrollButtonPlateRest = 202,
    IMCLR_MultitaskingMTVScrollButtonPlateHotTrack = 203,
    IMCLR_MultitaskingMTVScrollButtonPlatePressed = 204,
    IMCLR_MultitaskingMTVScrollButtonPlateDisabled = 205,
    IMCLR_InputSwitchDarkRadioButtonBackgroundSelected = 206,
    IMCLR_InputSwitchLightRadioButtonBackgroundSelected = 207,
    IMCLR_InputSwitchColorDarkBackground = 208,
    IMCLR_OobeHyperLink = 209,
    __IMCLR_STATIC_COLOR_START__ = 210,
    IMCLR_ApplicationBackground = 210,
    IMCLR_ApplicationBackgroundLightTheme = 211,
    IMCLR_ApplicationBackgroundDarkTheme = 212,
    IMCLR_ApplicationTextLightTheme = 213,
    IMCLR_ApplicationTextDarkTheme = 214,
    IMCLR_SystemBackground = 215,
    IMCLR_SystemBackgroundLightTheme = 216,
    IMCLR_SystemBackgroundDarkTheme = 217,
    IMCLR_SystemTextLightTheme = 218,
    IMCLR_SystemTextDarkTheme = 219,
    IMCLR_StartFocusRect = 220,
    IMCLR_StartPrimaryText = 221,
    IMCLR_StartSelectionPrimaryText = 222,
    IMCLR_StartHoverPrimaryText = 223,
    IMCLR_StartSelectionHoverPrimaryText = 224,
    IMCLR_StartSelectionHoverSecondaryText = 225,
    IMCLR_StartControlLink = 226,
    IMCLR_StartControlLinkVisited = 227,
    IMCLR_StartControlLinkDisabled = 228,
    IMCLR_StartControlLinkPressed = 229,
    IMCLR_StartControlLinkMouseHover = 230,
    IMCLR_StartControlLinkForegroundPressed = 231,
    IMCLR_StartControlLinkBackgroundPressed = 232,
    IMCLR_StartCommandRowHighlight = 233,
    IMCLR_StartCmdBarButtonOutlineLayerRest = 234,
    IMCLR_StartCmdBarButtonOutlineLayerHover = 235,
    IMCLR_StartCmdBarButtonOutlineLayerPressed = 236,
    IMCLR_StartCmdBarButtonGlyphLayerRest = 237,
    IMCLR_StartCmdBarButtonGlyphLayerHover = 238,
    IMCLR_StartCmdBarButtonFillLayerPressed = 239,
    IMCLR_StartRoundButtonRest = 240,
    IMCLR_StartRoundButtonHover = 241,
    IMCLR_StartRoundButtonPressed = 242,
    IMCLR_StartDesktopAppBackground = 243,
    IMCLR_StartDefaultDarkFocusRect = 244,
    IMCLR_StartDefaultLightFocusRect = 245,
    IMCLR_StartDesktopBackgroundTattooTileDim = 246,
    IMCLR_StartDesktopBackgroundTattooViewSwitchButtonRest = 247,
    IMCLR_StartDesktopBackgroundTattooViewSwitchButtonHover = 248,
    IMCLR_StartDesktopBackgroundTattooSecondaryText = 249,
    IMCLR_StartDesktopBackgroundTattooAllAppsDivider = 250,
    IMCLR_SaturatedFocusRectDark = 251,
    IMCLR_SaturatedFocusRect = 252,
    IMCLR_SaturatedDefaultDarkFocusRect = 253,
    IMCLR_SaturatedDefaultLightFocusRect = 254,
    IMCLR_SaturatedPrimaryText = 255,
    IMCLR_SaturatedSelectionPrimaryText = 256,
    IMCLR_SaturatedHoverPrimaryText = 257,
    IMCLR_SaturatedSelectionHoverPrimaryText = 258,
    IMCLR_SaturatedSelectionHoverSecondaryText = 259,
    IMCLR_SaturatedSecondaryTextTransparent = 260,
    IMCLR_SaturatedSecondaryTextDisabledTransparent = 261,
    IMCLR_SaturatedDivider = 262,
    IMCLR_SaturatedControlLink = 263,
    IMCLR_SaturatedControlLinkVisited = 264,
    IMCLR_SaturatedControlLinkDisabled = 265,
    IMCLR_SaturatedControlLinkPressed = 266,
    IMCLR_SaturatedControlLinkMouseHover = 267,
    IMCLR_SaturatedControlLinkForegroundPressed = 268,
    IMCLR_SaturatedControlLinkBackgroundPressed = 269,
    IMCLR_SaturatedDesktopToastBackground = 270,
    IMCLR_SaturatedThumbnailPlaceholder = 271,
    IMCLR_SaturatedAltTabHoverRect = 272,
    IMCLR_SaturatedAltTabPressedRect = 273,
    IMCLR_SaturatedCommandRowPressed = 274,
    IMCLR_SaturatedCommandRowHighlight = 275,
    IMCLR_SaturatedSettingCharmSystemPaneButtonText = 276,
    IMCLR_SaturatedSettingCharmSystemPaneButtonTextHover = 277,
    IMCLR_SaturatedSettingCharmSystemPaneButtonTextPressed = 278,
    IMCLR_SaturatedSettingCharmSystemPaneButtonTextSelected = 279,
    IMCLR_SaturatedSettingCharmSystemPaneButtonTextDisabled = 280,
    IMCLR_SaturatedSettingCharmSystemPaneButtonRest = 281,
    IMCLR_SaturatedSettingCharmSystemPaneButtonHover = 282,
    IMCLR_SaturatedSettingCharmSystemPaneButtonPressed = 283,
    IMCLR_SaturatedSettingCharmSystemPaneButtonSelected = 284,
    IMCLR_SaturatedSettingCharmSystemPaneButtonDisabled = 285,
    IMCLR_SaturatedBackButtonBar = 286,
    IMCLR_SaturatedSearchSecondaryText = 287,
    IMCLR_DarkBaseLow = 288,
    IMCLR_DarkBaseMediumLow = 289,
    IMCLR_DarkBaseMedium = 290,
    IMCLR_DarkBaseMediumHigh = 291,
    IMCLR_DarkBaseHigh = 292,
    IMCLR_DarkAltLow = 293,
    IMCLR_DarkAltMediumLow = 294,
    IMCLR_DarkAltMedium = 295,
    IMCLR_DarkAltMediumHigh = 296,
    IMCLR_DarkAltHigh = 297,
    IMCLR_DarkListLow = 298,
    IMCLR_DarkListMedium = 299,
    IMCLR_DarkChromeTaskbarBase = 300,
    IMCLR_DarkChromeLow = 301,
    IMCLR_DarkChromeMediumLow = 302,
    IMCLR_DarkChromeMedium = 303,
    IMCLR_DarkChromeHigh = 304,
    IMCLR_DarkChromeAltLow = 305,
    IMCLR_DarkChromeDisabledLow = 306,
    IMCLR_DarkChromeDisabledHigh = 307,
    IMCLR_DarkChromeBlackLow = 308,
    IMCLR_DarkChromeBlackMediumLow = 309,
    IMCLR_DarkChromeBlackMedium = 310,
    IMCLR_DarkChromeBlackHigh = 311,
    IMCLR_DarkChromeWhite = 312,
    IMCLR_DarkAcrylicWindowBackdropFallback = 313,
    IMCLR_LightBaseLow = 314,
    IMCLR_LightBaseMediumLow = 315,
    IMCLR_LightBaseMedium = 316,
    IMCLR_LightBaseMediumHigh = 317,
    IMCLR_LightBaseHigh = 318,
    IMCLR_LightAltLow = 319,
    IMCLR_LightAltMediumLow = 320,
    IMCLR_LightAltMedium = 321,
    IMCLR_LightAltMediumHigh = 322,
    IMCLR_LightAltHigh = 323,
    IMCLR_LightListLow = 324,
    IMCLR_LightListMedium = 325,
    IMCLR_LightChromeTaskbarBase = 326,
    IMCLR_LightChromeLow = 327,
    IMCLR_LightChromeMediumLow = 328,
    IMCLR_LightChromeMedium = 329,
    IMCLR_LightChromeHigh = 330,
    IMCLR_LightChromeAltLow = 331,
    IMCLR_LightChromeDisabledLow = 332,
    IMCLR_LightChromeDisabledHigh = 333,
    IMCLR_LightChromeBlackLow = 334,
    IMCLR_LightChromeBlackMediumLow = 335,
    IMCLR_LightChromeBlackMedium = 336,
    IMCLR_LightChromeBlackHigh = 337,
    IMCLR_LightChromeWhite = 338,
    IMCLR_LightFocusRect = 339,
    IMCLR_LightBackground = 340,
    IMCLR_LightBackgroundDisabled = 341,
    IMCLR_LightPrimaryText = 342,
    IMCLR_LightSecondaryText = 343,
    IMCLR_LightDisabledText = 344,
    IMCLR_LightNavBackground = 345,
    IMCLR_LightTabText = 346,
    IMCLR_LightSelectionPrimaryText = 347,
    IMCLR_LightSelectionSecondaryText = 348,
    IMCLR_LightHoverBackground = 349,
    IMCLR_LightHoverBackgroundTransparent = 350,
    IMCLR_LightHoverPrimaryText = 351,
    IMCLR_LightHoverSecondaryText = 352,
    IMCLR_LightSelectionHoverPrimaryText = 353,
    IMCLR_LightSelectionHoverSecondaryText = 354,
    IMCLR_LightSecondaryTextTransparent = 355,
    IMCLR_LightEntityItemBackgroundHover = 356,
    IMCLR_LightEntityItemBackgroundSelected = 357,
    IMCLR_LightEntityItemBorderHover = 358,
    IMCLR_LightEntityItemBorderSelected = 359,
    IMCLR_LightWUNormal = 360,
    IMCLR_LightWUWarning = 361,
    IMCLR_LightWUError = 362,
    IMCLR_LightDesktopToastBackground = 363,
    IMCLR_LightBorder = 364,
    IMCLR_LightDivider = 365,
    IMCLR_LightControlLink = 366,
    IMCLR_LightControlLinkVisited = 367,
    IMCLR_LightControlLinkDisabled = 368,
    IMCLR_LightControlLinkPressed = 369,
    IMCLR_LightControlLinkMouseHover = 370,
    IMCLR_LightControlLinkForegroundPressed = 371,
    IMCLR_LightControlLinkBackgroundPressed = 372,
    IMCLR_LightSearchWeatherBlue = 373,
    IMCLR_LightSearchFinanceGreen = 374,
    IMCLR_LightSearchFinanceRed = 375,
    IMCLR_LightSearchAdBackground = 376,
    IMCLR_LightSearchStoreRatingFull = 377,
    IMCLR_LightSearchStoreRatingEmpty = 378,
    IMCLR_LightSearchVideoTextWhite = 379,
    IMCLR_LightSearchNewsBackground = 380,
    IMCLR_LightSearchNewsBackgroundBorder = 381,
    IMCLR_LightSearchHeroBackground = 382,
    IMCLR_LightSearchContactHeroAccentDark = 383,
    IMCLR_LightSearchContactHeroAccentLight = 384,
    IMCLR_LightSearchContactHeroAccentLink = 385,
    IMCLR_LightSearchContactHeroAccentHitHighlight = 386,
    IMCLR_LightPlaceholderBackground = 387,
    IMCLR_LightIconBorder = 388,
    IMCLR_LightSearchHeroCollageAccentDark = 389,
    IMCLR_LightSearchHeroCollageAccentLight = 390,
    IMCLR_LightSearchHeroMapAccentDark = 391,
    IMCLR_LightSearchHeroMapAccentLight = 392,
    IMCLR_LightPCSettingsSearchButtonBackgroundRest = 393,
    IMCLR_LightPCSettingsSearchButtonBackgroundHover = 394,
    IMCLR_LightPCSettingsSearchButtonBackgroundPressed = 395,
    IMCLR_LightPCSettingsNavBarItemBackgroundTouchPressed = 396,
    IMCLR_LightPCSettingsNavBarItemBackgroundHover = 397,
    IMCLR_LightAcrylicWindowBackdropFallback = 398,
    IMCLR_HardwarePrimaryText = 399,
    IMCLR_HardwareClockBackground = 400,
    IMCLR_HardwareClockText = 401,
    IMCLR_HardwareCharmsBarBackground = 402,
    IMCLR_HardwareCharmsBarBackgroundRest = 403,
    IMCLR_HardwareCharmsBarBackgroundHotTrack = 404,
    IMCLR_HardwareCharmsBarBackgroundPressed = 405,
    IMCLR_HardwareCharmsBarText = 406,
    IMCLR_HardwareCharmsBarTextDisabled = 407,
    IMCLR_HardwareCharmsBarSelectedText = 408,
    IMCLR_HardwareGutterBackground = 409,
    IMCLR_HardwareGutterIndicator = 410,
    IMCLR_HardwareAppSwitcherBackground = 411,
    IMCLR_HardwareAppSwitcherHotTrack = 412,
    IMCLR_HardwareAppSwitcherThumbnailBorder = 413,
    IMCLR_HardwareAppSwitcherThumbnailBorderHover = 414,
    IMCLR_HardwareAppSwitcherTextOverlayBackground = 415,
    IMCLR_HardwareSemanticZoomBackground = 416,
    IMCLR_HardwareSemanticZoomForeground = 417,
    IMCLR_HardwareSemanticZoomBackgroundHover = 418,
    IMCLR_HardwareSemanticZoomForegroundHover = 419,
    IMCLR_HardwareSemanticZoomBackgroundPressed = 420,
    IMCLR_HardwareSemanticZoomForegroundPressed = 421,
    IMCLR_HardwareSettingCharmSystemPaneButtonText = 422,
    IMCLR_HardwareSettingCharmSystemPaneButtonTextHover = 423,
    IMCLR_HardwareSettingCharmSystemPaneButtonTextPressed = 424,
    IMCLR_HardwareSettingCharmSystemPaneButtonTextSelected = 425,
    IMCLR_HardwareSettingCharmSystemPaneButtonTextDisabled = 426,
    IMCLR_HardwareSettingCharmSystemPaneButtonRest = 427,
    IMCLR_HardwareSettingCharmSystemPaneButtonHover = 428,
    IMCLR_HardwareSettingCharmSystemPaneButtonPressed = 429,
    IMCLR_HardwareSettingCharmSystemPaneButtonSelected = 430,
    IMCLR_HardwareSettingCharmSystemPaneButtonDisabled = 431,
    IMCLR_HardwareKeyboardBackground = 432,
    IMCLR_HardwareKeyboardKeyDockCloseRest = 433,
    IMCLR_HardwareKeyboardKeyBackgroundDisabled = 434,
    IMCLR_HardwareKeyboardKeyPrimaryTextDisabled = 435,
    IMCLR_HardwareKeyboardKeySecondaryTextDisabled = 436,
    IMCLR_HardwareKeyboardKeyBackgroundRest = 437,
    IMCLR_HardwareKeyboardKeyPrimaryTextRest = 438,
    IMCLR_HardwareKeyboardKeySecondaryTextRest = 439,
    IMCLR_HardwareKeyboardKeyBackgroundPressed = 440,
    IMCLR_HardwareKeyboardKeyPrimaryTextPressed = 441,
    IMCLR_HardwareKeyboardKeySecondaryTextPressed = 442,
    IMCLR_HardwareKeyboardKeyBackgroundHover = 443,
    IMCLR_HardwareKeyboardDarkSpaceKeyBackgroundPressed = 444,
    IMCLR_HardwareKeyboardThumbCentralNumberKeyBackground = 445,
    IMCLR_HardwareKeyboardThumbCentralNumberKeyText = 446,
    IMCLR_HardwareDefaultKeyboardKeyPrimaryTextRest = 447,
    IMCLR_HardwareDefaultKeyboardKeySecondaryTextRest = 448,
    IMCLR_HardwareDefaultKeyboardKeyBackgroundHover = 449,
    IMCLR_HardwareKeyboardNumberKeyBackground = 450,
    IMCLR_HardwareKeyboardNumberKeyBackgroundHover = 451,
    IMCLR_HardwareKeyboardNumberKeyText = 452,
    IMCLR_HardwareKeyboardFunctionKeyBackground = 453,
    IMCLR_HardwareKeyboardFunctionKeyBackgroundHover = 454,
    IMCLR_HardwareKeyboardFunctionKeyText = 455,
    IMCLR_HardwareKeyboardFunctionKeyTextDisabled = 456,
    IMCLR_HardwareKeyboardChildPanelBackground = 457,
    IMCLR_HardwareKeyboardChildPanelKeyBackground = 458,
    IMCLR_HardwareKeyboardChildKeyKeyText = 459,
    IMCLR_HardwareKeyboardKeyBorder = 460,
    IMCLR_HardwareKeyboardTitleBarText = 461,
    IMCLR_HardwareKeyboardTitleBarTextDisabled = 462,
    IMCLR_HardwareKeyboardThumbResizeGripperBackgroundRest = 463,
    IMCLR_HardwareHandwritingPanelBorder = 464,
    IMCLR_HardwareHandwritingPanelKanjiConversionText = 465,
    IMCLR_HardwareHandwritingPanelKanjiConversionBackground = 466,
    IMCLR_HardwareHandwritingPanelInsertModeCharacter = 467,
    IMCLR_HardwareHandwritingPanelSuggestedWord = 468,
    IMCLR_HardwareHandwritingPanelCorrectionText = 469,
    IMCLR_HardwareHandwritingPanelMatchedText = 470,
    IMCLR_HardwareHandwritingPanelButtonRest = 471,
    IMCLR_HardwareHandwritingPanelButtonHover = 472,
    IMCLR_HardwareHandwritingPanelButtonPress = 473,
    IMCLR_HardwareHandwritingPanelButtonBorder = 474,
    IMCLR_HardwareHandwritingPanelConversionSelectedBackground = 475,
    IMCLR_HardwareHandwritingPanelConversionUnselectedBackground = 476,
    IMCLR_HardwareHandwritingPanelConversionSelectedText = 477,
    IMCLR_HardwareHandwritingPanelConversionUnselectedText = 478,
    IMCLR_HardwareHandwritingPanelConversionToggledText = 479,
    IMCLR_HardwareHandwritingPanelConversionHoveredText = 480,
    IMCLR_HardwareHandwritingPanelCharChevronRest = 481,
    IMCLR_HardwareHandwritingPanelCharChevronPressed = 482,
    IMCLR_HardwareHandwritingPanelHoverWord = 483,
    IMCLR_HardwareHandwritingPanelKanjiConversionBackgroundHovered = 484,
    IMCLR_HardwareHandwritingPanelKanjiConversionBorder = 485,
    IMCLR_HardwareTextPredictionBackgroundRest = 486,
    IMCLR_HardwareTextPredictionBackgroundPressed = 487,
    IMCLR_HardwareTextPredictionBorder = 488,
    IMCLR_HardwareTextPredictionTextRest = 489,
    IMCLR_HardwareTextPredictionTextPressed = 490,
    IMCLR_HardwareControlLink = 491,
    IMCLR_HardwareControlLinkVisited = 492,
    IMCLR_HardwareControlLinkDisabled = 493,
    IMCLR_HardwareControlLinkPressed = 494,
    IMCLR_HardwareControlLinkMouseHover = 495,
    IMCLR_HardwareAppBarBackground = 496,
    IMCLR_HardwareButtonRest = 497,
    IMCLR_HardwareButtonHover = 498,
    IMCLR_HardwareButtonGlyphHover = 499,
    IMCLR_HardwareButtonPressed = 500,
    IMCLR_HardwareButtonGlyphPressed = 501,
    IMCLR_HardwareButtonDisabled = 502,
    IMCLR_HardwareScrubberControlFill = 503,
    IMCLR_HardwareScrubberControlOutline = 504,
    IMCLR_HardwareScrubberControlFillHover = 505,
    IMCLR_HardwareScrubberControlOutlineHover = 506,
    IMCLR_HardwareScrubberControlFillPressed = 507,
    IMCLR_HardwareScrubberControlOutlinePressed = 508,
    IMCLR_HardwarePlaybackBarRest = 509,
    IMCLR_HardwarePlaybackBarProgressFill = 510,
    IMCLR_HardwarePlaybackBarTrim = 511,
    IMCLR_HardwareTrimControlFill = 512,
    IMCLR_HardwareTrimControlOutline = 513,
    IMCLR_HardwareTrimControlFillHover = 514,
    IMCLR_HardwareTrimControlOutlineHover = 515,
    IMCLR_HardwareTrimControlFillPressed = 516,
    IMCLR_HardwareTrimControlOutlinePressed = 517,
    IMCLR_HardwareTrimBarProgressFill = 518,
    IMCLR_HardwareCropControlFill = 519,
    IMCLR_HardwareCropControlOutline = 520,
    IMCLR_HardwareCropControlFillHover = 521,
    IMCLR_HardwareCropControlOutlineHover = 522,
    IMCLR_HardwareCropControlFillPressed = 523,
    IMCLR_HardwareCropControlOutlinePressed = 524,
    IMCLR_HardwarePlaybackButtonOutline = 525,
    IMCLR_HardwarePlaybackButtonFill = 526,
    IMCLR_HardwarePlaybackButtonGlyph = 527,
    IMCLR_HardwarePlaybackButtonGlyphHover = 528,
    IMCLR_HardwarePlaybackButtonFillHover = 529,
    IMCLR_HardwarePlaybackButtonGlyphPressed = 530,
    IMCLR_HardwarePlaybackButtonFillPressed = 531,
    IMCLR_HardwareCountdownText = 532,
    IMCLR_HardwareScreenFill = 533,
    IMCLR_HardwareGenericBackground = 534,
    IMCLR_HardwareFlipViewOutlineRest = 535,
    IMCLR_HardwareFlipViewOutlineHover = 536,
    IMCLR_HardwareFlipViewOutlinePressed = 537,
    IMCLR_HardwareFlipViewGlyphRest = 538,
    IMCLR_HardwareFlipViewGlyphHover = 539,
    IMCLR_HardwareFlipViewGlyphPressed = 540,
    IMCLR_HardwareFlipViewFillRest = 541,
    IMCLR_HardwareFlipViewFillHover = 542,
    IMCLR_HardwareFlipViewFillPressed = 543,
    IMCLR_HardwarePinFlyoutFlipViewOutlineRest = 544,
    IMCLR_HardwarePinFlyoutFlipViewOutlineHover = 545,
    IMCLR_HardwarePinFlyoutFlipViewOutlinePressed = 546,
    IMCLR_HardwarePinFlyoutFlipViewGlyphRest = 547,
    IMCLR_HardwarePinFlyoutFlipViewGlyphHover = 548,
    IMCLR_HardwarePinFlyoutFlipViewGlyphPressed = 549,
    IMCLR_HardwarePinFlyoutFlipViewFillRest = 550,
    IMCLR_HardwarePinFlyoutFlipViewFillHover = 551,
    IMCLR_HardwarePinFlyoutFlipViewFillPressed = 552,
    IMCLR_HardwareDarkRoundButtonOutlineDisabled = 553,
    IMCLR_HardwareDarkRoundButtonOutlineLayerRest = 554,
    IMCLR_HardwareDarkRoundButtonOutlineLayerHover = 555,
    IMCLR_HardwareDarkRoundButtonOutlineLayerPressed = 556,
    IMCLR_HardwareDarkRoundButtonGlyphDisabled = 557,
    IMCLR_HardwareDarkRoundButtonGlyphLayerRest = 558,
    IMCLR_HardwareDarkRoundButtonGlyphLayerHover = 559,
    IMCLR_HardwareDarkRoundButtonGlyphLayerPressed = 560,
    IMCLR_HardwareDarkRoundButtonFillLayerDisabled = 561,
    IMCLR_HardwareDarkRoundButtonFillLayerRest = 562,
    IMCLR_HardwareDarkRoundButtonFillLayerHover = 563,
    IMCLR_HardwareDarkRoundButtonFillLayerPressed = 564,
    IMCLR_HardwareWin8Pillarbox = 565,
    IMCLR_HardwareHelpStickerAccent = 566,
    IMCLR_HardwareHelpStickerBackground = 567,
    IMCLR_HardwareHelpStickerBorder = 568,
    IMCLR_ControlTransparent = 569,
    IMCLR_ControlFivePercentOpaqueWhite = 570,
    IMCLR_ControlHighContrastBTNTEXT = 571,
    IMCLR_ControlHighContrastBTNFACE = 572,
    IMCLR_ControlHighContrastHIGHLIGHT = 573,
    IMCLR_ControlHighContrastHIGHLIGHTTEXT = 574,
    IMCLR_ControlHighContrastWINDOW = 575,
    IMCLR_ControlHighContrastWINDOWTEXT = 576,
    IMCLR_ControlHighContrastGRAYTEXT = 577,
    IMCLR_ControlHighContrastHOTLIGHT = 578,
    IMCLR_ControlBlackButtonDisabled = 579,
    IMCLR_ControlSystemTileBorder = 580,
    IMCLR_ControlDarkFocusRect = 581,
    IMCLR_ControlLightFocusRect = 582,
    IMCLR_ControlDarkLinkDisabled = 583,
    IMCLR_ControlLightLinkDisabled = 584,
    IMCLR_ControlDarkRoundButtonOutlineLayerRest = 585,
    IMCLR_ControlDarkRoundButtonOutlineLayerHover = 586,
    IMCLR_ControlDarkRoundButtonOutlineLayerPressed = 587,
    IMCLR_ControlDarkRoundButtonGlyphLayerRest = 588,
    IMCLR_ControlDarkRoundButtonGlyphLayerHover = 589,
    IMCLR_ControlDarkRoundButtonFillLayerPressed = 590,
    IMCLR_ControlLightRoundButtonOutlineDisabled = 591,
    IMCLR_ControlLightRoundButtonOutlineLayerRest = 592,
    IMCLR_ControlLightRoundButtonOutlineLayerHover = 593,
    IMCLR_ControlLightRoundButtonOutlineLayerPressed = 594,
    IMCLR_ControlLightRoundButtonGlyphDisabled = 595,
    IMCLR_ControlLightRoundButtonGlyphLayerRest = 596,
    IMCLR_ControlLightRoundButtonGlyphLayerHover = 597,
    IMCLR_ControlLightRoundButtonGlyphLayerPressed = 598,
    IMCLR_ControlLightRoundButtonFillLayerDisabled = 599,
    IMCLR_ControlLightRoundButtonFillLayerRest = 600,
    IMCLR_ControlLightRoundButtonFillLayerHover = 601,
    IMCLR_ControlLightRoundButtonFillLayerPressed = 602,
    IMCLR_ControlRadioButtonBackgroundDisabledSelected = 603,
    IMCLR_ControlRadioButtonBackgroundDisabledHover = 604,
    IMCLR_ControlRadioButtonBackgroundDisabledPressed = 605,
    IMCLR_ControlRadioButtonTextDisabledSelected = 606,
    IMCLR_ControlRadioButtonTextDisabledHover = 607,
    IMCLR_ControlRadioButtonTextDisabledPressed = 608,
    IMCLR_ControlRadioButtonTextSelected = 609,
    IMCLR_ControlRadioButtonBorder = 610,
    IMCLR_ControlRadioButtonSeparator = 611,
    IMCLR_ControlDarkCheckboxBackgroundRest = 612,
    IMCLR_ControlDarkCheckboxBackgroundHover = 613,
    IMCLR_ControlDarkCheckboxBackgroundPressed = 614,
    IMCLR_ControlDarkCheckboxBackgroundDisabled = 615,
    IMCLR_ControlDarkCheckboxBorderRest = 616,
    IMCLR_ControlDarkCheckboxBorderHover = 617,
    IMCLR_ControlDarkCheckboxBorderPressed = 618,
    IMCLR_ControlDarkCheckboxBorderDisabled = 619,
    IMCLR_ControlDarkCheckboxLabelRest = 620,
    IMCLR_ControlDarkCheckboxLabelHover = 621,
    IMCLR_ControlDarkCheckboxLabelPressed = 622,
    IMCLR_ControlDarkCheckboxLabelDisabled = 623,
    IMCLR_ControlDarkCheckboxGlyphRest = 624,
    IMCLR_ControlDarkCheckboxGlyphHover = 625,
    IMCLR_ControlDarkCheckboxGlyphPressed = 626,
    IMCLR_ControlDarkCheckboxGlyphDisabled = 627,
    IMCLR_ControlLightCheckboxBackgroundRest = 628,
    IMCLR_ControlLightCheckboxBackgroundHover = 629,
    IMCLR_ControlLightCheckboxBackgroundPressed = 630,
    IMCLR_ControlLightCheckboxBackgroundDisabled = 631,
    IMCLR_ControlLightCheckboxBorderRest = 632,
    IMCLR_ControlLightCheckboxBorderHover = 633,
    IMCLR_ControlLightCheckboxBorderPressed = 634,
    IMCLR_ControlLightCheckboxBorderDisabled = 635,
    IMCLR_ControlLightCheckboxLabelRest = 636,
    IMCLR_ControlLightCheckboxLabelHover = 637,
    IMCLR_ControlLightCheckboxLabelPressed = 638,
    IMCLR_ControlLightCheckboxLabelDisabled = 639,
    IMCLR_ControlLightCheckboxGlyphRest = 640,
    IMCLR_ControlLightCheckboxGlyphHover = 641,
    IMCLR_ControlLightCheckboxGlyphPressed = 642,
    IMCLR_ControlLightCheckboxGlyphDisabled = 643,
    IMCLR_ControlDarkButtonBackgroundRest = 644,
    IMCLR_ControlDarkButtonBackgroundHover = 645,
    IMCLR_ControlDarkButtonBackgroundPressed = 646,
    IMCLR_ControlDarkButtonBackgroundDisabled = 647,
    IMCLR_ControlDarkButtonBorderRest = 648,
    IMCLR_ControlDarkButtonBorderHover = 649,
    IMCLR_ControlDarkButtonBorderPressed = 650,
    IMCLR_ControlDarkButtonBorderDisabled = 651,
    IMCLR_ControlDarkButtonTextRest = 652,
    IMCLR_ControlDarkButtonTextHover = 653,
    IMCLR_ControlDarkButtonTextPressed = 654,
    IMCLR_ControlDarkButtonTextDisabled = 655,
    IMCLR_ControlLightButtonBackgroundRest = 656,
    IMCLR_ControlLightButtonBackgroundHover = 657,
    IMCLR_ControlLightButtonBackgroundPressed = 658,
    IMCLR_ControlLightButtonBackgroundDisabled = 659,
    IMCLR_ControlLightButtonBorderRest = 660,
    IMCLR_ControlLightButtonBorderHover = 661,
    IMCLR_ControlLightButtonBorderPressed = 662,
    IMCLR_ControlLightButtonBorderDisabled = 663,
    IMCLR_ControlLightButtonTextRest = 664,
    IMCLR_ControlLightButtonTextHover = 665,
    IMCLR_ControlLightButtonTextPressed = 666,
    IMCLR_ControlLightButtonTextDisabled = 667,
    IMCLR_ControlDefaultDarkButtonBackgroundPressed = 668,
    IMCLR_ControlDefaultDarkButtonBackgroundDisabled = 669,
    IMCLR_ControlDefaultDarkButtonBorderRest = 670,
    IMCLR_ControlDefaultDarkButtonBorderHover = 671,
    IMCLR_ControlDefaultDarkButtonBorderPressed = 672,
    IMCLR_ControlDefaultDarkButtonBorderDisabled = 673,
    IMCLR_ControlDefaultDarkButtonTextRest = 674,
    IMCLR_ControlDefaultDarkButtonTextHover = 675,
    IMCLR_ControlDefaultDarkButtonTextPressed = 676,
    IMCLR_ControlDefaultDarkButtonTextDisabled = 677,
    IMCLR_ControlDefaultLightButtonBackgroundPressed = 678,
    IMCLR_ControlDefaultLightButtonBackgroundDisabled = 679,
    IMCLR_ControlDefaultLightButtonBorderPressed = 680,
    IMCLR_ControlDefaultLightButtonBorderDisabled = 681,
    IMCLR_ControlDefaultLightButtonTextRest = 682,
    IMCLR_ControlDefaultLightButtonTextHover = 683,
    IMCLR_ControlDefaultLightButtonTextPressed = 684,
    IMCLR_ControlDefaultLightButtonTextDisabled = 685,
    IMCLR_ControlDarkSelectBackgroundRest = 686,
    IMCLR_ControlDarkSelectBackgroundHover = 687,
    IMCLR_ControlDarkSelectBackgroundPressed = 688,
    IMCLR_ControlDarkSelectBackgroundDisabled = 689,
    IMCLR_ControlDarkSelectBorderRest = 690,
    IMCLR_ControlDarkSelectBorderHover = 691,
    IMCLR_ControlDarkSelectBorderPressed = 692,
    IMCLR_ControlDarkSelectBorderDisabled = 693,
    IMCLR_ControlDarkSelectTextRest = 694,
    IMCLR_ControlDarkSelectTextHover = 695,
    IMCLR_ControlDarkSelectTextPressed = 696,
    IMCLR_ControlDarkSelectTextDisabled = 697,
    IMCLR_ControlDarkSelectGlyphRest = 698,
    IMCLR_ControlDarkSelectGlyphDisabled = 699,
    IMCLR_ControlDarkSelectSecondaryTextHover = 700,
    IMCLR_ControlDarkSelectSecondaryTextPressed = 701,
    IMCLR_ControlDarkSelectSecondaryTextHighlighted = 702,
    IMCLR_ControlDarkSelectHighlightedSecondaryTextPressed = 703,
    IMCLR_ControlDarkSelectPopupBackgroundRest = 704,
    IMCLR_ControlDarkSelectPopupBackgroundHover = 705,
    IMCLR_ControlDarkSelectPopupBackgroundPressed = 706,
    IMCLR_ControlDarkSelectPopupBackgroundDisabled = 707,
    IMCLR_ControlDarkSelectPopupBorder = 708,
    IMCLR_ControlDarkSelectPopupTextRest = 709,
    IMCLR_ControlDarkSelectPopupTextHover = 710,
    IMCLR_ControlDarkSelectPopupTextSelected = 711,
    IMCLR_ControlDarkSelectPopupTextPressed = 712,
    IMCLR_ControlDarkSelectPopupTextDisabled = 713,
    IMCLR_ControlDarkSelectTextHighlighted = 714,
    IMCLR_ControlDarkSelectHighlightedTextPressed = 715,
    IMCLR_ControlDarkSelectHighlightHover = 716,
    IMCLR_ControlDarkSelectHighlightPressed = 717,
    IMCLR_ControlLightSelectBackgroundRest = 718,
    IMCLR_ControlLightSelectBackgroundHover = 719,
    IMCLR_ControlLightSelectBackgroundPressed = 720,
    IMCLR_ControlLightSelectBackgroundDisabled = 721,
    IMCLR_ControlLightSelectBorderRest = 722,
    IMCLR_ControlLightSelectBorderHover = 723,
    IMCLR_ControlLightSelectBorderPressed = 724,
    IMCLR_ControlLightSelectBorderDisabled = 725,
    IMCLR_ControlLightSelectTextRest = 726,
    IMCLR_ControlLightSelectTextHover = 727,
    IMCLR_ControlLightSelectTextPressed = 728,
    IMCLR_ControlLightSelectTextDisabled = 729,
    IMCLR_ControlLightSelectGlyphRest = 730,
    IMCLR_ControlLightSelectGlyphDisabled = 731,
    IMCLR_ControlLightSelectPopupBackgroundHover = 732,
    IMCLR_ControlLightSelectPopupBackgroundDisabled = 733,
    IMCLR_ControlLightSelectPopupTextRest = 734,
    IMCLR_ControlLightSelectPopupBorder = 735,
    IMCLR_ControlLightSelectPopupBackgroundRest = 736,
    IMCLR_ControlLightSelectPopupBackgroundPressed = 737,
    IMCLR_ControlLightSelectPopupTextHover = 738,
    IMCLR_ControlLightSelectPopupTextPressed = 739,
    IMCLR_ControlLightSelectPopupTextSelected = 740,
    IMCLR_ControlLightSelectPopupTextDisabled = 741,
    IMCLR_ControlLightSelectTextHighlighted = 742,
    IMCLR_ControlLightSelectHighlightedTextPressed = 743,
    IMCLR_ControlLightSelectHighlightPressed = 744,
    IMCLR_ControlLightSelectHighlightHover = 745,
    IMCLR_ControlScrollbarPanningIndicatorBackground = 746,
    IMCLR_ControlScrollbarPanningIndicatorBorder = 747,
    IMCLR_ControlScrollbarBackground = 748,
    IMCLR_ControlScrollbarButtonBackgroundRest = 749,
    IMCLR_ControlScrollbarButtonBackgroundHover = 750,
    IMCLR_ControlScrollbarButtonBackgroundPressed = 751,
    IMCLR_ControlScrollbarButtonForegroundRest = 752,
    IMCLR_ControlScrollbarButtonForegroundHover = 753,
    IMCLR_ControlScrollbarButtonForegroundPressed = 754,
    IMCLR_ControlScrollbarButtonBorderRest = 755,
    IMCLR_ControlScrollbarButtonBorderHover = 756,
    IMCLR_ControlScrollbarButtonBorderPressed = 757,
    IMCLR_ControlScrollbarThumbBackgroundRest = 758,
    IMCLR_ControlScrollbarThumbBackgroundHover = 759,
    IMCLR_ControlScrollbarThumbBackgroundPressed = 760,
    IMCLR_ControlScrollbarThumbBorderRest = 761,
    IMCLR_ControlScrollbarThumbBorderHover = 762,
    IMCLR_ControlScrollbarThumbBorderPressed = 763,
    IMCLR_ControlScrollbarTrackBorder = 764,
    IMCLR_ControlLightPanningIndicator = 765,
    IMCLR_ControlLightScrollbarTrack = 766,
    IMCLR_ControlLightScrollbarButtonPressed = 767,
    IMCLR_ControlLightScrollbarButtonHover = 768,
    IMCLR_ControlLightScrollbarButtonRest = 769,
    IMCLR_ControlLightScrollbarButtonGlyphPressed = 770,
    IMCLR_ControlLightScrollbarButtonGlyphRest = 771,
    IMCLR_ControlLightScrollbarButtonGlyphHover = 772,
    IMCLR_ControlLightScrollbarThumbPressed = 773,
    IMCLR_ControlLightScrollbarThumbHover = 774,
    IMCLR_ControlLightScrollbarThumbRest = 775,
    IMCLR_ControlDarkPanningIndicator = 776,
    IMCLR_ControlDarkScrollbarTrack = 777,
    IMCLR_ControlDarkScrollbarButtonPressed = 778,
    IMCLR_ControlDarkScrollbarButtonHover = 779,
    IMCLR_ControlDarkScrollbarButtonRest = 780,
    IMCLR_ControlDarkScrollbarButtonGlyphPressed = 781,
    IMCLR_ControlDarkScrollbarButtonGlyphRest = 782,
    IMCLR_ControlDarkScrollbarButtonGlyphHover = 783,
    IMCLR_ControlDarkScrollbarThumbPressed = 784,
    IMCLR_ControlDarkScrollbarThumbHover = 785,
    IMCLR_ControlDarkScrollbarThumbRest = 786,
    IMCLR_ControlDarkRichEditBackgroundRest = 787,
    IMCLR_ControlDarkRichEditBackgroundHover = 788,
    IMCLR_ControlDarkRichEditBackgroundFocus = 789,
    IMCLR_ControlDarkRichEditBackgroundPressed = 790,
    IMCLR_ControlDarkRichEditBackgroundDisabled = 791,
    IMCLR_ControlDarkRichEditBorderRest = 792,
    IMCLR_ControlDarkRichEditBorderHover = 793,
    IMCLR_ControlDarkRichEditBorderFocus = 794,
    IMCLR_ControlDarkRichEditBorderPressed = 795,
    IMCLR_ControlDarkRichEditBorderDisabled = 796,
    IMCLR_ControlDarkRichEditTextRest = 797,
    IMCLR_ControlDarkRichEditTextHover = 798,
    IMCLR_ControlDarkRichEditTextFocus = 799,
    IMCLR_ControlDarkRichEditTextDisabled = 800,
    IMCLR_ControlDarkRichEditTextHighlighted = 801,
    IMCLR_ControlDarkRichEditTextHelper = 802,
    IMCLR_ControlDarkRichEditPromptTextRest = 803,
    IMCLR_ControlDarkRichEditPromptTextFocus = 804,
    IMCLR_ControlDarkRichEditPromptTextDisabled = 805,
    IMCLR_ControlDarkRichEditButtonBackgroundRest = 806,
    IMCLR_ControlDarkRichEditButtonBackgroundHover = 807,
    IMCLR_ControlDarkRichEditButtonBackgroundPressed = 808,
    IMCLR_ControlDarkRichEditButtonGlyphRest = 809,
    IMCLR_ControlDarkRichEditButtonGlyphHover = 810,
    IMCLR_ControlDarkRichEditButtonGlyphPressed = 811,
    IMCLR_ControlDarkRichEditStartPromptTextRest = 812,
    IMCLR_ControlDarkRichEditStartPromptBackgroundRest = 813,
    IMCLR_ControlDarkRichEditStartPromptBackgroundHover = 814,
    IMCLR_ControlDarkRichEditStartPromptButtonGlyphHover = 815,
    IMCLR_ControlLightRichEditBackgroundRest = 816,
    IMCLR_ControlLightRichEditBackgroundHover = 817,
    IMCLR_ControlLightRichEditBackgroundFocus = 818,
    IMCLR_ControlLightRichEditBackgroundPressed = 819,
    IMCLR_ControlLightRichEditBackgroundDisabled = 820,
    IMCLR_ControlLightRichEditBorderRest = 821,
    IMCLR_ControlLightRichEditBorderHover = 822,
    IMCLR_ControlLightRichEditBorderFocus = 823,
    IMCLR_ControlLightRichEditBorderPressed = 824,
    IMCLR_ControlLightRichEditBorderDisabled = 825,
    IMCLR_ControlLightRichEditTextRest = 826,
    IMCLR_ControlLightRichEditTextHover = 827,
    IMCLR_ControlLightRichEditTextFocus = 828,
    IMCLR_ControlLightRichEditTextDisabled = 829,
    IMCLR_ControlLightRichEditTextHighlighted = 830,
    IMCLR_ControlLightRichEditTextHelper = 831,
    IMCLR_ControlLightRichEditPromptTextRest = 832,
    IMCLR_ControlLightRichEditPromptTextFocus = 833,
    IMCLR_ControlLightRichEditPromptTextDisabled = 834,
    IMCLR_ControlLightRichEditButtonBackgroundRest = 835,
    IMCLR_ControlLightRichEditButtonBackgroundHover = 836,
    IMCLR_ControlLightRichEditButtonBackgroundPressed = 837,
    IMCLR_ControlLightRichEditButtonGlyphRest = 838,
    IMCLR_ControlLightRichEditButtonGlyphHover = 839,
    IMCLR_ControlLightRichEditButtonGlyphPressed = 840,
    IMCLR_ControlTooltipBackground = 841,
    IMCLR_ControlTooltipDomainText = 842,
    IMCLR_ControlTooltipText = 843,
    IMCLR_ControlSliderTooltipText = 844,
    IMCLR_ControlTooltipBorder = 845,
    IMCLR_ControlDarkProgressBackground = 846,
    IMCLR_ControlLightProgressBackground = 847,
    IMCLR_ControlProgressBorder = 848,
    IMCLR_ControlLightToggleLabelDisabled = 849,
    IMCLR_ControlDarkToggleOnOffTextEnabled = 850,
    IMCLR_ControlLightToggleOnOffTextDisabled = 851,
    IMCLR_ControlLightToggleOnOffTextEnabled = 852,
    IMCLR_ControlLightToggleThumbDisabled = 853,
    IMCLR_ControlLightToggleTrackBackgroundDisabled = 854,
    IMCLR_ControlLightToggleTrackBorderDisabled = 855,
    IMCLR_ControlLightToggleTrackFillDisabled = 856,
    IMCLR_ControlDarkToggleTrackGutterDisabled = 857,
    IMCLR_ControlLightToggleTrackGutterDisabled = 858,
    IMCLR_ControlDarkSliderThumbDisabled = 859,
    IMCLR_ControlDarkSliderThumbHover = 860,
    IMCLR_ControlDarkSliderThumbPressed = 861,
    IMCLR_ControlDarkSliderThumbRest = 862,
    IMCLR_ControlLightSliderThumbDisabled = 863,
    IMCLR_ControlLightSliderThumbHover = 864,
    IMCLR_ControlLightSliderThumbPressed = 865,
    IMCLR_ControlLightSliderThumbRest = 866,
    IMCLR_ControlLightSliderBorder = 867,
    IMCLR_ControlDarkSliderTickMark = 868,
    IMCLR_ControlLightSliderTickMark = 869,
    IMCLR_ControlDarkSliderTrackBackgroundDisabled = 870,
    IMCLR_ControlDarkSliderTrackBackgroundHover = 871,
    IMCLR_ControlDarkSliderTrackBackgroundPressed = 872,
    IMCLR_ControlDarkSliderTrackBackgroundRest = 873,
    IMCLR_ControlLightSliderTrackBackgroundDisabled = 874,
    IMCLR_ControlLightSliderTrackBackgroundHover = 875,
    IMCLR_ControlLightSliderTrackBackgroundPressed = 876,
    IMCLR_ControlLightSliderTrackBackgroundRest = 877,
    IMCLR_ControlDarkSliderTrackBufferingDisabled = 878,
    IMCLR_ControlDarkSliderTrackBufferingHover = 879,
    IMCLR_ControlDarkSliderTrackBufferingPressed = 880,
    IMCLR_ControlDarkSliderTrackBufferingRest = 881,
    IMCLR_ControlLightSliderTrackBufferingDisabled = 882,
    IMCLR_ControlLightSliderTrackBufferingHover = 883,
    IMCLR_ControlLightSliderTrackBufferingPressed = 884,
    IMCLR_ControlLightSliderTrackBufferingRest = 885,
    IMCLR_ControlDarkSliderTrackFillDisabled = 886,
    IMCLR_ControlLightSliderTrackFillDisabled = 887,
    IMCLR_ControlLightSliderThumbBorder = 888,
    IMCLR_ControlDarkSliderThumbBorder = 889,
    IMCLR_ControlLightSliderThumbBorderDisabled = 890,
    IMCLR_ControlLightSliderThumbBorderHover = 891,
    IMCLR_ControlLightSliderThumbBorderPressed = 892,
    IMCLR_ControlLightSliderThumbBorderRest = 893,
    IMCLR_ControlDarkSliderThumbBorderDisabled = 894,
    IMCLR_ControlDarkSliderThumbBorderHover = 895,
    IMCLR_ControlDarkSliderThumbBorderPressed = 896,
    IMCLR_ControlDarkSliderThumbBorderRest = 897,
    IMCLR_ControlDarkToggleLabelEnabled = 898,
    IMCLR_ControlLightToggleLabelEnabled = 899,
    IMCLR_ControlDarkToggleThumbEnabled = 900,
    IMCLR_ControlLightToggleThumbEnabled = 901,
    IMCLR_ControlLightToggleTrackBackgroundEnabled = 902,
    IMCLR_ControlLightToggleTrackBorderEnabled = 903,
    IMCLR_ControlAppLightToggleTrackFillEnabled = 904,
    IMCLR_ControlDarkToggleTrackGutterEnabled = 905,
    IMCLR_ControlLightToggleTrackGutterEnabled = 906,
    IMCLR_ControlLightToggleTrackBackgroundHover = 907,
    IMCLR_ControlLightToggleTrackBackgroundRest = 908,
    IMCLR_ControlLightToggleTrackBackgroundPressed = 909,
    IMCLR_ControlDarkToggleTrackBackgroundHover = 910,
    IMCLR_ControlDarkToggleTrackBackgroundRest = 911,
    IMCLR_ControlDarkToggleTrackBackgroundPressed = 912,
    IMCLR_ControlDefaultFocusRectDark = 913,
    IMCLR_ControlDefaultFocusRectLight = 914,
    IMCLR_ControlContextMenuBackgroundRest = 915,
    IMCLR_ControlContextMenuBackgroundHover = 916,
    IMCLR_ControlContextMenuBackgroundPressed = 917,
    IMCLR_ControlContextMenuTextRest = 918,
    IMCLR_ControlContextMenuTextHover = 919,
    IMCLR_ControlContextMenuTextPressed = 920,
    IMCLR_ControlContextMenuSeparator = 921,
    IMCLR_ControlAppDefaultDarkButtonBackgroundRest = 922,
    IMCLR_ControlAppDefaultDarkButtonBackgroundHover = 923,
    IMCLR_ControlAppDefaultDarkButtonBorderRest = 924,
    IMCLR_ControlAppDefaultDarkButtonBorderHover = 925,
    IMCLR_ControlDarkAppButtonTextRest = 926,
    IMCLR_ControlDarkAppButtonTextHover = 927,
    IMCLR_ControlDarkAppButtonTextPressed = 928,
    IMCLR_ControlDarkAppButtonTextDisabled = 929,
    IMCLR_ControlDarkAppButtonBackgroundRest = 930,
    IMCLR_ControlDarkAppButtonBackgroundHover = 931,
    IMCLR_ControlDarkAppButtonBackgroundPressed = 932,
    IMCLR_ControlDarkAppButtonBackgroundDisabled = 933,
    IMCLR_ControlDarkAppButtonBorderRest = 934,
    IMCLR_ControlDarkAppButtonBorderHover = 935,
    IMCLR_ControlDarkAppButtonBorderPressed = 936,
    IMCLR_ControlDarkAppButtonBorderDisabled = 937,
    IMCLR_ControlLightAppButtonTextRest = 938,
    IMCLR_ControlLightAppButtonTextHover = 939,
    IMCLR_ControlLightAppButtonTextPressed = 940,
    IMCLR_ControlLightAppButtonTextDisabled = 941,
    IMCLR_ControlLightAppButtonBackgroundRest = 942,
    IMCLR_ControlLightAppButtonBackgroundHover = 943,
    IMCLR_ControlLightAppButtonBackgroundPressed = 944,
    IMCLR_ControlLightAppButtonBackgroundDisabled = 945,
    IMCLR_ControlLightAppButtonBorderRest = 946,
    IMCLR_ControlLightAppButtonBorderHover = 947,
    IMCLR_ControlLightAppButtonBorderPressed = 948,
    IMCLR_ControlLightAppButtonBorderDisabled = 949,
    IMCLR_ControlLightRadioButtonLabelRest = 950,
    IMCLR_ControlLightRadioButtonLabelDisabled = 951,
    IMCLR_ControlLightRadioButtonUnselectedBorderRest = 952,
    IMCLR_ControlLightRadioButtonUnselectedBorderDown = 953,
    IMCLR_ControlLightRadioButtonUnselectedBorderUp = 954,
    IMCLR_ControlLightRadioButtonUnselectedBorderHover = 955,
    IMCLR_ControlLightRadioButtonUnselectedBorderDisabled = 956,
    IMCLR_ControlLightRadioButtonUnselectedBackgroundRest = 957,
    IMCLR_ControlLightRadioButtonUnselectedBackgroundDown = 958,
    IMCLR_ControlLightRadioButtonUnselectedBackgroundUp = 959,
    IMCLR_ControlLightRadioButtonUnselectedBackgroundHover = 960,
    IMCLR_ControlLightRadioButtonUnselectedBackgroundDisabled = 961,
    IMCLR_ControlLightRadioButtonUnselectedGlyphRest = 962,
    IMCLR_ControlLightRadioButtonUnselectedGlyphDown = 963,
    IMCLR_ControlLightRadioButtonUnselectedGlyphUp = 964,
    IMCLR_ControlLightRadioButtonUnselectedGlyphHover = 965,
    IMCLR_ControlLightRadioButtonUnselectedGlyphDisabled = 966,
    IMCLR_ControlLightRadioButtonSelectedBorderRest = 967,
    IMCLR_ControlLightRadioButtonSelectedBorderDown = 968,
    IMCLR_ControlLightRadioButtonSelectedBorderUp = 969,
    IMCLR_ControlLightRadioButtonSelectedBorderHover = 970,
    IMCLR_ControlLightRadioButtonSelectedBorderDisabled = 971,
    IMCLR_ControlLightRadioButtonSelectedBackgroundRest = 972,
    IMCLR_ControlLightRadioButtonSelectedBackgroundDown = 973,
    IMCLR_ControlLightRadioButtonSelectedBackgroundUp = 974,
    IMCLR_ControlLightRadioButtonSelectedBackgroundHover = 975,
    IMCLR_ControlLightRadioButtonSelectedBackgroundDisabled = 976,
    IMCLR_ControlLightRadioButtonSelectedGlyphRest = 977,
    IMCLR_ControlLightRadioButtonSelectedGlyphDown = 978,
    IMCLR_ControlLightRadioButtonSelectedGlyphUp = 979,
    IMCLR_ControlLightRadioButtonSelectedGlyphHover = 980,
    IMCLR_ControlLightRadioButtonSelectedGlyphDisabled = 981,
    IMCLR_ControlSkydriveCommerceBackground = 982,
    IMCLR_ControlSkydriveCommerceDefaultButtonBackground = 983,
    IMCLR_BootBackground = 984,
    IMCLR_BootTitleText = 985,
    IMCLR_BootPrimaryText = 986,
    IMCLR_BootSecondaryText = 987,
    IMCLR_BootConfirmationButton = 988,
    IMCLR_BootMenuButtonGlyphBackground = 989,
    IMCLR_BootMenuButtonMouseHover = 990,
    IMCLR_BootMenuButtonPressedHighlight = 991,
    IMCLR_BootMenuButtonPressedText = 992,
    IMCLR_BootMenuButtonFocusRect = 993,
    IMCLR_BootProgressText = 994,
    IMCLR_BootErrorText = 995,
    IMCLR_BootEditBackground = 996,
    IMCLR_BootTextLinkRest = 997,
    IMCLR_BootTextLinkHover = 998,
    IMCLR_BootTextLinkPressed = 999,
    IMCLR_BootConfirmationButtonBackgroundRest = 1000,
    IMCLR_BootConfirmationButtonBackgroundHover = 1001,
    IMCLR_BootConfirmationButtonBackgroundPressed = 1002,
    IMCLR_BootConfirmationButtonBackgroundDisabled = 1003,
    IMCLR_BootConfirmationButtonTextRest = 1004,
    IMCLR_BootConfirmationButtonTextHover = 1005,
    IMCLR_BootConfirmationButtonTextPressed = 1006,
    IMCLR_BootConfirmationButtonTextDisabled = 1007,
    IMCLR_BootConfirmationButtonBorderRest = 1008,
    IMCLR_BootConfirmationButtonBorderHover = 1009,
    IMCLR_BootConfirmationButtonBorderPressed = 1010,
    IMCLR_BootConfirmationButtonBorderDisabled = 1011,
    IMCLR_BootDefaultConfirmationButtonBackgroundRest = 1012,
    IMCLR_BootDefaultConfirmationButtonBackgroundHover = 1013,
    IMCLR_BootDefaultConfirmationButtonBackgroundPressed = 1014,
    IMCLR_BootDefaultConfirmationButtonBackgroundDisabled = 1015,
    IMCLR_BootDefaultConfirmationButtonTextRest = 1016,
    IMCLR_BootDefaultConfirmationButtonTextHover = 1017,
    IMCLR_BootDefaultConfirmationButtonTextPressed = 1018,
    IMCLR_BootDefaultConfirmationButtonTextDisabled = 1019,
    IMCLR_BootDefaultConfirmationButtonBorderRest = 1020,
    IMCLR_BootDefaultConfirmationButtonBorderHover = 1021,
    IMCLR_BootDefaultConfirmationButtonBorderPressed = 1022,
    IMCLR_BootDefaultConfirmationButtonBorderDisabled = 1023,
    IMCLR_BootEditBackgroundRest = 1024,
    IMCLR_BootEditBackgroundHover = 1025,
    IMCLR_BootEditBackgroundActive = 1026,
    IMCLR_BootEditBackgroundDisabled = 1027,
    IMCLR_BootEditBorderDisabled = 1028,
    IMCLR_StartDarkTileInstallProgressTrack = 1029,
    IMCLR_StartDarkTileInstallProgressFill = 1030,
    IMCLR_StartLightTileInstallProgressTrack = 1031,
    IMCLR_StartLightTileInstallProgressFill = 1032,
    IMCLR_FilesAppBackground = 1033,
    IMCLR_FilesAppHoverBackground = 1034,
    IMCLR_FilesAppPickerBackground = 1035,
    IMCLR_FilesAppPickerHoverBackground = 1036,
    IMCLR_FilesAppPickerSelectionHoverBackground = 1037,
    IMCLR_FilesAppSelectionBackground = 1038,
    IMCLR_FilesAppPhotosAppSelectionBackground = 1039,
    IMCLR_FilesAppItemBackground = 1040,
    IMCLR_FilesAppItemSecondaryText = 1041,
    IMCLR_FilesAppFolderPrimaryText = 1042,
    IMCLR_FilesAppSkyDriveFolderBackground = 1043,
    IMCLR_FilesAppSkyDriveFolderSecondaryText = 1044,
    IMCLR_FilesAppSkyDriveFolderHoverSecondaryText = 1045,
    IMCLR_FilesAppSkyDriveFolderSelectionSecondaryText = 1046,
    IMCLR_FilesAppSkyDriveFolderErrorText = 1047,
    IMCLR_FilesAppSkyDriveEmphasisText = 1048,
    IMCLR_FilesAppLocalFolderBackground = 1049,
    IMCLR_FilesAppLocalFolderSecondaryText = 1050,
    IMCLR_FilesAppLocalFolderHoverSecondaryText = 1051,
    IMCLR_FilesAppLocalFolderSelectionSecondaryText = 1052,
    IMCLR_FilesAppLocalFolderErrorText = 1053,
    IMCLR_FilesAppFolderHighContrastBorder = 1054,
    IMCLR_FilesAppThumbnailHighContrastBorder = 1055,
    IMCLR_FilesAppPickerSecondaryText = 1056,
    IMCLR_FilesAppPickerHoverSecondaryText = 1057,
    IMCLR_FilesAppPickerLocalFolderHoverBackground = 1058,
    IMCLR_FilesAppPickerSkyDriveFolderHoverBackground = 1059,
    IMCLR_FilesAppPickerThumbnailPlaceholder = 1060,
    IMCLR_FilesAppPickerDocumentThumbnailBackground = 1061,
    IMCLR_FilesAppCommandRowRest = 1062,
    IMCLR_FilesAppCommandRowHover = 1063,
    IMCLR_FilesAppCommandRowPressed = 1064,
    IMCLR_FilesAppCommandRowDisabled = 1065,
    IMCLR_FilesAppCommandRowHighlight = 1066,
    IMCLR_FilesAppPickerPaneBackground = 1067,
    IMCLR_FilesAppPickerPaneHoverBackground = 1068,
    IMCLR_FilesAppAppBarHighContrastBorder = 1069,
    IMCLR_FilesAppProgressTrackFill = 1070,
    IMCLR_FilesAppTabTextRest = 1071,
    IMCLR_FilesAppTabTextHover = 1072,
    IMCLR_FilesAppTabTextPressed = 1073,
    IMCLR_FilesAppTabTextDisabled = 1074,
    IMCLR_FilesAppSkyDriveUnavailableText = 1075,
    IMCLR_FilesAppPickerUnavailableText = 1076,
    IMCLR_FilesAppLightErrorText = 1077,
    IMCLR_FilesAppPickerErrorText = 1078,
    IMCLR_FilesAppLightLinkText = 1079,
    IMCLR_FilesAppLightLinkTextHover = 1080,
    IMCLR_FilesAppLightLinkTextPressed = 1081,
    IMCLR_FilesAppLightLinkTextDisabled = 1082,
    IMCLR_FilesAppDarkLinkText = 1083,
    IMCLR_FilesAppDarkLinkTextHover = 1084,
    IMCLR_FilesAppDarkLinkTextPressed = 1085,
    IMCLR_FilesAppDarkLinkTextDisabled = 1086,
    IMCLR_FilesAppPickerButtonTextDisabled = 1087,
    IMCLR_FilesAppPickerButtonBackgroundDisabled = 1088,
    IMCLR_FilesAppPickerButtonBorderDisabled = 1089,
    IMCLR_FilesAppDefaultButtonTextRest = 1090,
    IMCLR_FilesAppDefaultButtonTextHover = 1091,
    IMCLR_FilesAppDefaultButtonTextPressed = 1092,
    IMCLR_FilesAppDefaultButtonBackgroundRest = 1093,
    IMCLR_FilesAppDefaultButtonBackgroundHover = 1094,
    IMCLR_FilesAppDefaultButtonBackgroundPressed = 1095,
    IMCLR_FilesAppDefaultButtonBorderRest = 1096,
    IMCLR_FilesAppDefaultButtonBorderHover = 1097,
    IMCLR_FilesAppDefaultButtonBorderPressed = 1098,
    IMCLR_FilesAppPickerDefaultButtonTextRest = 1099,
    IMCLR_FilesAppPickerDefaultButtonTextHover = 1100,
    IMCLR_FilesAppPickerDefaultButtonTextPressed = 1101,
    IMCLR_FilesAppPickerDefaultButtonBackgroundRest = 1102,
    IMCLR_FilesAppPickerDefaultButtonBackgroundHover = 1103,
    IMCLR_FilesAppPickerDefaultButtonBackgroundPressed = 1104,
    IMCLR_FilesAppPickerDefaultButtonBorderRest = 1105,
    IMCLR_FilesAppPickerDefaultButtonBorderHover = 1106,
    IMCLR_FilesAppPickerDefaultButtonBorderPressed = 1107,
    IMCLR_FilesAppTouchSelectHighlightSelected = 1108,
    IMCLR_FilesAppTouchSelectHighlightSelectedText = 1109,
    IMCLR_FilesAppTouchSelectHighlightSelectedHover = 1110,
    IMCLR_FilesAppTouchSelectHighlightSelectedHoverText = 1111,
    IMCLR_HardwareTitleBarBackground = 1112,
    IMCLR_HardwareTitleBarMinimizeButtonHover = 1113,
    IMCLR_HardwareTitleBarMinimizeButtonPressed = 1114,
    IMCLR_HardwareTitleBarCloseButtonHover = 1115,
    IMCLR_HardwareTitleBarCloseButtonPressed = 1116,
    IMCLR_HardwareDarkKeyboardBackground = 1117,
    IMCLR_HardwareDarkKeyboardKeyPrimaryTextDisabled = 1118,
    IMCLR_HardwareDarkKeyboardKeyBackgroundRest = 1119,
    IMCLR_HardwareDarkKeyboardKeyPrimaryTextRest = 1120,
    IMCLR_HardwareDarkKeyboardKeyPrimaryTextPressed = 1121,
    IMCLR_HardwareDarkKeyboardKeyBackgroundHover = 1122,
    IMCLR_HardwareDarkKeyboardKeyPrimaryTextHover = 1123,
    IMCLR_HardwareDarkKeyboardKeyDefaultBackgroundRest = 1124,
    IMCLR_HardwareDarkKeyboardKeyDefaultPrimaryTextRest = 1125,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextChildKeyRest = 1126,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextChildKeyHover = 1127,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextChildKeyDisabled = 1128,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextModifierKeyRest = 1129,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextModifierKeyDisabled = 1130,
    IMCLR_HardwareDarkKeyboardKeySecondaryTextModifierKeyHover = 1131,
    IMCLR_HardwareDarkKeyboardThumbCentralNumberKeyBackground = 1132,
    IMCLR_HardwareDarkKeyboardThumbCentralNumberKeyText = 1133,
    IMCLR_HardwareDarkKeyboardNumberKeyBackground = 1134,
    IMCLR_HardwareDarkKeyboardNumberKeyText = 1135,
    IMCLR_HardwareDarkKeyboardFunctionKeyBackground = 1136,
    IMCLR_HardwareDarkKeyboardFunctionKeyText = 1137,
    IMCLR_HardwareDarkKeyboardFunctionKeyTextDisabled = 1138,
    IMCLR_HardwareDarkKeyboardChildPanelBackground = 1139,
    IMCLR_HardwareDarkKeyboardChildPanelKeyBackground = 1140,
    IMCLR_HardwareDarkKeyboardChildKeyKeyText = 1141,
    IMCLR_HardwareDarkKeyboardThumbResizeGripperBackgroundRest = 1142,
    IMCLR_HardwareDarkKeyboardSpaceGripper = 1143,
    IMCLR_HardwareDarkCandidateControlBackgroundRest = 1144,
    IMCLR_HardwareDarkCandidateControlTextRest = 1145,
    IMCLR_HardwareDarkCandidateControlTextSelect = 1146,
    IMCLR_HardwareDarkCandidateControlTextPressed = 1147,
    IMCLR_HardwareDarkCandidateControlBackgroundHover = 1148,
    IMCLR_HardwareDarkCandidateControlTextHover = 1149,
    IMCLR_HardwareDarkCandidateControlSecondaryTextRest = 1150,
    IMCLR_HardwareDarkCandidateControlSecondaryTextPressed = 1151,
    IMCLR_HardwareDarkCandidateControlSecondaryTextSelect = 1152,
    IMCLR_HardwareDarkCandidateControlSecondaryTextHover = 1153,
    IMCLR_HardwareDarkCandidateControlHighlightedSecondaryTextPressed = 1154,
    IMCLR_HardwareDarkCandidateControlSecondaryTextHighlighted = 1155,
    IMCLR_MultitaskingMTVScrollViewerOutline = 1156,
    IMCLR_MultitaskingMTVClosePlateRest = 1157,
    IMCLR_MultitaskingMTVClosePlateHotTrack = 1158,
    IMCLR_MultitaskingMTVClosePlatePressed = 1159,
    IMCLR_MultitaskingMTVCloseOutlineRest = 1160,
    IMCLR_MultitaskingMTVCloseOutlineHotTrack = 1161,
    IMCLR_MultitaskingMTVCloseOutlinePressed = 1162,
    IMCLR_MultitaskingMTVVirtualDesktopBarOutline = 1163,
    IMCLR_MultitaskingMTVNewDesktopOutlineRest = 1164,
    IMCLR_MultitaskingMTVNewDesktopOutlineHotTrack = 1165,
    IMCLR_MultitaskingMTVNewDesktopOutlinePressed = 1166,
    IMCLR_MultitaskingMTVScrollButtonOutlineRest = 1167,
    IMCLR_MultitaskingMTVScrollButtonOutlineHotTrack = 1168,
    IMCLR_MultitaskingMTVScrollButtonOutlinePressed = 1169,
    IMCLR_MultitaskingMTVScrollButtonOutlineDisabled = 1170,
    IMCLR_TabletModeDragJointDividerBackground = 1171,
    IMCLR_TabletModePPIJointDividerBackground = 1172,
    IMCLR_TabletModePPIJointDividerBackgroundNoSidebars = 1173,
    IMCLR_InputSwitchDarkButtonBackgroundHover = 1174,
    IMCLR_InputSwitchDarkButtonBackgroundPressed = 1175,
    IMCLR_InputSwitchDarkButtonTextHover = 1176,
    IMCLR_InputSwitchDarkButtonTextPressed = 1177,
    IMCLR_InputSwitchDarkButtonTextRest = 1178,
    IMCLR_InputSwitchDarkRadioButtonBackgroundDisabledSelected = 1179,
    IMCLR_InputSwitchDarkRadioButtonBorder = 1180,
    IMCLR_InputSwitchDarkRadioButtonTextDisabledSelected = 1181,
    IMCLR_InputSwitchDarkBackground = 1182,
    IMCLR_InputSwitchDarkDisabledText = 1183,
    IMCLR_InputSwitchDarkSelectionPrimaryText = 1184,
    IMCLR_InputSwitchDarkWindowBorder = 1185,
    IMCLR_InputSwitchDarkButtonSecondaryTextHover = 1186,
    IMCLR_InputSwitchDarkButtonSecondaryTextPressed = 1187,
    IMCLR_InputSwitchDarkButtonSecondaryTextRest = 1188,
    IMCLR_InputSwitchDarkSeparatorLine = 1189,
    IMCLR_InputSwitchLightButtonBackgroundHover = 1190,
    IMCLR_InputSwitchLightButtonBackgroundPressed = 1191,
    IMCLR_InputSwitchLightButtonTextHover = 1192,
    IMCLR_InputSwitchLightButtonTextPressed = 1193,
    IMCLR_InputSwitchLightButtonTextRest = 1194,
    IMCLR_InputSwitchLightRadioButtonBackgroundDisabledSelected = 1195,
    IMCLR_InputSwitchLightRadioButtonBorder = 1196,
    IMCLR_InputSwitchLightRadioButtonTextDisabledSelected = 1197,
    IMCLR_InputSwitchLightBackground = 1198,
    IMCLR_InputSwitchLightDisabledText = 1199,
    IMCLR_InputSwitchLightSelectionPrimaryText = 1200,
    IMCLR_InputSwitchLightWindowBorder = 1201,
    IMCLR_InputSwitchLightButtonSecondaryTextHover = 1202,
    IMCLR_InputSwitchLightButtonSecondaryTextPressed = 1203,
    IMCLR_InputSwitchLightButtonSecondaryTextRest = 1204,
    IMCLR_InputSwitchLightSeparatorLine = 1205,
    IMCLR_InputSwitchColorDarkButtonBackgroundHover = 1206,
    IMCLR_InputSwitchColorDarkButtonBackgroundPressed = 1207,
    IMCLR_InputSwitchColorDarkButtonTextHover = 1208,
    IMCLR_InputSwitchColorDarkButtonTextPressed = 1209,
    IMCLR_InputSwitchColorDarkButtonTextRest = 1210,
    IMCLR_InputSwitchColorDarkRadioButtonBackgroundDisabledSelected = 1211,
    IMCLR_InputSwitchColorDarkRadioButtonBackgroundSelected = 1212,
    IMCLR_InputSwitchColorDarkRadioButtonBorder = 1213,
    IMCLR_InputSwitchColorDarkRadioButtonTextDisabledSelected = 1214,
    IMCLR_InputSwitchColorDarkDisabledText = 1215,
    IMCLR_InputSwitchColorDarkSelectionPrimaryText = 1216,
    IMCLR_InputSwitchColorDarkWindowBorder = 1217,
    IMCLR_InputSwitchColorDarkButtonSecondaryTextHover = 1218,
    IMCLR_InputSwitchColorDarkButtonSecondaryTextPressed = 1219,
    IMCLR_InputSwitchColorDarkButtonSecondaryTextRest = 1220,
    IMCLR_InputSwitchColorDarkSeparatorLine = 1221,
    IMCLR_TYPE_COUNT = 1222
};

typedef enum IMMERSIVE_HC_CACHE_MODE {
    IHCM_USE_CACHED_VALUE = 0,
    IHCM_REFRESH = 1
};

typedef enum IMMERSIVE_HOT_KEY_ID {
    IHKID_DESKTOP = 0,
    IHKID_MINIMIZEALL = 1,
    IHKID_SHAKE = 2,
    IHKID_PRIORPEARL = 3,
    IHKID_NEXTPEARL = 4,
    IHKID_SETTINGSCHARM = 5,
    IHKID_SETTINGSCHARM_ALTERNATE = 6,
    IHKID_CHARMBAR = 7,
    IHKID_APPBAR = 8,
    IHKID_SETFOCUS_CYCLENEXT = 9,
    IHKID_SETFOCUS_CYCLEPREV = 10,
    IHKID_ALLUPVIEW = 11,
    IHKID_DEVICESCHARM = 12,
    IHKID_SCREENSHOT_KEYBOARD = 13,
    IHKID_SCREENSHOT_FKEY = 14,
    IHKID_LAUNCHERTIPMENU = 15,
    IHKID_CHARMBAR_ALTERNATE = 16,
    IHKID_APPBAR_ALTERNATE = 17,
    IHKID_DEVICESCHARM_ALTERNATE = 18,
    IHKID_DEVICESCHARM_PROJECT_ALTERNATE = 19,
    IHKID_REARRANGE_CYCLENEXT_ALTERNATE = 20,
    IHKID_REARRANGE_CYCLEPREV_ALTERNATE = 21,
    IHKID_WIN_ARROW_LEFT = 22,
    IHKID_WIN_ARROW_LEFT_SHIFT = 23,
    IHKID_WIN_ARROW_RIGHT = 24,
    IHKID_WIN_ARROW_RIGHT_SHIFT = 25,
    IHKID_WIN_ARROW_UP = 26,
    IHKID_WIN_ARROW_DOWN = 27,
    IHKID_LAUNCH_FEEDBACKAPP = 28,
    IHKID_INKWORKSPACE = 29,
    UNUSED_WAS_IHKID_FILES_APP = 30,
    IHKID_SEARCH_TEXT_APP = 31,
    IHKID_KEYBOARD_SEARCH_TEXT_APP = 32,
    IHKID_SEARCH_VOICE_APP = 33,
    IHKID_PTP_TAP_SEARCH_TEXT_APP = 34,
    IHKID_NOTE = 35,
    IHKID_NOTESCREENSHOT = 36,
    IHKID_VIRTUAL_DESKTOPS_LEFT = 37,
    IHKID_VIRTUAL_DESKTOPS_RIGHT = 38,
    IHKID_VIRTUAL_DESKTOPS_ADD = 39,
    IHKID_VIRTUAL_DESKTOPS_REMOVE = 40,
    IHKID_ALTTAB = 41,
    IHKID_ALTTAB_REVERSE = 42,
    IHKID_WINALTTAB = 43,
    IHKID_WINALTTAB_REVERSE = 44,
    IHKID_ALTTAB_STICKY = 45,
    IHKID_ALTTAB_STICKY_REVERSE = 46,
    IHKID_TABLET_MODE_CONTROLLER_SWITCH = 47,
    IHKID_TABLET_MODE_CONTROLLER_PROMPT = 48,
    IHKID_GAME_GUIDE_OVERLAY = 49,
    IHKID_TOGGLE_GAME_RECORDING = 50,
    IHKID_GAME_RECORD_CLIP = 51,
    IHKID_CAPTURE_GAME_SCREENSHOT = 52,
    IHKID_TOGGLE_GAME_RECORDING_INDICATOR = 53,
    IHKID_TOGGLE_MICROPHONE_CAPTURE = 54,
    IHKID_TOGGLE_BROADCAST = 55,
    IHKID_TOGGLE_WEBCAMERA_CAPTURE = 56,
    IHKID_GAMEDVR_NEXUS = 57,
    IHKID_ALTESC = 58,
    IHKID_ALTESC_REVERSE = 59,
    IHKID_ALT_GAME_GUIDE_OVERLAY = 60,
    IHKID_ALT_TOGGLE_GAME_RECORDING = 61,
    IHKID_ALT_GAME_RECORD_CLIP = 62,
    IHKID_ALT_CAPTURE_GAME_SCREENSHOT = 63,
    IHKID_ALT_TOGGLE_GAME_RECORDING_INDICATOR = 64,
    IHKID_ALT_TOGGLE_MICROPHONE_CAPTURE = 65,
    IHKID_ALT_TOGGLE_BROADCAST = 66,
    IHKID_ALT_TOGGLE_WEBCAMERA_CAPTURE = 67,
    IHKID_ACTION_CENTER_TOAST_FOCUS = 68,
    IHKID_GLOBAL_BACK = 69,
    IHKID_PEN_LONG_PRESS = 70,
    IHKID_SOFT_LANDING_FOCUS = 71,
    IHKID_EDP_BADGE_FOCUS = 72,
    IHKID_FULLSCREEN = 73,
    IHKID_CLOCKFLYOUT = 74,
    IHKID_TOGGLE_HOLOGRAPHIC = 75,
    IHKID_INKWORKSPACE_SCREEN_CAPTURE = 76,
    IHKID_SWITCH_BACK = 77,
    IHKID_MAGNIFIER_SETTINGS = 78,
    IHKID_NARRATOR_SETTINGS = 79,
    IHKID_LAUNCH_QUICKASSIST = 80,
    IHKID_LAUNCH_LANGUAGECOMMUNITYAPP = 81,
    IHKID_SHOULDER_TAP_FOCUS = 82,
    IHKID_TOGGLE_COLOR_FILTERING = 83,
    IHKID_APPCOMMAND_VOICE_COMMAND = 84,
    IHKID_NEXT_TAB_WINDOW = 85,
    IHKID_PREVIOUS_TAB_WINDOW = 86,
    IHKID_NEW_TAB_PAGE = 87,
    IHKID_CLOSE_ACTIVE_TAB = 88,
    IHKID_SWITCH_TO_TAB_1 = 89,
    IHKID_SWITCH_TO_TAB_2 = 90,
    IHKID_SWITCH_TO_TAB_3 = 91,
    IHKID_SWITCH_TO_TAB_4 = 92,
    IHKID_SWITCH_TO_TAB_5 = 93,
    IHKID_SWITCH_TO_TAB_6 = 94,
    IHKID_SWITCH_TO_TAB_7 = 95,
    IHKID_SWITCH_TO_TAB_8 = 96,
    IHKID_SWITCH_TO_LAST_TAB = 97,
    IHKID_TOGGLE_SPEECH_RECOGNITION = 98,
    IHKID_TOGGLE_ON_SCREEN_KEYBOARD = 99,
    IHKID_TOGGLE_TITLE_BAR_FOCUS = 100,
    IHKID_TOGGLE_PWILO_UX = 101,
    IHKID_SNAP_DESKTOP = 102,
    IHKID_DUPLICATE_TAB = 103,
    IHKID_MAX = 104
};

typedef enum IMMERSIVE_MONITOR_MOVE_DIRECTION {
    IMMD_PREVIOUS = 0,
    IMMD_NEXT = 1
};

typedef enum IMM_APP_CHANGED {
    IAC_UNKNOWN = 0,
    IAC_STARTED = 1,
    IAC_FOREGROUND = 2,
    IAC_BACKGROUND = 3,
    IAC_SHOWN = 4,
    IAC_HIDDEN = 5,
    IAC_CLOSED = 6,
    IAC_WINDOWPRESENTATIONDECLINED = 7,
    IAC_PRESENTEDWINDOWCHANGED = 8,
    IAC_MOBODYENTERED = 9,
    IAC_MOBODYEXIT = 10,
    IAC_HASPACKAGEID = 11,
    IAC_FORGOTTEN = 12,
    IAC_INTERACTIVE = 13,
    IAC_NON_INTERACTIVE = 14,
    IAC_PENDINGPRESENTEDWINDOWCANCELED = 15,
    IAC_FORGOTTEN_FOR_TERMINATION = 16,
    IAC_MONITORCHANGED = 17
};

typedef enum IMM_SYSTEM_MODE {
    ISM_NONE = -1,
    ISM_DESKTOP = 0,
    ISM_IMMERSIVE = 1
};

typedef enum IMPORT_OBJECT_NAME_TYPE {
    IMPORT_OBJECT_ORDINAL = 0,
    IMPORT_OBJECT_NAME = 1,
    IMPORT_OBJECT_NAME_NO_PREFIX = 2,
    IMPORT_OBJECT_NAME_UNDECORATE = 3,
    IMPORT_OBJECT_NAME_EXPORTAS = 4
};

typedef enum IMPORT_OBJECT_TYPE {
    IMPORT_OBJECT_CODE = 0,
    IMPORT_OBJECT_DATA = 1,
    IMPORT_OBJECT_CONST = 2
};

typedef enum INERTIA_SOURCE {
    INERTIA_SOURCE_ANY = 0,
    INERTIA_SOURCE_TOUCH = 1,
    INERTIA_SOURCE_PEN = 2,
    INERTIA_SOURCE_TOUCHPAD = 3,
    INERTIA_SOURCE_MOUSEWHEEL = 4
};

typedef enum INFOBARPARTS {
    IBAR_BARBACKGROUND = 1,
    IBAR_BARFOREGROUND = 2
};

typedef enum INFOBARSTATES {
    IBARS_NORMAL = 1,
    IBARS_HOT = 2,
    IBARS_PRESSED = 3,
    IBARS_KEYFOCUSED = 4
};

typedef enum INFO_TYPE {
    GET_LONG_USERNAME = 0,
    GET_CLIENT_RANDOM = 1,
    GET_CS_AUTORECONNECT_INFO = 2,
    GET_SC_AUTORECONNECT_INFO = 3,
    SET_LOGON_ERROR_INFO = 4,
    QUERY_CONTINUE_ON_ARC_FAILURE = 5,
    SEND_STATUS_INFO = 6
};

typedef enum INK_FEEDBACK_COMMAND {
    IFC_NOP = 0,
    IFC_SUPERWET_INK_START = 1,
    IFC_SUPERWET_INK_STOP = 2,
    IFC_HIDE_INK_CURSOR_START = 3,
    IFC_HIDE_INK_CURSOR_STOP = 4,
    INK_FEEDBACK_COMMANDS_COUNT = 5
};

typedef enum INK_FEEDBACK_PEN_NIB_SHAPE {
    IFPNS_ROUND = 0,
    IFPNS_SQUARE = 1,
    INK_FEEDBACK_PEN_NIB_SHAPES_COUNT = 2
};

typedef enum INK_FEEDBACK_PEN_TYPE {
    IFPT_BALLPOINT = 0,
    IFPT_HIGHLIGHTER = 1,
    IFPT_PENCIL = 2,
    INK_FEEDBACK_PEN_TYPES_COUNT = 3
};

typedef enum INPUTDELEGATION_MODE_FLAGS {
    IDLM_OFF = 0,
    IDLM_KEYBOARD = 1,
    IDLM_SPATIAL = 2,
    IDLM_VALID_FLAGS = 3
};

typedef enum INPUTFOCUSEVENTSOURCE {
    IFES_FOREGROUND_QUEUE_CHANGED = 1,
    IFES_FOREGROUND_QUEUE_FOCUS_RECEIVED = 2,
    IFES_FOREGROUND_QUEUE_FOCUS_LOST = 3,
    IFES_FOREGROUND_QUEUE_FOCUS_ATTACHED = 4,
    IFES_FOREGROUND_QUEUE_FOCUS_DETACHED = 5,
    IFES_FOREGROUND_QUEUE_DESTROYED = 6,
    IFES_FOREGROUND_WINDOW_ACTIVATED = 7,
    IFES_FOREGROUND_WINDOW_DEACTIVATED = 8,
    IFES_FOREGROUND_WINDOW_DESTROYED = 9,
    IFES_FOCUS_WINDOW_DESTROYED = 10,
    IFES_ZapActiveAndFocus = 11
};

typedef enum INPUT_DESTINATION_IDENTITY {
    IDID_NONE = 0,
    IDID_LUID = 1,
    IDID_INPUTROUTINGINFO = 2,
    IDID_WINDOW = 4
};

typedef enum INPUT_DESTINATION_WINDOW_TYPE {
    IDWT_NONE = 0,
    IDWT_BASE = 1,
    IDWT_WINDOW = 2
};

typedef enum INPUT_SPACE_FLAGS {
    INPUT_SPACE_FLAG_NONE = 0,
    INPUT_SPACE_FLAG_DEFAULT = 1
};

typedef enum INPUT_SPACE_REGION_FLAGS {
    INPUT_SPACE_REGION_FLAG_NONE = 0,
    INPUT_SPACE_REGION_FLAG_PRIMARY = 1,
    INPUT_SPACE_REGION_FLAG_DISPLAY = 2,
    INPUT_SPACE_REGION_FLAG_DISPLAY_GAP = 4
};

typedef enum ITEMDEVIRTUALIZERVALUE {
    IDV_STARTINGITEM = 0,
    IDV_DEVIRTUALIZATIONTYPE = 1,
    IDV_ISDEVIRTUALIZED = 2,
    IDV_HRDEVIRTUALIZE = 3,
    IDV_ELAPSEDFULLDEVIRTUALIZATIONTIME = 4
};

typedef enum ITEMSTATES {
    LBPSI_HOT = 1,
    LBPSI_HOTSELECTED = 2,
    LBPSI_SELECTED = 3,
    LBPSI_SELECTEDNOTFOCUS = 4
};

typedef enum ITEMSVIEWPARTS {
    IV_SEARCHHIT = 1,
    IV_SUBSETBUTTON = 2,
    IV_FOCUSRECT = 3,
    IV_PROPERTY = 4,
    IV_EMPTYTEXT = 5,
    IV_FOCUSRECTINNER = 6
};

typedef enum ITEMSVIEWSPYVALUE {
    IVV_FOCUSEDITEM = 0,
    IVV_FIRSTPAGERESULTS_STATE = 1,
    IVV_SELECTIONMANAGER = 2,
    IVV_EVENTQUEUE_SIZE = 3,
    IVV_VIRTUALUIGROUPITEM_COLLECTION = 4,
    IVV_PROCESSID = 5,
    IVV_THREADID = 6,
    IVV_LINESCROLLER = 7
};

typedef enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS {
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 1,
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 2,
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 3
};

typedef enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS {
    JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 1,
    JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 2,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 4,
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 8,
    JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 15
};

typedef enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS {
    JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 1,
    JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 2,
    JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 4,
    JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 7
};

typedef enum KEYBOARD_CORRECTION_ACTION_WPARAM {
    KCA_UNREGISTERED = 0
};

typedef enum KEY_TYPES {
    KEY_NONE = 0,
    KEY_PUBLIC = 1,
    KEY_PRIVATE = 2
};

typedef enum KF_CATEGORY {
    KF_CATEGORY_VIRTUAL = 1,
    KF_CATEGORY_FIXED = 2,
    KF_CATEGORY_COMMON = 3,
    KF_CATEGORY_PERUSER = 4
};

typedef enum KNOWNDESTCATEGORY {
    KDC_FREQUENT = 1,
    KDC_RECENT = 2
};

typedef enum KNOWN_FOLDER_FLAG {
    KF_FLAG_DEFAULT = 0,
    KF_FLAG_FORCE_APP_DATA_REDIRECTION = 0x80000,
    KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = 0x40000,
    KF_FLAG_FORCE_PACKAGE_REDIRECTION = 0x20000,
    KF_FLAG_NO_PACKAGE_REDIRECTION = 0x10000,
    KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = 0x20000,
    KF_FLAG_NO_APPCONTAINER_REDIRECTION = 0x10000,
    KF_FLAG_CREATE = 0x8000,
    KF_FLAG_DONT_VERIFY = 16384,
    KF_FLAG_DONT_UNEXPAND = 8192,
    KF_FLAG_NO_ALIAS = 4096,
    KF_FLAG_INIT = 2048,
    KF_FLAG_DEFAULT_PATH = 1024,
    KF_FLAG_NOT_PARENT_RELATIVE = 512,
    KF_FLAG_SIMPLE_IDLIST = 256,
    KF_FLAG_ALIAS_ONLY = -2147483648
};

typedef enum KNOWN_FOLDER_FLAG_INTERNAL {
    KF_FLAG_INTERNAL_STORAGE = 0x1000000,
    KF_FLAG_EXTERNAL_STORAGE = 0x2000000,
    KF_FLAG_CREATE_OVERRIDE = 0x10000000,
    KF_FLAG_PATH_ALLOC_WITH_NEW = 0x20000000,
    KF_FLAG_DONT_VALIDATE = 0x40000000,
    KF_FLAG_INIT_IF_NEEDED = -2147483648,
    KF_FLAG_INTERNAL_MASK = -16777216
};

typedef enum LABELSTATES {
    FLS_NORMAL = 1,
    FLS_SELECTED = 2,
    FLS_EMPHASIZED = 3,
    FLS_DISABLED = 4
};

typedef enum LAST_COPYITEM_ERROR_TYPE {
    LAST_COPYITEM_ERROR_SRC = 0,
    LAST_COPYITEM_ERROR_DST = 1,
    LAST_COPYITEM_ERROR_NOINFO = 2
};

typedef enum LATENCY_TIME {
    LT_DONT_CARE = 0,
    LT_LOWEST_LATENCY = 1
};

typedef enum LEFTFRAMESTATES {
    DWMLFS_ACTIVE = 1,
    DWMLFS_INACTIVE = 2
};

typedef enum LIBRARYFOLDERFILTER {
    LFF_FORCEFILESYSTEM = 1,
    LFF_STORAGEITEMS = 2,
    LFF_ALLITEMS = 3
};

typedef enum LIBRARYMANAGEDIALOGOPTIONS {
    LMD_DEFAULT = 0,
    LMD_ALLOWUNINDEXABLENETWORKLOCATIONS = 1
};

typedef enum LIBRARYOPTIONFLAGS {
    LOF_DEFAULT = 0,
    LOF_PINNEDTONAVPANE = 1,
    LOF_MASK_ALL = 1
};

typedef enum LIBRARYPANEMENUGLYPHSTATES {
    CMLPMG_NORMAL = 1,
    CMLPMG_HOT = 2
};

typedef enum LIBRARYPANETOPVIEWSTATES {
    CMLPTV_NORMAL = 1,
    CMLPTV_HOT = 2,
    CMLPTV_PRESSED = 3,
    CMLPTV_KEYFOCUSED = 4,
    CMLPTV_NEARHOT = 5,
    CMLPTV_DISABLED = 6
};

typedef enum LIBRARYSAVEFLAGS {
    LSF_FAILIFTHERE = 0,
    LSF_OVERRIDEEXISTING = 1,
    LSF_MAKEUNIQUENAME = 2
};

typedef enum LINESCROLLERVALUE {
    LSV_VIRT_ANCHOR_X = 0,
    LSV_VIRT_ANCHOR_Y = 1,
    LSV_VIRT_TARGET_X = 2,
    LSV_VIRT_TARGET_Y = 3
};

typedef enum LINKHEADERSTATES {
    FLH_NORMAL = 1,
    FLH_HOVER = 2
};

typedef enum LINKPARTS {
    LP_HYPERLINK = 1
};

typedef enum LINKSTATES {
    FLYOUTLINK_NORMAL = 1,
    FLYOUTLINK_HOVER = 2
};

typedef enum LISTBOXPARTS {
    LBCP_BORDER_HSCROLL = 1,
    LBCP_BORDER_HVSCROLL = 2,
    LBCP_BORDER_NOSCROLL = 3,
    LBCP_BORDER_VSCROLL = 4,
    LBCP_ITEM = 5
};

typedef enum LISTITEMSTATES {
    LISS_NORMAL = 1,
    LISS_HOT = 2,
    LISS_SELECTED = 3,
    LISS_DISABLED = 4,
    LISS_SELECTEDNOTFOCUS = 5,
    LISS_HOTSELECTED = 6
};

typedef enum LISTVIEWPARTS {
    LVP_LISTITEM = 1,
    LVP_LISTGROUP = 2,
    LVP_LISTDETAIL = 3,
    LVP_LISTSORTEDDETAIL = 4,
    LVP_EMPTYTEXT = 5,
    LVP_GROUPHEADER = 6,
    LVP_GROUPHEADERLINE = 7,
    LVP_EXPANDBUTTON = 8,
    LVP_COLLAPSEBUTTON = 9,
    LVP_COLUMNDETAIL = 10
};

typedef enum LIVEPREVIEW_TRIGGER {
    LPT_SHOWDESKTOP = 1,
    LPT_KEYBOARDSHORTCUT = 2,
    LPT_SUPERBAR = 3,
    LPT_ALTTAB = 4,
    LPT_SUPERBAR_TOUCH = 5,
    LPT_SHOWDESKTOP_TOUCH = 6
};

typedef enum LOGOFFBUTTONSSTATES {
    SPLS_NORMAL = 1,
    SPLS_HOT = 2,
    SPLS_PRESSED = 3
};

typedef enum LOGON_ERROR_CODE {
    LOGON_FAILED_BAD_PASSWORD = 0,
    LOGON_FAILED_UPDATE_PASSWORD = 1,
    LOGON_FAILED_OTHER = 2,
    LOGON_WARNING = 3
};

typedef enum LSA_FOREST_TRUST_COLLISION_RECORD_TYPE {
    CollisionTdo = 0,
    CollisionXref = 1,
    CollisionOther = 2
};

typedef enum LSA_FOREST_TRUST_RECORD_TYPE {
    ForestTrustTopLevelName = 0,
    ForestTrustTopLevelNameEx = 1,
    ForestTrustDomainInfo = 2,
    ForestTrustRecordTypeLast = 2
};

typedef enum LogOptions {
    LO_BREAK = 0,
    LO_CONSOLE = 1,
    LO_KD = 2,
    LO_LOGFILE = 3,
    LO_TIMERID = 4,
    LO_CLOCKID = 5,
    LO_SRCID = 6,
    LO_APPID = 7,
    LO_THREADID = 8,
    LO_USERCOUNT = 9,
    LO_GDICOUNT = 10,
    LO_MEMUSAGE = 11,
    LO_SHUTDOWN = 12,
    LO_INDENT = 13,
    LO_ALL = 14,
    LO_ASSERT = 15,
    LO_ERROR = 16,
    LO_ALWAYS = 17,
    LO_PERF = 18,
    LO_PARAMS = 19,
    LO_TMAPI = 20,
    LO_TMLOAD = 21,
    LO_TMCHANGE = 22,
    LO_TMCHANGEMSG = 23,
    LO_TMSTARTUP = 24,
    LO_TMOPEN = 25,
    LO_TMHANDLE = 26,
    LO_TMBITMAP = 27,
    LO_TMBRUSHES = 28,
    LO_TM = 29,
    LO_CACHE = 30,
    LO_RFBUG = 31,
    LO_TILECNT = 32,
    LO_BADHTHEME = 33,
    LO_WINDUMP = 34,
    LO_COMPOSITE = 35,
    LO_CAPTION = 36,
    LO_NCATTACH = 37,
    LO_NCMSGS = 38,
    LO_NCMETRICS = 39,
    LO_NCTRACE = 40,
    LO_MENU = 41,
    LO_MENUDRAW = 42,
    LO_TOUCH = 43,
    LO_HTHEME = 44
};

typedef enum MARKUPTEXTSTATES {
    EMT_NORMALTEXT = 1,
    EMT_LINKTEXT = 2
};

typedef enum MAXBUTTONSTATES {
    MAXBS_NORMAL = 1,
    MAXBS_HOT = 2,
    MAXBS_PUSHED = 3,
    MAXBS_DISABLED = 4
};

typedef enum MAXCAPTIONSTATES {
    MXCS_ACTIVE = 1,
    MXCS_INACTIVE = 2,
    MXCS_DISABLED = 3
};

typedef enum MCA_EXCEPTION_TYPE {
    HAL_MCE_RECORD = 0,
    HAL_MCA_RECORD = 1
};

typedef enum MCFFLAGS {
    MCF_OPLOCK_NONE = 0,
    MCF_OPLOCK_REQUIRED_WHEN_AVAILABLE = 1,
    MCF_OPLOCK_BACKOFF = 16,
    MCF_READONLY_OVERRIDE = 32,
    MCF_FREEZE_MODIFIED_DATE = 64,
    MCF_OMIT_FILE_SHARE_DELETE = 128,
    MCF_STREAM_ALLOW_FILE_DELETES = 256
};

typedef enum MDICLOSEBUTTONSTATES {
    MDCL_NORMAL = 1,
    MDCL_HOT = 2,
    MDCL_PUSHED = 3,
    MDCL_DISABLED = 4
};

typedef enum MDIMINBUTTONSTATES {
    MDMI_NORMAL = 1,
    MDMI_HOT = 2,
    MDMI_PUSHED = 3,
    MDMI_DISABLED = 4
};

typedef enum MDIRESTOREBUTTONSTATES {
    MDRE_NORMAL = 1,
    MDRE_HOT = 2,
    MDRE_PUSHED = 3,
    MDRE_DISABLED = 4
};

typedef enum MEDIAPLAYBACK_STATE {
    MEDIAPLAYBACK_RESUME = 0,
    MEDIAPLAYBACK_PAUSE = 1,
    MEDIAPLAYBACK_PAUSE_AND_SUSPEND = 2,
    MEDIAPLAYBACK_RESUME_FROM_SUSPEND = 3
};

typedef enum MEM_EXTENDED_PARAMETER_TYPE {
    MemExtendedParameterInvalidType = 0,
    MemExtendedParameterAddressRequirements = 1,
    MemExtendedParameterNumaNode = 2,
    MemExtendedParameterPartitionHandle = 3,
    MemExtendedParameterUserPhysicalHandle = 4,
    MemExtendedParameterAttributeFlags = 5,
    MemExtendedParameterMax = 6
};

typedef enum MEM_SECTION_EXTENDED_PARAMETER_TYPE {
    MemSectionExtendedParameterInvalidType = 0,
    MemSectionExtendedParameterUserPhysicalFlags = 1,
    MemSectionExtendedParameterNumaNode = 2,
    MemSectionExtendedParameterMax = 3
};

typedef enum MENUBANDPARTS {
    MDP_NEWAPPBUTTON = 1,
    MDP_SEPERATOR = 2
};

typedef enum MENUBANDSTATES {
    MDS_NORMAL = 1,
    MDS_HOT = 2,
    MDS_PRESSED = 3,
    MDS_DISABLED = 4,
    MDS_CHECKED = 5,
    MDS_HOTCHECKED = 6
};

typedef enum MENUBUTTONSTATES {
    DLCMB_NORMAL = 1,
    DLCMB_HOT = 2,
    DLCMB_PRESSED = 3
};

typedef enum MENUPARTS {
    MENU_MENUITEM_TMSCHEMA = 1,
    MENU_MENUDROPDOWN_TMSCHEMA = 2,
    MENU_MENUBARITEM_TMSCHEMA = 3,
    MENU_MENUBARDROPDOWN_TMSCHEMA = 4,
    MENU_CHEVRON_TMSCHEMA = 5,
    MENU_SEPARATOR_TMSCHEMA = 6,
    MENU_BARBACKGROUND = 7,
    MENU_BARITEM = 8,
    MENU_POPUPBACKGROUND = 9,
    MENU_POPUPBORDERS = 10,
    MENU_POPUPCHECK = 11,
    MENU_POPUPCHECKBACKGROUND = 12,
    MENU_POPUPGUTTER = 13,
    MENU_POPUPITEM = 14,
    MENU_POPUPSEPARATOR = 15,
    MENU_POPUPSUBMENU = 16,
    MENU_SYSTEMCLOSE = 17,
    MENU_SYSTEMMAXIMIZE = 18,
    MENU_SYSTEMMINIMIZE = 19,
    MENU_SYSTEMRESTORE = 20
};

typedef enum MERGE_UPDATE_STATUS {
    MUS_COMPLETE = 0,
    MUS_USERINPUTNEEDED = 1,
    MUS_FAILED = 2
};

typedef enum MESSAGE_HANDLER_MESSAGE_TYPE {
    MHMT_KEY_TRACE = 0,
    MHMT_FORWARD_MESSAGE = 1
};

typedef enum MFU_FOLDER_ACTION {
    UNSPECIFIED = 0,
    OPEN_FILE_IN = 1,
    SAVE_FILE_IN = 2,
    COPY_FROM = 3,
    PASTE_TO = 4,
    MOVE_TO = 5,
    COPY_PASTE = 6,
    SHARE = 7,
    MOVE = 8,
    CREATE = 9,
    OPEN_FOLDER = 10,
    OPEN_FOLDER_IN = 11,
    CREATE_IN = 12,
    ENUM_COUNT = 13
};

typedef enum MINBUTTONSTATES {
    MINBS_NORMAL = 1,
    MINBS_HOT = 2,
    MINBS_PUSHED = 3,
    MINBS_DISABLED = 4
};

typedef enum MINCAPTIONSTATES {
    MNCS_ACTIVE = 1,
    MNCS_INACTIVE = 2,
    MNCS_DISABLED = 3
};

typedef enum MIRROROPTIONENUM {
    eDONTKNOW = 0,
    eMIRROR = 1,
    eDONTMIRROR = 2
};

typedef enum MIT_INPUT_INTEROP_CALLBACK {
    MIT_INPUT_INTEROP_MTCALLBACK = 0,
    MIT_INPUT_INTEROP_HOVER = 1
};

typedef enum MODE_CHANGE_REASON {
    MCR_NONE = 0,
    MCR_ACTIVATION = 1,
    MCR_MONITORCHANGE = 2,
    MCR_OWNEDWINDOWCREATED = 3,
    MCR_SHOWDESKTOP = 4,
    MCR_ZBIDCHANGE = 5,
    MCR_PRESENTEDWINDOWCHANGED = 6,
    MCR_SIMULATED_ACTIVATION = 7,
    MCR_CROSS_MONITOR_ACTIVATION = 8
};

typedef enum MONITOR_APP_VISIBILITY {
    MAV_UNKNOWN = 0,
    MAV_NO_APP_VISIBLE = 1,
    MAV_APP_VISIBLE = 2
};

typedef enum MONITOR_DPI_TYPE {
    MDT_EFFECTIVE_DPI = 0,
    MDT_ANGULAR_DPI = 1,
    MDT_RAW_DPI = 2,
    MDT_DEFAULT = 0
};

typedef enum MONTHCALPARTS {
    MC_BACKGROUND = 1,
    MC_BORDERS = 2,
    MC_GRIDBACKGROUND = 3,
    MC_COLHEADERSPLITTER = 4,
    MC_GRIDCELLBACKGROUND = 5,
    MC_GRIDCELL = 6,
    MC_GRIDCELLUPPER = 7,
    MC_TRAILINGGRIDCELL = 8,
    MC_TRAILINGGRIDCELLUPPER = 9,
    MC_NAVNEXT = 10,
    MC_NAVPREV = 11
};

typedef enum MOREPROGRAMSARROWBACKSTATES {
    SPSB_NORMAL = 1,
    SPSB_HOT = 2,
    SPSB_PRESSED = 3
};

typedef enum MOREPROGRAMSARROWSTATES {
    SPS_NORMAL = 1,
    SPS_HOT = 2,
    SPS_PRESSED = 3
};

typedef enum MOREPROGRAMSTABPRIVSTATES {
    SPMPTP_NORMAL = 1,
    SPMPTP_HOT = 2,
    SPMPTP_SELECTED = 3,
    SPMPTP_DISABLED = 4,
    SPMPTP_FOCUSED = 5
};

typedef enum MOREPROGRAMSTABSTATES {
    SPMPT_NORMAL = 1,
    SPMPT_HOT = 2,
    SPMPT_SELECTED = 3,
    SPMPT_DISABLED = 4,
    SPMPT_FOCUSED = 5
};

typedef enum MOVESIZE_INITIATION_DEVICE_TYPE {
    MSIDT_MOUSE = 0,
    MSIDT_PEN = 1,
    MSIDT_TOUCH = 2
};

typedef enum MOVESIZE_OPERATION {
    MSO_MOVE = 0,
    MSO_SIZE_TOP = 1,
    MSO_SIZE_LEFT = 2,
    MSO_SIZE_RIGHT = 3,
    MSO_SIZE_BOTTOM = 4,
    MSO_SIZE_TOPLEFT = 5,
    MSO_SIZE_TOPRIGHT = 6,
    MSO_SIZE_BOTTOMLEFT = 7,
    MSO_SIZE_BOTTOMRIGHT = 8
};

typedef enum MOVESTATES {
    DDMOVE_HIGHLIGHT = 1,
    DDMOVE_NOHIGHLIGHT = 2
};

typedef enum MSG_TYPE {
    MT_SIMPLE = 0,
    MT_ALLTHREADS = 1,
    MT_FILTERED = 2
};

typedef enum MSV1_0_AVID {
    MsvAvEOL = 0,
    MsvAvNbComputerName = 1,
    MsvAvNbDomainName = 2,
    MsvAvDnsComputerName = 3,
    MsvAvDnsDomainName = 4,
    MsvAvDnsTreeName = 5,
    MsvAvFlags = 6,
    MsvAvTimestamp = 7,
    MsvAvRestrictions = 8,
    MsvAvTargetName = 9,
    MsvAvChannelBindings = 10
};

typedef enum Microsoft::WRL::FactoryCacheFlags {
    FactoryCacheDefault = 0,
    FactoryCacheEnabled = 1,
    FactoryCacheDisabled = 2
};

typedef enum Microsoft::WRL::ModuleType {
    InProc = 1,
    OutOfProc = 2,
    DisableCaching = 4,
    InProcDisableCaching = 5,
    OutOfProcDisableCaching = 6
};

typedef enum Microsoft::WRL::RuntimeClassType {
    WinRt = 1,
    ClassicCom = 2,
    WinRtClassicComMix = 3,
    InhibitWeakReference = 4,
    Delegate = 2,
    InhibitFtmBase = 8,
    InhibitRoOriginateError = 16
};

typedef enum NAMESPACEWALKFLAG {
    NSWF_DEFAULT = 0,
    NSWF_NONE_IMPLIES_ALL = 1,
    NSWF_ONE_IMPLIES_ALL = 2,
    NSWF_DONT_TRAVERSE_LINKS = 4,
    NSWF_DONT_ACCUMULATE_RESULT = 8,
    NSWF_TRAVERSE_STREAM_JUNCTIONS = 16,
    NSWF_FILESYSTEM_ONLY = 32,
    NSWF_SHOW_PROGRESS = 64,
    NSWF_FLAG_VIEWORDER = 128,
    NSWF_IGNORE_AUTOPLAY_HIDA = 256,
    NSWF_ASYNC = 512,
    NSWF_DONT_RESOLVE_LINKS = 1024,
    NSWF_ACCUMULATE_FOLDERS = 2048,
    NSWF_DONT_SORT = 4096,
    NSWF_USE_TRANSFER_MEDIUM = 8192,
    NSWF_DONT_TRAVERSE_STREAM_JUNCTIONS = 16384,
    NSWF_ANY_IMPLIES_ALL = 0x8000
};

typedef enum NAMESPACE_FOLDER_PREFERENCES_FLAGS {
    FVPF_DEFAULT = 0,
    FVPF_ALLOWITEMSVIEW = 1
};

typedef enum NATIVE_DISPLAY_ORIENTATION {
    NDO_LANDSCAPE = 0,
    NDO_PORTRAIT = 1
};

typedef enum NAVIGATIONPARTS {
    NAV_BACKBUTTON = 1,
    NAV_FORWARDBUTTON = 2,
    NAV_MENUBUTTON = 3
};

typedef enum NAVNEXTSTATES {
    MCNN_NORMAL = 1,
    MCNN_HOT = 2,
    MCNN_PRESSED = 3,
    MCNN_DISABLED = 4
};

typedef enum NAVPREVSTATES {
    MCNP_NORMAL = 1,
    MCNP_HOT = 2,
    MCNP_PRESSED = 3,
    MCNP_DISABLED = 4
};

typedef enum NAV_BACKBUTTONSTATES {
    NAV_BB_NORMAL = 1,
    NAV_BB_HOT = 2,
    NAV_BB_PRESSED = 3,
    NAV_BB_DISABLED = 4
};

typedef enum NAV_FORWARDBUTTONSTATES {
    NAV_FB_NORMAL = 1,
    NAV_FB_HOT = 2,
    NAV_FB_PRESSED = 3,
    NAV_FB_DISABLED = 4
};

typedef enum NAV_MENUBUTTONSTATES {
    NAV_MB_NORMAL = 1,
    NAV_MB_HOT = 2,
    NAV_MB_PRESSED = 3,
    NAV_MB_DISABLED = 4
};

typedef enum NCADORNMENT {
    NCA_HELPBUTTON = 0,
    NCA_MINBUTTON = 1,
    NCA_MAXBUTTON = 2,
    NCA_CLOSEBUTTON = 3,
    NCA_SYSTEMMENUICON = 4
};

typedef enum NCRENDERINGPOLICY {
    NCRP_USEWINDOWSTYLE = 0,
    NCRP_DISABLED = 1,
    NCRP_ENABLED = 2
};

typedef enum NEGOTIATE_MESSAGES {
    NegEnumPackagePrefixes = 0,
    NegGetCallerName = 1,
    NegTransferCredentials = 2,
    NegMsgReserved1 = 3,
    NegCallPackageMax = 4
};

typedef enum NONESTATES {
    DDNONE_HIGHLIGHT = 1,
    DDNONE_NOHIGHLIGHT = 2
};

typedef enum NORMALGROUPCOLLAPSESTATES {
    EBNGC_NORMAL = 1,
    EBNGC_HOT = 2,
    EBNGC_PRESSED = 3
};

typedef enum NORMALGROUPEXPANDSTATES {
    EBNGE_NORMAL = 1,
    EBNGE_HOT = 2,
    EBNGE_PRESSED = 3
};

typedef enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE {
    NIAWDT_POST = 0,
    NIAWDT_SENDNOTIFY = 1
};

typedef enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION {
    NIAWO_ALL = 0,
    NIAWO_SKIP_SYSTEM_WINDOWS = 1,
    NIAWO_CURRENT_WINDOW_ONLY = 2,
    NIAWO_CURRENT_WINDOW_ONLY_IFF_APP = 3
};

typedef enum NSTCFOLDERCAPABILITIES {
    NSTCFC_NONE = 0,
    NSTCFC_PINNEDITEMFILTERING = 1,
    NSTCFC_DELAY_REGISTER_NOTIFY = 2
};

typedef enum NSTCGNI {
    NSTCGNI_NEXT = 0,
    NSTCGNI_NEXTVISIBLE = 1,
    NSTCGNI_PREV = 2,
    NSTCGNI_PREVVISIBLE = 3,
    NSTCGNI_PARENT = 4,
    NSTCGNI_CHILD = 5,
    NSTCGNI_FIRSTVISIBLE = 6,
    NSTCGNI_LASTVISIBLE = 7
};

typedef enum NWMF {
    NWMF_UNLOADING = 1,
    NWMF_USERINITED = 2,
    NWMF_FIRST = 4,
    NWMF_OVERRIDEKEY = 8,
    NWMF_SHOWHELP = 16,
    NWMF_HTMLDIALOG = 32,
    NWMF_FROMDIALOGCHILD = 64,
    NWMF_USERREQUESTED = 128,
    NWMF_USERALLOWED = 256,
    NWMF_FORCEWINDOW = 0x10000,
    NWMF_FORCETAB = 0x20000,
    NWMF_SUGGESTWINDOW = 0x40000,
    NWMF_SUGGESTTAB = 0x80000,
    NWMF_INACTIVETAB = 0x100000
};

typedef enum NewProcessCauseConstants {
    ProtectedModeRedirect = 1
};

typedef enum OCT_BANNED_API {
    OCT_BANNED_GetWindowRect = 0,
    OCT_BANNED_ClientToScreen = 1,
    OCT_BANNED_ScreenToClient = 2,
    OCT_BANNED_MapWindowPoints = 3,
    OCT_BANNED_GetDC = 4,
    OCT_BANNED_GetDCEx = 5,
    OCT_BANNED_EnumDisplayMonitors = 6,
    OCT_BANNED_GetSystemMetrics = 7,
    OCT_BANNED_MonitorFromWindow = 8,
    OCT_BANNED_MonitorFromPoint = 9,
    OCT_BANNED_MonitorFromRect = 10,
    OCT_BANNED_GetMonitorInfoW = 11,
    OCT_BANNED_GetDpiForMonitorInternal = 12,
    OCT_BANNED_GetCurrentDpiInfo = 13,
    OCT_BANNED_ShellScaling_Window = 14,
    OCT_BANNED_ShellScaling_Monitor = 15,
    OCT_BANNED_ShellScaling_Device = 16,
    OCT_BANNED_MAX = 17
};

typedef enum OFFER_PRIORITY {
    VmOfferPriorityVeryLow = 1,
    VmOfferPriorityLow = 2,
    VmOfferPriorityBelowNormal = 3,
    VmOfferPriorityNormal = 4
};

typedef enum OFFSETTYPE {
    OT_TOPLEFT = 0,
    OT_TOPRIGHT = 1,
    OT_TOPMIDDLE = 2,
    OT_BOTTOMLEFT = 3,
    OT_BOTTOMRIGHT = 4,
    OT_BOTTOMMIDDLE = 5,
    OT_MIDDLELEFT = 6,
    OT_MIDDLERIGHT = 7,
    OT_LEFTOFCAPTION = 8,
    OT_RIGHTOFCAPTION = 9,
    OT_LEFTOFLASTBUTTON = 10,
    OT_RIGHTOFLASTBUTTON = 11,
    OT_ABOVELASTBUTTON = 12,
    OT_BELOWLASTBUTTON = 13
};

typedef enum OLECMDEXECOPT {
    OLECMDEXECOPT_DODEFAULT = 0,
    OLECMDEXECOPT_PROMPTUSER = 1,
    OLECMDEXECOPT_DONTPROMPTUSER = 2,
    OLECMDEXECOPT_SHOWHELP = 3
};

typedef enum OLECMDF {
    OLECMDF_SUPPORTED = 1,
    OLECMDF_ENABLED = 2,
    OLECMDF_LATCHED = 4,
    OLECMDF_NINCHED = 8,
    OLECMDF_INVISIBLE = 16,
    OLECMDF_DEFHIDEONCTXTMENU = 32
};

typedef enum OLECMDID {
    OLECMDID_OPEN = 1,
    OLECMDID_NEW = 2,
    OLECMDID_SAVE = 3,
    OLECMDID_SAVEAS = 4,
    OLECMDID_SAVECOPYAS = 5,
    OLECMDID_PRINT = 6,
    OLECMDID_PRINTPREVIEW = 7,
    OLECMDID_PAGESETUP = 8,
    OLECMDID_SPELL = 9,
    OLECMDID_PROPERTIES = 10,
    OLECMDID_CUT = 11,
    OLECMDID_COPY = 12,
    OLECMDID_PASTE = 13,
    OLECMDID_PASTESPECIAL = 14,
    OLECMDID_UNDO = 15,
    OLECMDID_REDO = 16,
    OLECMDID_SELECTALL = 17,
    OLECMDID_CLEARSELECTION = 18,
    OLECMDID_ZOOM = 19,
    OLECMDID_GETZOOMRANGE = 20,
    OLECMDID_UPDATECOMMANDS = 21,
    OLECMDID_REFRESH = 22,
    OLECMDID_STOP = 23,
    OLECMDID_HIDETOOLBARS = 24,
    OLECMDID_SETPROGRESSMAX = 25,
    OLECMDID_SETPROGRESSPOS = 26,
    OLECMDID_SETPROGRESSTEXT = 27,
    OLECMDID_SETTITLE = 28,
    OLECMDID_SETDOWNLOADSTATE = 29,
    OLECMDID_STOPDOWNLOAD = 30,
    OLECMDID_ONTOOLBARACTIVATED = 31,
    OLECMDID_FIND = 32,
    OLECMDID_DELETE = 33,
    OLECMDID_HTTPEQUIV = 34,
    OLECMDID_HTTPEQUIV_DONE = 35,
    OLECMDID_ENABLE_INTERACTION = 36,
    OLECMDID_ONUNLOAD = 37,
    OLECMDID_PROPERTYBAG2 = 38,
    OLECMDID_PREREFRESH = 39,
    OLECMDID_SHOWSCRIPTERROR = 40,
    OLECMDID_SHOWMESSAGE = 41,
    OLECMDID_SHOWFIND = 42,
    OLECMDID_SHOWPAGESETUP = 43,
    OLECMDID_SHOWPRINT = 44,
    OLECMDID_CLOSE = 45,
    OLECMDID_ALLOWUILESSSAVEAS = 46,
    OLECMDID_DONTDOWNLOADCSS = 47,
    OLECMDID_UPDATEPAGESTATUS = 48,
    OLECMDID_PRINT2 = 49,
    OLECMDID_PRINTPREVIEW2 = 50,
    OLECMDID_SETPRINTTEMPLATE = 51,
    OLECMDID_GETPRINTTEMPLATE = 52,
    OLECMDID_PAGEACTIONBLOCKED = 55,
    OLECMDID_PAGEACTIONUIQUERY = 56,
    OLECMDID_FOCUSVIEWCONTROLS = 57,
    OLECMDID_FOCUSVIEWCONTROLSQUERY = 58,
    OLECMDID_SHOWPAGEACTIONMENU = 59,
    OLECMDID_ADDTRAVELENTRY = 60,
    OLECMDID_UPDATETRAVELENTRY = 61,
    OLECMDID_UPDATEBACKFORWARDSTATE = 62,
    OLECMDID_OPTICAL_ZOOM = 63,
    OLECMDID_OPTICAL_GETZOOMRANGE = 64,
    OLECMDID_WINDOWSTATECHANGED = 65,
    OLECMDID_ACTIVEXINSTALLSCOPE = 66,
    OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = 67,
    OLECMDID_SHOWTASKDLG = 68,
    OLECMDID_POPSTATEEVENT = 69,
    OLECMDID_VIEWPORT_MODE = 70,
    OLECMDID_LAYOUT_VIEWPORT_WIDTH = 71,
    OLECMDID_VISUAL_VIEWPORT_EXCLUDE_BOTTOM = 72,
    OLECMDID_USER_OPTICAL_ZOOM = 73,
    OLECMDID_PAGEAVAILABLE = 74,
    OLECMDID_GETUSERSCALABLE = 75,
    OLECMDID_UPDATE_CARET = 76,
    OLECMDID_ENABLE_VISIBILITY = 77,
    OLECMDID_MEDIA_PLAYBACK = 78,
    OLECMDID_SETFAVICON = 79,
    OLECMDID_SET_HOST_FULLSCREENMODE = 80,
    OLECMDID_EXITFULLSCREEN = 81,
    OLECMDID_SCROLLCOMPLETE = 82,
    OLECMDID_ONBEFOREUNLOAD = 83,
    OLECMDID_SHOWMESSAGE_BLOCKABLE = 84,
    OLECMDID_SHOWTASKDLG_BLOCKABLE = 85
};

typedef enum OLECMDID_BROWSERSTATEFLAG {
    OLECMDIDF_BROWSERSTATE_EXTENSIONSOFF = 1,
    OLECMDIDF_BROWSERSTATE_IESECURITY = 2,
    OLECMDIDF_BROWSERSTATE_PROTECTEDMODE_OFF = 4,
    OLECMDIDF_BROWSERSTATE_RESET = 8,
    OLECMDIDF_BROWSERSTATE_REQUIRESACTIVEX = 16,
    OLECMDIDF_BROWSERSTATE_DESKTOPHTMLDIALOG = 32,
    OLECMDIDF_BROWSERSTATE_BLOCKEDVERSION = 64
};

typedef enum OLECMDID_OPTICAL_ZOOMFLAG {
    OLECMDIDF_OPTICAL_ZOOM_NOPERSIST = 1,
    OLECMDIDF_OPTICAL_ZOOM_NOLAYOUT = 16,
    OLECMDIDF_OPTICAL_ZOOM_NOTRANSIENT = 32,
    OLECMDIDF_OPTICAL_ZOOM_RELOADFORNEWTAB = 64
};

typedef enum OLECMDID_PAGEACTIONFLAG {
    OLECMDIDF_PAGEACTION_FILEDOWNLOAD = 1,
    OLECMDIDF_PAGEACTION_ACTIVEXINSTALL = 2,
    OLECMDIDF_PAGEACTION_ACTIVEXTRUSTFAIL = 4,
    OLECMDIDF_PAGEACTION_ACTIVEXUSERDISABLE = 8,
    OLECMDIDF_PAGEACTION_ACTIVEXDISALLOW = 16,
    OLECMDIDF_PAGEACTION_ACTIVEXUNSAFE = 32,
    OLECMDIDF_PAGEACTION_POPUPWINDOW = 64,
    OLECMDIDF_PAGEACTION_LOCALMACHINE = 128,
    OLECMDIDF_PAGEACTION_MIMETEXTPLAIN = 256,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE = 512,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXINSTALL = 512,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 1024,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNTRUSTED = 2048,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTRANET = 4096,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNINTERNET = 8192,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNRESTRICTED = 16384,
    OLECMDIDF_PAGEACTION_PROTLOCKDOWNDENY = 0x8000,
    OLECMDIDF_PAGEACTION_POPUPALLOWED = 0x10000,
    OLECMDIDF_PAGEACTION_SCRIPTPROMPT = 0x20000,
    OLECMDIDF_PAGEACTION_ACTIVEXUSERAPPROVAL = 0x40000,
    OLECMDIDF_PAGEACTION_MIXEDCONTENT = 0x80000,
    OLECMDIDF_PAGEACTION_INVALID_CERT = 0x100000,
    OLECMDIDF_PAGEACTION_INTRANETZONEREQUEST = 0x200000,
    OLECMDIDF_PAGEACTION_XSSFILTERED = 0x400000,
    OLECMDIDF_PAGEACTION_SPOOFABLEIDNHOST = 0x800000,
    OLECMDIDF_PAGEACTION_ACTIVEX_EPM_INCOMPATIBLE = 0x1000000,
    OLECMDIDF_PAGEACTION_SCRIPTNAVIGATE_ACTIVEXUSERAPPROVAL = 0x2000000,
    OLECMDIDF_PAGEACTION_WPCBLOCKED = 0x4000000,
    OLECMDIDF_PAGEACTION_WPCBLOCKED_ACTIVEX = 0x8000000,
    OLECMDIDF_PAGEACTION_EXTENSION_COMPAT_BLOCKED = 0x10000000,
    OLECMDIDF_PAGEACTION_NORESETACTIVEX = 0x20000000,
    OLECMDIDF_PAGEACTION_GENERIC_STATE = 0x40000000,
    OLECMDIDF_PAGEACTION_RESET = -2147483648
};

typedef enum OLECMDID_REFRESHFLAG {
    OLECMDIDF_REFRESH_NORMAL = 0,
    OLECMDIDF_REFRESH_IFEXPIRED = 1,
    OLECMDIDF_REFRESH_CONTINUE = 2,
    OLECMDIDF_REFRESH_COMPLETELY = 3,
    OLECMDIDF_REFRESH_NO_CACHE = 4,
    OLECMDIDF_REFRESH_RELOAD = 5,
    OLECMDIDF_REFRESH_LEVELMASK = 255,
    OLECMDIDF_REFRESH_CLEARUSERINPUT = 4096,
    OLECMDIDF_REFRESH_PROMPTIFOFFLINE = 8192,
    OLECMDIDF_REFRESH_THROUGHSCRIPT = 16384,
    OLECMDIDF_REFRESH_SKIPBEFOREUNLOADEVENT = 0x8000,
    OLECMDIDF_REFRESH_PAGEACTION_ACTIVEXINSTALL = 0x10000,
    OLECMDIDF_REFRESH_PAGEACTION_FILEDOWNLOAD = 0x20000,
    OLECMDIDF_REFRESH_PAGEACTION_LOCALMACHINE = 0x40000,
    OLECMDIDF_REFRESH_PAGEACTION_POPUPWINDOW = 0x80000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNLOCALMACHINE = 0x100000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNTRUSTED = 0x200000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTRANET = 0x400000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNINTERNET = 0x800000,
    OLECMDIDF_REFRESH_PAGEACTION_PROTLOCKDOWNRESTRICTED = 0x1000000,
    OLECMDIDF_REFRESH_PAGEACTION_MIXEDCONTENT = 0x2000000,
    OLECMDIDF_REFRESH_PAGEACTION_INVALID_CERT = 0x4000000,
    OLECMDIDF_REFRESH_PAGEACTION_ALLOW_VERSION = 0x8000000
};

typedef enum OLECMDID_VIEWPORT_MODE_FLAG {
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH = 1,
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM = 2,
    OLECMDIDF_VIEWPORTMODE_FIXED_LAYOUT_WIDTH_VALID = 0x10000,
    OLECMDIDF_VIEWPORTMODE_EXCLUDE_VISUAL_BOTTOM_VALID = 0x20000
};

typedef enum OLECMDID_WINDOWSTATE_FLAG {
    OLECMDIDF_WINDOWSTATE_USERVISIBLE = 1,
    OLECMDIDF_WINDOWSTATE_ENABLED = 2,
    OLECMDIDF_WINDOWSTATE_USERVISIBLE_VALID = 0x10000,
    OLECMDIDF_WINDOWSTATE_ENABLED_VALID = 0x20000
};

typedef enum OLECMDTEXTF {
    OLECMDTEXTF_NONE = 0,
    OLECMDTEXTF_NAME = 1,
    OLECMDTEXTF_STATUS = 2
};

typedef enum OLE_TRISTATE {
    triUnchecked = 0,
    triChecked = 1,
    triGray = 2
};

typedef enum OPENBOXSTATES {
    SPOB_NORMAL = 1,
    SPOB_HOT = 2,
    SPOB_SELECTED = 3,
    SPOB_DISABLED = 4,
    SPOB_FOCUSED = 5
};

typedef enum OPERATION_INTERRUPT_RESPONSE_SINGLE {
    OIRS_ELEVATE = 1,
    OIRS_DELETE = 2,
    OIRS_SKIP = 3,
    OIRS_CANCEL = 4,
    OIRS_RETRY = 5,
    OIRS_YES = 6,
    OIRS_OK = 7,
    OIRS_NO = 8,
    OIRS_KEEPSOURCE = 9,
    OIRS_KEEPDEST = 10,
    OIRS_KEEPBOTH = 11,
    OIRS_KEEPASWORK = 12,
    OIRS_KEEPASPERSONAL = 13
};

typedef enum OPERATION_MODE {
    OM_PREPARING = 1,
    OM_RUNNING = 2,
    OM_INDETERMINATE = 3,
    OM_INTERRUPTED = 4
};

typedef enum OPERATION_TYPE {
    OT_NONE = 0,
    OT_COPY = 1,
    OT_MOVE = 2,
    OT_RECYCLE = 3,
    OT_DELETE = 4,
    OT_RENAME = 5,
    OT_APPLYPROPS = 6,
    OT_DOWNLOAD = 7,
    OT_MOVE_AS_COPY_DELETE = 8
};

typedef enum ORIENTATION_PREFERENCE {
    ORIENTATION_PREFERENCE_NONE = 0,
    ORIENTATION_PREFERENCE_LANDSCAPE = 1,
    ORIENTATION_PREFERENCE_PORTRAIT = 2,
    ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4,
    ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8
};

typedef enum OfflineFolderStatus {
    OFS_INACTIVE = -1,
    OFS_ONLINE = 0,
    OFS_OFFLINE = 1,
    OFS_SERVERBACK = 2,
    OFS_DIRTYCACHE = 3
};

typedef enum PACKAGE_EXECUTION_STATE {
    PES_UNKNOWN = 0,
    PES_RUNNING = 1,
    PES_SUSPENDING = 2,
    PES_SUSPENDED = 3,
    PES_TERMINATED = 4
};

typedef enum PAGEACTION_UI {
    PAGEACTION_UI_DEFAULT = 0,
    PAGEACTION_UI_MODAL = 1,
    PAGEACTION_UI_MODELESS = 2,
    PAGEACTION_UI_SILENT = 3
};

typedef enum PAGEPARTS {
    PGRP_UP = 1,
    PGRP_DOWN = 2,
    PGRP_UPHORZ = 3,
    PGRP_DOWNHORZ = 4
};

typedef enum PAUSEBTNSTATES {
    PSE_NORMALEXECUTING = 1,
    PSE_HOTEXECUTING = 2,
    PSE_PRESSEDEXECUTING = 3,
    PSE_HOTPAUSED = 4,
    PSE_DISABLEDEXECUTING = 5,
    PSE_DISABLEDPAUSED = 6,
    PSE_NORMALPAUSED = 7,
    PSE_PRESSEDPAUSED = 8
};

typedef enum PAUSEPARTS {
    PSE_PAUSEBTN = 1
};

typedef enum PDOPSTATUS {
    PDOPS_RUNNING = 1,
    PDOPS_PAUSED = 2,
    PDOPS_CANCELLED = 3,
    PDOPS_STOPPED = 4,
    PDOPS_ERRORS = 5
};

typedef enum PEEKSTATES {
    TA_PEEK_TARGET = 1
};

typedef enum PERSIST_SPROPSTORE_FLAGS_PRIV {
    FPSPSP_DEFAULT = 0,
    FPSPSP_ASSUME_NO_DUPLICATES = 1,
    FPSPSP_ENABLE_ISDIRTY_DIFFING = 2
};

typedef enum PFNIDX {
    PFNIDX_IMAGELIST_QIPROC = 0,
    PFNIDX_DRAWSHADOWTEXT = 1,
    PFNIDX_DRAWSIZEBOX = 2,
    PFNIDX_DRAWSCROLLBAR = 3,
    PFNIDX_SIZEBOXHWND = 4,
    PFNIDX_SCROLLBAR_MOUSEMOVE = 5,
    PFNIDX_SCROLLBAR_MENU = 6,
    PFNIDX_HANDLESCROLLCMD = 7,
    PFNIDX_DETACHSCROLLBARS = 8,
    PFNIDX_ATTACHSCROLLBARS = 9,
    PFNIDX_SETSCROLLINFO = 10,
    PFNIDX_GETSCROLLINFO = 11,
    PFNIDX_ENABLESCROLLBAR = 12,
    PFNIDX_QUERYSYSTEMGESTURESTATUS = 13,
    PFNIDX_LAST = 14
};

typedef enum PICKER_TYPE {
    PICKER_TYPE_OPEN = 0,
    PICKER_TYPE_SAVE = 1,
    PICKER_TYPE_CONTACTS = 2,
    PICKER_TYPE_FILE_UPDATE = 3
};

typedef enum PIDMSI_STATUS_VALUE {
    PIDMSI_STATUS_NORMAL = 0,
    PIDMSI_STATUS_NEW = 1,
    PIDMSI_STATUS_PRELIM = 2,
    PIDMSI_STATUS_DRAFT = 3,
    PIDMSI_STATUS_INPROGRESS = 4,
    PIDMSI_STATUS_EDIT = 5,
    PIDMSI_STATUS_REVIEW = 6,
    PIDMSI_STATUS_PROOF = 7,
    PIDMSI_STATUS_FINAL = 8,
    PIDMSI_STATUS_OTHER = 32767
};

typedef enum PINNEDLISTMODIFYCALLER {
    PMC_APPRESOLVERMIGRATION = 0,
    PMC_APPRESOLVERUNINSTALL = 1,
    PMC_APPRESOLVERUNPINUNIQUEID = 2,
    PMC_CONTENTDELIVERYMANAGERBROKER = 3,
    PMC_CONTEXTMENU = 4,
    PMC_DEFAULTMFUCHANGE = 5,
    PMC_DEFAULTMFUPIN = 6,
    PMC_DEFAULTMFUPINAUX = 7,
    PMC_DEFAULTMFUTRYPIN = 8,
    PMC_DEFAULTMFUUPGRADE = 9,
    PMC_IEXPLORERCOMMAND = 10,
    PMC_JUMPVIEWBROKER = 11,
    PMC_PINNEDLISTLAYOUT = 12,
    PMC_PINNEDLISTNONEXIST = 13,
    PMC_PINNEDLISTREORDERLAYOUT = 14,
    PMC_PINNEDLISTUNRESOLVE = 15,
    PMC_RETAILDEMO = 16,
    PMC_SHELLLINK = 17,
    PMC_STARTMENU = 18,
    PMC_STARTMNU = 19,
    PMC_TASKBANDBADSHORTCUT = 20,
    PMC_TASKBANDBROKENPIN = 21,
    PMC_TASKBANDDEDUPPIN = 22,
    PMC_TASKBANDINSERT = 23,
    PMC_TASKBANDMODIFY = 24,
    PMC_TASKBANDPIN = 25,
    PMC_TASKBANDPINGROUP = 26,
    PMC_TASKBANDREORDER = 27,
    PMC_TASKBARPINNABLESURFACEBROKER = 28,
    PMC_TASKBARPINNABLESURFACEBROKERMIGRATION = 29,
    PMC_TASKBARPINNINGBROKERFACTORY = 30,
    PMC_TESTCODE = 31,
    PMC_UNIFIEDTILEMODELBROKER = 32
};

typedef enum PKA_FLAGS {
    PKA_SET = 0,
    PKA_APPEND = 1,
    PKA_DELETE = 2
};

typedef enum PLACEHOLDER_STATES {
    PS_NONE = 0,
    PS_MARKED_FOR_OFFLINE_AVAILABILITY = 1,
    PS_FULL_PRIMARY_STREAM_AVAILABLE = 2,
    PS_CREATE_FILE_ACCESSIBLE = 4,
    PS_CLOUDFILE_PLACEHOLDER = 8,
    PS_DEFAULT = 7,
    PS_ALL = 15
};

typedef enum PLATEAU {
    PL_1_0x = 0,
    PL_1_4x = 1,
    PL_1_8x = 2
};

typedef enum PLATEAU_INDEX {
    DPI_PLATEAU_UNSUPPORTED = -1,
    DPI_PLATEAU_96 = 0,
    DPI_PLATEAU_120 = 1,
    DPI_PLATEAU_144 = 2,
    DPI_PLATEAU_192 = 3,
    DPI_PLATEAU_240 = 4,
    DPI_PLATEAU_288 = 5,
    DPI_PLATEAU_384 = 6,
    DPI_PLATEAU_COUNT = 7
};

typedef enum POINTERDOWNSTATES {
    TA_POINTERDOWN_TARGET = 1
};

typedef enum POINTERUPSTATES {
    TA_POINTERUP_TARGET = 1
};

typedef enum POINTER_FEEDBACK_MODE {
    POINTER_FEEDBACK_DEFAULT = 1,
    POINTER_FEEDBACK_INDIRECT = 2,
    POINTER_FEEDBACK_NONE = 3
};

typedef enum POPUPCHECKBACKGROUNDSTATES {
    MCB_DISABLED = 1,
    MCB_NORMAL = 2,
    MCB_BITMAP = 3
};

typedef enum POPUPCHECKSTATES {
    MC_CHECKMARKNORMAL = 1,
    MC_CHECKMARKDISABLED = 2,
    MC_BULLETNORMAL = 3,
    MC_BULLETDISABLED = 4
};

typedef enum POPUPITEMSTATES {
    MPI_NORMAL = 1,
    MPI_HOT = 2,
    MPI_DISABLED = 3,
    MPI_DISABLEDHOT = 4
};

typedef enum POPUPSUBMENUSTATES {
    MSM_NORMAL = 1,
    MSM_DISABLED = 2
};

typedef enum POWER_ACTION {
    PowerActionNone = 0,
    PowerActionReserved = 1,
    PowerActionSleep = 2,
    PowerActionHibernate = 3,
    PowerActionShutdown = 4,
    PowerActionShutdownReset = 5,
    PowerActionShutdownOff = 6,
    PowerActionWarmEject = 7,
    PowerActionDisplayOff = 8
};

typedef enum POWER_INFORMATION_LEVEL {
    SystemPowerPolicyAc = 0,
    SystemPowerPolicyDc = 1,
    VerifySystemPolicyAc = 2,
    VerifySystemPolicyDc = 3,
    SystemPowerCapabilities = 4,
    SystemBatteryState = 5,
    SystemPowerStateHandler = 6,
    ProcessorStateHandler = 7,
    SystemPowerPolicyCurrent = 8,
    AdministratorPowerPolicy = 9,
    SystemReserveHiberFile = 10,
    ProcessorInformation = 11,
    SystemPowerInformation = 12,
    ProcessorStateHandler2 = 13,
    LastWakeTime = 14,
    LastSleepTime = 15,
    SystemExecutionState = 16,
    SystemPowerStateNotifyHandler = 17,
    ProcessorPowerPolicyAc = 18,
    ProcessorPowerPolicyDc = 19,
    VerifyProcessorPowerPolicyAc = 20,
    VerifyProcessorPowerPolicyDc = 21,
    ProcessorPowerPolicyCurrent = 22,
    SystemPowerStateLogging = 23,
    SystemPowerLoggingEntry = 24,
    SetPowerSettingValue = 25,
    NotifyUserPowerSetting = 26,
    PowerInformationLevelUnused0 = 27,
    SystemMonitorHiberBootPowerOff = 28,
    SystemVideoState = 29,
    TraceApplicationPowerMessage = 30,
    TraceApplicationPowerMessageEnd = 31,
    ProcessorPerfStates = 32,
    ProcessorIdleStates = 33,
    ProcessorCap = 34,
    SystemWakeSource = 35,
    SystemHiberFileInformation = 36,
    TraceServicePowerMessage = 37,
    ProcessorLoad = 38,
    PowerShutdownNotification = 39,
    MonitorCapabilities = 40,
    SessionPowerInit = 41,
    SessionDisplayState = 42,
    PowerRequestCreate = 43,
    PowerRequestAction = 44,
    GetPowerRequestList = 45,
    ProcessorInformationEx = 46,
    NotifyUserModeLegacyPowerEvent = 47,
    GroupPark = 48,
    ProcessorIdleDomains = 49,
    WakeTimerList = 50,
    SystemHiberFileSize = 51,
    ProcessorIdleStatesHv = 52,
    ProcessorPerfStatesHv = 53,
    ProcessorPerfCapHv = 54,
    ProcessorSetIdle = 55,
    LogicalProcessorIdling = 56,
    UserPresence = 57,
    PowerSettingNotificationName = 58,
    GetPowerSettingValue = 59,
    IdleResiliency = 60,
    SessionRITState = 61,
    SessionConnectNotification = 62,
    SessionPowerCleanup = 63,
    SessionLockState = 64,
    SystemHiberbootState = 65,
    PlatformInformation = 66,
    PdcInvocation = 67,
    MonitorInvocation = 68,
    FirmwareTableInformationRegistered = 69,
    SetShutdownSelectedTime = 70,
    SuspendResumeInvocation = 71,
    PlmPowerRequestCreate = 72,
    ScreenOff = 73,
    CsDeviceNotification = 74,
    PlatformRole = 75,
    LastResumePerformance = 76,
    DisplayBurst = 77,
    ExitLatencySamplingPercentage = 78,
    RegisterSpmPowerSettings = 79,
    PlatformIdleStates = 80,
    ProcessorIdleVeto = 81,
    PlatformIdleVeto = 82,
    SystemBatteryStatePrecise = 83,
    ThermalEvent = 84,
    PowerRequestActionInternal = 85,
    BatteryDeviceState = 86,
    PowerInformationInternal = 87,
    ThermalStandby = 88,
    SystemHiberFileType = 89,
    PhysicalPowerButtonPress = 90,
    QueryPotentialDripsConstraint = 91,
    EnergyTrackerCreate = 92,
    EnergyTrackerQuery = 93,
    UpdateBlackBoxRecorder = 94,
    PowerInformationLevelMaximum = 95
};

typedef enum POWER_MONITOR_REQUEST_REASON {
    MonitorRequestReasonUnknown = 0,
    MonitorRequestReasonPowerButton = 1,
    MonitorRequestReasonRemoteConnection = 2,
    MonitorRequestReasonScMonitorpower = 3,
    MonitorRequestReasonUserInput = 4,
    MonitorRequestReasonAcDcDisplayBurst = 5,
    MonitorRequestReasonUserDisplayBurst = 6,
    MonitorRequestReasonPoSetSystemState = 7,
    MonitorRequestReasonSetThreadExecutionState = 8,
    MonitorRequestReasonFullWake = 9,
    MonitorRequestReasonSessionUnlock = 10,
    MonitorRequestReasonScreenOffRequest = 11,
    MonitorRequestReasonIdleTimeout = 12,
    MonitorRequestReasonPolicyChange = 13,
    MonitorRequestReasonSleepButton = 14,
    MonitorRequestReasonLid = 15,
    MonitorRequestReasonBatteryCountChange = 16,
    MonitorRequestReasonGracePeriod = 17,
    MonitorRequestReasonPnP = 18,
    MonitorRequestReasonDP = 19,
    MonitorRequestReasonSxTransition = 20,
    MonitorRequestReasonSystemIdle = 21,
    MonitorRequestReasonNearProximity = 22,
    MonitorRequestReasonThermalStandby = 23,
    MonitorRequestReasonResumePdc = 24,
    MonitorRequestReasonResumeS4 = 25,
    MonitorRequestReasonTerminal = 26,
    MonitorRequestReasonPdcSignal = 27,
    MonitorRequestReasonAcDcDisplayBurstSuppressed = 28,
    MonitorRequestReasonSystemStateEntered = 29,
    MonitorRequestReasonWinrt = 30,
    MonitorRequestReasonUserInputKeyboard = 31,
    MonitorRequestReasonUserInputMouse = 32,
    MonitorRequestReasonUserInputTouch = 33,
    MonitorRequestReasonUserInputPen = 34,
    MonitorRequestReasonUserInputAccelerometer = 35,
    MonitorRequestReasonUserInputHid = 36,
    MonitorRequestReasonUserInputPoUserPresent = 37,
    MonitorRequestReasonUserInputSessionSwitch = 38,
    MonitorRequestReasonUserInputInitialization = 39,
    MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40,
    MonitorRequestReasonPdcSignalWindowsMobileShell = 41,
    MonitorRequestReasonPdcSignalHeyCortana = 42,
    MonitorRequestReasonPdcSignalHolographicShell = 43,
    MonitorRequestReasonPdcSignalFingerprint = 44,
    MonitorRequestReasonDirectedDrips = 45,
    MonitorRequestReasonMax = 46
};

typedef enum POWER_STATE_DISABLED_TYPE {
    PoDisabledStateSleeping1 = 0,
    PoDisabledStateSleeping2 = 1,
    PoDisabledStateSleeping3 = 2,
    PoDisabledStateSleeping4 = 3,
    PoDisabledStateSleeping0Idle = 4,
    PoDisabledStateReserved5 = 5,
    PoDisabledStateSleeping4Firmware = 6,
    PoDisabledStateMaximum = 7
};

typedef enum POWER_STATE_HANDLER_TYPE {
    PowerStateSleeping1 = 0,
    PowerStateSleeping2 = 1,
    PowerStateSleeping3 = 2,
    PowerStateSleeping4 = 3,
    PowerStateShutdownOff = 4,
    PowerStateShutdownReset = 5,
    PowerStateSleeping4Firmware = 6,
    PowerStateMaximum = 7
};

typedef enum POWER_USER_PRESENCE_TYPE {
    UserNotPresent = 0,
    UserPresent = 1,
    UserUnknown = 255
};

typedef enum PO_FIXED_WAKE_SOURCE_TYPE {
    FixedWakeSourcePowerButton = 0,
    FixedWakeSourceSleepButton = 1,
    FixedWakeSourceRtc = 2,
    FixedWakeSourceDozeToHibernate = 3
};

typedef enum PO_INTERNAL_WAKE_SOURCE_TYPE {
    InternalWakeSourceDozeToHibernate = 0,
    InternalWakeSourcePredictedUserPresence = 1
};

typedef enum PO_WAKE_SOURCE_TYPE {
    DeviceWakeSourceType = 0,
    FixedWakeSourceType = 1,
    TimerWakeSourceType = 2,
    TimerPresumedWakeSourceType = 3,
    InternalWakeSourceType = 4
};

typedef enum PREVIEWBACKGROUNDSTATES {
    PPS_HORIZONTAL = 1,
    PPS_VERTICAL = 2
};

typedef enum PREVIEWPANEPARTS {
    PP_PREVIEWBACKGROUND = 1,
    PP_EDITPROPERTIES = 2,
    PP_NAVPANESIZER = 3,
    PP_READINGPANESIZER = 4,
    PP_TITLE = 5,
    PP_LABEL = 6,
    PP_VALUE = 7,
    PP_LABELCID = 8,
    PP_VALUECID = 9
};

typedef enum PRINT_EXECUTION_CONTEXT {
    PRINT_EXECUTION_CONTEXT_APPLICATION = 0,
    PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE = 1,
    PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST = 2,
    PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE = 3,
    PRINT_EXECUTION_CONTEXT_WOW64 = 4
};

typedef enum PROCESS_DPI_AWARENESS {
    PROCESS_DPI_UNINITIALIZED = -1,
    PROCESS_DPI_UNAWARE = 0,
    PROCESS_SYSTEM_DPI_AWARE = 1,
    PROCESS_PER_MONITOR_DPI_AWARE = 2
};

typedef enum PROCESS_UICONTEXT {
    PROCESS_UICONTEXT_DESKTOP = 0,
    PROCESS_UICONTEXT_IMMERSIVE = 1,
    PROCESS_UICONTEXT_IMMERSIVE_BROKER = 2,
    PROCESS_UICONTEXT_IMMERSIVE_BROWSER = 3
};

typedef enum PROCESS_UI_FLAGS {
    PROCESS_UIF_NONE = 0,
    PROCESS_UIF_AUTHORING_MODE = 1,
    PROCESS_UIF_RESTRICTIONS_DISABLED = 2
};

typedef enum PROGRESSPARTS {
    PP_BAR = 1,
    PP_BARVERT = 2,
    PP_CHUNK = 3,
    PP_CHUNKVERT = 4,
    PP_FILL = 5,
    PP_FILLVERT = 6,
    PP_PULSEOVERLAY = 7,
    PP_MOVEOVERLAY = 8,
    PP_PULSEOVERLAYVERT = 9,
    PP_MOVEOVERLAYVERT = 10,
    PP_TRANSPARENTBAR = 11,
    PP_TRANSPARENTBARVERT = 12
};

typedef enum PROPCTL_RECT_TYPE {
    PCRT_MINIMUM = 0,
    PCRT_IDEAL = 1
};

typedef enum PROPDESC_AGGREGATION_TYPE {
    PDAT_DEFAULT = 0,
    PDAT_FIRST = 1,
    PDAT_SUM = 2,
    PDAT_AVERAGE = 3,
    PDAT_DATERANGE = 4,
    PDAT_UNION = 5,
    PDAT_MAX = 6,
    PDAT_MIN = 7
};

typedef enum PROPDESC_COLUMNINDEX_TYPE {
    PDCIT_NONE = 0,
    PDCIT_ONDISK = 1,
    PDCIT_INMEMORY = 2,
    PDCIT_ONDEMAND = 3,
    PDCIT_ONDISKALL = 4,
    PDCIT_ONDISKVECTOR = 5
};

typedef enum PROPDESC_CONDITION_TYPE {
    PDCOT_NONE = 0,
    PDCOT_STRING = 1,
    PDCOT_SIZE = 2,
    PDCOT_DATETIME = 3,
    PDCOT_BOOLEAN = 4,
    PDCOT_NUMBER = 5
};

typedef enum PROPDESC_DISPLAYTYPE {
    PDDT_STRING = 0,
    PDDT_NUMBER = 1,
    PDDT_BOOLEAN = 2,
    PDDT_DATETIME = 3,
    PDDT_ENUMERATED = 4
};

typedef enum PROPDESC_ENUMFILTER {
    PDEF_ALL = 0,
    PDEF_SYSTEM = 1,
    PDEF_NONSYSTEM = 2,
    PDEF_VIEWABLE = 3,
    PDEF_QUERYABLE = 4,
    PDEF_INFULLTEXTQUERY = 5,
    PDEF_COLUMN = 6
};

typedef enum PROPDESC_FORMAT_FLAGS {
    PDFF_DEFAULT = 0,
    PDFF_PREFIXNAME = 1,
    PDFF_FILENAME = 2,
    PDFF_ALWAYSKB = 4,
    PDFF_RESERVED_RIGHTTOLEFT = 8,
    PDFF_SHORTTIME = 16,
    PDFF_LONGTIME = 32,
    PDFF_HIDETIME = 64,
    PDFF_SHORTDATE = 128,
    PDFF_LONGDATE = 256,
    PDFF_HIDEDATE = 512,
    PDFF_RELATIVEDATE = 1024,
    PDFF_USEEDITINVITATION = 2048,
    PDFF_READONLY = 4096,
    PDFF_NOAUTOREADINGORDER = 8192
};

typedef enum PROPDESC_GROUPING_RANGE {
    PDGR_DISCRETE = 0,
    PDGR_ALPHANUMERIC = 1,
    PDGR_SIZE = 2,
    PDGR_DYNAMIC = 3,
    PDGR_DATE = 4,
    PDGR_PERCENT = 5,
    PDGR_ENUMERATED = 6
};

typedef enum PROPDESC_RELATIVEDESCRIPTION_TYPE {
    PDRDT_GENERAL = 0,
    PDRDT_DATE = 1,
    PDRDT_SIZE = 2,
    PDRDT_COUNT = 3,
    PDRDT_REVISION = 4,
    PDRDT_LENGTH = 5,
    PDRDT_DURATION = 6,
    PDRDT_SPEED = 7,
    PDRDT_RATE = 8,
    PDRDT_RATING = 9,
    PDRDT_PRIORITY = 10
};

typedef enum PROPDESC_SEARCHINFO_FLAGS {
    PDSIF_DEFAULT = 0,
    PDSIF_ININVERTEDINDEX = 1,
    PDSIF_ISCOLUMN = 2,
    PDSIF_ISCOLUMNSPARSE = 4,
    PDSIF_ALWAYSINCLUDE = 8,
    PDSIF_USEFORTYPEAHEAD = 16
};

typedef enum PROPDESC_SORTDESCRIPTION {
    PDSD_GENERAL = 0,
    PDSD_A_Z = 1,
    PDSD_LOWEST_HIGHEST = 2,
    PDSD_SMALLEST_BIGGEST = 3,
    PDSD_OLDEST_NEWEST = 4
};

typedef enum PROPDESC_TYPE_FLAGS {
    PDTF_DEFAULT = 0,
    PDTF_MULTIPLEVALUES = 1,
    PDTF_ISINNATE = 2,
    PDTF_ISGROUP = 4,
    PDTF_CANGROUPBY = 8,
    PDTF_CANSTACKBY = 16,
    PDTF_ISTREEPROPERTY = 32,
    PDTF_INCLUDEINFULLTEXTQUERY = 64,
    PDTF_ISVIEWABLE = 128,
    PDTF_ISQUERYABLE = 256,
    PDTF_CANBEPURGED = 512,
    PDTF_SEARCHRAWVALUE = 1024,
    PDTF_DONTCOERCEEMPTYSTRINGS = 2048,
    PDTF_ALWAYSINSUPPLEMENTALSTORE = 4096,
    PDTF_ISSYSTEMPROPERTY = -2147483648,
    PDTF_MASK_ALL = -2147475457
};

typedef enum PROPDESC_TYPE_FLAGS_EX {
    PDTF_EX_DEFAULT = 0,
    PDTF_EX_ISNONSTREAMPIIPROPERTY = 1
};

typedef enum PROPDESC_VIEW_FLAGS {
    PDVF_DEFAULT = 0,
    PDVF_CENTERALIGN = 1,
    PDVF_RIGHTALIGN = 2,
    PDVF_BEGINNEWGROUP = 4,
    PDVF_FILLAREA = 8,
    PDVF_SORTDESCENDING = 16,
    PDVF_SHOWONLYIFPRESENT = 32,
    PDVF_SHOWBYDEFAULT = 64,
    PDVF_SHOWINPRIMARYLIST = 128,
    PDVF_SHOWINSECONDARYLIST = 256,
    PDVF_HIDELABEL = 512,
    PDVF_HIDDEN = 2048,
    PDVF_CANWRAP = 4096,
    PDVF_MASK_ALL = 7167
};

typedef enum PROPENUMTYPE {
    PET_DISCRETEVALUE = 0,
    PET_RANGEDVALUE = 1,
    PET_DEFAULTVALUE = 2,
    PET_ENDRANGE = 3
};

typedef enum PROPERTREEPARTS {
    PTP_FOLDERSHEADER = 1,
    PTP_BACKGROUND = 2
};

typedef enum PROPERTYORIGIN {
    PO_STATE = 0,
    PO_PART = 1,
    PO_CLASS = 2,
    PO_GLOBAL = 3,
    PO_NOTFOUND = 4
};

typedef enum PROPERTYSTATES {
    IVP_SUBPROPERTY = 1,
    IVP_FILENAMEPROPERTY = 2,
    IVP_FILENAMESELECTEDPROPERTY = 3,
    IVP_SUBPROPERTYSELECTED = 4,
    IVP_FILENAMECOMPRESSEDPROPERTY = 5,
    IVP_FILENAMESELECTEDCOMPRESSEDPROPERTY = 6,
    IVP_FILENAMEENCRYPTEDPROPERTY = 7,
    IVP_FILENAMESELECTEDENCRYPTEDPROPERTY = 8,
    IVP_FILENAMEDISCONNECTEDPROPERTY = 9,
    IVP_FILENAMESELECTEDDISCONNECTEDPROPERTY = 10,
    IVP_CONFLICTTILETEXT = 11,
    IVP_CONFLICTTILETEXTFOCUSED = 12,
    IVP_PROGRESSBAR = 13
};

typedef enum PROPGROUPTYPE {
    PGT_CUBICBEZIER = 0,
    PGT_STAGGER = 1,
    PGT_BACKGROUND = 2,
    PGT_TRANSFORM_BEGIN = 3,
    PGT_TRANSLATE2D = 4,
    PGT_SCALE2D = 5,
    PGT_ROTATE2D = 6,
    PGT_SKEW2D = 7,
    PGT_TRANSLATE3D = 8,
    PGT_SCALE3D = 9,
    PGT_ROTATE3D = 10,
    PGT_OPACITY = 11,
    PGT_CLIP = 12,
    PGT_TRANSFORM_END = 13
};

typedef enum PROPVAR_COMPARE_UNIT {
    PVCU_DEFAULT = 0,
    PVCU_SECOND = 1,
    PVCU_MINUTE = 2,
    PVCU_HOUR = 3,
    PVCU_DAY = 4,
    PVCU_MONTH = 5,
    PVCU_YEAR = 6
};

typedef enum PROXY_PHASE {
    PROXY_CALCSIZE = 0,
    PROXY_GETBUFFER = 1,
    PROXY_MARSHAL = 2,
    PROXY_SENDRECEIVE = 3,
    PROXY_UNMARSHAL = 4
};

typedef enum PSC_STATE {
    PSC_NORMAL = 0,
    PSC_NOTINSOURCE = 1,
    PSC_DIRTY = 2,
    PSC_READONLY = 3
};

typedef enum PS_CREATE_STATE {
    PsCreateInitialState = 0,
    PsCreateFailOnFileOpen = 1,
    PsCreateFailOnSectionCreate = 2,
    PsCreateFailExeFormat = 3,
    PsCreateFailMachineMismatch = 4,
    PsCreateFailExeName = 5,
    PsCreateSuccess = 6,
    PsCreateMaximumStates = 7
};

typedef enum PUSHBUTTONDROPDOWNSTATES {
    PBDDS_NORMAL = 1,
    PBDDS_DISABLED = 2
};

typedef enum PUSHBUTTONSTATES {
    PBS_NORMAL = 1,
    PBS_HOT = 2,
    PBS_PRESSED = 3,
    PBS_DISABLED = 4,
    PBS_DEFAULTED = 5,
    PBS_DEFAULTED_ANIMATING = 6
};

typedef enum QUERYNAMESPACEINFO_MASK {
    ASFQNSI_FLAGS = 1,
    ASFQNSI_FOLDER = 2,
    ASFQNSI_GUID = 4,
    ASFQNSI_PIDL = 8,
    ASFQNSI_GROUPID = 16
};

typedef enum QUERY_USER_NOTIFICATION_STATE {
    QUNS_NOT_PRESENT = 1,
    QUNS_BUSY = 2,
    QUNS_RUNNING_D3D_FULL_SCREEN = 3,
    QUNS_PRESENTATION_MODE = 4,
    QUNS_ACCEPTS_NOTIFICATIONS = 5,
    QUNS_QUIET_TIME = 6,
    QUNS_APP = 7
};

typedef enum RADIOBUTTONSTATES {
    RBS_UNCHECKEDNORMAL = 1,
    RBS_UNCHECKEDHOT = 2,
    RBS_UNCHECKEDPRESSED = 3,
    RBS_UNCHECKEDDISABLED = 4,
    RBS_CHECKEDNORMAL = 5,
    RBS_CHECKEDHOT = 6,
    RBS_CHECKEDPRESSED = 7,
    RBS_CHECKEDDISABLED = 8
};

typedef enum RAISEDESKTOPFLAGS {
    RDF_LOWER = 0,
    RDF_RAISE = 1,
    RDF_RESTORE_WINDOWS = 2,
    RDF_SYNC = 4
};

typedef enum READER_SEL_REQUEST_MATCH_TYPE {
    RSR_MATCH_TYPE_READER_AND_CONTAINER = 1,
    RSR_MATCH_TYPE_SERIAL_NUMBER = 2,
    RSR_MATCH_TYPE_ALL_CARDS = 3
};

typedef enum READINGPANEPARTS {
    RP_BACKGROUNDCOLORS = 1,
    RP_LABEL = 2
};

typedef enum READONLYSTATES {
    CBRO_NORMAL = 1,
    CBRO_HOT = 2,
    CBRO_PRESSED = 3,
    CBRO_DISABLED = 4
};

typedef enum REBARPARTS {
    RP_GRIPPER = 1,
    RP_GRIPPERVERT = 2,
    RP_BAND = 3,
    RP_CHEVRON = 4,
    RP_CHEVRONVERT = 5,
    RP_BACKGROUND = 6,
    RP_SPLITTER = 7,
    RP_SPLITTERVERT = 8
};

typedef enum REMOTEAPP_HD_SUPPORT_LEVEL {
    REMOTEAPP_HD_SUPPORT_LEVEL_UNSUPPORTED = 0,
    REMOTEAPP_HD_SUPPORT_LEVEL_DEFAULT = 1,
    REMOTEAPP_HD_SUPPORT_LEVEL_SW_GPU_MODE = 2,
    REMOTEAPP_HD_SUPPORT_LEVEL_HW_GPU_MODE = 3,
    REMOTEAPP_HD_SUPPORT_LEVEL_MAX = 3
};

typedef enum REMOVEITEMTYPE {
    RIT_DEFAULT = 0,
    RIT_DELETE = 1
};

typedef enum REPARSE_PARTIAL_IDLIST_MODE {
    REPARSE_PARTIAL_AS_SIMPLE = 0,
    REPARSE_PARTIAL_AS_REAL = 1
};

typedef enum REPOSITIONSTATES {
    TA_REPOSITION_TARGET = 1
};

typedef enum RESERVED_RESOURCE_RANGE {
    RES_RESERVED_MIN = 100,
    RES_RESERVED_MAX = 500
};

typedef enum RESOLUTION_TYPE {
    RT_REPLACE = 1,
    RT_SKIP = 2,
    RT_DECIDEFOREACH = 3,
    RT_KEEPASWORK = 4,
    RT_KEEPASPERSONAL = 5,
    RT_IGNORE = 6
};

typedef enum RESTOREBUTTONSTATES {
    RBS_NORMAL = 1,
    RBS_HOT = 2,
    RBS_PUSHED = 3,
    RBS_DISABLED = 4
};

typedef enum RESTRICTIONS {
    REST_NONE = 0,
    REST_NORUN = 1,
    REST_NOCLOSE = 2,
    REST_NOSAVESET = 4,
    REST_NOFILEMENU = 8,
    REST_NOSETFOLDERS = 16,
    REST_NOSETTASKBAR = 32,
    REST_NODESKTOP = 64,
    REST_NOFIND = 128,
    REST_NODRIVES = 256,
    REST_NODRIVEAUTORUN = 512,
    REST_NODRIVETYPEAUTORUN = 1024,
    REST_NONETHOOD = 2048,
    REST_STARTBANNER = 4096,
    REST_RESTRICTRUN = 8192,
    REST_NOPRINTERTABS = 16384,
    REST_NOPRINTERDELETE = 0x8000,
    REST_NOPRINTERADD = 0x10000,
    REST_NOSTARTMENUSUBFOLDERS = 0x20000,
    REST_MYDOCSONNET = 0x40000,
    REST_NOEXITTODOS = 0x80000,
    REST_ENFORCESHELLEXTSECURITY = 0x100000,
    REST_LINKRESOLVEIGNORELINKINFO = 0x200000,
    REST_NOCOMMONGROUPS = 0x400000,
    REST_SEPARATEDESKTOPPROCESS = 0x800000,
    REST_NOWEB = 0x1000000,
    REST_NOTRAYCONTEXTMENU = 0x2000000,
    REST_NOVIEWCONTEXTMENU = 0x4000000,
    REST_NONETCONNECTDISCONNECT = 0x8000000,
    REST_STARTMENULOGOFF = 0x10000000,
    REST_NOSETTINGSASSIST = 0x20000000,
    REST_NOINTERNETICON = 0x40000001,
    REST_NORECENTDOCSHISTORY = 0x40000002,
    REST_NORECENTDOCSMENU = 0x40000003,
    REST_NOACTIVEDESKTOP = 0x40000004,
    REST_NOACTIVEDESKTOPCHANGES = 0x40000005,
    REST_NOFAVORITESMENU = 0x40000006,
    REST_CLEARRECENTDOCSONEXIT = 0x40000007,
    REST_CLASSICSHELL = 0x40000008,
    REST_NOCUSTOMIZEWEBVIEW = 0x40000009,
    REST_NOHTMLWALLPAPER = 0x40000010,
    REST_NOCHANGINGWALLPAPER = 0x40000011,
    REST_NODESKCOMP = 0x40000012,
    REST_NOADDDESKCOMP = 0x40000013,
    REST_NODELDESKCOMP = 0x40000014,
    REST_NOCLOSEDESKCOMP = 0x40000015,
    REST_NOCLOSE_DRAGDROPBAND = 0x40000016,
    REST_NOMOVINGBAND = 0x40000017,
    REST_NOEDITDESKCOMP = 0x40000018,
    REST_NORESOLVESEARCH = 0x40000019,
    REST_NORESOLVETRACK = 0x4000001a,
    REST_FORCECOPYACLWITHFILE = 0x4000001b,
    REST_NOFORGETSOFTWAREUPDATE = 0x4000001d,
    REST_NOSETACTIVEDESKTOP = 0x4000001e,
    REST_NOUPDATEWINDOWS = 0x4000001f,
    REST_NOCHANGESTARMENU = 0x40000020,
    REST_NOFOLDEROPTIONS = 0x40000021,
    REST_HASFINDCOMPUTERS = 0x40000022,
    REST_INTELLIMENUS = 0x40000023,
    REST_RUNDLGMEMCHECKBOX = 0x40000024,
    REST_ARP_ShowPostSetup = 0x40000025,
    REST_NOCSC = 0x40000026,
    REST_NOCONTROLPANEL = 0x40000027,
    REST_ENUMWORKGROUP = 0x40000028,
    REST_ARP_NOARP = 0x40000029,
    REST_ARP_NOREMOVEPAGE = 0x4000002a,
    REST_ARP_NOADDPAGE = 0x4000002b,
    REST_ARP_NOWINSETUPPAGE = 0x4000002c,
    REST_GREYMSIADS = 0x4000002d,
    REST_NOCHANGEMAPPEDDRIVELABEL = 0x4000002e,
    REST_NOCHANGEMAPPEDDRIVECOMMENT = 0x4000002f,
    REST_MaxRecentDocs = 0x40000030,
    REST_NONETWORKCONNECTIONS = 0x40000031,
    REST_FORCESTARTMENULOGOFF = 0x40000032,
    REST_NOWEBVIEW = 0x40000033,
    REST_NOCUSTOMIZETHISFOLDER = 0x40000034,
    REST_NOENCRYPTION = 0x40000035,
    REST_DONTSHOWSUPERHIDDEN = 0x40000037,
    REST_NOSHELLSEARCHBUTTON = 0x40000038,
    REST_NOHARDWARETAB = 0x40000039,
    REST_NORUNASINSTALLPROMPT = 0x4000003a,
    REST_PROMPTRUNASINSTALLNETPATH = 0x4000003b,
    REST_NOMANAGEMYCOMPUTERVERB = 0x4000003c,
    REST_DISALLOWRUN = 0x4000003e,
    REST_NOWELCOMESCREEN = 0x4000003f,
    REST_RESTRICTCPL = 0x40000040,
    REST_DISALLOWCPL = 0x40000041,
    REST_NOSMBALLOONTIP = 0x40000042,
    REST_NOSMHELP = 0x40000043,
    REST_NOWINKEYS = 0x40000044,
    REST_NOENCRYPTONMOVE = 0x40000045,
    REST_NOLOCALMACHINERUN = 0x40000046,
    REST_NOCURRENTUSERRUN = 0x40000047,
    REST_NOLOCALMACHINERUNONCE = 0x40000048,
    REST_NOCURRENTUSERRUNONCE = 0x40000049,
    REST_FORCEACTIVEDESKTOPON = 0x4000004a,
    REST_NOVIEWONDRIVE = 0x4000004c,
    REST_NONETCRAWL = 0x4000004d,
    REST_NOSHAREDDOCUMENTS = 0x4000004e,
    REST_NOSMMYDOCS = 0x4000004f,
    REST_NOSMMYPICS = 0x40000050,
    REST_ALLOWBITBUCKDRIVES = 0x40000051,
    REST_NONLEGACYSHELLMODE = 0x40000052,
    REST_NOCONTROLPANELBARRICADE = 0x40000053,
    REST_NOSTARTPAGE = 0x40000054,
    REST_NOAUTOTRAYNOTIFY = 0x40000055,
    REST_NOTASKGROUPING = 0x40000056,
    REST_NOCDBURNING = 0x40000057,
    REST_MYCOMPNOPROP = 0x40000058,
    REST_MYDOCSNOPROP = 0x40000059,
    REST_NOSTARTPANEL = 0x4000005a,
    REST_NODISPLAYAPPEARANCEPAGE = 0x4000005b,
    REST_NOTHEMESTAB = 0x4000005c,
    REST_NOVISUALSTYLECHOICE = 0x4000005d,
    REST_NOSIZECHOICE = 0x4000005e,
    REST_NOCOLORCHOICE = 0x4000005f,
    REST_SETVISUALSTYLE = 0x40000060,
    REST_STARTRUNNOHOMEPATH = 0x40000061,
    REST_NOUSERNAMEINSTARTPANEL = 0x40000062,
    REST_NOMYCOMPUTERICON = 0x40000063,
    REST_NOSMNETWORKPLACES = 0x40000064,
    REST_NOSMPINNEDLIST = 0x40000065,
    REST_NOSMMYMUSIC = 0x40000066,
    REST_NOSMEJECTPC = 0x40000067,
    REST_NOSMMOREPROGRAMS = 0x40000068,
    REST_NOSMMFUPROGRAMS = 0x40000069,
    REST_NOTRAYITEMSDISPLAY = 0x4000006a,
    REST_NOTOOLBARSONTASKBAR = 0x4000006b,
    REST_NOSMCONFIGUREPROGRAMS = 0x4000006f,
    REST_HIDECLOCK = 0x40000070,
    REST_NOLOWDISKSPACECHECKS = 0x40000071,
    REST_NOENTIRENETWORK = 0x40000072,
    REST_NODESKTOPCLEANUP = 0x40000073,
    REST_BITBUCKNUKEONDELETE = 0x40000074,
    REST_BITBUCKCONFIRMDELETE = 0x40000075,
    REST_BITBUCKNOPROP = 0x40000076,
    REST_NODISPBACKGROUND = 0x40000077,
    REST_NODISPSCREENSAVEPG = 0x40000078,
    REST_NODISPSETTINGSPG = 0x40000079,
    REST_NODISPSCREENSAVEPREVIEW = 0x4000007a,
    REST_NODISPLAYCPL = 0x4000007b,
    REST_HIDERUNASVERB = 0x4000007c,
    REST_NOTHUMBNAILCACHE = 0x4000007d,
    REST_NOSTRCMPLOGICAL = 0x4000007e,
    REST_NOPUBLISHWIZARD = 0x4000007f,
    REST_NOONLINEPRINTSWIZARD = 0x40000080,
    REST_NOWEBSERVICES = 0x40000081,
    REST_ALLOWUNHASHEDWEBVIEW = 0x40000082,
    REST_ALLOWLEGACYWEBVIEW = 0x40000083,
    REST_REVERTWEBVIEWSECURITY = 0x40000084,
    REST_INHERITCONSOLEHANDLES = 0x40000086,
    REST_NOREMOTERECURSIVEEVENTS = 0x40000089,
    REST_NOREMOTECHANGENOTIFY = 0x40000091,
    REST_NOENUMENTIRENETWORK = 0x40000093,
    REST_NOINTERNETOPENWITH = 0x40000095,
    REST_DONTRETRYBADNETNAME = 0x4000009b,
    REST_ALLOWFILECLSIDJUNCTIONS = 0x4000009c,
    REST_NOUPNPINSTALL = 0x4000009d,
    REST_ARP_DONTGROUPPATCHES = 0x400000ac,
    REST_ARP_NOCHOOSEPROGRAMSPAGE = 0x400000ad,
    REST_NODISCONNECT = 0x41000001,
    REST_NOSECURITY = 0x41000002,
    REST_NOFILEASSOCIATE = 0x41000003,
    REST_ALLOWCOMMENTTOGGLE = 0x41000004
};

typedef enum RESTRICTION_RESULT {
    RR_ALLOW = 1,
    RR_DISALLOW = 2,
    RR_NOCHANGE = 3
};

typedef enum RESTRICT_ACTIONS {
    RA_DRAG = 1,
    RA_DROP = 2,
    RA_ADD = 3,
    RA_CLOSE = 4,
    RA_MOVE = 5
};

typedef enum REVEALSTATES {
    TA_REVEAL_BACKGROUND = 1,
    TA_REVEAL_CONTENT = 2,
    TA_REVEAL_OUTLINE = 3,
    TA_REVEAL_TAPPED = 4
};

typedef enum RIGHTFRAMESTATES {
    DWMRFS_ACTIVE = 1,
    DWMRFS_INACTIVE = 2
};

typedef enum RIGHTSHADOWSTATES {
    DWMRSS_ACTIVE = 1,
    DWMRSS_INACTIVE = 2
};

typedef enum RO_ERROR_REPORTING_FLAGS {
    RO_ERROR_REPORTING_NONE = 0,
    RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 1,
    RO_ERROR_REPORTING_FORCEEXCEPTIONS = 2,
    RO_ERROR_REPORTING_USESETERRORINFO = 4,
    RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 8
};

typedef enum RO_INIT_TYPE {
    RO_INIT_SINGLETHREADED = 0,
    RO_INIT_MULTITHREADED = 1
};

typedef enum RPC_ADDRESS_CHANGE_TYPE {
    PROTOCOL_NOT_LOADED = 1,
    PROTOCOL_LOADED = 2,
    PROTOCOL_ADDRESS_CHANGE = 3
};

typedef enum RTLWOW64_CROSSPROCESS_WORK_OPERATION {
    CrossProcOperationMemoryAllocPreNotify = 0,
    CrossProcOperationMemoryAllocPostNotify = 1,
    CrossProcOperationMemoryFreePreNotify = 2,
    CrossProcOperationMemoryFreePostNotify = 3,
    CrossProcOperationMemoryProtectPreNotify = 4,
    CrossProcOperationMemoryProtectPostNotify = 5,
    CrossProcOperationInstructionCacheFlush = 6
};

typedef enum RTL_BSD_ITEM_TYPE {
    RtlBsdItemVersionNumber = 0,
    RtlBsdItemProductType = 1,
    RtlBsdItemAabEnabled = 2,
    RtlBsdItemAabTimeout = 3,
    RtlBsdItemBootGood = 4,
    RtlBsdItemBootShutdown = 5,
    RtlBsdSleepInProgress = 6,
    RtlBsdPowerTransition = 7,
    RtlBsdItemBootAttemptCount = 8,
    RtlBsdItemBootCheckpoint = 9,
    RtlBsdItemBootId = 10,
    RtlBsdItemShutdownBootId = 11,
    RtlBsdItemReportedAbnormalShutdownBootId = 12,
    RtlBsdItemErrorInfo = 13,
    RtlBsdItemPowerButtonPressInfo = 14,
    RtlBsdItemChecksum = 15,
    RtlBsdPowerTransitionExtension = 16,
    RtlBsdItemMax = 17
};

typedef enum RTL_DISK_SPACE_POLICY {
    RtlDiskSpacePolicyVeryLow = 5,
    RtlDiskSpacePolicyLow = 10,
    RtlDiskSpacePolicyBelowNormal = 15,
    RtlDiskSpacePolicyNormal = 20
};

typedef enum RTL_DISK_SPEED_POLICY {
    RtlDiskSpeedPolicyNormal = 10,
    RtlDiskSpeedPolicyFast = 20
};

typedef enum RTL_DISK_WRITE_CONSTRAINT_POLICY {
    RtlDiskWriteConstraintPolicyLimited = 50,
    RtlDiskWriteConstraintPolicyNormal = 100
};

typedef enum RTL_PHYSICAL_MEMORY_POLICY {
    RtlPhysicalMemoryPolicyLow = 10,
    RtlPhysicalMemoryPolicyNormal = 20
};

typedef enum RefreshConstants {
    REFRESH_NORMAL = 0,
    REFRESH_IFEXPIRED = 1,
    REFRESH_COMPLETELY = 3
};

typedef enum RenameOperationStatus {
    ROS_Completed = 0,
    ROS_Interrupted = 1
};

typedef enum ReplacesCorHdrNumericDefines {
    COMIMAGE_FLAGS_ILONLY = 1,
    COMIMAGE_FLAGS_32BITREQUIRED = 2,
    COMIMAGE_FLAGS_IL_LIBRARY = 4,
    COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
    COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,
    COR_VERSION_MAJOR_V2 = 2,
    COR_VERSION_MAJOR = 2,
    COR_VERSION_MINOR = 5,
    COR_DELETED_NAME_LENGTH = 8,
    COR_VTABLEGAP_NAME_LENGTH = 8,
    NATIVE_TYPE_MAX_CB = 1,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
    IMAGE_COR_MIH_METHODRVA = 1,
    IMAGE_COR_MIH_EHRVA = 2,
    IMAGE_COR_MIH_BASICBLOCK = 8,
    COR_VTABLE_32BIT = 1,
    COR_VTABLE_64BIT = 2,
    COR_VTABLE_FROM_UNMANAGED = 4,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
    COR_VTABLE_CALL_MOST_DERIVED = 16,
    IMAGE_COR_EATJ_THUNK_SIZE = 32,
    MAX_CLASS_NAME = 1024,
    MAX_PACKAGE_NAME = 1024
};

typedef enum RpcProxyPerfCounters {
    RpcCurrentUniqueUser = 1,
    RpcBackEndConnectionAttempts = 2,
    RpcBackEndConnectionFailed = 3,
    RpcRequestsPerSecond = 4,
    RpcIncomingConnections = 5,
    RpcIncomingBandwidth = 6,
    RpcOutgoingBandwidth = 7,
    RpcAttemptedLbsDecisions = 8,
    RpcFailedLbsDecisions = 9,
    RpcAttemptedLbsMessages = 10,
    RpcFailedLbsMessages = 11,
    RpcLastCounter = 12
};

typedef enum SAFE_SAVE_OPTIONS {
    SSO_DEFAULT = 0,
    SSO_NO_READER_OPLOCK = 1,
    SSO_OPEN_REPARSE_POINT = 2,
    SSO_WRITE_SHARING_ON_READ_WRITE_ACCESS_MODE = 4,
    SSO_READONLY_OVERRIDE = 8,
    SSO_FREEZE_MODIFIED_DATE = 16,
    SSO_IMPERSONATE_CREATING_THREAD = 32,
    SSO_DISPOSITION_MASK = 0xff00
};

typedef enum SBBACKGROUNDSTATES {
    SBBG_NORMAL = 1,
    SBBG_HOT = 2,
    SBBG_DISABLED = 3,
    SBBG_FOCUSED = 4
};

typedef enum SBCLEARBUTTONSTATES {
    SBCB_NORMAL = 1,
    SBCB_HOT = 2,
    SBCB_PRESSED = 3
};

typedef enum SBSEARCHBUTTONSTATES {
    SBSB_NORMAL = 1
};

typedef enum SCALE_CHANGE_FLAGS {
    SCF_VALUE_NONE = 0,
    SCF_SCALE = 1,
    SCF_PHYSICAL = 2
};

typedef enum SCHEMAVIEW_AGGREGATIONRULE {
    SVAR_ENUM_UNION = 1
};

typedef enum SCNRT_STATUS {
    SCNRT_ENABLE = 0,
    SCNRT_DISABLE = 1
};

typedef enum SCROLLBARPARTS {
    SBP_ARROWBTN = 1,
    SBP_THUMBBTNHORZ = 2,
    SBP_THUMBBTNVERT = 3,
    SBP_LOWERTRACKHORZ = 4,
    SBP_UPPERTRACKHORZ = 5,
    SBP_LOWERTRACKVERT = 6,
    SBP_UPPERTRACKVERT = 7,
    SBP_GRIPPERHORZ = 8,
    SBP_GRIPPERVERT = 9,
    SBP_SIZEBOX = 10,
    SBP_SIZEBOXBKGND = 11
};

typedef enum SCROLLBARSTYLESTATES {
    SCRBS_NORMAL = 1,
    SCRBS_HOT = 2,
    SCRBS_PRESSED = 3,
    SCRBS_DISABLED = 4,
    SCRBS_HOVER = 5
};

typedef enum SEARCHBOXPARTS {
    SBP_SBBACKGROUND = 1,
    SBP_SBCLEARBUTTON = 2,
    SBP_SBSEARCHBUTTON = 3
};

typedef enum SEARCHEDITBOXPARTS {
    SEBP_SEARCHEDITBOXTEXT = 1
};

typedef enum SEARCHEDITBOXTEXTSTATES {
    SEBTS_CUETEXT = 1,
    SEBTS_FORMATTED = 2
};

typedef enum SEARCHHITSTATES {
    IVSH_START = 1,
    IVSH_FINAL = 2,
    IVSH_STARTSELECTED = 3,
    IVSH_FINALSELECTED = 4
};

typedef enum SEARCHHOMEPARTS {
    SH_BACKGROUND = 1,
    SH_LINE = 2
};

typedef enum SEARCHPANE_HOTKEY {
    SPHK_SHOWSEARCHPANE = 0,
    SPHK_SEARCHSETTINGS = 1,
    SPHK_SEARCHFILES = 2,
    SPHK_APPS = 3
};

typedef enum SEARCHTEXTTYPE {
    STTYPE_DEFAULT = 0,
    STTYPE_INITIAL = 1
};

typedef enum SEARCH_SUBMIT_TYPE {
    SST_SEARCH_BUTTON = 0,
    SST_ENTER_KEY = 1,
    SST_TYPEAHEAD = 2
};

typedef enum SEARCH_TYPEAHEAD_ITEM_TYPE {
    STA_TYPE_SEARCHSUGGESTION = 0,
    STA_TYPE_SEPARATOR = 1,
    STA_TYPE_RESULTSUGGESTION = 2
};

typedef enum SECTIONTITLELINKSTATES {
    CPSTL_NORMAL = 1,
    CPSTL_HOT = 2
};

typedef enum SECURELOCKCODE {
    SECURELOCK_NOCHANGE = -1,
    SECURELOCK_SET_UNSECURE = 0,
    SECURELOCK_SET_MIXED = 1,
    SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
    SECURELOCK_SET_SECURE40BIT = 3,
    SECURELOCK_SET_SECURE56BIT = 4,
    SECURELOCK_SET_FORTEZZA = 5,
    SECURELOCK_SET_SECURE128BIT = 6,
    SECURELOCK_FIRSTSUGGEST = 7,
    SECURELOCK_SUGGEST_UNSECURE = 7,
    SECURELOCK_SUGGEST_MIXED = 8,
    SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
    SECURELOCK_SUGGEST_SECURE40BIT = 10,
    SECURELOCK_SUGGEST_SECURE56BIT = 11,
    SECURELOCK_SUGGEST_FORTEZZA = 12,
    SECURELOCK_SUGGEST_SECURE128BIT = 13
};

typedef enum SELECTIONMANAGERVALUE {
    SMV_ITEMSELECTIONSTATES_REALIZED = 0,
    SMV_ITEMSELECTIONSTATES_UNREALIZED = 1,
    SMV_COLLECTIONSELECTIONSTATES_REALIZED = 2,
    SMV_COLLECTIONSELECTIONSTATES_UNREALIZED = 3,
    SMV_SELECTION = 4
};

typedef enum SELECTIONSTATEVALUE {
    SSV_ITEM = 0,
    SSV_ISSELECTED = 1,
    SSV_ITEMCOLLECTION = 2,
    SSV_SELECTEDTYPE = 3
};

typedef enum SERVICE_DIRECTORY_TYPE {
    ServiceDirectoryPersistentState = 0,
    ServiceDirectoryTypeMax = 1
};

typedef enum SERVICE_REGISTRY_STATE_TYPE {
    ServiceRegistryStateParameters = 0,
    ServiceRegistryStatePersistent = 1,
    MaxServiceRegistryStateType = 2
};

typedef enum SET_WINDOW_GROUP_OPTIONS {
    SWGO_NONE = 0,
    SWGO_TEMPLATE = 1,
    SWGO_NOZORDER = 2,
    SWGO_RESPECT_MINIMIZE = 4,
    SWGO_ALL = 3
};

typedef enum SET_WINDOW_SHOW_STATE {
    SWSS_RESTORE = 0,
    SWSS_MAXIMIZE = 1,
    SWSS_RESTORENA = 2,
    SWSS_MAXIMIZENA = 3,
    SWSS_RESTORENANZ = 4,
    SWSS_MAXIMIZENANZ = 5
};

typedef enum SE_WS_APPX_SIGNATURE_ORIGIN {
    SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0,
    SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 1,
    SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 2,
    SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 3,
    SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE = 4
};

typedef enum SHADOW_CONTROL_REQUEST {
    SHADOW_CONTROL_REQUEST_VIEW = 0,
    SHADOW_CONTROL_REQUEST_TAKECONTROL = 1,
    __SHADOW_CONTROL_REQUEST_Count = 2
};

typedef enum SHADOW_PERMISSION_REQUEST {
    SHADOW_PERMISSION_REQUEST_SILENT = 0,
    SHADOW_PERMISSION_REQUEST_REQUESTPERMISSION = 1,
    __SHADOW_PERMISSION_REQUEST_Count = 2
};

typedef enum SHADOW_REQUEST_RESPONSE {
    SHADOW_REQUEST_RESPONSE_ALLOW = 0,
    SHADOW_REQUEST_RESPONSE_DECLINE = 1,
    SHADOW_REQUEST_RESPONSE_POLICY_PERMISSION_REQUIRED = 2,
    SHADOW_REQUEST_RESPONSE_POLICY_DISABLED = 3,
    SHADOW_REQUEST_RESPONSE_POLICY_VIEW_ONLY = 4,
    SHADOW_REQUEST_RESPONSE_POLICY_VIEW_ONLY_PERMISSION_REQUIRED = 5,
    SHADOW_REQUEST_RESPONSE_SESSION_ALREADY_CONTROLLED = 6
};

typedef enum SHAKE_STATE {
    SS_NOPOINTS = 0,
    SS_BELOWTHRES = 1,
    SS_ABOVETHRES = 2,
    SS_WAITTIMEOUT = 3
};

typedef enum SHARD {
    SHARD_PIDL = 1,
    SHARD_PATHA = 2,
    SHARD_PATHW = 3,
    SHARD_APPIDINFO = 4,
    SHARD_APPIDINFOIDLIST = 5,
    SHARD_LINK = 6,
    SHARD_APPIDINFOLINK = 7,
    SHARD_SHELLITEM = 8
};

typedef enum SHARE_ACTIVATION_MODE {
    ACTIVATION_MODE_PRIVATE = 0,
    ACTIVATION_MODE_HOMEGROUP_RO = 1,
    ACTIVATION_MODE_HOMEGROUP_RW = 2,
    ACTIVATION_MODE_HOMEGROUP_NONE = 3,
    ACTIVATION_MODE_USER_RO = 4,
    ACTIVATION_MODE_LIBRARY_ADD = 5,
    ACTIVATION_MODE_LIBRARY_REMOVAL = 6,
    ACTIVATION_MODE_OTHER = 7
};

typedef enum SHARE_MODE {
    MODE_SMB = 0,
    MODE_INPLACE = 1,
    MODE_LIBRARY = 2,
    MODE_CLASSIC = 3
};

typedef enum SHARE_ROLE {
    SHARE_ROLE_INVALID = -1,
    SHARE_ROLE_READER = 0,
    SHARE_ROLE_CONTRIBUTOR = 1,
    SHARE_ROLE_CO_OWNER = 2,
    SHARE_ROLE_OWNER = 3,
    SHARE_ROLE_CUSTOM = 4,
    SHARE_ROLE_MIXED = 5
};

typedef enum SHARING_MENU_PRESENTATION_STATE {
    PRESENTATION_STATE_UNKNOWN = 0,
    PRESENTATION_STATE_WORKGROUP = 1,
    PRESENTATION_STATE_HOMEGROUP = 2,
    PRESENTATION_STATE_DOMAIN = 3
};

typedef enum SHARING_MENU_SHARE_STATE {
    SHARE_STATE_UNKNOWN = 0,
    SHARE_STATE_NOT_SHAREABLE = 1,
    SHARE_STATE_SHAREABLE = 2
};

typedef enum SHELLSEARCHCOMMAND {
    SSC_SEARCH_EXEC = 0,
    SSC_SEARCH_RETURNKEY = 1,
    SSC_AUTOCOMPLETE_DELETE = 2
};

typedef enum SHELLSTATUSBARSEPARATORPARTS {
    SSBS_BACKGROUND = 1
};

typedef enum SHELL_BROWSER_FRAME_SIZE_POSITION {
    SBFSP_XPOS = 1,
    SBFSP_XOFF = 2,
    SBFSP_YPOS = 4,
    SBFSP_YOFF = 8,
    SBFSP_WIDTHSET = 16,
    SBFSP_WIDTHINCR = 32,
    SBFSP_HEIGHTSET = 64,
    SBFSP_HEIGHTINCR = 128,
    SBFSP_RESTRICT = -2147483648,
    SBFSP_XMASK = 3,
    SBFSP_YMASK = 12,
    SBFSP_MOVEMASK = 15,
    SBFSP_MOVERELMASK = 10,
    SBFSP_WIDTHMASK = 48,
    SBFSP_HEIGHTMASK = 192,
    SBFSP_SIZEMASK = 240,
    SBFSP_SIZERELMASK = 160,
    SBFSP_RELOPMASK = 170
};

typedef enum SHELL_EXEC_CMD_LINE_OPTIONS {
    SECL_NONE = 0,
    SECL_USEFULLPATHDIR = 1,
    SECL_NO_UI = 2,
    SECL_SEPARATE_VDM = 4,
    SECL_LOG_USAGE = 8,
    SECL_USECONTEXTMENU = 16,
    SECL_USERINPUT = 32,
    SECL_RUNASELEVATED = 64
};

typedef enum SHELL_LINK_DATA_FLAGS {
    SLDF_DEFAULT = 0,
    SLDF_HAS_ID_LIST = 1,
    SLDF_HAS_LINK_INFO = 2,
    SLDF_HAS_NAME = 4,
    SLDF_HAS_RELPATH = 8,
    SLDF_HAS_WORKINGDIR = 16,
    SLDF_HAS_ARGS = 32,
    SLDF_HAS_ICONLOCATION = 64,
    SLDF_UNICODE = 128,
    SLDF_FORCE_NO_LINKINFO = 256,
    SLDF_HAS_EXP_SZ = 512,
    SLDF_RUN_IN_SEPARATE = 1024,
    SLDF_HAS_DARWINID = 4096,
    SLDF_RUNAS_USER = 8192,
    SLDF_HAS_EXP_ICON_SZ = 16384,
    SLDF_NO_PIDL_ALIAS = 0x8000,
    SLDF_FORCE_UNCNAME = 0x10000,
    SLDF_RUN_WITH_SHIMLAYER = 0x20000,
    SLDF_FORCE_NO_LINKTRACK = 0x40000,
    SLDF_ENABLE_TARGET_METADATA = 0x80000,
    SLDF_DISABLE_LINK_PATH_TRACKING = 0x100000,
    SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = 0x200000,
    SLDF_NO_KF_ALIAS = 0x400000,
    SLDF_ALLOW_LINK_TO_LINK = 0x800000,
    SLDF_UNALIAS_ON_SAVE = 0x1000000,
    SLDF_PREFER_ENVIRONMENT_PATH = 0x2000000,
    SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = 0x4000000,
    SLDF_PERSIST_VOLUME_ID_RELATIVE = 0x8000000,
    SLDF_VALID = 0xffff7ff,
    SLDF_RESERVED = -2147483648
};

typedef enum SHELL_SEARCH_BAND_SEARCH_STATE {
    SSBSS_DEFAULT = 0,
    SSBSS_NEW_PROVIDERS = 1,
    SSBSS_WEB = 2,
    SSBSS_FOLDER = 3
};

typedef enum SHELL_SPECIFIED_SHOW_COMMAND {
    SSSC_NONE = 0,
    SSSC_NOOP = 1,
    SSSC_MAXIMIZE = 2,
    SSSC_ARRANGE = 3,
    SSSC_TEMPLATE = 4,
    SSSC_FLAGS_CLOAKONSHOW = 0x10000
};

typedef enum SHELL_UI_COMPONENT {
    SHELL_UI_COMPONENT_TASKBARS = 0,
    SHELL_UI_COMPONENT_NOTIFICATIONAREA = 1,
    SHELL_UI_COMPONENT_DESKBAND = 2
};

typedef enum SHELL_WINDOWMANAGEMENT_CALLOUT_MSG_ID {
    SWCMI_GETRECT_WINDOW_ARRANGEMENT = 0,
    SWCMI_SHOW_WINDOW_POLICY = 1,
    SWCMI_WINDOW_SIZE_STARTED = 2
};

typedef enum SHELL_WINDOWMANAGEMENT_NOTIFY_MSG_ID {
    SWNMI_SHELL_TRACKED_WINDOW_POS_CHANGED = 0,
    SWNMI_SHELL_TRACKED_WINDOW_TRACKING_INFO = 1,
    SWNMI_WINDOWARRANGEMENT_COMPLETED = 2,
    SWNMI_WINDOWARRANGEMENT_HOTKEY = 3,
    SWNMI_SHELL_TRACKED_WINDOW_MOVESIZE_INTERCEPT = 4,
    SWNMI_WINDOW_BORDER_ENTER_SIZE = 5,
    SWNMI_WINDOW_BORDER_EXIT_SIZE = 6,
    SWNMI_WINDOW_SIZE_UPDATED = 7,
    SWNMI_WINDOW_SIZE_COMPLETED = 8,
    SWNMI_SHELL_INPUT_USAGE_DATA_INFO = 9,
    SWNMI_GROUP_WINDOW_TEMPLATE_APPLIED = 10,
    SWNMI_CURATED_WINDOW_HIDDEN = 11
};

typedef enum SHGFP_TYPE {
    SHGFP_TYPE_CURRENT = 0,
    SHGFP_TYPE_DEFAULT = 1
};

typedef enum SHGLOBALCOUNTER {
    GLOBALCOUNTER_SEARCHMANAGER = 0,
    GLOBALCOUNTER_SEARCHOPTIONS = 1,
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE = 2,
    GLOBALCOUNTER_RATINGS = 3,
    GLOBALCOUNTER_APPROVEDSITES = 4,
    GLOBALCOUNTER_RESTRICTIONS = 5,
    GLOBALCOUNTER_SHELLSETTINGSCHANGED = 6,
    GLOBALCOUNTER_SYSTEMPIDLCHANGE = 7,
    GLOBALCOUNTER_OVERLAYMANAGER = 8,
    GLOBALCOUNTER_QUERYASSOCIATIONS = 9,
    GLOBALCOUNTER_IESESSIONS = 10,
    GLOBALCOUNTER_IEONLY_SESSIONS = 11,
    GLOBALCOUNTER_APPLICATION_DESTINATIONS = 12,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS = 13,
    GLOBALCOUNTER_BITBUCKETNUMDELETERS = 14,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES = 15,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A = 16,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B = 17,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C = 18,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D = 19,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E = 20,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F = 21,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G = 22,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H = 23,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I = 24,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J = 25,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K = 26,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L = 27,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M = 28,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N = 29,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O = 30,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P = 31,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q = 32,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R = 33,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S = 34,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T = 35,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U = 36,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V = 37,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W = 38,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X = 39,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y = 40,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z = 41,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE = 42,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT = 43,
    GLOBALCOUNTER_RECYCLEBINENUM = 44,
    GLOBALCOUNTER_RECYCLEBINCORRUPTED = 45,
    GLOBALCOUNTER_RATINGS_STATECOUNTER = 46,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE = 47,
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT = 48,
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE = 49,
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE = 50,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE = 51,
    GLOBALCOUNTER_ASSOCCHANGED = 52,
    GLOBALCOUNTER_APP_ITEMS_STATE_STORE_CACHE = 53,
    GLOBALCOUNTER_SETTINGSYNC_ENABLED = 54,
    GLOBALCOUNTER_APPSFOLDER_FILETYPEASSOCIATION_COUNTER = 55,
    GLOBALCOUNTER_USERINFOCHANGED = 56,
    GLOBALCOUNTER_SYNC_ENGINE_INFORMATION_CACHE_MACHINEWIDE = 57,
    GLOBALCOUNTER_BANNERS_DATAMODEL_CACHE_MACHINEWIDE = 58,
    GLOBALCOUNTER_MAXIMUMVALUE = 59
};

typedef enum SHOWCALENDARBUTTONRIGHTSTATES {
    DPSCBR_NORMAL = 1,
    DPSCBR_HOT = 2,
    DPSCBR_PRESSED = 3,
    DPSCBR_DISABLED = 4
};

typedef enum SHOWEDGEUISTATES {
    TA_SHOWEDGEUI_TARGET = 1
};

typedef enum SHOWPANELSTATES {
    TA_SHOWPANEL_TARGET = 1
};

typedef enum SHOWPOPUPSTATES {
    TA_SHOWPOPUP_TARGET = 1
};

typedef enum SHREGDEL_FLAGS {
    SHREGDEL_DEFAULT = 0,
    SHREGDEL_HKCU = 1,
    SHREGDEL_HKLM = 16,
    SHREGDEL_BOTH = 17
};

typedef enum SHREGENUM_FLAGS {
    SHREGENUM_DEFAULT = 0,
    SHREGENUM_HKCU = 1,
    SHREGENUM_HKLM = 16,
    SHREGENUM_BOTH = 17
};

typedef enum SHSTOCKICONID {
    SIID_DOCNOASSOC = 0,
    SIID_DOCASSOC = 1,
    SIID_APPLICATION = 2,
    SIID_FOLDER = 3,
    SIID_FOLDEROPEN = 4,
    SIID_DRIVE525 = 5,
    SIID_DRIVE35 = 6,
    SIID_DRIVEREMOVE = 7,
    SIID_DRIVEFIXED = 8,
    SIID_DRIVENET = 9,
    SIID_DRIVENETDISABLED = 10,
    SIID_DRIVECD = 11,
    SIID_DRIVERAM = 12,
    SIID_WORLD = 13,
    SIID_SERVER = 15,
    SIID_PRINTER = 16,
    SIID_MYNETWORK = 17,
    SIID_FIND = 22,
    SIID_HELP = 23,
    SIID_SHARE = 28,
    SIID_LINK = 29,
    SIID_SLOWFILE = 30,
    SIID_RECYCLER = 31,
    SIID_RECYCLERFULL = 32,
    SIID_MEDIACDAUDIO = 40,
    SIID_LOCK = 47,
    SIID_AUTOLIST = 49,
    SIID_PRINTERNET = 50,
    SIID_SERVERSHARE = 51,
    SIID_PRINTERFAX = 52,
    SIID_PRINTERFAXNET = 53,
    SIID_PRINTERFILE = 54,
    SIID_STACK = 55,
    SIID_MEDIASVCD = 56,
    SIID_STUFFEDFOLDER = 57,
    SIID_DRIVEUNKNOWN = 58,
    SIID_DRIVEDVD = 59,
    SIID_MEDIADVD = 60,
    SIID_MEDIADVDRAM = 61,
    SIID_MEDIADVDRW = 62,
    SIID_MEDIADVDR = 63,
    SIID_MEDIADVDROM = 64,
    SIID_MEDIACDAUDIOPLUS = 65,
    SIID_MEDIACDRW = 66,
    SIID_MEDIACDR = 67,
    SIID_MEDIACDBURN = 68,
    SIID_MEDIABLANKCD = 69,
    SIID_MEDIACDROM = 70,
    SIID_AUDIOFILES = 71,
    SIID_IMAGEFILES = 72,
    SIID_VIDEOFILES = 73,
    SIID_MIXEDFILES = 74,
    SIID_FOLDERBACK = 75,
    SIID_FOLDERFRONT = 76,
    SIID_SHIELD = 77,
    SIID_WARNING = 78,
    SIID_INFO = 79,
    SIID_ERROR = 80,
    SIID_KEY = 81,
    SIID_SOFTWARE = 82,
    SIID_RENAME = 83,
    SIID_DELETE = 84,
    SIID_MEDIAAUDIODVD = 85,
    SIID_MEDIAMOVIEDVD = 86,
    SIID_MEDIAENHANCEDCD = 87,
    SIID_MEDIAENHANCEDDVD = 88,
    SIID_MEDIAHDDVD = 89,
    SIID_MEDIABLURAY = 90,
    SIID_MEDIAVCD = 91,
    SIID_MEDIADVDPLUSR = 92,
    SIID_MEDIADVDPLUSRW = 93,
    SIID_DESKTOPPC = 94,
    SIID_MOBILEPC = 95,
    SIID_USERS = 96,
    SIID_MEDIASMARTMEDIA = 97,
    SIID_MEDIACOMPACTFLASH = 98,
    SIID_DEVICECELLPHONE = 99,
    SIID_DEVICECAMERA = 100,
    SIID_DEVICEVIDEOCAMERA = 101,
    SIID_DEVICEAUDIOPLAYER = 102,
    SIID_NETWORKCONNECT = 103,
    SIID_INTERNET = 104,
    SIID_ZIPFILE = 105,
    SIID_SETTINGS = 106,
    SIID_DRIVEHDDVD = 132,
    SIID_DRIVEBD = 133,
    SIID_MEDIAHDDVDROM = 134,
    SIID_MEDIAHDDVDR = 135,
    SIID_MEDIAHDDVDRAM = 136,
    SIID_MEDIABDROM = 137,
    SIID_MEDIABDR = 138,
    SIID_MEDIABDRE = 139,
    SIID_CLUSTEREDDRIVE = 140,
    SIID_MAX_ICONS = 181
};

typedef enum SHTIME_FLAGS {
    SHTF_NONE = 0,
    SHTF_FILETIME = 1,
    SHTF_SYSTEMTIME = 2,
    SHTF_VARIANTTIME = 3,
    SHTF_CALDATETIME = 4,
    SHTF_TYPEMASK = 255,
    SHTF_UTC = 256,
    SHTF_LOCAL = 512,
    SHTF_UTCLOCALMASK = 0xff00
};

typedef enum SIATTRIBFLAGS {
    SIATTRIBFLAGS_AND = 1,
    SIATTRIBFLAGS_OR = 2,
    SIATTRIBFLAGS_APPCOMPAT = 3,
    SIATTRIBFLAGS_MASK = 3,
    SIATTRIBFLAGS_ALLITEMS = 16384
};

typedef enum SIMPLE_IDLIST_FLAGS {
    SILF_NONE = 0,
    SILF_ALIASES = 1
};

typedef enum SINGLEBUTTONSTATES {
    TBSB_NORMAL = 1,
    TBSB_HOVER = 2,
    TBSB_PRESSED = 3,
    TBSB_FLASH = 4,
    TBSB_SELECTED = 5
};

typedef enum SIZEBOXSTATES {
    SZB_RIGHTALIGN = 1,
    SZB_LEFTALIGN = 2,
    SZB_TOPRIGHTALIGN = 3,
    SZB_TOPLEFTALIGN = 4,
    SZB_HALFBOTTOMRIGHTALIGN = 5,
    SZB_HALFBOTTOMLEFTALIGN = 6,
    SZB_HALFTOPRIGHTALIGN = 7,
    SZB_HALFTOPLEFTALIGN = 8
};

typedef enum SIZINGTYPE {
    ST_TRUESIZE = 0,
    ST_STRETCH = 1,
    ST_TILE = 2
};

typedef enum SLGP_FLAGS {
    SLGP_SHORTPATH = 1,
    SLGP_UNCPRIORITY = 2,
    SLGP_RAWPATH = 4,
    SLGP_RELATIVEPRIORITY = 8
};

typedef enum SLR_FLAGS {
    SLR_NONE = 0,
    SLR_NO_UI = 1,
    SLR_ANY_MATCH = 2,
    SLR_UPDATE = 4,
    SLR_NOUPDATE = 8,
    SLR_NOSEARCH = 16,
    SLR_NOTRACK = 32,
    SLR_NOLINKINFO = 64,
    SLR_INVOKE_MSI = 128,
    SLR_NO_UI_WITH_MSG_PUMP = 257,
    SLR_OFFER_DELETE_WITHOUT_FILE = 512,
    SLR_KNOWNFOLDER = 1024,
    SLR_MACHINE_IN_LOCAL_TARGET = 2048,
    SLR_UPDATE_MACHINE_AND_SID = 4096,
    SLR_NO_OBJECT_ID = 8192
};

typedef enum SMALLBOTTOMFRAMESTATES {
    DWMSBFS_ACTIVE = 1,
    DWMSBFS_INACTIVE = 2
};

typedef enum SMALLBUTTONACTIVECLOSESTATES {
    DWMSBACAS_NORMAL = 1,
    DWMSBACAS_HOT = 2,
    DWMSBACAS_PUSHED = 3,
    DWMSBACAS_DISABLED = 4
};

typedef enum SMALLBUTTONINACTIVECLOSESTATES {
    DWMSBIACAS_NORMAL = 1,
    DWMSBIACAS_HOT = 2,
    DWMSBIACAS_PUSHED = 3,
    DWMSBIACAS_DISABLED = 4
};

typedef enum SMALLCAPTIONSTATES {
    SCS_ACTIVE = 1,
    SCS_INACTIVE = 2,
    SCS_DISABLED = 3
};

typedef enum SMALLCLOSEBUTTONSTATES {
    SCBS_NORMAL = 1,
    SCBS_HOT = 2,
    SCBS_PUSHED = 3,
    SCBS_DISABLED = 4
};

typedef enum SMALLFRAMEBOTTOMSTATES {
    SFRB_ACTIVE = 1,
    SFRB_INACTIVE = 2
};

typedef enum SMALLFRAMELEFTSTATES {
    SFRL_ACTIVE = 1,
    SFRL_INACTIVE = 2
};

typedef enum SMALLFRAMERIGHTSTATES {
    SFRR_ACTIVE = 1,
    SFRR_INACTIVE = 2
};

typedef enum SMALLLEFTFRAMESTATES {
    DWMSLFS_ACTIVE = 1,
    DWMSLFS_INACTIVE = 2
};

typedef enum SMALLRIGHTFRAMESTATES {
    DWMSRFS_ACTIVE = 1,
    DWMSRFS_INACTIVE = 2
};

typedef enum SMALLTOPFRAMESTATES {
    DWMSTFS_ACTIVE = 1,
    DWMSTFS_INACTIVE = 2
};

typedef enum SOFTWAREEXPLORERSTATES {
    SPSE_NORMAL = 1,
    SPSE_HOT = 2,
    SPSE_SELECTED = 3,
    SPSE_DISABLED = 4,
    SPSE_FOCUSED = 5
};

typedef enum SPATIAL_INPUT_ACTIVATION_POLICY {
    SIAP_ACTIVATE = 0,
    SIAP_NOACTIVATE = 1,
    SIAP_ACTIVATEIFAPPNOTINFOREGROUND = 2,
    SIAP_EAT = 4
};

typedef enum SPECIALGROUPCOLLAPSESTATES {
    EBSGC_NORMAL = 1,
    EBSGC_HOT = 2,
    EBSGC_PRESSED = 3
};

typedef enum SPECIALGROUPEXPANDSTATES {
    EBSGE_NORMAL = 1,
    EBSGE_HOT = 2,
    EBSGE_PRESSED = 3
};

typedef enum SPINPARTS {
    SPNP_UP = 1,
    SPNP_DOWN = 2,
    SPNP_UPHORZ = 3,
    SPNP_DOWNHORZ = 4
};

typedef enum SPLASHSCREEN_IMAGE_TYPE {
    SSIT_SMALL = 0,
    SSIT_MEDIUM = 1,
    SSIT_LARGE = 2,
    SSIT_AUTO = 3,
    SSIT_COUNT = 4,
    SSIT_INVALID = 5
};

typedef enum SPLITBUTTONLEFTSTATES {
    CMSBL_NORMAL = 1,
    CMSBL_HOT = 2,
    CMSBL_PRESSED = 3,
    CMSBL_KEYFOCUSED = 4,
    CMSBL_NEARHOT = 5,
    CMSBL_DISABLED = 6
};

typedef enum SPLITBUTTONRIGHTSTATES {
    CMSBR_NORMAL = 1,
    CMSBR_HOT = 2,
    CMSBR_PRESSED = 3,
    CMSBR_KEYFOCUSED = 4,
    CMSBR_NEARHOT = 5,
    CMSBR_DISABLED = 6
};

typedef enum SPLITTERSTATES {
    SPLITS_NORMAL = 1,
    SPLITS_HOT = 2,
    SPLITS_PRESSED = 3
};

typedef enum SPLITTERVERTSTATES {
    SPLITSV_NORMAL = 1,
    SPLITSV_HOT = 2,
    SPLITSV_PRESSED = 3
};

typedef enum STANDARDSTATES {
    TTSS_NORMAL = 1,
    TTSS_LINK = 2
};

typedef enum STARTPANELPARTS {
    SPP_USERPANE = 1,
    SPP_MOREPROGRAMS = 2,
    SPP_MOREPROGRAMSARROW = 3,
    SPP_PROGLIST = 4,
    SPP_PROGLISTSEPARATOR = 5,
    SPP_PLACESLIST = 6,
    SPP_PLACESLISTSEPARATOR = 7,
    SPP_LOGOFF = 8,
    SPP_LOGOFFBUTTONS = 9,
    SPP_USERPICTURE = 10,
    SPP_PREVIEW = 11,
    SPP_MOREPROGRAMSTAB = 12,
    SPP_NSCHOST = 13,
    SPP_SOFTWAREEXPLORER = 14,
    SPP_OPENBOX = 15,
    SPP_SEARCHVIEW = 16,
    SPP_MOREPROGRAMSARROWBACK = 17,
    SPP_TOPMATCH = 18,
    SPP_LOGOFFSPLITBUTTONDROPDOWN = 19
};

typedef enum STARTPANELPRIVPARTS {
    SPPP_MOREPROGRAMSTAB = 1
};

typedef enum STATICPARTS {
    STAT_TEXT = 1
};

typedef enum STATUSPARTS {
    SP_PANE = 1,
    SP_GRIPPERPANE = 2,
    SP_GRIPPER = 3
};

typedef enum STGOP {
    STGOP_MOVE = 1,
    STGOP_COPY = 2,
    STGOP_SYNC = 3,
    STGOP_REMOVE = 5,
    STGOP_RENAME = 6,
    STGOP_APPLYPROPERTIES = 8,
    STGOP_NEW = 10
};

typedef enum STORAGEITEM_CREATION_TYPE {
    SICT_ITEM = 0,
    SICT_INFORMATION = 1
};

typedef enum STORAGE_PROVIDER_FILE_FLAGS {
    SPFF_NONE = 0,
    SPFF_DOWNLOAD_BY_DEFAULT = 1,
    SPFF_CREATED_ON_THIS_DEVICE = 2
};

typedef enum STPFLAG {
    STPF_NONE = 0,
    STPF_USEAPPTHUMBNAILALWAYS = 1,
    STPF_USEAPPTHUMBNAILWHENACTIVE = 2,
    STPF_USEAPPPEEKALWAYS = 4,
    STPF_USEAPPPEEKWHENACTIVE = 8
};

typedef enum STREAM_REFERENCE_TYPE {
    STREAMREFERENCE_NONE = 0,
    STREAMREFERENCE_FILE = 1,
    STREAMREFERENCE_URI = 2,
    STREAMREFERENCE_STREAM = 3,
    STREAMREFERENCE_DLLRESOURCE = 4
};

typedef enum STUB_PHASE {
    STUB_UNMARSHAL = 0,
    STUB_CALL_SERVER = 1,
    STUB_MARSHAL = 2,
    STUB_CALL_SERVER_NO_HRESULT = 3
};

typedef enum SUBSETBUTTONSTATES {
    IVSB_NORMAL = 1,
    IVSB_HOVER = 2,
    IVSB_PUSHED = 3
};

typedef enum SUBVARIANTTYPE {
    GSVT_COLOR = 0,
    GSVT_SIZE = 1
};

typedef enum SVUIA_STATUS {
    SVUIA_DEACTIVATE = 0,
    SVUIA_ACTIVATE_NOFOCUS = 1,
    SVUIA_ACTIVATE_FOCUS = 2,
    SVUIA_INPLACEACTIVATE = 3
};

typedef enum SWIPEDESELECTSTATES {
    TA_SWIPEDESELECT_DESELECTED = 1,
    TA_SWIPEDESELECT_SELECTION = 2
};

typedef enum SWIPEREVEALSTATES {
    TA_SWIPEREVEAL_TARGET = 1
};

typedef enum SWIPESELECTSTATES {
    TA_SWIPESELECT_SELECTED = 1,
    TA_SWIPESELECT_SELECTION = 2
};

typedef enum SWITCH_CONTEXT_TYPE {
    STATIC_PROCESS_CONTEXT = 0,
    DYNAMIC_PROCESS_CONTEXT = 1,
    MAX_CONTEXT_TYPE = 2
};

typedef enum SYMBOL_PRIMITIVE_INDEX {
    ISP_ERROR = -1,
    ISP_DIBDATA = 0,
    ISP_ENUM = 1,
    ISP_STRING = 2,
    ISP_INT = 3,
    ISP_BOOL = 4,
    ISP_COLOR = 5,
    ISP_MARGINS = 6,
    ISP_FILENAME = 7,
    ISP_SIZE = 8,
    ISP_POSITION = 9,
    ISP_RECT = 10,
    ISP_FONT = 11,
    ISP_INTLIST = 12,
    ISP_HBITMAP = 13,
    ISP_STREAM = 14,
    ISP_BITMAPREF = 15,
    ISP_SIMPLIFIEDIMAGETYPE = 16,
    ISP_HIGHCONTRASTCOLORTYPE = 17,
    ISP_BITMAPIMAGETYPE = 18,
    ISP_COMPOSEDIMAGETYPE = 19,
    ISP_FLOAT = 20,
    ISP_FLOATLIST = 21
};

typedef enum SYNCMGR_CANCEL_REQUEST {
    SYNCMGR_CR_NONE = 0,
    SYNCMGR_CR_CANCEL_ITEM = 1,
    SYNCMGR_CR_CANCEL_ALL = 2,
    SYNCMGR_CR_MAX = 2
};

typedef enum SYNCMGR_CONFLICT_ITEM_TYPE {
    SYNCMGR_CIT_UPDATED = 1,
    SYNCMGR_CIT_DELETED = 2
};

typedef enum SYNCMGR_EVENT_LEVEL {
    SYNCMGR_EL_INFORMATION = 1,
    SYNCMGR_EL_WARNING = 2,
    SYNCMGR_EL_ERROR = 3,
    SYNCMGR_EL_MAX = 3
};

typedef enum SYNCMGR_HANDLER_POLICIES {
    SYNCMGR_HPM_NONE = 0,
    SYNCMGR_HPM_PREVENT_ACTIVATE = 1,
    SYNCMGR_HPM_PREVENT_DEACTIVATE = 2,
    SYNCMGR_HPM_PREVENT_ENABLE = 4,
    SYNCMGR_HPM_PREVENT_DISABLE = 8,
    SYNCMGR_HPM_PREVENT_START_SYNC = 16,
    SYNCMGR_HPM_PREVENT_STOP_SYNC = 32,
    SYNCMGR_HPM_DISABLE_ENABLE = 256,
    SYNCMGR_HPM_DISABLE_DISABLE = 512,
    SYNCMGR_HPM_DISABLE_START_SYNC = 1024,
    SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048,
    SYNCMGR_HPM_DISABLE_BROWSE = 4096,
    SYNCMGR_HPM_DISABLE_SCHEDULE = 8192,
    SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 0x10000,
    SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48,
    SYNCMGR_HPM_VALID_MASK = 0x12f3f
};

typedef enum SYNCMGR_HANDLER_TYPE {
    SYNCMGR_HT_UNSPECIFIED = 0,
    SYNCMGR_HT_APPLICATION = 1,
    SYNCMGR_HT_DEVICE = 2,
    SYNCMGR_HT_FOLDER = 3,
    SYNCMGR_HT_SERVICE = 4,
    SYNCMGR_HT_COMPUTER = 5,
    SYNCMGR_HT_MIN = 0,
    SYNCMGR_HT_MAX = 5
};

typedef enum SYNCMGR_PRESENTER_CHOICE {
    SYNCMGR_PC_NO_CHOICE = 0,
    SYNCMGR_PC_KEEP_ONE = 1,
    SYNCMGR_PC_KEEP_MULTIPLE = 2,
    SYNCMGR_PC_KEEP_RECENT = 3,
    SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4,
    SYNCMGR_PC_SKIP = 5
};

typedef enum SYNCMGR_PRESENTER_NEXT_STEP {
    SYNCMGR_PNS_CONTINUE = 0,
    SYNCMGR_PNS_DEFAULT = 1,
    SYNCMGR_PNS_CANCEL = 2
};

typedef enum SYNCMGR_PROGRESS_STATUS {
    SYNCMGR_PS_UPDATING = 1,
    SYNCMGR_PS_UPDATING_INDETERMINATE = 2,
    SYNCMGR_PS_SUCCEEDED = 3,
    SYNCMGR_PS_FAILED = 4,
    SYNCMGR_PS_CANCELED = 5,
    SYNCMGR_PS_DISCONNECTED = 6,
    SYNCMGR_PS_MAX = 6
};

typedef enum SYNCMGR_RESOLUTION_FEEDBACK {
    SYNCMGR_RF_CONTINUE = 0,
    SYNCMGR_RF_REFRESH = 1,
    SYNCMGR_RF_CANCEL = 2
};

typedef enum SYNCMGR_UPDATE_REASON {
    SYNCMGR_UR_ADDED = 0,
    SYNCMGR_UR_CHANGED = 1,
    SYNCMGR_UR_REMOVED = 2,
    SYNCMGR_UR_MAX = 2
};

typedef enum SYNC_ENGINE_STATE_FLAGS {
    SESF_NONE = 0,
    SESF_SERVICE_QUOTA_NEARING_LIMIT = 1,
    SESF_SERVICE_QUOTA_EXCEEDED_LIMIT = 2,
    SESF_AUTHENTICATION_ERROR = 4,
    SESF_PAUSED_DUE_TO_METERED_NETWORK = 8,
    SESF_PAUSED_DUE_TO_DISK_SPACE_FULL = 16,
    SESF_PAUSED_DUE_TO_CLIENT_POLICY = 32,
    SESF_PAUSED_DUE_TO_SERVICE_POLICY = 64,
    SESF_SERVICE_UNAVAILABLE = 128,
    SESF_PAUSED_DUE_TO_USER_REQUEST = 256,
    SESF_ALL_FLAGS = 511
};

typedef enum SYNC_STREAM_COMPLETION_MODE {
    SSCM_DEFAULT = 0,
    SSCM_TRUNCATE = 1
};

typedef enum SYNC_TRANSFER_STATUS {
    STS_NONE = 0,
    STS_NEEDSUPLOAD = 1,
    STS_NEEDSDOWNLOAD = 2,
    STS_TRANSFERRING = 4,
    STS_PAUSED = 8,
    STS_HASERROR = 16,
    STS_FETCHING_METADATA = 32,
    STS_USER_REQUESTED_REFRESH = 64,
    STS_HASWARNING = 128,
    STS_EXCLUDED = 256,
    STS_INCOMPLETE = 512,
    STS_PLACEHOLDER_IFEMPTY = 1024
};

typedef enum SYSBUTTONSTATES {
    SBS_NORMAL = 1,
    SBS_HOT = 2,
    SBS_PUSHED = 3,
    SBS_DISABLED = 4
};

typedef enum SYSGEOCLASS {
    GEOCLASS_NATION = 16,
    GEOCLASS_REGION = 14,
    GEOCLASS_ALL = 0
};

typedef enum SYSGEOTYPE {
    GEO_NATION = 1,
    GEO_LATITUDE = 2,
    GEO_LONGITUDE = 3,
    GEO_ISO2 = 4,
    GEO_ISO3 = 5,
    GEO_RFC1766 = 6,
    GEO_LCID = 7,
    GEO_FRIENDLYNAME = 8,
    GEO_OFFICIALNAME = 9,
    GEO_TIMEZONES = 10,
    GEO_OFFICIALLANGUAGES = 11,
    GEO_ISO_UN_NUMBER = 12,
    GEO_PARENT = 13,
    GEO_DIALINGCODE = 14,
    GEO_CURRENCYCODE = 15,
    GEO_CURRENCYSYMBOL = 16,
    GEO_NAME = 17,
    GEO_ID = 18
};

typedef enum SYSNLS_FUNCTION {
    COMPARE_STRING = 1
};

typedef enum SYSTEMCLOSESTATES {
    MSYSC_NORMAL = 1,
    MSYSC_DISABLED = 2
};

typedef enum SYSTEMMAXIMIZESTATES {
    MSYSMX_NORMAL = 1,
    MSYSMX_DISABLED = 2
};

typedef enum SYSTEMMINIMIZESTATES {
    MSYSMN_NORMAL = 1,
    MSYSMN_DISABLED = 2
};

typedef enum SYSTEMRESTORESTATES {
    MSYSR_NORMAL = 1,
    MSYSR_DISABLED = 2
};

typedef enum SYSTEM_POWER_CONDITION {
    PoAc = 0,
    PoDc = 1,
    PoHot = 2,
    PoConditionMaximum = 3
};

typedef enum SecureLockIconConstants {
    secureLockIconUnsecure = 0,
    secureLockIconMixed = 1,
    secureLockIconSecureUnknownBits = 2,
    secureLockIconSecure40Bit = 3,
    secureLockIconSecure56Bit = 4,
    secureLockIconSecureFortezza = 5,
    secureLockIconSecure128Bit = 6
};

typedef enum SessionOp {
    SESSION_QUERY = 0,
    SESSION_INCREMENT = 1,
    SESSION_DECREMENT = 2,
    SESSION_INCREMENT_NODEFAULTBROWSERCHECK = 3
};

typedef enum ShellFolderViewOptions {
    SFVVO_SHOWALLOBJECTS = 1,
    SFVVO_SHOWEXTENSIONS = 2,
    SFVVO_SHOWCOMPCOLOR = 8,
    SFVVO_SHOWSYSFILES = 32,
    SFVVO_WIN95CLASSIC = 64,
    SFVVO_DOUBLECLICKINWEBVIEW = 128,
    SFVVO_DESKTOPHTML = 512
};

typedef enum ShellSpecialFolderConstants {
    ssfDESKTOP = 0,
    ssfPROGRAMS = 2,
    ssfCONTROLS = 3,
    ssfPRINTERS = 4,
    ssfPERSONAL = 5,
    ssfFAVORITES = 6,
    ssfSTARTUP = 7,
    ssfRECENT = 8,
    ssfSENDTO = 9,
    ssfBITBUCKET = 10,
    ssfSTARTMENU = 11,
    ssfDESKTOPDIRECTORY = 16,
    ssfDRIVES = 17,
    ssfNETWORK = 18,
    ssfNETHOOD = 19,
    ssfFONTS = 20,
    ssfTEMPLATES = 21,
    ssfCOMMONSTARTMENU = 22,
    ssfCOMMONPROGRAMS = 23,
    ssfCOMMONSTARTUP = 24,
    ssfCOMMONDESKTOPDIR = 25,
    ssfAPPDATA = 26,
    ssfPRINTHOOD = 27,
    ssfLOCALAPPDATA = 28,
    ssfALTSTARTUP = 29,
    ssfCOMMONALTSTARTUP = 30,
    ssfCOMMONFAVORITES = 31,
    ssfINTERNETCACHE = 32,
    ssfCOOKIES = 33,
    ssfHISTORY = 34,
    ssfCOMMONAPPDATA = 35,
    ssfWINDOWS = 36,
    ssfSYSTEM = 37,
    ssfPROGRAMFILES = 38,
    ssfMYPICTURES = 39,
    ssfPROFILE = 40,
    ssfSYSTEMx86 = 41,
    ssfPROGRAMFILESx86 = 48
};

typedef enum ShellWindowFindWindowOptions {
    SWFO_NEEDDISPATCH = 1,
    SWFO_INCLUDEPENDING = 2,
    SWFO_COOKIEPASSED = 4
};

typedef enum ShellWindowTypeConstants {
    SWC_EXPLORER = 0,
    SWC_BROWSER = 1,
    SWC_3RDPARTY = 2,
    SWC_CALLBACK = 4,
    SWC_DESKTOP = 8
};

typedef enum SmallButtonCloseGlyph120DarkSTATES {
    DWMSBCGLY120D_NORMAL = 1,
    DWMSBCGLY120D_HOT = 2,
    DWMSBCGLY120D_PUSHED = 3,
    DWMSBCGLY120D_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph120STATES {
    DWMSBCGLY120_NORMAL = 1,
    DWMSBCGLY120_HOT = 2,
    DWMSBCGLY120_PUSHED = 3,
    DWMSBCGLY120_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph144DarkSTATES {
    DWMSBCGLY144D_NORMAL = 1,
    DWMSBCGLY144D_HOT = 2,
    DWMSBCGLY144D_PUSHED = 3,
    DWMSBCGLY144D_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph144STATES {
    DWMSBCGLY144_NORMAL = 1,
    DWMSBCGLY144_HOT = 2,
    DWMSBCGLY144_PUSHED = 3,
    DWMSBCGLY144_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph192DarkSTATES {
    DWMSBCGLY192D_NORMAL = 1,
    DWMSBCGLY192D_HOT = 2,
    DWMSBCGLY192D_PUSHED = 3,
    DWMSBCGLY192D_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph192STATES {
    DWMSBCGLY192_NORMAL = 1,
    DWMSBCGLY192_HOT = 2,
    DWMSBCGLY192_PUSHED = 3,
    DWMSBCGLY192_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph96DarkSTATES {
    DWMSBCGLY96D_NORMAL = 1,
    DWMSBCGLY96D_HOT = 2,
    DWMSBCGLY96D_PUSHED = 3,
    DWMSBCGLY96D_DISABLED = 4
};

typedef enum SmallButtonCloseGlyph96STATES {
    DWMSBCGLY96_NORMAL = 1,
    DWMSBCGLY96_HOT = 2,
    DWMSBCGLY96_PUSHED = 3,
    DWMSBCGLY96_DISABLED = 4
};

typedef enum State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum SwitchBranch_Branch_Context {
    SwitchBranch_Branch_Context_Invalid = 0,
    SwitchBranch_Branch_Context_Process = 1,
    SwitchBranch_Branch_Context_Caller = 2,
    SwitchBranch_Branch_Context_Virtualization = 3,
    SwitchBranch_Branch_Context_Max = 4
};

typedef enum SwitchBranch_Branch_Packaging {
    SwitchBranch_Branch_Packaging_Invalid = 0,
    SwitchBranch_Branch_Packaging_In_This_Binary = 1,
    SwitchBranch_Branch_Packaging_In_Separate_Binary = 2,
    SwitchBranch_Branch_Packaging_Max = 3
};

typedef enum TABITEMBOTHEDGESTATES {
    TIBES_NORMAL = 1,
    TIBES_HOT = 2,
    TIBES_SELECTED = 3,
    TIBES_DISABLED = 4,
    TIBES_FOCUSED = 5
};

typedef enum TABITEMLEFTEDGESTATES {
    TILES_NORMAL = 1,
    TILES_HOT = 2,
    TILES_SELECTED = 3,
    TILES_DISABLED = 4,
    TILES_FOCUSED = 5
};

typedef enum TABITEMRIGHTEDGESTATES {
    TIRES_NORMAL = 1,
    TIRES_HOT = 2,
    TIRES_SELECTED = 3,
    TIRES_DISABLED = 4,
    TIRES_FOCUSED = 5
};

typedef enum TABITEMSTATES {
    TIS_NORMAL = 1,
    TIS_HOT = 2,
    TIS_SELECTED = 3,
    TIS_DISABLED = 4,
    TIS_FOCUSED = 5
};

typedef enum TABPARTS {
    TABP_TABITEM = 1,
    TABP_TABITEMLEFTEDGE = 2,
    TABP_TABITEMRIGHTEDGE = 3,
    TABP_TABITEMBOTHEDGE = 4,
    TABP_TOPTABITEM = 5,
    TABP_TOPTABITEMLEFTEDGE = 6,
    TABP_TOPTABITEMRIGHTEDGE = 7,
    TABP_TOPTABITEMBOTHEDGE = 8,
    TABP_PANE = 9,
    TABP_BODY = 10,
    TABP_AEROWIZARDBODY = 11
};

typedef enum TABSTATES {
    CSTB_NORMAL = 1,
    CSTB_HOT = 2,
    CSTB_SELECTED = 3
};

typedef enum TASKBAND2PARTS {
    TDP2_NEGATIVESPACEBOTTOM = 1,
    TDP2_NEGATIVESPACETOP = 2,
    TDP2_NEGATIVESPACELEFT = 3,
    TDP2_NEGATIVESPACERIGHT = 4,
    TDP2_SINGLEBUTTON = 5,
    TDP2_GLOMHORIZONTALACTIVE = 6,
    TDP2_GLOMHORIZONTALINACTIVE = 7,
    TDP2_GLOMVERTICALACTIVE = 8,
    TDP2_GLOMVERTICALINACTIVE = 9,
    TDP2_GLOMDIVIDER = 10
};

typedef enum TASKBANDPARTS {
    TDP_GROUPCOUNT = 1,
    TDP_FLASHBUTTON = 2,
    TDP_FLASHBUTTONGROUPMENU = 3
};

typedef enum TASKBARPARTS {
    TBP_BACKGROUNDBOTTOM = 1,
    TBP_BACKGROUNDRIGHT = 2,
    TBP_BACKGROUNDTOP = 3,
    TBP_BACKGROUNDLEFT = 4,
    TBP_SIZINGBARBOTTOM = 5,
    TBP_SIZINGBARRIGHT = 6,
    TBP_SIZINGBARTOP = 7,
    TBP_SIZINGBARLEFT = 8
};

typedef enum TASKBARPEARLPARTS {
    TPRL_PEARLICON = 1,
    TPRL_TABLETMODEPEARLICON = 2
};

typedef enum TASKBARSHOWDESKTOPPARTS {
    TSDT_SHOWDESKTOPTHEME = 1,
    TSDT_DIVIDERLINE = 2
};

typedef enum TASKBAR_STATE_FLAGS {
    TSF_TASKBARMOVE = 1,
    TSF_SMALLICONS = 2,
    TSF_PREVIEW = 4,
    TSF_AUTOHIDE = 8
};

typedef enum TASKBUTTONSTATES {
    CMTB_NORMAL = 1,
    CMTB_HOT = 2,
    CMTB_PRESSED = 3,
    CMTB_KEYFOCUSED = 4,
    CMTB_NEARHOT = 5,
    CMTB_DISABLED = 6
};

typedef enum TASKDIALOGPARTS {
    TDLG_PRIMARYPANEL = 1,
    TDLG_MAININSTRUCTIONPANE = 2,
    TDLG_MAINICON = 3,
    TDLG_CONTENTPANE = 4,
    TDLG_CONTENTICON = 5,
    TDLG_EXPANDEDCONTENT = 6,
    TDLG_COMMANDLINKPANE = 7,
    TDLG_SECONDARYPANEL = 8,
    TDLG_CONTROLPANE = 9,
    TDLG_BUTTONSECTION = 10,
    TDLG_BUTTONWRAPPER = 11,
    TDLG_EXPANDOTEXT = 12,
    TDLG_EXPANDOBUTTON = 13,
    TDLG_VERIFICATIONTEXT = 14,
    TDLG_FOOTNOTEPANE = 15,
    TDLG_FOOTNOTEAREA = 16,
    TDLG_FOOTNOTESEPARATOR = 17,
    TDLG_EXPANDEDFOOTERAREA = 18,
    TDLG_PROGRESSBAR = 19,
    TDLG_IMAGEALIGNMENT = 20,
    TDLG_RADIOBUTTONPANE = 21
};

typedef enum TASKLINKSTATES {
    CPTL_NORMAL = 1,
    CPTL_HOT = 2,
    CPTL_PRESSED = 3,
    CPTL_DISABLED = 4,
    CPTL_PAGE = 5
};

typedef enum TASKMANAGERPARTS {
    TM_ROW = 1,
    TM_COLUMNDIVIDER = 2,
    TM_HEATMAP_COLOR0 = 3,
    TM_HEATMAP_COLOR1 = 4,
    TM_HEATMAP_COLOR2 = 5,
    TM_HEATMAP_COLOR3 = 6,
    TM_HEATMAP_COLOR4 = 7,
    TM_HEATMAP_COLOR5 = 8,
    TM_HEATMAP_COLOR6 = 9,
    TM_HEATMAP_COLOR7 = 10,
    TM_HEATMAP_COLOR8 = 11,
    TM_HEATMAP_CONTENTIONMARKER = 12,
    TM_HEATMAP_TEXT = 13,
    TM_RESOURCE_TITLE = 14,
    TM_RESOURCE_SUBTITLE = 15,
    TM_GROUPLABEL = 16,
    TM_STATICLABEL = 17,
    TM_STATICDATA = 18,
    TM_DYNAMICDATA = 19,
    TM_MEMORYBAR_AVAILABLE = 20,
    TM_MEMORYBAR_INUSE = 21,
    TM_MEMORYBAR_MODIFIED = 22,
    TM_MEMORYBAR_INUSE_SEPARATOR = 23,
    TM_COLUMNHEADERTEXT = 24,
    TM_CPU_HEATMAP_TEXT = 25,
    TM_CPU_HEATMAP_COLOR0 = 26,
    TM_CPU_HEATMAP_COLOR1 = 27,
    TM_CPU_HEATMAP_COLOR2 = 28,
    TM_CPU_HEATMAP_COLOR3 = 29,
    TM_CPU_HEATMAP_COLOR4 = 30,
    TM_CPU_HEATMAP_COLOR5 = 31,
    TM_CPU_HEATMAP_PARKED0 = 32,
    TM_CPU_HEATMAP_PARKED1 = 33,
    TM_CPU_HEATMAP_PARKED2 = 34,
    TM_CPU_HEATMAP_PARKED3 = 35,
    TM_CPU_HEATMAP_PARKED4 = 36,
    TM_CPU_HEATMAP_PARKED5 = 37,
    TM_CPU_HEATMAP_GRID_BORDER = 38,
    TM_CPU_HEATMAP_BLOCK_BORDER_R = 39,
    TM_CPU_HEATMAP_BLOCK_BORDER_B = 40,
    TM_COLHEADER_DIVIDER_COLOR1 = 41,
    TM_COLHEADER_DIVIDER_COLOR2 = 42,
    TM_CONTENTION_COLUMN_HEADER = 43,
    TM_CHARTLEGEND = 44,
    TM_COLUMNDIVIDERSELECTED = 45,
    TM_COLUMNDIVIDERHOT = 46
};

typedef enum TASK_FLOW_ID {
    TFID_ADD_USER = 0,
    TFID_CONNECT_LOCAL_USER = 1,
    TFID_CONNECT_DOMAIN_USER = 2,
    TFID_DISCONNECT_USER = 3,
    TFID_DISCONNECT_DOMAIN_USER = 4,
    TFID_CHANGE_LOCAL_PASSWORD = 5,
    TFID_CHANGE_ONLINE_PASSWORD = 6,
    TFID_COMPLETEACCOUNT = 7,
    TFID_TASKFLOW_MAX = 8
};

typedef enum TA_PROPERTY {
    TAP_FLAGS = 0,
    TAP_TRANSFORMCOUNT = 1,
    TAP_STAGGERDELAY = 2,
    TAP_STAGGERDELAYCAP = 3,
    TAP_STAGGERDELAYFACTOR = 4,
    TAP_ZORDER = 5
};

typedef enum TA_PROPERTY_FLAG {
    TAPF_NONE = 0,
    TAPF_HASSTAGGER = 1,
    TAPF_ISRTLAWARE = 2,
    TAPF_ALLOWCOLLECTION = 4,
    TAPF_HASBACKGROUND = 8,
    TAPF_HASPERSPECTIVE = 16
};

typedef enum TA_PROPERTY_PRIV {
    TAP_BACKGROUNDPARTID = 256,
    TAP_TUNINGLEVEL = 257,
    TAP_PERSPECTIVE = 258
};

typedef enum TA_TIMINGFUNCTION_TYPE {
    TTFT_UNDEFINED = 0,
    TTFT_CUBIC_BEZIER = 1
};

typedef enum TA_TRANSFORM_FLAG {
    TATF_NONE = 0,
    TATF_TARGETVALUES_USER = 1,
    TATF_HASINITIALVALUES = 2,
    TATF_HASORIGINVALUES = 4
};

typedef enum TA_TRANSFORM_FLAG_EXT {
    TATF_USE_X_ONLY = 4096,
    TATF_USE_Y_ONLY = 8192,
    TATF_USE_Z_ONLY = 16384
};

typedef enum TA_TRANSFORM_TYPE {
    TATT_TRANSLATE_2D = 0,
    TATT_SCALE_2D = 1,
    TATT_OPACITY = 2,
    TATT_CLIP = 3
};

typedef enum TA_TRANSFORM_TYPE_PRIV {
    TATT_ROTATE_2D = 256,
    TATT_SKEW_2D = 257,
    TATT_TRANSLATE_3D = 258,
    TATT_SCALE_3D = 259,
    TATT_ROTATE_3D = 260,
    TATT_SKEW_3D = 261
};

typedef enum TBPFLAG {
    TBPF_NOPROGRESS = 0,
    TBPF_INDETERMINATE = 1,
    TBPF_NORMAL = 2,
    TBPF_ERROR = 4,
    TBPF_PAUSED = 8
};

typedef enum TEXTGLOWPARTS {
    TG_BACKGROUND = 1
};

typedef enum TEXTGLOWSTATES {
    DWMTGS_NORMAL = 1
};

typedef enum TEXTSELECTIONGRIPPERPARTS {
    TSGP_GRIPPER = 1
};

typedef enum TEXTSHADOWTYPE {
    TST_NONE = 0,
    TST_SINGLE = 1,
    TST_CONTINUOUS = 2
};

typedef enum TEXTSTYLEPARTS {
    TEXT_MAININSTRUCTION = 1,
    TEXT_INSTRUCTION = 2,
    TEXT_BODYTITLE = 3,
    TEXT_BODYTEXT = 4,
    TEXT_SECONDARYTEXT = 5,
    TEXT_HYPERLINKTEXT = 6,
    TEXT_EXPANDED = 7,
    TEXT_LABEL = 8,
    TEXT_CONTROLLABEL = 9
};

typedef enum THEMEATOM {
    THEMEATOM_Nil = -1,
    THEMEATOM_SUBIDLIST = 0,
    THEMEATOM_SUBAPPNAME = 1,
    THEMEATOM_HTHEME = 2,
    THEMEATOM_UNUSED = 3,
    THEMEATOM_FLAGPROPERTIES = 4,
    THEMEATOM_PRINTING = 5,
    THEMEATOM_DLGTEXTURING = 6,
    THEMEATOM_MENUWINDOW = 7,
    THEMEATOM_NONCLIENT = 8,
    THEMEATOM_DWM_NCRENDERINGPOLICY = 9,
    THEMEATOM_SHAKE = 10,
    THEMEATOM_TAB = 11,
    THEMEATOM_CUSTOM = 12,
    THEMEATOM_TOUCHSCROLLFEEDBACK = 13,
    THEMEATOM_DARKMODE = 14,
    THEMEATOM_IGNORE_PER_WINDOW_DPI = 15,
    THEMEATOM_Count = 16
};

typedef enum THEMEHOOKSTATE {
    HS_INITIALIZED = 0,
    HS_UNHOOKING = 1,
    HS_UNINITIALIZED = 2
};

typedef enum THEMEPRIMITIVEID {
    TPID_BITMAPIMAGE = 0,
    TPID_BITMAPIMAGE1 = 1,
    TPID_BITMAPIMAGE2 = 2,
    TPID_BITMAPIMAGE3 = 3,
    TPID_BITMAPIMAGE4 = 4,
    TPID_BITMAPIMAGE5 = 5,
    TPID_BITMAPIMAGE6 = 6,
    TPID_BITMAPIMAGE7 = 7,
    TPID_STOCKBITMAPIMAGE = 8,
    TPID_GLYPHIMAGE = 9,
    TPID_ATLASINPUTIMAGE = 10,
    TPID_ATLASIMAGE = 11,
    TPID_ENUM = 12,
    TPID_STRING = 13,
    TPID_INT = 14,
    TPID_BOOL = 15,
    TPID_COLOR = 16,
    TPID_MARGINS = 17,
    TPID_FILENAME = 18,
    TPID_SIZE = 19,
    TPID_POSITION = 20,
    TPID_RECT = 21,
    TPID_FONT = 22,
    TPID_INTLIST = 23,
    TPID_DISKSTREAM = 24,
    TPID_STREAM = 25,
    TPID_ANIMATION = 26,
    TPID_TIMINGFUNCTION = 27,
    TPID_SIMPLIFIEDIMAGETYPE = 28,
    TPID_HIGHCONTRASTCOLORTYPE = 29,
    TPID_BITMAPIMAGETYPE = 30,
    TPID_COMPOSEDIMAGETYPE = 31,
    TPID_FLOAT = 32,
    TPID_FLOATLIST = 33,
    TPID_count = 34
};

typedef enum THEMESIZE {
    TS_MIN = 0,
    TS_TRUE = 1,
    TS_DRAW = 2
};

typedef enum THREADFLAGS {
    TF_NONE = 0,
    TF_LONGLIVEDTHREAD = 1,
    TF_LONGLIVEDTHREADMASK = 1
};

typedef enum THUMBBARBUTTONLEFTSTATES {
    THMBL_NORMAL = 1,
    THMBL_HOT = 2,
    THMBL_PRESSED = 3,
    THMBL_DISABLED = 4
};

typedef enum THUMBBARBUTTONMIDDLESTATES {
    THMBM_NORMAL = 1,
    THMBM_HOT = 2,
    THMBM_PRESSED = 3,
    THMBM_DISABLED = 4
};

typedef enum THUMBBARBUTTONRIGHTSTATES {
    THMBR_NORMAL = 1,
    THMBR_HOT = 2,
    THMBR_PRESSED = 3,
    THMBR_DISABLED = 4
};

typedef enum THUMBBARBUTTONSINGLESTATES {
    THMBS_NORMAL = 1,
    THMBS_HOT = 2,
    THMBS_PRESSED = 3,
    THMBS_DISABLED = 4
};

typedef enum THUMBBOTTOMSTATES {
    TUBS_NORMAL = 1,
    TUBS_HOT = 2,
    TUBS_PRESSED = 3,
    TUBS_FOCUSED = 4,
    TUBS_DISABLED = 5
};

typedef enum THUMBBUTTONFLAGS {
    THBF_ENABLED = 0,
    THBF_DISABLED = 1,
    THBF_DISMISSONCLICK = 2,
    THBF_NOBACKGROUND = 4,
    THBF_HIDDEN = 8,
    THBF_NONINTERACTIVE = 16
};

typedef enum THUMBBUTTONMASK {
    THB_BITMAP = 1,
    THB_ICON = 2,
    THB_TOOLTIP = 4,
    THB_FLAGS = 8
};

typedef enum THUMBCLOSEBUTTONSTATES {
    TEUCB_HOVER = 1,
    TEUCB_PRESSED = 2
};

typedef enum THUMBLEFTSTATES {
    TUVLS_NORMAL = 1,
    TUVLS_HOT = 2,
    TUVLS_PRESSED = 3,
    TUVLS_FOCUSED = 4,
    TUVLS_DISABLED = 5
};

typedef enum THUMBNAIL_TYPE {
    TT_DEFAULT = 0,
    TT_SNAPSHOT = 1,
    TT_ICONIC = 2,
    TT_BITMAPPENDING = 3,
    TT_BITMAP = 4
};

typedef enum THUMBRECTSTATES {
    TBEUIS_HOVER = 1,
    TBEUIS_ACTIVE = 2,
    TBEUIS_HOVERACTIVE = 3,
    TBEUIS_PRESSED = 4
};

typedef enum THUMBRIGHTSTATES {
    TUVRS_NORMAL = 1,
    TUVRS_HOT = 2,
    TUVRS_PRESSED = 3,
    TUVRS_FOCUSED = 4,
    TUVRS_DISABLED = 5
};

typedef enum THUMBSHADOWBOTTOMSTATES {
    TEUSB_ACTIVE = 1,
    TEUSB_INACTIVE = 2
};

typedef enum THUMBSHADOWLEFTSTATES {
    TEUSL_ACTIVE = 1,
    TEUSL_INACTIVE = 2
};

typedef enum THUMBSHADOWRIGHTSTATES {
    TEUSR_ACTIVE = 1,
    TEUSR_INACTIVE = 2
};

typedef enum THUMBSHADOWTOPSTATES {
    TEUST_ACTIVE = 1,
    TEUST_INACTIVE = 2
};

typedef enum THUMBSTATES {
    TUS_NORMAL = 1,
    TUS_HOT = 2,
    TUS_PRESSED = 3,
    TUS_FOCUSED = 4,
    TUS_DISABLED = 5
};

typedef enum THUMBTOPSTATES {
    TUTS_NORMAL = 1,
    TUTS_HOT = 2,
    TUTS_PRESSED = 3,
    TUTS_FOCUSED = 4,
    TUTS_DISABLED = 5
};

typedef enum THUMBVERTSTATES {
    TUVS_NORMAL = 1,
    TUVS_HOT = 2,
    TUVS_PRESSED = 3,
    TUVS_FOCUSED = 4,
    TUVS_DISABLED = 5
};

typedef enum TICSSTATES {
    TSS_NORMAL = 1
};

typedef enum TICSVERTSTATES {
    TSVS_NORMAL = 1
};

typedef enum TITLEBARSTATES {
    AW_S_TITLEBAR_ACTIVE = 1,
    AW_S_TITLEBAR_INACTIVE = 2
};

typedef enum TM_RESERVED_PROPVALS {
    TMT_THEMEMETRICS = 1,
    TMT_DIBDATA = 2,
    TMT_DIBDATA1 = 3,
    TMT_DIBDATA2 = 4,
    TMT_DIBDATA3 = 5,
    TMT_DIBDATA4 = 6,
    TMT_DIBDATA5 = 7,
    TMT_GLYPHDIBDATA = 8,
    TMT_NTLDATA = 9,
    TMT_PARTJUMPTABLE = 10,
    TMT_STATEJUMPTABLE = 11,
    TMT_JUMPTOPARENT = 12,
    TMT_ENUMDEF = 13,
    TMT_ENUMVAL = 14,
    TMT_RESERVED1 = 15,
    TMT_DRAWOBJ = 16,
    TMT_TEXTOBJ = 17,
    TMT_RGNLIST = 18,
    TMT_RGNDATA = 19,
    TMT_ENDOFCLASS = 20,
    TMT_UNKNOWN = 21,
    TMT_DIBDATA6 = 22,
    TMT_DIBDATA7 = 23
};

typedef enum TOOLBARPARTS {
    TP_BUTTON = 1,
    TP_DROPDOWNBUTTON = 2,
    TP_SPLITBUTTON = 3,
    TP_SPLITBUTTONDROPDOWN = 4,
    TP_SEPARATOR = 5,
    TP_SEPARATORVERT = 6,
    TP_DROPDOWNBUTTONGLYPH = 7
};

typedef enum TOOLBARSTYLESTATES {
    TS_NORMAL = 1,
    TS_HOT = 2,
    TS_PRESSED = 3,
    TS_DISABLED = 4,
    TS_CHECKED = 5,
    TS_HOTCHECKED = 6,
    TS_NEARHOT = 7,
    TS_OTHERSIDEHOT = 8
};

typedef enum TOOLTIPPARTS {
    TTP_STANDARD = 1,
    TTP_STANDARDTITLE = 2,
    TTP_BALLOON = 3,
    TTP_BALLOONTITLE = 4,
    TTP_CLOSE = 5,
    TTP_BALLOONSTEM = 6,
    TTP_WRENCH = 7
};

typedef enum TOPFRAMESTATES {
    DWMTFS_ACTIVE = 1,
    DWMTFS_INACTIVE = 2,
    DWMTFS_MAXACTIVE = 3,
    DWMTFS_MAXINACTIVE = 4
};

typedef enum TOPTABITEMBOTHEDGESTATES {
    TTIBES_NORMAL = 1,
    TTIBES_HOT = 2,
    TTIBES_SELECTED = 3,
    TTIBES_DISABLED = 4,
    TTIBES_FOCUSED = 5
};

typedef enum TOPTABITEMLEFTEDGESTATES {
    TTILES_NORMAL = 1,
    TTILES_HOT = 2,
    TTILES_SELECTED = 3,
    TTILES_DISABLED = 4,
    TTILES_FOCUSED = 5
};

typedef enum TOPTABITEMRIGHTEDGESTATES {
    TTIRES_NORMAL = 1,
    TTIRES_HOT = 2,
    TTIRES_SELECTED = 3,
    TTIRES_DISABLED = 4,
    TTIRES_FOCUSED = 5
};

typedef enum TOPTABITEMSTATES {
    TTIS_NORMAL = 1,
    TTIS_HOT = 2,
    TTIS_SELECTED = 3,
    TTIS_DISABLED = 4,
    TTIS_FOCUSED = 5
};

typedef enum TRACKBARPARTS {
    TKP_TRACK = 1,
    TKP_TRACKVERT = 2,
    TKP_THUMB = 3,
    TKP_THUMBBOTTOM = 4,
    TKP_THUMBTOP = 5,
    TKP_THUMBVERT = 6,
    TKP_THUMBLEFT = 7,
    TKP_THUMBRIGHT = 8,
    TKP_TICS = 9,
    TKP_TICSVERT = 10
};

typedef enum TRACKBARSTYLESTATES {
    TKS_NORMAL = 1
};

typedef enum TRACKED_WINDOW_STATE {
    TWS_RESTORED = 0,
    TWS_MAXIMIZED = 1,
    TWS_MINIMIZED = 2,
    TWS_ARRANGED = 3
};

typedef enum TRACKINGOPTION {
    TO_NONE = 0,
    TO_CLASS = 1,
    TO_PARTS = 2
};

typedef enum TRACKSTATES {
    TRS_NORMAL = 1
};

typedef enum TRACKVERTSTATES {
    TRVS_NORMAL = 1
};

typedef enum TRAILINGGRIDCELLSTATES {
    MCTGC_HOT = 1,
    MCTGC_HASSTATE = 2,
    MCTGC_HASSTATEHOT = 3,
    MCTGC_TODAY = 4,
    MCTGC_TODAYSELECTED = 5,
    MCTGC_SELECTED = 6,
    MCTGC_SELECTEDHOT = 7
};

typedef enum TRAILINGGRIDCELLUPPERSTATES {
    MCTGCU_HOT = 1,
    MCTGCU_HASSTATE = 2,
    MCTGCU_HASSTATEHOT = 3,
    MCTGCU_SELECTED = 4,
    MCTGCU_SELECTEDHOT = 5
};

typedef enum TRANSITIONCONTENTSTATES {
    TA_TRANSITIONCONTENT_INCOMING = 1,
    TA_TRANSITIONCONTENT_OUTGOING = 2
};

typedef enum TRANSITIONPAGESTATES {
    TA_TRANSITIONPAGE_INCOMING = 1,
    TA_TRANSITIONPAGE_OUTGOING = 2
};

typedef enum TRANSPARENTBACKGROUNDSTATES {
    CBTBS_NORMAL = 1,
    CBTBS_HOT = 2,
    CBTBS_DISABLED = 3,
    CBTBS_FOCUSED = 4
};

typedef enum TRANSPARENTBARSTATES {
    PBBS_NORMAL = 1,
    PBBS_PARTIAL = 2
};

typedef enum TRANSPARENTBARVERTSTATES {
    PBBVS_NORMAL = 1,
    PBBVS_PARTIAL = 2
};

typedef enum TRAYNOTIFYFLYOUTPARTS {
    TNF_TOP = 1,
    TNF_BOTTOM = 2,
    TNF_BUTTON = 3
};

typedef enum TRAYNOTIFYPARTS {
    TNP_BACKGROUND = 1,
    TNP_ANIMBACKGROUND = 2
};

typedef enum TREEITEMSTATES {
    TREIS_NORMAL = 1,
    TREIS_HOT = 2,
    TREIS_SELECTED = 3,
    TREIS_DISABLED = 4,
    TREIS_SELECTEDNOTFOCUS = 5,
    TREIS_HOTSELECTED = 6
};

typedef enum TREEVIEWPARTS {
    TVP_TREEITEM = 1,
    TVP_GLYPH = 2,
    TVP_BRANCH = 3,
    TVP_HOTGLYPH = 4
};

typedef enum TRIBIT {
    TRIBIT_UNDEFINED = 0,
    TRIBIT_TRUE = 1,
    TRIBIT_FALSE = 2
};

typedef enum TRUESIZESCALINGTYPE {
    TSST_NONE = 0,
    TSST_SIZE = 1,
    TSST_DPI = 2
};

typedef enum TRYHARDERPARTS {
    TH_BUTTON = 1,
    TH_VERTICAL = 2
};

typedef enum TRYHARDERSCOPES {
    THS_SPECIFIC_LIBRARY = 0,
    THS_ALL_LIBRARIES = 1,
    THS_ALL_USER_LIBRARIES = 2,
    THS_COMPUTER = 3,
    THS_CUSTOM_CANCEL = 4,
    THS_CUSTOM_NAVIGATE = 5,
    THS_INTERNET = 6,
    THS_GP_LIBRARY = 7,
    THS_GP_URL = 8,
    THS_SUBFOLDER = 9,
    THS_FILE_CONTENTS = 10,
    THS_UNUSED = 11,
    THS_OTHER = 12,
    THS_HISTORYVAULT = 13
};

typedef enum TaskbandExtendedUIPARTS {
    TBEUIP_BACKGROUND = 1,
    TBEUIP_THUMBRECT = 2,
    TBEUIP_WINDOWTEXT = 3,
    TBEUIP_ACTIVERECT = 4,
    TBEUIP_PREVACTIVERECT = 5,
    TBEUIP_THUMBBARBUTTONSINGLE = 6,
    TBEUIP_THUMBBARBUTTONLEFT = 7,
    TBEUIP_THUMBBARBUTTONMIDDLE = 8,
    TBEUIP_THUMBBARBUTTONRIGHT = 9,
    TBEUIP_THUMBCLOSEBUTTON = 10,
    TBEUIP_ARROWBTN = 11,
    TBEUIP_THUMBSHADOWTOP = 12,
    TBEUIP_THUMBSHADOWLEFT = 13,
    TBEUIP_THUMBSHADOWRIGHT = 14,
    TBEUIP_THUMBSHADOWBOTTOM = 15,
    TBEUIP_WINDOWBORDER = 16
};

typedef enum ThemeDataNamespace {
    Unnamed = 0,
    Global = 1,
    Session = 2
};

typedef enum ThemeTelemetryTypes::LockScreenAppType {
    Unknown = 0,
    DetailedStatus = 1,
    Badge = 2
};

typedef enum TlgIn_t {
    TlgInNULL = 0,
    TlgInUNICODESTRING = 1,
    TlgInANSISTRING = 2,
    TlgInINT8 = 3,
    TlgInUINT8 = 4,
    TlgInINT16 = 5,
    TlgInUINT16 = 6,
    TlgInINT32 = 7,
    TlgInUINT32 = 8,
    TlgInINT64 = 9,
    TlgInUINT64 = 10,
    TlgInFLOAT = 11,
    TlgInDOUBLE = 12,
    TlgInBOOL32 = 13,
    TlgInBINARY = 14,
    TlgInGUID = 15,
    _TlgInPOINTER_unsupported = 16,
    TlgInFILETIME = 17,
    TlgInSYSTEMTIME = 18,
    TlgInSID = 19,
    TlgInHEXINT32 = 20,
    TlgInHEXINT64 = 21,
    TlgInCOUNTEDSTRING = 22,
    TlgInCOUNTEDANSISTRING = 23,
    _TlgInSTRUCT = 24,
    TlgInCOUNTEDBINARY = 25,
    _TlgInMax = 26,
    TlgInINTPTR = 9,
    TlgInUINTPTR = 10,
    TlgInPOINTER = 21,
    _TlgInCcount = 32,
    TlgInVcount = 64,
    _TlgInChain = 128,
    _TlgInCustom = 96,
    _TlgInTypeMask = 31,
    _TlgInCountMask = 96,
    _TlgInFlagMask = 224
};

typedef enum TlgOut_t {
    TlgOutNULL = 0,
    TlgOutNOPRINT = 1,
    TlgOutSTRING = 2,
    TlgOutBOOLEAN = 3,
    TlgOutHEX = 4,
    TlgOutPID = 5,
    TlgOutTID = 6,
    TlgOutPORT = 7,
    TlgOutIPV4 = 8,
    TlgOutIPV6 = 9,
    TlgOutSOCKETADDRESS = 10,
    TlgOutXML = 11,
    TlgOutJSON = 12,
    TlgOutWIN32ERROR = 13,
    TlgOutNTSTATUS = 14,
    TlgOutHRESULT = 15,
    TlgOutFILETIME = 16,
    TlgOutSIGNED = 17,
    TlgOutUNSIGNED = 18,
    TlgOutUTF8 = 35,
    TlgOutPKCS7_WITH_TYPE_INFO = 36,
    TlgOutCODE_POINTER = 37,
    _TlgOutMax = 38,
    _TlgOutChain = 128,
    _TlgOutTypeMask = 127
};

typedef enum TrustLevel {
    BaseTrust = 0,
    PartialTrust = 1,
    FullTrust = 2
};

typedef enum UMFD_WINLOGON_COMMAND {
    UMFD_WINLOGON_COMMAND_InitializeAndRegisterHost = 0,
    UMFD_WINLOGON_COMMAND_TerminateHost = 1
};

typedef enum UPDATEBADGESTATES {
    TA_UPDATEBADGE_INCOMING = 1,
    TA_UPDATEBADGE_OUTGOING = 2
};

typedef enum UPDATEMETADATASTATES {
    DDUPDATEMETADATA_HIGHLIGHT = 1,
    DDUPDATEMETADATA_NOHIGHLIGHT = 2
};

typedef enum UPHORZSTATES {
    UPHZS_NORMAL = 1,
    UPHZS_HOT = 2,
    UPHZS_PRESSED = 3,
    UPHZS_DISABLED = 4
};

typedef enum UPSTATES {
    UPS_NORMAL = 1,
    UPS_HOT = 2,
    UPS_PRESSED = 3,
    UPS_DISABLED = 4
};

typedef enum URLIS {
    URLIS_URL = 0,
    URLIS_OPAQUE = 1,
    URLIS_NOHISTORY = 2,
    URLIS_FILEURL = 3,
    URLIS_APPLIABLE = 4,
    URLIS_DIRECTORY = 5,
    URLIS_HASQUERY = 6
};

typedef enum URL_PART {
    URL_PART_NONE = 0,
    URL_PART_SCHEME = 1,
    URL_PART_HOSTNAME = 2,
    URL_PART_USERNAME = 3,
    URL_PART_PASSWORD = 4,
    URL_PART_PORT = 5,
    URL_PART_QUERY = 6
};

typedef enum URL_SCHEME {
    URL_SCHEME_INVALID = -1,
    URL_SCHEME_UNKNOWN = 0,
    URL_SCHEME_FTP = 1,
    URL_SCHEME_HTTP = 2,
    URL_SCHEME_GOPHER = 3,
    URL_SCHEME_MAILTO = 4,
    URL_SCHEME_NEWS = 5,
    URL_SCHEME_NNTP = 6,
    URL_SCHEME_TELNET = 7,
    URL_SCHEME_WAIS = 8,
    URL_SCHEME_FILE = 9,
    URL_SCHEME_MK = 10,
    URL_SCHEME_HTTPS = 11,
    URL_SCHEME_SHELL = 12,
    URL_SCHEME_SNEWS = 13,
    URL_SCHEME_LOCAL = 14,
    URL_SCHEME_JAVASCRIPT = 15,
    URL_SCHEME_VBSCRIPT = 16,
    URL_SCHEME_ABOUT = 17,
    URL_SCHEME_RES = 18,
    URL_SCHEME_MSSHELLROOTED = 19,
    URL_SCHEME_MSSHELLIDLIST = 20,
    URL_SCHEME_MSHELP = 21,
    URL_SCHEME_MSSHELLDEVICE = 22,
    URL_SCHEME_WILDCARD = 23,
    URL_SCHEME_SEARCH_MS = 24,
    URL_SCHEME_SEARCH = 25,
    URL_SCHEME_KNOWNFOLDER = 26,
    URL_SCHEME_MAXVALUE = 27
};

typedef enum USERTILEPARTS {
    UTP_STROKEBACKGROUND = 1,
    UTP_HOVERBACKGROUND = 2
};

typedef enum USER_INTERACTION_MODE {
    UIM_MOUSE = 0,
    UIM_TOUCH = 1
};

typedef enum USER_TILE_TYPE {
    UTT_IMAGE_96 = 0,
    UTT_IMAGE_448 = 1,
    UTT_VIDEO_448 = 2,
    UTT_DEFAULT = 3,
    UTT_IMAGE_32 = 4,
    UTT_IMAGE_40 = 5,
    UTT_IMAGE_48 = 6,
    UTT_IMAGE_192 = 7,
    UTT_VIDEO_192 = 8,
    UTT_IMAGE_240 = 9,
    UTT_VIDEO_240 = 10
};

typedef enum VALIGN {
    VA_TOP = 0,
    VA_CENTER = 1,
    VA_BOTTOM = 2
};

typedef enum VALUECIDSTATES {
    PPVACID_READONLY = 1,
    PPVACID_READWRITE = 2
};

typedef enum VALUESTATES {
    PPVA_READONLY = 1,
    PPVA_READWRITE = 2
};

typedef enum VARENUM {
    VT_EMPTY = 0,
    VT_NULL = 1,
    VT_I2 = 2,
    VT_I4 = 3,
    VT_R4 = 4,
    VT_R8 = 5,
    VT_CY = 6,
    VT_DATE = 7,
    VT_BSTR = 8,
    VT_DISPATCH = 9,
    VT_ERROR = 10,
    VT_BOOL = 11,
    VT_VARIANT = 12,
    VT_UNKNOWN = 13,
    VT_DECIMAL = 14,
    VT_I1 = 16,
    VT_UI1 = 17,
    VT_UI2 = 18,
    VT_UI4 = 19,
    VT_I8 = 20,
    VT_UI8 = 21,
    VT_INT = 22,
    VT_UINT = 23,
    VT_VOID = 24,
    VT_HRESULT = 25,
    VT_PTR = 26,
    VT_SAFEARRAY = 27,
    VT_CARRAY = 28,
    VT_USERDEFINED = 29,
    VT_LPSTR = 30,
    VT_LPWSTR = 31,
    VT_RECORD = 36,
    VT_INT_PTR = 37,
    VT_UINT_PTR = 38,
    VT_FILETIME = 64,
    VT_BLOB = 65,
    VT_STREAM = 66,
    VT_STORAGE = 67,
    VT_STREAMED_OBJECT = 68,
    VT_STORED_OBJECT = 69,
    VT_BLOB_OBJECT = 70,
    VT_CF = 71,
    VT_CLSID = 72,
    VT_VERSIONED_STREAM = 73,
    VT_BSTR_BLOB = 4095,
    VT_VECTOR = 4096,
    VT_ARRAY = 8192,
    VT_BYREF = 16384,
    VT_RESERVED = 0x8000,
    VT_ILLEGAL = 0xffff,
    VT_ILLEGALMASKED = 4095,
    VT_TYPEMASK = 4095
};

typedef enum VERIFIER_MODE {
    VERIFIER_MODE_UNUSED = 0,
    VERIFIER_MODE_TRIAGE = 1,
    VERIFIER_MODE_FIELD = 2,
    VERIFIER_MODE_LOGO = 3,
    VERIFIER_MODE_TEST = 4
};

typedef enum VERTSCROLLSTATES {
    VSS_NORMAL = 1,
    VSS_HOT = 2,
    VSS_PUSHED = 3,
    VSS_DISABLED = 4
};

typedef enum VERTTHUMBSTATES {
    VTS_NORMAL = 1,
    VTS_HOT = 2,
    VTS_PUSHED = 3,
    VTS_DISABLED = 4
};

typedef enum VIEW_PRESENTATION_MODE {
    VPM_DESKTOP = 0,
    VPM_HOLOGRAPHIC = 1
};

typedef enum VIEW_SETTING_ID {
    VSIDF_VIEWMODE = 1,
    VSIDF_IMAGESIZE = 2,
    VSIDF_SORTCOLUMNS = 4,
    VSIDF_GROUPBY = 8,
    VSIDF_FOLDERFLAGS = 16,
    VSIDF_SUBSETCOUNT = 32,
    VSIDF_FOLDERTYPE = 64,
    VSIDF_VISIBLECOLUMNSWIDTH = 128,
    VSIDF_VISIBLECOLUMNSSET = 256,
    VSIDF_VISIBLECOLUMNSORDER = 512,
    VSIDF_VISIBLECOLUMNSALL = 896
};

typedef enum VIRTUALIZEDSELECTIONARRAYVALUE {
    VSAV_ZEROTHITEMDEVIRTUALIZER = 0,
    VSAV_PARTIALDEVIRTUALIZER = 1,
    VSAV_FULLDEVIRTUALIZER = 2,
    VSAV_STARTINGITEM = 3,
    VSAV_INDEXSTARTINGITEM = 4
};

typedef enum VIRTUALUIGROUPITEMVALUE {
    VUGIV_VERSION = 0,
    VUGIV_ITEM = 1,
    VUGIV_ITEMCOLLECTION = 2
};

typedef enum VSRESOURCETYPE {
    VSRT_NIL = 0,
    VSRT_STRING = 1,
    VSRT_BITMAP = 2,
    VSRT_STREAM = 3
};

typedef enum Variant_EdgeDesktopShortcut {
    None = 0,
    CreateOnNextLogin = 1
};

typedef enum Variant_FaceClientEnrollmentExperience {
    None = 0,
    PhaseOne = 1,
    PhaseTwo = 2
};

typedef enum Variant_LockExpMgr_AppHostingModel {
    None = 0,
    DelayLaunchedExperienceManager = 1,
    PrelaunchedExperienceManager = 2
};

typedef enum Variant_LockReliability_PerformanceBoost {
    None = 0,
    EnableCpuBoost = 1,
    EnableIOReservation = 2,
    FeatureIsOff = 3
};

typedef enum Variant_PrelaunchEdgeLogon {
    None = 0,
    PrelaunchEdgeLogon = 1
};

typedef enum Variant_PrelaunchEdgeOnFrameExit {
    None = 0,
    Disable_PrelaunchEdgeOnFrameExit = 1,
    Enable_PrelaunchEdgeOnFrameExit = 2
};

typedef enum Variant_SetLockScreenImageAsDesktopBackground {
    None = 0,
    ShowFavoriteIcon = 1
};

typedef enum Variant_SingleTabVisuals {
    None = 0,
    WiderTab = 1,
    VariableWidthTab = 2,
    FullWidthTab = 3
};

typedef enum Variant_TabShellAutoTabbingPreference {
    None = 0,
    NewWindow = 1,
    NewTab = 2
};

typedef enum Variant_TabShellVisibility {
    None = 0,
    Visible = 1
};

typedef enum Variant_YourPhoneDesktopShortcut {
    None = 0,
    CreateOnNextLogon = 1,
    Pin = 2
};

typedef enum Variant_YourPhoneTaskbarIcon {
    None = 0,
    CreateOnNextLogon = 1,
    Pin = 2,
    NoRegionRestriction = 3
};

typedef enum WARNINGSTATES {
    DDWARNING_HIGHLIGHT = 1,
    DDWARNING_NOHIGHLIGHT = 2
};

typedef enum WELL_KNOWN_SID_TYPE {
    WinNullSid = 0,
    WinWorldSid = 1,
    WinLocalSid = 2,
    WinCreatorOwnerSid = 3,
    WinCreatorGroupSid = 4,
    WinCreatorOwnerServerSid = 5,
    WinCreatorGroupServerSid = 6,
    WinNtAuthoritySid = 7,
    WinDialupSid = 8,
    WinNetworkSid = 9,
    WinBatchSid = 10,
    WinInteractiveSid = 11,
    WinServiceSid = 12,
    WinAnonymousSid = 13,
    WinProxySid = 14,
    WinEnterpriseControllersSid = 15,
    WinSelfSid = 16,
    WinAuthenticatedUserSid = 17,
    WinRestrictedCodeSid = 18,
    WinTerminalServerSid = 19,
    WinRemoteLogonIdSid = 20,
    WinLogonIdsSid = 21,
    WinLocalSystemSid = 22,
    WinLocalServiceSid = 23,
    WinNetworkServiceSid = 24,
    WinBuiltinDomainSid = 25,
    WinBuiltinAdministratorsSid = 26,
    WinBuiltinUsersSid = 27,
    WinBuiltinGuestsSid = 28,
    WinBuiltinPowerUsersSid = 29,
    WinBuiltinAccountOperatorsSid = 30,
    WinBuiltinSystemOperatorsSid = 31,
    WinBuiltinPrintOperatorsSid = 32,
    WinBuiltinBackupOperatorsSid = 33,
    WinBuiltinReplicatorSid = 34,
    WinBuiltinPreWindows2000CompatibleAccessSid = 35,
    WinBuiltinRemoteDesktopUsersSid = 36,
    WinBuiltinNetworkConfigurationOperatorsSid = 37,
    WinAccountAdministratorSid = 38,
    WinAccountGuestSid = 39,
    WinAccountKrbtgtSid = 40,
    WinAccountDomainAdminsSid = 41,
    WinAccountDomainUsersSid = 42,
    WinAccountDomainGuestsSid = 43,
    WinAccountComputersSid = 44,
    WinAccountControllersSid = 45,
    WinAccountCertAdminsSid = 46,
    WinAccountSchemaAdminsSid = 47,
    WinAccountEnterpriseAdminsSid = 48,
    WinAccountPolicyAdminsSid = 49,
    WinAccountRasAndIasServersSid = 50,
    WinNTLMAuthenticationSid = 51,
    WinDigestAuthenticationSid = 52,
    WinSChannelAuthenticationSid = 53,
    WinThisOrganizationSid = 54,
    WinOtherOrganizationSid = 55,
    WinBuiltinIncomingForestTrustBuildersSid = 56,
    WinBuiltinPerfMonitoringUsersSid = 57,
    WinBuiltinPerfLoggingUsersSid = 58,
    WinBuiltinAuthorizationAccessSid = 59,
    WinBuiltinTerminalServerLicenseServersSid = 60,
    WinBuiltinDCOMUsersSid = 61,
    WinBuiltinIUsersSid = 62,
    WinIUserSid = 63,
    WinBuiltinCryptoOperatorsSid = 64,
    WinUntrustedLabelSid = 65,
    WinLowLabelSid = 66,
    WinMediumLabelSid = 67,
    WinHighLabelSid = 68,
    WinSystemLabelSid = 69,
    WinWriteRestrictedCodeSid = 70,
    WinCreatorOwnerRightsSid = 71,
    WinCacheablePrincipalsGroupSid = 72,
    WinNonCacheablePrincipalsGroupSid = 73,
    WinEnterpriseReadonlyControllersSid = 74,
    WinAccountReadonlyControllersSid = 75,
    WinBuiltinEventLogReadersGroup = 76,
    WinNewEnterpriseReadonlyControllersSid = 77,
    WinBuiltinCertSvcDComAccessGroup = 78,
    WinMediumPlusLabelSid = 79,
    WinLocalLogonSid = 80,
    WinConsoleLogonSid = 81,
    WinThisOrganizationCertificateSid = 82,
    WinApplicationPackageAuthoritySid = 83,
    WinBuiltinAnyPackageSid = 84,
    WinCapabilityInternetClientSid = 85,
    WinCapabilityInternetClientServerSid = 86,
    WinCapabilityPrivateNetworkClientServerSid = 87,
    WinCapabilityPicturesLibrarySid = 88,
    WinCapabilityVideosLibrarySid = 89,
    WinCapabilityMusicLibrarySid = 90,
    WinCapabilityDocumentsLibrarySid = 91,
    WinCapabilitySharedUserCertificatesSid = 92,
    WinCapabilityEnterpriseAuthenticationSid = 93,
    WinCapabilityRemovableStorageSid = 94,
    WinBuiltinRDSRemoteAccessServersSid = 95,
    WinBuiltinRDSEndpointServersSid = 96,
    WinBuiltinRDSManagementServersSid = 97,
    WinUserModeDriversSid = 98,
    WinBuiltinHyperVAdminsSid = 99,
    WinAccountCloneableControllersSid = 100,
    WinBuiltinAccessControlAssistanceOperatorsSid = 101,
    WinBuiltinRemoteManagementUsersSid = 102,
    WinAuthenticationAuthorityAssertedSid = 103,
    WinAuthenticationServiceAssertedSid = 104,
    WinLocalAccountSid = 105,
    WinLocalAccountAndAdministratorSid = 106,
    WinAccountProtectedUsersSid = 107,
    WinCapabilityAppointmentsSid = 108,
    WinCapabilityContactsSid = 109,
    WinAccountDefaultSystemManagedSid = 110,
    WinBuiltinDefaultSystemManagedGroupSid = 111,
    WinBuiltinStorageReplicaAdminsSid = 112,
    WinAccountKeyAdminsSid = 113,
    WinAccountEnterpriseKeyAdminsSid = 114,
    WinAuthenticationKeyTrustSid = 115,
    WinAuthenticationKeyPropertyMFASid = 116,
    WinAuthenticationKeyPropertyAttestationSid = 117,
    WinAuthenticationFreshKeyAuthSid = 118,
    WinBuiltinDeviceOwnersSid = 119
};

typedef enum WICBitmapAlphaChannelOption {
    WICBitmapUseAlpha = 0,
    WICBitmapUsePremultipliedAlpha = 1,
    WICBitmapIgnoreAlpha = 2,
    WICBITMAPALPHACHANNELOPTIONS_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapCreateCacheOption {
    WICBitmapNoCache = 0,
    WICBitmapCacheOnDemand = 1,
    WICBitmapCacheOnLoad = 2,
    WICBITMAPCREATECACHEOPTION_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapDitherType {
    WICBitmapDitherTypeNone = 0,
    WICBitmapDitherTypeSolid = 0,
    WICBitmapDitherTypeOrdered4x4 = 1,
    WICBitmapDitherTypeOrdered8x8 = 2,
    WICBitmapDitherTypeOrdered16x16 = 3,
    WICBitmapDitherTypeSpiral4x4 = 4,
    WICBitmapDitherTypeSpiral8x8 = 5,
    WICBitmapDitherTypeDualSpiral4x4 = 6,
    WICBitmapDitherTypeDualSpiral8x8 = 7,
    WICBitmapDitherTypeErrorDiffusion = 8,
    WICBITMAPDITHERTYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapEncoderCacheOption {
    WICBitmapEncoderCacheInMemory = 0,
    WICBitmapEncoderCacheTempFile = 1,
    WICBitmapEncoderNoCache = 2,
    WICBITMAPENCODERCACHEOPTION_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapInterpolationMode {
    WICBitmapInterpolationModeNearestNeighbor = 0,
    WICBitmapInterpolationModeLinear = 1,
    WICBitmapInterpolationModeCubic = 2,
    WICBitmapInterpolationModeFant = 3,
    WICBitmapInterpolationModeHighQualityCubic = 4,
    WICBITMAPINTERPOLATIONMODE_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapPaletteType {
    WICBitmapPaletteTypeCustom = 0,
    WICBitmapPaletteTypeMedianCut = 1,
    WICBitmapPaletteTypeFixedBW = 2,
    WICBitmapPaletteTypeFixedHalftone8 = 3,
    WICBitmapPaletteTypeFixedHalftone27 = 4,
    WICBitmapPaletteTypeFixedHalftone64 = 5,
    WICBitmapPaletteTypeFixedHalftone125 = 6,
    WICBitmapPaletteTypeFixedHalftone216 = 7,
    WICBitmapPaletteTypeFixedWebPalette = 7,
    WICBitmapPaletteTypeFixedHalftone252 = 8,
    WICBitmapPaletteTypeFixedHalftone256 = 9,
    WICBitmapPaletteTypeFixedGray4 = 10,
    WICBitmapPaletteTypeFixedGray16 = 11,
    WICBitmapPaletteTypeFixedGray256 = 12,
    WICBITMAPPALETTETYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum WICBitmapTransformOptions {
    WICBitmapTransformRotate0 = 0,
    WICBitmapTransformRotate90 = 1,
    WICBitmapTransformRotate180 = 2,
    WICBitmapTransformRotate270 = 3,
    WICBitmapTransformFlipHorizontal = 8,
    WICBitmapTransformFlipVertical = 16,
    WICBITMAPTRANSFORMOPTIONS_FORCE_DWORD = 0x7fffffff
};

typedef enum WICColorContextType {
    WICColorContextUninitialized = 0,
    WICColorContextProfile = 1,
    WICColorContextExifColorSpace = 2
};

typedef enum WICComponentType {
    WICDecoder = 1,
    WICEncoder = 2,
    WICPixelFormatConverter = 4,
    WICMetadataReader = 8,
    WICMetadataWriter = 16,
    WICPixelFormat = 32,
    WICAllComponents = 63,
    WICCOMPONENTTYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum WICDecodeOptions {
    WICDecodeMetadataCacheOnDemand = 0,
    WICDecodeMetadataCacheOnLoad = 1,
    WICMETADATACACHEOPTION_FORCE_DWORD = 0x7fffffff
};

typedef enum WICMetadataCreationOptions {
    WICMetadataCreationDefault = 0,
    WICMetadataCreationAllowUnknown = 0,
    WICMetadataCreationFailUnknown = 0x10000,
    WICMetadataCreationMask = -65536
};

typedef enum WICNamedWhitePoint {
    WICWhitePointDefault = 1,
    WICWhitePointDaylight = 2,
    WICWhitePointCloudy = 4,
    WICWhitePointShade = 8,
    WICWhitePointTungsten = 16,
    WICWhitePointFluorescent = 32,
    WICWhitePointFlash = 64,
    WICWhitePointUnderwater = 128,
    WICWhitePointCustom = 256,
    WICWhitePointAutoWhiteBalance = 512,
    WICWhitePointAsShot = 1,
    WICNAMEDWHITEPOINT_FORCE_DWORD = 0x7fffffff
};

typedef enum WIN32K_SYSCALL_FILTER_ID {
    WSFI_NONE = 0,
    WSFI_RS1_RESTRICTED_APPCONTAINER_SERVER = 1,
    WSFI_RS1_RESTRICTED_APPCONTAINER_PLUGIN = 2,
    WSFI_FONTDRVHOST = 3,
    WSFI_RS1_RESTRICTED_APPCONTAINER_MINI_PLUGIN = 4,
    WSFI_RS3_RESTRICTED_APPCONTAINER_SERVER = 5,
    WSFI_RS3_HVSIRDPCLIENT = 6,
    WSFI_COUNT = 7
};

typedef enum WIN32_MEMORY_INFORMATION_CLASS {
    MemoryRegionInfo = 0
};

typedef enum WINDOWCOMPOSITIONATTRIB {
    WCA_UNDEFINED = 0,
    WCA_NCRENDERING_ENABLED = 1,
    WCA_NCRENDERING_POLICY = 2,
    WCA_TRANSITIONS_FORCEDISABLED = 3,
    WCA_ALLOW_NCPAINT = 4,
    WCA_CAPTION_BUTTON_BOUNDS = 5,
    WCA_NONCLIENT_RTL_LAYOUT = 6,
    WCA_FORCE_ICONIC_REPRESENTATION = 7,
    WCA_EXTENDED_FRAME_BOUNDS = 8,
    WCA_HAS_ICONIC_BITMAP = 9,
    WCA_THEME_ATTRIBUTES = 10,
    WCA_NCRENDERING_EXILED = 11,
    WCA_NCADORNMENTINFO = 12,
    WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
    WCA_VIDEO_OVERLAY_ACTIVE = 14,
    WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
    WCA_DISALLOW_PEEK = 16,
    WCA_CLOAK = 17,
    WCA_CLOAKED = 18,
    WCA_ACCENT_POLICY = 19,
    WCA_FREEZE_REPRESENTATION = 20,
    WCA_EVER_UNCLOAKED = 21,
    WCA_VISUAL_OWNER = 22,
    WCA_HOLOGRAPHIC = 23,
    WCA_EXCLUDED_FROM_DDA = 24,
    WCA_PASSIVEUPDATEMODE = 25,
    WCA_LAST = 26
};

typedef enum WINDOWPARTS {
    WP_CAPTION = 1,
    WP_SMALLCAPTION = 2,
    WP_MINCAPTION = 3,
    WP_SMALLMINCAPTION = 4,
    WP_MAXCAPTION = 5,
    WP_SMALLMAXCAPTION = 6,
    WP_FRAMELEFT = 7,
    WP_FRAMERIGHT = 8,
    WP_FRAMEBOTTOM = 9,
    WP_SMALLFRAMELEFT = 10,
    WP_SMALLFRAMERIGHT = 11,
    WP_SMALLFRAMEBOTTOM = 12,
    WP_SYSBUTTON = 13,
    WP_MDISYSBUTTON = 14,
    WP_MINBUTTON = 15,
    WP_MDIMINBUTTON = 16,
    WP_MAXBUTTON = 17,
    WP_CLOSEBUTTON = 18,
    WP_SMALLCLOSEBUTTON = 19,
    WP_MDICLOSEBUTTON = 20,
    WP_RESTOREBUTTON = 21,
    WP_MDIRESTOREBUTTON = 22,
    WP_HELPBUTTON = 23,
    WP_MDIHELPBUTTON = 24,
    WP_HORZSCROLL = 25,
    WP_HORZTHUMB = 26,
    WP_VERTSCROLL = 27,
    WP_VERTTHUMB = 28,
    WP_DIALOG = 29,
    WP_CAPTIONSIZINGTEMPLATE = 30,
    WP_SMALLCAPTIONSIZINGTEMPLATE = 31,
    WP_FRAMELEFTSIZINGTEMPLATE = 32,
    WP_SMALLFRAMELEFTSIZINGTEMPLATE = 33,
    WP_FRAMERIGHTSIZINGTEMPLATE = 34,
    WP_SMALLFRAMERIGHTSIZINGTEMPLATE = 35,
    WP_FRAMEBOTTOMSIZINGTEMPLATE = 36,
    WP_SMALLFRAMEBOTTOMSIZINGTEMPLATE = 37,
    WP_FRAME = 38,
    WP_BORDER = 39
};

typedef enum WINDOWTEXTSTATES {
    TBEUIWT_NORMAL = 1,
    TBEUIWT_HOVER = 2,
    TBEUIWT_PRESSED = 3,
    TBEUIWT_FLASH = 4
};

typedef enum WINDOWTHEMEATTRIBUTETYPE {
    WTA_NONCLIENT = 1
};

typedef enum WPCSETTING {
    WPCSETTING_LOGGING_ENABLED = 1,
    WPCSETTING_FILEDOWNLOAD_BLOCKED = 2
};

typedef enum WRENCHSTATES {
    TTWS_NORMAL = 1,
    TTWS_HOT = 2,
    TTWS_PRESSED = 3
};

typedef enum WindowTransparencyMode {
    WTM_TransparentWhenActive = 0,
    WTM_AlwaysOpaque = 1,
    WTM_AlwaysTransparent = 2
};

typedef enum Windows::Foundation::Collections::CollectionChange {
    CollectionChange_Reset = 0,
    CollectionChange_ItemInserted = 1,
    CollectionChange_ItemRemoved = 2,
    CollectionChange_ItemChanged = 3
};

typedef enum Windows::Foundation::Diagnostics::RoErrorReportingFlags {
    None = 0,
    SuppressExceptions = 1,
    ForceExceptions = 2,
    UseSetErrorInfo = 4,
    SuppressSetErrorInfo = 8
};

typedef enum Windows::Foundation::PropertyType {
    PropertyType_Empty = 0,
    PropertyType_UInt8 = 1,
    PropertyType_Int16 = 2,
    PropertyType_UInt16 = 3,
    PropertyType_Int32 = 4,
    PropertyType_UInt32 = 5,
    PropertyType_Int64 = 6,
    PropertyType_UInt64 = 7,
    PropertyType_Single = 8,
    PropertyType_Double = 9,
    PropertyType_Char16 = 10,
    PropertyType_Boolean = 11,
    PropertyType_String = 12,
    PropertyType_Inspectable = 13,
    PropertyType_DateTime = 14,
    PropertyType_TimeSpan = 15,
    PropertyType_Guid = 16,
    PropertyType_Point = 17,
    PropertyType_Size = 18,
    PropertyType_Rect = 19,
    PropertyType_OtherType = 20,
    PropertyType_UInt8Array = 1025,
    PropertyType_Int16Array = 1026,
    PropertyType_UInt16Array = 1027,
    PropertyType_Int32Array = 1028,
    PropertyType_UInt32Array = 1029,
    PropertyType_Int64Array = 1030,
    PropertyType_UInt64Array = 1031,
    PropertyType_SingleArray = 1032,
    PropertyType_DoubleArray = 1033,
    PropertyType_Char16Array = 1034,
    PropertyType_BooleanArray = 1035,
    PropertyType_StringArray = 1036,
    PropertyType_InspectableArray = 1037,
    PropertyType_DateTimeArray = 1038,
    PropertyType_TimeSpanArray = 1039,
    PropertyType_GuidArray = 1040,
    PropertyType_PointArray = 1041,
    PropertyType_SizeArray = 1042,
    PropertyType_RectArray = 1043,
    PropertyType_OtherTypeArray = 1044
};

typedef enum Windows::UI::Core::AnimationMetrics::AnimationEffect {
    AnimationEffect_Expand = 0,
    AnimationEffect_Collapse = 1,
    AnimationEffect_Reposition = 2,
    AnimationEffect_FadeIn = 3,
    AnimationEffect_FadeOut = 4,
    AnimationEffect_AddToList = 5,
    AnimationEffect_DeleteFromList = 6,
    AnimationEffect_AddToGrid = 7,
    AnimationEffect_DeleteFromGrid = 8,
    AnimationEffect_AddToSearchGrid = 9,
    AnimationEffect_DeleteFromSearchGrid = 10,
    AnimationEffect_AddToSearchList = 11,
    AnimationEffect_DeleteFromSearchList = 12,
    AnimationEffect_ShowEdgeUI = 13,
    AnimationEffect_ShowPanel = 14,
    AnimationEffect_HideEdgeUI = 15,
    AnimationEffect_HidePanel = 16,
    AnimationEffect_ShowPopup = 17,
    AnimationEffect_HidePopup = 18,
    AnimationEffect_PointerDown = 19,
    AnimationEffect_PointerUp = 20,
    AnimationEffect_DragSourceStart = 21,
    AnimationEffect_DragSourceEnd = 22,
    AnimationEffect_TransitionContent = 23,
    AnimationEffect_Reveal = 24,
    AnimationEffect_Hide = 25,
    AnimationEffect_DragBetweenEnter = 26,
    AnimationEffect_DragBetweenLeave = 27,
    AnimationEffect_SwipeSelect = 28,
    AnimationEffect_SwipeDeselect = 29,
    AnimationEffect_SwipeReveal = 30,
    AnimationEffect_EnterPage = 31,
    AnimationEffect_TransitionPage = 32,
    AnimationEffect_CrossFade = 33,
    AnimationEffect_Peek = 34,
    AnimationEffect_UpdateBadge = 35
};

typedef enum Windows::UI::Core::AnimationMetrics::AnimationEffectTarget {
    AnimationEffectTarget_Primary = 0,
    AnimationEffectTarget_Added = 1,
    AnimationEffectTarget_Affected = 2,
    AnimationEffectTarget_Background = 3,
    AnimationEffectTarget_Content = 4,
    AnimationEffectTarget_Deleted = 5,
    AnimationEffectTarget_Deselected = 6,
    AnimationEffectTarget_DragSource = 7,
    AnimationEffectTarget_Hidden = 8,
    AnimationEffectTarget_Incoming = 9,
    AnimationEffectTarget_Outgoing = 10,
    AnimationEffectTarget_Outline = 11,
    AnimationEffectTarget_Remaining = 12,
    AnimationEffectTarget_Revealed = 13,
    AnimationEffectTarget_RowIn = 14,
    AnimationEffectTarget_RowOut = 15,
    AnimationEffectTarget_Selected = 16,
    AnimationEffectTarget_Selection = 17,
    AnimationEffectTarget_Shown = 18,
    AnimationEffectTarget_Tapped = 19
};

typedef enum Windows::UI::Core::AnimationMetrics::PropertyAnimationType {
    PropertyAnimationType_Scale = 0,
    PropertyAnimationType_Translation = 1,
    PropertyAnimationType_Opacity = 2
};

typedef enum XLAT_SIDE {
    XLAT_SERVER = 1,
    XLAT_CLIENT = 2
};

typedef enum ZBID {
    ZBID_DEFAULT = 0,
    ZBID_DESKTOP = 1,
    ZBID_UIACCESS = 2,
    ZBID_IMMERSIVE_IHM = 3,
    ZBID_IMMERSIVE_NOTIFICATION = 4,
    ZBID_IMMERSIVE_APPCHROME = 5,
    ZBID_IMMERSIVE_MOGO = 6,
    ZBID_IMMERSIVE_EDGY = 7,
    ZBID_IMMERSIVE_INACTIVEMOBODY = 8,
    ZBID_IMMERSIVE_INACTIVEDOCK = 9,
    ZBID_IMMERSIVE_ACTIVEMOBODY = 10,
    ZBID_IMMERSIVE_ACTIVEDOCK = 11,
    ZBID_IMMERSIVE_BACKGROUND = 12,
    ZBID_IMMERSIVE_SEARCH = 13,
    ZBID_GENUINE_WINDOWS = 14,
    ZBID_IMMERSIVE_RESTRICTED = 15,
    ZBID_SYSTEM_TOOLS = 16,
    ZBID_LOCK = 17,
    ZBID_ABOVELOCK_UX = 18
};

typedef enum _ACCESS_REASON_TYPE {
    AccessReasonNone = 0,
    AccessReasonAllowedAce = 0x10000,
    AccessReasonDeniedAce = 0x20000,
    AccessReasonAllowedParentAce = 0x30000,
    AccessReasonDeniedParentAce = 0x40000,
    AccessReasonNotGrantedByCape = 0x50000,
    AccessReasonNotGrantedByParentCape = 0x60000,
    AccessReasonNotGrantedToAppContainer = 0x70000,
    AccessReasonMissingPrivilege = 0x100000,
    AccessReasonFromPrivilege = 0x200000,
    AccessReasonIntegrityLevel = 0x300000,
    AccessReasonOwnership = 0x400000,
    AccessReasonNullDacl = 0x500000,
    AccessReasonEmptyDacl = 0x600000,
    AccessReasonNoSD = 0x700000,
    AccessReasonNoGrant = 0x800000,
    AccessReasonTrustLabel = 0x900000,
    AccessReasonFilterAce = 0xa00000
};

typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation = 1,
    AclSizeInformation = 2
};

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation = 1,
    ActivationContextDetailedInformation = 2,
    AssemblyDetailedInformationInActivationContext = 3,
    FileInformationInAssemblyOfAssemblyInActivationContext = 4,
    RunlevelInformationInActivationContext = 5,
    CompatibilityInformationInActivationContext = 6,
    ActivationContextManifestResourceName = 7,
    MaxActivationContextInfoClass = 8,
    AssemblyDetailedInformationInActivationContxt = 3,
    FileInformationInAssemblyOfAssemblyInActivationContxt = 4
};

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS {
    AlpcMessageSidInformation = 0,
    AlpcMessageTokenModifiedIdInformation = 1,
    AlpcMessageDirectStatusInformation = 2,
    AlpcMessageHandleInformation = 3
};

typedef enum _ALPC_PORT_INFORMATION_CLASS {
    AlpcBasicInformation = 0,
    AlpcPortInformation = 1,
    AlpcAssociateCompletionPortInformation = 2,
    AlpcConnectedSIDInformation = 3,
    AlpcServerInformation = 4,
    AlpcMessageZoneInformation = 5,
    AlpcRegisterCompletionListInformation = 6,
    AlpcUnregisterCompletionListInformation = 7,
    AlpcAdjustCompletionListConcurrencyCountInformation = 8,
    AlpcRegisterCallbackInformation = 9,
    AlpcCompletionListRundownInformation = 10,
    AlpcWaitForPortReferences = 11
};

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE {
    StandardDesign = 0,
    NEC98x86 = 1,
    EndAlternatives = 2
};

typedef enum _APPCONTAINER_SID_TYPE {
    NotAppContainerSidType = 0,
    ChildAppContainerSidType = 1,
    ParentAppContainerSidType = 2,
    InvalidAppContainerSidType = 3,
    MaxAppContainerSidType = 4
};

typedef enum _APTTYPE {
    APTTYPE_CURRENT = -1,
    APTTYPE_STA = 0,
    APTTYPE_MTA = 1,
    APTTYPE_NA = 2,
    APTTYPE_MAINSTA = 3
};

typedef enum _APTTYPEQUALIFIER {
    APTTYPEQUALIFIER_NONE = 0,
    APTTYPEQUALIFIER_IMPLICIT_MTA = 1,
    APTTYPEQUALIFIER_NA_ON_MTA = 2,
    APTTYPEQUALIFIER_NA_ON_STA = 3,
    APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4,
    APTTYPEQUALIFIER_NA_ON_MAINSTA = 5,
    APTTYPEQUALIFIER_APPLICATION_STA = 6,
    APTTYPEQUALIFIER_RESERVED_1 = 7
};

typedef enum _ARGB_COLOR_VALUE_PART {
    ACVP_ALPHA = 0,
    ACVP_RED = 1,
    ACVP_GREEN = 2,
    ACVP_BLUE = 3
};

typedef enum _ASYNCCONNECTCLASS {
    Connect_CTS = 0,
    Connect_DSR = 1,
    Connect_RI = 2,
    Connect_DCD = 3,
    Connect_FirstChar = 4,
    Connect_Perm = 5
};

typedef enum _ATOM_INFORMATION_CLASS {
    AtomBasicInformation = 0,
    AtomTableInformation = 1
};

typedef enum _AUDIT_EVENT_TYPE {
    AuditEventObjectAccess = 0,
    AuditEventDirectoryServiceAccess = 1
};

typedef enum _BACKGROUND_TASK_CAPABILITY {
    BTC_AUDIO = 1,
    BTC_REALTIME_COMMUNICATION = 2,
    BTC_SYSTEM_EVENT = 4,
    BTC_TIMER = 8,
    BTC_PUSH_NOTIFICATION = 16,
    BTC_VPN_CLIENT = 32,
    BTC_DEVICE_SERVICING = 64,
    BTC_DEVICE_USE = 128,
    BTC_LOCATION = 256,
    BTC_CHAT_NOTIFICATION = 512,
    BTC_IOT = 1024,
    BTC_IMPLICIT = 4096,
    BTC_BLUETOOTH = 8192,
    BTC_DEVICE_CONNECTION_CHANGE = 16384,
    BTC_MEDIA_PROCESSING = 0x10000,
    BTC_PHONE_CALL = 0x20000,
    BTC_GENERAL = 0x40000,
    BTC_STARTUP = 0x80000,
    BTC_ANY_CAPABILITY = -1
};

typedef enum _BIN_TYPES {
    RequestSize = 0,
    RequestLocation = 1
};

typedef enum _BOOT_ENTROPY_SOURCE_ID {
    BootEntropySourceNone = 0,
    BootEntropySourceSeedfile = 1,
    BootEntropySourceExternal = 2,
    BootEntropySourceTpm = 3,
    BootEntropySourceRdrand = 4,
    BootEntropySourceTime = 5,
    BootEntropySourceAcpiOem0 = 6,
    BootEntropySourceUefi = 7,
    BootEntropySourceCng = 8,
    BootEntropySourceTcbTpm = 9,
    BootEntropySourceTcbRdrand = 10,
    BootMaxEntropySources = 10
};

typedef enum _BOOT_ENTROPY_SOURCE_RESULT_CODE {
    BootEntropySourceStructureUninitialized = 0,
    BootEntropySourceDisabledByPolicy = 1,
    BootEntropySourceNotPresent = 2,
    BootEntropySourceError = 3,
    BootEntropySourceSuccess = 4
};

typedef enum _BP_ANIMATIONSTYLE {
    BPAS_NONE = 0,
    BPAS_LINEAR = 1,
    BPAS_CUBIC = 2,
    BPAS_SINE = 3
};

typedef enum _BP_BUFFERFORMAT {
    BPBF_COMPATIBLEBITMAP = 0,
    BPBF_DIB = 1,
    BPBF_TOPDOWNDIB = 2,
    BPBF_TOPDOWNMONODIB = 3
};

typedef enum _BROWSERFRAMEOPTIONS {
    BFO_NONE = 0,
    BFO_BROWSER_PERSIST_SETTINGS = 1,
    BFO_RENAME_FOLDER_OPTIONS_TOINTERNET = 2,
    BFO_BOTH_OPTIONS = 4,
    BIF_PREFER_INTERNET_SHORTCUT = 8,
    BFO_BROWSE_NO_IN_NEW_PROCESS = 16,
    BFO_ENABLE_HYPERLINK_TRACKING = 32,
    BFO_USE_IE_OFFLINE_SUPPORT = 64,
    BFO_SUBSTITUE_INTERNET_START_PAGE = 128,
    BFO_USE_IE_LOGOBANDING = 256,
    BFO_ADD_IE_TOCAPTIONBAR = 512,
    BFO_USE_DIALUP_REF = 1024,
    BFO_USE_IE_TOOLBAR = 2048,
    BFO_NO_PARENT_FOLDER_SUPPORT = 4096,
    BFO_NO_REOPEN_NEXT_RESTART = 8192,
    BFO_GO_HOME_PAGE = 16384,
    BFO_PREFER_IEPROCESS = 0x8000,
    BFO_SHOW_NAVIGATION_CANCELLED = 0x10000,
    BFO_USE_IE_STATUSBAR = 0x20000,
    BFO_QUERY_ALL = -1
};

typedef enum _BUS_DATA_TYPE {
    ConfigurationSpaceUndefined = -1,
    Cmos = 0,
    EisaConfiguration = 1,
    Pos = 2,
    CbusConfiguration = 3,
    PCIConfiguration = 4,
    VMEConfiguration = 5,
    NuBusConfiguration = 6,
    PCMCIAConfiguration = 7,
    MPIConfiguration = 8,
    MPSAConfiguration = 9,
    PNPISAConfiguration = 10,
    SgiInternalConfiguration = 11,
    MaximumBusDataType = 12
};

typedef enum _CALLBACKCLASS {
    Callback_Disable = 0,
    Callback_Roving = 1,
    Callback_Fixed = 2
};

typedef enum _CDCLASS {
    CdNone = 0,
    CdModem = 1,
    CdClass_Maximum = 2
};

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {
    DeviceProblemNone = 0,
    DeviceProblemHardware = 1,
    DeviceProblemCHMError = 2,
    DeviceProblemDoorOpen = 3,
    DeviceProblemCalibrationError = 4,
    DeviceProblemTargetFailure = 5,
    DeviceProblemCHMMoveError = 6,
    DeviceProblemCHMZeroError = 7,
    DeviceProblemCartridgeInsertError = 8,
    DeviceProblemPositionError = 9,
    DeviceProblemSensorError = 10,
    DeviceProblemCartridgeEjectError = 11,
    DeviceProblemGripperError = 12,
    DeviceProblemDriveError = 13
};

typedef enum _CI_WINDOWS_LOCKDOWN_MODE {
    CI_WINDOWS_LOCKDOWN_MODE_UNLOCKED = 0,
    CI_WINDOWS_LOCKDOWN_MODE_TRIAL = 1,
    CI_WINDOWS_LOCKDOWN_MODE_LOCKED = 2,
    CI_WINDOWS_LOCKDOWN_MODE_MAX = 3
};

typedef enum _CM_ERROR_CONTROL_TYPE {
    IgnoreError = 0,
    NormalError = 1,
    SevereError = 2,
    CriticalError = 3
};

typedef enum _CM_SERVICE_LOAD_TYPE {
    BootLoad = 0,
    SystemLoad = 1,
    AutoLoad = 2,
    DemandLoad = 3,
    DisableLoad = 4
};

typedef enum _CM_SERVICE_NODE_TYPE {
    DriverType = 1,
    FileSystemType = 2,
    Win32ServiceOwnProcess = 16,
    Win32ServiceShareProcess = 32,
    AdapterType = 4,
    RecognizerType = 8
};

typedef enum _CM_SHARE_DISPOSITION {
    CmResourceShareUndetermined = 0,
    CmResourceShareDeviceExclusive = 1,
    CmResourceShareDriverExclusive = 2,
    CmResourceShareShared = 3
};

typedef enum _COMPUTER_NAME_FORMAT {
    ComputerNameNetBIOS = 0,
    ComputerNameDnsHostname = 1,
    ComputerNameDnsDomain = 2,
    ComputerNameDnsFullyQualified = 3,
    ComputerNamePhysicalNetBIOS = 4,
    ComputerNamePhysicalDnsHostname = 5,
    ComputerNamePhysicalDnsDomain = 6,
    ComputerNamePhysicalDnsFullyQualified = 7,
    ComputerNameMax = 8
};

typedef enum _COPYFILE2_COPY_PHASE {
    COPYFILE2_PHASE_NONE = 0,
    COPYFILE2_PHASE_PREPARE_SOURCE = 1,
    COPYFILE2_PHASE_PREPARE_DEST = 2,
    COPYFILE2_PHASE_READ_SOURCE = 3,
    COPYFILE2_PHASE_WRITE_DESTINATION = 4,
    COPYFILE2_PHASE_SERVER_COPY = 5,
    COPYFILE2_PHASE_NAMEGRAFT_COPY = 6,
    COPYFILE2_PHASE_MAX = 7
};

typedef enum _COPYFILE2_MESSAGE_ACTION {
    COPYFILE2_PROGRESS_CONTINUE = 0,
    COPYFILE2_PROGRESS_CANCEL = 1,
    COPYFILE2_PROGRESS_STOP = 2,
    COPYFILE2_PROGRESS_QUIET = 3,
    COPYFILE2_PROGRESS_PAUSE = 4
};

typedef enum _COPYFILE2_MESSAGE_TYPE {
    COPYFILE2_CALLBACK_NONE = 0,
    COPYFILE2_CALLBACK_CHUNK_STARTED = 1,
    COPYFILE2_CALLBACK_CHUNK_FINISHED = 2,
    COPYFILE2_CALLBACK_STREAM_STARTED = 3,
    COPYFILE2_CALLBACK_STREAM_FINISHED = 4,
    COPYFILE2_CALLBACK_POLL_CONTINUE = 5,
    COPYFILE2_CALLBACK_ERROR = 6,
    COPYFILE2_CALLBACK_MAX = 7
};

typedef enum _COVERAGE_REQUEST_CODES {
    CoverageAllModules = 0,
    CoverageSearchByHash = 1,
    CoverageSearchByName = 2
};

typedef enum _CPU_SET_INFORMATION_TYPE {
    CpuSetInformation = 0
};

typedef enum _CSVFS_DISK_CONNECTIVITY {
    CsvFsDiskConnectivityNone = 0,
    CsvFsDiskConnectivityMdsNodeOnly = 1,
    CsvFsDiskConnectivitySubsetOfNodes = 2,
    CsvFsDiskConnectivityAllNodes = 3
};

typedef enum _CSV_CONTROL_OP {
    CsvControlStartRedirectFile = 2,
    CsvControlStopRedirectFile = 3,
    CsvControlQueryRedirectState = 4,
    CsvControlQueryFileRevision = 6,
    CsvControlQueryMdsPath = 8,
    CsvControlQueryFileRevisionFileId128 = 9,
    CsvControlQueryVolumeRedirectState = 10,
    CsvControlEnableUSNRangeModificationTracking = 13,
    CsvControlMarkHandleLocalVolumeMount = 14,
    CsvControlUnmarkHandleLocalVolumeMount = 15,
    CsvControlGetCsvFsMdsPathV2 = 18,
    CsvControlDisableCaching = 19,
    CsvControlEnableCaching = 20
};

typedef enum _CannonicalDeviceType {
    CDT_MOUSE = 0,
    CDT_KEYBOARD = 1,
    CDT_HID = 2
};

typedef enum _D3DAUTHENTICATEDCHANNELTYPE {
    D3DAUTHENTICATEDCHANNEL_D3D9 = 1,
    D3DAUTHENTICATEDCHANNEL_DRIVER_SOFTWARE = 2,
    D3DAUTHENTICATEDCHANNEL_DRIVER_HARDWARE = 3
};

typedef enum _D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE {
    PROCESSIDTYPE_UNKNOWN = 0,
    PROCESSIDTYPE_DWM = 1,
    PROCESSIDTYPE_HANDLE = 2
};

typedef enum _D3DBACKBUFFER_TYPE {
    D3DBACKBUFFER_TYPE_MONO = 0,
    D3DBACKBUFFER_TYPE_LEFT = 1,
    D3DBACKBUFFER_TYPE_RIGHT = 2,
    D3DBACKBUFFER_TYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DBASISTYPE {
    D3DBASIS_BEZIER = 0,
    D3DBASIS_BSPLINE = 1,
    D3DBASIS_CATMULL_ROM = 2,
    D3DBASIS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DBLEND {
    D3DBLEND_ZERO = 1,
    D3DBLEND_ONE = 2,
    D3DBLEND_SRCCOLOR = 3,
    D3DBLEND_INVSRCCOLOR = 4,
    D3DBLEND_SRCALPHA = 5,
    D3DBLEND_INVSRCALPHA = 6,
    D3DBLEND_DESTALPHA = 7,
    D3DBLEND_INVDESTALPHA = 8,
    D3DBLEND_DESTCOLOR = 9,
    D3DBLEND_INVDESTCOLOR = 10,
    D3DBLEND_SRCALPHASAT = 11,
    D3DBLEND_BOTHSRCALPHA = 12,
    D3DBLEND_BOTHINVSRCALPHA = 13,
    D3DBLEND_BLENDFACTOR = 14,
    D3DBLEND_INVBLENDFACTOR = 15,
    D3DBLEND_SRCCOLOR2 = 16,
    D3DBLEND_INVSRCCOLOR2 = 17,
    D3DBLEND_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DBLENDOP {
    D3DBLENDOP_ADD = 1,
    D3DBLENDOP_SUBTRACT = 2,
    D3DBLENDOP_REVSUBTRACT = 3,
    D3DBLENDOP_MIN = 4,
    D3DBLENDOP_MAX = 5,
    D3DBLENDOP_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DBUSTYPE {
    D3DBUSTYPE_OTHER = 0,
    D3DBUSTYPE_PCI = 1,
    D3DBUSTYPE_PCIX = 2,
    D3DBUSTYPE_PCIEXPRESS = 3,
    D3DBUSTYPE_AGP = 4,
    D3DBUSIMPL_MODIFIER_INSIDE_OF_CHIPSET = 0x10000,
    D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 0x20000,
    D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 0x30000,
    D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 0x40000,
    D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 0x50000,
    D3DBUSIMPL_MODIFIER_NON_STANDARD = -2147483648
};

typedef enum _D3DCMPFUNC {
    D3DCMP_NEVER = 1,
    D3DCMP_LESS = 2,
    D3DCMP_EQUAL = 3,
    D3DCMP_LESSEQUAL = 4,
    D3DCMP_GREATER = 5,
    D3DCMP_NOTEQUAL = 6,
    D3DCMP_GREATEREQUAL = 7,
    D3DCMP_ALWAYS = 8,
    D3DCMP_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DCOMPOSERECTSOP {
    D3DCOMPOSERECTS_COPY = 1,
    D3DCOMPOSERECTS_OR = 2,
    D3DCOMPOSERECTS_AND = 3,
    D3DCOMPOSERECTS_NEG = 4,
    D3DCOMPOSERECTS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DCUBEMAP_FACES {
    D3DCUBEMAP_FACE_POSITIVE_X = 0,
    D3DCUBEMAP_FACE_NEGATIVE_X = 1,
    D3DCUBEMAP_FACE_POSITIVE_Y = 2,
    D3DCUBEMAP_FACE_NEGATIVE_Y = 3,
    D3DCUBEMAP_FACE_POSITIVE_Z = 4,
    D3DCUBEMAP_FACE_NEGATIVE_Z = 5,
    D3DCUBEMAP_FACE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DCULL {
    D3DCULL_NONE = 1,
    D3DCULL_CW = 2,
    D3DCULL_CCW = 3,
    D3DCULL_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DDEBUGMONITORTOKENS {
    D3DDMT_ENABLE = 0,
    D3DDMT_DISABLE = 1,
    D3DDMT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DDECLMETHOD {
    D3DDECLMETHOD_DEFAULT = 0,
    D3DDECLMETHOD_PARTIALU = 1,
    D3DDECLMETHOD_PARTIALV = 2,
    D3DDECLMETHOD_CROSSUV = 3,
    D3DDECLMETHOD_UV = 4,
    D3DDECLMETHOD_LOOKUP = 5,
    D3DDECLMETHOD_LOOKUPPRESAMPLED = 6
};

typedef enum _D3DDECLTYPE {
    D3DDECLTYPE_FLOAT1 = 0,
    D3DDECLTYPE_FLOAT2 = 1,
    D3DDECLTYPE_FLOAT3 = 2,
    D3DDECLTYPE_FLOAT4 = 3,
    D3DDECLTYPE_D3DCOLOR = 4,
    D3DDECLTYPE_UBYTE4 = 5,
    D3DDECLTYPE_SHORT2 = 6,
    D3DDECLTYPE_SHORT4 = 7,
    D3DDECLTYPE_UBYTE4N = 8,
    D3DDECLTYPE_SHORT2N = 9,
    D3DDECLTYPE_SHORT4N = 10,
    D3DDECLTYPE_USHORT2N = 11,
    D3DDECLTYPE_USHORT4N = 12,
    D3DDECLTYPE_UDEC3 = 13,
    D3DDECLTYPE_DEC3N = 14,
    D3DDECLTYPE_FLOAT16_2 = 15,
    D3DDECLTYPE_FLOAT16_4 = 16,
    D3DDECLTYPE_UNUSED = 17
};

typedef enum _D3DDECLUSAGE {
    D3DDECLUSAGE_POSITION = 0,
    D3DDECLUSAGE_BLENDWEIGHT = 1,
    D3DDECLUSAGE_BLENDINDICES = 2,
    D3DDECLUSAGE_NORMAL = 3,
    D3DDECLUSAGE_PSIZE = 4,
    D3DDECLUSAGE_TEXCOORD = 5,
    D3DDECLUSAGE_TANGENT = 6,
    D3DDECLUSAGE_BINORMAL = 7,
    D3DDECLUSAGE_TESSFACTOR = 8,
    D3DDECLUSAGE_POSITIONT = 9,
    D3DDECLUSAGE_COLOR = 10,
    D3DDECLUSAGE_FOG = 11,
    D3DDECLUSAGE_DEPTH = 12,
    D3DDECLUSAGE_SAMPLE = 13
};

typedef enum _D3DDEGREETYPE {
    D3DDEGREE_LINEAR = 1,
    D3DDEGREE_QUADRATIC = 2,
    D3DDEGREE_CUBIC = 3,
    D3DDEGREE_QUINTIC = 5,
    D3DDEGREE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DDEVTYPE {
    D3DDEVTYPE_HAL = 1,
    D3DDEVTYPE_REF = 2,
    D3DDEVTYPE_SW = 3,
    D3DDEVTYPE_NULLREF = 4,
    D3DDEVTYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DFILLMODE {
    D3DFILL_POINT = 1,
    D3DFILL_WIREFRAME = 2,
    D3DFILL_SOLID = 3,
    D3DFILL_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DFOGMODE {
    D3DFOG_NONE = 0,
    D3DFOG_EXP = 1,
    D3DFOG_EXP2 = 2,
    D3DFOG_LINEAR = 3,
    D3DFOG_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DFORMAT {
    D3DFMT_UNKNOWN = 0,
    D3DFMT_R8G8B8 = 20,
    D3DFMT_A8R8G8B8 = 21,
    D3DFMT_X8R8G8B8 = 22,
    D3DFMT_R5G6B5 = 23,
    D3DFMT_X1R5G5B5 = 24,
    D3DFMT_A1R5G5B5 = 25,
    D3DFMT_A4R4G4B4 = 26,
    D3DFMT_R3G3B2 = 27,
    D3DFMT_A8 = 28,
    D3DFMT_A8R3G3B2 = 29,
    D3DFMT_X4R4G4B4 = 30,
    D3DFMT_A2B10G10R10 = 31,
    D3DFMT_A8B8G8R8 = 32,
    D3DFMT_X8B8G8R8 = 33,
    D3DFMT_G16R16 = 34,
    D3DFMT_A2R10G10B10 = 35,
    D3DFMT_A16B16G16R16 = 36,
    D3DFMT_A8P8 = 40,
    D3DFMT_P8 = 41,
    D3DFMT_L8 = 50,
    D3DFMT_A8L8 = 51,
    D3DFMT_A4L4 = 52,
    D3DFMT_V8U8 = 60,
    D3DFMT_L6V5U5 = 61,
    D3DFMT_X8L8V8U8 = 62,
    D3DFMT_Q8W8V8U8 = 63,
    D3DFMT_V16U16 = 64,
    D3DFMT_A2W10V10U10 = 67,
    D3DFMT_UYVY = 0x59565955,
    D3DFMT_R8G8_B8G8 = 0x47424752,
    D3DFMT_YUY2 = 0x32595559,
    D3DFMT_G8R8_G8B8 = 0x42475247,
    D3DFMT_DXT1 = 0x31545844,
    D3DFMT_DXT2 = 0x32545844,
    D3DFMT_DXT3 = 0x33545844,
    D3DFMT_DXT4 = 0x34545844,
    D3DFMT_DXT5 = 0x35545844,
    D3DFMT_D16_LOCKABLE = 70,
    D3DFMT_D32 = 71,
    D3DFMT_D15S1 = 73,
    D3DFMT_D24S8 = 75,
    D3DFMT_D24X8 = 77,
    D3DFMT_D24X4S4 = 79,
    D3DFMT_D16 = 80,
    D3DFMT_D32F_LOCKABLE = 82,
    D3DFMT_D24FS8 = 83,
    D3DFMT_D32_LOCKABLE = 84,
    D3DFMT_S8_LOCKABLE = 85,
    D3DFMT_L16 = 81,
    D3DFMT_VERTEXDATA = 100,
    D3DFMT_INDEX16 = 101,
    D3DFMT_INDEX32 = 102,
    D3DFMT_Q16W16V16U16 = 110,
    D3DFMT_MULTI2_ARGB8 = 0x3154454d,
    D3DFMT_R16F = 111,
    D3DFMT_G16R16F = 112,
    D3DFMT_A16B16G16R16F = 113,
    D3DFMT_R32F = 114,
    D3DFMT_G32R32F = 115,
    D3DFMT_A32B32G32R32F = 116,
    D3DFMT_CxV8U8 = 117,
    D3DFMT_A1 = 118,
    D3DFMT_A2B10G10R10_XR_BIAS = 119,
    D3DFMT_BINARYBUFFER = 199,
    D3DFMT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DLIGHTTYPE {
    D3DLIGHT_POINT = 1,
    D3DLIGHT_SPOT = 2,
    D3DLIGHT_DIRECTIONAL = 3,
    D3DLIGHT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DMATERIALCOLORSOURCE {
    D3DMCS_MATERIAL = 0,
    D3DMCS_COLOR1 = 1,
    D3DMCS_COLOR2 = 2,
    D3DMCS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DMULTISAMPLE_TYPE {
    D3DMULTISAMPLE_NONE = 0,
    D3DMULTISAMPLE_NONMASKABLE = 1,
    D3DMULTISAMPLE_2_SAMPLES = 2,
    D3DMULTISAMPLE_3_SAMPLES = 3,
    D3DMULTISAMPLE_4_SAMPLES = 4,
    D3DMULTISAMPLE_5_SAMPLES = 5,
    D3DMULTISAMPLE_6_SAMPLES = 6,
    D3DMULTISAMPLE_7_SAMPLES = 7,
    D3DMULTISAMPLE_8_SAMPLES = 8,
    D3DMULTISAMPLE_9_SAMPLES = 9,
    D3DMULTISAMPLE_10_SAMPLES = 10,
    D3DMULTISAMPLE_11_SAMPLES = 11,
    D3DMULTISAMPLE_12_SAMPLES = 12,
    D3DMULTISAMPLE_13_SAMPLES = 13,
    D3DMULTISAMPLE_14_SAMPLES = 14,
    D3DMULTISAMPLE_15_SAMPLES = 15,
    D3DMULTISAMPLE_16_SAMPLES = 16,
    D3DMULTISAMPLE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DPATCHEDGESTYLE {
    D3DPATCHEDGE_DISCRETE = 0,
    D3DPATCHEDGE_CONTINUOUS = 1,
    D3DPATCHEDGE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DPOOL {
    D3DPOOL_DEFAULT = 0,
    D3DPOOL_MANAGED = 1,
    D3DPOOL_SYSTEMMEM = 2,
    D3DPOOL_SCRATCH = 3,
    D3DPOOL_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DPRIMITIVETYPE {
    D3DPT_POINTLIST = 1,
    D3DPT_LINELIST = 2,
    D3DPT_LINESTRIP = 3,
    D3DPT_TRIANGLELIST = 4,
    D3DPT_TRIANGLESTRIP = 5,
    D3DPT_TRIANGLEFAN = 6,
    D3DPT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DQUERYTYPE {
    D3DQUERYTYPE_VCACHE = 4,
    D3DQUERYTYPE_RESOURCEMANAGER = 5,
    D3DQUERYTYPE_VERTEXSTATS = 6,
    D3DQUERYTYPE_EVENT = 8,
    D3DQUERYTYPE_OCCLUSION = 9,
    D3DQUERYTYPE_TIMESTAMP = 10,
    D3DQUERYTYPE_TIMESTAMPDISJOINT = 11,
    D3DQUERYTYPE_TIMESTAMPFREQ = 12,
    D3DQUERYTYPE_PIPELINETIMINGS = 13,
    D3DQUERYTYPE_INTERFACETIMINGS = 14,
    D3DQUERYTYPE_VERTEXTIMINGS = 15,
    D3DQUERYTYPE_PIXELTIMINGS = 16,
    D3DQUERYTYPE_BANDWIDTHTIMINGS = 17,
    D3DQUERYTYPE_CACHEUTILIZATION = 18,
    D3DQUERYTYPE_MEMORYPRESSURE = 19
};

typedef enum _D3DRENDERSTATETYPE {
    D3DRS_ZENABLE = 7,
    D3DRS_FILLMODE = 8,
    D3DRS_SHADEMODE = 9,
    D3DRS_ZWRITEENABLE = 14,
    D3DRS_ALPHATESTENABLE = 15,
    D3DRS_LASTPIXEL = 16,
    D3DRS_SRCBLEND = 19,
    D3DRS_DESTBLEND = 20,
    D3DRS_CULLMODE = 22,
    D3DRS_ZFUNC = 23,
    D3DRS_ALPHAREF = 24,
    D3DRS_ALPHAFUNC = 25,
    D3DRS_DITHERENABLE = 26,
    D3DRS_ALPHABLENDENABLE = 27,
    D3DRS_FOGENABLE = 28,
    D3DRS_SPECULARENABLE = 29,
    D3DRS_FOGCOLOR = 34,
    D3DRS_FOGTABLEMODE = 35,
    D3DRS_FOGSTART = 36,
    D3DRS_FOGEND = 37,
    D3DRS_FOGDENSITY = 38,
    D3DRS_RANGEFOGENABLE = 48,
    D3DRS_STENCILENABLE = 52,
    D3DRS_STENCILFAIL = 53,
    D3DRS_STENCILZFAIL = 54,
    D3DRS_STENCILPASS = 55,
    D3DRS_STENCILFUNC = 56,
    D3DRS_STENCILREF = 57,
    D3DRS_STENCILMASK = 58,
    D3DRS_STENCILWRITEMASK = 59,
    D3DRS_TEXTUREFACTOR = 60,
    D3DRS_WRAP0 = 128,
    D3DRS_WRAP1 = 129,
    D3DRS_WRAP2 = 130,
    D3DRS_WRAP3 = 131,
    D3DRS_WRAP4 = 132,
    D3DRS_WRAP5 = 133,
    D3DRS_WRAP6 = 134,
    D3DRS_WRAP7 = 135,
    D3DRS_CLIPPING = 136,
    D3DRS_LIGHTING = 137,
    D3DRS_AMBIENT = 139,
    D3DRS_FOGVERTEXMODE = 140,
    D3DRS_COLORVERTEX = 141,
    D3DRS_LOCALVIEWER = 142,
    D3DRS_NORMALIZENORMALS = 143,
    D3DRS_DIFFUSEMATERIALSOURCE = 145,
    D3DRS_SPECULARMATERIALSOURCE = 146,
    D3DRS_AMBIENTMATERIALSOURCE = 147,
    D3DRS_EMISSIVEMATERIALSOURCE = 148,
    D3DRS_VERTEXBLEND = 151,
    D3DRS_CLIPPLANEENABLE = 152,
    D3DRS_POINTSIZE = 154,
    D3DRS_POINTSIZE_MIN = 155,
    D3DRS_POINTSPRITEENABLE = 156,
    D3DRS_POINTSCALEENABLE = 157,
    D3DRS_POINTSCALE_A = 158,
    D3DRS_POINTSCALE_B = 159,
    D3DRS_POINTSCALE_C = 160,
    D3DRS_MULTISAMPLEANTIALIAS = 161,
    D3DRS_MULTISAMPLEMASK = 162,
    D3DRS_PATCHEDGESTYLE = 163,
    D3DRS_DEBUGMONITORTOKEN = 165,
    D3DRS_POINTSIZE_MAX = 166,
    D3DRS_INDEXEDVERTEXBLENDENABLE = 167,
    D3DRS_COLORWRITEENABLE = 168,
    D3DRS_TWEENFACTOR = 170,
    D3DRS_BLENDOP = 171,
    D3DRS_POSITIONDEGREE = 172,
    D3DRS_NORMALDEGREE = 173,
    D3DRS_SCISSORTESTENABLE = 174,
    D3DRS_SLOPESCALEDEPTHBIAS = 175,
    D3DRS_ANTIALIASEDLINEENABLE = 176,
    D3DRS_MINTESSELLATIONLEVEL = 178,
    D3DRS_MAXTESSELLATIONLEVEL = 179,
    D3DRS_ADAPTIVETESS_X = 180,
    D3DRS_ADAPTIVETESS_Y = 181,
    D3DRS_ADAPTIVETESS_Z = 182,
    D3DRS_ADAPTIVETESS_W = 183,
    D3DRS_ENABLEADAPTIVETESSELLATION = 184,
    D3DRS_TWOSIDEDSTENCILMODE = 185,
    D3DRS_CCW_STENCILFAIL = 186,
    D3DRS_CCW_STENCILZFAIL = 187,
    D3DRS_CCW_STENCILPASS = 188,
    D3DRS_CCW_STENCILFUNC = 189,
    D3DRS_COLORWRITEENABLE1 = 190,
    D3DRS_COLORWRITEENABLE2 = 191,
    D3DRS_COLORWRITEENABLE3 = 192,
    D3DRS_BLENDFACTOR = 193,
    D3DRS_SRGBWRITEENABLE = 194,
    D3DRS_DEPTHBIAS = 195,
    D3DRS_WRAP8 = 198,
    D3DRS_WRAP9 = 199,
    D3DRS_WRAP10 = 200,
    D3DRS_WRAP11 = 201,
    D3DRS_WRAP12 = 202,
    D3DRS_WRAP13 = 203,
    D3DRS_WRAP14 = 204,
    D3DRS_WRAP15 = 205,
    D3DRS_SEPARATEALPHABLENDENABLE = 206,
    D3DRS_SRCBLENDALPHA = 207,
    D3DRS_DESTBLENDALPHA = 208,
    D3DRS_BLENDOPALPHA = 209,
    D3DRS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DRESOURCETYPE {
    D3DRTYPE_SURFACE = 1,
    D3DRTYPE_VOLUME = 2,
    D3DRTYPE_TEXTURE = 3,
    D3DRTYPE_VOLUMETEXTURE = 4,
    D3DRTYPE_CUBETEXTURE = 5,
    D3DRTYPE_VERTEXBUFFER = 6,
    D3DRTYPE_INDEXBUFFER = 7,
    D3DRTYPE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSAMPLERSTATETYPE {
    D3DSAMP_ADDRESSU = 1,
    D3DSAMP_ADDRESSV = 2,
    D3DSAMP_ADDRESSW = 3,
    D3DSAMP_BORDERCOLOR = 4,
    D3DSAMP_MAGFILTER = 5,
    D3DSAMP_MINFILTER = 6,
    D3DSAMP_MIPFILTER = 7,
    D3DSAMP_MIPMAPLODBIAS = 8,
    D3DSAMP_MAXMIPLEVEL = 9,
    D3DSAMP_MAXANISOTROPY = 10,
    D3DSAMP_SRGBTEXTURE = 11,
    D3DSAMP_ELEMENTINDEX = 12,
    D3DSAMP_DMAPOFFSET = 13,
    D3DSAMP_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSAMPLER_TEXTURE_TYPE {
    D3DSTT_UNKNOWN = 0,
    D3DSTT_2D = 0x10000000,
    D3DSTT_CUBE = 0x18000000,
    D3DSTT_VOLUME = 0x20000000,
    D3DSTT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSHADEMODE {
    D3DSHADE_FLAT = 1,
    D3DSHADE_GOURAUD = 2,
    D3DSHADE_PHONG = 3,
    D3DSHADE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSHADER_ADDRESSMODE_TYPE {
    D3DSHADER_ADDRMODE_ABSOLUTE = 0,
    D3DSHADER_ADDRMODE_RELATIVE = 8192,
    D3DSHADER_ADDRMODE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSHADER_COMPARISON {
    D3DSPC_RESERVED0 = 0,
    D3DSPC_GT = 1,
    D3DSPC_EQ = 2,
    D3DSPC_GE = 3,
    D3DSPC_LT = 4,
    D3DSPC_NE = 5,
    D3DSPC_LE = 6,
    D3DSPC_RESERVED1 = 7
};

typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE {
    D3DSIO_NOP = 0,
    D3DSIO_MOV = 1,
    D3DSIO_ADD = 2,
    D3DSIO_SUB = 3,
    D3DSIO_MAD = 4,
    D3DSIO_MUL = 5,
    D3DSIO_RCP = 6,
    D3DSIO_RSQ = 7,
    D3DSIO_DP3 = 8,
    D3DSIO_DP4 = 9,
    D3DSIO_MIN = 10,
    D3DSIO_MAX = 11,
    D3DSIO_SLT = 12,
    D3DSIO_SGE = 13,
    D3DSIO_EXP = 14,
    D3DSIO_LOG = 15,
    D3DSIO_LIT = 16,
    D3DSIO_DST = 17,
    D3DSIO_LRP = 18,
    D3DSIO_FRC = 19,
    D3DSIO_M4x4 = 20,
    D3DSIO_M4x3 = 21,
    D3DSIO_M3x4 = 22,
    D3DSIO_M3x3 = 23,
    D3DSIO_M3x2 = 24,
    D3DSIO_CALL = 25,
    D3DSIO_CALLNZ = 26,
    D3DSIO_LOOP = 27,
    D3DSIO_RET = 28,
    D3DSIO_ENDLOOP = 29,
    D3DSIO_LABEL = 30,
    D3DSIO_DCL = 31,
    D3DSIO_POW = 32,
    D3DSIO_CRS = 33,
    D3DSIO_SGN = 34,
    D3DSIO_ABS = 35,
    D3DSIO_NRM = 36,
    D3DSIO_SINCOS = 37,
    D3DSIO_REP = 38,
    D3DSIO_ENDREP = 39,
    D3DSIO_IF = 40,
    D3DSIO_IFC = 41,
    D3DSIO_ELSE = 42,
    D3DSIO_ENDIF = 43,
    D3DSIO_BREAK = 44,
    D3DSIO_BREAKC = 45,
    D3DSIO_MOVA = 46,
    D3DSIO_DEFB = 47,
    D3DSIO_DEFI = 48,
    D3DSIO_TEXCOORD = 64,
    D3DSIO_TEXKILL = 65,
    D3DSIO_TEX = 66,
    D3DSIO_TEXBEM = 67,
    D3DSIO_TEXBEML = 68,
    D3DSIO_TEXREG2AR = 69,
    D3DSIO_TEXREG2GB = 70,
    D3DSIO_TEXM3x2PAD = 71,
    D3DSIO_TEXM3x2TEX = 72,
    D3DSIO_TEXM3x3PAD = 73,
    D3DSIO_TEXM3x3TEX = 74,
    D3DSIO_RESERVED0 = 75,
    D3DSIO_TEXM3x3SPEC = 76,
    D3DSIO_TEXM3x3VSPEC = 77,
    D3DSIO_EXPP = 78,
    D3DSIO_LOGP = 79,
    D3DSIO_CND = 80,
    D3DSIO_DEF = 81,
    D3DSIO_TEXREG2RGB = 82,
    D3DSIO_TEXDP3TEX = 83,
    D3DSIO_TEXM3x2DEPTH = 84,
    D3DSIO_TEXDP3 = 85,
    D3DSIO_TEXM3x3 = 86,
    D3DSIO_TEXDEPTH = 87,
    D3DSIO_CMP = 88,
    D3DSIO_BEM = 89,
    D3DSIO_DP2ADD = 90,
    D3DSIO_DSX = 91,
    D3DSIO_DSY = 92,
    D3DSIO_TEXLDD = 93,
    D3DSIO_SETP = 94,
    D3DSIO_TEXLDL = 95,
    D3DSIO_BREAKP = 96,
    D3DSIO_PHASE = 0xfffd,
    D3DSIO_COMMENT = 0xfffe,
    D3DSIO_END = 0xffff,
    D3DSIO_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSHADER_MIN_PRECISION {
    D3DMP_DEFAULT = 0,
    D3DMP_16 = 1,
    D3DMP_2_8 = 2
};

typedef enum _D3DSHADER_MISCTYPE_OFFSETS {
    D3DSMO_POSITION = 0,
    D3DSMO_FACE = 1
};

typedef enum _D3DSHADER_PARAM_REGISTER_TYPE {
    D3DSPR_TEMP = 0,
    D3DSPR_INPUT = 1,
    D3DSPR_CONST = 2,
    D3DSPR_ADDR = 3,
    D3DSPR_TEXTURE = 3,
    D3DSPR_RASTOUT = 4,
    D3DSPR_ATTROUT = 5,
    D3DSPR_TEXCRDOUT = 6,
    D3DSPR_OUTPUT = 6,
    D3DSPR_CONSTINT = 7,
    D3DSPR_COLOROUT = 8,
    D3DSPR_DEPTHOUT = 9,
    D3DSPR_SAMPLER = 10,
    D3DSPR_CONST2 = 11,
    D3DSPR_CONST3 = 12,
    D3DSPR_CONST4 = 13,
    D3DSPR_CONSTBOOL = 14,
    D3DSPR_LOOP = 15,
    D3DSPR_TEMPFLOAT16 = 16,
    D3DSPR_MISCTYPE = 17,
    D3DSPR_LABEL = 18,
    D3DSPR_PREDICATE = 19,
    D3DSPR_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE {
    D3DSPSM_NONE = 0,
    D3DSPSM_NEG = 0x1000000,
    D3DSPSM_BIAS = 0x2000000,
    D3DSPSM_BIASNEG = 0x3000000,
    D3DSPSM_SIGN = 0x4000000,
    D3DSPSM_SIGNNEG = 0x5000000,
    D3DSPSM_COMP = 0x6000000,
    D3DSPSM_X2 = 0x7000000,
    D3DSPSM_X2NEG = 0x8000000,
    D3DSPSM_DZ = 0x9000000,
    D3DSPSM_DW = 0xa000000,
    D3DSPSM_ABS = 0xb000000,
    D3DSPSM_ABSNEG = 0xc000000,
    D3DSPSM_NOT = 0xd000000,
    D3DSPSM_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSTATEBLOCKTYPE {
    D3DSBT_ALL = 1,
    D3DSBT_PIXELSTATE = 2,
    D3DSBT_VERTEXSTATE = 3,
    D3DSBT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSTENCILOP {
    D3DSTENCILOP_KEEP = 1,
    D3DSTENCILOP_ZERO = 2,
    D3DSTENCILOP_REPLACE = 3,
    D3DSTENCILOP_INCRSAT = 4,
    D3DSTENCILOP_DECRSAT = 5,
    D3DSTENCILOP_INVERT = 6,
    D3DSTENCILOP_INCR = 7,
    D3DSTENCILOP_DECR = 8,
    D3DSTENCILOP_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DSWAPEFFECT {
    D3DSWAPEFFECT_DISCARD = 1,
    D3DSWAPEFFECT_FLIP = 2,
    D3DSWAPEFFECT_COPY = 3,
    D3DSWAPEFFECT_OVERLAY = 4,
    D3DSWAPEFFECT_FLIPEX = 5,
    D3DSWAPEFFECT_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTEXTUREADDRESS {
    D3DTADDRESS_WRAP = 1,
    D3DTADDRESS_MIRROR = 2,
    D3DTADDRESS_CLAMP = 3,
    D3DTADDRESS_BORDER = 4,
    D3DTADDRESS_MIRRORONCE = 5,
    D3DTADDRESS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTEXTUREFILTERTYPE {
    D3DTEXF_NONE = 0,
    D3DTEXF_POINT = 1,
    D3DTEXF_LINEAR = 2,
    D3DTEXF_ANISOTROPIC = 3,
    D3DTEXF_PYRAMIDALQUAD = 6,
    D3DTEXF_GAUSSIANQUAD = 7,
    D3DTEXF_CONVOLUTIONMONO = 8,
    D3DTEXF_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTEXTUREOP {
    D3DTOP_DISABLE = 1,
    D3DTOP_SELECTARG1 = 2,
    D3DTOP_SELECTARG2 = 3,
    D3DTOP_MODULATE = 4,
    D3DTOP_MODULATE2X = 5,
    D3DTOP_MODULATE4X = 6,
    D3DTOP_ADD = 7,
    D3DTOP_ADDSIGNED = 8,
    D3DTOP_ADDSIGNED2X = 9,
    D3DTOP_SUBTRACT = 10,
    D3DTOP_ADDSMOOTH = 11,
    D3DTOP_BLENDDIFFUSEALPHA = 12,
    D3DTOP_BLENDTEXTUREALPHA = 13,
    D3DTOP_BLENDFACTORALPHA = 14,
    D3DTOP_BLENDTEXTUREALPHAPM = 15,
    D3DTOP_BLENDCURRENTALPHA = 16,
    D3DTOP_PREMODULATE = 17,
    D3DTOP_MODULATEALPHA_ADDCOLOR = 18,
    D3DTOP_MODULATECOLOR_ADDALPHA = 19,
    D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20,
    D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21,
    D3DTOP_BUMPENVMAP = 22,
    D3DTOP_BUMPENVMAPLUMINANCE = 23,
    D3DTOP_DOTPRODUCT3 = 24,
    D3DTOP_MULTIPLYADD = 25,
    D3DTOP_LERP = 26,
    D3DTOP_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTEXTURESTAGESTATETYPE {
    D3DTSS_COLOROP = 1,
    D3DTSS_COLORARG1 = 2,
    D3DTSS_COLORARG2 = 3,
    D3DTSS_ALPHAOP = 4,
    D3DTSS_ALPHAARG1 = 5,
    D3DTSS_ALPHAARG2 = 6,
    D3DTSS_BUMPENVMAT00 = 7,
    D3DTSS_BUMPENVMAT01 = 8,
    D3DTSS_BUMPENVMAT10 = 9,
    D3DTSS_BUMPENVMAT11 = 10,
    D3DTSS_TEXCOORDINDEX = 11,
    D3DTSS_BUMPENVLSCALE = 22,
    D3DTSS_BUMPENVLOFFSET = 23,
    D3DTSS_TEXTURETRANSFORMFLAGS = 24,
    D3DTSS_COLORARG0 = 26,
    D3DTSS_ALPHAARG0 = 27,
    D3DTSS_RESULTARG = 28,
    D3DTSS_CONSTANT = 32,
    D3DTSS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTEXTURETRANSFORMFLAGS {
    D3DTTFF_DISABLE = 0,
    D3DTTFF_COUNT1 = 1,
    D3DTTFF_COUNT2 = 2,
    D3DTTFF_COUNT3 = 3,
    D3DTTFF_COUNT4 = 4,
    D3DTTFF_PROJECTED = 256,
    D3DTTFF_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DTRANSFORMSTATETYPE {
    D3DTS_VIEW = 2,
    D3DTS_PROJECTION = 3,
    D3DTS_TEXTURE0 = 16,
    D3DTS_TEXTURE1 = 17,
    D3DTS_TEXTURE2 = 18,
    D3DTS_TEXTURE3 = 19,
    D3DTS_TEXTURE4 = 20,
    D3DTS_TEXTURE5 = 21,
    D3DTS_TEXTURE6 = 22,
    D3DTS_TEXTURE7 = 23,
    D3DTS_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DVERTEXBLENDFLAGS {
    D3DVBF_DISABLE = 0,
    D3DVBF_1WEIGHTS = 1,
    D3DVBF_2WEIGHTS = 2,
    D3DVBF_3WEIGHTS = 3,
    D3DVBF_TWEENING = 255,
    D3DVBF_0WEIGHTS = 256,
    D3DVBF_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DVS_ADDRESSMODE_TYPE {
    D3DVS_ADDRMODE_ABSOLUTE = 0,
    D3DVS_ADDRMODE_RELATIVE = 8192,
    D3DVS_ADDRMODE_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DVS_RASTOUT_OFFSETS {
    D3DSRO_POSITION = 0,
    D3DSRO_FOG = 1,
    D3DSRO_POINT_SIZE = 2,
    D3DSRO_FORCE_DWORD = 0x7fffffff
};

typedef enum _D3DZBUFFERTYPE {
    D3DZB_FALSE = 0,
    D3DZB_TRUE = 1,
    D3DZB_USEW = 2,
    D3DZB_FORCE_DWORD = 0x7fffffff
};

typedef enum _DEBUG_CONTROL_SPACE_ITEM {
    DEBUG_CONTROL_SPACE_PCR = 0,
    DEBUG_CONTROL_SPACE_PRCB = 1,
    DEBUG_CONTROL_SPACE_KSPECIAL = 2,
    DEBUG_CONTROL_SPACE_THREAD = 3,
    DEBUG_CONTROL_SPACE_MAXIMUM = 4
};

typedef enum _DEP_SYSTEM_POLICY_TYPE {
    DEPPolicyAlwaysOff = 0,
    DEPPolicyAlwaysOn = 1,
    DEPPolicyOptIn = 2,
    DEPPolicyOptOut = 3,
    DEPTotalPolicyCount = 4
};

typedef enum _DETECTION_TYPE {
    DetectNone = 0,
    DetectInt13 = 1,
    DetectExInt13 = 2
};

typedef enum _DEVICEDUMP_COLLECTION_TYPE {
    TCCollectionBugCheck = 1,
    TCCollectionApplicationRequested = 2,
    TCCollectionDeviceRequested = 3
};

typedef enum _DEVICE_NOTIFICATION_ID {
    DNI_PNP_NOTIFICATION = 0,
    DNI_INPUT_MESSAGE = 1,
    DNI_MOUSE_INTERCEPT_MESSAGE = 2,
    DNI_RAW_MOUSE_INPUT_MESSAGE = 3,
    DNI_CURSOR_POS = 4,
    DNI_PNP_NOTIFICATION_BULK = 5
};

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceUnspecified = 0,
    PowerDeviceD0 = 1,
    PowerDeviceD1 = 2,
    PowerDeviceD2 = 3,
    PowerDeviceD3 = 4,
    PowerDeviceMaximum = 5
};

typedef enum _DIRECTORY_NOTIFY_INFORMATION_CLASS {
    DirectoryNotifyInformation = 1,
    DirectoryNotifyExtendedInformation = 2
};

typedef enum _DISPLAYCONFIG_BUSTYPE {
    DISPLAYCONFIG_BUSTYPE_UNDEFINED = 0,
    DISPLAYCONFIG_BUSTYPE_PCI = 1,
    DISPLAYCONFIG_BUSTYPE_ACPI = 2,
    DISPLAYCONFIG_BUSTYPE_ROOT = 3,
    DISPLAYCONFIG_BUSTYPE_VMBUS = 4,
    DISPLAYCONFIG_BUSTYPE_FORCE_UINT32 = -1
};

typedef enum _DISPLAYCONFIG_COLOR_ENCODING {
    DISPLAYCONFIG_COLOR_ENCODING_RGB = 0,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 1,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 2,
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 3,
    DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 4,
    DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = -1
};

typedef enum _DISPLAYCONFIG_HDR_PIXEL_FORMAT {
    DISPLAYCONFIG_HDR_NONE = 0,
    DISPLAYCONFIG_HDR_ARGB10 = 1,
    DISPLAYCONFIG_HDR_FP16 = 2
};

typedef enum _DISPLAYCONFIG_SYNC_LOCK_STYLE {
    DISPLAYCONFIG_SYNC_LOCK_STYLE_NONE = 0,
    DISPLAYCONFIG_SYNC_LOCK_STYLE_IDENTICAL = 1
};

typedef enum _DMANIP_HOOK_STATE {
    DMANIP_HOOK_UNHOOKED = 0,
    DMANIP_HOOK_HOOKED = 1,
    DMANIP_HOOK_PENDINGUNHOOK = 2
};

typedef enum _DMA_SPEED {
    Compatible = 0,
    TypeA = 1,
    TypeB = 2,
    TypeC = 3,
    TypeF = 4,
    MaximumDmaSpeed = 5
};

typedef enum _DMA_WIDTH {
    Width8Bits = 0,
    Width16Bits = 1,
    Width32Bits = 2,
    Width64Bits = 3,
    WidthNoWrap = 4,
    MaximumDmaWidth = 5
};

typedef enum _DPFLTR_TYPE {
    DPFLTR_SYSTEM_ID = 0,
    DPFLTR_SMSS_ID = 1,
    DPFLTR_SETUP_ID = 2,
    DPFLTR_NTFS_ID = 3,
    DPFLTR_FSTUB_ID = 4,
    DPFLTR_CRASHDUMP_ID = 5,
    DPFLTR_CDAUDIO_ID = 6,
    DPFLTR_CDROM_ID = 7,
    DPFLTR_CLASSPNP_ID = 8,
    DPFLTR_DISK_ID = 9,
    DPFLTR_REDBOOK_ID = 10,
    DPFLTR_STORPROP_ID = 11,
    DPFLTR_SCSIPORT_ID = 12,
    DPFLTR_SCSIMINIPORT_ID = 13,
    DPFLTR_CONFIG_ID = 14,
    DPFLTR_I8042PRT_ID = 15,
    DPFLTR_SERMOUSE_ID = 16,
    DPFLTR_LSERMOUS_ID = 17,
    DPFLTR_KBDHID_ID = 18,
    DPFLTR_MOUHID_ID = 19,
    DPFLTR_KBDCLASS_ID = 20,
    DPFLTR_MOUCLASS_ID = 21,
    DPFLTR_TWOTRACK_ID = 22,
    DPFLTR_WMILIB_ID = 23,
    DPFLTR_ACPI_ID = 24,
    DPFLTR_AMLI_ID = 25,
    DPFLTR_HALIA64_ID = 26,
    DPFLTR_VIDEO_ID = 27,
    DPFLTR_SVCHOST_ID = 28,
    DPFLTR_VIDEOPRT_ID = 29,
    DPFLTR_TCPIP_ID = 30,
    DPFLTR_DMSYNTH_ID = 31,
    DPFLTR_NTOSPNP_ID = 32,
    DPFLTR_FASTFAT_ID = 33,
    DPFLTR_SAMSS_ID = 34,
    DPFLTR_PNPMGR_ID = 35,
    DPFLTR_NETAPI_ID = 36,
    DPFLTR_SCSERVER_ID = 37,
    DPFLTR_SCCLIENT_ID = 38,
    DPFLTR_SERIAL_ID = 39,
    DPFLTR_SERENUM_ID = 40,
    DPFLTR_UHCD_ID = 41,
    DPFLTR_RPCPROXY_ID = 42,
    DPFLTR_AUTOCHK_ID = 43,
    DPFLTR_DCOMSS_ID = 44,
    DPFLTR_UNIMODEM_ID = 45,
    DPFLTR_SIS_ID = 46,
    DPFLTR_FLTMGR_ID = 47,
    DPFLTR_WMICORE_ID = 48,
    DPFLTR_BURNENG_ID = 49,
    DPFLTR_IMAPI_ID = 50,
    DPFLTR_SXS_ID = 51,
    DPFLTR_FUSION_ID = 52,
    DPFLTR_IDLETASK_ID = 53,
    DPFLTR_SOFTPCI_ID = 54,
    DPFLTR_TAPE_ID = 55,
    DPFLTR_MCHGR_ID = 56,
    DPFLTR_IDEP_ID = 57,
    DPFLTR_PCIIDE_ID = 58,
    DPFLTR_FLOPPY_ID = 59,
    DPFLTR_FDC_ID = 60,
    DPFLTR_TERMSRV_ID = 61,
    DPFLTR_W32TIME_ID = 62,
    DPFLTR_PREFETCHER_ID = 63,
    DPFLTR_RSFILTER_ID = 64,
    DPFLTR_FCPORT_ID = 65,
    DPFLTR_PCI_ID = 66,
    DPFLTR_DMIO_ID = 67,
    DPFLTR_DMCONFIG_ID = 68,
    DPFLTR_DMADMIN_ID = 69,
    DPFLTR_WSOCKTRANSPORT_ID = 70,
    DPFLTR_VSS_ID = 71,
    DPFLTR_PNPMEM_ID = 72,
    DPFLTR_PROCESSOR_ID = 73,
    DPFLTR_DMSERVER_ID = 74,
    DPFLTR_SR_ID = 75,
    DPFLTR_INFINIBAND_ID = 76,
    DPFLTR_IHVDRIVER_ID = 77,
    DPFLTR_IHVVIDEO_ID = 78,
    DPFLTR_IHVAUDIO_ID = 79,
    DPFLTR_IHVNETWORK_ID = 80,
    DPFLTR_IHVSTREAMING_ID = 81,
    DPFLTR_IHVBUS_ID = 82,
    DPFLTR_HPS_ID = 83,
    DPFLTR_RTLTHREADPOOL_ID = 84,
    DPFLTR_LDR_ID = 85,
    DPFLTR_TCPIP6_ID = 86,
    DPFLTR_ISAPNP_ID = 87,
    DPFLTR_SHPC_ID = 88,
    DPFLTR_STORPORT_ID = 89,
    DPFLTR_STORMINIPORT_ID = 90,
    DPFLTR_PRINTSPOOLER_ID = 91,
    DPFLTR_VSSDYNDISK_ID = 92,
    DPFLTR_VERIFIER_ID = 93,
    DPFLTR_VDS_ID = 94,
    DPFLTR_VDSBAS_ID = 95,
    DPFLTR_VDSDYN_ID = 96,
    DPFLTR_VDSDYNDR_ID = 97,
    DPFLTR_VDSLDR_ID = 98,
    DPFLTR_VDSUTIL_ID = 99,
    DPFLTR_DFRGIFC_ID = 100,
    DPFLTR_DEFAULT_ID = 101,
    DPFLTR_MM_ID = 102,
    DPFLTR_DFSC_ID = 103,
    DPFLTR_WOW64_ID = 104,
    DPFLTR_ALPC_ID = 105,
    DPFLTR_WDI_ID = 106,
    DPFLTR_PERFLIB_ID = 107,
    DPFLTR_KTM_ID = 108,
    DPFLTR_IOSTRESS_ID = 109,
    DPFLTR_HEAP_ID = 110,
    DPFLTR_WHEA_ID = 111,
    DPFLTR_USERGDI_ID = 112,
    DPFLTR_MMCSS_ID = 113,
    DPFLTR_TPM_ID = 114,
    DPFLTR_THREADORDER_ID = 115,
    DPFLTR_ENVIRON_ID = 116,
    DPFLTR_EMS_ID = 117,
    DPFLTR_WDT_ID = 118,
    DPFLTR_FVEVOL_ID = 119,
    DPFLTR_NDIS_ID = 120,
    DPFLTR_NVCTRACE_ID = 121,
    DPFLTR_LUAFV_ID = 122,
    DPFLTR_APPCOMPAT_ID = 123,
    DPFLTR_USBSTOR_ID = 124,
    DPFLTR_SBP2PORT_ID = 125,
    DPFLTR_COVERAGE_ID = 126,
    DPFLTR_CACHEMGR_ID = 127,
    DPFLTR_MOUNTMGR_ID = 128,
    DPFLTR_CFR_ID = 129,
    DPFLTR_TXF_ID = 130,
    DPFLTR_KSECDD_ID = 131,
    DPFLTR_FLTREGRESS_ID = 132,
    DPFLTR_MPIO_ID = 133,
    DPFLTR_MSDSM_ID = 134,
    DPFLTR_UDFS_ID = 135,
    DPFLTR_PSHED_ID = 136,
    DPFLTR_STORVSP_ID = 137,
    DPFLTR_LSASS_ID = 138,
    DPFLTR_SSPICLI_ID = 139,
    DPFLTR_CNG_ID = 140,
    DPFLTR_EXFAT_ID = 141,
    DPFLTR_FILETRACE_ID = 142,
    DPFLTR_XSAVE_ID = 143,
    DPFLTR_SE_ID = 144,
    DPFLTR_DRIVEEXTENDER_ID = 145,
    DPFLTR_POWER_ID = 146,
    DPFLTR_CRASHDUMPXHCI_ID = 147,
    DPFLTR_GPIO_ID = 148,
    DPFLTR_REFS_ID = 149,
    DPFLTR_WER_ID = 150,
    DPFLTR_CAPIMG_ID = 151,
    DPFLTR_VPCI_ID = 152,
    DPFLTR_STORAGECLASSMEMORY_ID = 153,
    DPFLTR_FSLIB_ID = 154,
    DPFLTR_ENDOFTABLE_ID = 155
};

typedef enum _ELEMENT_TYPE {
    AllElements = 0,
    ChangerTransport = 1,
    ChangerSlot = 2,
    ChangerIEPort = 3,
    ChangerDrive = 4,
    ChangerDoor = 5,
    ChangerKeypad = 6,
    ChangerMaxElement = 7
};

typedef enum _ENFCOREINFOCLASS {
    EnfInfo_SessionUnderArbitration = 0,
    EnfInfo_MaxSessionCount = 1
};

typedef enum _ENLISTMENT_INFORMATION_CLASS {
    EnlistmentBasicInformation = 0,
    EnlistmentRecoveryInformation = 1,
    EnlistmentCrmInformation = 2
};

typedef enum _ERROR_SEVERITY_VALUE {
    ErrorRecoverable = 0,
    ErrorFatal = 1,
    ErrorCorrected = 2,
    ErrorOthers = 3
};

typedef enum _ESC_ACTION {
    EA_UNGRAB = 0,
    EA_SHAKE = 1,
    EA_PRESSESC = 2
};

typedef enum _EVENT_INFORMATION_CLASS {
    EventBasicInformation = 0
};

typedef enum _EVENT_INFO_CLASS {
    EventProviderBinaryTrackInfo = 0,
    EventProviderSetReserved1 = 1,
    EventProviderSetTraits = 2,
    EventProviderUseDescriptorType = 3,
    MaxEventInfo = 4
};

typedef enum _EVENT_TYPE {
    NotificationEvent = 0,
    SynchronizationEvent = 1
};

typedef enum _EXCEPTION_DISPOSITION {
    ExceptionContinueExecution = 0,
    ExceptionContinueSearch = 1,
    ExceptionNestedException = 2,
    ExceptionCollidedUnwind = 3
};

typedef enum _EXCEPTION_LOG_TYPE {
    LogExceptionEmpty = 0,
    LogExceptionDispatch = 1,
    LogExceptionHandler = 2
};

typedef enum _EXPCMDFLAGS {
    ECF_DEFAULT = 0,
    ECF_HASSUBCOMMANDS = 1,
    ECF_HASSPLITBUTTON = 2,
    ECF_HIDELABEL = 4,
    ECF_ISSEPARATOR = 8,
    ECF_HASLUASHIELD = 16,
    ECF_SEPARATORBEFORE = 32,
    ECF_SEPARATORAFTER = 64,
    ECF_ISDROPDOWN = 128,
    ECF_TOGGLEABLE = 256,
    ECF_AUTOMENUICONS = 512
};

typedef enum _EXPCMDSTATE {
    ECS_ENABLED = 0,
    ECS_DISABLED = 1,
    ECS_HIDDEN = 2,
    ECS_CHECKBOX = 4,
    ECS_CHECKED = 8,
    ECS_RADIOCHECK = 16
};

typedef enum _EXPLORERPANESTATE {
    EPS_DONTCARE = 0,
    EPS_DEFAULT_ON = 1,
    EPS_DEFAULT_OFF = 2,
    EPS_STATEMASK = 0xffff,
    EPS_INITIALSTATE = 0x10000,
    EPS_FORCE = 0x20000
};

typedef enum _EXPPS {
    EXPPS_FILETYPES = 1
};

typedef enum _FILEOPENDIALOGOPTIONS {
    FOS_OVERWRITEPROMPT = 2,
    FOS_STRICTFILETYPES = 4,
    FOS_NOCHANGEDIR = 8,
    FOS_PICKFOLDERS = 32,
    FOS_FORCEFILESYSTEM = 64,
    FOS_ALLNONSTORAGEITEMS = 128,
    FOS_NOVALIDATE = 256,
    FOS_ALLOWMULTISELECT = 512,
    FOS_PATHMUSTEXIST = 2048,
    FOS_FILEMUSTEXIST = 4096,
    FOS_CREATEPROMPT = 8192,
    FOS_SHAREAWARE = 16384,
    FOS_NOREADONLYRETURN = 0x8000,
    FOS_NOTESTFILECREATE = 0x10000,
    FOS_HIDEMRUPLACES = 0x20000,
    FOS_HIDEPINNEDPLACES = 0x40000,
    FOS_NODEREFERENCELINKS = 0x100000,
    FOS_OKBUTTONNEEDSINTERACTION = 0x200000,
    FOS_DONTADDTORECENT = 0x2000000,
    FOS_FORCESHOWHIDDEN = 0x10000000,
    FOS_DEFAULTNOMINIMODE = 0x20000000,
    FOS_FORCEPREVIEWPANEON = 0x40000000,
    FOS_SUPPORTSTREAMABLEITEMS = -2147483648
};

typedef enum _FILE_ID_TYPE {
    FileIdType = 0,
    ObjectIdType = 1,
    ExtendedFileIdType = 2,
    MaximumFileIdType = 3
};

typedef enum _FILE_INFORMATION_CLASS {
    FileDirectoryInformation = 1,
    FileFullDirectoryInformation = 2,
    FileBothDirectoryInformation = 3,
    FileBasicInformation = 4,
    FileStandardInformation = 5,
    FileInternalInformation = 6,
    FileEaInformation = 7,
    FileAccessInformation = 8,
    FileNameInformation = 9,
    FileRenameInformation = 10,
    FileLinkInformation = 11,
    FileNamesInformation = 12,
    FileDispositionInformation = 13,
    FilePositionInformation = 14,
    FileFullEaInformation = 15,
    FileModeInformation = 16,
    FileAlignmentInformation = 17,
    FileAllInformation = 18,
    FileAllocationInformation = 19,
    FileEndOfFileInformation = 20,
    FileAlternateNameInformation = 21,
    FileStreamInformation = 22,
    FilePipeInformation = 23,
    FilePipeLocalInformation = 24,
    FilePipeRemoteInformation = 25,
    FileMailslotQueryInformation = 26,
    FileMailslotSetInformation = 27,
    FileCompressionInformation = 28,
    FileObjectIdInformation = 29,
    FileCompletionInformation = 30,
    FileMoveClusterInformation = 31,
    FileQuotaInformation = 32,
    FileReparsePointInformation = 33,
    FileNetworkOpenInformation = 34,
    FileAttributeTagInformation = 35,
    FileTrackingInformation = 36,
    FileIdBothDirectoryInformation = 37,
    FileIdFullDirectoryInformation = 38,
    FileValidDataLengthInformation = 39,
    FileShortNameInformation = 40,
    FileIoCompletionNotificationInformation = 41,
    FileIoStatusBlockRangeInformation = 42,
    FileIoPriorityHintInformation = 43,
    FileSfioReserveInformation = 44,
    FileSfioVolumeInformation = 45,
    FileHardLinkInformation = 46,
    FileProcessIdsUsingFileInformation = 47,
    FileNormalizedNameInformation = 48,
    FileNetworkPhysicalNameInformation = 49,
    FileIdGlobalTxDirectoryInformation = 50,
    FileIsRemoteDeviceInformation = 51,
    FileUnusedInformation = 52,
    FileNumaNodeInformation = 53,
    FileStandardLinkInformation = 54,
    FileRemoteProtocolInformation = 55,
    FileRenameInformationBypassAccessCheck = 56,
    FileLinkInformationBypassAccessCheck = 57,
    FileVolumeNameInformation = 58,
    FileIdInformation = 59,
    FileIdExtdDirectoryInformation = 60,
    FileReplaceCompletionInformation = 61,
    FileHardLinkFullIdInformation = 62,
    FileIdExtdBothDirectoryInformation = 63,
    FileDispositionInformationEx = 64,
    FileRenameInformationEx = 65,
    FileRenameInformationExBypassAccessCheck = 66,
    FileDesiredStorageClassInformation = 67,
    FileStatInformation = 68,
    FileMemoryPartitionInformation = 69,
    FileStatLxInformation = 70,
    FileCaseSensitiveInformation = 71,
    FileLinkInformationEx = 72,
    FileLinkInformationExBypassAccessCheck = 73,
    FileStorageReserveIdInformation = 74,
    FileCaseSensitiveInformationForceAccessCheck = 75,
    FileMaximumInformation = 76
};

typedef enum _FILE_INFO_BY_HANDLE_CLASS {
    FileBasicInfo = 0,
    FileStandardInfo = 1,
    FileNameInfo = 2,
    FileRenameInfo = 3,
    FileDispositionInfo = 4,
    FileAllocationInfo = 5,
    FileEndOfFileInfo = 6,
    FileStreamInfo = 7,
    FileCompressionInfo = 8,
    FileAttributeTagInfo = 9,
    FileIdBothDirectoryInfo = 10,
    FileIdBothDirectoryRestartInfo = 11,
    FileIoPriorityHintInfo = 12,
    FileRemoteProtocolInfo = 13,
    FileFullDirectoryInfo = 14,
    FileFullDirectoryRestartInfo = 15,
    FileStorageInfo = 16,
    FileAlignmentInfo = 17,
    FileIdInfo = 18,
    FileIdExtdDirectoryInfo = 19,
    FileIdExtdDirectoryRestartInfo = 20,
    FileDispositionInfoEx = 21,
    FileRenameInfoEx = 22,
    MaximumFileInfoByHandleClass = 23
};

typedef enum _FILE_METADATA_OPTIMIZATION_STATE {
    FileMetadataOptimizationNone = 0,
    FileMetadataOptimizationInProgress = 1,
    FileMetadataOptimizationPending = 2
};

typedef enum _FILE_STORAGE_TIER_CLASS {
    FileStorageTierClassUnspecified = 0,
    FileStorageTierClassCapacity = 1,
    FileStorageTierClassPerformance = 2,
    FileStorageTierClassMax = 3
};

typedef enum _FILE_STORAGE_TIER_MEDIA_TYPE {
    FileStorageTierMediaTypeUnspecified = 0,
    FileStorageTierMediaTypeDisk = 1,
    FileStorageTierMediaTypeSsd = 2,
    FileStorageTierMediaTypeScm = 4,
    FileStorageTierMediaTypeMax = 5
};

typedef enum _FILTER_BOOT_OPTION_OPERATION {
    FilterBootOptionOperationOpenSystemStore = 0,
    FilterBootOptionOperationSetElement = 1,
    FilterBootOptionOperationDeleteElement = 2,
    FilterBootOptionOperationMax = 3
};

typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoStandard = 0,
    FindExInfoBasic = 1,
    FindExInfoMaxInfoLevel = 2
};

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchNameMatch = 0,
    FindExSearchLimitToDirectories = 1,
    FindExSearchLimitToDevices = 2,
    FindExSearchMaxSearchOp = 3
};

typedef enum _FIRMWARE_TYPE {
    FirmwareTypeUnknown = 0,
    FirmwareTypeBios = 1,
    FirmwareTypeUefi = 2,
    FirmwareTypeMax = 3
};

typedef enum _FLOWCONTROLCLASS {
    FlowControl_None = 0,
    FlowControl_Hardware = 1,
    FlowControl_Software = 2
};

typedef enum _FP_IEEE_COMPARE_RESULT {
    FpCompareEqual = 0,
    FpCompareGreater = 1,
    FpCompareLess = 2,
    FpCompareUnordered = 3
};

typedef enum _FP_IEEE_OPERATION_CODE {
    FpCodeUnspecified = 0,
    FpCodeAdd = 1,
    FpCodeSubtract = 2,
    FpCodeMultiply = 3,
    FpCodeDivide = 4,
    FpCodeSquareRoot = 5,
    FpCodeRemainder = 6,
    FpCodeCompare = 7,
    FpCodeConvert = 8,
    FpCodeRound = 9,
    FpCodeTruncate = 10,
    FpCodeFloor = 11,
    FpCodeCeil = 12,
    FpCodeAcos = 13,
    FpCodeAsin = 14,
    FpCodeAtan = 15,
    FpCodeAtan2 = 16,
    FpCodeCabs = 17,
    FpCodeCos = 18,
    FpCodeCosh = 19,
    FpCodeExp = 20,
    FpCodeFabs = 21,
    FpCodeFmod = 22,
    FpCodeFrexp = 23,
    FpCodeHypot = 24,
    FpCodeLdexp = 25,
    FpCodeLog = 26,
    FpCodeLog10 = 27,
    FpCodeModf = 28,
    FpCodePow = 29,
    FpCodeSin = 30,
    FpCodeSinh = 31,
    FpCodeTan = 32,
    FpCodeTanh = 33,
    FpCodeY0 = 34,
    FpCodeY1 = 35,
    FpCodeYn = 36
};

typedef enum _FP__IEEE_FORMAT {
    FpFormatFp32 = 0,
    FpFormatFp64 = 1,
    FpFormatFp80 = 2,
    FpFormatFp128 = 3,
    FpFormatI16 = 4,
    FpFormatI32 = 5,
    FpFormatI64 = 6,
    FpFormatU16 = 7,
    FpFormatU32 = 8,
    FpFormatU64 = 9,
    FpFormatCompare = 10,
    FpFormatString = 11
};

typedef enum _FP__IEEE_ROUNDING_MODE {
    FpRoundNearest = 0,
    FpRoundMinusInfinity = 1,
    FpRoundPlusInfinity = 2,
    FpRoundChopped = 3
};

typedef enum _FSINFOCLASS {
    FileFsVolumeInformation = 1,
    FileFsLabelInformation = 2,
    FileFsSizeInformation = 3,
    FileFsDeviceInformation = 4,
    FileFsAttributeInformation = 5,
    FileFsControlInformation = 6,
    FileFsFullSizeInformation = 7,
    FileFsObjectIdInformation = 8,
    FileFsDriverPathInformation = 9,
    FileFsVolumeFlagsInformation = 10,
    FileFsSectorSizeInformation = 11,
    FileFsDataCopyInformation = 12,
    FileFsMetadataSizeInformation = 13,
    FileFsFullSizeInformationEx = 14,
    FileFsMaximumInformation = 15
};

typedef enum _FUNCTION_TABLE_TYPE {
    RF_SORTED = 0,
    RF_UNSORTED = 1,
    RF_CALLBACK = 2,
    RF_KERNEL_DYNAMIC = 3
};

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard = 0,
    GetFileExMaxInfoLevel = 1
};

typedef enum _HARDERROR_RESPONSE {
    ResponseReturnToCaller = 0,
    ResponseNotHandled = 1,
    ResponseAbort = 2,
    ResponseCancel = 3,
    ResponseIgnore = 4,
    ResponseNo = 5,
    ResponseOk = 6,
    ResponseRetry = 7,
    ResponseYes = 8,
    ResponseTryAgain = 9,
    ResponseContinue = 10
};

typedef enum _HARDERROR_RESPONSE_OPTION {
    OptionAbortRetryIgnore = 0,
    OptionOk = 1,
    OptionOkCancel = 2,
    OptionRetryCancel = 3,
    OptionYesNo = 4,
    OptionYesNoCancel = 5,
    OptionShutdownSystem = 6,
    OptionOkNoWait = 7,
    OptionCancelTryContinue = 8
};

typedef enum _HARDWARE_COUNTER_TYPE {
    PMCCounter = 0,
    MaxHardwareCounterType = 1
};

typedef enum _HEAP_INFORMATION_CLASS {
    HeapCompatibilityInformation = 0,
    HeapEnableTerminationOnCorruption = 1,
    HeapExtendedInformation = 2,
    HeapOptimizeResources = 3,
    HeapTaggingInformation = 4,
    HeapStackDatabase = 5,
    HeapMemoryLimit = 6,
    HeapDetailedFailureInformation = -2147483647,
    HeapSetDebuggingInformation = -2147483646
};

typedef enum _HIBERFILE_BUCKET_SIZE {
    HiberFileBucket1GB = 0,
    HiberFileBucket2GB = 1,
    HiberFileBucket4GB = 2,
    HiberFileBucket8GB = 3,
    HiberFileBucket16GB = 4,
    HiberFileBucket32GB = 5,
    HiberFileBucketUnlimited = 6,
    HiberFileBucketMax = 7
};

typedef enum _HLSURF_INFORMATION_CLASS {
    HLSurfDxSharedSurface = 0,
    HLSurfPresentFlags = 1,
    HLSurfConfirmedUpdateId = 2,
    HLSurfSurfaceData = 3,
    HLSurfSurfaceRegions = 4,
    HLSurfNewSurfacePending = 5,
    HLSurfRedirectionStyle = 6,
    HLSurfOpenCompositorRef = 7,
    HLSurfCloseCompositorRef = 8,
    HLSurfSurfaceRegionsAndMove = 9,
    HLSurfGenerateMoveData = 10,
    HLSurfInformationLast = 11
};

typedef enum _HLSURF_REDIRECTIONSTYLE {
    RedirectionStyleUnknonw = 0,
    RedirectionStyleHBitmap = 1,
    RedirectionStyleDeviceBitmap1_1 = 2
};

typedef enum _HOT_PATCH_INFORMATION_CLASS {
    ManageHotPatchLoadPatch = 0,
    ManageHotPatchUnloadPatch = 1,
    ManageHotPatchQueryPatches = 2,
    ManageHotPatchLoadPatchForUser = 3,
    ManageHotPatchUnloadPatchForUser = 4,
    ManageHotPatchQueryPatchesForUser = 5,
    ManageHotPatchQueryActivePatches = 6,
    ManageHotPatchMax = 7
};

typedef enum _HWND_REDIRECTION_INFORMATION {
    HwndRedirectionDxShared = 0,
    HwndRedirectionUpdateId = 1,
    HwndRedirectionPresentFlags = 2,
    HwndRedirectionDirectXRegion = 3,
    HwndRedirectionDirectXUpdateRect = 4,
    HwndRedirectionLast = 5
};

typedef enum _IDL_CS_CONVERT {
    IDL_CS_NO_CONVERT = 0,
    IDL_CS_IN_PLACE_CONVERT = 1,
    IDL_CS_NEW_BUFFER_CONVERT = 2
};

typedef enum _IMAGE_MITIGATION_POLICY {
    ImageDepPolicy = 0,
    ImageAslrPolicy = 1,
    ImageDynamicCodePolicy = 2,
    ImageStrictHandleCheckPolicy = 3,
    ImageSystemCallDisablePolicy = 4,
    ImageMitigationOptionsMask = 5,
    ImageExtensionPointDisablePolicy = 6,
    ImageControlFlowGuardPolicy = 7,
    ImageSignaturePolicy = 8,
    ImageFontDisablePolicy = 9,
    ImageImageLoadPolicy = 10,
    ImagePayloadRestrictionPolicy = 11,
    ImageChildProcessPolicy = 12,
    ImageSehopPolicy = 13,
    ImageHeapPolicy = 14,
    MaxImageMitigationPolicy = 15
};

typedef enum _IMAGE_POLICY_ENTRY_TYPE {
    ImagePolicyEntryTypeNone = 0,
    ImagePolicyEntryTypeBool = 1,
    ImagePolicyEntryTypeInt8 = 2,
    ImagePolicyEntryTypeUInt8 = 3,
    ImagePolicyEntryTypeInt16 = 4,
    ImagePolicyEntryTypeUInt16 = 5,
    ImagePolicyEntryTypeInt32 = 6,
    ImagePolicyEntryTypeUInt32 = 7,
    ImagePolicyEntryTypeInt64 = 8,
    ImagePolicyEntryTypeUInt64 = 9,
    ImagePolicyEntryTypeAnsiString = 10,
    ImagePolicyEntryTypeUnicodeString = 11,
    ImagePolicyEntryTypeOverride = 12,
    ImagePolicyEntryTypeMaximum = 13
};

typedef enum _IMAGE_POLICY_ID {
    ImagePolicyIdNone = 0,
    ImagePolicyIdEtw = 1,
    ImagePolicyIdDebug = 2,
    ImagePolicyIdCrashDump = 3,
    ImagePolicyIdCrashDumpKey = 4,
    ImagePolicyIdCrashDumpKeyGuid = 5,
    ImagePolicyIdParentSd = 6,
    ImagePolicyIdParentSdRev = 7,
    ImagePolicyIdSvn = 8,
    ImagePolicyIdDeviceId = 9,
    ImagePolicyIdCapability = 10,
    ImagePolicyIdScenarioId = 11,
    ImagePolicyIdMaximum = 12
};

typedef enum _INTERCEPTOR_MOUSE_SYSTEM_STATE {
    IMSS_DEFAULT = 0,
    IMSS_MOUSE_BUTTON_SWAPPED = 1,
    IMSS_MOUSE_CAPTURED = 2
};

typedef enum _INTERFACE_TYPE {
    InterfaceTypeUndefined = -1,
    Internal = 0,
    Isa = 1,
    Eisa = 2,
    MicroChannel = 3,
    TurboChannel = 4,
    PCIBus = 5,
    VMEBus = 6,
    NuBus = 7,
    PCMCIABus = 8,
    CBus = 9,
    MPIBus = 10,
    MPSABus = 11,
    ProcessorInternal = 12,
    InternalPowerBus = 13,
    PNPISABus = 14,
    PNPBus = 15,
    Vmcs = 16,
    ACPIBus = 17,
    MaximumInterfaceType = 18
};

typedef enum _IO_COMPLETION_INFORMATION_CLASS {
    IoCompletionBasicInformation = 0
};

typedef enum _IO_PRIORITY_HINT {
    IoPriorityVeryLow = 0,
    IoPriorityLow = 1,
    IoPriorityNormal = 2,
    IoPriorityHigh = 3,
    IoPriorityCritical = 4,
    MaxIoPriorityTypes = 5
};

typedef enum _IO_SESSION_EVENT {
    IoSessionEventIgnore = 0,
    IoSessionEventCreated = 1,
    IoSessionEventTerminated = 2,
    IoSessionEventConnected = 3,
    IoSessionEventDisconnected = 4,
    IoSessionEventLogon = 5,
    IoSessionEventLogoff = 6,
    IoSessionEventMax = 7
};

typedef enum _IO_SESSION_STATE {
    IoSessionStateCreated = 1,
    IoSessionStateInitialized = 2,
    IoSessionStateConnected = 3,
    IoSessionStateDisconnected = 4,
    IoSessionStateDisconnectedLoggedOn = 5,
    IoSessionStateLoggedOn = 6,
    IoSessionStateLoggedOff = 7,
    IoSessionStateTerminated = 8,
    IoSessionStateMax = 9
};

typedef enum _IRQ_DEVICE_POLICY {
    IrqPolicyMachineDefault = 0,
    IrqPolicyAllCloseProcessors = 1,
    IrqPolicyOneCloseProcessor = 2,
    IrqPolicyAllProcessorsInMachine = 3,
    IrqPolicySpecifiedProcessors = 4,
    IrqPolicySpreadMessagesAcrossAllProcessors = 5,
    IrqPolicyAllProcessorsInMachineWhenSteered = 6
};

typedef enum _IRQ_GROUP_POLICY {
    GroupAffinityAllGroupZero = 0,
    GroupAffinityDontCare = 1
};

typedef enum _IRQ_PRIORITY {
    IrqPriorityUndefined = 0,
    IrqPriorityLow = 1,
    IrqPriorityNormal = 2,
    IrqPriorityHigh = 3
};

typedef enum _InputMessageNotificationFlags {
    IMNF_None = 0,
    IMNF_AddCotrolToWheel = 1,
    IMNF_Magnetism = 2
};

typedef enum _JOBOBJECTINFOCLASS {
    JobObjectBasicAccountingInformation = 1,
    JobObjectBasicLimitInformation = 2,
    JobObjectBasicProcessIdList = 3,
    JobObjectBasicUIRestrictions = 4,
    JobObjectSecurityLimitInformation = 5,
    JobObjectEndOfJobTimeInformation = 6,
    JobObjectAssociateCompletionPortInformation = 7,
    JobObjectBasicAndIoAccountingInformation = 8,
    JobObjectExtendedLimitInformation = 9,
    JobObjectJobSetInformation = 10,
    JobObjectGroupInformation = 11,
    JobObjectNotificationLimitInformation = 12,
    JobObjectLimitViolationInformation = 13,
    JobObjectGroupInformationEx = 14,
    JobObjectCpuRateControlInformation = 15,
    JobObjectCompletionFilter = 16,
    JobObjectCompletionCounter = 17,
    JobObjectFreezeInformation = 18,
    JobObjectExtendedAccountingInformation = 19,
    JobObjectWakeInformation = 20,
    JobObjectBackgroundInformation = 21,
    JobObjectSchedulingRankBiasInformation = 22,
    JobObjectTimerVirtualizationInformation = 23,
    JobObjectCycleTimeNotification = 24,
    JobObjectClearEvent = 25,
    JobObjectInterferenceInformation = 26,
    JobObjectClearPeakJobMemoryUsed = 27,
    JobObjectMemoryUsageInformation = 28,
    JobObjectSharedCommit = 29,
    JobObjectContainerId = 30,
    JobObjectIoRateControlInformation = 31,
    JobObjectSiloRootDirectory = 37,
    JobObjectServerSiloBasicInformation = 38,
    JobObjectServerSiloUserSharedData = 39,
    JobObjectServerSiloInitialize = 40,
    JobObjectServerSiloRunningState = 41,
    JobObjectIoAttribution = 42,
    JobObjectMemoryPartitionInformation = 43,
    JobObjectContainerTelemetryId = 44,
    JobObjectSiloSystemRoot = 45,
    JobObjectEnergyTrackingState = 46,
    JobObjectThreadImpersonationInformation = 47,
    JobObjectReserved1Information = 18,
    JobObjectReserved2Information = 19,
    JobObjectReserved3Information = 20,
    JobObjectReserved4Information = 21,
    JobObjectReserved5Information = 22,
    JobObjectReserved6Information = 23,
    JobObjectReserved7Information = 24,
    JobObjectReserved8Information = 25,
    JobObjectReserved9Information = 26,
    JobObjectReserved10Information = 27,
    JobObjectReserved11Information = 28,
    JobObjectReserved12Information = 29,
    JobObjectReserved13Information = 30,
    JobObjectReserved14Information = 31,
    JobObjectNetRateControlInformation = 32,
    JobObjectNotificationLimitInformation2 = 33,
    JobObjectLimitViolationInformation2 = 34,
    JobObjectCreateSilo = 35,
    JobObjectSiloBasicInformation = 36,
    JobObjectReserved15Information = 37,
    JobObjectReserved16Information = 38,
    JobObjectReserved17Information = 39,
    JobObjectReserved18Information = 40,
    JobObjectReserved19Information = 41,
    JobObjectReserved20Information = 42,
    JobObjectReserved21Information = 43,
    JobObjectReserved22Information = 44,
    JobObjectReserved23Information = 45,
    JobObjectReserved24Information = 46,
    JobObjectReserved25Information = 47,
    MaxJobObjectInfoClass = 48
};

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE {
    ToleranceLow = 1,
    ToleranceMedium = 2,
    ToleranceHigh = 3
};

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL {
    ToleranceIntervalShort = 1,
    ToleranceIntervalMedium = 2,
    ToleranceIntervalLong = 3
};

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS {
    JournalCreateKey = 0,
    JournalDeleteKey = 1,
    JournalRenameKey = 2,
    JournalSetValue = 3,
    JournalDeleteValue = 4,
    JournalSetKeySecurity = 5,
    JournalSetKeyUserFlags = 6,
    JournalSetLastWriteTime = 7,
    JournalBeginTransaction = 8,
    JournalCommitTransaction = 9,
    JournalAbortTransaction = 10,
    MaxJournalChangeAction = 11
};

typedef enum _JOURNAL_INFORMATION_CLASS {
    JournalAbsoluteInformation = 0,
    JournalClientInformation = 1,
    MaxJournalInformation = 2
};

typedef enum _KERB_CERTIFICATE_INFO_TYPE {
    CertHashInfo = 1
};

typedef enum _KERB_LOGON_SUBMIT_TYPE {
    KerbInteractiveLogon = 2,
    KerbSmartCardLogon = 6,
    KerbWorkstationUnlockLogon = 7,
    KerbSmartCardUnlockLogon = 8,
    KerbProxyLogon = 9,
    KerbTicketLogon = 10,
    KerbTicketUnlockLogon = 11,
    KerbS4ULogon = 12,
    KerbCertificateLogon = 13,
    KerbCertificateS4ULogon = 14,
    KerbCertificateUnlockLogon = 15,
    KerbNoElevationLogon = 83,
    KerbLuidLogon = 84
};

typedef enum _KERB_PROFILE_BUFFER_TYPE {
    KerbInteractiveProfile = 2,
    KerbSmartCardProfile = 4,
    KerbTicketProfile = 6
};

typedef enum _KERB_PROTOCOL_MESSAGE_TYPE {
    KerbDebugRequestMessage = 0,
    KerbQueryTicketCacheMessage = 1,
    KerbChangeMachinePasswordMessage = 2,
    KerbVerifyPacMessage = 3,
    KerbRetrieveTicketMessage = 4,
    KerbUpdateAddressesMessage = 5,
    KerbPurgeTicketCacheMessage = 6,
    KerbChangePasswordMessage = 7,
    KerbRetrieveEncodedTicketMessage = 8,
    KerbDecryptDataMessage = 9,
    KerbAddBindingCacheEntryMessage = 10,
    KerbSetPasswordMessage = 11,
    KerbSetPasswordExMessage = 12,
    KerbVerifyCredentialsMessage = 13,
    KerbQueryTicketCacheExMessage = 14,
    KerbPurgeTicketCacheExMessage = 15,
    KerbRefreshSmartcardCredentialsMessage = 16,
    KerbAddExtraCredentialsMessage = 17,
    KerbQuerySupplementalCredentialsMessage = 18,
    KerbTransferCredentialsMessage = 19,
    KerbQueryTicketCacheEx2Message = 20,
    KerbSubmitTicketMessage = 21,
    KerbAddExtraCredentialsExMessage = 22,
    KerbQueryKdcProxyCacheMessage = 23,
    KerbPurgeKdcProxyCacheMessage = 24,
    KerbQueryTicketCacheEx3Message = 25,
    KerbCleanupMachinePkinitCredsMessage = 26,
    KerbAddBindingCacheEntryExMessage = 27,
    KerbQueryBindingCacheMessage = 28,
    KerbPurgeBindingCacheMessage = 29,
    KerbPinKdcMessage = 30,
    KerbUnpinAllKdcsMessage = 31,
    KerbQueryDomainExtendedPoliciesMessage = 32,
    KerbQueryS4U2ProxyCacheMessage = 33
};

typedef enum _KEY_INFORMATION_CLASS {
    KeyBasicInformation = 0,
    KeyNodeInformation = 1,
    KeyFullInformation = 2,
    KeyNameInformation = 3,
    KeyCachedInformation = 4,
    KeyFlagsInformation = 5,
    KeyVirtualizationInformation = 6,
    KeyHandleTagsInformation = 7,
    KeyTrustInformation = 8,
    KeyLayerInformation = 9,
    MaxKeyInfoClass = 10
};

typedef enum _KEY_SET_INFORMATION_CLASS {
    KeyWriteTimeInformation = 0,
    KeyWow64FlagsInformation = 1,
    KeyControlFlagsInformation = 2,
    KeySetVirtualizationInformation = 3,
    KeySetDebugInformation = 4,
    KeySetHandleTagsInformation = 5,
    KeySetLayerInformation = 6,
    MaxKeySetInfoClass = 7
};

typedef enum _KEY_VALUE_INFORMATION_CLASS {
    KeyValueBasicInformation = 0,
    KeyValueFullInformation = 1,
    KeyValuePartialInformation = 2,
    KeyValueFullInformationAlign64 = 3,
    KeyValuePartialInformationAlign64 = 4,
    KeyValueLayerInformation = 5,
    MaxKeyValueInfoClass = 6
};

typedef enum _KF_DEFINITION_FLAGS {
    KFDF_LOCAL_REDIRECT_ONLY = 2,
    KFDF_ROAMABLE = 4,
    KFDF_PRECREATE = 8,
    KFDF_STREAM = 16,
    KFDF_PUBLISHEXPANDEDPATH = 32,
    KFDF_NO_REDIRECT_UI = 64
};

typedef enum _KF_REDIRECTION_CAPABILITIES {
    KF_REDIRECTION_CAPABILITIES_ALLOW_ALL = 255,
    KF_REDIRECTION_CAPABILITIES_REDIRECTABLE = 1,
    KF_REDIRECTION_CAPABILITIES_DENY_ALL = 0xfff00,
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED = 256,
    KF_REDIRECTION_CAPABILITIES_DENY_POLICY = 512,
    KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS = 1024
};

typedef enum _KF_REDIRECT_FLAGS {
    KF_REDIRECT_USER_EXCLUSIVE = 1,
    KF_REDIRECT_COPY_SOURCE_DACL = 2,
    KF_REDIRECT_OWNER_USER = 4,
    KF_REDIRECT_SET_OWNER_EXPLICIT = 8,
    KF_REDIRECT_CHECK_ONLY = 16,
    KF_REDIRECT_WITH_UI = 32,
    KF_REDIRECT_UNPIN = 64,
    KF_REDIRECT_PIN = 128,
    KF_REDIRECT_COPY_CONTENTS = 512,
    KF_REDIRECT_DEL_SOURCE_CONTENTS = 1024,
    KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS = 2048
};

typedef enum _KHETERO_CPU_POLICY {
    KHeteroCpuPolicyAll = 0,
    KHeteroCpuPolicyLarge = 1,
    KHeteroCpuPolicyLargeOrIdle = 2,
    KHeteroCpuPolicySmall = 3,
    KHeteroCpuPolicySmallOrIdle = 4,
    KHeteroCpuPolicyDynamic = 5,
    KHeteroCpuPolicyStaticMax = 5,
    KHeteroCpuPolicyBiasedSmall = 6,
    KHeteroCpuPolicyBiasedLarge = 7,
    KHeteroCpuPolicyDefault = 8,
    KHeteroCpuPolicyMax = 9
};

typedef enum _KPROFILE_SOURCE {
    ProfileTime = 0,
    ProfileAlignmentFixup = 1,
    ProfileTotalIssues = 2,
    ProfilePipelineDry = 3,
    ProfileLoadInstructions = 4,
    ProfilePipelineFrozen = 5,
    ProfileBranchInstructions = 6,
    ProfileTotalNonissues = 7,
    ProfileDcacheMisses = 8,
    ProfileIcacheMisses = 9,
    ProfileCacheMisses = 10,
    ProfileBranchMispredictions = 11,
    ProfileStoreInstructions = 12,
    ProfileFpInstructions = 13,
    ProfileIntegerInstructions = 14,
    Profile2Issue = 15,
    Profile3Issue = 16,
    Profile4Issue = 17,
    ProfileSpecialInstructions = 18,
    ProfileTotalCycles = 19,
    ProfileIcacheIssues = 20,
    ProfileDcacheAccesses = 21,
    ProfileMemoryBarrierCycles = 22,
    ProfileLoadLinkedIssues = 23,
    ProfileMaximum = 24
};

typedef enum _KTMOBJECT_TYPE {
    KTMOBJECT_TRANSACTION = 0,
    KTMOBJECT_TRANSACTION_MANAGER = 1,
    KTMOBJECT_RESOURCE_MANAGER = 2,
    KTMOBJECT_ENLISTMENT = 3,
    KTMOBJECT_INVALID = 4
};

typedef enum _KnownRIMDeviceKind {
    KRIMDK_HID = 0,
    KRIMDK_MOUSE = 1,
    KRIMDK_KEYBOARD = 2,
    KRIMDK_TOUCH = 3,
    KRIMDK_PTP = 4,
    KRIMDK_PEN = 5
};

typedef enum _LDR_DDAG_STATE {
    LdrModulesMerged = -5,
    LdrModulesInitError = -4,
    LdrModulesSnapError = -3,
    LdrModulesUnloaded = -2,
    LdrModulesUnloading = -1,
    LdrModulesPlaceHolder = 0,
    LdrModulesMapping = 1,
    LdrModulesMapped = 2,
    LdrModulesWaitingForDependencies = 3,
    LdrModulesSnapping = 4,
    LdrModulesSnapped = 5,
    LdrModulesCondensed = 6,
    LdrModulesReadyToInit = 7,
    LdrModulesInitializing = 8,
    LdrModulesReadyToRun = 9
};

typedef enum _LDR_DLL_LOAD_REASON {
    LoadReasonStaticDependency = 0,
    LoadReasonStaticForwarderDependency = 1,
    LoadReasonDynamicForwarderDependency = 2,
    LoadReasonDelayloadDependency = 3,
    LoadReasonDynamicLoad = 4,
    LoadReasonAsImageLoad = 5,
    LoadReasonAsDataLoad = 6,
    LoadReasonEnclavePrimary = 7,
    LoadReasonEnclaveDependency = 8,
    LoadReasonUnknown = -1
};

typedef enum _LEARNING_MODE_LOG_LEVEL {
    LearningModeLogLevelPassive = 0,
    LearningModeLogLevelNormalApc = 1,
    LearningModeLogLevelSpecialApc = 2,
    LearningModeLogLevelMax = 3
};

typedef enum _LINK_TRACKING_INFORMATION_TYPE {
    NtfsLinkTrackingInformation = 0,
    DfsLinkTrackingInformation = 1
};

typedef enum _LINP_SOURCE {
    LINP_SOURCE_UNKNOWN = 0,
    LINP_SOURCE_KEYBOARD = 1,
    LINP_SOURCE_MOUSE = 2,
    LINP_SOURCE_HID = 3,
    LINP_SOURCE_POUSERPRESENT = 4,
    LINP_SOURCE_PORESUMEAPPS = 5,
    LINP_SOURCE_SCREENSAVE_TIMEOUT = 6,
    LINP_SOURCE_ACTIVATION = 7,
    LINP_SOURCE_SESSION_SWITCH = 8,
    LINP_SOURCE_DISPLAY_REQ = 9,
    LINP_SOURCE_TOUCH = 10,
    LINP_SOURCE_ACDC_SWITCH = 11,
    LINP_SOURCE_PEN = 12,
    LINP_SOURCE_INITIALIZATION = 13,
    LINP_SOURCE_POSESSIONCONNECT = 14,
    LINP_SOURCE_ACCELEROMETER = 15
};

typedef enum _LI_METRIC {
    LIM_SMALL = 0,
    LIM_LARGE = 1
};

typedef enum _LOADFACTORTYPE {
    ErrorConstraint = 0,
    PagedPoolConstraint = 1,
    NonPagedPoolConstraint = 2,
    AvailablePagesConstraint = 3,
    SystemPtesConstraint = 4,
    CPUConstraint = 5
};

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {
    RelationProcessorCore = 0,
    RelationNumaNode = 1,
    RelationCache = 2,
    RelationProcessorPackage = 3,
    RelationGroup = 4,
    RelationAll = 0xffff
};

typedef enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION {
    MarshalDirectionMarshal = 0,
    MarshalDirectionUnmarshal = 1
};

typedef enum _LSA_LOOKUP_DOMAIN_INFO_CLASS {
    AccountDomainInformation = 5,
    DnsDomainInformation = 12
};

typedef enum _MAGINPUT_OPERATION {
    MagInputStart = 0,
    MagInputUpdateAll = 1,
    MagInputUpdateSource = 2,
    MagInputStop = 3
};

typedef enum _MAGN_SAMPLING_MODE {
    MagSamplingModeDefault = 0,
    MagSamplingModexBR = 1
};

typedef enum _MAG_CONTROL_CODE {
    MagContexControlInitialize = 0,
    MagContexControlUninitialize = 1,
    MagContexControlPause = 2,
    MagContexControlResume = 3
};

typedef enum _MAG_INFORMATION_CLASS {
    MagLensContextInitialize = 0,
    MagLensContextDeinitialize = 1,
    MagLensContextTransformOutputSource = 2,
    MagLensContextTransformOutputMagFac = 3,
    MagLensContextTransformInput = 4,
    MagLensContextColorTransform = 5,
    MagLensContextWindowFilterList = 6,
    MagLensContextRenderTarget = 7,
    MagLensContextUpdateRenderTarget = 8,
    MagLensContextFlags = 9,
    MagLensContextSamplingMode = 10,
    MagLensContextLast = 11
};

typedef enum _MANDATORY_LEVEL {
    MandatoryLevelUntrusted = 0,
    MandatoryLevelLow = 1,
    MandatoryLevelMedium = 2,
    MandatoryLevelHigh = 3,
    MandatoryLevelSystem = 4,
    MandatoryLevelSecureProcess = 5,
    MandatoryLevelCount = 6
};

typedef enum _MEDIA_TYPE {
    Unknown = 0,
    F5_1Pt2_512 = 1,
    F3_1Pt44_512 = 2,
    F3_2Pt88_512 = 3,
    F3_20Pt8_512 = 4,
    F3_720_512 = 5,
    F5_360_512 = 6,
    F5_320_512 = 7,
    F5_320_1024 = 8,
    F5_180_512 = 9,
    F5_160_512 = 10,
    RemovableMedia = 11,
    FixedMedia = 12,
    F3_120M_512 = 13,
    F3_640_512 = 14,
    F5_640_512 = 15,
    F5_720_512 = 16,
    F3_1Pt2_512 = 17,
    F3_1Pt23_1024 = 18,
    F5_1Pt23_1024 = 19,
    F3_128Mb_512 = 20,
    F3_230Mb_512 = 21,
    F8_256_128 = 22,
    F3_200Mb_512 = 23,
    F3_240M_512 = 24,
    F3_32M_512 = 25
};

typedef enum _MEMORY_EXHAUSTION_TYPE {
    MemoryExhaustionTypeFailFastOnCommitFailure = 0,
    MemoryExhaustionTypeMax = 1
};

typedef enum _MEMORY_INFORMATION_CLASS {
    MemoryBasicInformation = 0,
    MemoryWorkingSetInformation = 1,
    MemoryMappedFilenameInformation = 2,
    MemoryRegionInformation = 3,
    MemoryWorkingSetExInformation = 4,
    MemorySharedCommitInformation = 5,
    MemoryImageInformation = 6,
    MemoryRegionInformationEx = 7,
    MemoryPrivilegedBasicInformation = 8,
    MemoryEnclaveImageInformation = 9,
    MemoryBasicInformationCapped = 10
};

typedef enum _MEMORY_RESERVE_TYPE {
    MemoryReserveUserApc = 0,
    MemoryReserveIoCompletion = 1,
    MemoryReserveTypeMax = 2
};

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE {
    LowMemoryResourceNotification = 0,
    HighMemoryResourceNotification = 1
};

typedef enum _MEMORY_WORKING_SET_EX_LOCATION {
    MemoryLocationInvalid = 0,
    MemoryLocationResident = 1,
    MemoryLocationPagefile = 2,
    MemoryLocationReserved = 3
};

typedef enum _MIT_CURSOR_MANAGEMENT_MESSAGE_ID {
    MITCMMID_VISIBILITY = 0,
    MITCMMID_POSITION = 1,
    MITCMMID_APPCLIP = 2,
    MITCMMID_SHELLCLIP = 3,
    MITCMMID_SUPPRESSCURSOR = 4,
    MITCMMID_ORIENTATION = 5
};

typedef enum _MIT_DEVICE_ID_MESSAGE_ID {
    MDIMI_CREATED = 0,
    MDIMI_DEPARTED = 1,
    MDIMI_RETURNED = 2,
    MDIMI_PARENTCHANGED = 3
};

typedef enum _MIT_ENDPOINT {
    MITEP_DEVICE_IDENTIFICATION = 0,
    MITEP_CURSOR_MANAGEMENT = 1,
    MITEP_INPUT_DELIVERY = 2,
    MITEP_INPUT_FOCUS = 3,
    MITEP_KEYBOARD_INPUT_ATTEMPTED = 4,
    MITEP_INPUT_INTEROP_ISM = 5,
    MITEP_POINTER_INPUT_DOWN = 6,
    MITEP_INPUT_CONFIG = 7,
    MITEP_INPUT_INTEROP_MT = 8,
    MITEP_KEYBOARD_INPUT = 9,
    MITEP_INVALIDATE_INPUT = 10,
    MITEP_MAX = 11
};

typedef enum _MIT_INPUT_CONFIG_MESSAGE_TYPE {
    MIT_INPUT_CONFIG_MESSAGE_TYPE_CONFIG = 0,
    MIT_INPUT_CONFIG_MESSAGE_TYPE_COMMIT = 1
};

typedef enum _MM_ETW_WORKING_SET_TYPE {
    MmEtwWorkingSetTypeUser = 0,
    MmEtwWorkingSetTypeSession = 1,
    MmEtwWorkingSetTypeSystem = 2,
    MmEtwWorkingSetTypeMaximum = 3
};

typedef enum _MODERN_SCALE_FACTOR {
    MODERN_SCALE_INVALID = 0,
    MODERN_SCALE_100_PERCENT = 100,
    MODERN_SCALE_140_PERCENT = 140,
    MODERN_SCALE_180_PERCENT = 180
};

typedef enum _MONITOR_DISPLAY_STATE {
    PowerMonitorOff = 0,
    PowerMonitorOn = 1,
    PowerMonitorDim = 2
};

typedef enum _MONITOR_THERMAL_BRIGHTNESS_LIMIT_TYPE {
    PercentageThermalLimit = 0,
    MillinitsThermalLimit = 1
};

typedef enum _MOUSEPROCESSOR_PROCESSING_OPTIONS {
    MPPO_DEFAULT = 0,
    MPPO_DONT_SWAP_BUTTONS = 1,
    MPPO_SKIP_POWER_MANANGEMENT = 2,
    MPPO_DONT_MOVE_CURSOR = 4,
    MPPO_SURPRESS_INTERCEPT = 8,
    MPPO_USE_EXPLICIT_COORDINATES = 16,
    MPPO_SKIP_BOUND_MOUSE = 32,
    MPPO_DONT_ACTIVATE = 64,
    MPPO_ALWAYS_NOTIFY_CURSOR_POS = 128
};

typedef enum _MOUSE_INTERCEPTION_RESULT {
    MIR_NOOP = 0,
    MIR_PROCESSED_BY_INTERCEPTOR = 1,
    MIR_REQUEST_MOUSE_PROCESSOR_PROCESSING = 2
};

typedef enum _MOUSE_PREINTERCEPT_BEHAVIOR {
    MIB_NONE = 0,
    MIB_APPLY_BALLISTICS = 1
};

typedef enum _MSGTYPE {
    MSGTYPE_PRE_WNDPROC = 0,
    MSGTYPE_POST_WNDPROC = 1,
    MSGTYPE_PRE_DEFDLGPROC = 2,
    MSGTYPE_POST_DEFDLGPROC = 3,
    MSGTYPE_DEFWNDPROC = 4
};

typedef enum _MSV1_0_CREDENTIAL_KEY_TYPE {
    InvalidCredKey = 0,
    DeprecatedIUMCredKey = 1,
    DomainUserCredKey = 2,
    LocalUserCredKey = 3,
    ExternallySuppliedCredKey = 4
};

typedef enum _MSV1_0_LOGON_SUBMIT_TYPE {
    MsV1_0InteractiveLogon = 2,
    MsV1_0Lm20Logon = 3,
    MsV1_0NetworkLogon = 4,
    MsV1_0SubAuthLogon = 5,
    MsV1_0WorkstationUnlockLogon = 7,
    MsV1_0S4ULogon = 12,
    MsV1_0VirtualLogon = 82,
    MsV1_0NoElevationLogon = 83,
    MsV1_0LuidLogon = 84
};

typedef enum _MSV1_0_PROFILE_BUFFER_TYPE {
    MsV1_0InteractiveProfile = 2,
    MsV1_0Lm20LogonProfile = 3,
    MsV1_0SmartCardProfile = 4
};

typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE {
    MsV1_0Lm20ChallengeRequest = 0,
    MsV1_0Lm20GetChallengeResponse = 1,
    MsV1_0EnumerateUsers = 2,
    MsV1_0GetUserInfo = 3,
    MsV1_0ReLogonUsers = 4,
    MsV1_0ChangePassword = 5,
    MsV1_0ChangeCachedPassword = 6,
    MsV1_0GenericPassthrough = 7,
    MsV1_0CacheLogon = 8,
    MsV1_0SubAuth = 9,
    MsV1_0DeriveCredential = 10,
    MsV1_0CacheLookup = 11,
    MsV1_0SetProcessOption = 12,
    MsV1_0ConfigLocalAliases = 13,
    MsV1_0ClearCachedCredentials = 14,
    MsV1_0LookupToken = 15,
    MsV1_0ValidateAuth = 16,
    MsV1_0CacheLookupEx = 17,
    MsV1_0GetCredentialKey = 18,
    MsV1_0SetThreadOption = 19,
    MsV1_0DecryptDpapiMasterKey = 20,
    MsV1_0GetStrongCredentialKey = 21,
    MsV1_0TransferCred = 22,
    MsV1_0ProvisionTbal = 23,
    MsV1_0DeleteTbalSecrets = 24
};

typedef enum _MUTANT_INFORMATION_CLASS {
    MutantBasicInformation = 0,
    MutantOwnerInformation = 1
};

typedef enum _NMCII_FLAGS {
    NMCII_NONE = 0,
    NMCII_ITEMS = 1,
    NMCII_FOLDERS = 2
};

typedef enum _NMCSAEI_FLAGS {
    NMCSAEI_SELECT = 0,
    NMCSAEI_EDIT = 1
};

typedef enum _NORM_FORM {
    NormalizationOther = 0,
    NormalizationC = 1,
    NormalizationD = 2,
    NormalizationKC = 5,
    NormalizationKD = 6
};

typedef enum _NSTCITEMSTATE {
    NSTCIS_NONE = 0,
    NSTCIS_SELECTED = 1,
    NSTCIS_EXPANDED = 2,
    NSTCIS_BOLD = 4,
    NSTCIS_DISABLED = 8,
    NSTCIS_SELECTEDNOEXPAND = 16
};

typedef enum _NSTCROOTSTYLE {
    NSTCRS_VISIBLE = 0,
    NSTCRS_HIDDEN = 1,
    NSTCRS_EXPANDED = 2
};

typedef enum _NSTCSTYLE {
    NSTCS_HASEXPANDOS = 1,
    NSTCS_HASLINES = 2,
    NSTCS_SINGLECLICKEXPAND = 4,
    NSTCS_FULLROWSELECT = 8,
    NSTCS_SPRINGEXPAND = 16,
    NSTCS_HORIZONTALSCROLL = 32,
    NSTCS_ROOTHASEXPANDO = 64,
    NSTCS_SHOWSELECTIONALWAYS = 128,
    NSTCS_NOINFOTIP = 512,
    NSTCS_EVENHEIGHT = 1024,
    NSTCS_NOREPLACEOPEN = 2048,
    NSTCS_DISABLEDRAGDROP = 4096,
    NSTCS_NOORDERSTREAM = 8192,
    NSTCS_RICHTOOLTIP = 16384,
    NSTCS_BORDER = 0x8000,
    NSTCS_NOEDITLABELS = 0x10000,
    NSTCS_TABSTOP = 0x20000,
    NSTCS_FAVORITESMODE = 0x80000,
    NSTCS_AUTOHSCROLL = 0x100000,
    NSTCS_FADEINOUTEXPANDOS = 0x200000,
    NSTCS_EMPTYTEXT = 0x400000,
    NSTCS_CHECKBOXES = 0x800000,
    NSTCS_PARTIALCHECKBOXES = 0x1000000,
    NSTCS_EXCLUSIONCHECKBOXES = 0x2000000,
    NSTCS_DIMMEDCHECKBOXES = 0x4000000,
    NSTCS_NOINDENTCHECKS = 0x8000000,
    NSTCS_ALLOWJUNCTIONS = 0x10000000,
    NSTCS_SHOWTABSBUTTON = 0x20000000,
    NSTCS_SHOWDELETEBUTTON = 0x40000000,
    NSTCS_SHOWREFRESHBUTTON = -2147483648
};

typedef enum _NT_PRODUCT_TYPE {
    NtProductWinNt = 1,
    NtProductLanManNt = 2,
    NtProductServer = 3
};

typedef enum _OBJECT_INFORMATION_CLASS {
    ObjectBasicInformation = 0,
    ObjectNameInformation = 1,
    ObjectTypeInformation = 2,
    ObjectTypesInformation = 3,
    ObjectHandleFlagInformation = 4,
    ObjectSessionInformation = 5,
    ObjectSessionObjectInformation = 6,
    MaxObjectInfoClass = 7
};

typedef enum _OPPROGDLGF {
    OPPROGDLG_DEFAULT = 0,
    OPPROGDLG_ENABLEPAUSE = 128,
    OPPROGDLG_ALLOWUNDO = 256,
    OPPROGDLG_DONTDISPLAYSOURCEPATH = 512,
    OPPROGDLG_DONTDISPLAYDESTPATH = 1024,
    OPPROGDLG_NOMULTIDAYESTIMATES = 2048,
    OPPROGDLG_DONTDISPLAYLOCATIONS = 4096
};

typedef enum _OS_DEPLOYEMENT_STATE_VALUES {
    OS_DEPLOYMENT_STANDARD = 1,
    OS_DEPLOYMENT_COMPACT = 2
};

typedef enum _PARTITION_INFORMATION_CLASS {
    SystemMemoryPartitionInformation = 0,
    SystemMemoryPartitionMoveMemory = 1,
    SystemMemoryPartitionAddPagefile = 2,
    SystemMemoryPartitionCombineMemory = 3,
    SystemMemoryPartitionInitialAddMemory = 4,
    SystemMemoryPartitionGetMemoryEvents = 5,
    SystemMemoryPartitionMax = 6
};

typedef enum _PARTITION_STYLE {
    PARTITION_STYLE_MBR = 0,
    PARTITION_STYLE_GPT = 1,
    PARTITION_STYLE_RAW = 2
};

typedef enum _PDMODE {
    PDM_DEFAULT = 0,
    PDM_RUN = 1,
    PDM_PREFLIGHT = 2,
    PDM_UNDOING = 4,
    PDM_ERRORSBLOCKING = 8,
    PDM_INDETERMINATE = 16
};

typedef enum _PERFINFO_KERNELMEMORY_USAGE_TYPE {
    PerfInfoMemUsagePfnMetadata = 0,
    PerfInfoMemUsageMax = 1
};

typedef enum _PERFINFO_MM_STAT {
    PerfInfoMMStatNotUsed = 0,
    PerfInfoMMStatAggregatePageCombine = 1,
    PerfInfoMMStatIterationPageCombine = 2,
    PerfInfoMMStatMax = 3
};

typedef enum _PERSIST_SPROPSTORE_FLAGS {
    FPSPS_DEFAULT = 0,
    FPSPS_READONLY = 1,
    FPSPS_TREAT_NEW_VALUES_AS_DIRTY = 2
};

typedef enum _PKU2U_LOGON_SUBMIT_TYPE {
    Pku2uCertificateS4ULogon = 14
};

typedef enum _PLAY_SOUND_FLAGS {
    PLAY_SOUND_SYSTEM = 1,
    PLAY_SOUND_RETRY = 2
};

typedef enum _PLUGPLAY_CONTROL_CLASS {
    PlugPlayControlEnumerateDevice = 0,
    PlugPlayControlRegisterNewDevice = 1,
    PlugPlayControlDeregisterDevice = 2,
    PlugPlayControlInitializeDevice = 3,
    PlugPlayControlStartDevice = 4,
    PlugPlayControlUnlockDevice = 5,
    PlugPlayControlQueryAndRemoveDevice = 6,
    PlugPlayControlUserResponse = 7,
    PlugPlayControlGenerateLegacyDevice = 8,
    PlugPlayControlGetInterfaceDeviceList = 9,
    PlugPlayControlProperty = 10,
    PlugPlayControlDeviceClassAssociation = 11,
    PlugPlayControlGetRelatedDevice = 12,
    PlugPlayControlGetInterfaceDeviceAlias = 13,
    PlugPlayControlDeviceStatus = 14,
    PlugPlayControlGetDeviceDepth = 15,
    PlugPlayControlQueryDeviceRelations = 16,
    PlugPlayControlTargetDeviceRelation = 17,
    PlugPlayControlQueryConflictList = 18,
    PlugPlayControlRetrieveDock = 19,
    PlugPlayControlResetDevice = 20,
    PlugPlayControlHaltDevice = 21,
    PlugPlayControlGetBlockedDriverList = 22,
    PlugPlayControlGetDeviceInterfaceEnabled = 23,
    MaxPlugPlayControl = 24
};

typedef enum _PLUGPLAY_EVENT_CATEGORY {
    HardwareProfileChangeEvent = 0,
    TargetDeviceChangeEvent = 1,
    DeviceClassChangeEvent = 2,
    CustomDeviceEvent = 3,
    DeviceInstallEvent = 4,
    DeviceArrivalEvent = 5,
    VetoEvent = 6,
    BlockedDriverEvent = 7,
    InvalidIDEvent = 8,
    DevicePropertyChangeEvent = 9,
    DeviceInstanceRemovalEvent = 10,
    DeviceInstanceStartedEvent = 11,
    MaxPlugEventCategory = 12
};

typedef enum _PNP_QUERY_RELATION {
    PnpQueryEjectRelations = 0,
    PnpQueryRemovalRelations = 1,
    PnpQueryPowerRelations = 2,
    PnpQueryBusRelations = 3,
    PnpQueryTransportRelations = 4,
    MaxPnpQueryRelations = 5
};

typedef enum _PNP_VETO_TYPE {
    PNP_VetoTypeUnknown = 0,
    PNP_VetoLegacyDevice = 1,
    PNP_VetoPendingClose = 2,
    PNP_VetoWindowsApp = 3,
    PNP_VetoWindowsService = 4,
    PNP_VetoOutstandingOpen = 5,
    PNP_VetoDevice = 6,
    PNP_VetoDriver = 7,
    PNP_VetoIllegalDeviceRequest = 8,
    PNP_VetoInsufficientPower = 9,
    PNP_VetoNonDisableable = 10,
    PNP_VetoLegacyDriver = 11,
    PNP_VetoInsufficientRights = 12
};

typedef enum _POLICY_AUDIT_EVENT_TYPE {
    AuditCategorySystem = 0,
    AuditCategoryLogon = 1,
    AuditCategoryObjectAccess = 2,
    AuditCategoryPrivilegeUse = 3,
    AuditCategoryDetailedTracking = 4,
    AuditCategoryPolicyChange = 5,
    AuditCategoryAccountManagement = 6,
    AuditCategoryDirectoryServiceAccess = 7,
    AuditCategoryAccountLogon = 8
};

typedef enum _POLICY_DOMAIN_INFORMATION_CLASS {
    PolicyDomainEfsInformation = 2,
    PolicyDomainKerberosTicketInformation = 3
};

typedef enum _POLICY_INFORMATION_CLASS {
    PolicyAuditLogInformation = 1,
    PolicyAuditEventsInformation = 2,
    PolicyPrimaryDomainInformation = 3,
    PolicyPdAccountInformation = 4,
    PolicyAccountDomainInformation = 5,
    PolicyLsaServerRoleInformation = 6,
    PolicyReplicaSourceInformation = 7,
    PolicyDefaultQuotaInformation = 8,
    PolicyModificationInformation = 9,
    PolicyAuditFullSetInformation = 10,
    PolicyAuditFullQueryInformation = 11,
    PolicyDnsDomainInformation = 12,
    PolicyDnsDomainInformationInt = 13,
    PolicyLocalAccountDomainInformation = 14,
    PolicyMachineAccountInformation = 15,
    PolicyLastEntry = 16
};

typedef enum _POLICY_LSA_SERVER_ROLE {
    PolicyServerRoleBackup = 2,
    PolicyServerRolePrimary = 3
};

typedef enum _POLICY_NOTIFICATION_INFORMATION_CLASS {
    PolicyNotifyAuditEventsInformation = 1,
    PolicyNotifyAccountDomainInformation = 2,
    PolicyNotifyServerRoleInformation = 3,
    PolicyNotifyDnsDomainInformation = 4,
    PolicyNotifyDomainEfsInformation = 5,
    PolicyNotifyDomainKerberosTicketInformation = 6,
    PolicyNotifyMachineAccountPasswordInformation = 7,
    PolicyNotifyGlobalSaclInformation = 8,
    PolicyNotifyMax = 9
};

typedef enum _PORT_INFORMATION_CLASS {
    PortBasicInformation = 0,
    PortDumpInformation = 1
};

typedef enum _POWER_MONITOR_REQUEST_TYPE {
    MonitorRequestTypeOff = 0,
    MonitorRequestTypeOnAndPresent = 1,
    MonitorRequestTypeToggleOn = 2
};

typedef enum _POWER_PLATFORM_ROLE {
    PlatformRoleUnspecified = 0,
    PlatformRoleDesktop = 1,
    PlatformRoleMobile = 2,
    PlatformRoleWorkstation = 3,
    PlatformRoleEnterpriseServer = 4,
    PlatformRoleSOHOServer = 5,
    PlatformRoleAppliancePC = 6,
    PlatformRolePerformanceServer = 7,
    PlatformRoleSlate = 8,
    PlatformRoleMaximum = 9
};

typedef enum _POWER_REQUEST_TYPE {
    PowerRequestDisplayRequired = 0,
    PowerRequestSystemRequired = 1,
    PowerRequestAwayModeRequired = 2,
    PowerRequestExecutionRequired = 3
};

typedef enum _POWER_STATE_TYPE {
    SystemPowerState = 0,
    DevicePowerState = 1
};

typedef enum _PO_CS_DEVICE_NOTIFICATION_TYPE {
    PoCsDeviceNotificationStorage = 0,
    PoCsDeviceNotificationWiFi = 1,
    PoCsDeviceNotificationMbn = 2,
    PoCsDeviceNotificationAudio = 3,
    PoCsDeviceNotificationEthernet = 4,
    PoCsDeviceNotificationMaximum = 5
};

typedef enum _PO_HIBER_FORCE_DISABLE_REASON {
    PoHiberForceDisableReasonPolicy = 0,
    PoHiberForceDisableReasonGuardedHost = 1,
    PoHiberForceDisableReasonMax = 2
};

typedef enum _PO_SLEEP_DISABLE_REASON {
    PoSleepDisableReasonVideo = 0,
    PoSleepDisableReasonHypervisor = 1,
    PoSleepDisableReasonVhdBoot = 2,
    PoSleepDisableReasonPortableWorkspace = 3,
    PoSleepDisableReasonPolicy = 4,
    PoSleepDisableReasonGuardedHost = 5,
    PoSleepDisableReasonMax = 6
};

typedef enum _PRINTER_OPTION_FLAGS {
    PRINTER_OPTION_NO_CACHE = 1,
    PRINTER_OPTION_CACHE = 2,
    PRINTER_OPTION_CLIENT_CHANGE = 4,
    PRINTER_OPTION_NO_CLIENT_DATA = 8
};

typedef enum _PRIORITY_HINT {
    IoPriorityHintVeryLow = 0,
    IoPriorityHintLow = 1,
    IoPriorityHintNormal = 2,
    MaximumIoPriorityHintType = 3
};

typedef enum _PROCESSINFOCLASS {
    ProcessBasicInformation = 0,
    ProcessQuotaLimits = 1,
    ProcessIoCounters = 2,
    ProcessVmCounters = 3,
    ProcessTimes = 4,
    ProcessBasePriority = 5,
    ProcessRaisePriority = 6,
    ProcessDebugPort = 7,
    ProcessExceptionPort = 8,
    ProcessAccessToken = 9,
    ProcessLdtInformation = 10,
    ProcessLdtSize = 11,
    ProcessDefaultHardErrorMode = 12,
    ProcessIoPortHandlers = 13,
    ProcessPooledUsageAndLimits = 14,
    ProcessWorkingSetWatch = 15,
    ProcessUserModeIOPL = 16,
    ProcessEnableAlignmentFaultFixup = 17,
    ProcessPriorityClass = 18,
    ProcessWx86Information = 19,
    ProcessHandleCount = 20,
    ProcessAffinityMask = 21,
    ProcessPriorityBoost = 22,
    ProcessDeviceMap = 23,
    ProcessSessionInformation = 24,
    ProcessForegroundInformation = 25,
    ProcessWow64Information = 26,
    ProcessImageFileName = 27,
    ProcessLUIDDeviceMapsEnabled = 28,
    ProcessBreakOnTermination = 29,
    ProcessDebugObjectHandle = 30,
    ProcessDebugFlags = 31,
    ProcessHandleTracing = 32,
    ProcessIoPriority = 33,
    ProcessExecuteFlags = 34,
    ProcessTlsInformation = 35,
    ProcessCookie = 36,
    ProcessImageInformation = 37,
    ProcessCycleTime = 38,
    ProcessPagePriority = 39,
    ProcessInstrumentationCallback = 40,
    ProcessThreadStackAllocation = 41,
    ProcessWorkingSetWatchEx = 42,
    ProcessImageFileNameWin32 = 43,
    ProcessImageFileMapping = 44,
    ProcessAffinityUpdateMode = 45,
    ProcessMemoryAllocationMode = 46,
    ProcessGroupInformation = 47,
    ProcessTokenVirtualizationEnabled = 48,
    ProcessOwnerInformation = 49,
    ProcessWindowInformation = 50,
    ProcessHandleInformation = 51,
    ProcessMitigationPolicy = 52,
    ProcessDynamicFunctionTableInformation = 53,
    ProcessHandleCheckingMode = 54,
    ProcessKeepAliveCount = 55,
    ProcessRevokeFileHandles = 56,
    ProcessWorkingSetControl = 57,
    ProcessHandleTable = 58,
    ProcessCheckStackExtentsMode = 59,
    ProcessCommandLineInformation = 60,
    ProcessProtectionInformation = 61,
    ProcessMemoryExhaustion = 62,
    ProcessFaultInformation = 63,
    ProcessTelemetryIdInformation = 64,
    ProcessCommitReleaseInformation = 65,
    ProcessDefaultCpuSetsInformation = 66,
    ProcessAllowedCpuSetsInformation = 67,
    ProcessReserved1Information = 66,
    ProcessReserved2Information = 67,
    ProcessSubsystemProcess = 68,
    ProcessJobMemoryInformation = 69,
    ProcessInPrivate = 70,
    ProcessRaiseUMExceptionOnInvalidHandleClose = 71,
    ProcessIumChallengeResponse = 72,
    ProcessChildProcessInformation = 73,
    ProcessHighGraphicsPriorityInformation = 74,
    ProcessSubsystemInformation = 75,
    ProcessEnergyValues = 76,
    ProcessPowerThrottlingState = 77,
    ProcessReserved3Information = 78,
    ProcessWin32kSyscallFilterInformation = 79,
    ProcessDisableSystemAllowedCpuSets = 80,
    ProcessWakeInformation = 81,
    ProcessEnergyTrackingState = 82,
    ProcessManageWritesToExecutableMemory = 83,
    ProcessCaptureTrustletLiveDump = 84,
    ProcessTelemetryCoverage = 85,
    ProcessEnclaveInformation = 86,
    ProcessEnableReadWriteVmLogging = 87,
    ProcessUptimeInformation = 88,
    ProcessImageSection = 89,
    ProcessDebugAuthInformation = 90,
    ProcessSystemResourceManagement = 91,
    ProcessSequenceNumber = 92,
    ProcessLoaderDetour = 93,
    ProcessSecurityDomainInformation = 94,
    ProcessCombineSecurityDomainsInformation = 95,
    ProcessEnableLogging = 96,
    ProcessLeapSecondInformation = 97,
    MaxProcessInfoClass = 98
};

typedef enum _PROCESSOR_CACHE_TYPE {
    CacheUnified = 0,
    CacheInstruction = 1,
    CacheData = 2,
    CacheTrace = 3
};

typedef enum _PROCESS_ACTIVITY_TYPE {
    ProcessActivityTypeAudio = 0,
    ProcessActivityTypeMax = 1
};

typedef enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM {
    PsEnergyComponentTypeCpu = 0,
    PsEnergyComponentTypeStorage = 1,
    PsEnergyComponentTypeNetwork = 2,
    PsEnergyComponentTypeMBB = 3,
    PsEnergyComponentTypeForegroundTime = 4,
    PsEnergyComponentTypeDesktopVisibleTime = 5,
    PsEnergyComponentTypeWindowResource = 6,
    PsEnergyComponentTypeCompositorResource = 7,
    PsEnergyComponentTypeTrackingState = 8,
    PsEnergyComponentTypeInput = 9,
    PsEnergyComponentTypeAudioIn = 10,
    PsEnergyComponentTypeAudioOut = 11,
    PsEnergyComponentTypeDisplayRequired = 12,
    PsEnergyComponentTypeKeyboardInput = 13,
    PsEnergyComponentTypeMouseInput = 14,
    PsEnergyComponentTypeMax = 15
};

typedef enum _PROCESS_INFORMATION_CLASS {
    ProcessMemoryPriority = 0,
    ProcessMemoryExhaustionInfo = 1,
    ProcessAppMemoryInfo = 2,
    ProcessInPrivateInfo = 3,
    ProcessPowerThrottling = 4,
    ProcessReservedValue1 = 5,
    ProcessTelemetryCoverageInfo = 6,
    ProcessProtectionLevelInfo = 7,
    ProcessLeapSecondInfo = 8,
    ProcessInformationClassMax = 9
};

typedef enum _PROCESS_MEMORY_EXHAUSTION_TYPE {
    PMETypeFailFastOnCommitFailure = 0,
    PMETypeMax = 1
};

typedef enum _PROCESS_MITIGATION_POLICY {
    ProcessDEPPolicy = 0,
    ProcessASLRPolicy = 1,
    ProcessDynamicCodePolicy = 2,
    ProcessStrictHandleCheckPolicy = 3,
    ProcessSystemCallDisablePolicy = 4,
    ProcessMitigationOptionsMask = 5,
    ProcessExtensionPointDisablePolicy = 6,
    ProcessControlFlowGuardPolicy = 7,
    ProcessSignaturePolicy = 8,
    ProcessFontDisablePolicy = 9,
    ProcessImageLoadPolicy = 10,
    ProcessSystemCallFilterPolicy = 11,
    ProcessPayloadRestrictionPolicy = 12,
    ProcessChildProcessPolicy = 13,
    ProcessSideChannelIsolationPolicy = 14,
    MaxProcessMitigationPolicy = 15
};

typedef enum _PROCESS_TLS_INFORMATION_TYPE {
    ProcessTlsReplaceIndex = 0,
    ProcessTlsReplaceVector = 1,
    MaxProcessTlsOperation = 2
};

typedef enum _PROCESS_WORKING_SET_OPERATION {
    ProcessWorkingSetSwap = 0,
    ProcessWorkingSetEmpty = 1,
    ProcessWorkingSetOperationMax = 2
};

typedef enum _PROC_THREAD_ATTRIBUTE_NUM {
    ProcThreadAttributeParentProcess = 0,
    ProcThreadAttributeHandleList = 2,
    ProcThreadAttributeGroupAffinity = 3,
    ProcThreadAttributePreferredNode = 4,
    ProcThreadAttributeIdealProcessor = 5,
    ProcThreadAttributeUmsThread = 6,
    ProcThreadAttributeMitigationPolicy = 7,
    ProcThreadAttributeSecurityCapabilities = 9,
    ProcThreadAttributeProtectionLevel = 11,
    ProcThreadAttributeJobList = 13,
    ProcThreadAttributeChildProcessPolicy = 14,
    ProcThreadAttributeAllApplicationPackagesPolicy = 15,
    ProcThreadAttributeWin32kFilter = 16,
    ProcThreadAttributeSafeOpenPromptOriginClaim = 17,
    ProcThreadAttributeDesktopAppPolicy = 18,
    ProcThreadAttributePseudoConsole = 22
};

typedef enum _PROPERTYUI_FLAGS {
    PUIF_DEFAULT = 0,
    PUIF_RIGHTALIGN = 1,
    PUIF_NOLABELININFOTIP = 2
};

typedef enum _PROPERTYUI_FORMAT_FLAGS {
    PUIFFDF_DEFAULT = 0,
    PUIFFDF_RIGHTTOLEFT = 1,
    PUIFFDF_SHORTFORMAT = 2,
    PUIFFDF_NOTIME = 4,
    PUIFFDF_FRIENDLYDATE = 8
};

typedef enum _PROPERTYUI_NAME_FLAGS {
    PUIFNF_DEFAULT = 0,
    PUIFNF_MNEMONIC = 1
};

typedef enum _PS_ATTRIBUTE_NUM {
    PsAttributeParentProcess = 0,
    PsAttributeDebugObject = 1,
    PsAttributeToken = 2,
    PsAttributeClientId = 3,
    PsAttributeTebAddress = 4,
    PsAttributeImageName = 5,
    PsAttributeImageInfo = 6,
    PsAttributeMemoryReserve = 7,
    PsAttributePriorityClass = 8,
    PsAttributeErrorMode = 9,
    PsAttributeStdHandleInfo = 10,
    PsAttributeHandleList = 11,
    PsAttributeGroupAffinity = 12,
    PsAttributePreferredNode = 13,
    PsAttributeIdealProcessor = 14,
    PsAttributeUmsThread = 15,
    PsAttributeMitigationOptions = 16,
    PsAttributeProtectionLevel = 17,
    PsAttributeSecureProcess = 18,
    PsAttributeJobList = 19,
    PsAttributeChildProcessPolicy = 20,
    PsAttributeAllApplicationPackagesPolicy = 21,
    PsAttributeWin32kFilter = 22,
    PsAttributeSafeOpenPromptOriginClaim = 23,
    PsAttributeBnoIsolation = 24,
    PsAttributeDesktopAppPolicy = 25,
    PsAttributeChpe = 26,
    PsAttributeMax = 27
};

typedef enum _PS_MITIGATION_OPTION {
    PS_MITIGATION_OPTION_NX = 0,
    PS_MITIGATION_OPTION_SEHOP = 1,
    PS_MITIGATION_OPTION_FORCE_RELOCATE_IMAGES = 2,
    PS_MITIGATION_OPTION_HEAP_TERMINATE = 3,
    PS_MITIGATION_OPTION_BOTTOM_UP_ASLR = 4,
    PS_MITIGATION_OPTION_HIGH_ENTROPY_ASLR = 5,
    PS_MITIGATION_OPTION_STRICT_HANDLE_CHECKS = 6,
    PS_MITIGATION_OPTION_WIN32K_SYSTEM_CALL_DISABLE = 7,
    PS_MITIGATION_OPTION_EXTENSION_POINT_DISABLE = 8,
    PS_MITIGATION_OPTION_PROHIBIT_DYNAMIC_CODE = 9,
    PS_MITIGATION_OPTION_CONTROL_FLOW_GUARD = 10,
    PS_MITIGATION_OPTION_BLOCK_NON_MICROSOFT_BINARIES = 11,
    PS_MITIGATION_OPTION_FONT_DISABLE = 12,
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_REMOTE = 13,
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_LOW_LABEL = 14,
    PS_MITIGATION_OPTION_IMAGE_LOAD_PREFER_SYSTEM32 = 15,
    PS_MITIGATION_OPTION_RETURN_FLOW_GUARD = 16,
    PS_MITIGATION_OPTION_LOADER_INTEGRITY_CONTINUITY = 17,
    PS_MITIGATION_OPTION_STRICT_CONTROL_FLOW_GUARD = 18,
    PS_MITIGATION_OPTION_RESTRICT_SET_THREAD_CONTEXT = 19,
    PS_MITIGATION_OPTION_ROP_STACKPIVOT = 20,
    PS_MITIGATION_OPTION_ROP_CALLER_CHECK = 21,
    PS_MITIGATION_OPTION_ROP_SIMEXEC = 22,
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER = 23,
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER_PLUS = 24,
    PS_MITIGATION_OPTION_RESTRICT_CHILD_PROCESS_CREATION = 25,
    PS_MITIGATION_OPTION_IMPORT_ADDRESS_FILTER = 26,
    PS_MITIGATION_OPTION_MODULE_TAMPERING_PROTECTION = 27,
    PS_MITIGATION_OPTION_RESTRICT_INDIRECT_BRANCH_PREDICTION = 28,
    PS_MITIGATION_OPTION_SPECULATIVE_STORE_BYPASS_DISABLE = 29,
    PS_MITIGATION_OPTION_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY = 30,
    PS_MITIGATION_OPTION_CET_SHADOW_STACKS = 31
};

typedef enum _PS_PROTECTED_SIGNER {
    PsProtectedSignerNone = 0,
    PsProtectedSignerAuthenticode = 1,
    PsProtectedSignerCodeGen = 2,
    PsProtectedSignerAntimalware = 3,
    PsProtectedSignerLsa = 4,
    PsProtectedSignerWindows = 5,
    PsProtectedSignerWinTcb = 6,
    PsProtectedSignerWinSystem = 7,
    PsProtectedSignerApp = 8,
    PsProtectedSignerMax = 9
};

typedef enum _PS_PROTECTED_TYPE {
    PsProtectedTypeNone = 0,
    PsProtectedTypeProtectedLight = 1,
    PsProtectedTypeProtected = 2,
    PsProtectedTypeMax = 3
};

typedef enum _PS_STD_HANDLE_STATE {
    PsNeverDuplicate = 0,
    PsRequestDuplicate = 1,
    PsAlwaysDuplicate = 2,
    PsMaxStdHandleStates = 3
};

typedef enum _PS_WAKE_REASON {
    PsWakeReasonUser = 0,
    PsWakeReasonExecutionRequired = 1,
    PsWakeReasonKernel = 2,
    PsWakeReasonInstrumentation = 3,
    PsWakeReasonPreserveProcess = 4,
    PsWakeReasonActivityReference = 5,
    PsWakeReasonWorkOnBehalf = 6,
    PsMaxWakeReasons = 7
};

typedef enum _QUERY_FILE_LAYOUT_FILTER_TYPE {
    QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0,
    QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 1,
    QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 2,
    QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID = 3,
    QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 4
};

typedef enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS {
    ReadDirectoryNotifyInformation = 1,
    ReadDirectoryNotifyExtendedInformation = 2
};

typedef enum _RECEIVEFLOWCONTROLCLASS {
    ReceiveFlowControl_None = 0,
    ReceiveFlowControl_RTS = 1,
    ReceiveFlowControl_DTR = 2
};

typedef enum _REFS_SMR_VOLUME_GC_ACTION {
    SmrGcActionStart = 1,
    SmrGcActionStartFullSpeed = 2,
    SmrGcActionPause = 3,
    SmrGcActionStop = 4
};

typedef enum _REFS_SMR_VOLUME_GC_METHOD {
    SmrGcMethodCompaction = 1,
    SmrGcMethodCompression = 2,
    SmrGcMethodRotation = 3
};

typedef enum _REFS_SMR_VOLUME_GC_STATE {
    SmrGcStateInactive = 0,
    SmrGcStatePaused = 1,
    SmrGcStateActive = 2,
    SmrGcStateActiveFullSpeed = 3
};

typedef enum _REG_ACTION {
    KeyAdded = 0,
    KeyRemoved = 1,
    KeyModified = 2
};

typedef enum _RENDERHINT_NOTIFY {
    COMPDESK_NOTIFY_APIBITMAP = 1,
    COMPDESK_NOTIFY_LAST_AVAILABLE_API = 0xffff,
    COMPDESK_NOTIFY_DWM_STARTUP = 0x10000,
    COMPDESK_NOTIFY_DWM_SHUTDOWN = 0x10001,
    COMPDESK_NOTIFY_COMPOSE_DESKTOP_ENTER = 0x10002,
    COMPDESK_NOTIFY_COMPOSE_DESKTOP_LEAVE = 0x10003,
    COMPDESK_NOTIFY_LSURFACE_CREATED = 0x10004,
    COMPDESK_NOTIFY_LSURFACE_DESTROY = 0x10005,
    COMPDESK_NOTIFY_REDIR_SET_SURF = 0x10006,
    COMPDESK_NOTIFY_REDIR_REMOVE_SURF = 0x10007,
    COMPDESK_NOTIFY_COMPOSITORREF_TRACKING = 0x10008
};

typedef enum _REQUESTER_TYPE {
    KernelRequester = 0,
    UserProcessRequester = 1,
    UserSharedServiceRequester = 2
};

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS {
    ResourceManagerBasicInformation = 0,
    ResourceManagerCompletionInformation = 1
};

typedef enum _RPC_ASYNC_EVENT {
    RpcCallComplete = 0,
    RpcSendComplete = 1,
    RpcReceiveComplete = 2,
    RpcClientDisconnect = 3,
    RpcClientCancel = 4
};

typedef enum _RPC_HTTP_REDIRECTOR_STAGE {
    RPCHTTP_RS_REDIRECT = 1,
    RPCHTTP_RS_ACCESS_1 = 2,
    RPCHTTP_RS_SESSION = 3,
    RPCHTTP_RS_ACCESS_2 = 4,
    RPCHTTP_RS_INTERFACE = 5
};

typedef enum _RPC_NOTIFICATIONS {
    RpcNotificationCallNone = 0,
    RpcNotificationClientDisconnect = 1,
    RpcNotificationCallCancel = 2
};

typedef enum _RPC_NOTIFICATION_TYPES {
    RpcNotificationTypeNone = 0,
    RpcNotificationTypeEvent = 1,
    RpcNotificationTypeApc = 2,
    RpcNotificationTypeIoc = 3,
    RpcNotificationTypeHwnd = 4,
    RpcNotificationTypeCallback = 5
};

typedef enum _RTL_GENERIC_COMPARE_RESULTS {
    GenericLessThan = 0,
    GenericGreaterThan = 1,
    GenericEqual = 2
};

typedef enum _RTL_IMAGE_MITIGATION_OPTION_STATE {
    RtlMitigationOptionStateNotConfigured = 0,
    RtlMitigationOptionStateOn = 1,
    RtlMitigationOptionStateOff = 2
};

typedef enum _RTL_MEMORY_TYPE {
    MemoryTypePaged = 0,
    MemoryTypeNonPaged = 1,
    MemoryTypeLargePage = 2,
    MemoryTypeHugePage = 3,
    MemoryTypeMax = 4
};

typedef enum _RTL_PATH_TYPE {
    RtlPathTypeUnknown = 0,
    RtlPathTypeUncAbsolute = 1,
    RtlPathTypeDriveAbsolute = 2,
    RtlPathTypeDriveRelative = 3,
    RtlPathTypeRooted = 4,
    RtlPathTypeRelative = 5,
    RtlPathTypeLocalDevice = 6,
    RtlPathTypeRootLocalDevice = 7
};

typedef enum _RTL_RESOURCE_CATEGORY {
    RtlResTypePhysicalMemoryTier = 0,
    RtlResTypeDiskSpaceTier = 1,
    RtlResTypeDiskSpeedTier = 2,
    RtlResTypeDiskWriteConstraintTier = 3,
    RtlResTypeMax = 4
};

typedef enum _RTL_RESOURCE_POLICY_FLAGS {
    RTL_RESOURCE_POLICY_FLAGS_NONE = 0
};

typedef enum _RTL_RXACT_OPERATION {
    RtlRXactOperationDelete = 1,
    RtlRXactOperationSetValue = 2,
    RtlRXactOperationDelAttribute = 3,
    RtlRXactOperationSetAttribute = 4
};

typedef enum _RTL_SPARSE_BITMAP_CTX_OPERATION {
    RtlSparseBitmapOperationClear = 0,
    RtlSparseBitmapOperationSet = 1,
    RtlSparseBitmapOperationAny = 2,
    RtlSparseBitmapOperationMax = 3
};

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL {
    BackTraceDatabaseCreate = 0,
    BackTraceDatabaseDelete = 1,
    BackTraceDatabaseFlush = 2,
    BackTraceDatabaseMaxControl = 3
};

typedef enum _RTL_UMS_SCHEDULER_REASON {
    UmsSchedulerStartup = 0,
    UmsSchedulerThreadBlocked = 1,
    UmsSchedulerThreadYield = 2
};

typedef enum _RTL_UMS_THREAD_INFO_CLASS {
    UmsThreadInvalidInfoClass = 0,
    UmsThreadUserContext = 1,
    UmsThreadPriority = 2,
    UmsThreadAffinity = 3,
    UmsThreadTeb = 4,
    UmsThreadIsSuspended = 5,
    UmsThreadIsTerminated = 6,
    UmsThreadMaxInfoClass = 7
};

typedef enum _SCM_PD_HEALTH_STATUS {
    ScmPhysicalDeviceHealth_Unknown = 0,
    ScmPhysicalDeviceHealth_Unhealthy = 1,
    ScmPhysicalDeviceHealth_Warning = 2,
    ScmPhysicalDeviceHealth_Healthy = 3,
    ScmPhysicalDeviceHealth_Max = 4
};

typedef enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS {
    ScmPhysicalDeviceReinit_Success = 0,
    ScmPhysicalDeviceReinit_RebootNeeded = 1,
    ScmPhysicalDeviceReinit_ColdBootNeeded = 2,
    ScmPhysicalDeviceReinit_Max = 3
};

typedef enum _SCM_PD_OPERATIONAL_STATUS {
    ScmPhysicalDeviceOpStatus_Unknown = 0,
    ScmPhysicalDeviceOpStatus_Ok = 1,
    ScmPhysicalDeviceOpStatus_PredictingFailure = 2,
    ScmPhysicalDeviceOpStatus_InService = 3,
    ScmPhysicalDeviceOpStatus_HardwareError = 4,
    ScmPhysicalDeviceOpStatus_NotUsable = 5,
    ScmPhysicalDeviceOpStatus_TransientError = 6,
    ScmPhysicalDeviceOpStatus_Missing = 7,
    ScmPhysicalDeviceOpStatus_Max = 8
};

typedef enum _SCM_PD_OPERATIONAL_STATUS_REASON {
    ScmPhysicalDeviceOpReason_Unknown = 0,
    ScmPhysicalDeviceOpReason_Media = 1,
    ScmPhysicalDeviceOpReason_ThresholdExceeded = 2,
    ScmPhysicalDeviceOpReason_LostData = 3,
    ScmPhysicalDeviceOpReason_EnergySource = 4,
    ScmPhysicalDeviceOpReason_Configuration = 5,
    ScmPhysicalDeviceOpReason_DeviceController = 6,
    ScmPhysicalDeviceOpReason_MediaController = 7,
    ScmPhysicalDeviceOpReason_Component = 8,
    ScmPhysicalDeviceOpReason_BackgroundOperation = 9,
    ScmPhysicalDeviceOpReason_InvalidFirmware = 10,
    ScmPhysicalDeviceOpReason_HealthCheck = 11,
    ScmPhysicalDeviceOpReason_LostDataPersistence = 12,
    ScmPhysicalDeviceOpReason_DisabledByPlatform = 13,
    ScmPhysicalDeviceOpReason_PermanentError = 14,
    ScmPhysicalDeviceOpReason_LostWritePersistence = 15,
    ScmPhysicalDeviceOpReason_FatalError = 16,
    ScmPhysicalDeviceOpReason_DataPersistenceLossImminent = 17,
    ScmPhysicalDeviceOpReason_WritePersistenceLossImminent = 18,
    ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock = 19,
    ScmPhysicalDeviceOpReason_PerformanceDegradation = 20,
    ScmPhysicalDeviceOpReason_ExcessiveTemperature = 21,
    ScmPhysicalDeviceOpReason_Max = 22
};

typedef enum _SCM_PD_PROPERTY_ID {
    ScmPhysicalDeviceProperty_DeviceInfo = 0,
    ScmPhysicalDeviceProperty_ManagementStatus = 1,
    ScmPhysicalDeviceProperty_FirmwareInfo = 2,
    ScmPhysicalDeviceProperty_LocationString = 3,
    ScmPhysicalDeviceProperty_DeviceSpecificInfo = 4,
    ScmPhysicalDeviceProperty_DeviceHandle = 5,
    ScmPhysicalDeviceProperty_Max = 6
};

typedef enum _SCM_PD_QUERY_TYPE {
    ScmPhysicalDeviceQuery_Descriptor = 0,
    ScmPhysicalDeviceQuery_IsSupported = 1,
    ScmPhysicalDeviceQuery_Max = 2
};

typedef enum _SCM_REGION_FLAG {
    ScmRegionFlagNone = 0,
    ScmRegionFlagLabel = 1
};

typedef enum _SC_ACTION_TYPE {
    SC_ACTION_NONE = 0,
    SC_ACTION_RESTART = 1,
    SC_ACTION_REBOOT = 2,
    SC_ACTION_RUN_COMMAND = 3,
    SC_ACTION_OWN_RESTART = 4
};

typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO = 0
};

typedef enum _SC_EVENT_TYPE {
    SC_EVENT_DATABASE_CHANGE = 0,
    SC_EVENT_PROPERTY_CHANGE = 1,
    SC_EVENT_STATUS_CHANGE = 2
};

typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO = 0
};

typedef enum _SDCLASS {
    SdNone = 0,
    SdConsole = 1,
    SdNetwork = 2,
    SdAsync = 3,
    SdOemTransport = 4,
    SdISDN = 5,
    SdX25 = 6,
    SdModem = 7,
    SdOemConnect = 8,
    SdFrame = 9,
    SdReliable = 10,
    SdEncrypt = 11,
    SdCompress = 12,
    SdTelnet = 13,
    SdOemFilter = 14,
    SdNasi = 15,
    SdTapi = 16,
    SdReserved1 = 17,
    SdReserved2 = 18,
    SdReserved3 = 19,
    SdClass_Maximum = 20
};

typedef enum _SECTION_INFORMATION_CLASS {
    SectionBasicInformation = 0,
    SectionImageInformation = 1,
    SectionRelocationInformation = 2,
    SectionOriginalBaseInformation = 3,
    SectionInternalImageInformation = 4,
    MaxSectionInfoClass = 5
};

typedef enum _SECTION_INHERIT {
    ViewShare = 1,
    ViewUnmap = 2
};

typedef enum _SECURE_SETTING_VALUE_TYPE {
    SecureSettingValueTypeBoolean = 0,
    SecureSettingValueTypeUlong = 1,
    SecureSettingValueTypeBinary = 2,
    SecureSettingValueTypeString = 3
};

typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous = 0,
    SecurityIdentification = 1,
    SecurityImpersonation = 2,
    SecurityDelegation = 3
};

typedef enum _SECURITY_LOGON_TYPE {
    UndefinedLogonType = 0,
    Interactive = 2,
    Network = 3,
    Batch = 4,
    Service = 5,
    Proxy = 6,
    Unlock = 7,
    NetworkCleartext = 8,
    NewCredentials = 9,
    RemoteInteractive = 10,
    CachedInteractive = 11,
    CachedRemoteInteractive = 12,
    CachedUnlock = 13
};

typedef enum _SEMAPHORE_INFORMATION_CLASS {
    SemaphoreBasicInformation = 0
};

typedef enum _SERVERSILO_STATE {
    SERVERSILO_INITING = 0,
    SERVERSILO_STARTED = 1,
    SERVERSILO_SHUTTING_DOWN = 2,
    SERVERSILO_TERMINATING = 3,
    SERVERSILO_TERMINATED = 4
};

typedef enum _SESSIONSOURCE {
    SessionSource_Any = 0,
    SessionSource_User = 1,
    SessionSource_Device = 2,
    SessionSource_Services = 3
};

typedef enum _SESSIONTYPE {
    SESSIONTYPE_UNKNOWN = 0,
    SESSIONTYPE_SERVICES = 1,
    SESSIONTYPE_LISTENER = 2,
    SESSIONTYPE_REGULARDESKTOP = 3,
    SESSIONTYPE_ALTERNATESHELL = 4,
    SESSIONTYPE_REMOTEAPP = 5,
    SESSIONTYPE_MEDIACENTEREXT = 6,
    SESSIONTYPE_CHILD = 7,
    SESSIONTYPE_WORKER = 8
};

typedef enum _SESSION_FILTER {
    SF_SERVICES_SESSION_POPUP = 0
};

typedef enum _SE_ADT_PARAMETER_TYPE {
    SeAdtParmTypeNone = 0,
    SeAdtParmTypeString = 1,
    SeAdtParmTypeFileSpec = 2,
    SeAdtParmTypeUlong = 3,
    SeAdtParmTypeSid = 4,
    SeAdtParmTypeLogonId = 5,
    SeAdtParmTypeNoLogonId = 6,
    SeAdtParmTypeAccessMask = 7,
    SeAdtParmTypePrivs = 8,
    SeAdtParmTypeObjectTypes = 9,
    SeAdtParmTypeHexUlong = 10,
    SeAdtParmTypePtr = 11,
    SeAdtParmTypeTime = 12,
    SeAdtParmTypeGuid = 13,
    SeAdtParmTypeLuid = 14,
    SeAdtParmTypeHexInt64 = 15,
    SeAdtParmTypeStringList = 16,
    SeAdtParmTypeSidList = 17,
    SeAdtParmTypeDuration = 18,
    SeAdtParmTypeUserAccountControl = 19,
    SeAdtParmTypeNoUac = 20,
    SeAdtParmTypeMessage = 21,
    SeAdtParmTypeDateTime = 22,
    SeAdtParmTypeSockAddr = 23,
    SeAdtParmTypeSD = 24,
    SeAdtParmTypeLogonHours = 25,
    SeAdtParmTypeLogonIdNoSid = 26,
    SeAdtParmTypeUlongNoConv = 27,
    SeAdtParmTypeSockAddrNoPort = 28,
    SeAdtParmTypeAccessReason = 29,
    SeAdtParmTypeStagingReason = 30,
    SeAdtParmTypeResourceAttribute = 31,
    SeAdtParmTypeClaims = 32,
    SeAdtParmTypeLogonIdAsSid = 33,
    SeAdtParmTypeMultiSzString = 34,
    SeAdtParmTypeLogonIdEx = 35
};

typedef enum _SE_AUDIT_OPERATION {
    AuditPrivilegeObject = 0,
    AuditPrivilegeService = 1,
    AuditAccessCheck = 2,
    AuditOpenObject = 3,
    AuditOpenObjectWithTransaction = 4,
    AuditCloseObject = 5,
    AuditDeleteObject = 6,
    AuditOpenObjectForDelete = 7,
    AuditOpenObjectForDeleteWithTransaction = 8,
    AuditCloseNonObject = 9,
    AuditOpenNonObject = 10,
    AuditObjectReference = 11,
    AuditHandleCreation = 12
};

typedef enum _SE_IMAGE_SIGNATURE_TYPE {
    SeImageSignatureNone = 0,
    SeImageSignatureEmbedded = 1,
    SeImageSignatureCache = 2,
    SeImageSignatureCatalogCached = 3,
    SeImageSignatureCatalogNotCached = 4,
    SeImageSignatureCatalogHint = 5,
    SeImageSignaturePackageCatalog = 6
};

typedef enum _SE_LEARNING_MODE_DATA_TYPE {
    SeLearningModeInvalidType = 0,
    SeLearningModeSettings = 1,
    SeLearningModeMax = 2
};

typedef enum _SE_VALIDATE_MAPPING_TYPE {
    SE_VALIDATE_MAPPING_HEADER_ONLY = 0,
    SE_VALIDATE_MAPPING_ENTIRE_IMAGE = 1,
    SE_VALIDATE_MAPPING_ENTIRE_IMAGE_CLEAN = 2
};

typedef enum _SHADOWCLASS {
    Shadow_Disable = 0,
    Shadow_EnableInputNotify = 1,
    Shadow_EnableInputNoNotify = 2,
    Shadow_EnableNoInputNotify = 3,
    Shadow_EnableNoInputNoNotify = 4
};

typedef enum _SHADOWSTATECLASS {
    State_NoShadow = 0,
    State_Shadowing = 1,
    State_Shadowed = 2
};

typedef enum _SHAKE_STATE {
    SS_NOPOINTS = 0,
    SS_BELOWTHRES = 1,
    SS_ABOVETHRES = 2,
    SS_WAITTIMEOUT = 3
};

typedef enum _SHARE_ITEM_TYPE {
    SIT_FILE = 0,
    SIT_FOLDER = 1,
    SIT_DRIVE = 2,
    SIT_LIBRARY = 3,
    SIT_UNSUPPORTED = 4
};

typedef enum _SHCONTF {
    SHCONTF_CHECKING_FOR_CHILDREN = 16,
    SHCONTF_FOLDERS = 32,
    SHCONTF_NONFOLDERS = 64,
    SHCONTF_INCLUDEHIDDEN = 128,
    SHCONTF_INIT_ON_FIRST_NEXT = 256,
    SHCONTF_NETPRINTERSRCH = 512,
    SHCONTF_SHAREABLE = 1024,
    SHCONTF_STORAGE = 2048,
    SHCONTF_NAVIGATION_ENUM = 4096,
    SHCONTF_FASTITEMS = 8192,
    SHCONTF_FLATLIST = 16384,
    SHCONTF_ENABLE_ASYNC = 0x8000,
    SHCONTF_INCLUDESUPERHIDDEN = 0x10000
};

typedef enum _SHELLKEY {
    SHELLKEY_HKCU_EXPLORER = 1,
    SHELLKEY_HKLM_EXPLORER = 2,
    SHELLKEY_HKCU_SHELL = 17,
    SHELLKEY_HKLM_SHELL = 18,
    SHELLKEY_HKCU_SHELLNOROAM = 33,
    SHELLKEY_HKCULM_MUICACHE = 20513,
    SHELLKEY_HKCU_FILEEXTS = 24577,
    SHELLKEY_HKCULS_SHELL = 0x1ffff
};

typedef enum _SHGDNF {
    SHGDN_NORMAL = 0,
    SHGDN_INFOLDER = 1,
    SHGDN_FOREDITING = 4096,
    SHGDN_FORADDRESSBAR = 16384,
    SHGDN_FORPARSING = 0x8000
};

typedef enum _SHRINK_VOLUME_REQUEST_TYPES {
    ShrinkPrepare = 1,
    ShrinkCommit = 2,
    ShrinkAbort = 3
};

typedef enum _SHUTDOWN_ACTION {
    ShutdownNoReboot = 0,
    ShutdownReboot = 1,
    ShutdownPowerOff = 2
};

typedef enum _SICHINTF {
    SICHINT_DISPLAY = 0,
    SICHINT_ALLFIELDS = -2147483648,
    SICHINT_CANONICAL = 0x10000000,
    SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL = 0x20000000
};

typedef enum _SID_NAME_USE {
    SidTypeUser = 1,
    SidTypeGroup = 2,
    SidTypeDomain = 3,
    SidTypeAlias = 4,
    SidTypeWellKnownGroup = 5,
    SidTypeDeletedAccount = 6,
    SidTypeInvalid = 7,
    SidTypeUnknown = 8,
    SidTypeComputer = 9,
    SidTypeLabel = 10,
    SidTypeLogonSession = 11
};

typedef enum _SIGDN {
    SIGDN_NORMALDISPLAY = 0,
    SIGDN_PARENTRELATIVEPARSING = -2147385343,
    SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
    SIGDN_PARENTRELATIVEEDITING = -2147282943,
    SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
    SIGDN_FILESYSPATH = -2147123200,
    SIGDN_URL = -2147057664,
    SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
    SIGDN_PARENTRELATIVE = -2146959359,
    SIGDN_PARENTRELATIVEFORUI = -2146877439
};

typedef enum _SIIGBF {
    SIIGBF_RESIZETOFIT = 0,
    SIIGBF_BIGGERSIZEOK = 1,
    SIIGBF_MEMORYONLY = 2,
    SIIGBF_ICONONLY = 4,
    SIIGBF_THUMBNAILONLY = 8,
    SIIGBF_INCACHEONLY = 16,
    SIIGBF_CROPTOSQUARE = 32,
    SIIGBF_WIDETHUMBNAILS = 64,
    SIIGBF_ICONBACKGROUND = 128,
    SIIGBF_SCALEUP = 256
};

typedef enum _SLICER_COMMAND {
    SlicerContextInitialize = 0,
    SlicerContextDeinitialize = 1,
    SlicerContextSetDestinationTextures = 2,
    SlicerContextBeginCapture = 3,
    SlicerContextEndCapture = 4,
    SlicerContextLast = 5
};

typedef enum _SPACTION {
    SPACTION_NONE = 0,
    SPACTION_MOVING = 1,
    SPACTION_COPYING = 2,
    SPACTION_RECYCLING = 3,
    SPACTION_APPLYINGATTRIBS = 4,
    SPACTION_DOWNLOADING = 5,
    SPACTION_SEARCHING_INTERNET = 6,
    SPACTION_CALCULATING = 7,
    SPACTION_UPLOADING = 8,
    SPACTION_SEARCHING_FILES = 9,
    SPACTION_DELETING = 10,
    SPACTION_RENAMING = 11,
    SPACTION_FORMATTING = 12,
    SPACTION_COPY_MOVING = 13
};

typedef enum _SPBEGINF {
    SPBEGINF_NORMAL = 0,
    SPBEGINF_AUTOTIME = 2,
    SPBEGINF_NOPROGRESSBAR = 16,
    SPBEGINF_MARQUEEPROGRESS = 32,
    SPBEGINF_NOCANCELBUTTON = 64
};

typedef enum _SPINITF {
    SPINITF_NORMAL = 0,
    SPINITF_MODAL = 1,
    SPINITF_NOMINIMIZE = 8
};

typedef enum _SPTEXT {
    SPTEXT_ACTIONDESCRIPTION = 1,
    SPTEXT_ACTIONDETAIL = 2
};

typedef enum _STATE_LOCATION_TYPE {
    LocationTypeRegistry = 0,
    LocationTypeFileSystem = 1,
    LocationTypeMaximum = 2
};

typedef enum _STORAGE_ASSOCIATION_TYPE {
    StorageIdAssocDevice = 0,
    StorageIdAssocPort = 1,
    StorageIdAssocTarget = 2
};

typedef enum _STORAGE_ATTRIBUTE_MGMT_ACTION {
    StorAttributeMgmt_ClearAttribute = 0,
    StorAttributeMgmt_SetAttribute = 1,
    StorAttributeMgmt_ResetAttribute = 2
};

typedef enum _STORAGE_BUS_TYPE {
    BusTypeUnknown = 0,
    BusTypeScsi = 1,
    BusTypeAtapi = 2,
    BusTypeAta = 3,
    BusType1394 = 4,
    BusTypeSsa = 5,
    BusTypeFibre = 6,
    BusTypeUsb = 7,
    BusTypeRAID = 8,
    BusTypeiScsi = 9,
    BusTypeSas = 10,
    BusTypeSata = 11,
    BusTypeSd = 12,
    BusTypeMmc = 13,
    BusTypeVirtual = 14,
    BusTypeFileBackedVirtual = 15,
    BusTypeSpaces = 16,
    BusTypeNvme = 17,
    BusTypeSCM = 18,
    BusTypeUfs = 19,
    BusTypeMax = 20,
    BusTypeMaxReserved = 127
};

typedef enum _STORAGE_COMPONENT_HEALTH_STATUS {
    HealthStatusUnknown = 0,
    HealthStatusNormal = 1,
    HealthStatusThrottled = 2,
    HealthStatusWarning = 3,
    HealthStatusDisabled = 4,
    HealthStatusFailed = 5
};

typedef enum _STORAGE_COUNTER_TYPE {
    StorageCounterTypeUnknown = 0,
    StorageCounterTypeTemperatureCelsius = 1,
    StorageCounterTypeTemperatureCelsiusMax = 2,
    StorageCounterTypeReadErrorsTotal = 3,
    StorageCounterTypeReadErrorsCorrected = 4,
    StorageCounterTypeReadErrorsUncorrected = 5,
    StorageCounterTypeWriteErrorsTotal = 6,
    StorageCounterTypeWriteErrorsCorrected = 7,
    StorageCounterTypeWriteErrorsUncorrected = 8,
    StorageCounterTypeManufactureDate = 9,
    StorageCounterTypeStartStopCycleCount = 10,
    StorageCounterTypeStartStopCycleCountMax = 11,
    StorageCounterTypeLoadUnloadCycleCount = 12,
    StorageCounterTypeLoadUnloadCycleCountMax = 13,
    StorageCounterTypeWearPercentage = 14,
    StorageCounterTypeWearPercentageWarning = 15,
    StorageCounterTypeWearPercentageMax = 16,
    StorageCounterTypePowerOnHours = 17,
    StorageCounterTypeReadLatency100NSMax = 18,
    StorageCounterTypeWriteLatency100NSMax = 19,
    StorageCounterTypeFlushLatency100NSMax = 20,
    StorageCounterTypeMax = 21
};

typedef enum _STORAGE_CRYPTO_ALGORITHM_ID {
    StorageCryptoAlgorithmUnknown = 0,
    StorageCryptoAlgorithmXTSAES = 1,
    StorageCryptoAlgorithmBitlockerAESCBC = 2,
    StorageCryptoAlgorithmAESECB = 3,
    StorageCryptoAlgorithmESSIVAESCBC = 4,
    StorageCryptoAlgorithmMax = 5
};

typedef enum _STORAGE_CRYPTO_KEY_SIZE {
    StorageCryptoKeySizeUnknown = 0,
    StorageCryptoKeySize128Bits = 1,
    StorageCryptoKeySize192Bits = 2,
    StorageCryptoKeySize256Bits = 3,
    StorageCryptoKeySize512Bits = 4
};

typedef enum _STORAGE_DEVICE_FORM_FACTOR {
    FormFactorUnknown = 0,
    FormFactor3_5 = 1,
    FormFactor2_5 = 2,
    FormFactor1_8 = 3,
    FormFactor1_8Less = 4,
    FormFactorEmbedded = 5,
    FormFactorMemoryCard = 6,
    FormFactormSata = 7,
    FormFactorM_2 = 8,
    FormFactorPCIeBoard = 9,
    FormFactorDimm = 10
};

typedef enum _STORAGE_DEVICE_POWER_CAP_UNITS {
    StorageDevicePowerCapUnitsPercent = 0,
    StorageDevicePowerCapUnitsMilliwatts = 1
};

typedef enum _STORAGE_DIAGNOSTIC_LEVEL {
    StorageDiagnosticLevelDefault = 0,
    StorageDiagnosticLevelMax = 1
};

typedef enum _STORAGE_DIAGNOSTIC_TARGET_TYPE {
    StorageDiagnosticTargetTypeUndefined = 0,
    StorageDiagnosticTargetTypePort = 1,
    StorageDiagnosticTargetTypeMiniport = 2,
    StorageDiagnosticTargetTypeHbaFirmware = 3,
    StorageDiagnosticTargetTypeMax = 4
};

typedef enum _STORAGE_DISK_HEALTH_STATUS {
    DiskHealthUnknown = 0,
    DiskHealthUnhealthy = 1,
    DiskHealthWarning = 2,
    DiskHealthHealthy = 3,
    DiskHealthMax = 4
};

typedef enum _STORAGE_DISK_OPERATIONAL_STATUS {
    DiskOpStatusNone = 0,
    DiskOpStatusUnknown = 1,
    DiskOpStatusOk = 2,
    DiskOpStatusPredictingFailure = 3,
    DiskOpStatusInService = 4,
    DiskOpStatusHardwareError = 5,
    DiskOpStatusNotUsable = 6,
    DiskOpStatusTransientError = 7,
    DiskOpStatusMissing = 8
};

typedef enum _STORAGE_IDENTIFIER_CODE_SET {
    StorageIdCodeSetReserved = 0,
    StorageIdCodeSetBinary = 1,
    StorageIdCodeSetAscii = 2,
    StorageIdCodeSetUtf8 = 3
};

typedef enum _STORAGE_IDENTIFIER_TYPE {
    StorageIdTypeVendorSpecific = 0,
    StorageIdTypeVendorId = 1,
    StorageIdTypeEUI64 = 2,
    StorageIdTypeFCPHName = 3,
    StorageIdTypePortRelative = 4,
    StorageIdTypeTargetPortGroup = 5,
    StorageIdTypeLogicalUnitGroup = 6,
    StorageIdTypeMD5LogicalUnitIdentifier = 7,
    StorageIdTypeScsiNameString = 8
};

typedef enum _STORAGE_ID_NAA_FORMAT {
    StorageIdNAAFormatIEEEExtended = 2,
    StorageIdNAAFormatIEEERegistered = 3,
    StorageIdNAAFormatIEEEERegisteredExtended = 5
};

typedef enum _STORAGE_MEDIA_TYPE {
    DDS_4mm = 32,
    MiniQic = 33,
    Travan = 34,
    QIC = 35,
    MP_8mm = 36,
    AME_8mm = 37,
    AIT1_8mm = 38,
    DLT = 39,
    NCTP = 40,
    IBM_3480 = 41,
    IBM_3490E = 42,
    IBM_Magstar_3590 = 43,
    IBM_Magstar_MP = 44,
    STK_DATA_D3 = 45,
    SONY_DTF = 46,
    DV_6mm = 47,
    DMI = 48,
    SONY_D2 = 49,
    CLEANER_CARTRIDGE = 50,
    CD_ROM = 51,
    CD_R = 52,
    CD_RW = 53,
    DVD_ROM = 54,
    DVD_R = 55,
    DVD_RW = 56,
    MO_3_RW = 57,
    MO_5_WO = 58,
    MO_5_RW = 59,
    MO_5_LIMDOW = 60,
    PC_5_WO = 61,
    PC_5_RW = 62,
    PD_5_RW = 63,
    ABL_5_WO = 64,
    PINNACLE_APEX_5_RW = 65,
    SONY_12_WO = 66,
    PHILIPS_12_WO = 67,
    HITACHI_12_WO = 68,
    CYGNET_12_WO = 69,
    KODAK_14_WO = 70,
    MO_NFR_525 = 71,
    NIKON_12_RW = 72,
    IOMEGA_ZIP = 73,
    IOMEGA_JAZ = 74,
    SYQUEST_EZ135 = 75,
    SYQUEST_EZFLYER = 76,
    SYQUEST_SYJET = 77,
    AVATAR_F2 = 78,
    MP2_8mm = 79,
    DST_S = 80,
    DST_M = 81,
    DST_L = 82,
    VXATape_1 = 83,
    VXATape_2 = 84,
    STK_9840 = 85,
    LTO_Ultrium = 86,
    LTO_Accelis = 87,
    DVD_RAM = 88,
    AIT_8mm = 89,
    ADR_1 = 90,
    ADR_2 = 91,
    STK_9940 = 92,
    SAIT = 93,
    VXATape = 94
};

typedef enum _STORAGE_OPERATIONAL_STATUS_REASON {
    DiskOpReasonUnknown = 0,
    DiskOpReasonScsiSenseCode = 1,
    DiskOpReasonMedia = 2,
    DiskOpReasonIo = 3,
    DiskOpReasonThresholdExceeded = 4,
    DiskOpReasonLostData = 5,
    DiskOpReasonEnergySource = 6,
    DiskOpReasonConfiguration = 7,
    DiskOpReasonDeviceController = 8,
    DiskOpReasonMediaController = 9,
    DiskOpReasonComponent = 10,
    DiskOpReasonNVDIMM_N = 11,
    DiskOpReasonBackgroundOperation = 12,
    DiskOpReasonInvalidFirmware = 13,
    DiskOpReasonHealthCheck = 14,
    DiskOpReasonLostDataPersistence = 15,
    DiskOpReasonDisabledByPlatform = 16,
    DiskOpReasonLostWritePersistence = 17,
    DiskOpReasonDataPersistenceLossImminent = 18,
    DiskOpReasonWritePersistenceLossImminent = 19,
    DiskOpReasonMax = 20
};

typedef enum _STORAGE_PORT_CODE_SET {
    StoragePortCodeSetReserved = 0,
    StoragePortCodeSetStorport = 1,
    StoragePortCodeSetSCSIport = 2,
    StoragePortCodeSetSpaceport = 3,
    StoragePortCodeSetATAport = 4,
    StoragePortCodeSetUSBport = 5,
    StoragePortCodeSetSBP2port = 6,
    StoragePortCodeSetSDport = 7
};

typedef enum _STORAGE_POWERUP_REASON_TYPE {
    StoragePowerupUnknown = 0,
    StoragePowerupIO = 1,
    StoragePowerupDeviceAttention = 2
};

typedef enum _STORAGE_PROPERTY_ID {
    StorageDeviceProperty = 0,
    StorageAdapterProperty = 1,
    StorageDeviceIdProperty = 2,
    StorageDeviceUniqueIdProperty = 3,
    StorageDeviceWriteCacheProperty = 4,
    StorageMiniportProperty = 5,
    StorageAccessAlignmentProperty = 6,
    StorageDeviceSeekPenaltyProperty = 7,
    StorageDeviceTrimProperty = 8,
    StorageDeviceWriteAggregationProperty = 9,
    StorageDeviceDeviceTelemetryProperty = 10,
    StorageDeviceLBProvisioningProperty = 11,
    StorageDevicePowerProperty = 12,
    StorageDeviceCopyOffloadProperty = 13,
    StorageDeviceResiliencyProperty = 14,
    StorageDeviceMediumProductType = 15,
    StorageAdapterRpmbProperty = 16,
    StorageAdapterCryptoProperty = 17,
    StorageDeviceIoCapabilityProperty = 48,
    StorageAdapterProtocolSpecificProperty = 49,
    StorageDeviceProtocolSpecificProperty = 50,
    StorageAdapterTemperatureProperty = 51,
    StorageDeviceTemperatureProperty = 52,
    StorageAdapterPhysicalTopologyProperty = 53,
    StorageDevicePhysicalTopologyProperty = 54,
    StorageDeviceAttributesProperty = 55,
    StorageDeviceManagementStatus = 56,
    StorageAdapterSerialNumberProperty = 57,
    StorageDeviceLocationProperty = 58,
    StorageDeviceNumaProperty = 59,
    StorageDeviceZonedDeviceProperty = 60,
    StorageDeviceUnsafeShutdownCount = 61
};

typedef enum _STORAGE_PROTOCOL_ATA_DATA_TYPE {
    AtaDataTypeUnknown = 0,
    AtaDataTypeIdentify = 1,
    AtaDataTypeLogPage = 2
};

typedef enum _STORAGE_PROTOCOL_NVME_DATA_TYPE {
    NVMeDataTypeUnknown = 0,
    NVMeDataTypeIdentify = 1,
    NVMeDataTypeLogPage = 2,
    NVMeDataTypeFeature = 3
};

typedef enum _STORAGE_PROTOCOL_TYPE {
    ProtocolTypeUnknown = 0,
    ProtocolTypeScsi = 1,
    ProtocolTypeAta = 2,
    ProtocolTypeNvme = 3,
    ProtocolTypeSd = 4,
    ProtocolTypeUfs = 5,
    ProtocolTypeProprietary = 126,
    ProtocolTypeMaxReserved = 127
};

typedef enum _STORAGE_PROTOCOL_UFS_DATA_TYPE {
    UfsDataTypeUnknown = 0,
    UfsDataTypeQueryDescriptor = 1,
    UfsDataTypeMax = 2
};

typedef enum _STORAGE_QUERY_TYPE {
    PropertyStandardQuery = 0,
    PropertyExistsQuery = 1,
    PropertyMaskQuery = 2,
    PropertyQueryMaxDefined = 3
};

typedef enum _STORAGE_RESERVE_ID {
    StorageReserveIdNone = 0,
    StorageReserveIdHard = 1,
    StorageReserveIdSoft = 2,
    StorageReserveIdMax = 3
};

typedef enum _STORAGE_RPMB_COMMAND_TYPE {
    StorRpmbProgramAuthKey = 1,
    StorRpmbQueryWriteCounter = 2,
    StorRpmbAuthenticatedWrite = 3,
    StorRpmbAuthenticatedRead = 4,
    StorRpmbReadResultRequest = 5,
    StorRpmbAuthenticatedDeviceConfigWrite = 6,
    StorRpmbAuthenticatedDeviceConfigRead = 7
};

typedef enum _STORAGE_RPMB_FRAME_TYPE {
    StorageRpmbFrameTypeUnknown = 0,
    StorageRpmbFrameTypeStandard = 1,
    StorageRpmbFrameTypeMax = 2
};

typedef enum _STORAGE_TIER_CLASS {
    StorageTierClassUnspecified = 0,
    StorageTierClassCapacity = 1,
    StorageTierClassPerformance = 2,
    StorageTierClassMax = 3
};

typedef enum _STORAGE_TIER_MEDIA_TYPE {
    StorageTierMediaTypeUnspecified = 0,
    StorageTierMediaTypeDisk = 1,
    StorageTierMediaTypeSsd = 2,
    StorageTierMediaTypeScm = 4,
    StorageTierMediaTypeMax = 5
};

typedef enum _STORAGE_ZONED_DEVICE_TYPES {
    ZonedDeviceTypeUnknown = 0,
    ZonedDeviceTypeHostManaged = 1,
    ZonedDeviceTypeHostAware = 2,
    ZonedDeviceTypeDeviceManaged = 3
};

typedef enum _STORAGE_ZONES_ATTRIBUTES {
    ZonesAttributeTypeAndLengthMayDifferent = 0,
    ZonesAttributeTypeSameLengthSame = 1,
    ZonesAttributeTypeSameLastZoneLengthDifferent = 2,
    ZonesAttributeTypeMayDifferentLengthSame = 3
};

typedef enum _STORAGE_ZONE_CONDITION {
    ZoneConditionConventional = 0,
    ZoneConditionEmpty = 1,
    ZoneConditionImplicitlyOpened = 2,
    ZoneConditionExplicitlyOpened = 3,
    ZoneConditionClosed = 4,
    ZoneConditionReadOnly = 13,
    ZoneConditionFull = 14,
    ZoneConditionOffline = 15
};

typedef enum _STORAGE_ZONE_TYPES {
    ZoneTypeUnknown = 0,
    ZoneTypeConventional = 1,
    ZoneTypeSequentialWriteRequired = 2,
    ZoneTypeSequentialWritePreferred = 3,
    ZoneTypeMax = 4
};

typedef enum _STREAM_INFO_LEVELS {
    FindStreamInfoStandard = 0,
    FindStreamInfoMaxInfoLevel = 1
};

typedef enum _SUBSYSTEM_INFORMATION_TYPE {
    SubsystemInformationTypeWin32 = 0,
    SubsystemInformationTypeWSL = 1,
    MaxSubsystemInformationType = 2
};

typedef enum _SUITE_TYPE {
    SmallBusiness = 0,
    Enterprise = 1,
    BackOffice = 2,
    CommunicationServer = 3,
    TerminalServer = 4,
    SmallBusinessRestricted = 5,
    EmbeddedNT = 6,
    DataCenter = 7,
    SingleUserTS = 8,
    Personal = 9,
    Blade = 10,
    EmbeddedRestricted = 11,
    SecurityAppliance = 12,
    StorageServer = 13,
    ComputeServer = 14,
    WHServer = 15,
    PhoneNT = 16,
    MultiUserTS = 17,
    MaxSuiteType = 18
};

typedef enum _SVGIO {
    SVGIO_BACKGROUND = 0,
    SVGIO_SELECTION = 1,
    SVGIO_ALLVIEW = 2,
    SVGIO_CHECKED = 3,
    SVGIO_TYPE_MASK = 15,
    SVGIO_FLAG_VIEWORDER = -2147483648
};

typedef enum _SVSIF {
    SVSI_DESELECT = 0,
    SVSI_SELECT = 1,
    SVSI_EDIT = 3,
    SVSI_DESELECTOTHERS = 4,
    SVSI_ENSUREVISIBLE = 8,
    SVSI_FOCUSED = 16,
    SVSI_TRANSLATEPT = 32,
    SVSI_SELECTIONMARK = 64,
    SVSI_POSITIONITEM = 128,
    SVSI_CHECK = 256,
    SVSI_CHECK2 = 512,
    SVSI_KEYBOARDSELECT = 1025,
    SVSI_NOTAKEFOCUS = 0x40000000
};

typedef enum _SYMBOLIC_LINK_INFO_CLASS {
    SymbolicLinkGlobalInformation = 1,
    SymbolicLinkAccessMask = 2
};

typedef enum _SYNTHESIZED_MOUSE_PROCESSING_RESULT {
    SMPR_ERROR = 0,
    SMPR_SYNTHESIZED = 1,
    SMPR_SYNTHESIZED_BOUND_BY_CLIP = 2
};

typedef enum _SYNTHESIZE_MOUSE_PAYLOAD_ID {
    SMPI_MAGNETISM = 1,
    SMPI_HITTESTCONTEXT = 2
};

typedef enum _SYSDBG_COMMAND {
    SysDbgQueryModuleInformation = 0,
    SysDbgQueryTraceInformation = 1,
    SysDbgSetTracepoint = 2,
    SysDbgSetSpecialCall = 3,
    SysDbgClearSpecialCalls = 4,
    SysDbgQuerySpecialCalls = 5,
    SysDbgBreakPoint = 6,
    SysDbgQueryVersion = 7,
    SysDbgReadVirtual = 8,
    SysDbgWriteVirtual = 9,
    SysDbgReadPhysical = 10,
    SysDbgWritePhysical = 11,
    SysDbgReadControlSpace = 12,
    SysDbgWriteControlSpace = 13,
    SysDbgReadIoSpace = 14,
    SysDbgWriteIoSpace = 15,
    SysDbgReadMsr = 16,
    SysDbgWriteMsr = 17,
    SysDbgReadBusData = 18,
    SysDbgWriteBusData = 19,
    SysDbgCheckLowMemory = 20,
    SysDbgEnableKernelDebugger = 21,
    SysDbgDisableKernelDebugger = 22,
    SysDbgGetAutoKdEnable = 23,
    SysDbgSetAutoKdEnable = 24,
    SysDbgGetPrintBufferSize = 25,
    SysDbgSetPrintBufferSize = 26,
    SysDbgGetKdUmExceptionEnable = 27,
    SysDbgSetKdUmExceptionEnable = 28,
    SysDbgGetTriageDump = 29,
    SysDbgGetKdBlockEnable = 30,
    SysDbgSetKdBlockEnable = 31,
    SysDbgRegisterForUmBreakInfo = 32,
    SysDbgGetUmBreakPid = 33,
    SysDbgClearUmBreakPid = 34,
    SysDbgGetUmAttachPid = 35,
    SysDbgClearUmAttachPid = 36,
    SysDbgGetLiveKernelDump = 37
};

typedef enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE {
    SystemActivityModerationAppTypeClassic = 0,
    SystemActivityModerationAppTypePackaged = 1,
    MaxSystemActivityModerationAppType = 2
};

typedef enum _SYSTEM_ACTIVITY_MODERATION_STATE {
    SystemActivityModerationStateSystemManaged = 0,
    SystemActivityModerationStateUserManagedAllowThrottling = 1,
    SystemActivityModerationStateUserManagedDisableThrottling = 2,
    MaxSystemActivityModerationState = 3
};

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS {
    SystemCrashDumpDisable = 0,
    SystemCrashDumpReconfigure = 1,
    SystemCrashDumpInitializationComplete = 2
};

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION {
    SystemFirmwareTable_Enumerate = 0,
    SystemFirmwareTable_Get = 1
};

typedef enum _SYSTEM_INFORMATION_CLASS {
    SystemBasicInformation = 0,
    SystemProcessorInformation = 1,
    SystemPerformanceInformation = 2,
    SystemTimeOfDayInformation = 3,
    SystemPathInformation = 4,
    SystemProcessInformation = 5,
    SystemCallCountInformation = 6,
    SystemDeviceInformation = 7,
    SystemProcessorPerformanceInformation = 8,
    SystemFlagsInformation = 9,
    SystemCallTimeInformation = 10,
    SystemModuleInformation = 11,
    SystemLocksInformation = 12,
    SystemStackTraceInformation = 13,
    SystemPagedPoolInformation = 14,
    SystemNonPagedPoolInformation = 15,
    SystemHandleInformation = 16,
    SystemObjectInformation = 17,
    SystemPageFileInformation = 18,
    SystemVdmInstemulInformation = 19,
    SystemVdmBopInformation = 20,
    SystemFileCacheInformation = 21,
    SystemPoolTagInformation = 22,
    SystemInterruptInformation = 23,
    SystemDpcBehaviorInformation = 24,
    SystemFullMemoryInformation = 25,
    SystemLoadGdiDriverInformation = 26,
    SystemUnloadGdiDriverInformation = 27,
    SystemTimeAdjustmentInformation = 28,
    SystemSummaryMemoryInformation = 29,
    SystemMirrorMemoryInformation = 30,
    SystemPerformanceTraceInformation = 31,
    SystemObsolete0 = 32,
    SystemExceptionInformation = 33,
    SystemCrashDumpStateInformation = 34,
    SystemKernelDebuggerInformation = 35,
    SystemContextSwitchInformation = 36,
    SystemRegistryQuotaInformation = 37,
    SystemExtendServiceTableInformation = 38,
    SystemPrioritySeperation = 39,
    SystemVerifierAddDriverInformation = 40,
    SystemVerifierRemoveDriverInformation = 41,
    SystemProcessorIdleInformation = 42,
    SystemLegacyDriverInformation = 43,
    SystemCurrentTimeZoneInformation = 44,
    SystemLookasideInformation = 45,
    SystemTimeSlipNotification = 46,
    SystemSessionCreate = 47,
    SystemSessionDetach = 48,
    SystemSessionInformation = 49,
    SystemRangeStartInformation = 50,
    SystemVerifierInformation = 51,
    SystemVerifierThunkExtend = 52,
    SystemSessionProcessInformation = 53,
    SystemLoadGdiDriverInSystemSpace = 54,
    SystemNumaProcessorMap = 55,
    SystemPrefetcherInformation = 56,
    SystemExtendedProcessInformation = 57,
    SystemRecommendedSharedDataAlignment = 58,
    SystemComPlusPackage = 59,
    SystemNumaAvailableMemory = 60,
    SystemProcessorPowerInformation = 61,
    SystemEmulationBasicInformation = 62,
    SystemEmulationProcessorInformation = 63,
    SystemExtendedHandleInformation = 64,
    SystemLostDelayedWriteInformation = 65,
    SystemBigPoolInformation = 66,
    SystemSessionPoolTagInformation = 67,
    SystemSessionMappedViewInformation = 68,
    SystemHotpatchInformation = 69,
    SystemObjectSecurityMode = 70,
    SystemWatchdogTimerHandler = 71,
    SystemWatchdogTimerInformation = 72,
    SystemLogicalProcessorInformation = 73,
    SystemWow64SharedInformationObsolete = 74,
    SystemRegisterFirmwareTableInformationHandler = 75,
    SystemFirmwareTableInformation = 76,
    SystemModuleInformationEx = 77,
    SystemVerifierTriageInformation = 78,
    SystemSuperfetchInformation = 79,
    SystemMemoryListInformation = 80,
    SystemFileCacheInformationEx = 81,
    SystemThreadPriorityClientIdInformation = 82,
    SystemProcessorIdleCycleTimeInformation = 83,
    SystemVerifierCancellationInformation = 84,
    SystemProcessorPowerInformationEx = 85,
    SystemRefTraceInformation = 86,
    SystemSpecialPoolInformation = 87,
    SystemProcessIdInformation = 88,
    SystemErrorPortInformation = 89,
    SystemBootEnvironmentInformation = 90,
    SystemHypervisorInformation = 91,
    SystemVerifierInformationEx = 92,
    SystemTimeZoneInformation = 93,
    SystemImageFileExecutionOptionsInformation = 94,
    SystemCoverageInformation = 95,
    SystemPrefetchPatchInformation = 96,
    SystemVerifierFaultsInformation = 97,
    SystemSystemPartitionInformation = 98,
    SystemSystemDiskInformation = 99,
    SystemProcessorPerformanceDistribution = 100,
    SystemNumaProximityNodeInformation = 101,
    SystemDynamicTimeZoneInformation = 102,
    SystemCodeIntegrityInformation = 103,
    SystemProcessorMicrocodeUpdateInformation = 104,
    SystemProcessorBrandString = 105,
    SystemVirtualAddressInformation = 106,
    SystemLogicalProcessorAndGroupInformation = 107,
    SystemProcessorCycleTimeInformation = 108,
    SystemStoreInformation = 109,
    SystemRegistryAppendString = 110,
    SystemAitSamplingValue = 111,
    SystemVhdBootInformation = 112,
    SystemCpuQuotaInformation = 113,
    SystemNativeBasicInformation = 114,
    SystemErrorPortTimeouts = 115,
    SystemLowPriorityIoInformation = 116,
    SystemBootEntropyInformation = 117,
    SystemVerifierCountersInformation = 118,
    SystemPagedPoolInformationEx = 119,
    SystemSystemPtesInformationEx = 120,
    SystemNodeDistanceInformation = 121,
    SystemAcpiAuditInformation = 122,
    SystemBasicPerformanceInformation = 123,
    SystemQueryPerformanceCounterInformation = 124,
    SystemSessionBigPoolInformation = 125,
    SystemBootGraphicsInformation = 126,
    SystemScrubPhysicalMemoryInformation = 127,
    SystemBadPageInformation = 128,
    SystemProcessorProfileControlArea = 129,
    SystemCombinePhysicalMemoryInformation = 130,
    SystemEntropyInterruptTimingInformation = 131,
    SystemConsoleInformation = 132,
    SystemPlatformBinaryInformation = 133,
    SystemPolicyInformation = 134,
    SystemHypervisorProcessorCountInformation = 135,
    SystemDeviceDataInformation = 136,
    SystemDeviceDataEnumerationInformation = 137,
    SystemMemoryTopologyInformation = 138,
    SystemMemoryChannelInformation = 139,
    SystemBootLogoInformation = 140,
    SystemProcessorPerformanceInformationEx = 141,
    SystemCriticalProcessErrorLogInformation = 142,
    SystemSecureBootPolicyInformation = 143,
    SystemPageFileInformationEx = 144,
    SystemSecureBootInformation = 145,
    SystemEntropyInterruptTimingRawInformation = 146,
    SystemPortableWorkspaceEfiLauncherInformation = 147,
    SystemFullProcessInformation = 148,
    SystemKernelDebuggerInformationEx = 149,
    SystemBootMetadataInformation = 150,
    SystemSoftRebootInformation = 151,
    SystemElamCertificateInformation = 152,
    SystemOfflineDumpConfigInformation = 153,
    SystemProcessorFeaturesInformation = 154,
    SystemRegistryReconciliationInformation = 155,
    SystemEdidInformation = 156,
    SystemManufacturingInformation = 157,
    SystemEnergyEstimationConfigInformation = 158,
    SystemHypervisorDetailInformation = 159,
    SystemProcessorCycleStatsInformation = 160,
    SystemVmGenerationCountInformation = 161,
    SystemTrustedPlatformModuleInformation = 162,
    SystemKernelDebuggerFlags = 163,
    SystemCodeIntegrityPolicyInformation = 164,
    SystemIsolatedUserModeInformation = 165,
    SystemHardwareSecurityTestInterfaceResultsInformation = 166,
    SystemSingleModuleInformation = 167,
    SystemAllowedCpuSetsInformation = 168,
    SystemVsmProtectionInformation = 169,
    SystemInterruptCpuSetsInformation = 170,
    SystemSecureBootPolicyFullInformation = 171,
    SystemCodeIntegrityPolicyFullInformation = 172,
    SystemAffinitizedInterruptProcessorInformation = 173,
    SystemRootSiloInformation = 174,
    SystemCpuSetInformation = 175,
    SystemCpuSetTagInformation = 176,
    SystemWin32WerStartCallout = 177,
    SystemSecureKernelProfileInformation = 178,
    SystemCodeIntegrityPlatformManifestInformation = 179,
    SystemInterruptSteeringInformation = 180,
    SystemSupportedProcessorArchitectures = 181,
    SystemMemoryUsageInformation = 182,
    SystemCodeIntegrityCertificateInformation = 183,
    SystemPhysicalMemoryInformation = 184,
    SystemControlFlowTransition = 185,
    SystemKernelDebuggingAllowed = 186,
    SystemActivityModerationExeState = 187,
    SystemActivityModerationUserSettings = 188,
    SystemCodeIntegrityPoliciesFullInformation = 189,
    SystemCodeIntegrityUnlockInformation = 190,
    SystemIntegrityQuotaInformation = 191,
    SystemFlushInformation = 192,
    SystemProcessorIdleMaskInformation = 193,
    SystemSecureDumpEncryptionInformation = 194,
    SystemWriteConstraintInformation = 195,
    SystemKernelVaShadowInformation = 196,
    SystemHypervisorSharedPageInformation = 197,
    SystemFirmwareBootPerformanceInformation = 198,
    SystemCodeIntegrityVerificationInformation = 199,
    SystemFirmwarePartitionInformation = 200,
    SystemSpeculationControlInformation = 201,
    SystemDmaGuardPolicyInformation = 202,
    SystemEnclaveLaunchControlInformation = 203,
    SystemWorkloadAllowedCpuSetsInformation = 204,
    SystemCodeIntegrityUnlockModeInformation = 205,
    SystemLeapSecondInformation = 206,
    SystemFlags2Information = 207,
    MaxSystemInfoClass = 208
};

typedef enum _SYSTEM_MEMORY_LIST_COMMAND {
    MemoryCaptureAccessedBits = 0,
    MemoryCaptureAndResetAccessedBits = 1,
    MemoryEmptyWorkingSets = 2,
    MemoryFlushModifiedList = 3,
    MemoryPurgeStandbyList = 4,
    MemoryPurgeLowPriorityStandbyList = 5,
    MemoryCommandMax = 6
};

typedef enum _SYSTEM_NET_RATE_CONTROL_TYPE {
    SystemNetRateControlSet = 0,
    SystemNetRateControlQuota = 1
};

typedef enum _SYSTEM_PIXEL_FORMAT {
    SystemPixelFormatUnknown = 0,
    SystemPixelFormatR8G8B8 = 1,
    SystemPixelFormatR8G8B8X8 = 2,
    SystemPixelFormatB8G8R8 = 3,
    SystemPixelFormatB8G8R8X8 = 4
};

typedef enum _SYSTEM_POWER_STATE {
    PowerSystemUnspecified = 0,
    PowerSystemWorking = 1,
    PowerSystemSleeping1 = 2,
    PowerSystemSleeping2 = 3,
    PowerSystemSleeping3 = 4,
    PowerSystemHibernate = 5,
    PowerSystemShutdown = 6,
    PowerSystemMaximum = 7
};

typedef enum _SYSTEM_PROCESS_CLASSIFICATION {
    SystemProcessClassificationNormal = 0,
    SystemProcessClassificationSystem = 1,
    SystemProcessClassificationSecureSystem = 2,
    SystemProcessClassificationMemCompression = 3,
    SystemProcessClassificationRegistry = 4,
    SystemProcessClassificationMaximum = 5
};

typedef enum _SYSTEM_VA_TYPE {
    SystemVaTypeAll = 0,
    SystemVaTypeNonPagedPool = 1,
    SystemVaTypePagedPool = 2,
    SystemVaTypeSystemCache = 3,
    SystemVaTypeSystemPtes = 4,
    SystemVaTypeSessionSpace = 5,
    SystemVaTypeMax = 6
};

typedef enum _SharedVirtualDiskHandleState {
    SharedVirtualDiskHandleStateNone = 0,
    SharedVirtualDiskHandleStateFileShared = 1,
    SharedVirtualDiskHandleStateHandleShared = 3
};

typedef enum _SharedVirtualDiskSupportType {
    SharedVirtualDisksUnsupported = 0,
    SharedVirtualDisksSupported = 1,
    SharedVirtualDiskSnapshotsSupported = 3,
    SharedVirtualDiskCDPSnapshotsSupported = 7
};

typedef enum _TABLET_DEVICE_KIND {
    TABLET_DEVICE_MOUSE = 0,
    TABLET_DEVICE_PEN = 1,
    TABLET_DEVICE_TOUCH = 2
};

typedef enum _TABLE_SEARCH_RESULT {
    TableEmptyTree = 0,
    TableFoundNode = 1,
    TableInsertAsLeft = 2,
    TableInsertAsRight = 3
};

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
    TapeDriveProblemNone = 0,
    TapeDriveReadWriteWarning = 1,
    TapeDriveReadWriteError = 2,
    TapeDriveReadWarning = 3,
    TapeDriveWriteWarning = 4,
    TapeDriveReadError = 5,
    TapeDriveWriteError = 6,
    TapeDriveHardwareError = 7,
    TapeDriveUnsupportedMedia = 8,
    TapeDriveScsiConnectionError = 9,
    TapeDriveTimetoClean = 10,
    TapeDriveCleanDriveNow = 11,
    TapeDriveMediaLifeExpired = 12,
    TapeDriveSnappedTape = 13
};

typedef enum _TASKDIALOG_COMMON_BUTTON_FLAGS {
    TDCBF_OK_BUTTON = 1,
    TDCBF_YES_BUTTON = 2,
    TDCBF_NO_BUTTON = 4,
    TDCBF_CANCEL_BUTTON = 8,
    TDCBF_RETRY_BUTTON = 16,
    TDCBF_CLOSE_BUTTON = 32
};

typedef enum _TASKDIALOG_ELEMENTS {
    TDE_CONTENT = 0,
    TDE_EXPANDED_INFORMATION = 1,
    TDE_FOOTER = 2,
    TDE_MAIN_INSTRUCTION = 3
};

typedef enum _TASKDIALOG_FLAGS {
    TDF_ENABLE_HYPERLINKS = 1,
    TDF_USE_HICON_MAIN = 2,
    TDF_USE_HICON_FOOTER = 4,
    TDF_ALLOW_DIALOG_CANCELLATION = 8,
    TDF_USE_COMMAND_LINKS = 16,
    TDF_USE_COMMAND_LINKS_NO_ICON = 32,
    TDF_EXPAND_FOOTER_AREA = 64,
    TDF_EXPANDED_BY_DEFAULT = 128,
    TDF_VERIFICATION_FLAG_CHECKED = 256,
    TDF_SHOW_PROGRESS_BAR = 512,
    TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024,
    TDF_CALLBACK_TIMER = 2048,
    TDF_POSITION_RELATIVE_TO_WINDOW = 4096,
    TDF_RTL_LAYOUT = 8192,
    TDF_NO_DEFAULT_RADIO_BUTTON = 16384,
    TDF_CAN_BE_MINIMIZED = 0x8000,
    TDF_NO_SET_FOREGROUND = 0x10000,
    TDF_SIZE_TO_CONTENT = 0x1000000
};

typedef enum _TASKDIALOG_ICON_ELEMENTS {
    TDIE_ICON_MAIN = 0,
    TDIE_ICON_FOOTER = 1
};

typedef enum _TASKDIALOG_MESSAGES {
    TDM_NAVIGATE_PAGE = 1125,
    TDM_CLICK_BUTTON = 1126,
    TDM_SET_MARQUEE_PROGRESS_BAR = 1127,
    TDM_SET_PROGRESS_BAR_STATE = 1128,
    TDM_SET_PROGRESS_BAR_RANGE = 1129,
    TDM_SET_PROGRESS_BAR_POS = 1130,
    TDM_SET_PROGRESS_BAR_MARQUEE = 1131,
    TDM_SET_ELEMENT_TEXT = 1132,
    TDM_CLICK_RADIO_BUTTON = 1134,
    TDM_ENABLE_BUTTON = 1135,
    TDM_ENABLE_RADIO_BUTTON = 1136,
    TDM_CLICK_VERIFICATION = 1137,
    TDM_UPDATE_ELEMENT_TEXT = 1138,
    TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE = 1139,
    TDM_UPDATE_ICON = 1140
};

typedef enum _TASKDIALOG_NOTIFICATIONS {
    TDN_CREATED = 0,
    TDN_NAVIGATED = 1,
    TDN_BUTTON_CLICKED = 2,
    TDN_HYPERLINK_CLICKED = 3,
    TDN_TIMER = 4,
    TDN_DESTROYED = 5,
    TDN_RADIO_BUTTON_CLICKED = 6,
    TDN_DIALOG_CONSTRUCTED = 7,
    TDN_VERIFICATION_CLICKED = 8,
    TDN_HELP = 9,
    TDN_EXPANDO_BUTTON_CLICKED = 10
};

typedef enum _THDTYPE {
    THDTYPE_BLOCKMESSAGES = 0,
    THDTYPE_PROCESSMESSAGES = 1
};

typedef enum _THEMECALLBACK {
    TCB_THEMENAME = 0,
    TCB_COLORSCHEME = 1,
    TCB_SIZENAME = 2,
    TCB_SUBSTTABLE = 3,
    TCB_CDFILENAME = 4,
    TCB_CDFILECOMBO = 5,
    TCB_FILENAME = 6,
    TCB_DOCPROPERTY = 7,
    TCB_NEEDSUBST = 8,
    TCB_MINCOLORDEPTH = 9,
    TCB_FONT = 10,
    TCB_MIRRORIMAGE = 11,
    TCB_LOCALIZABLE_RECT = 12
};

typedef enum _THREADINFOCLASS {
    ThreadBasicInformation = 0,
    ThreadTimes = 1,
    ThreadPriority = 2,
    ThreadBasePriority = 3,
    ThreadAffinityMask = 4,
    ThreadImpersonationToken = 5,
    ThreadDescriptorTableEntry = 6,
    ThreadEnableAlignmentFaultFixup = 7,
    ThreadEventPair_Reusable = 8,
    ThreadQuerySetWin32StartAddress = 9,
    ThreadZeroTlsCell = 10,
    ThreadPerformanceCount = 11,
    ThreadAmILastThread = 12,
    ThreadIdealProcessor = 13,
    ThreadPriorityBoost = 14,
    ThreadSetTlsArrayAddress = 15,
    ThreadIsIoPending = 16,
    ThreadHideFromDebugger = 17,
    ThreadBreakOnTermination = 18,
    ThreadSwitchLegacyState = 19,
    ThreadIsTerminated = 20,
    ThreadLastSystemCall = 21,
    ThreadIoPriority = 22,
    ThreadCycleTime = 23,
    ThreadPagePriority = 24,
    ThreadActualBasePriority = 25,
    ThreadTebInformation = 26,
    ThreadCSwitchMon = 27,
    ThreadCSwitchPmu = 28,
    ThreadWow64Context = 29,
    ThreadGroupInformation = 30,
    ThreadUmsInformation = 31,
    ThreadCounterProfiling = 32,
    ThreadIdealProcessorEx = 33,
    ThreadCpuAccountingInformation = 34,
    ThreadSuspendCount = 35,
    ThreadHeterogeneousCpuPolicy = 36,
    ThreadContainerId = 37,
    ThreadNameInformation = 38,
    ThreadSelectedCpuSets = 39,
    ThreadSystemThreadInformation = 40,
    ThreadActualGroupAffinity = 41,
    ThreadDynamicCodePolicyInfo = 42,
    ThreadExplicitCaseSensitivity = 43,
    ThreadWorkOnBehalfTicket = 44,
    ThreadSubsystemInformation = 45,
    ThreadDbgkWerReportActive = 46,
    ThreadAttachContainer = 47,
    ThreadManageWritesToExecutableMemory = 48,
    ThreadPowerThrottlingState = 49,
    ThreadWorkloadClass = 50,
    MaxThreadInfoClass = 51
};

typedef enum _THREAD_INFORMATION_CLASS {
    ThreadMemoryPriority = 0,
    ThreadAbsoluteCpuPriority = 1,
    ThreadDynamicCodePolicy = 2,
    ThreadPowerThrottling = 3,
    ThreadInformationClassMax = 4
};

typedef enum _THREAD_UMS_INFORMATION_COMMAND {
    UmsInformationCommandInvalid = 0,
    UmsInformationCommandAttach = 1,
    UmsInformationCommandDetach = 2,
    UmsInformationCommandQuery = 3
};

typedef enum _THREAD_WORKLOAD_CLASS {
    ThreadWorkloadClassDefault = 0,
    ThreadWorkloadClassGraphics = 1,
    MaxThreadWorkloadClass = 2
};

typedef enum _TIMER_INFORMATION_CLASS {
    TimerBasicInformation = 0
};

typedef enum _TIMER_SET_INFORMATION_CLASS {
    TimerSetCoalescableTimer = 0,
    MaxTimerInfoClass = 1
};

typedef enum _TIMER_TYPE {
    NotificationTimer = 0,
    SynchronizationTimer = 1
};

typedef enum _TOKEN_ELEVATION_TYPE {
    TokenElevationTypeDefault = 1,
    TokenElevationTypeFull = 2,
    TokenElevationTypeLimited = 3
};

typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser = 1,
    TokenGroups = 2,
    TokenPrivileges = 3,
    TokenOwner = 4,
    TokenPrimaryGroup = 5,
    TokenDefaultDacl = 6,
    TokenSource = 7,
    TokenType = 8,
    TokenImpersonationLevel = 9,
    TokenStatistics = 10,
    TokenRestrictedSids = 11,
    TokenSessionId = 12,
    TokenGroupsAndPrivileges = 13,
    TokenSessionReference = 14,
    TokenSandBoxInert = 15,
    TokenAuditPolicy = 16,
    TokenOrigin = 17,
    TokenElevationType = 18,
    TokenLinkedToken = 19,
    TokenElevation = 20,
    TokenHasRestrictions = 21,
    TokenAccessInformation = 22,
    TokenVirtualizationAllowed = 23,
    TokenVirtualizationEnabled = 24,
    TokenIntegrityLevel = 25,
    TokenUIAccess = 26,
    TokenMandatoryPolicy = 27,
    TokenLogonSid = 28,
    TokenIsAppContainer = 29,
    TokenCapabilities = 30,
    TokenAppContainerSid = 31,
    TokenAppContainerNumber = 32,
    TokenUserClaimAttributes = 33,
    TokenDeviceClaimAttributes = 34,
    TokenRestrictedUserClaimAttributes = 35,
    TokenRestrictedDeviceClaimAttributes = 36,
    TokenDeviceGroups = 37,
    TokenRestrictedDeviceGroups = 38,
    TokenSecurityAttributes = 39,
    TokenIsRestricted = 40,
    TokenProcessTrustLevel = 41,
    TokenPrivateNameSpace = 42,
    TokenSingletonAttributes = 43,
    TokenBnoIsolation = 44,
    TokenChildProcessFlags = 45,
    TokenIsLessPrivilegedAppContainer = 46,
    MaxTokenInfoClass = 47
};

typedef enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION {
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
    TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4
};

typedef enum _TOKEN_TYPE {
    TokenPrimary = 1,
    TokenImpersonation = 2
};

typedef enum _TP_CALLBACK_PRIORITY {
    TP_CALLBACK_PRIORITY_HIGH = 0,
    TP_CALLBACK_PRIORITY_NORMAL = 1,
    TP_CALLBACK_PRIORITY_LOW = 2,
    TP_CALLBACK_PRIORITY_INVALID = 3,
    TP_CALLBACK_PRIORITY_COUNT = 3
};

typedef enum _TP_DEBUG_CLASS {
    TP_DEBUG_CLASS_POOL = 0
};

typedef enum _TP_LOG_LEVEL {
    TP_LOG_LEVEL_ERROR = 0,
    TP_LOG_LEVEL_WARNING = 1,
    TP_LOG_LEVEL_INFO = 2,
    TP_LOG_LEVEL_TRACE_ENTER = 3,
    TP_LOG_LEVEL_TRACE_LEAVE = 4
};

typedef enum _TP_TRACE_TYPE {
    TpTraceThreadPriority = 1,
    TpTraceThreadAffinity = 2,
    MaxTpTraceType = 3
};

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS {
    TransactionManagerBasicInformation = 0,
    TransactionManagerLogInformation = 1,
    TransactionManagerLogPathInformation = 2,
    TransactionManagerRecoveryInformation = 4,
    TransactionManagerOnlineProbeInformation = 3,
    TransactionManagerOldestTransactionInformation = 5
};

typedef enum _TRANSACTION_INFORMATION_CLASS {
    TransactionBasicInformation = 0,
    TransactionPropertiesInformation = 1,
    TransactionEnlistmentInformation = 2,
    TransactionSuperiorEnlistmentInformation = 3,
    TransactionBindInformation = 4,
    TransactionDTCPrivateInformation = 5
};

typedef enum _TRANSACTION_OUTCOME {
    TransactionOutcomeUndetermined = 1,
    TransactionOutcomeCommitted = 2,
    TransactionOutcomeAborted = 3
};

typedef enum _TRANSACTION_STATE {
    TransactionStateNormal = 1,
    TransactionStateIndoubt = 2,
    TransactionStateCommittedNotify = 3
};

typedef enum _TRANSFER_ADVISE_STATE {
    TS_NONE = 0,
    TS_PERFORMING = 1,
    TS_PREPARING = 2,
    TS_INDETERMINATE = 4
};

typedef enum _TRANSFER_SOURCE_FLAGS {
    TSF_NORMAL = 0,
    TSF_FAIL_EXIST = 0,
    TSF_RENAME_EXIST = 1,
    TSF_OVERWRITE_EXIST = 2,
    TSF_ALLOW_DECRYPTION = 4,
    TSF_NO_SECURITY = 8,
    TSF_COPY_CREATION_TIME = 16,
    TSF_COPY_WRITE_TIME = 32,
    TSF_USE_FULL_ACCESS = 64,
    TSF_DELETE_RECYCLE_IF_POSSIBLE = 128,
    TSF_COPY_HARD_LINK = 256,
    TSF_COPY_LOCALIZED_NAME = 512,
    TSF_MOVE_AS_COPY_DELETE = 1024,
    TSF_SUSPEND_SHELLEVENTS = 2048
};

typedef enum _TRANSMITFLOWCONTROLCLASS {
    TransmitFlowControl_None = 0,
    TransmitFlowControl_CTS = 1,
    TransmitFlowControl_DSR = 2
};

typedef enum _TRAY_NOTIFICATION_BALLOON_BLOCKED_REASON {
    TNBBR_SUCCESS = 0,
    TNBBR_PRESENTATION_MODE = 1,
    TNBBR_USER_PREFERENCE = 2,
    TNBBR_GROUP_POLICY = 4,
    TNBBR_HIDDEN = 8,
    TNBBR_REALTIME_BLOCKED = 16,
    TNBBR_USER_NOT_PRESENT = 32,
    TNBBR_USER_BUSY = 64,
    TNBBR_FA_OOBE = 256,
    TNBBR_FA_LOGIN = 512,
    TNBBR_FA_GLOBAL_DELAY = 1024,
    TNBBR_FA_ITEM_DELAY = 2048,
    TNBBR_FA_EXPIRED = 4096,
    TNBBR_FA_GROUP_POLICY = 8192,
    TNBBR_OOBE_QUIET_TIME = 16384,
    TNBBR_ERROR = -2147483648
};

typedef enum _TRAY_NOTIFICATION_SYSPROMOTE_BLOCKED_REASON {
    TNSBR_SUCCESS = 0,
    TNSBR_USER_PREFERENCE = 1,
    TNSBR_GROUP_POLICY = 2,
    TNSBR_HIDDEN = 4,
    TNSBR_GLOBAL_DELAY = 16,
    TNSBR_ITEM_DELAY = 32,
    TNSBR_ANOTHER_PROMOTED = 64,
    TNSBR_ERROR = -2147483648
};

typedef enum _TRUSTED_INFORMATION_CLASS {
    TrustedDomainNameInformation = 1,
    TrustedControllersInformation = 2,
    TrustedPosixOffsetInformation = 3,
    TrustedPasswordInformation = 4,
    TrustedDomainInformationBasic = 5,
    TrustedDomainInformationEx = 6,
    TrustedDomainAuthInformation = 7,
    TrustedDomainFullInformation = 8,
    TrustedDomainAuthInformationInternal = 9,
    TrustedDomainFullInformationInternal = 10,
    TrustedDomainInformationEx2Internal = 11,
    TrustedDomainFullInformation2Internal = 12,
    TrustedDomainSupportedEncryptionTypes = 13
};

typedef enum _TS_CERT_TYPE {
    CertTypeUnknown = 0,
    CertTypeSelfSigned = 1,
    CertTypeGPDefault = 2,
    CertTypeCustom = 3
};

typedef enum _TVITEMPART {
    TVGIPR_BUTTON = 1
};

typedef enum _TlgActivityBase<wil::ActivityBase<ThemeLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,35184372088832,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,35184372088832,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<ThemeSettingsLogging,1,70368744177664,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ThemeSettingsLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<UxThemeTelemetry,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<UxThemeTelemetry,_TlgReflectorTag_Param0IsProviderType>,0,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgActivityBase<wil::ActivityBase<wil::details::FeatureLogging,1,0,5,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::FeatureLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::State {
    Created = 0,
    Started = 1,
    Stopped = 2,
    Destroyed = 3
};

typedef enum _TlgBlob_t {
    _TlgBlobNone = 0,
    _TlgBlobEnd = 1,
    _TlgBlobProvider = 2,
    _TlgBlobEvent3 = 3,
    _TlgBlobProvider3 = 4,
    _TlgBlobEvent2 = 5,
    _TlgBlobMax = 6
};

typedef enum _TlgFlags_t {
    _TlgFlagsNone = 0,
    _TlgFlagsPtr64 = 1
};

typedef enum _TlgOptions_t {
    _TlgOptionNone = 0,
    _TlgOptionGroup = 1
};

typedef enum _UIA_ACTIONS {
    UIAC_KEYBOARDCORRECTION_PREVCANDIDATE = 0,
    UIAC_KEYBOARDCORRECTION_NEXTCANDIDATE = 1,
    UIAC_KEYBOARDCORRECTION_EMOTICONPALETTE = 2
};

typedef enum _UIA_CLASS {
    UIACC_KEYBOARDCORRECTION = 0,
    UIACC_END = 1
};

typedef enum _UNWIND_OP_CODES {
    UWOP_PUSH_NONVOL = 0,
    UWOP_ALLOC_LARGE = 1,
    UWOP_ALLOC_SMALL = 2,
    UWOP_SET_FPREG = 3,
    UWOP_SAVE_NONVOL = 4,
    UWOP_SAVE_NONVOL_FAR = 5,
    UWOP_EPILOG = 6,
    UWOP_SPARE_CODE = 7,
    UWOP_SAVE_XMM128 = 8,
    UWOP_SAVE_XMM128_FAR = 9,
    UWOP_PUSH_MACHFRAME = 10
};

typedef enum _URLZONEREG {
    URLZONEREG_DEFAULT = 0,
    URLZONEREG_HKLM = 1,
    URLZONEREG_HKCU = 2
};

typedef enum _USER_ACTIVITY_PRESENCE {
    PowerUserPresent = 0,
    PowerUserNotPresent = 1,
    PowerUserInactive = 2,
    PowerUserMaximum = 3,
    PowerUserInvalid = 3
};

typedef enum _USER_MARSHAL_CB_TYPE {
    USER_MARSHAL_CB_BUFFER_SIZE = 0,
    USER_MARSHAL_CB_MARSHALL = 1,
    USER_MARSHAL_CB_UNMARSHALL = 2,
    USER_MARSHAL_CB_FREE = 3
};

typedef enum _VERIFIER_RULE_CLASS_ID {
    VrfSpecialPoolRuleClass = 0,
    VrfForceIrqlRuleClass = 1,
    VrfAllocationFailuresRuleClass = 2,
    VrfTrackingPoolAllocationsRuleClass = 3,
    VrfIORuleClass = 4,
    VrfDeadlockPreventionRuleClass = 5,
    VrfEnhancedIORuleClass = 6,
    VrfDMARuleClass = 7,
    VrfSecurityRuleClass = 8,
    VrfForcePendingIORequestRuleClass = 9,
    VrfIRPTrackingRuleClass = 10,
    VrfMiscellaneousRuleClass = 11,
    VrfMoreDebuggingRuleClass = 12,
    VrfMDLInvariantStackRuleClass = 13,
    VrfMDLInvariantDriverRuleClass = 14,
    VrfPowerDelayFuzzingRuleClass = 15,
    VrfPortMiniportRuleClass = 16,
    VrfStandardDDIRuleClass = 17,
    VrfAutoFailRuleClass = 18,
    VrfAdditionalDDIRuleClass = 19,
    VrfRuleClassBase = 20,
    VrfNdisWifiRuleClass = 21,
    VrfDriverLoggingRuleClass = 22,
    VrfSyncDelayFuzzingRuleClass = 23,
    VrfVMSwitchingRuleClass = 24,
    VrfCodeIntegrityRuleClass = 25,
    VrfBelow4GBAllocationRuleClass = 26,
    VrfProcessorBranchTraceRuleClass = 27,
    VrfAdvancedMMRuleClass = 28,
    VrfExtendingXDVTimeLimit = 29,
    VrfSystemBIOSRuleClass = 30,
    VrfHardwareRuleClass = 31,
    VrfStateSepRuleClass = 32,
    VrfWDFRuleClass = 33,
    VrfMoreIrqlRuleClass = 34,
    ReservedForDVRF35 = 35,
    ReservedForDVRF36 = 36,
    ReservedForDVRF37 = 37,
    ReservedForDVRF38 = 38,
    ReservedForDVRF39 = 39,
    ReservedForDVRF40 = 40,
    ReservedForDVRF41 = 41,
    ReservedForDVRF42 = 42,
    ReservedForDVRF43 = 43,
    ReservedForDVRF44 = 44,
    ReservedForDVRF45 = 45,
    ReservedForDVRF46 = 46,
    ReservedForDVRF47 = 47,
    ReservedForDVRF48 = 48,
    ReservedForDVRF49 = 49,
    ReservedForDVRF50 = 50,
    ReservedForDVRF51 = 51,
    ReservedForDVRF52 = 52,
    ReservedForDVRF53 = 53,
    ReservedForDVRF54 = 54,
    ReservedForDVRF55 = 55,
    ReservedForDVRF56 = 56,
    ReservedForDVRF57 = 57,
    ReservedForDVRF58 = 58,
    ReservedForDVRF59 = 59,
    ReservedForDVRF60 = 60,
    ReservedForDVRF61 = 61,
    ReservedForDVRF62 = 62,
    ReservedForDVRF63 = 63,
    VrfRuleClassSizeMax = 64
};

typedef enum _VIRTUAL_MEMORY_INFORMATION_CLASS {
    VmPrefetchInformation = 0,
    VmPagePriorityInformation = 1,
    VmCfgCallTargetInformation = 2,
    VmPageDirtyStateInformation = 3,
    VmImageHotPatchInformation = 4
};

typedef enum _VIRTUAL_STORAGE_BEHAVIOR_CODE {
    VirtualStorageBehaviorUndefined = 0,
    VirtualStorageBehaviorCacheWriteThrough = 1,
    VirtualStorageBehaviorCacheWriteBack = 2
};

typedef enum _WAIT_TYPE {
    WaitAll = 0,
    WaitAny = 1,
    WaitNotification = 2,
    WaitDequeue = 3
};

typedef enum _WATCHDOG_HANDLER_ACTION {
    WdActionSetTimeoutValue = 0,
    WdActionQueryTimeoutValue = 1,
    WdActionResetTimer = 2,
    WdActionStopTimer = 3,
    WdActionStartTimer = 4,
    WdActionSetTriggerAction = 5,
    WdActionQueryTriggerAction = 6,
    WdActionQueryState = 7,
    WdActionSleep = 8,
    WdActionWake = 9,
    WdActionMarkHiberPhase = 10
};

typedef enum _WATCHDOG_INFORMATION_CLASS {
    WdInfoTimeoutValue = 0,
    WdInfoResetTimer = 1,
    WdInfoStopTimer = 2,
    WdInfoStartTimer = 3,
    WdInfoTriggerAction = 4,
    WdInfoState = 5,
    WdInfoTriggerReset = 6,
    WdInfoNop = 7,
    WdInfoGeneratedLastReset = 8,
    WdInfoInvalid = 9
};

typedef enum _WINSTATIONINFOCLASS {
    WinStationCreateData = 0,
    WinStationConfiguration = 1,
    WinStationPdParams = 2,
    WinStationWd = 3,
    WinStationPd = 4,
    WinStationPrinter = 5,
    WinStationClient = 6,
    WinStationModules = 7,
    WinStationInformation = 8,
    WinStationTrace = 9,
    WinStationBeep = 10,
    WinStationEncryptionOff = 11,
    WinStationEncryptionPerm = 12,
    WinStationNtSecurity = 13,
    WinStationUserToken = 14,
    WinStationUnused1 = 15,
    WinStationVideoData = 16,
    WinStationInitialProgram = 17,
    WinStationCd = 18,
    WinStationSystemTrace = 19,
    WinStationVirtualData = 20,
    WinStationClientData = 21,
    WinStationSecureDesktopEnter = 22,
    WinStationSecureDesktopExit = 23,
    WinStationLoadBalanceSessionTarget = 24,
    WinStationLoadIndicator = 25,
    WinStationShadowInfo = 26,
    WinStationDigProductId = 27,
    WinStationLockedState = 28,
    WinStationRemoteAddress = 29,
    WinStationIdleTime = 30,
    WinStationLastReconnectType = 31,
    WinStationDisallowAutoReconnect = 32,
    WinStationMprNotifyInfo = 33,
    WinStationExecSrvSystemPipe = 34,
    WinStationSmartCardAutoLogon = 35,
    WinStationIsAdminLoggedOn = 36,
    WinStationReconnectedFromId = 37,
    WinStationEffectsPolicy = 38,
    WinStationType = 39,
    WinStationInformationEx = 40,
    WinStationValidationInfo = 41
};

typedef enum _WINSTATIONSTATECLASS {
    State_Active = 0,
    State_Connected = 1,
    State_ConnectQuery = 2,
    State_Shadow = 3,
    State_Disconnected = 4,
    State_Idle = 5,
    State_Listen = 6,
    State_Reset = 7,
    State_Down = 8,
    State_Init = 9
};

typedef enum _WINSTATIONUPDATECFGCLASS {
    WINSTACFG_LEGACY = 0,
    WINSTACFG_SESSDIR = 1
};

typedef enum _WNF_DATA_SCOPE {
    WnfDataScopeSystem = 0,
    WnfDataScopeSession = 1,
    WnfDataScopeUser = 2,
    WnfDataScopeProcess = 3,
    WnfDataScopeMachine = 4
};

typedef enum _WNF_STATE_NAME_INFORMATION {
    WnfInfoStateNameExist = 0,
    WnfInfoSubscribersPresent = 1,
    WnfInfoIsQuiescent = 2
};

typedef enum _WNF_STATE_NAME_LIFETIME {
    WnfWellKnownStateName = 0,
    WnfPermanentStateName = 1,
    WnfPersistentStateName = 2,
    WnfTemporaryStateName = 3
};

typedef enum _WORKERFACTORYINFOCLASS {
    WorkerFactoryTimeout = 0,
    WorkerFactoryRetryTimeout = 1,
    WorkerFactoryIdleTimeout = 2,
    WorkerFactoryBindingCount = 3,
    WorkerFactoryThreadMinimum = 4,
    WorkerFactoryThreadMaximum = 5,
    WorkerFactoryPaused = 6,
    WorkerFactoryBasicInformation = 7,
    WorkerFactoryAdjustThreadGoal = 8,
    WorkerFactoryCallbackType = 9,
    WorkerFactoryStackInformation = 10,
    WorkerFactoryThreadBasePriority = 11,
    WorkerFactoryTimeoutWaiters = 12,
    WorkerFactoryFlags = 13,
    WorkerFactoryThreadSoftMaximum = 14,
    MaxWorkerFactoryInfoClass = 15
};

typedef enum _WORKER_FACTORY_CALLBACK_CLASS {
    WorkerFactoryCallbackNormal = 0,
    WorkerFactoryCallbackLongRunning = 1,
    WorkerFactoryCallbackIndependent = 2,
    WorkerFactoryCallbackDetectedUnrecoverableError = 3
};

typedef enum _WOW64_FUNCTION_CODE64 {
    WOW64_FUNCTION_NOP = 0,
    WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
    WOW64_FUNCTION_CPU_TURBO_THUNK_CONTROL = 2,
    WOW64_FUNCTION_CPU_CFG_DISPATCH_CONTROL = 3,
    WOW64_FUNCTION_CPU_OPTIMIZE_CHPE_IMPORT_THUNKS = 4,
    WOW64_FUNCTION_MAXIMUM = 5
};

typedef enum _WRITE_CACHE_CHANGE {
    WriteCacheChangeUnknown = 0,
    WriteCacheNotChangeable = 1,
    WriteCacheChangeable = 2
};

typedef enum _WRITE_CACHE_ENABLE {
    WriteCacheEnableUnknown = 0,
    WriteCacheDisabled = 1,
    WriteCacheEnabled = 2
};

typedef enum _WRITE_CACHE_TYPE {
    WriteCacheTypeUnknown = 0,
    WriteCacheTypeNone = 1,
    WriteCacheTypeWriteBack = 2,
    WriteCacheTypeWriteThrough = 3
};

typedef enum _WRITE_THROUGH {
    WriteThroughUnknown = 0,
    WriteThroughNotSupported = 1,
    WriteThroughSupported = 2
};

typedef enum __MIDL_IAuthenticateEx_0001 {
    AUTHENTICATEF_PROXY = 1,
    AUTHENTICATEF_BASIC = 2,
    AUTHENTICATEF_HTTP = 4
};

typedef enum __MIDL_IBindStatusCallbackEx_0001 {
    BINDF2_DISABLEBASICOVERHTTP = 1,
    BINDF2_DISABLEAUTOCOOKIEHANDLING = 2,
    BINDF2_READ_DATA_GREATER_THAN_4GB = 4,
    BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID = 8,
    BINDF2_SETDOWNLOADMODE = 32,
    BINDF2_DISABLE_HTTP_REDIRECT_CACHING = 64,
    BINDF2_KEEP_CALLBACK_MODULE_LOADED = 128,
    BINDF2_ALLOW_PROXY_CRED_PROMPT = 256,
    BINDF2_RESERVED_17 = 512,
    BINDF2_RESERVED_16 = 1024,
    BINDF2_RESERVED_15 = 2048,
    BINDF2_RESERVED_14 = 4096,
    BINDF2_RESERVED_13 = 8192,
    BINDF2_RESERVED_12 = 16384,
    BINDF2_RESERVED_11 = 0x8000,
    BINDF2_RESERVED_10 = 0x10000,
    BINDF2_RESERVED_F = 0x20000,
    BINDF2_RESERVED_E = 0x40000,
    BINDF2_RESERVED_D = 0x80000,
    BINDF2_RESERVED_C = 0x100000,
    BINDF2_RESERVED_B = 0x200000,
    BINDF2_RESERVED_A = 0x400000,
    BINDF2_RESERVED_9 = 0x800000,
    BINDF2_RESERVED_8 = 0x1000000,
    BINDF2_RESERVED_7 = 0x2000000,
    BINDF2_RESERVED_6 = 0x4000000,
    BINDF2_RESERVED_5 = 0x8000000,
    BINDF2_RESERVED_4 = 0x10000000,
    BINDF2_RESERVED_3 = 0x20000000,
    BINDF2_RESERVED_2 = 0x40000000,
    BINDF2_RESERVED_1 = -2147483648
};

typedef enum __MIDL_IBindStatusCallback_0001 {
    BINDVERB_GET = 0,
    BINDVERB_POST = 1,
    BINDVERB_PUT = 2,
    BINDVERB_CUSTOM = 3,
    BINDVERB_RESERVED1 = 4
};

typedef enum __MIDL_IBindStatusCallback_0002 {
    BINDINFOF_URLENCODESTGMEDDATA = 1,
    BINDINFOF_URLENCODEDEXTRAINFO = 2
};

typedef enum __MIDL_IBindStatusCallback_0003 {
    BINDF_ASYNCHRONOUS = 1,
    BINDF_ASYNCSTORAGE = 2,
    BINDF_NOPROGRESSIVERENDERING = 4,
    BINDF_OFFLINEOPERATION = 8,
    BINDF_GETNEWESTVERSION = 16,
    BINDF_NOWRITECACHE = 32,
    BINDF_NEEDFILE = 64,
    BINDF_PULLDATA = 128,
    BINDF_IGNORESECURITYPROBLEM = 256,
    BINDF_RESYNCHRONIZE = 512,
    BINDF_HYPERLINK = 1024,
    BINDF_NO_UI = 2048,
    BINDF_SILENTOPERATION = 4096,
    BINDF_PRAGMA_NO_CACHE = 8192,
    BINDF_GETCLASSOBJECT = 16384,
    BINDF_RESERVED_1 = 0x8000,
    BINDF_FREE_THREADED = 0x10000,
    BINDF_DIRECT_READ = 0x20000,
    BINDF_FORMS_SUBMIT = 0x40000,
    BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
    BINDF_FROMURLMON = 0x100000,
    BINDF_FWD_BACK = 0x200000,
    BINDF_PREFERDEFAULTHANDLER = 0x400000,
    BINDF_ENFORCERESTRICTED = 0x800000,
    BINDF_RESERVED_2 = -2147483648,
    BINDF_RESERVED_3 = 0x1000000,
    BINDF_RESERVED_4 = 0x2000000,
    BINDF_RESERVED_5 = 0x4000000,
    BINDF_RESERVED_6 = 0x8000000,
    BINDF_RESERVED_7 = 0x40000000,
    BINDF_RESERVED_8 = 0x20000000
};

typedef enum __MIDL_IBindStatusCallback_0004 {
    URL_ENCODING_NONE = 0,
    URL_ENCODING_ENABLE_UTF8 = 0x10000000,
    URL_ENCODING_DISABLE_UTF8 = 0x20000000
};

typedef enum __MIDL_IBindStatusCallback_0005 {
    BINDINFO_OPTIONS_WININETFLAG = 0x10000,
    BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
    BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
    BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
    BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
    BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
    BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
    BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
    BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
    BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
    BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
    BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
    BINDINFO_OPTIONS_ALLOWCONNECTDATA = 0x20000000,
    BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
    BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648
};

typedef enum __MIDL_IBindStatusCallback_0006 {
    BSCF_FIRSTDATANOTIFICATION = 1,
    BSCF_INTERMEDIATEDATANOTIFICATION = 2,
    BSCF_LASTDATANOTIFICATION = 4,
    BSCF_DATAFULLYAVAILABLE = 8,
    BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
    BSCF_SKIPDRAINDATAFORFILEURLS = 32,
    BSCF_64BITLENGTHDOWNLOAD = 64
};

typedef enum __MIDL_ICodeInstall_0001 {
    CIP_DISK_FULL = 0,
    CIP_ACCESS_DENIED = 1,
    CIP_NEWER_VERSION_EXISTS = 2,
    CIP_OLDER_VERSION_EXISTS = 3,
    CIP_NAME_CONFLICT = 4,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
    CIP_UNSAFE_TO_ABORT = 7,
    CIP_NEED_REBOOT = 8,
    CIP_NEED_REBOOT_UI_PERMISSION = 9
};

typedef enum __MIDL_IGetBindHandle_0001 {
    BINDHANDLETYPES_APPCACHE = 0,
    BINDHANDLETYPES_DEPENDENCY = 1,
    BINDHANDLETYPES_COUNT = 2
};

typedef enum __MIDL_IInternetSecurityManager_0001 {
    PUAF_DEFAULT = 0,
    PUAF_NOUI = 1,
    PUAF_ISFILE = 2,
    PUAF_WARN_IF_DENIED = 4,
    PUAF_FORCEUI_FOREGROUND = 8,
    PUAF_CHECK_TIFS = 16,
    PUAF_DONTCHECKBOXINDIALOG = 32,
    PUAF_TRUSTED = 64,
    PUAF_ACCEPT_WILDCARD_SCHEME = 128,
    PUAF_ENFORCERESTRICTED = 256,
    PUAF_NOSAVEDFILECHECK = 512,
    PUAF_REQUIRESAVEDFILECHECK = 1024,
    PUAF_DONT_USE_CACHE = 4096,
    PUAF_RESERVED1 = 8192,
    PUAF_RESERVED2 = 16384,
    PUAF_LMZ_UNLOCKED = 0x10000,
    PUAF_LMZ_LOCKED = 0x20000,
    PUAF_DEFAULTZONEPOL = 0x40000,
    PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
    PUAF_NOUIIFLOCKED = 0x100000,
    PUAF_DRAGPROTOCOLCHECK = 0x200000
};

typedef enum __MIDL_IInternetSecurityManager_0002 {
    PUAFOUT_DEFAULT = 0,
    PUAFOUT_ISLOCKZONEPOLICY = 1
};

typedef enum __MIDL_IInternetSecurityManager_0003 {
    SZM_CREATE = 0,
    SZM_DELETE = 1
};

typedef enum __MIDL_IInternetZoneManager_0001 {
    MAX_ZONE_PATH = 260,
    MAX_ZONE_DESCRIPTION = 200
};

typedef enum __MIDL_IInternetZoneManager_0002 {
    ZAFLAGS_CUSTOM_EDIT = 1,
    ZAFLAGS_ADD_SITES = 2,
    ZAFLAGS_REQUIRE_VERIFICATION = 4,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
    ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
    ZAFLAGS_NO_UI = 32,
    ZAFLAGS_SUPPORTS_VERIFICATION = 64,
    ZAFLAGS_UNC_AS_INTRANET = 128,
    ZAFLAGS_DETECT_INTRANET = 256,
    ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
    ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
    ZAFLAGS_NO_CACHE = 0x40000
};

typedef enum __MIDL_IMonikerProp_0001 {
    MIMETYPEPROP = 0,
    USE_SRC_URL = 1,
    CLASSIDPROP = 2,
    TRUSTEDDOWNLOADPROP = 3,
    POPUPLEVELPROP = 4
};

typedef enum __MIDL_IOleDocument_0001 {
    DOCMISC_CANCREATEMULTIPLEVIEWS = 1,
    DOCMISC_SUPPORTCOMPLEXRECTANGLES = 2,
    DOCMISC_CANTOPENEDIT = 4,
    DOCMISC_NOFILESUPPORT = 8
};

typedef enum __MIDL_IPrint_0001 {
    PRINTFLAG_MAYBOTHERUSER = 1,
    PRINTFLAG_PROMPTUSER = 2,
    PRINTFLAG_USERMAYCHANGEPRINTER = 4,
    PRINTFLAG_RECOMPOSETODEVICE = 8,
    PRINTFLAG_DONTACTUALLYPRINT = 16,
    PRINTFLAG_FORCEPROPERTIES = 32,
    PRINTFLAG_PRINTTOFILE = 64
};

typedef enum __MIDL_IUri_0001 {
    Uri_PROPERTY_ABSOLUTE_URI = 0,
    Uri_PROPERTY_STRING_START = 0,
    Uri_PROPERTY_AUTHORITY = 1,
    Uri_PROPERTY_DISPLAY_URI = 2,
    Uri_PROPERTY_DOMAIN = 3,
    Uri_PROPERTY_EXTENSION = 4,
    Uri_PROPERTY_FRAGMENT = 5,
    Uri_PROPERTY_HOST = 6,
    Uri_PROPERTY_PASSWORD = 7,
    Uri_PROPERTY_PATH = 8,
    Uri_PROPERTY_PATH_AND_QUERY = 9,
    Uri_PROPERTY_QUERY = 10,
    Uri_PROPERTY_RAW_URI = 11,
    Uri_PROPERTY_SCHEME_NAME = 12,
    Uri_PROPERTY_USER_INFO = 13,
    Uri_PROPERTY_USER_NAME = 14,
    Uri_PROPERTY_STRING_LAST = 14,
    Uri_PROPERTY_HOST_TYPE = 15,
    Uri_PROPERTY_DWORD_START = 15,
    Uri_PROPERTY_PORT = 16,
    Uri_PROPERTY_SCHEME = 17,
    Uri_PROPERTY_ZONE = 18,
    Uri_PROPERTY_DWORD_LAST = 18
};

typedef enum __MIDL_IUri_0002 {
    Uri_HOST_UNKNOWN = 0,
    Uri_HOST_DNS = 1,
    Uri_HOST_IPV4 = 2,
    Uri_HOST_IPV6 = 3,
    Uri_HOST_IDN = 4
};

typedef enum __MIDL___MIDL_itf_shpriv_0000_0033_0001 {
    NIE_NULL = 0,
    NIE_MouseMove = 1,
    NIE_MouseDown = 2,
    NIE_MouseUp = 3,
    NIE_MouseClick = 4,
    NIE_MouseDoubleClick = 5,
    NIE_ContextMenu = 6,
    NIE_KeyDown = 7,
    NIE_KeyUp = 8,
    NIE_Tooltip = 9,
    NIE_Reorder = 10
};

typedef enum __MIDL___MIDL_itf_shpriv_0000_0033_0002 {
    NIEMB_NULL = 0,
    NIEMB_Left = 1,
    NIEMB_Middle = 2,
    NIEMB_Right = 3
};

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0001 {
    GVS_NORMAL = 0,
    GVS_USE_SPLASHSCREEN_VISUAL = 1,
    GVS_USE_SPLASHSCREEN_VISUAL_ONCE = 2
};

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0002 {
    MCF_FORCE = 0,
    MCF_IF_NOT_VISIBLE = 1
};

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0003 {
    IABF_NONE = 0,
    IABF_INVALID_AUTOGLOM_DESTINATION = 1,
    IABF_AVOID_VIEW_FOR_SWITCH = 2,
    IABF_EXEMPT_FROM_BACKSTACK_TRIM = 4,
    IABF_FORCE_TERMINATE_ON_CLOSE = -2147483648
};

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0004 {
    GSF_LOCKSCREENACTIVATION = 1,
    GSF_ACTIVATION = 2
};

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0318_0005 {
    IAQ_WIN8_WINDOWING_BEHAVIOR = 0,
    IAQ_REQUIRES_1366_PORTRAIT_MIN_HEIGHT = 1,
    IAQ_SHOW_ACTIONS_MENU = 2,
    IAQ_USE_WIN8X_COMPATIBILITY_SCALING = 3,
    IAQ_FULLSCREEN_8X_LEGACY_APP = 4,
    IAQ_WIN81_WINDOWING_BEHAVIOR = 5,
    IAQ_DONT_CACHE_TITLE_BAR_SETTINGS = 6,
    IAQ_USE_PREFERRED_STANDALONE_SIZE = 7
};

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001 {
    NEC_LOW = 0,
    NEC_MEDIUM = 1,
    NEC_HIGH = 2
};

typedef enum __MIDL___MIDL_itf_winrtfileapi_0000_0036_0001 {
    PIL_MANAGED_BY_APPLICATION = 0,
    PIL_MOST_RECENTLY_USED = 1,
    PIL_SYSTEM = 2,
    PIL_CURRENT_WORKING_DIRECTORY = 3
};

typedef enum __enative_startup_state {
    __uninitialized = 0,
    __initializing = 1,
    __initialized = 2
};

typedef enum __vc_attributes::aggregatableAttribute::type_e {
    never = 0,
    allowed = 1,
    always = 2
};

typedef enum __vc_attributes::event_receiverAttribute::type_e {
    native = 0,
    com = 1,
    managed = 2
};

typedef enum __vc_attributes::event_sourceAttribute::optimize_e {
    speed = 0,
    size = 1
};

typedef enum __vc_attributes::event_sourceAttribute::type_e {
    native = 0,
    com = 1,
    managed = 2
};

typedef enum __vc_attributes::helper_attributes::usageAttribute::usage_e {
    eAnyUsage = 0,
    eCoClassUsage = 1,
    eCOMInterfaceUsage = 2,
    eInterfaceUsage = 6,
    eMemberUsage = 8,
    eMethodUsage = 16,
    eInterfaceMethodUsage = 32,
    eInterfaceMemberUsage = 64,
    eCoClassMemberUsage = 128,
    eCoClassMethodUsage = 256,
    eGlobalMethodUsage = 768,
    eGlobalDataUsage = 1024,
    eClassUsage = 2048,
    eInterfaceParameterUsage = 4096,
    eMethodParameterUsage = 12288,
    eIDLModuleUsage = 16384,
    eAnonymousUsage = 0x8000,
    eTypedefUsage = 0x10000,
    eUnionUsage = 0x20000,
    eEnumUsage = 0x40000,
    eDefineTagUsage = 0x80000,
    eStructUsage = 0x100000,
    eLocalUsage = 0x200000,
    ePropertyUsage = 0x400000,
    eEventUsage = 0x800000,
    eTemplateUsage = 0x1000000,
    eModuleUsage = 0x1000000,
    eIllegalUsage = 0x2000000,
    eAsynchronousUsage = 0x4000000,
    eAnyIDLUsage = 0x3f7fff
};

typedef enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e {
    eBoolean = 0,
    eInteger = 1,
    eFloat = 2,
    eDouble = 3
};

typedef enum __vc_attributes::moduleAttribute::type_e {
    dll = 1,
    exe = 2,
    service = 3,
    unspecified = 4,
    EXE = 2,
    SERVICE = 3
};

typedef enum __vc_attributes::pointer_defaultAttribute::type_e {
    ptr = 0,
    ref = 1,
    unique = 2
};

typedef enum __vc_attributes::threadingAttribute::threading_e {
    apartment = 1,
    single = 2,
    free = 3,
    neutral = 4,
    both = 5
};

typedef enum _eFRAMEPARTS {
    iCAPTION = 0,
    iFRAMELEFT = 1,
    iFRAMERIGHT = 2,
    iFRAMEBOTTOM = 3
};

typedef enum _eNCWNDMETRECT {
    NCRC_WINDOW = 0,
    NCRC_CLIENT = 1,
    NCRC_UXCLIENT = 2,
    NCRC_CONTENT = 3,
    NCRC_MENUBAR = 4,
    NCRC_CAPTION = 5,
    NCRC_FRAMELEFT = 6,
    NCRC_FRAMERIGHT = 7,
    NCRC_FRAMEBOTTOM = 8,
    NCRC_CAPTIONTEXT = 9,
    NCRC_CLIENTEDGE = 10,
    NCRC_HSCROLL = 11,
    NCRC_VSCROLL = 12,
    NCRC_SIZEBOX = 13,
    NCRC_SYSBTN = 14,
    NCRC_CLOSEBTN = 15,
    NCRC_MINBTN = 16,
    NCRC_MAXBTN = 17,
    NCRC_HELPBTN = 18,
    NCRC_MDICLOSEBTN = 19,
    NCRC_MDIMINBTN = 20,
    NCRC_MDIMAXBTN = 21,
    NCRC_MDISYSBTN = 22,
    NCRC_MDIHELPBTN = 23,
    NCRC_LCUSTOM = 24,
    NCRC_RCUSTOM = 25,
    NCRC_COUNT = 26
};

typedef enum _system_handle_t {
    SYSTEM_HANDLE_FILE = 0,
    SYSTEM_HANDLE_SEMAPHORE = 1,
    SYSTEM_HANDLE_EVENT = 2,
    SYSTEM_HANDLE_MUTEX = 3,
    SYSTEM_HANDLE_PROCESS = 4,
    SYSTEM_HANDLE_TOKEN = 5,
    SYSTEM_HANDLE_SECTION = 6,
    SYSTEM_HANDLE_REG_KEY = 7,
    SYSTEM_HANDLE_THREAD = 8,
    SYSTEM_HANDLE_COMPOSITION_OBJECT = 9,
    SYSTEM_HANDLE_SOCKET = 10,
    SYSTEM_HANDLE_JOB = 11,
    SYSTEM_HANDLE_PIPE = 12,
    SYSTEM_HANDLE_MAX = 12,
    SYSTEM_HANDLE_INVALID = 255
};

typedef enum _tagACENUMOPTION {
    ACEO_NONE = 0,
    ACEO_MOSTRECENTFIRST = 1,
    ACEO_FIRSTUNUSED = 0x10000
};

typedef enum _tagAUTOCOMPLETELISTOPTIONS {
    ACLO_NONE = 0,
    ACLO_CURRENTDIR = 1,
    ACLO_MYCOMPUTER = 2,
    ACLO_DESKTOP = 4,
    ACLO_FAVORITES = 8,
    ACLO_FILESYSONLY = 16,
    ACLO_FILESYSDIRS = 32,
    ACLO_VIRTUALNAMESPACE = 64
};

typedef enum _tagAUTOCOMPLETEOPTIONS {
    ACO_NONE = 0,
    ACO_AUTOSUGGEST = 1,
    ACO_AUTOAPPEND = 2,
    ACO_SEARCH = 4,
    ACO_FILTERPREFIXES = 8,
    ACO_USETAB = 16,
    ACO_UPDOWNKEYDROPSLIST = 32,
    ACO_RTLREADING = 64,
    ACO_WORD_FILTER = 128,
    ACO_NOPREFIXFILTERING = 256
};

typedef enum _tagINTERNETFEATURELIST {
    FEATURE_OBJECT_CACHING = 0,
    FEATURE_ZONE_ELEVATION = 1,
    FEATURE_MIME_HANDLING = 2,
    FEATURE_MIME_SNIFFING = 3,
    FEATURE_WINDOW_RESTRICTIONS = 4,
    FEATURE_WEBOC_POPUPMANAGEMENT = 5,
    FEATURE_BEHAVIORS = 6,
    FEATURE_DISABLE_MK_PROTOCOL = 7,
    FEATURE_LOCALMACHINE_LOCKDOWN = 8,
    FEATURE_SECURITYBAND = 9,
    FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
    FEATURE_VALIDATE_NAVIGATE_URL = 11,
    FEATURE_RESTRICT_FILEDOWNLOAD = 12,
    FEATURE_ADDON_MANAGEMENT = 13,
    FEATURE_PROTOCOL_LOCKDOWN = 14,
    FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
    FEATURE_SAFE_BINDTOOBJECT = 16,
    FEATURE_UNC_SAVEDFILECHECK = 17,
    FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
    FEATURE_TABBED_BROWSING = 19,
    FEATURE_SSLUX = 20,
    FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
    FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
    FEATURE_FORCE_ADDR_AND_STATUS = 23,
    FEATURE_XMLHTTP = 24,
    FEATURE_DISABLE_TELNET_PROTOCOL = 25,
    FEATURE_FEEDS = 26,
    FEATURE_BLOCK_INPUT_PROMPTS = 27,
    FEATURE_ENTRY_COUNT = 28
};

typedef enum _tagOIBDG_FLAGS {
    OIBDG_APARTMENTTHREADED = 256,
    OIBDG_DATAONLY = 4096
};

typedef enum _tagPARSEACTION {
    PARSE_CANONICALIZE = 1,
    PARSE_FRIENDLY = 2,
    PARSE_SECURITY_URL = 3,
    PARSE_ROOTDOCUMENT = 4,
    PARSE_DOCUMENT = 5,
    PARSE_ANCHOR = 6,
    PARSE_ENCODE_IS_UNESCAPE = 7,
    PARSE_DECODE_IS_ESCAPE = 8,
    PARSE_PATH_FROM_URL = 9,
    PARSE_URL_FROM_PATH = 10,
    PARSE_MIME = 11,
    PARSE_SERVER = 12,
    PARSE_SCHEMA = 13,
    PARSE_SITE = 14,
    PARSE_DOMAIN = 15,
    PARSE_LOCATION = 16,
    PARSE_SECURITY_DOMAIN = 17,
    PARSE_ESCAPE = 18,
    PARSE_UNESCAPE = 19
};

typedef enum _tagPI_FLAGS {
    PI_PARSE_URL = 1,
    PI_FILTER_MODE = 2,
    PI_FORCE_ASYNC = 4,
    PI_USE_WORKERTHREAD = 8,
    PI_MIMEVERIFICATION = 16,
    PI_CLSIDLOOKUP = 32,
    PI_DATAPROGRESS = 64,
    PI_SYNCHRONOUS = 128,
    PI_APARTMENTTHREADED = 256,
    PI_CLASSINSTALL = 512,
    PI_PASSONBINDCTX = 8192,
    PI_NOMIMEHANDLER = 0x8000,
    PI_LOADAPPDIRECT = 16384,
    PD_FORCE_SWITCH = 0x10000,
    PI_PREFERDEFAULTHANDLER = 0x20000
};

typedef enum _tagPSUACTION {
    PSU_DEFAULT = 1,
    PSU_SECURITY_URL_ONLY = 2
};

typedef enum _tagQUERYOPTION {
    QUERY_EXPIRATION_DATE = 1,
    QUERY_TIME_OF_LAST_CHANGE = 2,
    QUERY_CONTENT_ENCODING = 3,
    QUERY_CONTENT_TYPE = 4,
    QUERY_REFRESH = 5,
    QUERY_RECOMBINE = 6,
    QUERY_CAN_NAVIGATE = 7,
    QUERY_USES_NETWORK = 8,
    QUERY_IS_CACHED = 9,
    QUERY_IS_INSTALLEDENTRY = 10,
    QUERY_IS_CACHED_OR_MAPPED = 11,
    QUERY_USES_CACHE = 12,
    QUERY_IS_SECURE = 13,
    QUERY_IS_SAFE = 14,
    QUERY_USES_HISTORYFOLDER = 15,
    QUERY_IS_CACHED_AND_USABLE_OFFLINE = 16
};

typedef enum _tagSHARE_EVENT {
    SHARE_EVT_ITEM_SHARED = 0,
    SHARE_EVT_ITEM_UNSHARED = 1,
    SHARE_EVT_ERR_ITEM_LOCATION = 2,
    SHARE_EVT_ERR_NO_WRITE_DAC = 3,
    SHARE_EVT_ERR_INHERITED_PERM = 4,
    SHARE_EVT_ERR_CORRUPTED_LIBRARY = 5,
    SHARE_EVT_ERR_EXCLUSION_FAILED = 6,
    SHARE_EVT_ERR_ROOTDRIVE = 7,
    SHARE_EVT_ERR_SYSTEM_LOCATION = 8,
    SHARE_EVT_ERR_FOLDER_UNAVAILABLE_SCOPE = 9,
    SHARE_EVT_WARN_PUBLISH_FAILED = 10,
    SHARE_EVT_WARN_UNPUBLISH_FAILED = 11,
    SHARE_EVT_WARN_UPDATE_FAILED = 12,
    SHARE_EVT_WARN_NOT_SUPPORTED_SCOPE = 13,
    SHARE_EVT_WARN_FILESYSTEM_ACLS_NOT_SUPPORTED = 14,
    SHARE_EVT_WARN_ITEM_FILTERED = 15
};

typedef enum ePROCTYPE {
    PRE = 0,
    DEF = 1,
    POST = 2
};

typedef enum eSYMBOLTOKENS {
    DST_RECTYPE = 0,
    DST_NAME = 1,
    DST_OWNERNAME = 2,
    DST_TYPE = 3,
    DST_VALUE = 4,
    DST_LOCALIZED = 5
};

typedef enum octd {
    OCTD_DOWN = 1,
    OCTD_DOWNBROADCAST = 2,
    OCTD_UP = -1
};

typedef enum optimize_e {
    speed = 0,
    size = 1
};

typedef enum std::_Uninitialized {
    _Noinit = 0
};

typedef enum tagACTIVATEFLAGS {
    ACTIVATE_WINDOWLESS = 1
};

typedef enum tagACTIVATIONTYPE {
    ACTIVATIONTYPE_UNCATEGORIZED = 0,
    ACTIVATIONTYPE_FROM_MONIKER = 1,
    ACTIVATIONTYPE_FROM_DATA = 2,
    ACTIVATIONTYPE_FROM_STORAGE = 4,
    ACTIVATIONTYPE_FROM_STREAM = 8,
    ACTIVATIONTYPE_FROM_FILE = 16
};

typedef enum tagADVF {
    ADVF_NODATA = 1,
    ADVF_PRIMEFIRST = 2,
    ADVF_ONLYONCE = 4,
    ADVF_DATAONSTOP = 64,
    ADVFCACHE_NOHANDLER = 8,
    ADVFCACHE_FORCEBUILTIN = 16,
    ADVFCACHE_ONSAVE = 32
};

typedef enum tagAPP_RESOLVER_ITEM_FILTER_FLAGS {
    ARIFF_NONE = 0,
    ARIFF_REQUIRE_PREVENT_PINNING_NOT_SET = 1,
    ARIFF_REQUIRE_PINNABLE = 2
};

typedef enum tagAR_STATE {
    AR_ENABLED = 0,
    AR_DISABLED = 1,
    AR_SUPPRESSED = 2,
    AR_REMOTESESSION = 4,
    AR_MULTIMON = 8,
    AR_NOSENSOR = 16,
    AR_NOT_SUPPORTED = 32,
    AR_DOCKED = 64,
    AR_LAPTOP = 128
};

typedef enum tagApplicationType {
    ServerApplication = 0,
    LibraryApplication = 1
};

typedef enum tagAspectInfoFlag {
    DVASPECTINFOFLAG_CANOPTIMIZE = 1
};

typedef enum tagBANDSITECID {
    BSID_BANDADDED = 0,
    BSID_BANDREMOVED = 1
};

typedef enum tagBEGINLABELEDIT_DIRECTION_CONTEXT {
    BLE_NORMAL = 0,
    BLE_FORCE_LTR_CONTEXT = 1
};

typedef enum tagBINDSPEED {
    BINDSPEED_INDEFINITE = 1,
    BINDSPEED_MODERATE = 2,
    BINDSPEED_IMMEDIATE = 3
};

typedef enum tagBINDSTATUS {
    BINDSTATUS_FINDINGRESOURCE = 1,
    BINDSTATUS_CONNECTING = 2,
    BINDSTATUS_REDIRECTING = 3,
    BINDSTATUS_BEGINDOWNLOADDATA = 4,
    BINDSTATUS_DOWNLOADINGDATA = 5,
    BINDSTATUS_ENDDOWNLOADDATA = 6,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
    BINDSTATUS_INSTALLINGCOMPONENTS = 8,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
    BINDSTATUS_USINGCACHEDCOPY = 10,
    BINDSTATUS_SENDINGREQUEST = 11,
    BINDSTATUS_CLASSIDAVAILABLE = 12,
    BINDSTATUS_MIMETYPEAVAILABLE = 13,
    BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
    BINDSTATUS_BEGINSYNCOPERATION = 15,
    BINDSTATUS_ENDSYNCOPERATION = 16,
    BINDSTATUS_BEGINUPLOADDATA = 17,
    BINDSTATUS_UPLOADINGDATA = 18,
    BINDSTATUS_ENDUPLOADDATA = 19,
    BINDSTATUS_PROTOCOLCLASSID = 20,
    BINDSTATUS_ENCODING = 21,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
    BINDSTATUS_CLASSINSTALLLOCATION = 23,
    BINDSTATUS_DECODING = 24,
    BINDSTATUS_LOADINGMIMEHANDLER = 25,
    BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
    BINDSTATUS_FILTERREPORTMIMETYPE = 27,
    BINDSTATUS_CLSIDCANINSTANTIATE = 28,
    BINDSTATUS_IUNKNOWNAVAILABLE = 29,
    BINDSTATUS_DIRECTBIND = 30,
    BINDSTATUS_RAWMIMETYPE = 31,
    BINDSTATUS_PROXYDETECTING = 32,
    BINDSTATUS_ACCEPTRANGES = 33,
    BINDSTATUS_COOKIE_SENT = 34,
    BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
    BINDSTATUS_COOKIE_SUPPRESSED = 36,
    BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
    BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
    BINDSTATUS_COOKIE_STATE_REJECT = 39,
    BINDSTATUS_COOKIE_STATE_PROMPT = 40,
    BINDSTATUS_COOKIE_STATE_LEASH = 41,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
    BINDSTATUS_POLICY_HREF = 43,
    BINDSTATUS_P3P_HEADER = 44,
    BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
    BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
    BINDSTATUS_CACHECONTROL = 48,
    BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
    BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
    BINDSTATUS_PUBLISHERAVAILABLE = 51,
    BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
    BINDSTATUS_SSLUX_NAVBLOCKED = 53,
    BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 54,
    BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 55,
    BINDSTATUS_64BIT_PROGRESS = 56,
    BINDSTATUS_LAST = 56,
    BINDSTATUS_RESERVED_0 = 57,
    BINDSTATUS_RESERVED_1 = 58,
    BINDSTATUS_RESERVED_2 = 59,
    BINDSTATUS_RESERVED_3 = 60,
    BINDSTATUS_RESERVED_4 = 61,
    BINDSTATUS_RESERVED_5 = 62,
    BINDSTATUS_RESERVED_6 = 63,
    BINDSTATUS_RESERVED_7 = 64,
    BINDSTATUS_RESERVED_8 = 65,
    BINDSTATUS_RESERVED_9 = 66,
    BINDSTATUS_RESERVED_A = 67,
    BINDSTATUS_RESERVED_B = 68,
    BINDSTATUS_RESERVED_C = 69,
    BINDSTATUS_RESERVED_D = 70,
    BINDSTATUS_RESERVED_E = 71,
    BINDSTATUS_RESERVED_F = 72,
    BINDSTATUS_RESERVED_10 = 73,
    BINDSTATUS_RESERVED_11 = 74,
    BINDSTATUS_RESERVED_12 = 75,
    BINDSTATUS_RESERVED_13 = 76,
    BINDSTATUS_LAST_PRIVATE = 76
};

typedef enum tagBINDSTRING {
    BINDSTRING_HEADERS = 1,
    BINDSTRING_ACCEPT_MIMES = 2,
    BINDSTRING_EXTRA_URL = 3,
    BINDSTRING_LANGUAGE = 4,
    BINDSTRING_USERNAME = 5,
    BINDSTRING_PASSWORD = 6,
    BINDSTRING_UA_PIXELS = 7,
    BINDSTRING_UA_COLOR = 8,
    BINDSTRING_OS = 9,
    BINDSTRING_USER_AGENT = 10,
    BINDSTRING_ACCEPT_ENCODINGS = 11,
    BINDSTRING_POST_COOKIE = 12,
    BINDSTRING_POST_DATA_MIME = 13,
    BINDSTRING_URL = 14,
    BINDSTRING_IID = 15,
    BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
    BINDSTRING_PTR_BIND_CONTEXT = 17,
    BINDSTRING_XDR_ORIGIN = 18,
    BINDSTRING_DOWNLOADPATH = 19,
    BINDSTRING_ROOTDOC_URL = 20,
    BINDSTRING_INITIAL_FILENAME = 21,
    BINDSTRING_PROXY_USERNAME = 22,
    BINDSTRING_PROXY_PASSWORD = 23,
    BINDSTRING_ENTERPRISE_ID = 24,
    BINDSTRING_DOC_URL = 25,
    BINDSTRING_SAMESITE_COOKIE_LEVEL = 26
};

typedef enum tagBIND_FLAGS {
    BIND_MAYBOTHERUSER = 1,
    BIND_JUSTTESTEXISTENCE = 2
};

typedef enum tagBPASCODE {
    BPAS_START = 0,
    BPAS_INDETERMINATE = 1,
    BPAS_STOP = 2
};

typedef enum tagCALIBRATION_TYPE {
    CALIBRATION_TYPE_OEM = 1,
    CALIBRATION_TYPE_USER = 2,
    CALIBRATION_TYPE_TILT = 3,
    CALIBRATION_TYPE_MAX = -1
};

typedef enum tagCALLCONV {
    CC_FASTCALL = 0,
    CC_CDECL = 1,
    CC_MSCPASCAL = 2,
    CC_PASCAL = 2,
    CC_MACPASCAL = 3,
    CC_STDCALL = 4,
    CC_FPFASTCALL = 5,
    CC_SYSCALL = 6,
    CC_MPWCDECL = 7,
    CC_MPWPASCAL = 8,
    CC_MAX = 9
};

typedef enum tagCALLTYPE {
    CALLTYPE_TOPLEVEL = 1,
    CALLTYPE_NESTED = 2,
    CALLTYPE_ASYNC = 3,
    CALLTYPE_TOPLEVEL_CALLPENDING = 4,
    CALLTYPE_ASYNC_CALLPENDING = 5
};

typedef enum tagCHANGEKIND {
    CHANGEKIND_ADDMEMBER = 0,
    CHANGEKIND_DELETEMEMBER = 1,
    CHANGEKIND_SETNAMES = 2,
    CHANGEKIND_SETDOCUMENTATION = 3,
    CHANGEKIND_GENERAL = 4,
    CHANGEKIND_INVALIDATE = 5,
    CHANGEKIND_CHANGEFAILED = 6,
    CHANGEKIND_MAX = 7
};

typedef enum tagCLSCTX {
    CLSCTX_INPROC_SERVER = 1,
    CLSCTX_INPROC_HANDLER = 2,
    CLSCTX_LOCAL_SERVER = 4,
    CLSCTX_INPROC_SERVER16 = 8,
    CLSCTX_REMOTE_SERVER = 16,
    CLSCTX_INPROC_HANDLER16 = 32,
    CLSCTX_RESERVED1 = 64,
    CLSCTX_RESERVED2 = 128,
    CLSCTX_RESERVED3 = 256,
    CLSCTX_RESERVED4 = 512,
    CLSCTX_NO_CODE_DOWNLOAD = 1024,
    CLSCTX_RESERVED5 = 2048,
    CLSCTX_NO_CUSTOM_MARSHAL = 4096,
    CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
    CLSCTX_NO_FAILURE_LOG = 16384,
    CLSCTX_DISABLE_AAA = 0x8000,
    CLSCTX_ENABLE_AAA = 0x10000,
    CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
    CLSCTX_ACTIVATE_X86_SERVER = 0x40000,
    CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
    CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
    CLSCTX_ENABLE_CLOAKING = 0x100000,
    CLSCTX_APPCONTAINER = 0x400000,
    CLSCTX_ACTIVATE_AAA_AS_IU = 0x800000,
    CLSCTX_RESERVED6 = 0x1000000,
    CLSCTX_ACTIVATE_ARM32_SERVER = 0x2000000,
    CLSCTX_PS_DLL = -2147483648
};

typedef enum tagCOINIT {
    COINIT_APARTMENTTHREADED = 2,
    COINIT_MULTITHREADED = 0,
    COINIT_DISABLE_OLE1DDE = 4,
    COINIT_SPEED_OVER_MEMORY = 8
};

typedef enum tagCOINITBASE {
    COINITBASE_MULTITHREADED = 0
};

typedef enum tagCOMSD {
    SD_LAUNCHPERMISSIONS = 0,
    SD_ACCESSPERMISSIONS = 1,
    SD_LAUNCHRESTRICTIONS = 2,
    SD_ACCESSRESTRICTIONS = 3
};

typedef enum tagCONDITION_OPERATION {
    COP_IMPLICIT = 0,
    COP_EQUAL = 1,
    COP_NOTEQUAL = 2,
    COP_LESSTHAN = 3,
    COP_GREATERTHAN = 4,
    COP_LESSTHANOREQUAL = 5,
    COP_GREATERTHANOREQUAL = 6,
    COP_VALUE_STARTSWITH = 7,
    COP_VALUE_ENDSWITH = 8,
    COP_VALUE_CONTAINS = 9,
    COP_VALUE_NOTCONTAINS = 10,
    COP_DOSWILDCARDS = 11,
    COP_WORD_EQUAL = 12,
    COP_WORD_STARTSWITH = 13,
    COP_APPLICATION_SPECIFIC = 14
};

typedef enum tagCONDITION_TYPE {
    CT_AND_CONDITION = 0,
    CT_OR_CONDITION = 1,
    CT_NOT_CONDITION = 2,
    CT_LEAF_CONDITION = 3
};

typedef enum tagCOWAIT_FLAGS {
    COWAIT_DEFAULT = 0,
    COWAIT_WAITALL = 1,
    COWAIT_ALERTABLE = 2,
    COWAIT_INPUTAVAILABLE = 4,
    COWAIT_DISPATCH_CALLS = 8,
    COWAIT_DISPATCH_WINDOW_MESSAGES = 16
};

typedef enum tagCS_COLUMN_SET {
    COLSET_ALL = 0,
    COLSET_VISIBLE = 1,
    COLSET_COLUMNID = 2
};

typedef enum tagCS_COLUMN_WIDTH_TYPE {
    COLWT_CURRENT = 0,
    COLWT_DEFAULT = 1,
    COLWT_MINIMUM = 2,
    COLWT_IDEAL = 3
};

typedef enum tagCTRLINFO {
    CTRLINFO_EATS_RETURN = 1,
    CTRLINFO_EATS_ESCAPE = 2
};

typedef enum tagDATADIR {
    DATADIR_GET = 1,
    DATADIR_SET = 2
};

typedef enum tagDCOM_CALL_STATE {
    DCOM_NONE = 0,
    DCOM_CALL_COMPLETE = 1,
    DCOM_CALL_CANCELED = 2
};

typedef enum tagDESCKIND {
    DESCKIND_NONE = 0,
    DESCKIND_FUNCDESC = 1,
    DESCKIND_VARDESC = 2,
    DESCKIND_TYPECOMP = 3,
    DESCKIND_IMPLICITAPPOBJ = 4,
    DESCKIND_MAX = 5
};

typedef enum tagDESKBANDCID {
    DBID_BANDINFOCHANGED = 0,
    DBID_SHOWONLY = 1,
    DBID_MAXIMIZEBAND = 2,
    DBID_PUSHCHEVRON = 3,
    DBID_DELAYINIT = 4,
    DBID_FINISHINIT = 5,
    DBID_SETWINDOWTHEME = 6,
    DBID_PERMITAUTOHIDE = 7
};

typedef enum tagDESTCATTYPE {
    DCT_CUSTOM = 0,
    DCT_KNOWN = 1,
    DCT_TASKS = 2
};

typedef enum tagDIGITIZER_CONTACT_SOURCE {
    DCS_TOUCH = 1,
    DCS_PEN = 2
};

typedef enum tagDIGITIZER_CONTACT_TYPE {
    DCT_MOVE_HOVER = 1,
    DCT_MOVE_DOWN = 2,
    DCT_END = 3
};

typedef enum tagDISCARDCACHE {
    DISCARDCACHE_SAVEIFDIRTY = 0,
    DISCARDCACHE_NOSAVE = 1
};

typedef enum tagDISPATCHNOTIFY_APCCONTEXT {
    DISPATCHNOTIFY_APCCONTEXT_COREMESSAGING = 0,
    DISPATCHNOTIFY_APCCONTEXT_USER = 1,
    DISPATCHNOTIFY_APCCONTEXT_ENDBATCH = 2
};

typedef enum tagDISPATCHNOTIFY_WPARAM {
    DISPATCHNOTIFY_WPARAM_INPUT = 0,
    DISPATCHNOTIFY_WPARAM_COMPLETION = 1,
    DISPATCHNOTIFY_WPARAM_ERROR_POST = 2,
    DISPATCHNOTIFY_WPARAM_ERROR_TEB1 = 3,
    DISPATCHNOTIFY_WPARAM_ERROR_TEB2 = 4
};

typedef enum tagDISPLAY_SUPPORTED_ORIENTATIONS {
    DSO_NONE = 0,
    DSO_0 = 1,
    DSO_90 = 2,
    DSO_180 = 4,
    DSO_270 = 8
};

typedef enum tagDOCHOSTUIDBLCLKDispatch {
    docHostUIDblClkDEFAULT = 0,
    docHostUIDblClkSHOWPROPERTIES = 1,
    docHostUIDblClkSHOWCODE = 2
};

typedef enum tagDOMNodeType {
    NODE_INVALID = 0,
    NODE_ELEMENT = 1,
    NODE_ATTRIBUTE = 2,
    NODE_TEXT = 3,
    NODE_CDATA_SECTION = 4,
    NODE_ENTITY_REFERENCE = 5,
    NODE_ENTITY = 6,
    NODE_PROCESSING_INSTRUCTION = 7,
    NODE_COMMENT = 8,
    NODE_DOCUMENT = 9,
    NODE_DOCUMENT_TYPE = 10,
    NODE_DOCUMENT_FRAGMENT = 11,
    NODE_NOTATION = 12
};

typedef enum tagDVASPECT {
    DVASPECT_CONTENT = 1,
    DVASPECT_THUMBNAIL = 2,
    DVASPECT_ICON = 4,
    DVASPECT_DOCPRINT = 8
};

typedef enum tagDVASPECT2 {
    DVASPECT_OPAQUE = 16,
    DVASPECT_TRANSPARENT = 32
};

typedef enum tagDocHostUIFlagDispatch {
    docHostUIFlagDIALOG = 1,
    docHostUIFlagDISABLE_HELP_MENU = 2,
    docHostUIFlagNO3DBORDER = 4,
    docHostUIFlagSCROLL_NO = 8,
    docHostUIFlagDISABLE_SCRIPT_INACTIVE = 16,
    docHostUIFlagOPENNEWWIN = 32,
    docHostUIFlagDISABLE_OFFSCREEN = 64,
    docHostUIFlagFLAT_SCROLLBAR = 128,
    docHostUIFlagDIV_BLOCKDEFAULT = 256,
    docHostUIFlagACTIVATE_CLIENTHIT_ONLY = 512
};

typedef enum tagEDGY_LOCATION {
    EDGY_LOCATION_LEFT = 0,
    EDGY_LOCATION_TOP = 1,
    EDGY_LOCATION_RIGHT = 2,
    EDGY_LOCATION_BOTTOM = 3
};

typedef enum tagENUMVIEWPROPFLAG {
    EVPF_NO_UNMATCH_ASPECRATIO = 1,
    EVPF_DISTINCT_RESOLUTION = 2
};

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES {
    EOAC_NONE = 0,
    EOAC_MUTUAL_AUTH = 1,
    EOAC_STATIC_CLOAKING = 32,
    EOAC_DYNAMIC_CLOAKING = 64,
    EOAC_ANY_AUTHORITY = 128,
    EOAC_MAKE_FULLSIC = 256,
    EOAC_DEFAULT = 2048,
    EOAC_SECURE_REFS = 2,
    EOAC_ACCESS_CONTROL = 4,
    EOAC_APPID = 8,
    EOAC_DYNAMIC = 16,
    EOAC_REQUIRE_FULLSIC = 512,
    EOAC_AUTO_IMPERSONATE = 1024,
    EOAC_DISABLE_AAA = 4096,
    EOAC_NO_CUSTOM_MARSHAL = 8192,
    EOAC_RESERVED1 = 16384
};

typedef enum tagEXTCONN {
    EXTCONN_STRONG = 1,
    EXTCONN_WEAK = 2,
    EXTCONN_CALLABLE = 4
};

typedef enum tagExtendedErrorParamTypes {
    eeptAnsiString = 1,
    eeptUnicodeString = 2,
    eeptLongVal = 3,
    eeptShortVal = 4,
    eeptPointerVal = 5,
    eeptNone = 6,
    eeptBinary = 7
};

typedef enum tagExtentMode {
    DVEXTENT_CONTENT = 0,
    DVEXTENT_INTEGRAL = 1
};

typedef enum tagFEEDBACK_TYPE {
    FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
    FEEDBACK_PEN_BARRELVISUALIZATION = 2,
    FEEDBACK_PEN_TAP = 3,
    FEEDBACK_PEN_DOUBLETAP = 4,
    FEEDBACK_PEN_PRESSANDHOLD = 5,
    FEEDBACK_PEN_RIGHTTAP = 6,
    FEEDBACK_TOUCH_TAP = 7,
    FEEDBACK_TOUCH_DOUBLETAP = 8,
    FEEDBACK_TOUCH_PRESSANDHOLD = 9,
    FEEDBACK_TOUCH_RIGHTTAP = 10,
    FEEDBACK_GESTURE_PRESSANDTAP = 11,
    FEEDBACK_MAX = -1
};

typedef enum tagFUNCFLAGS {
    FUNCFLAG_FRESTRICTED = 1,
    FUNCFLAG_FSOURCE = 2,
    FUNCFLAG_FBINDABLE = 4,
    FUNCFLAG_FREQUESTEDIT = 8,
    FUNCFLAG_FDISPLAYBIND = 16,
    FUNCFLAG_FDEFAULTBIND = 32,
    FUNCFLAG_FHIDDEN = 64,
    FUNCFLAG_FUSESGETLASTERROR = 128,
    FUNCFLAG_FDEFAULTCOLLELEM = 256,
    FUNCFLAG_FUIDEFAULT = 512,
    FUNCFLAG_FNONBROWSABLE = 1024,
    FUNCFLAG_FREPLACEABLE = 2048,
    FUNCFLAG_FIMMEDIATEBIND = 4096
};

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL = 0,
    FUNC_PUREVIRTUAL = 1,
    FUNC_NONVIRTUAL = 2,
    FUNC_STATIC = 3,
    FUNC_DISPATCH = 4
};

typedef enum tagGLOBALOPT_EH_VALUES {
    COMGLB_EXCEPTION_HANDLE = 0,
    COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1,
    COMGLB_EXCEPTION_DONOT_HANDLE = 1,
    COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2
};

typedef enum tagGLOBALOPT_PROPERTIES {
    COMGLB_EXCEPTION_HANDLING = 1,
    COMGLB_APPID = 2,
    COMGLB_RPC_THREADPOOL_SETTING = 3,
    COMGLB_RO_SETTINGS = 4,
    COMGLB_UNMARSHALING_POLICY = 5,
    COMGLB_PROPERTIES_RESERVED1 = 6,
    COMGLB_PROPERTIES_RESERVED2 = 7,
    COMGLB_PROPERTIES_RESERVED3 = 8
};

typedef enum tagGLOBALOPT_RO_FLAGS {
    COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES = 1,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES = 2,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES = 4,
    COMGLB_FAST_RUNDOWN = 8,
    COMGLB_RESERVED1 = 16,
    COMGLB_RESERVED2 = 32,
    COMGLB_RESERVED3 = 64,
    COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES = 128,
    COMGLB_RESERVED4 = 256,
    COMGLB_RESERVED5 = 512,
    COMGLB_RESERVED6 = 1024
};

typedef enum tagGLOBALOPT_RPCTP_VALUES {
    COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL = 0,
    COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL = 1
};

typedef enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES {
    COMGLB_UNMARSHALING_POLICY_NORMAL = 0,
    COMGLB_UNMARSHALING_POLICY_STRONG = 1,
    COMGLB_UNMARSHALING_POLICY_HYBRID = 2
};

typedef enum tagGUIDKIND {
    GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1
};

typedef enum tagHANDEDNESS {
    HANDEDNESS_LEFT = 0,
    HANDEDNESS_RIGHT = 1
};

typedef enum tagHITRESULT {
    HITRESULT_OUTSIDE = 0,
    HITRESULT_TRANSPARENT = 1,
    HITRESULT_CLOSE = 2,
    HITRESULT_HIT = 3
};

typedef enum tagIESHORTCUTFLAGS {
    IESHORTCUT_NEWBROWSER = 1,
    IESHORTCUT_OPENNEWTAB = 2,
    IESHORTCUT_FORCENAVIGATE = 4,
    IESHORTCUT_BACKGROUNDTAB = 8
};

typedef enum tagINPUTSERVICE_STATE {
    ISS_DISABLED = 0,
    ISS_ENABLED = 1,
    ISS_INPUT_CONSUMED = 2,
    ISS_INPUT_SKIPPED = 3,
    ISS_UNBLOCK_ALL = 4
};

typedef enum tagINPUT_MESSAGE_DEVICE_TYPE {
    IMDT_UNAVAILABLE = 0,
    IMDT_KEYBOARD = 1,
    IMDT_MOUSE = 2,
    IMDT_TOUCH = 4,
    IMDT_PEN = 8,
    IMDT_TOUCHPAD = 16
};

typedef enum tagINPUT_MESSAGE_ORIGIN_ID {
    IMO_UNAVAILABLE = 0,
    IMO_HARDWARE = 1,
    IMO_INJECTED = 2,
    IMO_SYSTEM = 4
};

typedef enum tagINTERACTIVECTRL_HAPTICS_MODE {
    INTERACTIVECTRL_HAPTICS_MODE_AUTO = 0,
    INTERACTIVECTRL_HAPTICS_MODE_MANUAL = 1
};

typedef enum tagINTERACTIVECTRL_PROMOTION_TYPE {
    INTERACTIVECTRL_PROMOTION_TYPE_NONE = 0,
    INTERACTIVECTRL_PROMOTION_TYPE_SCROLL = 1,
    INTERACTIVECTRL_PROMOTION_TYPE_PAN = 2
};

typedef enum tagINTERVAL_LIMIT_KIND {
    ILK_EXPLICIT_INCLUDED = 0,
    ILK_EXPLICIT_EXCLUDED = 1,
    ILK_NEGATIVE_INFINITY = 2,
    ILK_POSITIVE_INFINITY = 3
};

typedef enum tagINVOKEKIND {
    INVOKE_FUNC = 1,
    INVOKE_PROPERTYGET = 2,
    INVOKE_PROPERTYPUT = 4,
    INVOKE_PROPERTYPUTREF = 8
};

typedef enum tagITEM_CHANGE_TYPE {
    ICHT_INSERT = 0,
    ICHT_DELETE = 1,
    ICHT_UPDATE = 2,
    ICHT_FILTER = 3
};

typedef enum tagLC_ITEM_SET_ORDER {
    LCISO_DEFAULT = 0,
    LCISO_FOCUSEDFIRST = 1,
    LCISO_VISIBLEORDER = 2
};

typedef enum tagLC_ITEM_SET_TYPE {
    LCIC_ALLITEMS = 0,
    LCIC_SELECTED = 1,
    LCIC_CHECKED = 2
};

typedef enum tagLC_NEXT_INDEX_STATE {
    LCNIS_DEFAULT = 0,
    LCNIS_SELECTED = 1,
    LCNIS_FOCUSED = 2,
    LCNIS_SELECTIONMARKED = 3
};

typedef enum tagLC_POINT_TYPE {
    LCPT_SCREEN = 0,
    LCPT_CLIENT = 1,
    LCPT_SCROLL = 2
};

typedef enum tagLC_SELECTION_MODE {
    LCSM_DESELECT_ALL = 0,
    LCSM_SELECT_ALL = 1,
    LCSM_INVERTSELECTION = 2,
    LCSM_TOGGLE_SELECT_MODE = 3,
    LCSM_GET_SELECT_MODE = 4
};

typedef enum tagLIBFLAGS {
    LIBFLAG_FRESTRICTED = 1,
    LIBFLAG_FCONTROL = 2,
    LIBFLAG_FHIDDEN = 4,
    LIBFLAG_FHASDISKIMAGE = 8
};

typedef enum tagLOCKTYPE {
    LOCK_WRITE = 1,
    LOCK_EXCLUSIVE = 2,
    LOCK_ONLYONCE = 4
};

typedef enum tagMEMCTX {
    MEMCTX_TASK = 1,
    MEMCTX_SHARED = 2,
    MEMCTX_MACSYSTEM = 3,
    MEMCTX_UNKNOWN = -1,
    MEMCTX_SAME = -2
};

typedef enum tagMENUBANDHANDLERCID {
    MBHANDCID_PIDLSELECT = 0
};

typedef enum tagMENUPOPUPPOPUPFLAGS {
    MPPF_SETFOCUS = 1,
    MPPF_INITIALSELECT = 2,
    MPPF_NOANIMATE = 4,
    MPPF_KEYBOARD = 16,
    MPPF_REPOSITION = 32,
    MPPF_FORCEZORDER = 64,
    MPPF_FINALSELECT = 128,
    MPPF_TOP = 0x20000000,
    MPPF_LEFT = 0x40000000,
    MPPF_RIGHT = 0x60000000,
    MPPF_BOTTOM = -2147483648,
    MPPF_POS_MASK = -536870912,
    MPPF_ALIGN_LEFT = 0x2000000,
    MPPF_ALIGN_RIGHT = 0x4000000
};

typedef enum tagMENUPOPUPSELECT {
    MPOS_EXECUTE = 0,
    MPOS_FULLCANCEL = 1,
    MPOS_CANCELLEVEL = 2,
    MPOS_SELECTLEFT = 3,
    MPOS_SELECTRIGHT = 4,
    MPOS_CHILDTRACKING = 5
};

typedef enum tagMKREDUCE {
    MKRREDUCE_ONE = 0x30000,
    MKRREDUCE_TOUSER = 0x20000,
    MKRREDUCE_THROUGHUSER = 0x10000,
    MKRREDUCE_ALL = 0
};

typedef enum tagMKSYS {
    MKSYS_NONE = 0,
    MKSYS_GENERICCOMPOSITE = 1,
    MKSYS_FILEMONIKER = 2,
    MKSYS_ANTIMONIKER = 3,
    MKSYS_ITEMMONIKER = 4,
    MKSYS_POINTERMONIKER = 5,
    MKSYS_CLASSMONIKER = 7,
    MKSYS_OBJREFMONIKER = 8,
    MKSYS_SESSIONMONIKER = 9,
    MKSYS_LUAMONIKER = 10
};

typedef enum tagMSHCTX {
    MSHCTX_LOCAL = 0,
    MSHCTX_NOSHAREDMEM = 1,
    MSHCTX_DIFFERENTMACHINE = 2,
    MSHCTX_INPROC = 3,
    MSHCTX_CROSSCTX = 4,
    MSHCTX_RESERVED1 = 5
};

typedef enum tagMSHLFLAGS {
    MSHLFLAGS_NORMAL = 0,
    MSHLFLAGS_TABLESTRONG = 1,
    MSHLFLAGS_TABLEWEAK = 2,
    MSHLFLAGS_NOPING = 4,
    MSHLFLAGS_RESERVED1 = 8,
    MSHLFLAGS_RESERVED2 = 16,
    MSHLFLAGS_RESERVED3 = 32,
    MSHLFLAGS_RESERVED4 = 64
};

typedef enum tagOLECLOSE {
    OLECLOSE_SAVEIFDIRTY = 0,
    OLECLOSE_NOSAVE = 1,
    OLECLOSE_PROMPTSAVE = 2
};

typedef enum tagOLECONTF {
    OLECONTF_EMBEDDINGS = 1,
    OLECONTF_LINKS = 2,
    OLECONTF_OTHERS = 4,
    OLECONTF_ONLYUSER = 8,
    OLECONTF_ONLYIFRUNNING = 16
};

typedef enum tagOLEDCFLAGS {
    OLEDC_NODRAW = 1,
    OLEDC_PAINTBKGND = 2,
    OLEDC_OFFSCREEN = 4
};

typedef enum tagOLEGETMONIKER {
    OLEGETMONIKER_ONLYIFTHERE = 1,
    OLEGETMONIKER_FORCEASSIGN = 2,
    OLEGETMONIKER_UNASSIGN = 3,
    OLEGETMONIKER_TEMPFORUSER = 4
};

typedef enum tagOLELINKBIND {
    OLELINKBIND_EVENIFCLASSDIFF = 1
};

typedef enum tagOLEMISC {
    OLEMISC_RECOMPOSEONRESIZE = 1,
    OLEMISC_ONLYICONIC = 2,
    OLEMISC_INSERTNOTREPLACE = 4,
    OLEMISC_STATIC = 8,
    OLEMISC_CANTLINKINSIDE = 16,
    OLEMISC_CANLINKBYOLE1 = 32,
    OLEMISC_ISLINKOBJECT = 64,
    OLEMISC_INSIDEOUT = 128,
    OLEMISC_ACTIVATEWHENVISIBLE = 256,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
    OLEMISC_INVISIBLEATRUNTIME = 1024,
    OLEMISC_ALWAYSRUN = 2048,
    OLEMISC_ACTSLIKEBUTTON = 4096,
    OLEMISC_ACTSLIKELABEL = 8192,
    OLEMISC_NOUIACTIVATE = 16384,
    OLEMISC_ALIGNABLE = 0x8000,
    OLEMISC_SIMPLEFRAME = 0x10000,
    OLEMISC_SETCLIENTSITEFIRST = 0x20000,
    OLEMISC_IMEMODE = 0x40000,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
    OLEMISC_WANTSTOMENUMERGE = 0x100000,
    OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000
};

typedef enum tagOLERENDER {
    OLERENDER_NONE = 0,
    OLERENDER_DRAW = 1,
    OLERENDER_FORMAT = 2,
    OLERENDER_ASIS = 3
};

typedef enum tagOLEUPDATE {
    OLEUPDATE_ALWAYS = 1,
    OLEUPDATE_ONCALL = 3
};

typedef enum tagOLEVERBATTRIB {
    OLEVERBATTRIB_NEVERDIRTIES = 1,
    OLEVERBATTRIB_ONCONTAINERMENU = 2
};

typedef enum tagOLEWHICHMK {
    OLEWHICHMK_CONTAINER = 1,
    OLEWHICHMK_OBJREL = 2,
    OLEWHICHMK_OBJFULL = 3
};

typedef enum tagOPEN_AS_INFO_FLAGS {
    OAIF_ALLOW_REGISTRATION = 1,
    OAIF_REGISTER_EXT = 2,
    OAIF_EXEC = 4,
    OAIF_FORCE_REGISTRATION = 8,
    OAIF_HIDE_REGISTRATION = 32,
    OAIF_URL_PROTOCOL = 64,
    OAIF_FILE_IS_URI = 128
};

typedef enum tagPENDINGMSG {
    PENDINGMSG_CANCELCALL = 0,
    PENDINGMSG_WAITNOPROCESS = 1,
    PENDINGMSG_WAITDEFPROCESS = 2
};

typedef enum tagPENDINGTYPE {
    PENDINGTYPE_TOPLEVEL = 1,
    PENDINGTYPE_NESTED = 2
};

typedef enum tagPERCEIVED {
    PERCEIVED_TYPE_FIRST = -3,
    PERCEIVED_TYPE_CUSTOM = -3,
    PERCEIVED_TYPE_UNSPECIFIED = -2,
    PERCEIVED_TYPE_FOLDER = -1,
    PERCEIVED_TYPE_UNKNOWN = 0,
    PERCEIVED_TYPE_TEXT = 1,
    PERCEIVED_TYPE_IMAGE = 2,
    PERCEIVED_TYPE_AUDIO = 3,
    PERCEIVED_TYPE_VIDEO = 4,
    PERCEIVED_TYPE_COMPRESSED = 5,
    PERCEIVED_TYPE_DOCUMENT = 6,
    PERCEIVED_TYPE_SYSTEM = 7,
    PERCEIVED_TYPE_APPLICATION = 8,
    PERCEIVED_TYPE_GAMEMEDIA = 9,
    PERCEIVED_TYPE_CONTACTS = 10,
    PERCEIVED_TYPE_LAST = 10
};

typedef enum tagPOINTERINACTIVE {
    POINTERINACTIVE_ACTIVATEONENTRY = 1,
    POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
    POINTERINACTIVE_ACTIVATEONDRAG = 4
};

typedef enum tagPOINTER_BUTTON_CHANGE_TYPE {
    POINTER_CHANGE_NONE = 0,
    POINTER_CHANGE_FIRSTBUTTON_DOWN = 1,
    POINTER_CHANGE_FIRSTBUTTON_UP = 2,
    POINTER_CHANGE_SECONDBUTTON_DOWN = 3,
    POINTER_CHANGE_SECONDBUTTON_UP = 4,
    POINTER_CHANGE_THIRDBUTTON_DOWN = 5,
    POINTER_CHANGE_THIRDBUTTON_UP = 6,
    POINTER_CHANGE_FOURTHBUTTON_DOWN = 7,
    POINTER_CHANGE_FOURTHBUTTON_UP = 8,
    POINTER_CHANGE_FIFTHBUTTON_DOWN = 9,
    POINTER_CHANGE_FIFTHBUTTON_UP = 10
};

typedef enum tagPOINTER_DEVICE_CURSOR_TYPE {
    POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
    POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
    POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
    POINTER_DEVICE_CURSOR_TYPE_MAX = -1
};

typedef enum tagPOINTER_DEVICE_TYPE {
    POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
    POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
    POINTER_DEVICE_TYPE_TOUCH = 3,
    POINTER_DEVICE_TYPE_TOUCH_PAD = 4,
    POINTER_DEVICE_TYPE_MAX = -1
};

typedef enum tagPOINTER_INPUT_TYPE {
    PT_POINTER = 1,
    PT_TOUCH = 2,
    PT_PEN = 3,
    PT_MOUSE = 4,
    PT_TOUCHPAD = 5
};

typedef enum tagPROPBAG2_TYPE {
    PROPBAG2_TYPE_UNDEFINED = 0,
    PROPBAG2_TYPE_DATA = 1,
    PROPBAG2_TYPE_URL = 2,
    PROPBAG2_TYPE_OBJECT = 3,
    PROPBAG2_TYPE_STREAM = 4,
    PROPBAG2_TYPE_STORAGE = 5,
    PROPBAG2_TYPE_MONIKER = 6
};

typedef enum tagPROPCTL_FLAGS {
    PCF_NONE = 0,
    PCF_VISIBLE = 1,
    PCF_READONLY = 2,
    PCF_USEACTIVEBORDERS = 4,
    PCF_USEEDITINVITATION = 8,
    PCF_VERTPOS_TOP = 0,
    PCF_VERTPOS_CENTER = 16,
    PCF_VERTPOS_BOTTOM = 32,
    PCF_VERTPOS_MASK = 48,
    PCF_HORZPOS_LEFT = 0,
    PCF_HORZPOS_CENTER = 64,
    PCF_HORZPOS_RIGHT = 128,
    PCF_HORZPOS_MASK = 192,
    PCF_RTLREADING = 512,
    PCF_CAN_WRAP_TEXT = 1024,
    PCF_POS_MASK = 1776,
    PCF_NORMAL_TEXT = 0,
    PCF_SHADOW_TEXT = 256,
    PCF_FONT_MASK = 256,
    PCF_FLAGS_MASK = 2047
};

typedef enum tagPROPDESC_CONTROL_TYPE {
    PDCT_DRAW = 0,
    PDCT_EDIT = 1,
    PDCT_FILTER = 2
};

typedef enum tagPROPHANDLER_DIAGNOSTIC_FLAGS {
    PHDF_DEFAULT = 0,
    PHDF_FULL_PATH = 1,
    PHDF_PERF_OVER_DETAILS = 2,
    PHDF_DETAILS_OVER_PERF = 4
};

typedef enum tagPROPPAGESTATUS {
    PROPPAGESTATUS_DIRTY = 1,
    PROPPAGESTATUS_VALIDATE = 2,
    PROPPAGESTATUS_CLEAN = 4
};

typedef enum tagPROPVAR_CHANGE_FLAGS {
    PVCHF_DEFAULT = 0,
    PVCHF_NOVALUEPROP = 1,
    PVCHF_ALPHABOOL = 2,
    PVCHF_NOUSEROVERRIDE = 4,
    PVCHF_LOCALBOOL = 8,
    PVCHF_NOHEXSTRING = 16
};

typedef enum tagPROPVAR_COMPARE_FLAGS {
    PVCF_DEFAULT = 0,
    PVCF_TREATEMPTYASGREATERTHAN = 1,
    PVCF_USESTRCMP = 2,
    PVCF_USESTRCMPC = 4,
    PVCF_USESTRCMPI = 8,
    PVCF_USESTRCMPIC = 16,
    PVCF_DIGITSASNUMBERS_CASESENSITIVE = 32
};

typedef enum tagPSFORMATAS {
    PSFORMATAS_GENERAL = 0,
    PSFORMATAS_STRING_FILENAME = 1,
    PSFORMATAS_STRING_FILEPATH = 2,
    PSFORMATAS_STRING_HYPERLINK = 3,
    PSFORMATAS_NUMBER_DURATION = 100,
    PSFORMATAS_NUMBER_PERCENTAGE = 101,
    PSFORMATAS_NUMBER_BYTESIZE = 102,
    PSFORMATAS_NUMBER_KBSIZE = 103,
    PSFORMATAS_NUMBER_SAMPLESIZE = 104,
    PSFORMATAS_NUMBER_BITRATE = 105,
    PSFORMATAS_NUMBER_SAMPLERATE = 106,
    PSFORMATAS_NUMBER_FRAMERATE = 107,
    PSFORMATAS_NUMBER_PIXELS = 108,
    PSFORMATAS_NUMBER_DPI = 109,
    PSFORMATAS_BOOLEAN_YESNO = 200,
    PSFORMATAS_BOOLEAN_ONOFF = 201,
    PSFORMATAS_BOOLEAN_TRUEFALSE = 202,
    PSFORMATAS_DATETIME_MONTH = 300,
    PSFORMATAS_DATETIME_YEARMONTH = 301,
    PSFORMATAS_DATETIME_YEAR = 302,
    PSFORMATAS_SPECIAL_SIMPLENAME = 400
};

typedef enum tagPSTIME_FLAGS {
    PSTF_UTC = 0,
    PSTF_LOCAL = 1
};

typedef enum tagPictureAttributes {
    PICTURE_SCALABLE = 1,
    PICTURE_TRANSPARENT = 2
};

typedef enum tagPropPageOnApply {
    PPOAACTION_CANCEL = 0,
    PPOAACTION_OK = 1,
    PPOAACTION_APPLY = 2
};

typedef enum tagQACONTAINERFLAGS {
    QACONTAINER_SHOWHATCHING = 1,
    QACONTAINER_SHOWGRABHANDLES = 2,
    QACONTAINER_USERMODE = 4,
    QACONTAINER_DISPLAYASDEFAULT = 8,
    QACONTAINER_UIDEAD = 16,
    QACONTAINER_AUTOCLIP = 32,
    QACONTAINER_MESSAGEREFLECT = 64,
    QACONTAINER_SUPPORTSMNEMONICS = 128
};

typedef enum tagQUERY_PARSER_MANAGER_OPTION {
    QPMO_SCHEMA_BINARY_NAME = 0,
    QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH = 1,
    QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH = 2,
    QPMO_LOCALIZED_SCHEMA_BINARY_PATH = 3,
    QPMO_APPEND_LCID_TO_LOCALIZED_PATH = 4,
    QPMO_LOCALIZER_SUPPORT = 5
};

typedef enum tagQueryUpdateAction {
    QUA_ADD = 0,
    QUA_REMOVE = 1,
    QUA_CHANGE = 2
};

typedef enum tagREADYSTATE {
    READYSTATE_UNINITIALIZED = 0,
    READYSTATE_LOADING = 1,
    READYSTATE_LOADED = 2,
    READYSTATE_INTERACTIVE = 3,
    READYSTATE_COMPLETE = 4
};

typedef enum tagRECYCLEBIN_TYPE {
    RBT_VOLUME = 0,
    RBT_KNOWNFOLDER = 1
};

typedef enum tagREGCLS {
    REGCLS_SINGLEUSE = 0,
    REGCLS_MULTIPLEUSE = 1,
    REGCLS_MULTI_SEPARATE = 2,
    REGCLS_SUSPENDED = 4,
    REGCLS_SURROGATE = 8,
    REGCLS_AGILE = 16
};

typedef enum tagREGKIND {
    REGKIND_DEFAULT = 0,
    REGKIND_REGISTER = 1,
    REGKIND_NONE = 2
};

typedef enum tagRESOURCEBROKERINGTYPE {
    RBT_CURSORAPIS = 0
};

typedef enum tagRPCOPT_PROPERTIES {
    COMBND_RPCTIMEOUT = 1,
    COMBND_SERVER_LOCALITY = 2,
    COMBND_RESERVED1 = 4,
    COMBND_RESERVED2 = 5,
    COMBND_RESERVED3 = 8,
    COMBND_RESERVED4 = 16
};

typedef enum tagRPCOPT_SERVER_LOCALITY_VALUES {
    SERVER_LOCALITY_PROCESS_LOCAL = 0,
    SERVER_LOCALITY_MACHINE_LOCAL = 1,
    SERVER_LOCALITY_REMOTE = 2
};

typedef enum tagRpcCallClientLocality {
    rcclInvalid = 0,
    rcclLocal = 1,
    rcclRemote = 2,
    rcclClientUnknownLocality = 3
};

typedef enum tagRpcCallType {
    rctInvalid = 0,
    rctNormal = 1,
    rctTraining = 2,
    rctGuaranteed = 3
};

typedef enum tagRpcLocalAddressFormat {
    rlafInvalid = 0,
    rlafIPv4 = 1,
    rlafIPv6 = 2
};

typedef enum tagSCHEDULE_DISPATCH_RESULT {
    SDN_FAILURE = 0,
    SDN_IL_RESTRICTED = 1,
    SDN_SUCCESS = 2
};

typedef enum tagSEMTYPE_ENUMFILTER {
    STEF_ALL = 0
};

typedef enum tagSERVERCALL {
    SERVERCALL_ISHANDLED = 0,
    SERVERCALL_REJECTED = 1,
    SERVERCALL_RETRYLATER = 2
};

typedef enum tagSET_COLUMNS_NOTIFY_OPTIONS {
    SCNO_DEFAULT = 0,
    SCNO_REORDERONLY = 1
};

typedef enum tagSFBS_FLAGS {
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT = 1,
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS = 2
};

typedef enum tagSF_TYPE {
    SF_ERROR = 10,
    SF_I1 = 16,
    SF_I2 = 2,
    SF_I4 = 3,
    SF_I8 = 20,
    SF_BSTR = 8,
    SF_UNKNOWN = 13,
    SF_DISPATCH = 9,
    SF_VARIANT = 12,
    SF_RECORD = 36,
    SF_HAVEIID = 0x800d
};

typedef enum tagSHCOLSTATE {
    SHCOLSTATE_DEFAULT = 0,
    SHCOLSTATE_TYPE_STR = 1,
    SHCOLSTATE_TYPE_INT = 2,
    SHCOLSTATE_TYPE_DATE = 3,
    SHCOLSTATE_TYPEMASK = 15,
    SHCOLSTATE_ONBYDEFAULT = 16,
    SHCOLSTATE_SLOW = 32,
    SHCOLSTATE_EXTENDED = 64,
    SHCOLSTATE_SECONDARYUI = 128,
    SHCOLSTATE_HIDDEN = 256,
    SHCOLSTATE_PREFER_VARCMP = 512,
    SHCOLSTATE_PREFER_FMTCMP = 1024,
    SHCOLSTATE_NOSORTBYFOLDERNESS = 2048,
    SHCOLSTATE_VIEWONLY = 0x10000,
    SHCOLSTATE_BATCHREAD = 0x20000,
    SHCOLSTATE_NO_GROUPBY = 0x40000,
    SHCOLSTATE_FIXED_WIDTH = 4096,
    SHCOLSTATE_NODPISCALE = 8192,
    SHCOLSTATE_FIXED_RATIO = 16384,
    SHCOLSTATE_DISPLAYMASK = 0xf000
};

typedef enum tagSMINFOFLAGS {
    SMIF_ICON = 1,
    SMIF_ACCELERATOR = 2,
    SMIF_DROPTARGET = 4,
    SMIF_SUBMENU = 8,
    SMIF_CHECKED = 32,
    SMIF_DROPCASCADE = 64,
    SMIF_HIDDEN = 128,
    SMIF_DISABLED = 256,
    SMIF_TRACKPOPUP = 512,
    SMIF_DEMOTED = 1024,
    SMIF_ALTSTATE = 2048,
    SMIF_DRAGNDROP = 4096,
    SMIF_NEW = 8192
};

typedef enum tagSMINFOMASK {
    SMIM_TYPE = 1,
    SMIM_FLAGS = 2,
    SMIM_ICON = 4
};

typedef enum tagSMINFOTYPE {
    SMIT_SEPARATOR = 1,
    SMIT_STRING = 2
};

typedef enum tagSM_KEYBOARDNAVIGATE {
    SM_ENTERINGSEACHVIEW = 0,
    SM_INSIDESEARCHVIEW = 1
};

typedef enum tagSORTDIRECTION {
    SORT_DESCENDING = -1,
    SORT_ASCENDING = 1
};

typedef enum tagSTATFLAG {
    STATFLAG_DEFAULT = 0,
    STATFLAG_NONAME = 1,
    STATFLAG_NOOPEN = 2
};

typedef enum tagSTDMSHLFLAGS {
    SMEXF_SERVER = 1,
    SMEXF_HANDLER = 2
};

typedef enum tagSTGC {
    STGC_DEFAULT = 0,
    STGC_OVERWRITE = 1,
    STGC_ONLYIFCURRENT = 2,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
    STGC_CONSOLIDATE = 8
};

typedef enum tagSTGMOVE {
    STGMOVE_MOVE = 0,
    STGMOVE_COPY = 1,
    STGMOVE_SHALLOWCOPY = 2
};

typedef enum tagSTGTY {
    STGTY_STORAGE = 1,
    STGTY_STREAM = 2,
    STGTY_LOCKBYTES = 3,
    STGTY_PROPERTY = 4
};

typedef enum tagSTREAM_SEEK {
    STREAM_SEEK_SET = 0,
    STREAM_SEEK_CUR = 1,
    STREAM_SEEK_END = 2
};

typedef enum tagSTRRET_TYPE {
    STRRET_WSTR = 0,
    STRRET_OFFSET = 1,
    STRRET_CSTR = 2
};

typedef enum tagSTRUCTURED_QUERY_MULTIOPTION {
    SQMO_VIRTUAL_PROPERTY = 0,
    SQMO_DEFAULT_PROPERTY = 1,
    SQMO_GENERATOR_FOR_TYPE = 2,
    SQMO_MAP_PROPERTY = 3
};

typedef enum tagSTRUCTURED_QUERY_PARSE_ERROR {
    SQPE_NONE = 0,
    SQPE_EXTRA_OPENING_PARENTHESIS = 1,
    SQPE_EXTRA_CLOSING_PARENTHESIS = 2,
    SQPE_IGNORED_MODIFIER = 3,
    SQPE_IGNORED_CONNECTOR = 4,
    SQPE_IGNORED_KEYWORD = 5,
    SQPE_UNHANDLED = 6
};

typedef enum tagSTRUCTURED_QUERY_SINGLE_OPTION {
    SQSO_SCHEMA = 0,
    SQSO_LOCALE_WORD_BREAKING = 1,
    SQSO_WORD_BREAKER = 2,
    SQSO_NATURAL_SYNTAX = 3,
    SQSO_AUTOMATIC_WILDCARD = 4,
    SQSO_TRACE_LEVEL = 5,
    SQSO_LANGUAGE_KEYWORDS = 6,
    SQSO_SYNTAX = 7,
    SQSO_TIME_ZONE = 8,
    SQSO_IMPLICIT_CONNECTOR = 9,
    SQSO_CONNECTOR_CASE = 10
};

typedef enum tagSTRUCTURED_QUERY_SYNTAX {
    SQS_NO_SYNTAX = 0,
    SQS_ADVANCED_QUERY_SYNTAX = 1,
    SQS_NATURAL_QUERY_SYNTAX = 2
};

typedef enum tagSUBVAL_FLAGS {
    SVF_DEFAULT = 0,
    SVF_ALLITEMS = 1,
    SVF_MODIFIED = 2,
    SVF_DELETED = 4
};

typedef enum tagSYSKIND {
    SYS_WIN16 = 0,
    SYS_WIN32 = 1,
    SYS_MAC = 2,
    SYS_WIN64 = 3
};

typedef enum tagShutdownType {
    IdleShutdown = 0,
    ForcedShutdown = 1
};

typedef enum tagTASKTYPE {
    NOTASKS = 0,
    SPECIALPICTURETASKS = 1,
    SPECIALMUSICTASKS = 2,
    SPECIALDOCUMENTTASKS = 3,
    SPECIALVIDEOTASKS = 4,
    SPECIALGENERICTASKS = 5,
    VIEWCONTROLTASKS = 6,
    COMMONFILEDIALOGTASKS = 7
};

typedef enum tagTOUCH_PAD_AAP_LEVEL {
    TOUCH_PAD_AAP_LEVEL_DISABLED = 0,
    TOUCH_PAD_AAP_LEVEL_PASSIVE = 1,
    TOUCH_PAD_AAP_LEVEL_STANDARD = 2,
    TOUCH_PAD_AAP_LEVEL_AGGRESSIVE = 3,
    TOUCH_PAD_AAP_LEVEL_VERY_AGGRESSIVE = 4,
    TOUCH_PAD_AAP_LEVEL_MAX = -1
};

typedef enum tagTYMED {
    TYMED_HGLOBAL = 1,
    TYMED_FILE = 2,
    TYMED_ISTREAM = 4,
    TYMED_ISTORAGE = 8,
    TYMED_GDI = 16,
    TYMED_MFPICT = 32,
    TYMED_ENHMF = 64,
    TYMED_NULL = 0
};

typedef enum tagTYPEFLAGS {
    TYPEFLAG_FAPPOBJECT = 1,
    TYPEFLAG_FCANCREATE = 2,
    TYPEFLAG_FLICENSED = 4,
    TYPEFLAG_FPREDECLID = 8,
    TYPEFLAG_FHIDDEN = 16,
    TYPEFLAG_FCONTROL = 32,
    TYPEFLAG_FDUAL = 64,
    TYPEFLAG_FNONEXTENSIBLE = 128,
    TYPEFLAG_FOLEAUTOMATION = 256,
    TYPEFLAG_FRESTRICTED = 512,
    TYPEFLAG_FAGGREGATABLE = 1024,
    TYPEFLAG_FREPLACEABLE = 2048,
    TYPEFLAG_FDISPATCHABLE = 4096,
    TYPEFLAG_FREVERSEBIND = 8192,
    TYPEFLAG_FPROXY = 16384
};

typedef enum tagTYPEKIND {
    TKIND_ENUM = 0,
    TKIND_RECORD = 1,
    TKIND_MODULE = 2,
    TKIND_INTERFACE = 3,
    TKIND_DISPATCH = 4,
    TKIND_COCLASS = 5,
    TKIND_ALIAS = 6,
    TKIND_UNION = 7,
    TKIND_MAX = 8
};

typedef enum tagTYSPEC {
    TYSPEC_CLSID = 0,
    TYSPEC_FILEEXT = 1,
    TYSPEC_MIMETYPE = 2,
    TYSPEC_FILENAME = 3,
    TYSPEC_PROGID = 4,
    TYSPEC_PACKAGENAME = 5,
    TYSPEC_OBJECTID = 6
};

typedef enum tagUAEVENT {
    UAE_LAUNCH = 0,
    UAE_SWITCH = 1,
    UAE_TIME = 2,
    UAE_SESSION = 3,
    UAE_EXCLUDEAPP = 4
};

typedef enum tagUASFLAGS {
    UAS_NORMAL = 0,
    UAS_BLOCKED = 1,
    UAS_NOPARENTENABLE = 2,
    UAS_MASK = 3
};

typedef enum tagUISCB_FLAGS {
    UISCBF_HASITEMSREADY = 1,
    UISCBF_ITEMSREADY = 2
};

typedef enum tagUISTATE {
    UIS_ENABLED = 0,
    UIS_DISABLED = 1,
    UIS_HIDDEN = 2,
    UIS_CHECKBOX = 4,
    UIS_CHECKED = 8
};

typedef enum tagURLTEMPLATE {
    URLTEMPLATE_CUSTOM = 0,
    URLTEMPLATE_PREDEFINED_MIN = 0x10000,
    URLTEMPLATE_LOW = 0x10000,
    URLTEMPLATE_MEDLOW = 0x10500,
    URLTEMPLATE_MEDIUM = 0x11000,
    URLTEMPLATE_MEDHIGH = 0x11500,
    URLTEMPLATE_HIGH = 0x12000,
    URLTEMPLATE_PREDEFINED_MAX = 0x20000
};

typedef enum tagURLZONE {
    URLZONE_INVALID = -1,
    URLZONE_PREDEFINED_MIN = 0,
    URLZONE_LOCAL_MACHINE = 0,
    URLZONE_INTRANET = 1,
    URLZONE_TRUSTED = 2,
    URLZONE_INTERNET = 3,
    URLZONE_UNTRUSTED = 4,
    URLZONE_PREDEFINED_MAX = 999,
    URLZONE_USER_MIN = 1000,
    URLZONE_USER_MAX = 10000
};

typedef enum tagUSERCLASSTYPE {
    USERCLASSTYPE_FULL = 1,
    USERCLASSTYPE_SHORT = 2,
    USERCLASSTYPE_APPNAME = 3
};

typedef enum tagVARFLAGS {
    VARFLAG_FREADONLY = 1,
    VARFLAG_FSOURCE = 2,
    VARFLAG_FBINDABLE = 4,
    VARFLAG_FREQUESTEDIT = 8,
    VARFLAG_FDISPLAYBIND = 16,
    VARFLAG_FDEFAULTBIND = 32,
    VARFLAG_FHIDDEN = 64,
    VARFLAG_FRESTRICTED = 128,
    VARFLAG_FDEFAULTCOLLELEM = 256,
    VARFLAG_FUIDEFAULT = 512,
    VARFLAG_FNONBROWSABLE = 1024,
    VARFLAG_FREPLACEABLE = 2048,
    VARFLAG_FIMMEDIATEBIND = 4096
};

typedef enum tagVARKIND {
    VAR_PERINSTANCE = 0,
    VAR_STATIC = 1,
    VAR_CONST = 2,
    VAR_DISPATCH = 3
};

typedef enum tagVIEWSETTINGACTION {
    VSA_Extend = 0,
    VSA_Clone = 1,
    VSA_Disconnect = 2,
    VSA_Force = 3,
    VSA_Noopt = 4,
    VSA_Unforce = 5
};

typedef enum tagVIEWSTATUS {
    VIEWSTATUS_OPAQUE = 1,
    VIEWSTATUS_SOLIDBKGND = 2,
    VIEWSTATUS_DVASPECTOPAQUE = 4,
    VIEWSTATUS_DVASPECTTRANSPARENT = 8,
    VIEWSTATUS_SURFACE = 16,
    VIEWSTATUS_3DSURFACE = 32
};

typedef enum tagXFORMCOORDS {
    XFORMCOORDS_POSITION = 1,
    XFORMCOORDS_SIZE = 2,
    XFORMCOORDS_HIMETRICTOCONTAINER = 4,
    XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
    XFORMCOORDS_EVENTCOMPAT = 16
};

typedef enum tagXMLEMEM_TYPE {
    XMLELEMTYPE_ELEMENT = 0,
    XMLELEMTYPE_TEXT = 1,
    XMLELEMTYPE_COMMENT = 2,
    XMLELEMTYPE_DOCUMENT = 3,
    XMLELEMTYPE_DTD = 4,
    XMLELEMTYPE_PI = 5,
    XMLELEMTYPE_OTHER = 6
};

typedef enum threading_e {
    apartment = 1,
    single = 2,
    free = 3,
    neutral = 4,
    both = 5
};

typedef enum type_e {
    never = 0,
    allowed = 1,
    always = 2
};

typedef enum usage_e {
    eAnyUsage = 0,
    eCoClassUsage = 1,
    eCOMInterfaceUsage = 2,
    eInterfaceUsage = 6,
    eMemberUsage = 8,
    eMethodUsage = 16,
    eInterfaceMethodUsage = 32,
    eInterfaceMemberUsage = 64,
    eCoClassMemberUsage = 128,
    eCoClassMethodUsage = 256,
    eGlobalMethodUsage = 768,
    eGlobalDataUsage = 1024,
    eClassUsage = 2048,
    eInterfaceParameterUsage = 4096,
    eMethodParameterUsage = 12288,
    eIDLModuleUsage = 16384,
    eAnonymousUsage = 0x8000,
    eTypedefUsage = 0x10000,
    eUnionUsage = 0x20000,
    eEnumUsage = 0x40000,
    eDefineTagUsage = 0x80000,
    eStructUsage = 0x100000,
    eLocalUsage = 0x200000,
    ePropertyUsage = 0x400000,
    eEventUsage = 0x800000,
    eTemplateUsage = 0x1000000,
    eModuleUsage = 0x1000000,
    eIllegalUsage = 0x2000000,
    eAsynchronousUsage = 0x4000000,
    eAnyIDLUsage = 0x3f7fff
};

typedef enum wil::ActivityOptions {
    None = 0,
    TelemetryOnFailure = 1,
    TraceLoggingOnFailure = 2
};

typedef enum wil::CustomReportingKind {
    Custom1 = 0,
    Custom2 = 1,
    Custom3 = 2
};

typedef enum wil::ErrorReportingType {
    None = 0,
    Telemetry = 1,
    TraceLogging = 2
};

typedef enum wil::ErrorReturn {
    Auto = 0,
    None = 1
};

typedef enum wil::EventOptions {
    None = 0,
    ManualReset = 1,
    Signaled = 2
};

typedef enum wil::FailureType {
    Exception = 0,
    Return = 1,
    Log = 2,
    FailFast = 3
};

typedef enum wil::FeatureChangeTime {
    OnRead = 0,
    OnReload = 1,
    OnReboot = 3
};

typedef enum wil::FeatureControlKind {
    All = 0,
    Service = 1,
    User = 2,
    Testing = 3
};

typedef enum wil::FeatureEnabledState {
    Default = 0,
    Disabled = 1,
    Enabled = 2
};

typedef enum wil::FeaturePropertyGroupFlags {
    None = 0,
    StaticProperties = 1,
    FeatureEnabledState = 2
};

typedef enum wil::FeatureStage {
    AlwaysDisabled = 0,
    DisabledByDefault = 1,
    EnabledByDefault = 2,
    AlwaysEnabled = 3
};

typedef enum wil::FeatureString {
    Name = 0,
    Description = 1,
    GroupName = 2,
    GroupDescription = 3,
    EMail = 4,
    Link = 5
};

typedef enum wil::FeatureUsageKind {
    ImplicitOpportunityCount = 0,
    ImplicitUsageCount = 1,
    OpportunityCount = 2,
    UsageCount = 3,
    TotalDuration = 4,
    PausedDuration = 5,
    Custom1 = 11,
    Custom2 = 12,
    Custom3 = 13,
    Custom4 = 14,
    Custom5 = 15
};

typedef enum wil::ReportingKind {
    None = 0,
    UniqueUsage = 1,
    UniqueOpportunity = 2,
    DeviceUsage = 3,
    DeviceOpportunity = 4,
    TotalDuration = 5,
    PausedDuration = 6
};

typedef enum wil::SlimEventType {
    AutoReset = 0,
    ManualReset = 1
};

typedef enum wil::StagingControlActions {
    Default = 0,
    Replace = 1
};

typedef enum wil::SupportedExceptions {
    Default = 0,
    Known = 1,
    All = 2,
    None = 3,
    Thrown = 4,
    ThrownOrAlloc = 5
};

typedef enum wil::UsageReportingMode {
    Default = 0,
    SuppressPotential = 1,
    SuppressImplicit = 2
};

typedef enum wil::VariantReportingKind {
    None = 0,
    UniqueUsage = 1,
    DeviceUsage = 2
};

typedef enum wil::WilInitializeCommand {
    Create = 0,
    Destroy = 1
};

typedef enum wil::details::EmptyVariant {
    None = 0
};

typedef enum wil::details::PendingCallbackCancellationBehavior {
    Cancel = 0,
    Wait = 1,
    NoWait = 2
};

typedef enum wil::details::ReportFailureOptions {
    None = 0,
    ForcePlatformException = 1,
    SuppressAction = 2,
    MayRethrow = 4
};

typedef enum wil::details::StagingConfigurationFlags {
    Default = 0,
    IgnoreServiceControls = 1,
    IgnoreUserControls = 2,
    IgnoreTestControls = 4,
    IgnoreVariants = 8
};

typedef enum wil::details_abi::CountSize {
    None = 0,
    UnsignedShort = 1,
    UnsignedLong = 2
};

typedef enum wil::details_abi::UsageIndexesLoadOptions {
    None = 0,
    Clear = 1
};

typedef enum wil_FeatureChangeTime {
    wil_FeatureChangeTime_OnRead = 0,
    wil_FeatureChangeTime_OnReload = 1,
    wil_FeatureChangeTime_OnSession = 2,
    wil_FeatureChangeTime_OnReboot = 3
};

typedef enum wil_FeatureEnabledState {
    wil_FeatureEnabledState_Default = 0,
    wil_FeatureEnabledState_Disabled = 1,
    wil_FeatureEnabledState_Enabled = 2
};

typedef enum wil_FeatureEnabledStateKind {
    wil_FeatureEnabledStateKind_All = 0,
    wil_FeatureEnabledStateKind_Service = 1,
    wil_FeatureEnabledStateKind_User = 2,
    wil_FeatureEnabledStateKind_Test = 3
};

typedef enum wil_FeatureEnabledStateOptions {
    wil_FeatureEnabledStateOptions_None = 0,
    wil_FeatureEnabledStateOptions_VariantConfig = 1
};

typedef enum wil_FeatureStage {
    wil_FeatureStage_AlwaysDisabled = 0,
    wil_FeatureStage_DisabledByDefault = 1,
    wil_FeatureStage_EnabledByDefault = 2,
    wil_FeatureStage_AlwaysEnabled = 3
};

typedef enum wil_FeatureStore {
    wil_FeatureStore_Machine = 0,
    wil_FeatureStore_User = 1,
    wil_FeatureStore_All = 2
};

typedef enum wil_FeatureVariantPayloadKind {
    wil_FeatureVariantPayloadKind_None = 0,
    wil_FeatureVariantPayloadKind_Resident = 1,
    wil_FeatureVariantPayloadKind_External = 2
};

typedef enum wil_ReportingKind {
    wil_ReportingKind_None = 0,
    wil_ReportingKind_UniqueUsage = 1,
    wil_ReportingKind_UniqueOpportunity = 2,
    wil_ReportingKind_DeviceUsage = 3,
    wil_ReportingKind_DeviceOpportunity = 4,
    wil_ReportingKind_TotalDuration = 5,
    wil_ReportingKind_PausedDuration = 6
};

typedef enum wil_UsageReportingMode {
    wil_UsageReportingMode_Default = 0,
    wil_UsageReportingMode_SuppressPotential = 1,
    wil_UsageReportingMode_SuppressImplicit = 2
};

typedef enum wil_VariantPayloadType {
    wil_VariantPayloadType_None = 0,
    wil_VariantPayloadType_Fixed = 1
};

typedef enum wil_VariantReportingKind {
    wil_VariantReportingKind_None = 0,
    wil_VariantReportingKind_UniqueUsage = 1,
    wil_VariantReportingKind_DeviceUsage = 2
};

typedef enum wil_details_CachedFeatureEnabledState {
    wil_details_CachedFeatureEnabledState_Unknown = 0,
    wil_details_CachedFeatureEnabledState_Disabled = 1,
    wil_details_CachedFeatureEnabledState_Enabled = 2,
    wil_details_CachedFeatureEnabledState_Desired = 3
};

typedef enum wil_details_CachedHasNotificationState {
    wil_details_CachedHasNotificationState_Unknown = 0,
    wil_details_CachedHasNotificationState_DoesNotHaveNotifications = 1,
    wil_details_CachedHasNotificationState_HasNotification = 2
};

typedef enum wil_details_FeatureTestStateKind {
    wil_details_FeatureTestStateKind_EnabledState = 0,
    wil_details_FeatureTestStateKind_Variant = 1
};

typedef enum wil_details_ServiceReportingKind {
    wil_details_ServiceReportingKind_UniqueUsage = 0,
    wil_details_ServiceReportingKind_UniqueOpportunity = 1,
    wil_details_ServiceReportingKind_DeviceUsage = 2,
    wil_details_ServiceReportingKind_DeviceOpportunity = 3,
    wil_details_ServiceReportingKind_PotentialUniqueUsage = 4,
    wil_details_ServiceReportingKind_PotentialUniqueOpportunity = 5,
    wil_details_ServiceReportingKind_PotentialDeviceUsage = 6,
    wil_details_ServiceReportingKind_PotentialDeviceOpportunity = 7,
    wil_details_ServiceReportingKind_EnabledTotalDuration = 8,
    wil_details_ServiceReportingKind_EnabledPausedDuration = 9,
    wil_details_ServiceReportingKind_DisabledTotalDuration = 10,
    wil_details_ServiceReportingKind_DisabledPausedDuration = 11,
    wil_details_ServiceReportingKind_CustomEnabledBase = 100,
    wil_details_ServiceReportingKind_CustomDisabledBase = 150,
    wil_details_ServiceReportingKind_Store = 254,
    wil_details_ServiceReportingKind_None = 255,
    wil_details_ServiceReportingKind_VariantDevicePotentialBase = 256,
    wil_details_ServiceReportingKind_VariantDeviceUsageBase = 320,
    wil_details_ServiceReportingKind_VariantUniquePotentialBase = 384,
    wil_details_ServiceReportingKind_VariantUniqueUsageBase = 448
};

typedef enum wil_details_ServiceReportingOptions {
    wil_details_ServiceReportingOptions_None = 0,
    wil_details_ServiceReportingOptions_VariantConfig = 1
};

typedef enum wil_details_StagingConfigFeatureFields {
    wil_details_StagingConfigFeatureFields_None = 0,
    wil_details_StagingConfigFeatureFields_ServiceState = 1,
    wil_details_StagingConfigFeatureFields_UserState = 2,
    wil_details_StagingConfigFeatureFields_TestState = 4,
    wil_details_StagingConfigFeatureFields_Variant = 8
};

$xdatasym;
AccentColors::g_CurrentAccentPalette;
AccentColors::g_IsPaletteLoaded;
AccentColors::g_LastImmersiveColorAccent;
AnimationDescription::`vftable';
AnimationDescriptionFactory::`vftable';
CCubicFadeAnimation::`vftable';
CCurrentColorUser::_overrideCurrentUser;
CDataSection::`vftable';
CGamma::s_Gamma;
CGamma::s_g1;
CGamma::s_g2;
CGamma::s_g3;
CGamma::s_g4;
CGamma::s_g5;
CGamma::s_g6;
CGamma::s_g7;
CGamma::s_g8;
CGamma::s_g9;
CGlobalBufferPool::s_dwLastPruned;
CGlobalBufferPool::s_lFreeBuffers;
CGlobalBufferPool::s_lock;
CGlobalBufferPool::s_pBuffers;
CLSID_WICBmpEncoder;
CLSID_WICPngDecoder2;
CLSID_WICPngEncoder;
CLinearFadeAnimation::`vftable';
CPaintBuffer::`vftable';
CPaintBufferAnimation::`vftable';
CRefObj<CThemeMenuBar>::`vftable';
CRefObj<CThemeMenuMetrics>::`vftable';
CRefObj<CThemeMenuPopup>::`vftable';
CRevertImpersonation::`vftable';
CRootSection::`vftable';
CSection::`vftable';
CShakeWnd::_cObj;
CShakeWnd::_st;
CSineFadeAnimation::`vftable';
CThemeLoader::`vftable';
CThemeMemStream::`vftable';
CThemeMenu::s_lock;
CThemeMenu::s_pHmenuMap;
CThemeMenu::s_pHwndMap;
CThemeMenuMetrics::s_lock;
CThemeMenuMetrics::s_pHwndMap;
CThemeServices::s_hAPIPort;
CThemeServices::s_lock;
CThemeSignature::`vftable';
CThemeSignature::s_szDescription;
CThemeWnd::_cObj;
CThemeWnd::s_eLocalizedMirrorImage;
CThemeWnd::s_lock;
CThreadObjectManager<CPaintBufferPool>::s_cThreads;
CThreadObjectManager<CPaintBufferPool>::s_tlsIndex;
CWindowFeedBackAnimation::c_YHigh;
CWindowFeedBackAnimation::c_YLow;
CWindowFeedBackAnimation::s_ptTotalMove;
DefaultColors;
GS_ContextRecord;
GS_ExceptionPointers;
GS_ExceptionRecord;
GUID_00000000_0000_0000_c000_000000000046;
GUID_00000003_0000_0000_c000_000000000046;
GUID_00000035_0000_0000_c000_000000000046;
GUID_00000037_0000_0000_c000_000000000046;
GUID_00000038_0000_0000_c000_000000000046;
GUID_023552c7_71ab_428c_9c9f_d31780964995;
GUID_3a01b4da_4d8c_411e_b615_1ade683a9903;
GUID_3a6ed95d_6a50_5ead_a4c6_09f8babc632c;
GUID_46eb5926_582e_4017_9fdf_e8998daa0950;
GUID_719cc2ba_3e76_5def_9f1a_38d85a145ea8;
GUID_7d11a549_be3d_41de_b081_05c149962f9b;
GUID_803aabe5_ee7e_455f_84e9_2506afb8d2b4;
GUID_94c9b4ee_a09f_4f92_8a1e_4a9bce7e76fb;
GUID_94ea2b94_e9cc_49e0_c0ff_ee64ca8f5b90;
GUID_WICPixelFormat1bppIndexed;
GUID_WICPixelFormat24bppBGR;
GUID_WICPixelFormat32bppBGRA;
GUID_af86e2e0_b12d_4c6a_9c5a_d7aa65101e90;
GUID_bb6799d3_9f1a_5a4e_a940_945f1ab8c4fe;
GUID_c6e27abe_c1fb_48b5_9271_ecc70ac86ef0;
GUID_c75f1bd1_a3c1_5881_9da0_1ecdb8e51bc3;
GUID_d8cd007f_d08f_4191_9bfc_236ea7f0e4b5;
Init_thread_epoch;
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`vftable';
Microsoft::WRL::Details::DefaultModule<1>::`vftable';
Microsoft::WRL::Details::ModuleBase::moduleLock_;
Microsoft::WRL::Details::ModuleBase::module_;
Microsoft::WRL::Details::ModuleBase::objectCount_;
Microsoft::WRL::Details::WeakReferenceImpl::`vftable';
Microsoft::WRL::FtmBase::`vftable';
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::`vftable';
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>::`vftable';
Microsoft_Windows_TabletPC_Platform_Input_CoreEnableBits;
Microsoft_Windows_TabletPC_Platform_Input_CoreKeywords;
Microsoft_Windows_TabletPC_Platform_Input_CoreLevels;
Microsoft_Windows_TabletPC_Platform_Input_Core_Context;
Microsoft_Windows_UxThemeEnableBits;
Microsoft_Windows_UxThemeKeywords;
Microsoft_Windows_UxThemeLevels;
Microsoft_Windows_UxTheme_Provider;
Microsoft_Windows_UxTheme_Provider_Context;
RuntimeClass_Windows_UI_Core_AnimationMetrics_AnimationDescription;
RuntimeClass_Windows_UI_Core_AnimationMetrics_OpacityAnimation;
RuntimeClass_Windows_UI_Core_AnimationMetrics_ScaleAnimation;
RuntimeClass_Windows_UI_Core_AnimationMetrics_TranslationAnimation;
ShellTraceId_BufferedPaint_PruningBuffers_Info;
ShellTraceId_BufferedPaint_ThreadContention_Info;
ShellTraceId_Shake_PreMovingMessageHandler_Start;
ShellTraceId_Shake_PreMovingMessageHandler_Stop;
ShellTraceId_Shake_Trigger_Info;
ShellTraceId_Shake_WindowDeltaTime_Info;
ShellTraceId_Shake_WindowPosition_Info;
ShellTraceId_ThemesAndMetric_GetCurrentThemeName_Start;
ShellTraceId_ThemesAndMetric_GetCurrentThemeName_Stop;
ShellTraceId_ThemesAndMetric_GetThemeFont_Start;
ShellTraceId_ThemesAndMetric_GetThemeFont_Stop;
ShellTraceId_ThemesAndMetric_IsThemePartDefined_Start;
ShellTraceId_ThemesAndMetric_IsThemePartDefined_Stop;
ShellTraceId_ThemesAndMetric_SwitchTheme_Start;
ShellTraceId_ThemesAndMetric_SwitchTheme_Stop;
ShellTraceId_ThemesAndMetric_ThemeWindow_Info;
TABLET_INPUT_OverPan_SlideWindow_End;
TABLET_INPUT_OverPan_SlideWindow_Start;
TABLET_INPUT_OverPan_SlideWindow_WithMomentum_End;
TABLET_INPUT_OverPan_SlideWindow_WithMomentum_Start;
TABLET_INPUT_OverPan_SnapBack_End;
TABLET_INPUT_OverPan_SnapBack_Start;
THEMES_CONNECTION_REQUEST;
THEMES_PORT_NAME;
UXTHEME_ExplorerBar_HeaderBackground;
UXTHEME_ExplorerBar_HeaderClose;
UXTHEME_ExplorerBar_HeaderPin;
UXTHEME_ExplorerBar_IEBarMenu;
UXTHEME_ExplorerBar_NormalGroupCollapse;
UXTHEME_ExplorerBar_NormalGroupExpand;
UXTHEME_ExplorerBar_NormalGroupHead;
UXTHEME_ExplorerBar_SpecialGroupBackground;
UXTHEME_ExplorerBar_SpecialGroupCollapse;
UXTHEME_ExplorerBar_SpecialGroupExpand;
UXTHEME_ExplorerBar_SpecialGroupHead;
UXTHEME_Flyout_Linkheader;
UXTHEME_Helpsearchbox_Hsbbackground;
UXTHEME_Listbox_Item;
UXTHEME_Progress_Bar;
UXTHEME_Progress_BarVert;
UXTHEME_Progress_Chunk;
UXTHEME_Progress_ChunkVert;
UXTHEME_StartMenuMenuBand;
UXTHEME_StartPanel_LogoffButtons;
UXTHEME_StartPanel_MorePrograms;
UXTHEME_StartPanel_MoreProgramsArrow;
UXTHEME_StartPanel_PlacesList;
UXTHEME_StartPanel_PlacesListSeparator;
UXTHEME_StartPanel_ProgList;
UXTHEME_StartPanel_ProgListSeparator;
UXTHEME_StartPanel_UserPane;
UXTHEME_StartPanel_UserPicture;
UXTHEME_TaskBand;
UXTHEME_TaskBar_SizingBarBottom;
UXTHEME_TaskBar_SizingBarLeft;
UXTHEME_TaskBar_SizingBarRight;
UXTHEME_TaskBar_SizingBarTop;
UxThemeTelemetry::`vftable';
VSENUMSYMBOL::`vftable';
VSSYMBOL::`vftable';
WinRTAnimationBase::`vftable';
WinRTAnimationVector::`vftable';
WinRTAnimationVectorIterator::`vftable';
WinRTOpacityAnimation::`vftable';
WinRTReferenceFloat::`vftable';
WinRTScaleAnimation::`vftable';
WinRTTranslationAnimation::`vftable';
Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>::`vftable';
Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>::`vftable';
Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>::`vftable';
Windows::Foundation::IReference<float>::`vftable';
_DELAY_IMPORT_DESCRIPTOR_CRYPTSP_dll;
_DELAY_IMPORT_DESCRIPTOR_WindowsCodecs_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_core_com_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_core_winrt_string_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_api_ms_win_security_sddl_l1_1_0_dll;
_DELAY_IMPORT_DESCRIPTOR_dwmapi_dll;
_IMPORT_DESCRIPTOR_GDI32;
_IMPORT_DESCRIPTOR_USER32;
_IMPORT_DESCRIPTOR_api-ms-win-core-atoms-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-debug-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-delayload-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-delayload-l1-1-1;
_IMPORT_DESCRIPTOR_api-ms-win-core-errorhandling-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-file-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-handle-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-heap-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-heap-l2-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-kernel32-legacy-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-libraryloader-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-libraryloader-l1-2-1;
_IMPORT_DESCRIPTOR_api-ms-win-core-localization-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-localization-obsolete-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-memory-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-processenvironment-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-processthreads-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-profile-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-registry-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-rtlsupport-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-shlwapi-obsolete-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-sidebyside-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-string-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-string-l2-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-string-obsolete-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-synch-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-synch-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-sysinfo-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-threadpool-l1-2-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-timezone-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-util-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-core-winrt-error-l1-1-0;
_IMPORT_DESCRIPTOR_api-ms-win-security-base-l1-1-0;
_IMPORT_DESCRIPTOR_msvcrt;
_IMPORT_DESCRIPTOR_ntdll;
_Init_global_epoch;
_Init_thread_epoch;
_NULL_DELAY_IMPORT_DESCRIPTOR;
_NULL_IMPORT_DESCRIPTOR;
_TraceLoggingMetadata;
_TraceLoggingMetadataEnd;
_Tss_cv;
_Tss_mutex;
__DefaultResolveDelayLoadedAPIFlags;
__PchSym_;
__ResolveDelayLoadedAPIFlags;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_1;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_2;
__WIL_WNF_WIL_FEATURE_DEVICE_USAGE_TRACKING_3;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_1;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_2;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_3;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_4;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_5;
__WIL_WNF_WIL_FEATURE_HEALTH_TRACKING_6;
__WIL_WNF_WIL_FEATURE_USAGE_FOR_SRUM;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_1;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_2;
__WIL_WNF_WIL_FEATURE_USAGE_TRACKING_3;
__WIL_WNF_WIL_MACHINE_FEATURE_STORE;
__WIL_WNF_WIL_MACHINE_FEATURE_STORE_MODIFIED;
__WIL_WNF_WIL_USER_FEATURE_STORE;
__WIL_WNF_WIL_USER_FEATURE_STORE_MODIFIED;
__dyn_tls_init_callback;
__guard_check_icall_fptr;
__guard_dispatch_icall_fptr;
__guard_fids_table;
__guard_iat_table;
__imp__onexit;
__minATLObjMap_AnimationDescription;
__native_dllmain_reason;
__native_startup_lock;
__native_startup_state;
__objectFactory__AnimationDescription;
__object_AnimationDescription;
__onexitbegin;
__onexitend;
__pfnDefaultDliFailureHook2;
__pfnDliFailureHook2;
__pobjectentryfirst;
__pobjectentrylast;
__pobjectentrymid;
__proc_attached;
__rawdllmain_called;
__security_cookie;
__security_cookie_complement;
__xc_a;
__xc_z;
__xi_a;
__xi_z;
__xl_a;
__xl_z;
_cInitUAH;
_cNcPaintWnd;
_csNcPaint;
_csNcSysMet;
_csSysMetCall;
_csThemeMet;
_fShouldEnableApiHooks;
_fSysMetCall;
_fUnhooking;
_guard_dispatch_icall_nop;
_hmod__CRYPTSP_dll;
_hmod__WindowsCodecs_dll;
_hmod__api_ms_win_core_com_l1_1_0_dll;
_hmod__api_ms_win_core_winrt_string_l1_1_0_dll;
_hmod__api_ms_win_security_sddl_l1_1_0_dll;
_hmod__dwmapi_dll;
_hookinf;
_imp_?terminateYAXXZ;
_imp_AbortPath;
_imp_AcquireSRWLockExclusive;
_imp_AcquireSRWLockShared;
_imp_ActivateActCtx;
_imp_AddAtomW;
_imp_AdjustWindowRectEx;
_imp_AllowSetForegroundWindow;
_imp_Arc;
_imp_BeginPath;
_imp_BitBlt;
_imp_BroadcastThemeChangeEvent;
_imp_CalcMenuBar;
_imp_CallNextHookEx;
_imp_CallWindowProcW;
_imp_CharNextW;
_imp_CheckTokenMembership;
_imp_ClearBitmapAttributes;
_imp_ClientToScreen;
_imp_CloseDesktop;
_imp_CloseHandle;
_imp_CloseThreadpoolTimer;
_imp_CoCreateFreeThreadedMarshaler;
_imp_CoTaskMemAlloc;
_imp_CoTaskMemFree;
_imp_CoTaskMemRealloc;
_imp_CombineRgn;
_imp_CompareStringOrdinal;
_imp_CompareStringW;
_imp_ConvertSidToStringSidW;
_imp_ConvertStringSecurityDescriptorToSecurityDescriptorW;
_imp_CopyImage;
_imp_CopyRect;
_imp_CopySid;
_imp_CreateActCtxW;
_imp_CreateCompatibleBitmap;
_imp_CreateCompatibleDC;
_imp_CreateDIBSection;
_imp_CreateDIBitmap;
_imp_CreateDPIScaledDIBSection;
_imp_CreateFileMappingW;
_imp_CreateFileW;
_imp_CreateFontIndirectW;
_imp_CreateIconIndirect;
_imp_CreateMutexExW;
_imp_CreateMutexW;
_imp_CreatePatternBrush;
_imp_CreatePen;
_imp_CreateRectRgn;
_imp_CreateRectRgnIndirect;
_imp_CreateSemaphoreExW;
_imp_CreateSessionMappedDIBSection;
_imp_CreateSolidBrush;
_imp_CreateThread;
_imp_CreateThreadpoolTimer;
_imp_CryptAcquireContextW;
_imp_CryptCreateHash;
_imp_CryptDestroyHash;
_imp_CryptDestroyKey;
_imp_CryptHashData;
_imp_CryptImportKey;
_imp_CryptReleaseContext;
_imp_CryptVerifySignatureW;
_imp_DeactivateActCtx;
_imp_DebugBreak;
_imp_DecodePointer;
_imp_DefFrameProcW;
_imp_DefWindowProcW;
_imp_DelayLoadFailureHook;
_imp_DeleteAtom;
_imp_DeleteCriticalSection;
_imp_DeleteDC;
_imp_DeleteObject;
_imp_DestroyIcon;
_imp_DisableThreadLibraryCalls;
_imp_DispatchMessageW;
_imp_DisplayConfigGetDeviceInfo;
_imp_DrawEdge;
_imp_DrawIconEx;
_imp_DrawMenuBar;
_imp_DrawTextExW;
_imp_DrawTextW;
_imp_DuplicateHandle;
_imp_DwmDefWindowProc;
_imp_DwmExtendFrameIntoClientArea;
_imp_DwmGetWindowAttribute;
_imp_DwmIsCompositionEnabled;
_imp_DwmSetWindowAttribute;
_imp_DwmpGetColorizationParameters;
_imp_DwmpResetColorizationParameters;
_imp_DwmpSetColorizationParameters;
_imp_Ellipse;
_imp_EncodePointer;
_imp_EndPath;
_imp_EnterCriticalSection;
_imp_EnumChildWindows;
_imp_EnumDesktopWindows;
_imp_EnumDesktopsW;
_imp_EnumDisplayDevicesW;
_imp_EnumDisplayMonitors;
_imp_EnumDisplaySettingsW;
_imp_EqualRect;
_imp_EtwEventRegister;
_imp_EtwEventSetInformation;
_imp_EtwEventUnregister;
_imp_EtwEventWriteTransfer;
_imp_ExcludeClipRect;
_imp_ExpandEnvironmentStringsW;
_imp_ExtCreatePen;
_imp_ExtCreateRegion;
_imp_ExtTextOutW;
_imp_FillRect;
_imp_FindClose;
_imp_FindFirstFileW;
_imp_FindNextFileW;
_imp_FindResourceExW;
_imp_FindWindowW;
_imp_FormatMessageW;
_imp_FreeLibrary;
_imp_FreeLibraryAndExitThread;
_imp_GdiAlphaBlend;
_imp_GdiDrawStream;
_imp_GdiFlush;
_imp_GdiGradientFill;
_imp_GdiTransparentBlt;
_imp_GetACP;
_imp_GetActiveProcessesDpis;
_imp_GetAncestor;
_imp_GetAtomNameW;
_imp_GetBkColor;
_imp_GetBoundsRect;
_imp_GetCapture;
_imp_GetClassLongPtrW;
_imp_GetClassLongW;
_imp_GetClassNameW;
_imp_GetClientRect;
_imp_GetClipBox;
_imp_GetClipRgn;
_imp_GetCurrentObject;
_imp_GetCurrentProcess;
_imp_GetCurrentProcessId;
_imp_GetCurrentThread;
_imp_GetCurrentThreadId;
_imp_GetDC;
_imp_GetDCDpiScaleValue;
_imp_GetDCEx;
_imp_GetDIBits;
_imp_GetDesktopWindow;
_imp_GetDeviceCaps;
_imp_GetDpiForMonitorInternal;
_imp_GetDpiForSystem;
_imp_GetFileAttributesW;
_imp_GetFileSize;
_imp_GetFileTime;
_imp_GetForegroundWindow;
_imp_GetFullPathNameW;
_imp_GetGUIThreadInfo;
_imp_GetIconInfo;
_imp_GetKeyState;
_imp_GetLastError;
_imp_GetLayout;
_imp_GetLengthSid;
_imp_GetMenuBarInfo;
_imp_GetMenuInfo;
_imp_GetMenuItemCount;
_imp_GetMenuItemInfoW;
_imp_GetMessagePos;
_imp_GetModuleFileNameA;
_imp_GetModuleFileNameW;
_imp_GetModuleHandleExW;
_imp_GetModuleHandleW;
_imp_GetMonitorInfoW;
_imp_GetObjectType;
_imp_GetObjectW;
_imp_GetParent;
_imp_GetProcAddress;
_imp_GetProcessHeap;
_imp_GetProcessWindowStation;
_imp_GetPropW;
_imp_GetRandomRgn;
_imp_GetRegionData;
_imp_GetRgnBox;
_imp_GetShellWindow;
_imp_GetStockObject;
_imp_GetStringTypeW;
_imp_GetSysColor;
_imp_GetSysColorBrush;
_imp_GetSystemDirectoryW;
_imp_GetSystemInfo;
_imp_GetSystemMenu;
_imp_GetSystemMetrics;
_imp_GetSystemMetricsForDpi;
_imp_GetSystemTime;
_imp_GetSystemTimeAsFileTime;
_imp_GetTextAlign;
_imp_GetTextMetricsW;
_imp_GetThreadDesktop;
_imp_GetTickCount;
_imp_GetTitleBarInfo;
_imp_GetTokenInformation;
_imp_GetUserDefaultUILanguage;
_imp_GetUserObjectInformationW;
_imp_GetVersionExW;
_imp_GetViewportOrgEx;
_imp_GetWindow;
_imp_GetWindowDC;
_imp_GetWindowDPI;
_imp_GetWindowInfo;
_imp_GetWindowLongPtrW;
_imp_GetWindowLongW;
_imp_GetWindowOrgEx;
_imp_GetWindowPlacement;
_imp_GetWindowRect;
_imp_GetWindowRgnBox;
_imp_GetWindowTextW;
_imp_GetWindowThreadProcessId;
_imp_HeapAlloc;
_imp_HeapCreate;
_imp_HeapDestroy;
_imp_HeapFree;
_imp_HeapReAlloc;
_imp_ImpersonateLoggedOnUser;
_imp_InflateRect;
_imp_InitOnceBeginInitialize;
_imp_InitOnceComplete;
_imp_InitializeCriticalSection;
_imp_InitializeCriticalSectionAndSpinCount;
_imp_InitializeCriticalSectionEx;
_imp_InitializeSRWLock;
_imp_InternalEnumChildWindows;
_imp_InternalEnumDesktopWindows;
_imp_InternalGetWindowText;
_imp_IntersectClipRect;
_imp_IntersectRect;
_imp_InvalidateRect;
_imp_IsChild;
_imp_IsChildWindowDpiMessageEnabled;
_imp_IsDebuggerPresent;
_imp_IsIconic;
_imp_IsMenu;
_imp_IsNonClientDpiScalingEnabled;
_imp_IsProcessDPIAware;
_imp_IsRectEmpty;
_imp_IsServerSideWindow;
_imp_IsThreadDesktopComposited;
_imp_IsTopLevelWindow;
_imp_IsValidSid;
_imp_IsWindow;
_imp_IsWindowBroadcastingDpiToChildren;
_imp_IsWindowInDestroy;
_imp_IsWindowRedirectedForPrint;
_imp_IsWindowVisible;
_imp_IsZoomed;
_imp_KillTimer;
_imp_LPtoDP;
_imp_LeaveCriticalSection;
_imp_LoadIconW;
_imp_LoadLibraryExW;
_imp_LoadLibraryW;
_imp_LoadResource;
_imp_LoadStringW;
_imp_LocalAlloc;
_imp_LocalFree;
_imp_LockResource;
_imp_MapViewOfFile;
_imp_MapWindowPoints;
_imp_MonitorFromRect;
_imp_MonitorFromWindow;
_imp_MsgWaitForMultipleObjectsEx;
_imp_MulDiv;
_imp_MultiByteToWideChar;
_imp_NtClose;
_imp_NtConnectPort;
_imp_NtCreateSection;
_imp_NtOpenSection;
_imp_NtRequestWaitReplyPort;
_imp_OffsetRect;
_imp_OffsetRgn;
_imp_OpenDesktopW;
_imp_OpenFileMappingW;
_imp_OpenProcessToken;
_imp_OpenSemaphoreW;
_imp_OpenThreadToken;
_imp_OutputDebugStringW;
_imp_PaintMenuBar;
_imp_PatBlt;
_imp_PathToRegion;
_imp_PeekMessageW;
_imp_PostMessageW;
_imp_PtInRect;
_imp_PtInRegion;
_imp_QueryPerformanceCounter;
_imp_QueryPerformanceFrequency;
_imp_ReadFile;
_imp_RectVisible;
_imp_Rectangle;
_imp_RedrawWindow;
_imp_RegCloseKey;
_imp_RegCreateKeyExW;
_imp_RegDeleteValueW;
_imp_RegGetValueW;
_imp_RegOpenCurrentUser;
_imp_RegOpenKeyExW;
_imp_RegQueryValueExW;
_imp_RegSetValueExW;
_imp_RegisterDManipHook;
_imp_RegisterUserApiHook;
_imp_ReleaseActCtx;
_imp_ReleaseCapture;
_imp_ReleaseDC;
_imp_ReleaseMutex;
_imp_ReleaseSRWLockExclusive;
_imp_ReleaseSRWLockShared;
_imp_ReleaseSemaphore;
_imp_RemovePropW;
_imp_ResolveDelayLoadedAPI;
_imp_RevertToSelf;
_imp_RoOriginateError;
_imp_RoOriginateErrorW;
_imp_RoundRect;
_imp_RtlAcquireSRWLockExclusive;
_imp_RtlAcquireSRWLockShared;
_imp_RtlCaptureContext;
_imp_RtlGetThreadLangIdByIndex;
_imp_RtlInitUnicodeString;
_imp_RtlInitializeCriticalSection;
_imp_RtlInitializeSRWLock;
_imp_RtlLookupFunctionEntry;
_imp_RtlReleaseSRWLockExclusive;
_imp_RtlReleaseSRWLockShared;
_imp_RtlVirtualUnwind;
_imp_SbSelectProcedure;
_imp_SelectClipPath;
_imp_SelectClipRgn;
_imp_SelectObject;
_imp_SendMessageTimeoutW;
_imp_SendMessageW;
_imp_SendNotifyMessageW;
_imp_SetBitmapAttributes;
_imp_SetBkColor;
_imp_SetBkMode;
_imp_SetBoundsRect;
_imp_SetBrushOrgEx;
_imp_SetCapture;
_imp_SetDIBits;
_imp_SetFilePointer;
_imp_SetKernelObjectSecurity;
_imp_SetLastError;
_imp_SetLayout;
_imp_SetMenuItemInfoW;
_imp_SetProcessDPIAware;
_imp_SetPropW;
_imp_SetRect;
_imp_SetRectEmpty;
_imp_SetStretchBltMode;
_imp_SetSysColors;
_imp_SetTextAlign;
_imp_SetTextColor;
_imp_SetThreadToken;
_imp_SetThreadpoolTimer;
_imp_SetTimer;
_imp_SetUnhandledExceptionFilter;
_imp_SetViewportOrgEx;
_imp_SetWindowLongPtrW;
_imp_SetWindowLongW;
_imp_SetWindowOrgEx;
_imp_SetWindowPos;
_imp_SetWindowRgn;
_imp_SetWindowsHookExW;
_imp_SizeofResource;
_imp_Sleep;
_imp_SleepConditionVariableSRW;
_imp_StrRStrIW;
_imp_StretchBlt;
_imp_StrokeAndFillPath;
_imp_SystemParametersInfoA;
_imp_SystemParametersInfoForDpi;
_imp_SystemParametersInfoW;
_imp_SystemTimeToFileTime;
_imp_TerminateProcess;
_imp_TlsAlloc;
_imp_TlsFree;
_imp_TlsGetValue;
_imp_TlsSetValue;
_imp_TrackMouseEvent;
_imp_UnhandledExceptionFilter;
_imp_UnhookWindowsHookEx;
_imp_UnmapViewOfFile;
_imp_ValidateRect;
_imp_VirtualAlloc;
_imp_VirtualFree;
_imp_WICCreateImagingFactory_Proxy;
_imp_WaitForSingleObject;
_imp_WaitForSingleObjectEx;
_imp_WaitForThreadpoolTimerCallbacks;
_imp_WakeAllConditionVariable;
_imp_WindowFromDC;
_imp_WindowsCreateString;
_imp_WindowsGetStringRawBuffer;
_imp_WindowsIsStringEmpty;
_imp_WindowsStringHasEmbeddedNull;
_imp__XcptFilter;
_imp___C_specific_handler;
_imp___CxxFrameHandler3;
_imp___dllonexit;
_imp__amsg_exit;
_imp__initterm;
_imp__lock;
_imp__purecall;
_imp__unlock;
_imp__vsnwprintf;
_imp__wsplitpath_s;
_imp__wtof;
_imp_atan;
_imp_bsearch_s;
_imp_cos;
_imp_fflush;
_imp_floor;
_imp_fmodf;
_imp_fputws;
_imp_free;
_imp_fwprintf;
_imp_lstrcmpW;
_imp_lstrcmpiW;
_imp_lstrlenW;
_imp_malloc;
_imp_memcmp;
_imp_memcpy;
_imp_memcpy_s;
_imp_memmove;
_imp_memmove_s;
_imp_memset;
_imp_pow;
_imp_rand;
_imp_rand_s;
_imp_sqrt;
_imp_strchr;
_imp_wcschr;
_imp_wcsspn;
_imp_wcstok_s;
_imp_wcstol;
_imp_wcstoul;
_load_config_used;
_pRawDllMain;
_primitives;
_real;
_realbf800000;
_realc000000000000000;
_rgDdpHandlers;
_rgDwpHandlers;
_rgOwpHandlers;
_rgtwNcPaint;
_sz_CRYPTSP_dll;
_sz_WindowsCodecs_dll;
_sz_api_ms_win_core_com_l1_1_0_dll;
_sz_api_ms_win_core_winrt_string_l1_1_0_dll;
_sz_api_ms_win_security_sddl_l1_1_0_dll;
_sz_dwmapi_dll;
_tls_end;
_tls_index;
_tls_start;
_tls_used;
_vscolorprops;
_vsdocprops;
_xmm;
_xmmffffffffffffffffffffffffffffffff;
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::$TSS0;
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::moduleSingleton;
`UxThemeTelemetry::DisableThemeForProcessTelemetryEvent'::`2'::fWasReported;
`UxThemeTelemetry::DisableThemeForProcessTelemetryEvent'::`7'::_TlgEvent;
`UxThemeTelemetry::DisableThemeForWindowTelemetryEvent'::`2'::fWasReported;
`UxThemeTelemetry::DisableThemeForWindowTelemetryEvent'::`7'::_TlgEvent;
`UxThemeTelemetry::Instance'::`2'::wrapper;
`UxThemeTelemetry::LogDarkModeClassLookup'::`4'::_TlgEvent;
`UxThemeTelemetry::LogDarkModeClassMatch'::`4'::_TlgEvent;
`UxThemeTelemetry::LogDefaultAppMode'::`4'::_TlgEvent;
`UxThemeTelemetry::LogDefaultAppModeChange'::`4'::_TlgEvent;
`UxThemeTelemetry::StaticHandle::StaticHandle'::`2'::__hInner;
`UxThemeTelemetry::StaticHandle::StaticHandle'::`2'::__hInner_Meta;
`wil::Feature<__WilFeatureTraits_Feature_EnableAnimationDesigner>::GetFeaturePropertyCache'::`2'::data;
`wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme>::GetFeaturePropertyCache'::`2'::data;
`wil::SetLastError'::`2'::lastThread;
`wil::SetLastError'::`5'::depth;
`wil::TraceLoggingProvider::ReportTelemetryFailure'::`4'::_TlgEvent;
`wil::TraceLoggingProvider::ReportTraceLoggingFailure'::`4'::_TlgEvent;
`wil::TraceLoggingProvider::WasAlreadyReportedToTelemetry'::`2'::s_lastFailureSeen;
`wil::details::FeatureLogging::Instance'::`2'::wrapper;
`wil::details::FeatureLogging::StaticHandle::StaticHandle'::`2'::__hInner;
`wil::details::FeatureLogging::StaticHandle::StaticHandle'::`2'::__hInner_Meta;
`wil::details::FeatureLoggingHook'::`10'::_TlgEvent;
`wil::details::FeatureLoggingHook'::`18'::_TlgEvent;
`wil::details::FeatureLoggingHook'::`27'::_TlgEvent;
`wil::details::FeatureLoggingHook'::`36'::_TlgEvent;
`wil::details::GetCurrentModuleName'::`2'::s_fModuleValid;
`wil::details::GetCurrentModuleName'::`2'::s_szModule;
`wil::details::IsFeatureConfigured'::`2'::machineStoreProbe;
`wil::details::IsFeatureConfigured'::`2'::userStoreProbe;
`wil::details::LogFailure'::`2'::s_failureId;
`wil::details::RecordException'::`2'::s_cErrorCount;
`wil::details::RecordException'::`2'::s_hrErrorLast;
`wil::details::RecordFailFast'::`2'::s_hrErrorLast;
`wil::details::RecordLog'::`2'::s_cErrorCount;
`wil::details::RecordLog'::`2'::s_hrErrorLast;
`wil::details::RecordReturn'::`2'::s_cErrorCount;
`wil::details::RecordReturn'::`2'::s_hrErrorLast;
`wil::details::RtlDllShutdownInProgress'::`2'::s_pfnRtlDllShutdownInProgress;
`wil::details::RtlNtStatusToDosErrorNoTeb'::`2'::s_pfnRtlNtStatusToDosErrorNoTeb;
c_rgtm;
c_szAMAP;
c_szBCMAP;
c_szCMAP;
c_szColorVariantElement;
c_szDocumentationElement;
c_szGlobalsElement;
c_szRMAP;
c_szSizeVariantElement;
c_szSysmetsElement;
c_szTimingFunctionElement;
c_szUserParamValue;
c_szUserXOnlyParamValue;
c_szUserYOnlyParamValue;
c_szUserZOnlyParamValue;
c_szVARIANT;
c_szVMAP;
g_DpiInfo;
g_DpiInfo$initializer$;
g_ImmersiveColorDerivationRules;
g_ImmersiveColorNames;
g_ImmersiveColorPresets;
g_ImmersiveColorRangeRules;
g_ImmersiveHighContrastMappings;
g_ImmersiveHuePropertyVariance;
g_ImmersiveStaticColors;
g_SbCachedModuleTable_UxthemeNamespace;
g_SbInternalModuleTable_UxthemeNamespace;
g_SbModuleTable_UxthemeNamespace;
g_SbTableEntry_HCThemingStatusSwitchBranch_UxthemeNamespace;
g_cpDefaultColorPreference;
g_cpDefaultColorPreference$initializer$;
g_cpDefaultServerColorPreference;
g_cpDefaultServerColorPreference$initializer$;
g_csRedir;
g_dwIsColorSelectionDisabledByPolicy;
g_dwNoChangingStartMenuBackgroundByPolicy;
g_dwProcessId;
g_eThemeHookState;
g_fAllowUxCtrlCalls;
g_fAppOptInHighContrast;
g_fColorDataInitialized;
g_fColorPreferenceMappingWritable;
g_fDPIAware;
g_fEarlyHookRequest;
g_fForceHighContrastModeUnderTest;
g_fForcedDpi;
g_fInitUxCtrl;
g_fLocalTestMode;
g_fModuleInitialized;
g_fRedirInitialized;
g_fUxthemeInitialized;
g_hColorPreferenceMapping;
g_hColorPreferenceMappingMutex;
g_hInst;
g_hModuleUxCtrl;
g_header_init_InitializeResultHeader;
g_header_init_InitializeStagingHeaderInternalApi;
g_header_init_InitializeStagingSRUMFeatureReporting;
g_header_init_StagingEventsInitialize;
g_header_init_StagingEventsInitialize$initializer$;
g_header_init_WilInitialize_ResultMacros_DesktopOrSystem;
g_isAppModeLight;
g_lockModule;
g_nScreenDpi;
g_pAppInfo;
g_pBitmapCacheScaled;
g_pBitmapCacheUnscaled;
g_pGuidFlags;
g_pRenderList;
g_pWindowFeedBackAnimation;
g_pcpColorPreference;
g_pfnResultLoggingCallback;
g_pfnThrowPlatformException;
g_pfnsUxCtrl;
g_pszUxCtrlfn;
g_szProcessName;
g_szTrackingParts;
g_tbUsingHighContrast;
g_tmErrInfo;
g_ulAppCompatFlags;
g_ulAppCompatFlagsEx;
g_wil_details_RecordSRUMFeatureUsage;
g_wil_details_apiGetFeatureEnabledState;
g_wil_details_apiRecordFeatureUsage;
g_wil_details_apiSubscribeFeatureStateChangeNotification;
g_wil_details_apiUnsubscribeFeatureStateChangeNotification;
g_wil_details_internalGetFeatureEnabledState;
g_wil_details_internalRecordFeatureError;
g_wil_details_internalRecordFeatureUsage;
g_wil_details_internalSubscribeFeatureStateChangeNotification;
g_wil_details_internalUnsubscribeFeatureStateChangeNotification;
g_wil_details_ntdllModuleHandle;
g_wil_details_pfnFeatureLoggingHook;
g_wil_details_pfnNtQueryWnfStateData;
g_wil_details_pfnNtUpdateWnfStateData;
g_wil_details_pfnRtlSubscribeWnfStateChangeNotification;
g_wil_details_pfnRtlUnsubscribeWnfNotificationWaitForCompletion;
g_wil_details_preventOnDemandStagingConfigReads;
g_wil_details_recordFeatureUsage;
gc_BACKGROUND_SUGGESTED_COLORS_TABLE;
gc_SATURATION_DELTAS_FOR_STANDARD_COLORS;
gc_STANDARD_COLORS_TABLE;
gc_STANDARD_LUMINOSITY_OFFSETS;
kszBeginCacheFileSignature;
kszEndCacheFileSignature;
parse_table;
pcinit;
property_map;
pszSysColorNames;
s_crcTable;
s_dwThreadId;
s_hHeap;
s_hHeapToUse;
s_hwndCurrent;
s_incmCache;
s_incmCache$initializer$;
s_keyPublic1;
s_nctmCache;
s_nctmCache$initializer$;
s_pFeedBackManager;
s_rgPropertyFieldTbl;
std::nothrow;
typeConvertTbl;
wil::TraceLoggingProvider::`vftable';
wil::details::FeatureLogging::`vftable';
wil::details::ThreadFailureCallbackHolder::s_telemetryId;
wil::details::g_enabledStateManager;
wil::details::g_enabledStateManager$initializer$;
wil::details::g_featureStateManager;
wil::details::g_featureStateManager$initializer$;
wil::details::g_header_init_InitializeResultHeader$initializer$;
wil::details::g_header_init_InitializeStagingHeaderInternalApi$initializer$;
wil::details::g_header_init_InitializeStagingSRUMFeatureReporting$initializer$;
wil::details::g_header_init_WilInitialize_ResultMacros_DesktopOrSystem$initializer$;
wil::details::g_pThreadFailureCallbacks;
wil::details::g_pfnDebugBreak;
wil::details::g_pfnGetContextAndNotifyFailure;
wil::details::g_pfnGetModuleInformation;
wil::details::g_pfnGetModuleName;
wil::details::g_pfnLoggingCallback;
wil::details::g_pfnOriginateCallback;
wil::details::g_pfnRaiseFailFastException;
wil::details::g_pfnRethrow;
wil::details::g_pfnRtlDllShutdownInProgress;
wil::details::g_pfnRtlNtStatusToDosErrorNoTeb;
wil::details::g_pfnTelemetryCallback;
wil::details::g_pfnThrowResultException;
wil::details::g_processLocalData;
wil::details::g_processLocalData$initializer$;
wil::details::g_processShutdownInProgress;
wil::details::g_resultMessageCallbackSet;
wil::details::g_threadFailureCallbacks;
wil::details::g_threadFailureCallbacks$initializer$;
wil::details_abi::g_pProcessLocalData;
wil::g_fBreakOnFailure;
wil::g_fIsDebuggerPresent;
wil::g_pfnIsDebuggerPresent;
wil::g_pfnWilFailFast;
wistd::_Func_base<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`vftable';
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`vftable';
CRYPTSP_NULL_THUNK_DATA_DLA;
CRYPTSP_NULL_THUNK_DATA_DLB;
CRYPTSP_NULL_THUNK_DATA_DLN;
GDI32_NULL_THUNK_DATA;
USER32_NULL_THUNK_DATA;
WindowsCodecs_NULL_THUNK_DATA_DLA;
WindowsCodecs_NULL_THUNK_DATA_DLB;
WindowsCodecs_NULL_THUNK_DATA_DLN;
api-ms-win-core-atoms-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLA;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLB;
api-ms-win-core-com-l1-1-0_NULL_THUNK_DATA_DLN;
api-ms-win-core-debug-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-delayload-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-delayload-l1-1-1_NULL_THUNK_DATA;
api-ms-win-core-errorhandling-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-file-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-handle-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-heap-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-heap-l2-1-0_NULL_THUNK_DATA;
api-ms-win-core-kernel32-legacy-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-libraryloader-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-libraryloader-l1-2-1_NULL_THUNK_DATA;
api-ms-win-core-localization-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-localization-obsolete-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-memory-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-processenvironment-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-processthreads-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-profile-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-registry-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-rtlsupport-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-shlwapi-obsolete-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-sidebyside-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-string-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-string-l2-1-0_NULL_THUNK_DATA;
api-ms-win-core-string-obsolete-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-synch-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-synch-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-sysinfo-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-threadpool-l1-2-0_NULL_THUNK_DATA;
api-ms-win-core-timezone-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-util-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-winrt-error-l1-1-0_NULL_THUNK_DATA;
api-ms-win-core-winrt-string-l1-1-0_NULL_THUNK_DATA_DLA;
api-ms-win-core-winrt-string-l1-1-0_NULL_THUNK_DATA_DLB;
api-ms-win-core-winrt-string-l1-1-0_NULL_THUNK_DATA_DLN;
api-ms-win-security-base-l1-1-0_NULL_THUNK_DATA;
api-ms-win-security-sddl-l1-1-0_NULL_THUNK_DATA_DLA;
api-ms-win-security-sddl-l1-1-0_NULL_THUNK_DATA_DLB;
api-ms-win-security-sddl-l1-1-0_NULL_THUNK_DATA_DLN;
dwmapi_NULL_THUNK_DATA_DLA;
dwmapi_NULL_THUNK_DATA_DLB;
dwmapi_NULL_THUNK_DATA_DLN;
msvcrt_NULL_THUNK_DATA;
ntdll_NULL_THUNK_DATA;

<lambda_02deec49ef48fa12c9095208f5992a62>::<lambda_invoker_cdecl>();
<lambda_057488ec2a114cea6fb77af5c8c7453a>::operator()();
<lambda_120d0c6b51dc644cb63ed5c7fc62f6c3>::<lambda_invoker_cdecl>();
<lambda_152aa9d2a3a0648fa2fa7fcef514b376>::<lambda_invoker_cdecl>();
<lambda_2586d60923f8412dce879009b83555c3>::<lambda_invoker_cdecl>();
<lambda_2956f8a5574489c386a334de36179b35>::operator()();
<lambda_395b8c38dee70e6dfe044506095802dc>::operator()();
<lambda_42ed7cb8e6cd03c5242b9a63c40e80d6>::<lambda_invoker_cdecl>();
<lambda_59b94cc75e0fed8400abb068a9a92564>::operator()();
<lambda_5d88ad0efcd33a8c54f53a4af530167a>::operator()();
<lambda_694cf3250e255c878c64dabf1ae2e40c>::<lambda_invoker_cdecl>();
<lambda_74900582371bb26b135d7f7a3ba0da76>::<lambda_invoker_cdecl>();
<lambda_a6162ed205bf533298d20564adf5c8f3>::<lambda_invoker_cdecl>();
<lambda_b6ca3ce7cb22d4801908e6a5f400330d>::<lambda_invoker_cdecl>();
<lambda_b72ac75bae0508313abee1c4c03a6b26>::operator()();
<lambda_d920a0a3d4a387d1d77e21b11a8b43bc>::<lambda_invoker_cdecl>();
APPCLASSLOCAL::APPCLASSLOCAL();
APPCLASSLOCAL::~APPCLASSLOCAL();
AccentColorUtils::HSLtoRGB();
AccentColorUtils::RGBFromHue();
AccentColorUtils::RGBtoHSL();
AccentColors::GetAccentColor();
AccentColors::GetAccentVariants();
AccentColors::GetColorChoices();
AccentColors::PopulateCurrentAccentPalette();
AccentColors::SetAccentColorInternal();
AccentColors::UpdateHistory();
AccentColors::_IsKnownColor();
AccentIndexFromColorType();
AddThemeAppCompatFlags();
AllocAndCopySid();
AllocAnimationRecord();
AllocAtlasImageResRecord();
AllocAtlasInputImageRecord();
AllocBoolRecord();
AllocDiskStreamResRecord();
AllocEnumRecord();
AllocFloatListRecord();
AllocFloatRecord();
AllocFontRecord();
AllocFontResRecord();
AllocImageFileRecord();
AllocImageFileResRecord();
AllocIntRecord();
AllocIntlistRecord();
AllocIntlistResRecord();
AllocMarginRecord();
AllocPositionRecord();
AllocRGBRecord();
AllocRectRecord();
AllocStreamRecord();
AllocStreamResRecord();
AllocStringRecord();
AllocStringResRecord();
AllowDarkModeForApp();
AllowDarkModeForWindow();
AnimationDescription::AddRef();
AnimationDescription::AnimationDescription();
AnimationDescription::GetIids();
AnimationDescription::GetRuntimeClassName();
AnimationDescription::GetTrustLevel();
AnimationDescription::InternalGetRuntimeClassName();
AnimationDescription::InternalGetTrustLevel();
AnimationDescription::QueryInterface();
AnimationDescription::Release();
AnimationDescription::RuntimeClassInitialize();
AnimationDescription::`scalar deleting destructor'();
AnimationDescription::get_Animations();
AnimationDescription::get_DelayLimit();
AnimationDescription::get_StaggerDelay();
AnimationDescription::get_StaggerDelayFactor();
AnimationDescription::get_ZOrder();
AnimationDescriptionFactory::AddRef();
AnimationDescriptionFactory::AnimationDescriptionFactory();
AnimationDescriptionFactory::CreateInstance();
AnimationDescriptionFactory::GetIids();
AnimationDescriptionFactory::GetRuntimeClassName();
AnimationDescriptionFactory::GetTrustLevel();
AnimationDescriptionFactory::QueryInterface();
AnimationDescriptionFactory::Release();
AnimationDescriptionFactory::`scalar deleting destructor'();
AnimationLoader::AnimationLoader();
AnimationLoader::GetDword();
AnimationLoader::GetFloat();
AnimationLoader::GetTimeSpan();
AnimationLoader::GetTransform();
AnimationLoader::Initialize();
AnimationLoader::_OpenThemeData();
AnimationLoader::~AnimationLoader();
ApiHandlerInit();
ApplyStringProp();
ApplyThemeSections();
AsciiStrCmpI();
BeginBufferedAnimation();
BeginBufferedPaint();
BeginPanningFeedback();
BoxBlurHorz();
BoxBlurVert();
BufferedPaintClear();
BufferedPaintInit();
BufferedPaintRenderAnimation();
BufferedPaintSetAlpha();
BufferedPaintStopAllAnimations();
BufferedPaintUnInit();
CAppInfo::AppIsThemed();
CAppInfo::BumpRefCount();
CAppInfo::CAppInfo();
CAppInfo::CloseThemeFile();
CAppInfo::CustomAppTheme();
CAppInfo::GetAppFlags();
CAppInfo::GetForeignWindows();
CAppInfo::InstallPrivateThemeFileForTesting();
CAppInfo::IsSystemThemeActive();
CAppInfo::OpenThemeFile();
CAppInfo::OpenWindowThemeFile();
CAppInfo::ResetAppTheme();
CAppInfo::WindowHasTheme();
CAppInfo::~CAppInfo();
CAutoCS::CAutoCS();
CAutoCS::~CAutoCS();
CAutoGDI<HBRUSH__ * __ptr64>::operator=();
CAutoGDI<HPEN__ * __ptr64>::operator=();
CAutoRefPtr<CThemeMenu>::CAutoRefPtr<CThemeMenu>();
CAutoRefPtr<CThemeMenu>::Ref();
CAutoRefPtr<CThemeMenu>::`scalar deleting destructor'();
CAutoRefPtr<CThemeMenu>::operator=();
CAutoRefPtr<CThemeMenu>::~CAutoRefPtr<CThemeMenu>();
CAutoRefPtr<CThemeMenuMetrics>::CAutoRefPtr<CThemeMenuMetrics>();
CAutoRefPtr<CThemeMenuMetrics>::operator=();
CAutoRefPtr<CThemeMenuMetrics>::~CAutoRefPtr<CThemeMenuMetrics>();
CAutoRefPtr<CTrackPartsObj>::Ref();
CBitArray::GetItem();
CBitArray::SetItem();
CBitArray::~CBitArray();
CBitmapCache::AcquireBitmap();
CBitmapCache::CBitmapCache();
CBitmapCache::ReturnBitmap();
CBitmapCache::`scalar deleting destructor'();
CBitmapPixels::CloseBitmap();
CBitmapPixels::OpenBitmap();
CBitmapPixels::~CBitmapPixels();
CBorderFill::DrawBackground();
CBorderFill::DrawComplexBackground();
CBorderFill::GetBackgroundRegion();
CBorderFill::IsBackgroundPartiallyTransparent();
CBorderFill::PackProperties();
CBufferedPaintThreadManager::ThreadAddRef();
CBufferedPaintThreadManager::ThreadRelease();
CColorizationColor::CColorizationColor();
CColorizationColor::ConvertHSBtoRGB();
CColorizationColor::GetBitOffsetForColorValueType();
CColorizationColor::GetRGBColor();
CColorizationColor::SetColor();
CCubicFadeAnimation::`scalar deleting destructor'();
CCurrentColorUser::CCurrentColorUser();
CCurrentUser::~CCurrentUser();
CDIBDataArray::~CDIBDataArray();
CDataSection::Create();
CDataSection::DetachAll();
CDataSection::MakeThemeDataSectionName();
CDataSection::`scalar deleting destructor'();
CDpiCache<CInternalNonclientMetrics>::CDpiCache<CInternalNonclientMetrics>();
CDpiCache<CInternalNonclientMetrics>::Clear();
CDpiCache<CInternalNonclientMetrics>::Get();
CDpiCache<CInternalNonclientMetrics>::~CDpiCache<CInternalNonclientMetrics>();
CDpiCache<_NCTHEMEMET>::CDpiCache<_NCTHEMEMET>();
CDpiCache<_NCTHEMEMET>::Clear();
CDpiCache<_NCTHEMEMET>::Get();
CDpiCache<_NCTHEMEMET>::~CDpiCache<_NCTHEMEMET>();
CFadeAnimation::BufferChanged();
CFadeAnimation::Initialize();
CFadeAnimation::Paint();
CFeedBackManager::BeginPanningFeedback();
CFeedBackManager::DeleteFinalizedAnimators();
CFeedBackManager::EndPanningFeedback();
CFeedBackManager::ForceEnd();
CFeedBackManager::LookupFeedbackEnabled();
CFeedBackManager::UpdatePanningFeedback();
CFeedBackManager::`scalar deleting destructor'();
CGlobalBufferPool::NeedsPruning();
CGlobalBufferPool::Prune();
CGlobalBufferPool::RemoveAll();
CGlobalBufferPool::Search();
CImageDecoder::Decode();
CImageDecoder::_EnsureBufferSize();
CImageDecoder::_Init();
CImageDecoder::~CImageDecoder();
CImageEncoder::CImageEncoder();
CImageEncoder::Encode();
CImageEncoder::_Init();
CImageEncoder::~CImageEncoder();
CImageFile::BuildRgnData();
CImageFile::CreateScaledBackgroundImage();
CImageFile::DrawBackground();
CImageFile::DrawBackgroundDS();
CImageFile::DrawFontGlyph();
CImageFile::DrawImageInfo();
CImageFile::EnumImageFiles();
CImageFile::FindBackgroundImageToScale();
CImageFile::GetBackgroundContentRect();
CImageFile::GetBackgroundRegion();
CImageFile::GetBitmap();
CImageFile::GetDrawnImageSize();
CImageFile::GetOffsets();
CImageFile::GetPartSize();
CImageFile::GetScaledContentMargins();
CImageFile::HasSizingMargin();
CImageFile::HitTestBackground();
CImageFile::KeyProperty();
CImageFile::PackProperties();
CImageFile::ScaleMargins();
CImageFile::SelectCorrectImageFile();
CImageFile::SetImageInfo();
CImmersiveColor::GetColor();
CImmersiveColorImpl::AcquireColorMutex();
CImmersiveColorImpl::EnsureInitialized();
CImmersiveColorImpl::GetColorFromPreferenceImpl();
CImmersiveColorImpl::GetColorPreferenceFromRegistry();
CImmersiveColorImpl::GetColorPreferenceImpl();
CImmersiveColorImpl::GetDefaultColorPreferenceFromRegistry();
CImmersiveColorImpl::GetGroupPolicyColors();
CImmersiveColorImpl::GetGroupPolicyDefault();
CImmersiveColorImpl::GetLinkedColorType();
CImmersiveColorImpl::GetWindows8PreferenceFromRegistry();
CImmersiveColorImpl::ReleaseColorMutex();
CImmersiveColorImpl::ResolveHSLRuleColor();
CImmersiveColorImpl::SetACLOnSharedObjectsforUser();
CImmersiveColorImpl::SetColorPreferenceHelper();
CImmersiveColorImpl::SetColorPreferenceImpl();
CImmersiveColorImpl::SetColorPreferenceToRegistry();
CImmersiveColorImpl::_UpdateColorPreferenceForDWM();
CInternalNonclientMetrics::Acquire();
CInternalNonclientMetrics::CompareLogfont();
CLinearFadeAnimation::`scalar deleting destructor'();
CMaxImageFile::MultiDibPtr();
CMdiBtns::Draw();
CMdiBtns::Load();
CMdiBtns::ThemeItem();
CMdiBtns::Unload();
CMdiBtns::_FindBtn();
CMemoryDC::CloseDC();
CMemoryDC::OpenDC();
CMessageBroadcast::CMessageBroadcast();
CMessageBroadcast::ChildWindowCallBack();
CMessageBroadcast::DesktopCallBack();
CMessageBroadcast::EnumRequestedWindows();
CMessageBroadcast::TopWindowCallBack();
CMessageBroadcast::Worker();
COffScreenBuffer::Clear();
COffScreenBuffer::CreateBuffer();
COffScreenBuffer::DestroyBuffer();
COffScreenBuffer::GetBits();
COffScreenBuffer::SetAlpha();
COffScreenBuffer::_CreateNewBuffer();
COffScreenBuffer::_PositionRect();
CPaintBuffer::CPaintBuffer();
CPaintBuffer::Clear();
CPaintBuffer::EndPaint();
CPaintBuffer::GetBitmapDpiScaleValue();
CPaintBuffer::GetBits();
CPaintBuffer::GetBitsPerPixel();
CPaintBuffer::GetDC();
CPaintBuffer::GetFormat();
CPaintBuffer::GetTargetDC();
CPaintBuffer::GetTargetRect();
CPaintBuffer::OnAnimationTimer();
CPaintBuffer::SetAlpha();
CPaintBuffer::SetFree();
CPaintBuffer::_BeginAnimation();
CPaintBuffer::_BeginNew();
CPaintBuffer::_CreateAnimation();
CPaintBuffer::_DestroyAnimation();
CPaintBuffer::_EndAnimation();
CPaintBuffer::_PaintAnimated();
CPaintBuffer::_PaintImmediate();
CPaintBuffer::_PaintTargetRect();
CPaintBuffer::_RedrawTargetWindow();
CPaintBuffer::_UpdateAnimation();
CPaintBuffer::_UpdateExisting();
CPaintBuffer::_WindowSizeMatch();
CPaintBuffer::`scalar deleting destructor'();
CPaintBufferAnimation::Create();
CPaintBufferAnimation::Destroy();
CPaintBufferAnimation::Initialize();
CPaintBufferAnimation::`scalar deleting destructor'();
CPaintBufferPool::BeginAnimation();
CPaintBufferPool::BufferedPaintRenderAnimation();
CPaintBufferPool::Impl::BeginAnimation();
CPaintBufferPool::Impl::BufferedPaintRenderAnimation();
CPaintBufferPool::Impl::End();
CPaintBufferPool::Impl::Optimize();
CPaintBufferPool::Impl::ResetPruneTimer();
CPaintBufferPool::Impl::StopAllAnimations();
CPaintBufferPool::Impl::StopConflicts();
CPaintBufferPool::Impl::StopPruneTimer();
CPaintBufferPool::Impl::`scalar deleting destructor'();
CPaintBufferPool::Impl::s_OnTimer();
CPaintBufferPool::Init();
CPaintBufferPool::PaintBufferAnimationTimerProc();
CPaintBufferPool::`scalar deleting destructor'();
CRefObj<CThemeMenuBar>::AddRef();
CRefObj<CThemeMenuBar>::Release();
CRefObj<CThemeMenuMetrics>::AddRef();
CRefObj<CThemeMenuMetrics>::Release();
CRefObj<CThemeMenuPopup>::AddRef();
CRefObj<CThemeMenuPopup>::Release();
CRenderCache::CRenderCache();
CRenderCache::FreeDisplayFontHandle();
CRenderCache::GetDisplayFontHandle();
CRenderCache::GetScaledFontHandle();
CRenderList::CRenderList();
CRenderList::CloseThemeHandle();
CRenderList::DeleteCheck();
CRenderList::FreeRenderObjects();
CRenderList::OpenRenderObject();
CRenderList::OpenThemeHandle();
CRenderList::~CRenderList();
CRenderObj::CRenderObj();
CRenderObj::CachePartObject<CDrawBase>();
CRenderObj::CachePartObject<CTextDraw>();
CRenderObj::CachePartObjects();
CRenderObj::CachePartObjects_TESTONLY();
CRenderObj::Create();
CRenderObj::ExpandPartObjectCache();
CRenderObj::ExternalGetBitmap();
CRenderObj::ExternalGetBool();
CRenderObj::ExternalGetColor();
CRenderObj::ExternalGetEnumValue();
CRenderObj::ExternalGetFont();
CRenderObj::ExternalGetInt();
CRenderObj::ExternalGetIntList();
CRenderObj::ExternalGetMargins();
CRenderObj::ExternalGetMetric();
CRenderObj::ExternalGetPosition();
CRenderObj::ExternalGetRect();
CRenderObj::ExternalGetStream();
CRenderObj::ExternalGetString();
CRenderObj::FindBaseClassPartObject<CDrawBase>();
CRenderObj::FindBaseClassPartObject<CTextDraw>();
CRenderObj::FindClassPartObject<CDrawBase>();
CRenderObj::FindClassPartObject<CTextDraw>();
CRenderObj::FixupPartObjectCache<CDrawBase>();
CRenderObj::FixupPartObjectCache<CTextDraw>();
CRenderObj::FreePartObjectCache();
CRenderObj::GetBitmapHeader();
CRenderObj::GetCacheObject();
CRenderObj::GetCachedDisplayFontHandle();
CRenderObj::GetEffectiveDpi();
CRenderObj::GetFontTableIndex();
CRenderObj::GetNextPartObject<CTextDraw>();
CRenderObj::GetPartObject<CDrawBase>();
CRenderObj::GetPartObject<CTextDraw>();
CRenderObj::GetPropertyOrigin();
CRenderObj::GetScaledFontHandle();
CRenderObj::GetTransitionDuration();
CRenderObj::GetValueIndex();
CRenderObj::Init_TESTONLY();
CRenderObj::PrepareAlphaBitmap_TESTONLY();
CRenderObj::PrepareRegionDataForScaling();
CRenderObj::_ColorizeAtlasSubImage();
CRenderObj::_ColorizeDwmAtlas();
CRenderObj::_GetAtlasHighContrastGlyph();
CRenderObj::_GetAtlasHighContrastImage();
CRenderObj::_IsDWMAtlas();
CRenderObj::`scalar deleting destructor'();
CRenderObj::~CRenderObj();
CRevertImpersonation::CRevertImpersonation();
CRevertImpersonation::`scalar deleting destructor'();
CRevertImpersonation::~CRevertImpersonation();
CRootSection::CRootSection();
CRootSection::GetRootSectionData();
CRootSection::SetDataSectionNames();
CRootSection::`scalar deleting destructor'();
CSaveClipRegion::Restore();
CSaveClipRegion::Save();
CSaveClipRegion::~CSaveClipRegion();
CSection::CreateSection();
CSection::OpenSection();
CSection::`scalar deleting destructor'();
CSection::~CSection();
CSetClipRect::CSetClipRect();
CSetClipRect::~CSetClipRect();
CShakeWnd::AddReference();
CShakeWnd::Attach();
CShakeWnd::CShakeWnd();
CShakeWnd::Detach();
CShakeWnd::FromHwnd();
CShakeWnd::FromHwndAddRef();
CShakeWnd::GetMsgProc();
CShakeWnd::HandleEscapeAction();
CShakeWnd::IsGoodAngle();
CShakeWnd::IsGoodLength();
CShakeWnd::IsGoodRatio();
CShakeWnd::MessageToShell();
CShakeWnd::ReleaseReference();
CShakeWnd::Shift();
CSimpleFile::Close();
CSimpleFile::Open();
CSineFadeAnimation::`scalar deleting destructor'();
CStateIdObjectCache::Expand<CDrawBase>();
CStateIdObjectCache::Expand<CTextDraw>();
CStateIdObjectCache::`scalar deleting destructor'();
CTextDraw::DrawTextW();
CTextDraw::GetTextExtent();
CTextDraw::GetTextMetricsW();
CTextDraw::KeyProperty();
CTextDraw::PackProperties();
CThemeApiHelper::CloseHandle();
CThemeApiHelper::OpenHandle();
CThemeArray<APPCLASSLOCAL,CThemeArrayEqualHelper<APPCLASSLOCAL> >::Add();
CThemeArray<APPCLASSLOCAL,CThemeArrayEqualHelper<APPCLASSLOCAL> >::RemoveAll();
CThemeArray<CDrawBase * __ptr64,CThemeArrayEqualHelper<CDrawBase * __ptr64> >::Add();
CThemeArray<CDrawBase * __ptr64,CThemeArrayEqualHelper<CDrawBase * __ptr64> >::RemoveAll();
CThemeArray<CPaintBuffer * __ptr64,CThemeArrayEqualHelper<CPaintBuffer * __ptr64> >::Add();
CThemeArray<CStateIdObjectCache * __ptr64,CThemeArrayEqualHelper<CStateIdObjectCache * __ptr64> >::RemoveAll();
CThemeArray<CTextDraw * __ptr64,CThemeArrayEqualHelper<CTextDraw * __ptr64> >::Add();
CThemeArray<CTextDraw * __ptr64,CThemeArrayEqualHelper<CTextDraw * __ptr64> >::RemoveAll();
CThemeArray<CWideString,CThemeArrayEqualHelper<CWideString> >::Add();
CThemeArray<CWideString,CThemeArrayEqualHelper<CWideString> >::RemoveAll();
CThemeArray<DIBDATA,CThemeArrayEqualHelper<DIBDATA> >::Add();
CThemeArray<HWND__ * __ptr64,CThemeArrayEqualHelper<HWND__ * __ptr64> >::Add();
CThemeArray<PART_STATE_INDEX,CThemeArrayEqualHelper<PART_STATE_INDEX> >::Add();
CThemeArray<RENDER_OBJ_ENTRY,CThemeArrayEqualHelper<RENDER_OBJ_ENTRY> >::Add();
CThemeArray<THEME_FILE_ENTRY,CThemeArrayEqualHelper<THEME_FILE_ENTRY> >::Add();
CThemeArray<VSENUMSYMBOL,CThemeArrayEqualHelper<VSENUMSYMBOL> >::Add();
CThemeArray<VSENUMSYMBOL,CThemeArrayEqualHelper<VSENUMSYMBOL> >::RemoveAll();
CThemeArray<VSSYMBOL,CThemeArrayEqualHelper<VSSYMBOL> >::Add();
CThemeArray<VSSYMBOL,CThemeArrayEqualHelper<VSSYMBOL> >::RemoveAll();
CThemeArray<_SYMBOLTOKENS,CThemeArrayEqualHelper<_SYMBOLTOKENS> >::Add();
CThemeArray<int,CThemeArrayEqualHelper<int> >::Add();
CThemeArray<int,CThemeArrayEqualHelper<int> >::RemoveAll();
CThemeArray<tagLOGFONTW,CThemeArrayEqualHelper<tagLOGFONTW> >::Add();
CThemeArray<unsigned long,CThemeArrayEqualHelper<unsigned long> >::Add();
CThemeArray<unsigned long,CThemeArrayEqualHelper<unsigned long> >::RemoveAll();
CThemeLoader::AddBaseClass();
CThemeLoader::AddData();
CThemeLoader::AddDataInternal();
CThemeLoader::AddIndex();
CThemeLoader::AddIndexInternal();
CThemeLoader::AddMissingParent();
CThemeLoader::AddToDIBDataArray();
CThemeLoader::AllocateThemeFileBytes();
CThemeLoader::CThemeLoader();
CThemeLoader::CopyClassGroup();
CThemeLoader::CopyDummyNonSharableDataToLive();
CThemeLoader::CopyLocalThemeToLive();
CThemeLoader::CopyNonSharableDataToLive();
CThemeLoader::CopyPartGroup();
CThemeLoader::CreateReuseSection();
CThemeLoader::EmitAndCopyBlock();
CThemeLoader::EmitEntryHdr();
CThemeLoader::EmitObject();
CThemeLoader::EmitString();
CThemeLoader::EndEntry();
CThemeLoader::FreeLocalTheme();
CThemeLoader::GetFontTableIndex();
CThemeLoader::GetNextDataIndex();
CThemeLoader::GetPartOffset();
CThemeLoader::GetScreenPpi();
CThemeLoader::IndexExists();
CThemeLoader::KeyDrawPropertyFound();
CThemeLoader::KeyTextPropertyFound();
CThemeLoader::LoadTheme();
CThemeLoader::LoadThemeForTesting();
CThemeLoader::MakeStockObject();
CThemeLoader::PackAndLoadTheme();
CThemeLoader::PackDrawObject();
CThemeLoader::PackDrawObjects();
CThemeLoader::PackImageFileInfo();
CThemeLoader::PackMetrics();
CThemeLoader::PackTextObject();
CThemeLoader::PackTextObjects();
CThemeLoader::~CThemeLoader();
CThemeMap<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::Add();
CThemeMap<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::Lookup();
CThemeMap<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::RemoveRange();
CThemeMap<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::RemoveVal();
CThemeMap<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HMENU__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::`scalar deleting destructor'();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::Add();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::Lookup();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::RemoveRange();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenu> > >::`scalar deleting destructor'();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics> > >::Add();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics> > >::Lookup();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics> > >::RemoveAll();
CThemeMap<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics>,CThemeMapEqualHelper<ThemeMapDpiKey<HWND__ * __ptr64>,CAutoRefPtr<CThemeMenuMetrics> > >::RemoveRange();
CThemeMap<int,CInternalNonclientMetrics * __ptr64,CThemeMapEqualHelper<int,CInternalNonclientMetrics * __ptr64> >::Add();
CThemeMap<int,CInternalNonclientMetrics * __ptr64,CThemeMapEqualHelper<int,CInternalNonclientMetrics * __ptr64> >::RemoveAll();
CThemeMap<int,_NCTHEMEMET * __ptr64,CThemeMapEqualHelper<int,_NCTHEMEMET * __ptr64> >::Add();
CThemeMap<int,_NCTHEMEMET * __ptr64,CThemeMapEqualHelper<int,_NCTHEMEMET * __ptr64> >::RemoveAll();
CThemeMap<void * __ptr64,CPaintBuffer * __ptr64,CThemeMapEqualHelper<void * __ptr64,CPaintBuffer * __ptr64> >::Add();
CThemeMap<void * __ptr64,CPaintBuffer * __ptr64,CThemeMapEqualHelper<void * __ptr64,CPaintBuffer * __ptr64> >::FindVal();
CThemeMap<void * __ptr64,CPaintBuffer * __ptr64,CThemeMapEqualHelper<void * __ptr64,CPaintBuffer * __ptr64> >::RemoveAll();
CThemeMap<void * __ptr64,CPaintBuffer * __ptr64,CThemeMapEqualHelper<void * __ptr64,CPaintBuffer * __ptr64> >::RemoveRange();
CThemeMap<void * __ptr64,CPaintBuffer * __ptr64,CThemeMapEqualHelper<void * __ptr64,CPaintBuffer * __ptr64> >::RemoveVal();
CThemeMemStream::AddRef();
CThemeMemStream::CThemeMemStream();
CThemeMemStream::Clear();
CThemeMemStream::Clone();
CThemeMemStream::Commit();
CThemeMemStream::CopyTo();
CThemeMemStream::LockRegion();
CThemeMemStream::QueryInterface();
CThemeMemStream::Read();
CThemeMemStream::Release();
CThemeMemStream::Revert();
CThemeMemStream::Seek();
CThemeMemStream::SetMaxSize();
CThemeMemStream::SetSize();
CThemeMemStream::Stat();
CThemeMemStream::UnlockRegion();
CThemeMemStream::Write();
CThemeMenu::Attach();
CThemeMenu::DrawItemBitmap();
CThemeMenu::DrawOwnerDrawnItem();
CThemeMenu::EnsureTheme();
CThemeMenu::Find();
CThemeMenu::FlushTheme();
CThemeMenu::IsThemeableMenu();
CThemeMenu::OnDraw();
CThemeMenu::OnDrawItem();
CThemeMenu::OnInit();
CThemeMenu::OnMeasureItem();
CThemeMenu::SizeFromBitmap();
CThemeMenu::StaticInitialize();
CThemeMenu::StaticTerminate();
CThemeMenu::ToOemPartId();
CThemeMenuBar::DrawClientArea();
CThemeMenuBar::DrawItem();
CThemeMenuBar::LayoutItem();
CThemeMenuBar::MeasureItem();
CThemeMenuMetrics::EnsureMetricsInitialized();
CThemeMenuMetrics::FindThemeMetrics();
CThemeMenuMetrics::Flush();
CThemeMenuMetrics::FlushAll();
CThemeMenuMetrics::Initialize();
CThemeMenuMetrics::Remove();
CThemeMenuPopup::DrawClientArea();
CThemeMenuPopup::DrawItem();
CThemeMenuPopup::DrawItemCheck();
CThemeMenuPopup::DrawNonClientArea();
CThemeMenuPopup::LayoutItem();
CThemeMenuPopup::MeasureItem();
CThemeMenuPopup::NormalizeWindowRects();
CThemeMenuPopup::OnDestroy();
CThemeMenuPopup::OnEraseBkgnd();
CThemeMenuPopup::OnNonClientCalcSize();
CThemeMenuPopup::OnNonClientPaint();
CThemeMenuPopup::SplitText();
CThemePNGDecoder::ConvertToDIB();
CThemePNGDecoder::_Init();
CThemePNGDecoder::~CThemePNGDecoder();
CThemeServices::ApplyTheme();
CThemeServices::CallThemeServer();
CThemeServices::Client_LoadGlobalTheme();
CThemeServices::ConnectedToService();
CThemeServices::GetCurrentChangeNumber();
CThemeServices::GetLoadId();
CThemeServices::InstallThemeHooks();
CThemeServices::IsSystemProcessContext();
CThemeServices::Process_LoaderEntry();
CThemeServices::ReestablishServerConnection();
CThemeServices::ReleaseConnection();
CThemeServices::SendAcquireOrAddTheme();
CThemeServices::SendProcessAssignSection();
CThemeServices::SendReleaseTheme();
CThemeServices::SendThemeChangedMsg();
CThemeServices::SetGlobalTheme();
CThemeServices::ThemeEnforcedByPolicy();
CThemeServices::ThemeHooksOn();
CThemeServices::UpdateThemeRegistry();
CThemeSignature::CalculateHash();
CThemeSignature::CreateKey();
CThemeSignature::ReadSignature();
CThemeSignature::Verify();
CThemeSignature::`scalar deleting destructor'();
CThemeSignature::~CThemeSignature();
CThemeWnd::AcquireFrameIcon();
CThemeWnd::AssignFrameRgn();
CThemeWnd::Attach();
CThemeWnd::CThemeWnd();
CThemeWnd::ChangeTheme();
CThemeWnd::CreateCompositeRgn();
CThemeWnd::Detach();
CThemeWnd::DetachAll();
CThemeWnd::EnableDwmNcRendering();
CThemeWnd::EvaluateStyle();
CThemeWnd::ExileDwmNcRendering();
CThemeWnd::ForwardCapturedMouseMessage();
CThemeWnd::ForwardMouseEvent();
CThemeWnd::FromHdcAddRef();
CThemeWnd::FromHwndAddRef();
CThemeWnd::GetCustomDrawing();
CThemeWnd::GetNcWindowMetrics();
CThemeWnd::GetTitleBarInfoEx();
CThemeWnd::IsCompositedFrame();
CThemeWnd::IsDwmNcRendering();
CThemeWnd::IsFrameThemed();
CThemeWnd::IsNcThemed();
CThemeWnd::LoadMdiBtns();
CThemeWnd::ModifyMDIMenubar();
CThemeWnd::NcBackgroundHitTest();
CThemeWnd::NcHitTest();
CThemeWnd::NcMouseLeave();
CThemeWnd::NcMouseMove();
CThemeWnd::NcPaint();
CThemeWnd::NcPaintCaption();
CThemeWnd::Reject();
CThemeWnd::Release();
CThemeWnd::RemoveFrameTheme();
CThemeWnd::ResetFrameRgn();
CThemeWnd::Revoke();
CThemeWnd::ScreenToWindow();
CThemeWnd::SetCustomDrawing();
CThemeWnd::SetFrameTheme();
CThemeWnd::ShouldNotMirror();
CThemeWnd::ShouldTrackFrameButton();
CThemeWnd::StyleChanged();
CThemeWnd::ThemeMDIMenuButtons();
CThemeWnd::TrackFrameButton();
CThemeWnd::TryAddRef();
CThemeWnd::UnloadMdiBtns();
CThemeWnd::_AcquireThemeHandle();
CThemeWnd::_AssignRgn();
CThemeWnd::_AttachInstance();
CThemeWnd::_CloseTheme();
CThemeWnd::_DetachInstance();
CThemeWnd::_Evaluate();
CThemeWnd::_EvaluateExclusions();
CThemeWnd::_FreeRegionHandles();
CThemeWnd::_GetThemeWndPropAndAddRef();
CThemeWnd::_ReleaseCustomFrameIcon();
CThemeWnd::_SetThemeWndProp();
CThemeWnd::`scalar deleting destructor'();
CThemeWnd::s_DetachDesktopWindowsCB();
CThreadObjectManager<CPaintBufferPool>::GetThreadObject();
CThreadObjectManager<CPaintBufferPool>::ThreadAddRef();
CThreadObjectManager<CPaintBufferPool>::_AllocTlsData();
CThreadObjectManager<CPaintBufferPool>::_FreeTlsData();
CThreadObjectManager<CPaintBufferPool>::_GetTlsData();
CTrackPartsObj::LogUsage();
CTransformSerializer::GetTransformActualSize();
CUxThemeFile::CUxThemeFile();
CUxThemeFile::ClearStockObjects();
CUxThemeFile::CloseFile();
CUxThemeFile::CreateFileW();
CUxThemeFile::DeleteStockBitmap();
CUxThemeFile::GetFontByIndex();
CUxThemeFile::GetGlobalTheme();
CUxThemeFile::OpenFromHandle();
CUxThemeFile::Unload();
CUxThemeFile::ValidateObj();
CUxThemeFile::ValidateThemeData();
CUxThemeFile::`scalar deleting destructor'();
CUxThemeFile::~CUxThemeFile();
CVSSymbolManager::AddSymbol();
CVSSymbolManager::AddSymbolsFromMemory();
CVSSymbolManager::AddSymbolsFromResourceDLL();
CVSSymbolManager::FindClass();
CVSSymbolManager::FindSymbol();
CVSSymbolManager::GetSymbolIndex();
CVSSymbolManager::GetVSSymbolName();
CVSSymbolManager::`scalar deleting destructor'();
CVSUnpack::EnumClassDataMap();
CVSUnpack::EnumRootMap();
CVSUnpack::GetClassData();
CVSUnpack::GetRootMap();
CVSUnpack::GetRootPropertyValue();
CVSUnpack::GetSubvariantInfo();
CVSUnpack::GetVariantMap();
CVSUnpack::Initialize();
CVSUnpack::LoadAnimationDataMap();
CVSUnpack::LoadBaseClassDataMap();
CVSUnpack::LoadClassDataMap();
CVSUnpack::LoadRootMap();
CVSUnpack::_AddScaledBackgroundDataRecord();
CVSUnpack::_AddVSDataRecord();
CVSUnpack::_CreateImageFromProperties();
CVSUnpack::_DelayRecord();
CVSUnpack::_EnsureBufferSize();
CVSUnpack::_ExpandVSRecordData();
CVSUnpack::_ExpandVSRecordForColor();
CVSUnpack::_ExpandVSRecordForMargins();
CVSUnpack::_FindClass();
CVSUnpack::_FindRootRecord();
CVSUnpack::_FindVSRecord();
CVSUnpack::_FindVariantClass();
CVSUnpack::_FixSymbolAndAddVSDataRecord();
CVSUnpack::_FlushDelayedPlateauRecords();
CVSUnpack::_FlushDelayedRecords();
CVSUnpack::_GetImagePropertiesForHC();
CVSUnpack::_GetPropertyValue();
CVSUnpack::_IsTrueSizeImage();
CVSUnpack::_SavePlateauRecord();
CVSUnpack::_SaveRecord();
CVSUnpack::`scalar deleting destructor'();
CVSUnpack::~CVSUnpack();
CWideString::Assign();
CWideString::CWideString();
CWideString::GetLength();
CWideString::_StringDup();
CWideString::`default constructor closure'();
CWideString::operator=();
CWideString::~CWideString();
CWindowFeedBackAnimation::CWindowFeedBackAnimation();
CWindowFeedBackAnimation::Finalize();
CWindowFeedBackAnimation::GetCurTime();
CWindowFeedBackAnimation::RestoreDisplacedWindow();
CWindowFeedBackAnimation::SlideWindow();
CWindowFeedBackAnimation::WindowSnapBackStart();
CWindowFeedBackAnimation::WindowSnapBackStop();
CWindowFeedBackAnimation::WindowSnapBackTimerProc();
CWindowFeedBackAnimation::`scalar deleting destructor'();
CheckThemeFileSignature();
ChildWinCallBack();
ClassicAdjustWindowRectEx();
ClassicGetSystemMetrics();
ClassicGetSystemMetricsForDpi();
ClassicSystemParametersInfoA();
ClassicSystemParametersInfoForDpi();
ClassicSystemParametersInfoW();
ClassicWndProc();
ClearDpiInfo();
ClearTheme();
CloseThemeData();
ColorizeAndComposeImages();
ColorizeGlyphByAlpha();
ColorizeGlyphByAlphaComposition();
ColorizeGlyphRectByAlpha();
ColorizeImageStripRect<_IMAGEPROPERTIES>();
ColorizeImageStripRect<unsigned long>();
CompareColorMapping();
CompositeOver();
Convert24to32BPP();
CreateScaledDDB();
CreateScaledTempBitmap();
CreateThemeDataFromObjects();
CreateUnscaledBitmap();
CreateVSSymbols();
DeleteCurrentUserThemeValue();
DesktopWinCallBack();
DestroyImageFileRes();
DllCanUnloadNow();
DllGetActivationFactory();
DllGetClassObject();
DllMain();
DoMsgDefault();
DpiInfo::Clear();
DpiInfo::DiscoverCurrentlyPresentPlateaus();
DpiInfo::ForceDpiInfoForTesting();
DpiInfo::RegisterConnectedDpi();
DrawGlow();
DrawGlowInternal();
DrawGradient();
DrawTextOverARGB();
DrawTextWithGlow();
DrawThemeBackground();
DrawThemeBackgroundEx();
DrawThemeEdge();
DrawThemeIcon();
DrawThemeIconEx();
DrawThemeParentBackground();
DrawThemeParentBackgroundEx();
DrawThemeText();
DrawThemeTextEx();
DumpLoadedThemeToTextFile();
ENTER_CLASSICSYSMETCALL();
EnableServiceConnection();
EnableThemeDialogTexture();
EnableTheming();
EndBufferedAnimation();
EndBufferedPaint();
EndPanningFeedback();
EnsureUxCtrlLoaded();
EnumDispProc();
EnumProcessWindows();
EnumThemeColors();
EnumThemeProperties();
EnumThemeSizes();
EnumThemes();
ExGetMenuItemInfo();
FillRectClr();
FindDdpHandler();
FindPaletteChunk();
FindTrackingGuid();
FixMarginOverlaps();
FlushMenuThemes();
FormatLocalMsg();
FreeThemeLibrary();
GenerateNonSharableData();
GetBelowAndAboveHuesFromTable();
GetBufferedPaintBits();
GetBufferedPaintBitsEx();
GetBufferedPaintDC();
GetBufferedPaintTargetDC();
GetBufferedPaintTargetRect();
GetClassFullName();
GetColorFromPreference();
GetColorPreferencePreset();
GetColorPreferencePresetCount();
GetCurrentExpressionId();
GetCurrentThemeName();
GetCurrentUserSid();
GetCurrentUserString();
GetCurrentUserThemeDWORD();
GetCurrentUserThemeInt();
GetCustomAccentLoadStatus();
GetCustomAccentPath();
GetCustomAccentTopRatio();
GetCustomColorSet();
GetDdpMsgMask();
GetDefaultColorPreference();
GetDialogColor();
GetDwpMsgMask();
GetGroupPolicyColors();
GetHCThemingStatus_VistaWin7();
GetHCThemingStatus_Win8();
GetImmersiveColorFromColorSetEx();
GetImmersiveColorNamedTypeByIndex();
GetImmersiveColorSetCount();
GetImmersiveColorTypeFromName();
GetImmersiveColorXamlInfoByIndex();
GetImmersiveDefaultColorSet();
GetImmersiveUserColorSetPreference();
GetInterpolatedAccentVariants();
GetIsImmersiveColorUsingHighContrast();
GetIsImmersiveExpression();
GetMirroringOptions();
GetNextVSRecord();
GetOwpMsgMask();
GetPropertySheetTextureFlags();
GetPtrToResource();
GetRelativeWeightsByDistance();
GetResourceOffset();
GetScreenDpi();
GetTextAlignFlags();
GetThemeAnimationProperty();
GetThemeAnimationTransform();
GetThemeAppProperties();
GetThemeBackgroundContentRect();
GetThemeBackgroundExtent();
GetThemeBackgroundRegion();
GetThemeBitmap();
GetThemeBool();
GetThemeClass();
GetThemeColor();
GetThemeDefaults();
GetThemeDocumentationProperty();
GetThemeEnumValue();
GetThemeFilename();
GetThemeFont();
GetThemeInt();
GetThemeIntList();
GetThemeMargins();
GetThemeMetric();
GetThemeNameId();
GetThemeParseErrorInfo();
GetThemePartSize();
GetThemePosition();
GetThemePrimitiveID();
GetThemePropertyOrigin();
GetThemeRect();
GetThemeSizeId();
GetThemeStream();
GetThemeString();
GetThemeSysBool();
GetThemeSysColor();
GetThemeSysColorBrush();
GetThemeSysFont();
GetThemeSysInt();
GetThemeSysSize();
GetThemeSysString();
GetThemeTextExtent();
GetThemeTextMetrics();
GetThemeTimingFunction();
GetThemeTransitionDuration();
GetUserColorPreference();
GetVSColorVariantInfo();
GetVSDocProperty();
GetVSInfo();
GetVSSizeVariantInfo();
GetWindowTheme();
GlobalsShutdown();
GlobalsStartup();
HandleGraysBlacksAndWhites();
HitTest9Grid();
HitTestRect();
HitTestTemplate();
HitTestThemeBackground();
HueShiftPalette();
HueShiftPalettizedPNG();
InitThemeMetrics();
InitializeImmersiveColorSetSharedMemory();
InlineIsEqualGUID();
InvalidateAppTheme();
InvalidateNcThemeMetrics();
IsAppThemed();
IsAppThemedInternal();
IsAutoColorizationEnabled();
IsCompositionActive();
IsCompositionActiveInternal();
IsContrastRatioAcceptable();
IsCurrentUserLocalSystem();
IsDarkModeAllowedForWindow();
IsDarkModeEnabledForApp();
IsHighContrastMode();
IsMenuPopup();
IsMirrored();
IsOS_OS_ANYSERVER();
IsOemBitmap();
IsScreenDC();
IsShakable();
IsSpace();
IsTargetProcess();
IsThemeActive();
IsThemeActiveByPolicy();
IsThemeBackgroundPartiallyTransparent();
IsThemeClassDefined();
IsThemeDialogTextureEnabled();
IsThemePartDefined();
IsValidShakeWindow();
IsWindowProcess();
LEAVE_CLASSICSYSMETCALL();
LOADTHEMEMETRICS::LOADTHEMEMETRICS();
LoadBoolRes();
LoadDiskStreamRes();
LoadFontRes();
LoadImageFileRes();
LoadIntRes();
LoadIntlistRes();
LoadMarginRes();
LoadPositionRes();
LoadRGBRes();
LoadRectRes();
LoadStreamRes();
LoadStringRes();
LoadThemeLibrary();
LoadUxCtrl();
LoadVSRecordData();
LoaderLoadTheme();
LoaderLoadThemeForTesting();
LogAITGuid();
MakeErrorLast();
MakeParseError();
MapAppNameToDarkMode();
MapEnumToSysColor();
Map_COMPOSEDIMAGEFILE_To_DIBDATA();
Map_COMPOSEDIMAGEFILE_To_Ordinal();
Map_IMAGEFILE_To_DIBDATA();
Map_IMAGEFILE_To_Ordinal();
Map_MINDPI_To_Ordinal();
Map_Ordinal_To_MINDPI();
Map_Ordinal_To_MINSIZE();
MatchThemeApp();
MatchThemeClass();
MatchThemeClassList();
McGenControlCallbackV2();
McGenEventRegister();
McGenEventUnregister();
McGenEventWrite();
McTemplateU0();
McTemplateU0dd();
McTemplateU0g();
McTemplateU0ll();
McTemplateU0z();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::ActivateInstance();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::AddRef();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetIids();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetRuntimeClassName();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::GetTrustLevel();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::QueryInterface();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::Release();
Microsoft::WRL::ActivationFactory<Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,0>::`scalar deleting destructor'();
Microsoft::WRL::ComPtr<IMarshal>::InternalRelease();
Microsoft::WRL::ComPtr<IUnknown>::InternalRelease();
Microsoft::WRL::ComPtr<WinRTAnimationVector>::InternalAddRef();
Microsoft::WRL::ComPtr<WinRTAnimationVector>::InternalRelease();
Microsoft::WRL::ComPtr<WinRTReferenceFloat>::Attach();
Microsoft::WRL::ComPtr<Windows::Foundation::IReference<float> >::InternalRelease();
Microsoft::WRL::ComPtr<Windows::UI::Core::AnimationMetrics::IPropertyAnimation>::ComPtr<Windows::UI::Core::AnimationMetrics::IPropertyAnimation>();
Microsoft::WRL::ComPtr<Windows::UI::Core::AnimationMetrics::IPropertyAnimation>::InternalRelease();
Microsoft::WRL::ComPtr<Windows::UI::Core::AnimationMetrics::IPropertyAnimation>::~ComPtr<Windows::UI::Core::AnimationMetrics::IPropertyAnimation>();
Microsoft::WRL::Details::CreateActivationFactory<AnimationDescriptionFactory>();
Microsoft::WRL::Details::CreateWeakReference();
Microsoft::WRL::Details::DefaultModule<1>::`scalar deleting destructor'();
Microsoft::WRL::Details::GetActivationFactory<1>();
Microsoft::WRL::Details::GetCacheEntry();
Microsoft::WRL::Details::GetClassObject<1>();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<13>,0,IActivationFactory,Windows::UI::Core::AnimationMetrics::IAnimationDescriptionFactory,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Microsoft::WRL::Details::ImplementsMarker<WinRTAnimationBase>,IWeakReferenceSource>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::FtmBase>::CanCastTo();
Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::CanCastTo();
Microsoft::WRL::Details::MakeAllocator<AnimationDescription>::~MakeAllocator<AnimationDescription>();
Microsoft::WRL::Details::MakeAllocator<AnimationDescriptionFactory>::~MakeAllocator<AnimationDescriptionFactory>();
Microsoft::WRL::Details::MakeAllocator<WinRTAnimationVector>::~MakeAllocator<WinRTAnimationVector>();
Microsoft::WRL::Details::MakeAllocator<WinRTOpacityAnimation>::~MakeAllocator<WinRTOpacityAnimation>();
Microsoft::WRL::Details::MakeAllocator<WinRTReferenceFloat>::~MakeAllocator<WinRTReferenceFloat>();
Microsoft::WRL::Details::MakeAllocator<WinRTScaleAnimation>::~MakeAllocator<WinRTScaleAnimation>();
Microsoft::WRL::Details::MakeAllocator<WinRTTranslationAnimation>::~MakeAllocator<WinRTTranslationAnimation>();
Microsoft::WRL::Details::MakeAndInitialize<AnimationDescription,Windows::UI::Core::AnimationMetrics::IAnimationDescription,enum Windows::UI::Core::AnimationMetrics::AnimationEffect & __ptr64,enum Windows::UI::Core::AnimationMetrics::AnimationEffectTarget & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<AnimationDescriptionFactory,AnimationDescriptionFactory>();
Microsoft::WRL::Details::MakeAndInitialize<WinRTAnimationVector,WinRTAnimationVector,unsigned long & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<WinRTOpacityAnimation,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,TA_TRANSFORM_OPACITY * __ptr64,TA_CUBIC_BEZIER * __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<WinRTReferenceFloat,Windows::Foundation::IReference<float>,float const & __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<WinRTScaleAnimation,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,TA_TRANSFORM_2D * __ptr64,TA_CUBIC_BEZIER * __ptr64>();
Microsoft::WRL::Details::MakeAndInitialize<WinRTTranslationAnimation,Windows::UI::Core::AnimationMetrics::IPropertyAnimation,TA_TRANSFORM_2D * __ptr64,TA_CUBIC_BEZIER * __ptr64>();
Microsoft::WRL::Details::ModuleBase::GetFirstEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetLastEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetLock();
Microsoft::WRL::Details::ModuleBase::GetMidEntryPointer();
Microsoft::WRL::Details::ModuleBase::GetObjectCount();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,WinRTAnimationBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::GetIids();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::GetRuntimeClassName();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::GetTrustLevel();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::GetWeakReference();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::Release();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::~RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::AddRef();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::QueryInterface();
Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>::Release();
Microsoft::WRL::Details::TerminateMap();
Microsoft::WRL::Details::WeakReferenceImpl::Resolve();
Microsoft::WRL::Details::WeakReferenceImpl::WeakReferenceImpl();
Microsoft::WRL::Details::WeakReferenceImpl::`scalar deleting destructor'();
Microsoft::WRL::FtmBase::CanCastTo();
Microsoft::WRL::FtmBase::DisconnectObject();
Microsoft::WRL::FtmBase::FtmBase();
Microsoft::WRL::FtmBase::GetMarshalSizeMax();
Microsoft::WRL::FtmBase::GetUnmarshalClass();
Microsoft::WRL::FtmBase::MarshalInterface();
Microsoft::WRL::FtmBase::ReleaseMarshalData();
Microsoft::WRL::FtmBase::UnmarshalInterface();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::DecrementObjectCount();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::IncrementObjectCount();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::RegisterCOMObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::RegisterWinRTObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::UnregisterCOMObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::UnregisterWinRTObject();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::`scalar deleting destructor'();
Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::~Module<1,Microsoft::WRL::Details::DefaultModule<1> >();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IOpacityAnimation>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase,Windows::UI::Core::AnimationMetrics::IScaleAnimation>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,WinRTAnimationBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::Collections::IIterator<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::Collections::IVectorView<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Windows::Foundation::Collections::IIterable<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::Foundation::IReference<float>,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<1>,Windows::UI::Core::AnimationMetrics::IAnimationDescription,Microsoft::WRL::FtmBase>::`scalar deleting destructor'();
Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>::`scalar deleting destructor'();
MinimumDisplayColorDepth();
MirrorRect();
MonoBoxBlur();
NcAllocWindowText();
NcCanClose();
NcComputeWindowStatus();
NcDrawCustomElements();
NcGetCaptionFont();
NcGetCaptionMargins();
NcGetCaptionTextRect();
NcGetFrameMetrics();
NcGetNonclientMetrics();
NcGetPluginRects();
NcGetWindowDPI();
NcGetWindowMetrics();
NcHitTestCustomElements();
NcPaintWindow_Find();
NewThemeCheck();
OEMAccentColors::GetColorChoices();
OnDdpCtlColor();
OnDdpPostCtlColor();
OnDdpPostInitDialog();
OnDdpPreUahInitMenu();
OnDdpPrint();
OnDwpContextMenu();
OnDwpGetTitleBarInfoEx();
OnDwpNcActivate();
OnDwpNcCalcsize();
OnDwpNcHitTest();
OnDwpNcLButtonDblClk();
OnDwpNcLButtonDown();
OnDwpNcLButtonUp();
OnDwpNcMouseLeave();
OnDwpNcMouseMove();
OnDwpNcPaint();
OnDwpNcRButtonDblClk();
OnDwpNcRButtonDown();
OnDwpNcRButtonUp();
OnDwpNcThemeDrawCaption();
OnDwpNcThemeDrawFrame();
OnDwpPrint();
OnDwpPrintClient();
OnDwpQuerySystemGestureStatus();
OnDwpSetIcon();
OnDwpSetText();
OnDwpStyleChanged();
OnDwpSysCommand();
OnDwpWindowPosChanged();
OnHooksDisabled();
OnOwpPostCreate();
OnOwpPostNcPaint();
OnOwpPostSettingChange();
OnOwpPostThemeChanged();
OnOwpPostWindowPosChanged();
OnOwpPreDrawItem();
OnOwpPreDwmCompositionChanged();
OnOwpPreDwmExileFrame();
OnOwpPreDwmNcRenderingChanged();
OnOwpPreEraseBkgnd();
OnOwpPreGetObject();
OnOwpPreMeasureItem();
OnOwpPreMenuChar();
OnOwpPreNcPaint();
OnOwpPrePaint();
OnOwpPreSizeMoveHandler();
OnOwpPreStyleChange();
OnOwpPreSysCommand();
OnOwpPreWindowPosChanged();
OnOwpPreWindowPosChanging();
OnPreExitSizeMoveShakeHandler();
OnPreWindowMovingShakeHandler();
OpenNcThemeData();
OpenNcThemeDataInternal();
OpenThemeData();
OpenThemeDataEx();
OpenThemeDataExInternal();
OpenThemeDataForDpi();
OpenThemeDataFromFile();
OpenThemeFileFromData();
OverrideColorCurrentUser();
PaintGradientRadialBand();
PaintGradientRadialRect();
PaintHorzGradient();
PaintVertGradient();
ParseIntegerToken();
ParseIntegerTokenList();
PersistSystemColors();
PickCorrectColor();
PixelPreMultSample();
PreMultiplyAlpha_TESTONLY();
PrintClientNotHandled();
ProcessShutDown();
ProcessStartUp();
Process_LoadTheme_RunDLLW();
PropagateVersion();
QueryThemeServices();
RefreshImmersiveColorPolicyState();
RefreshThemeForTS();
RegisterDefaultTheme();
RegistryIntRead();
RegistryIntWrite();
RegistryStrRead();
RegistryStrWriteExpand();
ReloadImmersiveExpression();
Remote_ReestablishServerConnection();
RemoveFromCompositeRgn();
ResetThemeAppCompatFlags();
ResultFromKnownLastError();
SHAlphaBlend();
SHRegGetDWORD();
SHRegGetUSDWORDW();
SafeSendMessage();
SafeStringCchCopyW();
SbFilterProcedure_UxthemeNamespace();
ScaleFontForScreenDpi();
ScaleLongValues();
ScaleMargins();
ScaleSizeForScreenDpi();
ScaleThemeFont();
ScaleThemeSize();
ScreenToWindowRect();
SendAcquireOrAddTheme();
SendReleaseTheme();
SetCurrentUserString();
SetCurrentUserThemeDWORD();
SetCurrentUserThemeInt();
SetCurrentUserThemeStringExpand();
SetDwmColorizationColor();
SetFont();
SetImmersiveColorPreferenceInSharedMemory();
SetImmersiveColorSetInSharedMemory();
SetImmersiveColorSetSharedMemoryACLforUser();
SetImmersiveUserColorSetPreferenceEx();
SetSystemMetrics();
SetSystemMetrics_Worker();
SetSystemMetrics_WorkerThread();
SetSystemVisualStyle();
SetThemeAppProperties();
SetToPreference();
SetUserColorPreference();
SetWindowTheme();
SetWindowThemeAttribute();
ShouldAddWindowToTray();
ShouldAppsUseDarkMode();
StaticNcThemeMetricsShutdown();
StringCchCatW();
StringCchCopyA();
StringCchCopyNW();
StringCchCopyW();
StringCchPrintfW();
StringCchVPrintfW();
StringCopyWorkerW();
StringVPrintfWorkerW();
ThemeBroadcastChangeProc();
ThemeDefWindowProcA();
ThemeDefWindowProcW();
ThemeDrawCaption();
ThemeDrawFrameControl();
ThemeEnableScrollInfoProc();
ThemeForwardCapturedMouseMessage();
ThemeGetScrollInfoProc();
ThemeGetSystemMetrics();
ThemeGetSystemMetricsForDpi();
ThemeHasPerWindowDPI();
ThemeHeapFree();
ThemeHeapReAlloc();
ThemeHookShutdown();
ThemeHookStartup();
ThemeInitApiHook();
ThemeMDIRedrawFrame();
ThemePostDefDlgProc();
ThemePostWndProc();
ThemePreDefDlgProc();
ThemePreWndProc();
ThemeSetScrollInfoProc();
ThemeSetWindowRgn();
ThemeString();
ThemeSystemParametersInfoA();
ThemeSystemParametersInfoForDpi();
ThemeSystemParametersInfoW();
ToDrawRect();
TopWinCallBack();
TraceLoggingRegisterEx();
TriggerCallback();
UnExpandEnvironmentString();
UnloadVSRecordData();
UpdatePanningFeedback();
UxCtrlStaticInitialize();
UxThemeTelemetry::DisableThemeForProcessTelemetryEvent();
UxThemeTelemetry::LogDarkModeClassLookup();
UxThemeTelemetry::LogDarkModeClassMatch();
UxThemeTelemetry::LogDefaultAppMode();
UxThemeTelemetry::LogDefaultAppModeChange();
UxThemeTelemetry::`scalar deleting destructor'();
VSENUMSYMBOL::`scalar deleting destructor'();
VSERRORCONTEXT::LogErrorMsg();
VSERRORCONTEXT::LogHResult();
VSERRORCONTEXT::_LogBasicInfo();
VSEnum();
VSLoad();
VSSYMBOL::VSSYMBOL();
VSSYMBOL::`scalar deleting destructor'();
WinRTAnimationBase::WinRTAnimationBase();
WinRTAnimationBase::get_Control1();
WinRTAnimationBase::get_Control2();
WinRTAnimationBase::get_Delay();
WinRTAnimationBase::get_Duration();
WinRTAnimationBase::get_Type();
WinRTAnimationVector::AddRef();
WinRTAnimationVector::First();
WinRTAnimationVector::GetAt();
WinRTAnimationVector::GetIids();
WinRTAnimationVector::GetMany();
WinRTAnimationVector::GetRuntimeClassName();
WinRTAnimationVector::GetTrustLevel();
WinRTAnimationVector::IndexOf();
WinRTAnimationVector::QueryInterface();
WinRTAnimationVector::Release();
WinRTAnimationVector::RuntimeClassInitialize();
WinRTAnimationVector::WinRTAnimationVector();
WinRTAnimationVector::`scalar deleting destructor'();
WinRTAnimationVector::get_Size();
WinRTAnimationVectorIterator::AddRef();
WinRTAnimationVectorIterator::GetIids();
WinRTAnimationVectorIterator::GetMany();
WinRTAnimationVectorIterator::GetRuntimeClassName();
WinRTAnimationVectorIterator::GetTrustLevel();
WinRTAnimationVectorIterator::MoveNext();
WinRTAnimationVectorIterator::QueryInterface();
WinRTAnimationVectorIterator::Release();
WinRTAnimationVectorIterator::WinRTAnimationVectorIterator();
WinRTAnimationVectorIterator::`scalar deleting destructor'();
WinRTAnimationVectorIterator::get_Current();
WinRTAnimationVectorIterator::get_HasCurrent();
WinRTOpacityAnimation::AddRef();
WinRTOpacityAnimation::GetIids();
WinRTOpacityAnimation::GetRuntimeClassName();
WinRTOpacityAnimation::GetTrustLevel();
WinRTOpacityAnimation::QueryInterface();
WinRTOpacityAnimation::Release();
WinRTOpacityAnimation::RuntimeClassInitialize();
WinRTOpacityAnimation::WinRTOpacityAnimation();
WinRTOpacityAnimation::`scalar deleting destructor'();
WinRTOpacityAnimation::get_FinalOpacity();
WinRTOpacityAnimation::get_InitialOpacity();
WinRTReferenceFloat::AddRef();
WinRTReferenceFloat::GetIids();
WinRTReferenceFloat::GetRuntimeClassName();
WinRTReferenceFloat::GetTrustLevel();
WinRTReferenceFloat::QueryInterface();
WinRTReferenceFloat::Release();
WinRTReferenceFloat::WinRTReferenceFloat();
WinRTReferenceFloat::`scalar deleting destructor'();
WinRTReferenceFloat::get_Value();
WinRTScaleAnimation::AddRef();
WinRTScaleAnimation::GetIids();
WinRTScaleAnimation::GetRuntimeClassName();
WinRTScaleAnimation::GetTrustLevel();
WinRTScaleAnimation::QueryInterface();
WinRTScaleAnimation::Release();
WinRTScaleAnimation::RuntimeClassInitialize();
WinRTScaleAnimation::WinRTScaleAnimation();
WinRTScaleAnimation::`scalar deleting destructor'();
WinRTScaleAnimation::get_FinalScaleX();
WinRTScaleAnimation::get_FinalScaleY();
WinRTScaleAnimation::get_InitialScaleX();
WinRTScaleAnimation::get_InitialScaleY();
WinRTScaleAnimation::get_NormalizedOrigin();
WinRTTranslationAnimation::AddRef();
WinRTTranslationAnimation::GetIids();
WinRTTranslationAnimation::GetRuntimeClassName();
WinRTTranslationAnimation::GetTrustLevel();
WinRTTranslationAnimation::QueryInterface();
WinRTTranslationAnimation::Release();
WinRTTranslationAnimation::WinRTTranslationAnimation();
WinRTTranslationAnimation::`scalar deleting destructor'();
WindowSnapBackTimerProc();
Windows::Foundation::Collections::Detail::_Cleanup<Windows::UI::Core::AnimationMetrics::IPropertyAnimation,unsigned int>();
Windows::Foundation::Collections::Detail::_IteratorGetMany<Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64,1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>();
Windows::Foundation::Collections::Detail::_VectorGetMany<Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64,1>,Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64>();
Windows::Foundation::Collections::IIterator_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64,1>::GetMany();
Windows::Foundation::Collections::IVectorView_impl<Windows::UI::Core::AnimationMetrics::IPropertyAnimation * __ptr64,1>::GetMany();
Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::Concat();
Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::_EnsureCapacity();
Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::_EnsureCount();
Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::_Free();
XcptFilter();
_AllocateRecordPlusData();
_AnsiToUnicodeN();
_AppendFontResComment();
_BeginPanningFeedback();
_BitmapFromDib();
_BlendColors();
_BorderRect();
_CRT_INIT();
_C_specific_handler();
_CalculateLuminosity();
_ClassicDWP();
_ClassicNcPaint();
_ColorHLSToRGB();
_ColorRGBToHLS();
_ComputeNcPartTransparency();
_ConvertRGBValueToLinearizedValue();
_ConvertToOpaqueIcon();
_CxxFrameHandler3();
_DllMainCRTStartup();
_DrawEdge();
_DrawWindowEdges();
_DupRgn();
_EnumThemePropertiesCB();
_FillBufferedBitmap();
_FindMDIClient();
_FindPESection();
_FindPrimitive();
_FormatParseMessage();
_FreshenThemeMetricsCB();
_GenerateEmptySection();
_GetBrushesForPart();
_GetClassicNcBtnMetrics();
_GetClassicNcWindowMetrics();
_GetMaximizedContainer();
_GetNcBtnHitTestRect();
_GetNcBtnMetrics();
_GetNcCaptionTextSize();
_GetNcThemeMetrics();
_GetThemeParseErrorInfo();
_GetWindowIcon();
_GetWindowMonitorRect();
_HSL_to_RGB();
_HitTestRectBottom();
_HitTestRectBottomLeft();
_HitTestRectBottomRight();
_HitTestRectCorner();
_HitTestRectLeft();
_HitTestRectRight();
_HitTestRectTop();
_HitTestRectTopLeft();
_HitTestRectTopRight();
_HitTestResizingRect();
_HitTestResizingTemplate();
_HueToRGB();
_InPlaceUnionRect();
_InitThemeMsg();
_Init_thread_footer();
_Init_thread_header();
_InternalSystemParametersInfo();
_IsFullMaximized();
_IsMessageWindow();
_IsNcPartTransparent();
_IsNonwritableInCurrentImage();
_IsNonwritableInCurrentImage$filt$0();
_IsProcessOnInteractiveWindowStation();
_IsUserParam();
_IsWin16App();
_LoadNcThemeMetrics();
_LoadStringRes();
_MDIChildUpdateParent();
_MDIClientUpdateChildren();
_MDIGetActive();
_MDIUpdate();
_MakeBitmapQpaque();
_NCWNDMET::GetCaptionColor();
_OpenThemeData();
_OpenThemeDataFromFile();
_ParseBool();
_ParseClassName();
_ParseFloatList();
_ParseFont();
_ParseIntlist();
_ParseStringToken();
_PixelsToRgn();
_PreprocessThemeChanged();
_RGBFromHue();
_RGB_to_HSL();
_ReadVSVariant();
_ScaleRectsAndCreateRegion();
_SetDirtyRectsCB();
_ShouldAssignFrameRgn();
_StrictPtInRect();
_TerminateSection();
_ThemeDefWindowProc();
_TlgCreateSz();
_TlgCreateWsz();
_TlgEnableCallback();
_TlgKeywordOn();
_TlgWrite();
_ValidateImageBase();
_WindowPosChangedWorker();
__DllMainCRTStartup();
__DllMainCRTStartup$filt$0();
__DllMainCRTStartup$filt$1();
__DllMainCRTStartup$filt$2();
__DllMainCRTStartup$filt$3();
__DllMainCRTStartup$filt$4();
__DllMainCRTStartup$filt$5();
__DllMainCRTStartup$filt$6();
__DllMainCRTStartup$filt$7();
__DllMainCRTStartup$fin$8();
__GSHandlerCheck();
__GSHandlerCheckCommon();
__GSHandlerCheck_SEH();
__chkstk();
__delayLoadHelper2();
__raise_securityfailure();
__report_gsfailure();
__security_check_cookie();
__security_init_cookie();
__std_terminate();
_dllonexit();
_guard_check_icall_nop();
_guard_dispatch_icall_nop();
_imp_load_CoCreateFreeThreadedMarshaler();
_imp_load_CoTaskMemAlloc();
_imp_load_CoTaskMemFree();
_imp_load_CoTaskMemRealloc();
_imp_load_ConvertSidToStringSidW();
_imp_load_ConvertStringSecurityDescriptorToSecurityDescriptorW();
_imp_load_CryptAcquireContextW();
_imp_load_CryptCreateHash();
_imp_load_CryptDestroyHash();
_imp_load_CryptDestroyKey();
_imp_load_CryptHashData();
_imp_load_CryptImportKey();
_imp_load_CryptReleaseContext();
_imp_load_CryptVerifySignatureW();
_imp_load_DwmDefWindowProc();
_imp_load_DwmExtendFrameIntoClientArea();
_imp_load_DwmGetWindowAttribute();
_imp_load_DwmIsCompositionEnabled();
_imp_load_DwmSetWindowAttribute();
_imp_load_DwmpGetColorizationParameters();
_imp_load_DwmpResetColorizationParameters();
_imp_load_DwmpSetColorizationParameters();
_imp_load_WICCreateImagingFactory_Proxy();
_imp_load_WindowsCreateString();
_imp_load_WindowsGetStringRawBuffer();
_imp_load_WindowsIsStringEmpty();
_imp_load_WindowsStringHasEmbeddedNull();
_onexit();
_onexit$fin$0();
_tailMerge_api_ms_win_core_com_l1_1_0_dll();
_tailMerge_api_ms_win_core_winrt_string_l1_1_0_dll();
_tailMerge_api_ms_win_security_sddl_l1_1_0_dll();
_tailMerge_cryptsp_dll();
_tailMerge_dwmapi_dll();
_tailMerge_windowscodecs_dll();
`CFeedBackManager::BeginPanningFeedback'::`1'::dtor$0();
`Microsoft::WRL::Module<1,Microsoft::WRL::Details::DefaultModule<1> >::Create'::`2'::`dynamic atexit destructor for 'moduleSingleton''();
`_BeginPanningFeedback'::`1'::dtor$0();
`dynamic atexit destructor for 'g_DpiInfo''();
`dynamic atexit destructor for 's_incmCache''();
`dynamic atexit destructor for 's_nctmCache''();
`dynamic initializer for 'CShakeWnd::_st''();
`dynamic initializer for 'CWindowFeedBackAnimation::c_YHigh''();
`dynamic initializer for 'CWindowFeedBackAnimation::c_YLow''();
`dynamic initializer for 'g_DpiInfo''();
`dynamic initializer for 'g_cpDefaultColorPreference''();
`dynamic initializer for 'g_cpDefaultServerColorPreference''();
`dynamic initializer for 'g_header_init_StagingEventsInitialize''();
`dynamic initializer for 's_incmCache''();
`dynamic initializer for 's_nctmCache''();
`operator new'::`1'::catch$0();
`vector constructor iterator'();
`vector destructor iterator'();
amsg_exit();
atan();
atexit();
cos();
floor();
fmodf();
initterm();
lock();
memcmp();
memcpy();
memmove();
memset();
operator delete();
operator new();
operator new[]();
pow();
pre_c_init();
purecall();
sqrt();
string2number();
unlock();
wcschr();
wil::Feature<__WilFeatureTraits_Feature_EnableAnimationDesigner>::GetCachedFeatureEnabledState();
wil::Feature<__WilFeatureTraits_Feature_EnableAnimationDesigner>::GetCurrentFeatureEnabledState();
wil::Feature<__WilFeatureTraits_Feature_EnableAnimationDesigner>::ReportUsageToService();
wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme>::GetCachedFeatureEnabledState();
wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme>::GetCurrentFeatureEnabledState();
wil::Feature<__WilFeatureTraits_Feature_FileExplorerDarkTheme>::ReportUsageToService();
wil::GetFailureLogString();
wil::ProcessShutdownInProgress();
wil::RethrowCaughtException();
wil::TraceLoggingProvider::Initialize();
wil::TraceLoggingProvider::NotifyFailure();
wil::TraceLoggingProvider::OnErrorReported();
wil::TraceLoggingProvider::Register();
wil::TraceLoggingProvider::ReportTelemetryFailure();
wil::TraceLoggingProvider::ReportTraceLoggingFailure();
wil::TraceLoggingProvider::`scalar deleting destructor'();
wil::TraceLoggingProvider::~TraceLoggingProvider();
wil::details::CloseHandle();
wil::details::DebugBreak();
wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy();
wil::details::EnabledStateManager::EnsureSubscribedToUsageFlush();
wil::details::EnabledStateManager::OnStateChange();
wil::details::EnabledStateManager::OnTimer();
wil::details::EnabledStateManager::QueueBackgroundUsageReporting();
wil::details::EnabledStateManager::RecordCachedUsageUnderLock();
wil::details::EnabledStateManager::SubscribeFeaturePropertyCacheToEnabledStateChanges();
wil::details::EnabledStateManager::`scalar deleting destructor'();
wil::details::EnsureCoalescedTimer_SetTimer();
wil::details::FeatureLogging::`scalar deleting destructor'();
wil::details::FeatureLoggingHook();
wil::details::FeatureStateManager::EnsureStateData();
wil::details::FeatureStateManager::EnsureSubscribedToProcessWideUsageFlushUnderLock();
wil::details::FeatureStateManager::EnsureSubscribedToStateChangesUnderLock();
wil::details::FeatureStateManager::QueueBackgroundSRUMUsageReporting();
wil::details::FeatureStateManager::RecordFeatureError();
wil::details::FeatureStateManager::RecordFeatureUsage();
wil::details::FeatureStateManager::SubscribeToEnabledStateChanges();
wil::details::FeatureStateManager::SubscribeToUsageFlush();
wil::details::FeatureStateManager::~FeatureStateManager();
wil::details::FreeProcessHeap();
wil::details::GetContextAndNotifyFailure();
wil::details::GetCurrentModuleName();
wil::details::GetLastErrorFail();
wil::details::GetLastErrorFailHr();
wil::details::GetModuleInformation();
wil::details::IsFeatureConfigured();
wil::details::LogFailure();
wil::details::LogStringPrintf();
wil::details::NtStatusToHr();
wil::details::RecordException();
wil::details::RecordFailFast();
wil::details::RecordFeatureUsageCallback();
wil::details::RecordLog();
wil::details::RecordReturn();
wil::details::RecordSRUMFeatureUsage();
wil::details::ReleaseMutex();
wil::details::ReportFailure();
wil::details::ReportFailure_GetLastError();
wil::details::ReportFailure_GetLastErrorHr();
wil::details::ReportFailure_Hr();
wil::details::ReportFailure_Win32();
wil::details::ResultStringSize();
wil::details::RtlDllShutdownInProgress();
wil::details::RtlNtStatusToDosErrorNoTeb();
wil::details::ThreadFailureCallbackHolder::GetContextAndNotifyFailure();
wil::details::ThreadFailureCallbackHolder::GetThreadContext();
wil::details::WilApiImpl_GetFeatureEnabledState();
wil::details::WilApiImpl_RecordFeatureError();
wil::details::WilApiImpl_RecordFeatureUsage();
wil::details::WilApiImpl_SubscribeFeatureStateChangeNotification();
wil::details::WilApiImpl_UnsubscribeFeatureStateChangeNotification();
wil::details::WilApi_RecordFeatureUsage();
wil::details::WilApi_UnsubscribeFeatureStateChangeNotification();
wil::details::WilDynamicLoadRaiseFailFastException();
wil::details::WilFailFast();
wil::details::WilRaiseFailFastException();
wil::details::WriteResultString<char const * __ptr64>();
wil::details::WriteResultString<unsigned short const * __ptr64>();
wil::details::`dynamic atexit destructor for 'g_enabledStateManager''();
wil::details::`dynamic atexit destructor for 'g_featureStateManager''();
wil::details::`dynamic atexit destructor for 'g_processLocalData''();
wil::details::`dynamic atexit destructor for 'g_threadFailureCallbacks''();
wil::details::`dynamic initializer for 'g_enabledStateManager''();
wil::details::`dynamic initializer for 'g_featureStateManager''();
wil::details::`dynamic initializer for 'g_header_init_InitializeResultHeader''();
wil::details::`dynamic initializer for 'g_header_init_InitializeStagingHeaderInternalApi''();
wil::details::`dynamic initializer for 'g_header_init_InitializeStagingSRUMFeatureReporting''();
wil::details::`dynamic initializer for 'g_header_init_WilInitialize_ResultMacros_DesktopOrSystem''();
wil::details::`dynamic initializer for 'g_processLocalData''();
wil::details::`dynamic initializer for 'g_threadFailureCallbacks''();
wil::details::in1diag3::FailFast_Unexpected();
wil::details::in1diag3::Return_GetLastError();
wil::details::in1diag3::Return_Hr();
wil::details::in1diag3::Return_Win32();
wil::details::in1diag3::_FailFastImmediate_Unexpected();
wil::details::in1diag3::_FailFast_GetLastError();
wil::details::in1diag3::_FailFast_Unexpected();
wil::details::in1diag3::_Log_Hr();
wil::details::in1diag3::_Log_Win32();
wil::details::resource_policy<__WIL__WNF_USER_SUBSCRIPTION * __ptr64,void (__cdecl*)(__WIL__WNF_USER_SUBSCRIPTION * __ptr64),&wil::details::UnsubscribeWilWnf,wistd::integral_constant<unsigned __int64,0>,__WIL__WNF_USER_SUBSCRIPTION * __ptr64,0,std::nullptr_t>::close_reset();
wil::details::static_lazy<UxThemeTelemetry>::cleanup();
wil::details::static_lazy<UxThemeTelemetry>::get();
wil::details::static_lazy<wil::details::FeatureLogging>::get();
wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER * __ptr64,void (__cdecl*)(_TP_TIMER * __ptr64),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER * __ptr64,0,std::nullptr_t> >::reset();
wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void * __ptr64,0,std::nullptr_t> >::reset();
wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void * __ptr64,0,std::nullptr_t> >::reset();
wil::details_abi::FeatureStateData::ProcessShutdown();
wil::details_abi::FeatureStateData::RecordFeatureError();
wil::details_abi::FeatureStateData::RecordFeatureUsage();
wil::details_abi::FeatureStateData::RecordUsage();
wil::details_abi::FeatureStateData::RetrieveUsageUnderLock();
wil::details_abi::GetThreadLocalDataCache();
wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>::GetShared();
wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>::~ProcessLocalStorage<wil::details_abi::ProcessLocalData>();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::Acquire();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::MakeAndInitialize();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::ProcessLocalStorageData<wil::details_abi::FeatureStateData>();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::Release();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>::`scalar deleting destructor'();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::Acquire();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::MakeAndInitialize();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::Release();
wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>::~ProcessLocalStorageData<wil::details_abi::ProcessLocalData>();
wil::details_abi::RawUsageIndex::FindInsertionPointOrIncrement();
wil::details_abi::RawUsageIndex::Iterate();
wil::details_abi::RawUsageIndex::LowerBound();
wil::details_abi::RawUsageIndex::RawUsageIndex();
wil::details_abi::RawUsageIndex::RecordUsage();
wil::details_abi::RawUsageIndex::RecordUsageInternal();
wil::details_abi::RawUsageIndex::SetBuffer();
wil::details_abi::RawUsageIndex::Swap();
wil::details_abi::RecordWnfUsageIndex();
wil::details_abi::SemaphoreValue::CreateFromValueInternal();
wil::details_abi::SemaphoreValue::Destroy();
wil::details_abi::SemaphoreValue::GetValueFromSemaphore();
wil::details_abi::SemaphoreValue::TryGetPointer();
wil::details_abi::SemaphoreValue::TryGetValueInternal();
wil::details_abi::SerializedFailure::Serialize();
wil::details_abi::SubscriptionList::OnSignaled();
wil::details_abi::SubscriptionList::SubscribeUnderLock();
wil::details_abi::SubscriptionList::SubscriptionList();
wil::details_abi::SubscriptionList::Unsubscribe();
wil::details_abi::ThreadLocalData::Clear();
wil::details_abi::ThreadLocalData::SetLastError();
wil::details_abi::ThreadLocalFailureInfo::Set();
wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder * __ptr64>::~ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder * __ptr64>();
wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::GetLocal();
wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0>::RecordUsage();
wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2>::RecordUsage();
wil::details_abi::UsageIndexProperty::AddToCount();
wil::details_abi::UsageIndexProperty::Compare();
wil::details_abi::UsageIndexProperty::GetSize();
wil::details_abi::UsageIndexProperty::Read();
wil::details_abi::UsageIndexProperty::UpdateCount();
wil::details_abi::UsageIndexProperty::Write();
wil::details_abi::UsageIndexes::Record();
wil::details_abi::UsageIndexes::UsageIndexes();
wil::details_abi::UsageIndexes::~UsageIndexes();
wil::details_abi::heap_buffer::ensure();
wil::details_abi::heap_buffer::push_back();
wil::details_abi::heap_buffer::reserve();
wil::manually_managed_shutdown_aware_object<wil::details::EnabledStateManager>::Construct();
wil::manually_managed_shutdown_aware_object<wil::details::EnabledStateManager>::Destroy();
wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>::Construct();
wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>::Destroy();
wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void * __ptr64,void (__cdecl*)(void * __ptr64),&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void * __ptr64,0,std::nullptr_t> >,wil::err_returncode_policy>::acquire();
wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short * __ptr64,void (__cdecl*)(void * __ptr64),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short * __ptr64,0,std::nullptr_t> > >::~unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short * __ptr64,void (__cdecl*)(void * __ptr64),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short * __ptr64,0,std::nullptr_t> > >();
wil_QueryFeatureState();
wil_details_FeaturePropertyCache_ReportUsageToService();
wil_details_FeaturePropertyCache_ReportUsageToServiceDirect();
wil_details_GetNtDllModuleHandle();
wil_details_ModifyFeatureData();
wil_details_NtQueryWnfStateData();
wil_details_NtUpdateWnfStateData();
wil_details_RecordUsageInPropertyCache();
wil_details_RtlSubscribeWnfStateChangeNotification();
wil_details_SetEnabledAndHasNotificationStateCallback();
wil_details_SetHasNotificationStateCallback();
wil_details_SetPropertyCacheOpportunityCallback();
wil_details_SetPropertyCacheUsageCallback();
wil_details_SetPropertyFlagCallback();
wil_details_StagingConfigFeature_HasUniqueState();
wil_details_StagingConfig_AreAnyFeaturesConfigured();
wil_details_StagingConfig_FireNotification();
wil_details_StagingConfig_Load();
wil_details_StagingConfig_QueryFeatureState();
wil_details_WriteSRUMWnfUsageBuffer();
wistd::_Func_base<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`scalar deleting destructor'();
wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Tidy();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Copy();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Delete_this();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Do_call();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Get();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::_Move();
wistd::_Func_impl<wistd::_Callable_obj<<lambda_2f784ef15c303f2c8d3bec493a729414>,0>,wistd::details::function_allocator<wistd::_Func_class<bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil> >,bool,void * __ptr64,unsigned __int64,void * __ptr64,unsigned __int64,unsigned int,wistd::_Nil,wistd::_Nil>::`scalar deleting destructor'();
wistd::swap_wil<wil::details_abi::heap_buffer>();
wistd::unique_ptr<void,wil::process_heap_deleter>::operator=();
wtof();
